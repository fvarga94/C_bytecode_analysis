setup_section	SWITCH,0:ELSE,7:DO,0:functions,0:WHILE,0:FOR,0:IF,22:CALL,25	368
0x4001a90	            0x4157	                                push r15	      3664	objcopy.c	FUNCTION_45
0x4001a92	            0x4156	                                push r14	      3664	objcopy.c	FUNCTION_45
0x4001a94	            0x4155	                                push r13	      3664	objcopy.c	FUNCTION_45
0x4001a96	            0x4154	                                push r12	      3664	objcopy.c	FUNCTION_45
0x4001a98	          0x4989d5	                            mov r13, rdx	      3664	objcopy.c	FUNCTION_45
0x4001a9b	              0x55	                                push rbp	      3664	objcopy.c	FUNCTION_45
0x4001a9c	              0x53	                                push rbx	      3664	objcopy.c	FUNCTION_45
0x4001a9d	          0x4989f4	                            mov r12, rsi	      3664	objcopy.c	FUNCTION_45
0x4001aa0	        0x4883ec28	                           sub rsp, 0x28	      3664	objcopy.c	FUNCTION_45
0x4001aa4	      0x48897c2408	                mov qword [rsp + 8], rdi	      3664	objcopy.c	FUNCTION_45
0x4001aa9	          0x4889f7	                            mov rdi, rsi	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001aac	      0xe8cff5ffff	       call sym.is_strip_section.isra.17	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001ab1	            0x85c0	                           test eax, eax	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001ab3	            0x7413	                            je 0x4001ac8	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001ab5	        0x4883c428	                           add rsp, 0x28	      3830	objcopy.c	FUNCTION_45
0x4001ab9	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x4001aba	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x4001abb	            0x415c	                                 pop r12	      3830	objcopy.c	FUNCTION_45
0x4001abd	            0x415d	                                 pop r13	      3830	objcopy.c	FUNCTION_45
0x4001abf	            0x415e	                                 pop r14	      3830	objcopy.c	FUNCTION_45
0x4001ac1	            0x415f	                                 pop r15	      3830	objcopy.c	FUNCTION_45
0x4001ac3	              0xc3	                                     ret	      3830	objcopy.c	FUNCTION_45
0x4001ac4	         0xf1f4000	                         nop dword [rax]	      3830	objcopy.c	FUNCTION_45
0x4001ac8	    0x488b2d000000	            mov rbp, qword [0x04001acf] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001acf	        0x498b1c24	                    mov rbx, qword [r12]	      3681	objcopy.c	FUNCTION_45
0x4001ad3	      0x458b7c2420	           mov r15d, dword [r12 + 0x20] 	      3682	objcopy.c	FUNCTION_45
0x4001ad8	          0x4885ed	                           test rbp, rbp	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001adb	            0x7518	                           jne 0x4001af5	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001add	      0xe95e020000	                           jmp 0x4001d40	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001ae2	    0x660f1f440000	                    nop word [rax + rax]	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001ae8	        0x488b6d18	            mov rbp, qword [rbp + 0x18] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001aec	          0x4885ed	                           test rbp, rbp	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001aef	     0xf844b020000	                            je 0x4001d40	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001af5	        0x488b7d00	                    mov rdi, qword [rbp]	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001af9	          0x4889de	                            mov rsi, rbx	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001afc	      0xe800000000	                          call 0x4001b01	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001b01	            0x85c0	                           test eax, eax	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001b03	            0x75e3	                           jne 0x4001ae8	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001b05	        0x448b7510	           mov r14d, dword [rbp + 0x10] 	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4001b09	        0x488b6d08	                mov rbp, qword [rbp + 8]	      3633	objcopy.c	FUNCTION_43	FOR_1	IF_1
0x4001b0d	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3682	objcopy.c	FUNCTION_45
0x4001b11	        0x450f44f7	                        cmove r14d, r15d	      3682	objcopy.c	FUNCTION_45
0x4001b15	    0x488b35000000	            mov rsi, qword [0x04001b1c] 	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001b1c	          0x4885f6	                           test rsi, rsi	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001b1f	            0x7406	                            je 0x4001b27	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001b21	        0x4183e701	                             and r15d, 1	      3687	objcopy.c	FUNCTION_45	IF_2
0x4001b25	            0x7510	                           jne 0x4001b37	      3687	objcopy.c	FUNCTION_45	IF_2
0x4001b27	    0x488b35000000	            mov rsi, qword [0x04001b2e] 	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4001b2e	          0x4885f6	                           test rsi, rsi	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4001b31	     0xf84c7040000	                            je 0x4001ffe	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4001b37	          0x4889f7	                            mov rdi, rsi	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b3a	      0x4889742418	             mov qword [rsp + 0x18], rsi	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b3f	      0xe800000000	                          call 0x4001b44	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b44	          0x4889ef	                            mov rdi, rbp	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b47	          0x4889c3	                            mov rbx, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b4a	      0xe800000000	                          call 0x4001b4f	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b4f	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b54	      0xe800000000	                          call 0x4001b59	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b59	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       110	string3.h	FUNCTION_70	CALL_3
0x4001b5e	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_70	CALL_3
0x4001b61	      0x4889442410	             mov qword [rsp + 0x10], rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b66	      0xe800000000	                          call 0x4001b6b	       110	string3.h	FUNCTION_70	CALL_3
0x4001b6b	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_74	CALL_3
0x4001b6e	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_74	CALL_3
0x4001b71	      0xe800000000	                          call 0x4001b76	       148	string3.h	FUNCTION_74	CALL_3
0x4001b76	        0x498b1c24	                    mov rbx, qword [r12]	       148	string3.h	FUNCTION_74	CALL_3
0x4001b7a	    0x4c8b3d000000	            mov r15, qword [0x04001b81] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b81	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b84	            0x7455	                            je 0x4001bdb	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b86	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b88	            0xeb27	                           jmp 0x4001bb1	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b8a	    0x660f1f440000	                    nop word [rax + rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b90	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001b92	          0x4889de	                            mov rsi, rbx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001b95	      0xe800000000	                          call 0x4001b9a	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001b9a	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001b9d	            0x7506	                           jne 0x4001ba5	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001b9f	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001ba1	        0x490f44ef	                          cmove rbp, r15	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001ba5	          0x4d8b3f	                    mov r15, qword [r15]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001ba8	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001bab	     0xf8417010000	                            je 0x4001cc8	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001bb1	      0x41f6471440	           test byte [r15 + 0x14], 0x40 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001bb6	            0x74ed	                            je 0x4001ba5	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001bb8	        0x498b7f08	                mov rdi, qword [r15 + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001bbc	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001bbf	            0x75cf	                           jne 0x4001b90	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001bc1	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bc5	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bc7	          0x4889de	                            mov rsi, rbx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bca	      0xe800000000	                          call 0x4001bcf	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bcf	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bd1	            0x75d2	                           jne 0x4001ba5	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bd3	    0x41c747100100	               mov dword [r15 + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001bdb	    0x833d00000000	               cmp dword [0x04001be2], 4	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001be2	     0xf85fb000000	                           jne 0x4001ce3	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001be8	    0x41f7c6010000	                    test r14d, 0x2000001	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001bef	     0xf84ee000000	                            je 0x4001ce3	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001bf5	      0x488b442408	                mov rax, qword [rsp + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001bfa	        0x488b4008	                mov rax, qword [rax + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001bfe	          0x8b4008	                mov eax, dword [rax + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001c01	          0x83f805	                              cmp eax, 5	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001c04	     0xf8446040000	                            je 0x4002050	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001c0a	          0x83f802	                              cmp eax, 2	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001c0d	     0xf8411040000	                            je 0x4002024	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001c13	        0x498b4508	                mov rax, qword [r13 + 8]	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001c17	    0x4181e6fdfeff	                    and r14d, 0xfdfffefd	      3712	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001c1e	        0x83780805	                  cmp dword [rax + 8], 5	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001c22	     0xf85bb000000	                           jne 0x4001ce3	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001c28	    0x4181642420fd	      and dword [r12 + 0x20], 0xfdfffefd	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001c31	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c36	          0x4489f2	                           mov edx, r14d	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c39	          0x4c89ef	                            mov rdi, r13	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c3c	      0xe800000000	                          call 0x4001c41	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c41	          0x4885c0	                           test rax, rax	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001c44	          0x4989c6	                            mov r14, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c47	     0xf84b2000000	                            je 0x4001cff	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001c4d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3734	objcopy.c	FUNCTION_45	CALL_12
0x4001c54	    0xc74004080000	                  mov dword [rax + 4], 8	      3734	objcopy.c	FUNCTION_45	CALL_12
0x4001c5b	      0x498b4c2438	            mov rcx, qword [r12 + 0x38] 	      3736	objcopy.c	FUNCTION_45
0x4001c60	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3737	objcopy.c	FUNCTION_45	CALL_13
0x4001c65	          0x4c89ea	                            mov rdx, r13	      3737	objcopy.c	FUNCTION_45	CALL_13
0x4001c68	          0x4c89e6	                            mov rsi, r12	      3737	objcopy.c	FUNCTION_45	CALL_13
0x4001c6b	      0xe800000000	                          call 0x4001c70	      3737	objcopy.c	FUNCTION_45	CALL_13
0x4001c70	    0x8b0d00000000	            mov ecx, dword [0x04001c76] 	      3738	objcopy.c	FUNCTION_45	IF_10
0x4001c76	            0x85c9	                           test ecx, ecx	      3738	objcopy.c	FUNCTION_45	IF_10
0x4001c78	     0xf8848030000	                            js 0x4001fc6	      3738	objcopy.c	FUNCTION_45	IF_10
0x4001c7e	    0x48630d000000	         movsxd rcx, dword [0x04001c85] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c85	            0x31d2	                            xor edx, edx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c87	      0x488d4408ff	                lea rax, [rax + rcx - 1]	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c8c	          0x48f7f1	                                 div rcx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c8f	    0x486315000000	         movsxd rdx, dword [0x04001c96] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c96	        0x480fafc2	                           imul rax, rdx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c9a	          0x4889c2	                            mov rdx, rax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001c9d	          0x4c89f6	                            mov rsi, r14	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001ca0	          0x4c89ef	                            mov rdi, r13	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001ca3	      0xe800000000	                          call 0x4001ca8	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001ca8	            0x85c0	                           test eax, eax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001caa	     0xf85a0000000	                           jne 0x4001d50	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001cb0	      0xba05000000	                              mov edx, 5	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001cb5	      0xbe00000000	                              mov esi, 0	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001cba	            0x31ff	                            xor edi, edi	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001cbc	      0xe800000000	                          call 0x4001cc1	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001cc1	            0xeb50	                           jmp 0x4001d13	      3745	objcopy.c	FUNCTION_45	IF_12
0x4001cc3	       0xf1f440000	                   nop dword [rax + rax]	      3745	objcopy.c	FUNCTION_45	IF_12
0x4001cc8	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001ccb	     0xf840affffff	                            je 0x4001bdb	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001cd1	    0x4181e6040100	                         and r14d, 0x104	      3707	objcopy.c	FUNCTION_45	IF_5
0x4001cd8	        0x440b7528	             or r14d, dword [rbp + 0x28]	      3707	objcopy.c	FUNCTION_45	IF_5
0x4001cdc	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001ce3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001ce8	          0x4489f2	                           mov edx, r14d	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001ceb	          0x4c89ef	                            mov rdi, r13	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001cee	      0xe800000000	                          call 0x4001cf3	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001cf3	          0x4885c0	                           test rax, rax	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001cf6	          0x4989c6	                            mov r14, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001cf9	     0xf855cffffff	                           jne 0x4001c5b	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001cff	      0xba05000000	                              mov edx, 5	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001d04	      0xbe00000000	                              mov esi, 0	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001d09	            0x31ff	                            xor edi, edi	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001d0b	          0x4531f6	                          xor r14d, r14d	      3730	objcopy.c	FUNCTION_45	IF_8
0x4001d0e	      0xe800000000	                          call 0x4001d13	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001d13	    0xc70500000000	               mov dword [0x04001d1d], 1	      3828	objcopy.c	FUNCTION_45
0x4001d1d	        0x4883c428	                           add rsp, 0x28	      3830	objcopy.c	FUNCTION_45
0x4001d21	          0x4c89f2	                            mov rdx, r14	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d24	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x4001d25	          0x4c89ee	                            mov rsi, r13	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d28	          0x4889c1	                            mov rcx, rax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d2b	            0x31ff	                            xor edi, edi	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d2d	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x4001d2e	            0x415c	                                 pop r12	      3830	objcopy.c	FUNCTION_45
0x4001d30	            0x415d	                                 pop r13	      3830	objcopy.c	FUNCTION_45
0x4001d32	            0x415e	                                 pop r14	      3830	objcopy.c	FUNCTION_45
0x4001d34	            0x415f	                                 pop r15	      3830	objcopy.c	FUNCTION_45
0x4001d36	            0x31c0	                            xor eax, eax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d38	      0xe900000000	                           jmp 0x4001d3d	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d3d	           0xf1f00	                         nop dword [rax]	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d40	          0x4589fe	                          mov r14d, r15d	      3682	objcopy.c	FUNCTION_45
0x4001d43	          0x4889dd	                            mov rbp, rbx	      3681	objcopy.c	FUNCTION_45
0x4001d46	      0xe9cafdffff	                           jmp 0x4001b15	      3681	objcopy.c	FUNCTION_45
0x4001d4b	       0xf1f440000	                   nop dword [rax + rax]	      3681	objcopy.c	FUNCTION_45
0x4001d50	    0x4c8b3d000000	            mov r15, qword [0x04001d57] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d57	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      3748	objcopy.c	FUNCTION_45
0x4001d5c	        0x498b1c24	                    mov rbx, qword [r12]	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4001d60	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d63	      0x4889442410	             mov qword [rsp + 0x10], rax	      3748	objcopy.c	FUNCTION_45
0x4001d68	     0xf84af020000	                            je 0x400201d	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d6e	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d70	            0xeb23	                           jmp 0x4001d95	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d72	    0x660f1f440000	                    nop word [rax + rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d78	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001d7a	          0x4889de	                            mov rsi, rbx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001d7d	      0xe800000000	                          call 0x4001d82	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001d82	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001d85	            0x7506	                           jne 0x4001d8d	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001d87	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001d89	        0x490f44ef	                          cmove rbp, r15	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001d8d	          0x4d8b3f	                    mov r15, qword [r15]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d90	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d93	            0x744b	                            je 0x4001de0	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d95	      0x41f647140c	            test byte [r15 + 0x14], 0xc 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001d9a	            0x74f1	                            je 0x4001d8d	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001d9c	        0x498b7f08	                mov rdi, qword [r15 + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001da0	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001da3	            0x75d3	                           jne 0x4001d78	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001da5	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001da9	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dab	          0x4889de	                            mov rsi, rbx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dae	      0xe800000000	                          call 0x4001db3	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001db3	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001db5	            0x75d6	                           jne 0x4001d8d	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001db7	    0x488b0d000000	            mov rcx, qword [0x04001dbe] 	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dbe	        0x498b1c24	                    mov rbx, qword [r12]	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dc2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dc7	    0x41c747100100	               mov dword [r15 + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001dcf	    0x480305000000	             add rax, qword [0x04001dd6]	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x4001dd6	          0x4989cf	                            mov r15, rcx	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x4001dd9	            0xeb2e	                           jmp 0x4001e09	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x4001ddb	       0xf1f440000	                   nop dword [rax + rax]	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x4001de0	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001de3	     0xf841f020000	                            je 0x4002008	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001de9	        0xf6451404	               test byte [rbp + 0x14], 4	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001ded	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001df4	     0xf84eb010000	                            je 0x4001fe5	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001dfa	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001dfe	        0x498b1c24	                    mov rbx, qword [r12]	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001e02	    0x4c8b3d000000	            mov r15, qword [0x04001e09] 	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001e09	      0x41804e2401	                 or byte [r14 + 0x24], 1	      1688	bfd.h	FUNCTION_77
0x4001e0e	        0x49894630	             mov qword [r14 + 0x30], rax	      1687	bfd.h	FUNCTION_77
0x4001e12	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e15	        0x49894628	             mov qword [r14 + 0x28], rax	      1687	bfd.h	FUNCTION_77
0x4001e19	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      3767	objcopy.c	FUNCTION_45
0x4001e1e	      0x4889442410	             mov qword [rsp + 0x10], rax	      3767	objcopy.c	FUNCTION_45
0x4001e23	            0x7452	                            je 0x4001e77	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e25	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e27	            0xeb24	                           jmp 0x4001e4d	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e29	     0xf1f80000000	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e30	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001e32	          0x4889de	                            mov rsi, rbx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001e35	      0xe800000000	                          call 0x4001e3a	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001e3a	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001e3d	            0x7506	                           jne 0x4001e45	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001e3f	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001e41	        0x490f44ef	                          cmove rbp, r15	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001e45	          0x4d8b3f	                    mov r15, qword [r15]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e48	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e4b	            0x743b	                            je 0x4001e88	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e4d	      0x41f6471430	           test byte [r15 + 0x14], 0x30 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001e52	            0x74f1	                            je 0x4001e45	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001e54	        0x498b7f08	                mov rdi, qword [r15 + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001e58	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001e5b	            0x75d3	                           jne 0x4001e30	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001e5d	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e61	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e63	          0x4889de	                            mov rsi, rbx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e66	      0xe800000000	                          call 0x4001e6b	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e6b	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e6d	            0x75d6	                           jne 0x4001e45	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e6f	    0x41c747100100	               mov dword [r15 + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001e77	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001e7c	    0x480305000000	             add rax, qword [0x04001e83]	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001e83	            0xeb22	                           jmp 0x4001ea7	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001e85	           0xf1f00	                         nop dword [rax]	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001e88	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001e8b	            0x74ea	                            je 0x4001e77	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001e8d	        0xf6451420	           test byte [rbp + 0x14], 0x20 	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4001e91	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001e98	     0xf843e010000	                            je 0x4001fdc	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4001e9e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4001ea3	        0x48034520	             add rax, qword [rbp + 0x20]	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4001ea7	        0x49894630	             mov qword [r14 + 0x30], rax	      3780	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001eab	      0x418b442470	            mov eax, dword [r12 + 0x70] 	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x4001eb0	      0x410fb65624	           movzx edx, byte [r14 + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x4001eb5	        0x41894670	             mov dword [r14 + 0x70], eax	      1696	bfd.h	FUNCTION_78
0x4001eb9	    0x418b8424c400	            mov eax, dword [r12 + 0xc4] 	      3793	objcopy.c	FUNCTION_45
0x4001ec1	          0x83e2cf	                     and edx, 0xffffffcf	      3796	objcopy.c	FUNCTION_45
0x4001ec4	    0x418986c40000	             mov dword [r14 + 0xc4], eax	      3793	objcopy.c	FUNCTION_45
0x4001ecb	    0x410fb6442424	           movzx eax, byte [r12 + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x4001ed1	          0x83e030	                           and eax, 0x30	      3796	objcopy.c	FUNCTION_45
0x4001ed4	             0x9d0	                             or eax, edx	      3796	objcopy.c	FUNCTION_45
0x4001ed6	        0x41884624	               mov byte [r14 + 0x24], al	      3796	objcopy.c	FUNCTION_45
0x4001eda	    0x41f644242302	               test byte [r12 + 0x23], 2	      3804	objcopy.c	FUNCTION_45	IF_19
0x4001ee0	      0x4d89742468	             mov qword [r12 + 0x68], r14	      3801	objcopy.c	FUNCTION_45
0x4001ee5	    0x49c744246000	               mov qword [r12 + 0x60], 0	      3802	objcopy.c	FUNCTION_45
0x4001eee	     0xf849c000000	                            je 0x4001f90	      3804	objcopy.c	FUNCTION_45	IF_19
0x4001ef4	    0x488b35000000	            mov rsi, qword [0x04001efb] 	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001efb	    0x498b8424f000	            mov rax, qword [r12 + 0xf0] 	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001f03	          0x4885f6	                           test rsi, rsi	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001f06	     0xf8484000000	                            je 0x4001f90	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001f0c	        0x488b5008	                mov rdx, qword [rax + 8]	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001f10	        0x837a0805	                  cmp dword [rdx + 8], 5	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001f14	            0x757a	                           jne 0x4001f90	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001f16	    0x498b8c24e000	            mov rcx, qword [r12 + 0xe0] 	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001f1e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001f25	    0x8b98780c0000	           mov ebx, dword [rax + 0xc78] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001f2b	          0x395928	            cmp dword [rcx + 0x28], ebx 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001f2e	            0x7560	                           jne 0x4001f90	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001f30	        0x448b412c	            mov r8d, dword [rcx + 0x2c] 	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f34	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      1216	objcopy.c	FUNCTION_17	IF_3	CALL_3
0x4001f3b	          0x4585c0	                           test r8d, r8d	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f3e	            0x7450	                            je 0x4001f90	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f40	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f47	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f4e	          0x4489c7	                            mov edi, r8d	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f51	      0x440fb64a05	               movzx r9d, byte [rdx + 5]	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f56	            0x31d2	                            xor edx, edx	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f58	          0x49f7f1	                                  div r9	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f5b	          0x4839c7	                            cmp rdi, rax	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f5e	            0x7330	                           jae 0x4001f90	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f60	        0x418d40ff	                       lea eax, [r8 - 1]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f64	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f68	          0x4885c0	                           test rax, rax	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001f6b	            0x7423	                            je 0x4001f90	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001f6d	      0x488b542408	                mov rdx, qword [rsp + 8]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001f72	        0x83481820	             or dword [rax + 0x18], 0x20	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001f76	        0x488b5208	                mov rdx, qword [rdx + 8]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001f7a	        0x837a0805	                  cmp dword [rdx + 8], 5	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001f7e	            0x7510	                           jne 0x4001f90	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001f80	    0x488981b00000	             mov qword [rcx + 0xb0], rax	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4001f87	    0x660f1f840000	                    nop word [rax + rax]	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4001f90	        0x498b4508	                mov rax, qword [r13 + 8]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001f94	          0x4c89f1	                            mov rcx, r14	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001f97	          0x4c89ea	                            mov rdx, r13	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001f9a	          0x4c89e6	                            mov rsi, r12	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001f9d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001fa2	    0xff9050010000	                call qword [rax + 0x150]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001fa8	            0x85c0	                           test eax, eax	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001faa	     0xf8505fbffff	                           jne 0x4001ab5	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001fb0	      0xba05000000	                              mov edx, 5	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001fb5	      0xbe00000000	                              mov esi, 0	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001fba	            0x31ff	                            xor edi, edi	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001fbc	      0xe800000000	                          call 0x4001fc1	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001fc1	      0xe94dfdffff	                           jmp 0x4001d13	      3821	objcopy.c	FUNCTION_45	IF_22
0x4001fc6	    0x8b1500000000	            mov edx, dword [0x04001fcc] 	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fcc	            0x85d2	                           test edx, edx	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fce	      0xba00000000	                              mov edx, 0	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fd3	        0x480f45c2	                         cmovne rax, rdx	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fd7	      0xe9befcffff	                           jmp 0x4001c9a	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fdc	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001fe0	      0xe9c2feffff	                           jmp 0x4001ea7	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001fe5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001fea	        0x498b1c24	                    mov rbx, qword [r12]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001fee	        0x48034518	             add rax, qword [rbp + 0x18]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001ff2	    0x4c8b3d000000	            mov r15, qword [0x04001ff9] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001ff9	      0xe90bfeffff	                           jmp 0x4001e09	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001ffe	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4002003	      0xe972fbffff	                           jmp 0x4001b7a	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4002008	    0x488b0d000000	            mov rcx, qword [0x0400200f] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x400200f	        0x498b1c24	                    mov rbx, qword [r12]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4002013	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4002018	      0xe9b2fdffff	                           jmp 0x4001dcf	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x400201d	            0x31c9	                            xor ecx, ecx	       881	objcopy.c	FUNCTION_5	FOR_1
0x400201f	      0xe9abfdffff	                           jmp 0x4001dcf	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002024	        0x498b3424	                    mov rsi, qword [r12]	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4002028	      0xbf00000000	                              mov edi, 0	      1390	objcopy.c	FUNCTION_23	CALL_2
0x400202d	      0xb909000000	                              mov ecx, 9	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4002032	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4002034	           0xf94c0	                                 sete al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4002037	           0xfb6c0	                           movzx eax, al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x400203a	            0x85c0	                           test eax, eax	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x400203c	     0xf85a1fcffff	                           jne 0x4001ce3	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4002042	      0xe9ccfbffff	                           jmp 0x4001c13	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4002047	    0x660f1f840000	                    nop word [rax + rax]	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4002050	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4002058	        0x83780407	                  cmp dword [rax + 4], 7	      1382	objcopy.c	FUNCTION_23	CALL_1
0x400205c	           0xf94c0	                                 sete al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x400205f	           0xfb6c0	                           movzx eax, al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4002062	            0xebd6	                           jmp 0x400203a	      1382	objcopy.c	FUNCTION_23	CALL_1
strip_usage	SWITCH,0:ELSE,1:DO,0:functions,0:WHILE,0:FOR,0:IF,2:CALL,14	79
0x40001c0	            0x4154	                                push r12	       664	objcopy.c	FUNCTION_2
0x40001c2	    0x4c8b25000000	            mov r12, qword [0x040001c9] 	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001c9	      0xba05000000	                              mov edx, 5	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001ce	              0x55	                                push rbp	       664	objcopy.c	FUNCTION_2
0x40001cf	              0x53	                                push rbx	       664	objcopy.c	FUNCTION_2
0x40001d0	            0x89f5	                            mov ebp, esi	       664	objcopy.c	FUNCTION_2
0x40001d2	          0x4889fb	                            mov rbx, rdi	       664	objcopy.c	FUNCTION_2
0x40001d5	      0xbe00000000	                              mov esi, 0	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001da	            0x31ff	                            xor edi, edi	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001dc	      0xe800000000	                          call 0x40001e1	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001e1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_382
0x40001e4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x40001e7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x40001ec	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x40001ef	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40001f1	      0xe800000000	                          call 0x40001f6	        97	stdio2.h	CALL_382
0x40001f6	            0x31ff	                            xor edi, edi	       666	objcopy.c	FUNCTION_2	CALL_2
0x40001f8	      0xba05000000	                              mov edx, 5	       666	objcopy.c	FUNCTION_2	CALL_2
0x40001fd	      0xbe00000000	                              mov esi, 0	       666	objcopy.c	FUNCTION_2	CALL_2
0x4000202	      0xe800000000	                          call 0x4000207	       666	objcopy.c	FUNCTION_2	CALL_2
0x4000207	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400020c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x400020f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000212	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000214	      0xe800000000	                          call 0x4000219	        97	stdio2.h	CALL_382
0x4000219	            0x31ff	                            xor edi, edi	       667	objcopy.c	FUNCTION_2	CALL_3
0x400021b	      0xba05000000	                              mov edx, 5	       667	objcopy.c	FUNCTION_2	CALL_3
0x4000220	      0xbe00000000	                              mov esi, 0	       667	objcopy.c	FUNCTION_2	CALL_3
0x4000225	      0xe800000000	                          call 0x400022a	       667	objcopy.c	FUNCTION_2	CALL_3
0x400022a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400022f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000232	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000235	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000237	      0xe800000000	                          call 0x400023c	        97	stdio2.h	CALL_382
0x400023c	            0x31ff	                            xor edi, edi	       668	objcopy.c	FUNCTION_2	CALL_4
0x400023e	      0xba05000000	                              mov edx, 5	       668	objcopy.c	FUNCTION_2	CALL_4
0x4000243	      0xbe00000000	                              mov esi, 0	       668	objcopy.c	FUNCTION_2	CALL_4
0x4000248	      0xe800000000	                          call 0x400024d	       668	objcopy.c	FUNCTION_2	CALL_4
0x400024d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x4000252	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000255	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000258	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x400025a	      0xe800000000	                          call 0x400025f	        97	stdio2.h	CALL_382
0x400025f	            0x31ff	                            xor edi, edi	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000261	      0xba05000000	                              mov edx, 5	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000266	      0xbe00000000	                              mov esi, 0	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x400026b	      0xe800000000	                          call 0x4000270	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000270	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x4000275	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000278	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x400027b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x400027d	      0xe800000000	                          call 0x4000282	        97	stdio2.h	CALL_382
0x4000282	            0x31ff	                            xor edi, edi	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000284	      0xba05000000	                              mov edx, 5	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000289	      0xbe00000000	                              mov esi, 0	       686	objcopy.c	FUNCTION_2	CALL_9
0x400028e	      0xe800000000	                          call 0x4000293	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000293	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x4000298	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x400029b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x400029e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40002a0	      0xe800000000	                          call 0x40002a5	        97	stdio2.h	CALL_382
0x40002a5	    0x488b3d000000	            mov rdi, qword [0x040002ac] 	       709	objcopy.c	FUNCTION_2	CALL_12
0x40002ac	          0x4889de	                            mov rsi, rbx	       709	objcopy.c	FUNCTION_2	CALL_12
0x40002af	      0xe800000000	                          call 0x40002b4	       709	objcopy.c	FUNCTION_2	CALL_12
0x40002b4	            0x85ed	                           test ebp, ebp	       710	objcopy.c	FUNCTION_2	IF_2
0x40002b6	            0x7407	                            je 0x40002bf	       710	objcopy.c	FUNCTION_2	IF_2
0x40002b8	            0x89ef	                            mov edi, ebp	       712	objcopy.c	FUNCTION_2	CALL_14
0x40002ba	      0xe800000000	                          call 0x40002bf	       712	objcopy.c	FUNCTION_2	CALL_14
0x40002bf	            0x31ff	                            xor edi, edi	       711	objcopy.c	FUNCTION_2	CALL_13
0x40002c1	      0xba05000000	                              mov edx, 5	       711	objcopy.c	FUNCTION_2	CALL_13
0x40002c6	      0xbe00000000	                              mov esi, 0	       711	objcopy.c	FUNCTION_2	CALL_13
0x40002cb	      0xe800000000	                          call 0x40002d0	       711	objcopy.c	FUNCTION_2	CALL_13
0x40002d0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_382
0x40002d5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x40002d8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x40002dd	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x40002e0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40002e2	      0xe800000000	                          call 0x40002e7	        97	stdio2.h	CALL_382
0x40002e7	            0xebcf	                           jmp 0x40002b8	        97	stdio2.h	CALL_382
convert_efi_target	SWITCH,0:ELSE,1:DO,0:functions,0:WHILE,0:FOR,0:IF,2:CALL,2	24
0x4000110	        0x488d5704	                      lea rdx, [rdi + 4]	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000114	          0xc60770	                    mov byte [rdi], 0x70	      4592	objcopy.c	FUNCTION_59
0x4000117	        0xc6470165	                mov byte [rdi + 1], 0x65	      4593	objcopy.c	FUNCTION_59
0x400011b	        0xc6470269	                mov byte [rdi + 2], 0x69	      4594	objcopy.c	FUNCTION_59
0x400011f	          0x4889f8	                            mov rax, rdi	      4591	objcopy.c	FUNCTION_59
0x4000122	      0xb905000000	                              mov ecx, 5	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000127	      0xbf00000000	                              mov edi, 0	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x400012c	          0x4889d6	                            mov rsi, rdx	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x400012f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000131	            0x741b	                            je 0x400014e	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000133	              0x53	                                push rbx	      4591	objcopy.c	FUNCTION_59
0x4000134	      0xbe00000000	                              mov esi, 0	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000139	          0x4889d7	                            mov rdi, rdx	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013c	          0x4889c3	                            mov rbx, rax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013f	      0xe800000000	                          call 0x4000144	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000144	            0x85c0	                           test eax, eax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000146	            0x7504	                           jne 0x400014c	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000148	        0xc643072d	                mov byte [rbx + 7], 0x2d	      4606	objcopy.c	FUNCTION_59	ELSE_1	IF_2
0x400014c	              0x5b	                                 pop rbx	      4608	objcopy.c	FUNCTION_59
0x400014d	              0xc3	                                     ret	      4608	objcopy.c	FUNCTION_59
0x400014e	        0xc6400533	                mov byte [rax + 5], 0x33	      4599	objcopy.c	FUNCTION_59	IF_1
0x4000152	        0xc6400638	                mov byte [rax + 6], 0x38	      4600	objcopy.c	FUNCTION_59	IF_1
0x4000156	        0xc6400736	                mov byte [rax + 7], 0x36	      4601	objcopy.c	FUNCTION_59	IF_1
0x400015a	              0xc3	                                     ret	      4601	objcopy.c	FUNCTION_59	IF_1
is_specified_symbol_predicate	SWITCH,0:ELSE,1:DO,0:functions,0:WHILE,0:FOR,0:IF,3:CALL,2	24
0x4000170	              0x53	                                push rbx	      1152	objcopy.c	FUNCTION_15
0x4000171	          0x488b3f	                    mov rdi, qword [rdi]	      1155	objcopy.c	FUNCTION_15
0x4000174	          0x4889f3	                            mov rbx, rsi	      1152	objcopy.c	FUNCTION_15
0x4000177	          0x803f21	                    cmp byte [rdi], 0x21	      1157	objcopy.c	FUNCTION_15	IF_1
0x400017a	            0x7424	                            je 0x40001a0	      1157	objcopy.c	FUNCTION_15	IF_1
0x400017c	          0x488b36	                    mov rsi, qword [rsi]	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400017f	            0x31d2	                            xor edx, edx	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000181	      0xe800000000	                          call 0x4000186	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000186	            0x85c0	                           test eax, eax	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000188	            0x7507	                           jne 0x4000191	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400018a	    0xc74308010000	                  mov dword [rbx + 8], 1	      1161	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4000191	      0xb801000000	                              mov eax, 1	      1163	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4000196	              0x5b	                                 pop rbx	      1178	objcopy.c	FUNCTION_15
0x4000197	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
0x4000198	     0xf1f84000000	                   nop dword [rax + rax]	      1178	objcopy.c	FUNCTION_15
0x40001a0	          0x488b36	                    mov rsi, qword [rsi]	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a3	        0x4883c701	                              add rdi, 1	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a7	            0x31d2	                            xor edx, edx	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a9	      0xe800000000	                          call 0x40001ae	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001ae	            0x85c0	                           test eax, eax	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001b0	            0x75df	                           jne 0x4000191	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001b2	    0xc74308000000	                  mov dword [rbx + 8], 0	      1170	objcopy.c	FUNCTION_15	ELSE_1	IF_3
0x40001b9	              0x5b	                                 pop rbx	      1178	objcopy.c	FUNCTION_15
0x40001ba	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
htab_hash_redefnode	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:FOR,0:IF,0:CALL,1	2
0x4000160	          0x488b3f	                    mov rdi, qword [rdi]	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000163	      0xe900000000	                           jmp 0x4000168	       973	objcopy.c	FUNCTION_7	CALL_1
section_add_load_file	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,1:FOR,0:IF,3:CALL,12	77
0x40007d0	            0x4156	                                push r14	      4645	objcopy.c	FUNCTION_61
0x40007d2	            0x4155	                                push r13	      4645	objcopy.c	FUNCTION_61
0x40007d4	          0x4989fd	                            mov r13, rdi	      4645	objcopy.c	FUNCTION_61
0x40007d7	            0x4154	                                push r12	      4645	objcopy.c	FUNCTION_61
0x40007d9	              0x55	                                push rbp	      4645	objcopy.c	FUNCTION_61
0x40007da	      0xbe00000000	                              mov esi, 0	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40007df	              0x53	                                push rbx	      4645	objcopy.c	FUNCTION_61
0x40007e0	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40007e4	      0xe800000000	                          call 0x40007e9	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40007e9	          0x4885c0	                           test rax, rax	      4654	objcopy.c	FUNCTION_61	IF_1
0x40007ec	     0xf84b4000000	                            je 0x40008a6	      4654	objcopy.c	FUNCTION_61	IF_1
0x40007f2	      0xbf00100000	                         mov edi, 0x1000	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40007f7	          0x4889c5	                            mov rbp, rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40007fa	    0x41bc00100000	                        mov r12d, 0x1000	      4659	objcopy.c	FUNCTION_61
0x4000800	      0xe800000000	                          call 0x4000805	      4660	objcopy.c	FUNCTION_61	CALL_5
0x4000805	            0x31db	                            xor ebx, ebx	      4658	objcopy.c	FUNCTION_61
0x4000807	        0x49894520	             mov qword [r13 + 0x20], rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x400080b	            0xeb2f	                           jmp 0x400083c	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x400080d	           0xf1f00	                         nop dword [rax]	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000810	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000814	          0x4c89e2	                            mov rdx, r12	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000817	          0x4801df	                            add rdi, rbx	       295	stdio2.h	FUNCTION_94	CALL_9
0x400081a	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_94	CALL_9
0x400081d	          0x4829da	                            sub rdx, rbx	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000820	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000825	      0xe800000000	                          call 0x400082a	       295	stdio2.h	FUNCTION_94	CALL_9
0x400082a	          0x4889ef	                            mov rdi, rbp	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x400082d	          0x4989c6	                            mov r14, rax	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000830	      0xe800000000	                          call 0x4000835	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000835	            0x85c0	                           test eax, eax	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000837	            0x754b	                           jne 0x4000884	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000839	          0x4c01f3	                            add rbx, r14	      4675	objcopy.c	FUNCTION_61	WHILE_1
0x400083c	          0x4889ef	                            mov rdi, rbp	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x400083f	      0xe800000000	                          call 0x4000844	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000844	            0x85c0	                           test eax, eax	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000846	            0x7528	                           jne 0x4000870	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000848	          0x4c39e3	                            cmp rbx, r12	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x400084b	            0x75c3	                           jne 0x4000810	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x400084d	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000851	        0x4c8d241b	                    lea r12, [rbx + rbx]	      4667	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4000855	          0x4c89e6	                            mov rsi, r12	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000858	      0xe800000000	                          call 0x400085d	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x400085d	        0x49894520	             mov qword [r13 + 0x20], rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000861	          0x4889c7	                            mov rdi, rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000864	            0xebae	                           jmp 0x4000814	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000866	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000870	        0x49895d18	             mov qword [r13 + 0x18], rbx	      4678	objcopy.c	FUNCTION_61
0x4000874	          0x4889ef	                            mov rdi, rbp	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4000877	              0x5b	                                 pop rbx	      4681	objcopy.c	FUNCTION_61
0x4000878	              0x5d	                                 pop rbp	      4681	objcopy.c	FUNCTION_61
0x4000879	            0x415c	                                 pop r12	      4681	objcopy.c	FUNCTION_61
0x400087b	            0x415d	                                 pop r13	      4681	objcopy.c	FUNCTION_61
0x400087d	            0x415e	                                 pop r14	      4681	objcopy.c	FUNCTION_61
0x400087f	      0xe900000000	                           jmp 0x4000884	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4000884	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000888	      0xbe00000000	                              mov esi, 0	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x400088d	            0x31ff	                            xor edi, edi	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x400088f	      0xba05000000	                              mov edx, 5	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000894	      0xe800000000	                          call 0x4000899	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000899	          0x4889de	                            mov rsi, rbx	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x400089c	          0x4889c7	                            mov rdi, rax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x400089f	            0x31c0	                            xor eax, eax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x40008a1	      0xe800000000	                          call 0x40008a6	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x40008a6	      0xe800000000	                          call 0x40008ab	      4656	objcopy.c	FUNCTION_61	CALL_4
0x40008ab	            0x8b38	                    mov edi, dword [rax]	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008ad	      0xe800000000	                          call 0x40008b2	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008b2	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008b6	          0x4889c5	                            mov rbp, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008b9	      0xba05000000	                              mov edx, 5	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008be	      0xbe00000000	                              mov esi, 0	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008c3	            0x31ff	                            xor edi, edi	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008c5	      0xe800000000	                          call 0x40008ca	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008ca	          0x4889ea	                            mov rdx, rbp	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008cd	          0x4889c7	                            mov rdi, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008d0	          0x4889de	                            mov rsi, rbx	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008d3	            0x31c0	                            xor eax, eax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008d5	      0xe800000000	                          call 0x40008da	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
parse_flags	SWITCH,0:ELSE,2:DO,1:functions,0:WHILE,0:FOR,0:IF,2:CALL,8	157
0x40009c0	            0x4156	                                push r14	       720	objcopy.c	FUNCTION_3
0x40009c2	          0x4531f6	                          xor r14d, r14d	       725	objcopy.c	FUNCTION_3
0x40009c5	            0x4155	                                push r13	       720	objcopy.c	FUNCTION_3
0x40009c7	            0x4154	                                push r12	       720	objcopy.c	FUNCTION_3
0x40009c9	              0x55	                                push rbp	       720	objcopy.c	FUNCTION_3
0x40009ca	          0x4889fd	                            mov rbp, rdi	       720	objcopy.c	FUNCTION_3
0x40009cd	              0x53	                                push rbx	       720	objcopy.c	FUNCTION_3
0x40009ce	            0xeb0c	                           jmp 0x40009dc	       720	objcopy.c	FUNCTION_3
0x40009d0	        0x4183ce01	                              or r14d, 1	       741	objcopy.c	FUNCTION_3	DO_1
0x40009d4	          0x4885db	                           test rbx, rbx	       768	objcopy.c	FUNCTION_3
0x40009d7	            0x7456	                            je 0x4000a2f	       768	objcopy.c	FUNCTION_3
0x40009d9	          0x4889dd	                            mov rbp, rbx	       768	objcopy.c	FUNCTION_3
0x40009dc	      0xbe2c000000	                           mov esi, 0x2c	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x40009e1	          0x4889ef	                            mov rdi, rbp	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x40009e4	      0xe800000000	                          call 0x40009e9	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x40009e9	          0x4885c0	                           test rax, rax	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x40009ec	          0x4889c3	                            mov rbx, rax	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x40009ef	            0x746f	                            je 0x4000a60	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x40009f1	          0x4189c5	                           mov r13d, eax	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x40009f4	        0x4883c301	                              add rbx, 1	       735	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x40009f8	          0x4129ed	                           sub r13d, ebp	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x40009fb	          0x4d63e5	                        movsxd r12, r13d	       741	objcopy.c	FUNCTION_3	DO_1
0x40009fe	          0x4889ee	                            mov rsi, rbp	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a01	      0xbf00000000	                              mov edi, 0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a06	          0x4c89e2	                            mov rdx, r12	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a09	      0xe800000000	                          call 0x4000a0e	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a0e	            0x85c0	                           test eax, eax	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a10	            0x74be	                            je 0x40009d0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a12	          0x4c89e2	                            mov rdx, r12	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a15	          0x4889ee	                            mov rsi, rbp	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a18	      0xbf00000000	                              mov edi, 0	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a1d	      0xe800000000	                          call 0x4000a22	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a22	            0x85c0	                           test eax, eax	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a24	            0x751a	                           jne 0x4000a40	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a26	        0x4183ce02	                              or r14d, 2	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a2a	          0x4885db	                           test rbx, rbx	       768	objcopy.c	FUNCTION_3
0x4000a2d	            0x75aa	                           jne 0x40009d9	       768	objcopy.c	FUNCTION_3
0x4000a2f	              0x5b	                                 pop rbx	       771	objcopy.c	FUNCTION_3
0x4000a30	          0x4489f0	                           mov eax, r14d	       771	objcopy.c	FUNCTION_3
0x4000a33	              0x5d	                                 pop rbp	       771	objcopy.c	FUNCTION_3
0x4000a34	            0x415c	                                 pop r12	       771	objcopy.c	FUNCTION_3
0x4000a36	            0x415d	                                 pop r13	       771	objcopy.c	FUNCTION_3
0x4000a38	            0x415e	                                 pop r14	       771	objcopy.c	FUNCTION_3
0x4000a3a	              0xc3	                                     ret	       771	objcopy.c	FUNCTION_3
0x4000a3b	       0xf1f440000	                   nop dword [rax + rax]	       771	objcopy.c	FUNCTION_3
0x4000a40	          0x4c89e2	                            mov rdx, r12	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a43	          0x4889ee	                            mov rsi, rbp	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a46	      0xbf00000000	                              mov edi, 0	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a4b	      0xe800000000	                          call 0x4000a50	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a50	            0x85c0	                           test eax, eax	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a52	            0x751c	                           jne 0x4000a70	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a54	    0x4181ce000200	                          or r14d, 0x200	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a5b	      0xe974ffffff	                           jmp 0x40009d4	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a60	          0x4889ef	                            mov rdi, rbp	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a63	      0xe800000000	                          call 0x4000a68	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a68	          0x4189c5	                           mov r13d, eax	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a6b	            0xeb8e	                           jmp 0x40009fb	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a6d	           0xf1f00	                         nop dword [rax]	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a70	          0x4c89e2	                            mov rdx, r12	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a73	          0x4889ee	                            mov rsi, rbp	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a76	      0xbf00000000	                              mov edi, 0	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a7b	      0xe800000000	                          call 0x4000a80	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a80	            0x85c0	                           test eax, eax	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a82	            0x750c	                           jne 0x4000a90	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a84	        0x4183ce08	                              or r14d, 8	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a88	      0xe947ffffff	                           jmp 0x40009d4	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a8d	           0xf1f00	                         nop dword [rax]	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a90	          0x4c89e2	                            mov rdx, r12	       745	objcopy.c	FUNCTION_3	DO_1
0x4000a93	          0x4889ee	                            mov rsi, rbp	       745	objcopy.c	FUNCTION_3	DO_1
0x4000a96	      0xbf00000000	                              mov edi, 0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000a9b	      0xe800000000	                          call 0x4000aa0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000aa0	            0x85c0	                           test eax, eax	       745	objcopy.c	FUNCTION_3	DO_1
0x4000aa2	            0x750c	                           jne 0x4000ab0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000aa4	    0x4181ce002000	                         or r14d, 0x2000	       745	objcopy.c	FUNCTION_3	DO_1
0x4000aab	      0xe924ffffff	                           jmp 0x40009d4	       745	objcopy.c	FUNCTION_3	DO_1
0x4000ab0	          0x4c89e2	                            mov rdx, r12	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ab3	          0x4889ee	                            mov rsi, rbp	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ab6	      0xbf00000000	                              mov edi, 0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000abb	      0xe800000000	                          call 0x4000ac0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ac0	            0x85c0	                           test eax, eax	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ac2	            0x750c	                           jne 0x4000ad0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ac4	        0x4183ce10	                           or r14d, 0x10	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ac8	      0xe907ffffff	                           jmp 0x40009d4	       746	objcopy.c	FUNCTION_3	DO_1
0x4000acd	           0xf1f00	                         nop dword [rax]	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ad0	          0x4c89e2	                            mov rdx, r12	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ad3	          0x4889ee	                            mov rsi, rbp	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ad6	      0xbf00000000	                              mov edi, 0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000adb	      0xe800000000	                          call 0x4000ae0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ae0	            0x85c0	                           test eax, eax	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ae2	            0x741d	                            je 0x4000b01	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ae4	          0x4c89e2	                            mov rdx, r12	       748	objcopy.c	FUNCTION_3	DO_1
0x4000ae7	          0x4889ee	                            mov rsi, rbp	       748	objcopy.c	FUNCTION_3	DO_1
0x4000aea	      0xbf00000000	                              mov edi, 0	       748	objcopy.c	FUNCTION_3	DO_1
0x4000aef	      0xe800000000	                          call 0x4000af4	       748	objcopy.c	FUNCTION_3	DO_1
0x4000af4	            0x85c0	                           test eax, eax	       748	objcopy.c	FUNCTION_3	DO_1
0x4000af6	            0x7512	                           jne 0x4000b0a	       748	objcopy.c	FUNCTION_3	DO_1
0x4000af8	        0x4183ce40	                           or r14d, 0x40	       748	objcopy.c	FUNCTION_3	DO_1
0x4000afc	      0xe9d3feffff	                           jmp 0x40009d4	       748	objcopy.c	FUNCTION_3	DO_1
0x4000b01	        0x4183ce20	                           or r14d, 0x20	       747	objcopy.c	FUNCTION_3	DO_1
0x4000b05	      0xe9cafeffff	                           jmp 0x40009d4	       747	objcopy.c	FUNCTION_3	DO_1
0x4000b0a	          0x4c89e2	                            mov rdx, r12	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b0d	          0x4889ee	                            mov rsi, rbp	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b10	      0xbf00000000	                              mov edi, 0	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b15	      0xe800000000	                          call 0x4000b1a	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b1a	            0x85c0	                           test eax, eax	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b1c	            0x7420	                            je 0x4000b3e	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b1e	          0x4c89e2	                            mov rdx, r12	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b21	          0x4889ee	                            mov rsi, rbp	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b24	      0xbf00000000	                              mov edi, 0	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b29	      0xe800000000	                          call 0x4000b2e	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b2e	            0x85c0	                           test eax, eax	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b30	            0x7518	                           jne 0x4000b4a	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b32	    0x4181ce000100	                          or r14d, 0x100	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b39	      0xe996feffff	                           jmp 0x40009d4	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b3e	    0x4181ce000000	                   or r14d, section_end.	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b45	      0xe98afeffff	                           jmp 0x40009d4	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b4a	          0x4c89e2	                            mov rdx, r12	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b4d	          0x4889ee	                            mov rsi, rbp	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b50	      0xbf00000000	                              mov edi, 0	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b55	      0xe800000000	                          call 0x4000b5a	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b5a	            0x85c0	                           test eax, eax	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b5c	            0x750c	                           jne 0x4000b6a	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b5e	    0x4181ce000080	                       or r14d, 0x800000	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b65	      0xe96afeffff	                           jmp 0x40009d4	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b6a	          0x4c89e2	                            mov rdx, r12	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b6d	          0x4889ee	                            mov rsi, rbp	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b70	      0xbf00000000	                              mov edi, 0	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b75	      0xe800000000	                          call 0x4000b7a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b7a	            0x85c0	                           test eax, eax	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b7c	            0x750c	                           jne 0x4000b8a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b7e	    0x4181ce000000	                      or r14d, 0x1000000	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b85	      0xe94afeffff	                           jmp 0x40009d4	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b8a	        0x418d7d01	                      lea edi, [r13 + 1]	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000b8e	          0x4863ff	                         movsxd rdi, edi	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000b91	      0xe800000000	                          call 0x4000b96	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000b96	          0x4c89e2	                            mov rdx, r12	       126	string3.h	FUNCTION_72	CALL_3
0x4000b99	          0x4889c3	                            mov rbx, rax	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000b9c	          0x4889ee	                            mov rsi, rbp	       126	string3.h	FUNCTION_72	CALL_3
0x4000b9f	          0x4889c7	                            mov rdi, rax	       126	string3.h	FUNCTION_72	CALL_3
0x4000ba2	      0xe800000000	                          call 0x4000ba7	       126	string3.h	FUNCTION_72	CALL_3
0x4000ba7	      0xba05000000	                              mov edx, 5	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bac	      0xbe00000000	                              mov esi, 0	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bb1	            0x31ff	                            xor edi, edi	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bb3	      0x42c6042300	                 mov byte [rbx + r12], 0	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x4000bb8	      0xe800000000	                          call 0x4000bbd	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bbd	          0x4889de	                            mov rsi, rbx	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bc0	          0x4889c7	                            mov rdi, rax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bc3	            0x31c0	                            xor eax, eax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bc5	      0xe800000000	                          call 0x4000bca	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bca	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bcf	            0x31ff	                            xor edi, edi	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bd1	      0xba05000000	                              mov edx, 5	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bd6	      0xe800000000	                          call 0x4000bdb	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bdb	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000be0	          0x4889c7	                            mov rdi, rax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000be3	            0x31c0	                            xor eax, eax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000be5	      0xe800000000	                          call 0x4000bea	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
mark_symbols_used_in_relocations	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:FOR,1:IF,7:CALL,7	72
0x4000420	      0x48837e6800	               cmp qword [rsi + 0x68], 0	      4210	objcopy.c	FUNCTION_54	IF_1
0x4000425	            0x742d	                            je 0x4000454	      4210	objcopy.c	FUNCTION_54	IF_1
0x4000427	            0x4155	                                push r13	      4203	objcopy.c	FUNCTION_54
0x4000429	            0x4154	                                push r12	      4203	objcopy.c	FUNCTION_54
0x400042b	          0x4989d4	                            mov r12, rdx	      4203	objcopy.c	FUNCTION_54
0x400042e	              0x55	                                push rbp	      4203	objcopy.c	FUNCTION_54
0x400042f	              0x53	                                push rbx	      4203	objcopy.c	FUNCTION_54
0x4000430	          0x4889fd	                            mov rbp, rdi	      4203	objcopy.c	FUNCTION_54
0x4000433	          0x4889f3	                            mov rbx, rsi	      4203	objcopy.c	FUNCTION_54
0x4000436	        0x4883ec08	                              sub rsp, 8	      4203	objcopy.c	FUNCTION_54
0x400043a	      0xe800000000	                          call 0x400043f	      4213	objcopy.c	FUNCTION_54	CALL_1
0x400043f	          0x4885c0	                           test rax, rax	      4214	objcopy.c	FUNCTION_54	IF_2
0x4000442	     0xf88a8000000	                            js 0x40004f0	      4214	objcopy.c	FUNCTION_54	IF_2
0x4000448	            0x7516	                           jne 0x4000460	      4222	objcopy.c	FUNCTION_54	IF_4
0x400044a	        0x4883c408	                              add rsp, 8	      4245	objcopy.c	FUNCTION_54
0x400044e	              0x5b	                                 pop rbx	      4245	objcopy.c	FUNCTION_54
0x400044f	              0x5d	                                 pop rbp	      4245	objcopy.c	FUNCTION_54
0x4000450	            0x415c	                                 pop r12	      4245	objcopy.c	FUNCTION_54
0x4000452	            0x415d	                                 pop r13	      4245	objcopy.c	FUNCTION_54
0x4000454	            0xf3c3	                                     ret	      4245	objcopy.c	FUNCTION_54
0x4000456	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4245	objcopy.c	FUNCTION_54
0x4000460	          0x4889c7	                            mov rdi, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000463	      0xe800000000	                          call 0x4000468	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000468	          0x4c89e1	                            mov rcx, r12	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400046b	          0x4889c2	                            mov rdx, rax	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400046e	          0x4889de	                            mov rsi, rbx	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4000471	          0x4889ef	                            mov rdi, rbp	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4000474	          0x4989c5	                            mov r13, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000477	      0xe800000000	                          call 0x400047c	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400047c	          0x4885c0	                           test rax, rax	      4227	objcopy.c	FUNCTION_54	IF_5
0x400047f	     0xf8888000000	                            js 0x400050d	      4227	objcopy.c	FUNCTION_54	IF_5
0x4000485	            0x7450	                            je 0x40004d7	      4232	objcopy.c	FUNCTION_54	FOR_1
0x4000487	    0x488b35000000	            mov rsi, qword [0x0400048e] 	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400048e	    0x488b3d000000	            mov rdi, qword [0x04000495] 	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000495	      0x498d4cc500	                  lea rcx, [r13 + rax*8]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400049a	    0x4c8b05000000	              mov r8, qword [0x040004a1]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004a1	          0x4c89ea	                            mov rdx, r13	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004a4	         0xf1f4000	                         nop dword [rax]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004a8	          0x488b02	                    mov rax, qword [rdx]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004ab	          0x488b00	                    mov rax, qword [rax]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004ae	          0x4885c0	                           test rax, rax	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004b1	            0x741b	                            je 0x40004ce	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004b3	          0x488b00	                    mov rax, qword [rax]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004b6	          0x4885c0	                           test rax, rax	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004b9	            0x7413	                            je 0x40004ce	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004bb	          0x4839f0	                            cmp rax, rsi	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004be	            0x740e	                            je 0x40004ce	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004c0	          0x4839f8	                            cmp rax, rdi	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004c3	            0x7409	                            je 0x40004ce	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004c5	          0x4c39c0	                             cmp rax, r8	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004c8	            0x7404	                            je 0x40004ce	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004ca	        0x83481820	             or dword [rax + 0x18], 0x20	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004ce	        0x4883c208	                              add rdx, 8	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004d2	          0x4839d1	                            cmp rcx, rdx	      4232	objcopy.c	FUNCTION_54	FOR_1
0x40004d5	            0x75d1	                           jne 0x40004a8	      4232	objcopy.c	FUNCTION_54	FOR_1
0x40004d7	        0x4883c408	                              add rsp, 8	      4245	objcopy.c	FUNCTION_54
0x40004db	          0x4c89ef	                            mov rdi, r13	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40004de	              0x5b	                                 pop rbx	      4245	objcopy.c	FUNCTION_54
0x40004df	              0x5d	                                 pop rbp	      4245	objcopy.c	FUNCTION_54
0x40004e0	            0x415c	                                 pop r12	      4245	objcopy.c	FUNCTION_54
0x40004e2	            0x415d	                                 pop r13	      4245	objcopy.c	FUNCTION_54
0x40004e4	      0xe900000000	                           jmp 0x40004e9	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40004e9	     0xf1f80000000	                         nop dword [rax]	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40004f0	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40004f4	            0x750e	                           jne 0x4000504	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40004f6	      0xe800000000	                          call 0x40004fb	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40004fb	          0x83f805	                              cmp eax, 5	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40004fe	     0xf8446ffffff	                            je 0x400044a	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x4000504	        0x488b7d00	                    mov rdi, qword [rbp]	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x4000508	      0xe800000000	                          call 0x400050d	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x400050d	        0x488b7d00	                    mov rdi, qword [rbp]	      4228	objcopy.c	FUNCTION_54	CALL_6
0x4000511	      0xe800000000	                          call 0x4000516	      4228	objcopy.c	FUNCTION_54	CALL_6
copy_section	SWITCH,0:ELSE,2:DO,0:functions,0:WHILE,0:FOR,4:IF,12:CALL,18	306
0x4001610	            0x4156	                                push r14	      4020	objcopy.c	FUNCTION_51
0x4001612	            0x4155	                                push r13	      4020	objcopy.c	FUNCTION_51
0x4001614	            0x4154	                                push r12	      4020	objcopy.c	FUNCTION_51
0x4001616	              0x55	                                push rbp	      4020	objcopy.c	FUNCTION_51
0x4001617	              0x53	                                push rbx	      4020	objcopy.c	FUNCTION_51
0x4001618	        0x4883ec20	                           sub rsp, 0x20	      4020	objcopy.c	FUNCTION_51
0x400161c	    0x448b05000000	            mov r8d, dword [0x04001623] 	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001623	    0x64488b042528	                mov rax, qword fs:[0x28]	      4020	objcopy.c	FUNCTION_51
0x400162c	      0x4889442418	             mov qword [rsp + 0x18], rax	      4020	objcopy.c	FUNCTION_51
0x4001631	            0x31c0	                            xor eax, eax	      4020	objcopy.c	FUNCTION_51
0x4001633	          0x4585c0	                           test r8d, r8d	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001636	            0x750a	                           jne 0x4001642	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001638	    0x8b0d00000000	            mov ecx, dword [0x0400163e] 	      3846	objcopy.c	FUNCTION_46	IF_2
0x400163e	            0x85c9	                           test ecx, ecx	      3846	objcopy.c	FUNCTION_46	IF_2
0x4001640	            0x7426	                            je 0x4001668	      3846	objcopy.c	FUNCTION_46	IF_2
0x4001642	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4139	objcopy.c	FUNCTION_51
0x4001647	    0x644833042528	                xor rax, qword fs:[0x28]	      4139	objcopy.c	FUNCTION_51
0x4001650	     0xf85ef030000	                           jne 0x4001a45	      4139	objcopy.c	FUNCTION_51
0x4001656	        0x4883c420	                           add rsp, 0x20	      4139	objcopy.c	FUNCTION_51
0x400165a	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x400165b	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x400165c	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x400165e	            0x415d	                                 pop r13	      4139	objcopy.c	FUNCTION_51
0x4001660	            0x415e	                                 pop r14	      4139	objcopy.c	FUNCTION_51
0x4001662	              0xc3	                                     ret	      4139	objcopy.c	FUNCTION_51
0x4001663	       0xf1f440000	                   nop dword [rax + rax]	      4139	objcopy.c	FUNCTION_51
0x4001668	          0x4989fc	                            mov r12, rdi	      4139	objcopy.c	FUNCTION_51
0x400166b	          0x4889f7	                            mov rdi, rsi	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400166e	          0x4889f3	                            mov rbx, rsi	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001671	          0x4989d5	                            mov r13, rdx	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001674	      0xe807faffff	       call sym.is_strip_section.isra.17	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001679	            0x85c0	                           test eax, eax	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400167b	            0x75c5	                           jne 0x4001642	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400167d	    0x488b2d000000	            mov rbp, qword [0x04001684] 	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001684	          0x4885ed	                           test rbp, rbp	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001687	            0x7420	                            je 0x40016a9	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001689	          0x4c8b33	                    mov r14, qword [rbx]	      1242	objcopy.c	FUNCTION_19	IF_1
0x400168c	         0xf1f4000	                         nop dword [rax]	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001690	        0x488b7508	                mov rsi, qword [rbp + 8]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001694	          0x4c89f7	                            mov rdi, r14	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001697	      0xe800000000	                          call 0x400169c	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400169c	            0x85c0	                           test eax, eax	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400169e	            0x74a2	                            je 0x4001642	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x40016a0	        0x488b6d00	                    mov rbp, qword [rbp]	      1248	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x40016a4	          0x4885ed	                           test rbp, rbp	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x40016a7	            0x75e7	                           jne 0x4001690	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x40016a9	    0x8b0500000000	            mov eax, dword [0x040016af] 	      1261	objcopy.c	FUNCTION_20	IF_1
0x40016af	            0x85c0	                           test eax, eax	      1261	objcopy.c	FUNCTION_20	IF_1
0x40016b1	            0x7437	                            je 0x40016ea	      1261	objcopy.c	FUNCTION_20	IF_1
0x40016b3	      0x498b442408	                mov rax, qword [r12 + 8]	      1262	objcopy.c	FUNCTION_20	IF_1
0x40016b8	        0x83780805	                  cmp dword [rax + 8], 5	      1262	objcopy.c	FUNCTION_20	IF_1
0x40016bc	            0x752c	                           jne 0x40016ea	      1262	objcopy.c	FUNCTION_20	IF_1
0x40016be	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40016c5	        0x83780407	                  cmp dword [rax + 4], 7	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40016c9	            0x751f	                           jne 0x40016ea	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40016cb	        0xf6400a10	            test byte [rax + 0xa], 0x10 	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40016cf	     0xf856dffffff	                           jne 0x4001642	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40016d5	          0x488b33	                    mov rsi, qword [rbx]	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016d8	      0xbf00000000	                              mov edi, 0	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016dd	      0xb916000000	                           mov ecx, 0x16	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016e2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016e4	     0xf8458ffffff	                            je 0x4001642	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016ea	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      3860	objcopy.c	FUNCTION_46
0x40016ed	      0xa900000002	                     test eax, 0x2000000	      3861	objcopy.c	FUNCTION_46	IF_6
0x40016f2	     0xf854affffff	                           jne 0x4001642	      3861	objcopy.c	FUNCTION_46	IF_6
0x40016f8	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      3865	objcopy.c	FUNCTION_46
0x40016fc	        0x4c8b7368	            mov r14, qword [rbx + 0x68] 	      3864	objcopy.c	FUNCTION_46
0x4001700	          0x4885d2	                           test rdx, rdx	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001703	     0xf8439ffffff	                            je 0x4001642	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001709	          0x4d85f6	                           test r14, r14	      3867	objcopy.c	FUNCTION_46	IF_7
0x400170c	     0xf8430ffffff	                            je 0x4001642	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001712	          0xf6c401	                              test ah, 1	      4036	objcopy.c	FUNCTION_51	IF_2
0x4001715	      0x4889542408	                mov qword [rsp + 8], rdx	      4034	objcopy.c	FUNCTION_51
0x400171a	            0x740b	                            je 0x4001727	      4036	objcopy.c	FUNCTION_51	IF_2
0x400171c	      0x41f6462101	               test byte [r14 + 0x21], 1	      4037	objcopy.c	FUNCTION_51	IF_2
0x4001721	     0xf85fe000000	                           jne 0x4001825	      4037	objcopy.c	FUNCTION_51	IF_2
0x4001727	          0x4c8b23	                    mov r12, qword [rbx]	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x400172a	    0x488b1d000000	            mov rbx, qword [0x04001731] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001731	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001734	     0xf8408ffffff	                            je 0x4001642	       881	objcopy.c	FUNCTION_5	FOR_1
0x400173a	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x400173c	            0xeb1f	                           jmp 0x400175d	       881	objcopy.c	FUNCTION_5	FOR_1
0x400173e	            0x6690	                                     nop	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001740	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001742	          0x4c89e6	                            mov rsi, r12	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001745	      0xe800000000	                          call 0x400174a	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400174a	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400174d	            0x7506	                           jne 0x4001755	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400174f	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001751	        0x480f44eb	                          cmove rbp, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001755	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001758	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x400175b	            0x7433	                            je 0x4001790	       881	objcopy.c	FUNCTION_5	FOR_1
0x400175d	        0xf6431440	           test byte [rbx + 0x14], 0x40 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001761	            0x74f2	                            je 0x4001755	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001763	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001767	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x400176a	            0x75d4	                           jne 0x4001740	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x400176c	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001770	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001772	          0x4c89e6	                            mov rsi, r12	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001775	      0xe800000000	                          call 0x400177a	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400177a	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400177c	            0x75d7	                           jne 0x4001755	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400177e	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001785	      0xe9b8feffff	                           jmp 0x4001642	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x400178a	    0x660f1f440000	                    nop word [rax + rax]	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001790	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001793	     0xf84a9feffff	                            je 0x4001642	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001799	        0xf6452901	               test byte [rbp + 0x29], 1	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x400179d	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x40017a4	     0xf8498feffff	                            je 0x4001642	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x40017aa	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x40017af	      0xe800000000	                          call 0x40017b4	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x40017b4	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x40017b9	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_67	CALL_6
0x40017bb	          0x4889c3	                            mov rbx, rax	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x40017be	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_67	CALL_6
0x40017c1	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_67	CALL_6
0x40017c4	      0xe800000000	                          call 0x40017c9	        90	string3.h	FUNCTION_67	CALL_6
0x40017c9	            0x31c9	                            xor ecx, ecx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017cb	          0x4989e8	                             mov r8, rbp	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017ce	          0x4889da	                            mov rdx, rbx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017d1	          0x4c89f6	                            mov rsi, r14	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017d4	          0x4c89ef	                            mov rdi, r13	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017d7	      0xe800000000	                          call 0x40017dc	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017dc	            0x85c0	                           test eax, eax	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017de	     0xf854d020000	                           jne 0x4001a31	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017e4	            0x31c9	                            xor ecx, ecx	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017e6	            0x31ff	                            xor edi, edi	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017e8	          0x4c89f2	                            mov rdx, r14	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017eb	          0x4c89ee	                            mov rsi, r13	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017ee	    0xc70500000000	               mov dword [0x040017f8], 1	      4132	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12
0x40017f8	      0xe800000000	                          call 0x40017fd	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017fd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001802	    0x644833042528	                xor rax, qword fs:[0x28]	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x400180b	     0xf8534020000	                           jne 0x4001a45	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001811	        0x4883c420	                           add rsp, 0x20	      4139	objcopy.c	FUNCTION_51
0x4001815	          0x4889df	                            mov rdi, rbx	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001818	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x4001819	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x400181a	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x400181c	            0x415d	                                 pop r13	      4139	objcopy.c	FUNCTION_51
0x400181e	            0x415e	                                 pop r14	      4139	objcopy.c	FUNCTION_51
0x4001820	      0xe900000000	                           jmp 0x4001825	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001825	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x400182a	          0x4889de	                            mov rsi, rbx	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x400182d	          0x4c89e7	                            mov rdi, r12	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x4001830	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4039	objcopy.c	FUNCTION_51	IF_2
0x4001839	      0xe800000000	                          call 0x400183e	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x400183e	            0x85c0	                           test eax, eax	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x4001840	     0xf84c1010000	                            je 0x4001a07	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x4001846	      0x4c8d442408	                       lea r8, [rsp + 8]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x400184b	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001850	          0x4c89ea	                            mov rdx, r13	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001853	          0x4889de	                            mov rsi, rbx	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001856	          0x4c89e7	                            mov rdi, r12	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001859	      0xe800000000	                          call 0x400185e	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x400185e	            0x85c0	                           test eax, eax	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001860	     0xf84a1010000	                            je 0x4001a07	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001866	    0x8b2d00000000	            mov ebp, dword [0x0400186c] 	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x400186c	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001871	            0x85ed	                           test ebp, ebp	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4001873	            0x747e	                            je 0x40018f3	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4001875	            0x31d2	                            xor edx, edx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001877	          0x4c63d5	                         movsxd r10, ebp	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400187a	          0x4c89c0	                             mov rax, r8	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400187d	          0x49f7f2	                                 div r10	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001880	          0x4885d2	                           test rdx, rdx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001883	     0xf85d6010000	                           jne 0x4001a5f	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001889	          0x4d85c0	                             test r8, r8	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400188c	            0x7465	                            je 0x40018f3	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400188e	          0x4189eb	                           mov r11d, ebp	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001891	          0x4531c9	                            xor r9d, r9d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001894	        0x41c1eb1f	                          shr r11d, 0x1f	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001898	          0x4101eb	                           add r11d, ebp	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400189b	        0x498d6aff	                      lea rbp, [r10 - 1]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400189f	          0x41d1fb	                             sar r11d, 1	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018a2	          0x4d63db	                        movsxd r11, r11d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018a5	           0xf1f00	                         nop dword [rax]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018a8	          0x4d85db	                           test r11, r11	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018ab	            0x743e	                            je 0x40018eb	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018ad	      0x4a8d4c0d00	                     lea rcx, [rbp + r9]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018b2	        0x4f8d2419	                     lea r12, [r9 + r11]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018b6	          0x4c89ca	                             mov rdx, r9	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018b9	     0xf1f80000000	                         nop dword [rax]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018c0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4064	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018c5	        0x488d3410	                    lea rsi, [rax + rdx]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018c9	          0x4801c8	                            add rax, rcx	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018cc	        0x4883c201	                              add rdx, 1	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018d0	        0x440fb600	                   movzx r8d, byte [rax]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018d4	        0x4883e901	                              sub rcx, 1	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018d8	          0x4939d4	                            cmp r12, rdx	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018db	           0xfb63e	                   movzx edi, byte [rsi]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018de	          0x448806	                     mov byte [rsi], r8b	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018e1	          0x408838	                     mov byte [rax], dil	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018e4	            0x75da	                           jne 0x40018c0	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018e6	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018eb	          0x4d01d1	                             add r9, r10	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018ee	          0x4d39c1	                              cmp r9, r8	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018f1	            0x72b5	                            jb 0x40018a8	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018f3	    0x448b1d000000	           mov r11d, dword [0x040018fa] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40018fa	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40018ff	          0x4585db	                         test r11d, r11d	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001902	     0xf88c3000000	                            js 0x40019cb	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001908	    0x4c630d000000	          movsxd r9, dword [0x0400190f] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400190f	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001913	            0x31d2	                            xor edx, edx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001915	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400191a	          0x4963eb	                        movsxd rbp, r11d	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400191d	    0x4c6315000000	         movsxd r10, dword [0x04001924] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001924	          0x4989ec	                            mov r12, rbp	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001927	          0x49f7f1	                                  div r9	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400192a	        0x4a8d3401	                     lea rsi, [rcx + r8]	      4082	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400192e	          0x4889cf	                            mov rdi, rcx	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001931	          0x4863c2	                         movsxd rax, edx	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001934	          0x4889d3	                            mov rbx, rdx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001937	          0x4929c4	                            sub r12, rax	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400193a	          0x4901cc	                            add r12, rcx	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400193d	          0x4139d3	                           cmp r11d, edx	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4001940	        0x4b8d040c	                     lea rax, [r12 + r9]	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4001944	        0x4c0f4ce0	                          cmovl r12, rax	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4001948	          0x4c39e6	                            cmp rsi, r12	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400194b	            0x764d	                           jbe 0x400199a	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400194d	        0x458d42ff	                      lea r8d, [r10 - 1]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001951	     0xf1f80000000	                         nop dword [rax]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001958	          0x4585d2	                         test r10d, r10d	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x400195b	            0x7e2b	                           jle 0x4001988	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x400195d	          0x4c39e6	                            cmp rsi, r12	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001960	          0x4c89e0	                            mov rax, r12	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001963	        0x4b8d3c04	                     lea rdi, [r12 + r8]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001967	            0x7710	                            ja 0x4001979	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001969	            0xeb1d	                           jmp 0x4001988	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x400196b	       0xf1f440000	                   nop dword [rax + rax]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001970	        0x4883c001	                              add rax, 1	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001974	          0x4839c6	                            cmp rsi, rax	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001977	            0x740f	                            je 0x4001988	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001979	           0xfb610	                   movzx edx, byte [rax]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x400197c	        0x4883c101	                              add rcx, 1	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001980	          0x4839c7	                            cmp rdi, rax	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001983	          0x8851ff	                  mov byte [rcx - 1], dl	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001986	            0x75e8	                           jne 0x4001970	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001988	          0x4d01cc	                             add r12, r9	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400198b	          0x4c39e6	                            cmp rsi, r12	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400198e	            0x77c8	                            ja 0x4001958	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001990	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001995	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400199a	        0x498d41ff	                       lea rax, [r9 - 1]	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400199e	            0x31d2	                            xor edx, edx	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a0	          0x4829e8	                            sub rax, rbp	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a3	          0x4c01c0	                             add rax, r8	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a6	          0x49f7f1	                                  div r9	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a9	            0x31d2	                            xor edx, edx	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019ab	        0x490fafc2	                           imul rax, r10	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019af	          0x4989c0	                             mov r8, rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b2	      0x4889442408	                mov qword [rsp + 8], rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b7	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019bb	          0x49f7f1	                                  div r9	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019be	          0x4139db	                           cmp r11d, ebx	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x40019c1	            0x7d04	                           jge 0x40019c7	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x40019c3	        0x4883c001	                              add rax, 1	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x40019c7	        0x49894630	             mov qword [r14 + 0x30], rax	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x40019cb	            0x31c9	                            xor ecx, ecx	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019cd	          0x4889fa	                            mov rdx, rdi	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019d0	          0x4c89f6	                            mov rsi, r14	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019d3	          0x4c89ef	                            mov rdi, r13	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019d6	      0xe800000000	                          call 0x40019db	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019db	            0x85c0	                           test eax, eax	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019dd	            0x7571	                           jne 0x4001a50	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019df	            0x31ff	                            xor edi, edi	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019e1	            0x31c9	                            xor ecx, ecx	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019e3	          0x4c89f2	                            mov rdx, r14	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019e6	          0x4c89ee	                            mov rsi, r13	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019e9	    0xc70500000000	               mov dword [0x040019f3], 1	      4110	objcopy.c	FUNCTION_51	IF_2	IF_10
0x40019f3	      0xe800000000	                          call 0x40019f8	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019f8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x40019fd	      0xe800000000	                          call 0x4001a02	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4001a02	      0xe93bfcffff	                           jmp 0x4001642	      4113	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4001a07	            0x31ff	                            xor edi, edi	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a09	            0x31c9	                            xor ecx, ecx	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a0b	          0x4889da	                            mov rdx, rbx	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a0e	          0x4c89e6	                            mov rsi, r12	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a11	            0x31c0	                            xor eax, eax	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a13	    0xc70500000000	               mov dword [0x04001a1d], 1	      4045	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001a1d	      0xe800000000	                          call 0x4001a22	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a22	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4001a27	      0xe800000000	                          call 0x4001a2c	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4001a2c	      0xe911fcffff	                           jmp 0x4001642	      4048	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001a31	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001a36	    0x644833042528	                xor rax, qword fs:[0x28]	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001a3f	     0xf84ccfdffff	                            je 0x4001811	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001a45	      0xe800000000	                          call 0x4001a4a	      4139	objcopy.c	FUNCTION_51
0x4001a4a	    0x660f1f440000	                    nop word [rax + rax]	      4139	objcopy.c	FUNCTION_51
0x4001a50	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4001a55	      0xe800000000	                          call 0x4001a5a	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4001a5a	      0xe9e3fbffff	                           jmp 0x4001642	      4038	objcopy.c	FUNCTION_51	IF_2
0x4001a5f	          0x488b1b	                    mov rbx, qword [rbx]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a62	      0xba05000000	                              mov edx, 5	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a67	      0xbe00000000	                              mov esi, 0	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a6c	            0x31ff	                            xor edi, edi	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a6e	      0xe800000000	                          call 0x4001a73	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a73	            0x89ea	                            mov edx, ebp	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a75	          0x4889c7	                            mov rdi, rax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a78	          0x4889de	                            mov rsi, rbx	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a7b	            0x31c0	                            xor eax, eax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a7d	      0xe800000000	                          call 0x4001a82	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
get_sections	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:FOR,0:IF,0:CALL,0	4
0x4000040	          0x488b02	                    mov rax, qword [rdx]	      4149	objcopy.c	FUNCTION_52
0x4000043	          0x488930	                    mov qword [rax], rsi	      4149	objcopy.c	FUNCTION_52
0x4000046	        0x48830208	                      add qword [rdx], 8	      4150	objcopy.c	FUNCTION_52
0x400004a	              0xc3	                                     ret	      4150	objcopy.c	FUNCTION_52
eq_string	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:FOR,0:IF,0:CALL,1	7
0x40000f0	        0x4883ec08	                              sub rsp, 8	       989	objcopy.c	FUNCTION_9
0x40000f4	      0xe800000000	                          call 0x40000f9	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000f9	            0x85c0	                           test eax, eax	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000fb	           0xf94c0	                                 sete al	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000fe	        0x4883c408	                              add rsp, 8	       991	objcopy.c	FUNCTION_9
0x4000102	           0xfb6c0	                           movzx eax, al	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000105	              0xc3	                                     ret	       991	objcopy.c	FUNCTION_9
copy_file	SWITCH,2:ELSE,3:DO,0:functions,0:WHILE,0:FOR,0:IF,18:CALL,30	316
0x4005500	            0x4157	                                push r15	      3428	objcopy.c	FUNCTION_41
0x4005502	            0x4156	                                push r14	      3428	objcopy.c	FUNCTION_41
0x4005504	          0x4d89c6	                             mov r14, r8	      3428	objcopy.c	FUNCTION_41
0x4005507	            0x4155	                                push r13	      3428	objcopy.c	FUNCTION_41
0x4005509	            0x4154	                                push r12	      3428	objcopy.c	FUNCTION_41
0x400550b	          0x4989f5	                            mov r13, rsi	      3428	objcopy.c	FUNCTION_41
0x400550e	              0x55	                                push rbp	      3428	objcopy.c	FUNCTION_41
0x400550f	              0x53	                                push rbx	      3428	objcopy.c	FUNCTION_41
0x4005510	          0x4889fd	                            mov rbp, rdi	      3428	objcopy.c	FUNCTION_41
0x4005513	          0x4889d3	                            mov rbx, rdx	      3428	objcopy.c	FUNCTION_41
0x4005516	          0x4989cc	                            mov r12, rcx	      3428	objcopy.c	FUNCTION_41
0x4005519	        0x4883ec28	                           sub rsp, 0x28	      3428	objcopy.c	FUNCTION_41
0x400551d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3428	objcopy.c	FUNCTION_41
0x4005526	      0x4889442418	             mov qword [rsp + 0x18], rax	      3428	objcopy.c	FUNCTION_41
0x400552b	            0x31c0	                            xor eax, eax	      3428	objcopy.c	FUNCTION_41
0x400552d	      0xe800000000	                          call 0x4005532	      3432	objcopy.c	FUNCTION_41	CALL_1
0x4005532	        0x4883f800	                              cmp rax, 0	      3434	objcopy.c	FUNCTION_41	IF_1
0x4005536	     0xf8e04010000	                           jle 0x4005640	      3434	objcopy.c	FUNCTION_41	IF_1
0x400553c	          0x4889de	                            mov rsi, rbx	      3445	objcopy.c	FUNCTION_41	CALL_4
0x400553f	          0x4889ef	                            mov rdi, rbp	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4005542	      0xe800000000	                          call 0x4005547	      3445	objcopy.c	FUNCTION_41	CALL_4
0x4005547	          0x4885c0	                           test rax, rax	      3446	objcopy.c	FUNCTION_41	IF_3
0x400554a	          0x4889c3	                            mov rbx, rax	      3445	objcopy.c	FUNCTION_41	CALL_4
0x400554d	     0xf84fd020000	                            je 0x4005850	      3446	objcopy.c	FUNCTION_41	IF_3
0x4005553	    0x8b0d00000000	            mov ecx, dword [0x04005559] 	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4005559	          0x83f910	                           cmp ecx, 0x10	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x400555c	            0x7744	                            ja 0x40055a2	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x400555e	      0xb801000000	                              mov eax, 1	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4005563	          0x48d3e0	                             shl rax, cl	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4005566	      0xa92a020000	                         test eax, 0x22a	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x400556b	     0xf84f7000000	                            je 0x4005668	      3453	objcopy.c	FUNCTION_41	SWITCH_1
0x4005571	          0x8b7344	            mov esi, dword [rbx + 0x44] 	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4005574	            0x89f0	                            mov eax, esi	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4005576	          0xc1e805	                              shr eax, 5	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x4005579	      0x25ffff0f00	                        and eax, 0xfffff	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x400557e	          0x83f905	                              cmp ecx, 5	      3462	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4005581	     0xf8459030000	                            je 0x40058e0	      3462	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4005587	       0xd00400200	                         or eax, 0x24000	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x400558c	      0x25ffff0f00	                        and eax, 0xfffff	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4005591	          0xc1e005	                              shl eax, 5	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4005594	            0x89c2	                            mov edx, eax	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4005596	            0x89f0	                            mov eax, esi	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x4005598	      0x251f0000fe	                     and eax, 0xfe00001f	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x400559d	             0x9d0	                             or eax, edx	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x400559f	          0x894344	             mov dword [rbx + 0x44], eax	      3463	objcopy.c	FUNCTION_41	SWITCH_1	IF_4
0x40055a2	    0x8b0500000000	            mov eax, dword [0x040055a8] 	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x40055a8	          0x83f801	                              cmp eax, 1	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x40055ab	     0xf84ff000000	                            je 0x40056b0	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x40055b1	          0x83f802	                              cmp eax, 2	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x40055b4	     0xf849e000000	                            je 0x4005658	      3472	objcopy.c	FUNCTION_41	SWITCH_2
0x40055ba	      0xbe02000000	                              mov esi, 2	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40055bf	          0x4889df	                            mov rdi, rbx	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40055c2	      0xe800000000	                          call 0x40055c7	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40055c7	            0x85c0	                           test eax, eax	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40055c9	     0xf84f1000000	                            je 0x40056c0	      3485	objcopy.c	FUNCTION_41	IF_5	CALL_6
0x40055cf	          0x4d85e4	                           test r12, r12	      3492	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40055d2	    0x41bf01000000	                             mov r15d, 1	      3498	objcopy.c	FUNCTION_41	IF_5	ELSE_1
0x40055d8	     0xf8462020000	                            je 0x4005840	      3492	objcopy.c	FUNCTION_41	IF_5	IF_6
0x40055de	          0x4c89e6	                            mov rsi, r12	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40055e1	          0x4c89ef	                            mov rdi, r13	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40055e4	      0xe800000000	                          call 0x40055e9	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40055e9	          0x4885c0	                           test rax, rax	      3501	objcopy.c	FUNCTION_41	IF_5	IF_7
0x40055ec	          0x4889c5	                            mov rbp, rax	      3500	objcopy.c	FUNCTION_41	IF_5	CALL_7
0x40055ef	     0xf84fb010000	                            je 0x40057f0	      3501	objcopy.c	FUNCTION_41	IF_5	IF_7
0x40055f5	        0x488b4008	                mov rax, qword [rax + 8]	      3413	objcopy.c	FUNCTION_40	IF_1
0x40055f9	        0x83780802	                  cmp dword [rax + 8], 2	      3413	objcopy.c	FUNCTION_40	IF_1
0x40055fd	     0xf847d000000	                            je 0x4005680	      3413	objcopy.c	FUNCTION_40	IF_1
0x4005603	          0x4d89f0	                             mov r8, r14	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4005606	          0x4489f9	                           mov ecx, r15d	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4005609	          0x4c89e2	                            mov rdx, r12	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x400560c	          0x4889ee	                            mov rsi, rbp	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x400560f	          0x4889df	                            mov rdi, rbx	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4005612	      0xe899f6ffff	                   call sym.copy_archive	      3510	objcopy.c	FUNCTION_41	IF_5	CALL_10
0x4005617	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3586	objcopy.c	FUNCTION_41
0x400561c	    0x644833042528	                xor rax, qword fs:[0x28]	      3586	objcopy.c	FUNCTION_41
0x4005625	     0xf85ad030000	                           jne 0x40059d8	      3586	objcopy.c	FUNCTION_41
0x400562b	        0x4883c428	                           add rsp, 0x28	      3586	objcopy.c	FUNCTION_41
0x400562f	              0x5b	                                 pop rbx	      3586	objcopy.c	FUNCTION_41
0x4005630	              0x5d	                                 pop rbp	      3586	objcopy.c	FUNCTION_41
0x4005631	            0x415c	                                 pop r12	      3586	objcopy.c	FUNCTION_41
0x4005633	            0x415d	                                 pop r13	      3586	objcopy.c	FUNCTION_41
0x4005635	            0x415e	                                 pop r14	      3586	objcopy.c	FUNCTION_41
0x4005637	            0x415f	                                 pop r15	      3586	objcopy.c	FUNCTION_41
0x4005639	              0xc3	                                     ret	      3586	objcopy.c	FUNCTION_41
0x400563a	    0x660f1f440000	                    nop word [rax + rax]	      3586	objcopy.c	FUNCTION_41
0x4005640	     0xf8482010000	                            je 0x40057c8	      3436	objcopy.c	FUNCTION_41	IF_1	IF_2
0x4005646	    0xc70500000000	               mov dword [0x04005650], 1	      3449	objcopy.c	FUNCTION_41	IF_3
0x4005650	            0xebc5	                           jmp 0x4005617	      3450	objcopy.c	FUNCTION_41	IF_3
0x4005652	    0x660f1f440000	                    nop word [rax + rax]	      3450	objcopy.c	FUNCTION_41	IF_3
0x4005658	    0x814b44000080	         or dword [rbx + 0x44], 0x800000	      3479	objcopy.c	FUNCTION_41	SWITCH_2
0x400565f	      0xe956ffffff	                           jmp 0x40055ba	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x4005664	         0xf1f4000	                         nop dword [rax]	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x4005668	      0xa900000100	                       test eax, 0x10000	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x400566d	     0xf842fffffff	                            je 0x40055a2	      3480	objcopy.c	FUNCTION_41	SWITCH_2
0x4005673	    0x814b44000010	         or dword [rbx + 0x44], 0x100000	      3466	objcopy.c	FUNCTION_41	SWITCH_1
0x400567a	      0xe923ffffff	                           jmp 0x40055a2	      3467	objcopy.c	FUNCTION_41	SWITCH_1
0x400567f	              0x90	                                     nop	      3467	objcopy.c	FUNCTION_41	SWITCH_1
0x4005680	    0x8b1500000000	            mov edx, dword [0x04005686] 	      3508	objcopy.c	FUNCTION_41	IF_5	CALL_9
0x4005686	          0x83fa02	                              cmp edx, 2	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4005689	     0xf8461020000	                            je 0x40058f0	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x400568f	            0x31f6	                            xor esi, esi	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4005691	            0x85d2	                           test edx, edx	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4005693	        0x400f95c6	                               setne sil	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4005697	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x400569e	          0x4889ef	                            mov rdi, rbp	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x40056a1	          0xff5078	                 call qword [rax + 0x78]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x40056a4	      0xe95affffff	                           jmp 0x4005603	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x40056a9	     0xf1f80000000	                         nop dword [rax]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x40056b0	    0x814b44000080	        or dword [rbx + 0x44], 0x1800000	      3475	objcopy.c	FUNCTION_41	SWITCH_2
0x40056b7	      0xe9fefeffff	                           jmp 0x40055ba	      3476	objcopy.c	FUNCTION_41	SWITCH_2
0x40056bc	         0xf1f4000	                         nop dword [rax]	      3476	objcopy.c	FUNCTION_41	SWITCH_2
0x40056c0	      0x488d542408	                      lea rdx, [rsp + 8]	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x40056c5	      0xbe01000000	                              mov esi, 1	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x40056ca	          0x4889df	                            mov rdi, rbx	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x40056cd	      0xe800000000	                          call 0x40056d2	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x40056d2	            0x85c0	                           test eax, eax	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x40056d4	     0xf84c6010000	                            je 0x40058a0	      3512	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_11
0x40056da	          0x4d85e4	                           test r12, r12	      3519	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x40056dd	     0xf843d020000	                            je 0x4005920	      3519	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x40056e3	          0x4c89e6	                            mov rsi, r12	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x40056e6	          0x4c89ef	                            mov rdi, r13	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x40056e9	      0xe800000000	                          call 0x40056ee	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x40056ee	          0x4885c0	                           test rax, rax	      3523	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10
0x40056f1	          0x4989c4	                            mov r12, rax	      3522	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_12
0x40056f4	     0xf84f6000000	                            je 0x40057f0	      3523	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_10
0x40056fa	        0x488b4008	                mov rax, qword [rax + 8]	      3413	objcopy.c	FUNCTION_40	IF_1
0x40056fe	        0x83780802	                  cmp dword [rax + 8], 2	      3413	objcopy.c	FUNCTION_40	IF_1
0x4005702	     0xf8460010000	                            je 0x4005868	      3413	objcopy.c	FUNCTION_40	IF_1
0x4005708	        0x488b5308	                mov rdx, qword [rbx + 8]	      2422	objcopy.c	FUNCTION_38	IF_1
0x400570c	          0x8b400c	              mov eax, dword [rax + 0xc]	      2422	objcopy.c	FUNCTION_38	IF_1
0x400570f	          0x8b520c	              mov edx, dword [rdx + 0xc]	      2422	objcopy.c	FUNCTION_38	IF_1
0x4005712	          0x83fa02	                              cmp edx, 2	      2424	objcopy.c	FUNCTION_38	IF_1
0x4005715	           0xf95c1	                                setne cl	      2424	objcopy.c	FUNCTION_38	IF_1
0x4005718	            0x39c2	                            cmp edx, eax	      2424	objcopy.c	FUNCTION_38	IF_1
0x400571a	           0xf95c2	                                setne dl	      2424	objcopy.c	FUNCTION_38	IF_1
0x400571d	            0x84d1	                             test cl, dl	      2424	objcopy.c	FUNCTION_38	IF_1
0x400571f	            0x743f	                            je 0x4005760	      2424	objcopy.c	FUNCTION_38	IF_1
0x4005721	          0x83f802	                              cmp eax, 2	      2424	objcopy.c	FUNCTION_38	IF_1
0x4005724	            0x743a	                            je 0x4005760	      2424	objcopy.c	FUNCTION_38	IF_1
0x4005726	            0x31ff	                            xor edi, edi	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4005728	      0xba05000000	                              mov edx, 5	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x400572d	      0xbe00000000	                              mov esi, 0	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4005732	      0xe800000000	                          call 0x4005737	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4005737	          0x4889c7	                            mov rdi, rax	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x400573a	            0x31c0	                            xor eax, eax	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x400573c	      0xe800000000	                          call 0x4005741	      2428	objcopy.c	FUNCTION_38	IF_1	CALL_2
0x4005741	    0xc70500000000	               mov dword [0x0400574b], 1	      3533	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11
0x400574b	          0x4c89e7	                            mov rdi, r12	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x400574e	      0xe800000000	                          call 0x4005753	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005753	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005755	           0xf94c0	                                 sete al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005758	            0xeb46	                           jmp 0x40057a0	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x400575a	    0x660f1f440000	                    nop word [rax + rax]	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005760	         0xfb67344	           movzx esi, byte [rbx + 0x44] 	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4005764	          0x4c89e7	                            mov rdi, r12	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4005767	          0x83e607	                              and esi, 7	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x400576a	      0xe800000000	                          call 0x400576f	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x400576f	            0x85c0	                           test eax, eax	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4005771	     0xf84b9010000	                            je 0x4005930	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4005777	          0x4c89f2	                            mov rdx, r14	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x400577a	          0x4c89e6	                            mov rsi, r12	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x400577d	          0x4889df	                            mov rdi, rbx	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4005780	      0xe8ebc8ffff	            call sym.copy_object.part.22	      2432	objcopy.c	FUNCTION_38	IF_2	CALL_3
0x4005785	            0x85c0	                           test eax, eax	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4005787	            0x74b8	                            je 0x4005741	      3532	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_11	CALL_15
0x4005789	    0x8b0500000000	            mov eax, dword [0x0400578f] 	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x400578f	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005791	            0x75b8	                           jne 0x400574b	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005793	          0x4c89e7	                            mov rdi, r12	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x4005796	      0xe800000000	                          call 0x400579b	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x400579b	            0x85c0	                           test eax, eax	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x400579d	           0xf94c0	                                 sete al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x40057a0	            0x84c0	                             test al, al	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x40057a2	            0x746c	                            je 0x4005810	      3539	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_17
0x40057a4	            0x31c9	                            xor ecx, ecx	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x40057a6	            0x31d2	                            xor edx, edx	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x40057a8	            0x31f6	                            xor esi, esi	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x40057aa	          0x4c89ef	                            mov rdi, r13	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x40057ad	            0x31c0	                            xor eax, eax	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x40057af	    0xc70500000000	               mov dword [0x040057b9], 1	      3541	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12
0x40057b9	      0xe800000000	                          call 0x40057be	      3542	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12	CALL_18
0x40057be	      0xe954feffff	                           jmp 0x4005617	      3543	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12
0x40057c3	       0xf1f440000	                   nop dword [rax + rax]	      3543	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_12
0x40057c8	            0x31ff	                            xor edi, edi	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057ca	      0xba05000000	                              mov edx, 5	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057cf	      0xbe00000000	                              mov esi, 0	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057d4	      0xe800000000	                          call 0x40057d9	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057d9	          0x4889ee	                            mov rsi, rbp	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057dc	          0x4889c7	                            mov rdi, rax	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057df	            0x31c0	                            xor eax, eax	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057e1	      0xe800000000	                          call 0x40057e6	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057e6	      0xe95bfeffff	                           jmp 0x4005646	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057eb	       0xf1f440000	                   nop dword [rax + rax]	      3437	objcopy.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x40057f0	            0x31c9	                            xor ecx, ecx	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x40057f2	            0x31d2	                            xor edx, edx	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x40057f4	            0x31f6	                            xor esi, esi	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x40057f6	          0x4c89ef	                            mov rdi, r13	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x40057f9	            0x31c0	                            xor eax, eax	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x40057fb	      0xe800000000	                          call 0x4005800	      3503	objcopy.c	FUNCTION_41	IF_5	IF_7	CALL_8
0x4005800	    0xc70500000000	               mov dword [0x0400580a], 1	      3504	objcopy.c	FUNCTION_41	IF_5	IF_7
0x400580a	      0xe908feffff	                           jmp 0x4005617	      3505	objcopy.c	FUNCTION_41	IF_5	IF_7
0x400580f	              0x90	                                     nop	      3505	objcopy.c	FUNCTION_41	IF_5	IF_7
0x4005810	          0x4889df	                            mov rdi, rbx	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4005813	      0xe800000000	                          call 0x4005818	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4005818	            0x85c0	                           test eax, eax	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x400581a	     0xf85f7fdffff	                           jne 0x4005617	      3546	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_19
0x4005820	            0x31c9	                            xor ecx, ecx	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005822	            0x31d2	                            xor edx, edx	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005824	            0x31f6	                            xor esi, esi	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005826	          0x4889ef	                            mov rdi, rbp	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005829	    0xc70500000000	               mov dword [0x04005833], 1	      3548	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13
0x4005833	      0xe800000000	                          call 0x4005838	      3549	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13	CALL_20
0x4005838	      0xe9dafdffff	                           jmp 0x4005617	      3550	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13
0x400583d	           0xf1f00	                         nop dword [rax]	      3550	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_13
0x4005840	        0x488b4308	                mov rax, qword [rbx + 8]	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x4005844	          0x4531ff	                          xor r15d, r15d	      3495	objcopy.c	FUNCTION_41	IF_5	IF_6
0x4005847	          0x4c8b20	                    mov r12, qword [rax]	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x400584a	      0xe98ffdffff	                           jmp 0x40055de	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x400584f	              0x90	                                     nop	      3494	objcopy.c	FUNCTION_41	IF_5	IF_6
0x4005850	            0x31c9	                            xor ecx, ecx	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4005852	            0x31d2	                            xor edx, edx	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4005854	            0x31f6	                            xor esi, esi	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4005856	          0x4889ef	                            mov rdi, rbp	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4005859	            0x31c0	                            xor eax, eax	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x400585b	      0xe800000000	                          call 0x4005860	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4005860	      0xe9e1fdffff	                           jmp 0x4005646	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4005865	           0xf1f00	                         nop dword [rax]	      3448	objcopy.c	FUNCTION_41	IF_3	CALL_5
0x4005868	    0x8b1500000000	            mov edx, dword [0x0400586e] 	      3530	objcopy.c	FUNCTION_41	ELSE_2	IF_8	CALL_14
0x400586e	          0x83fa02	                              cmp edx, 2	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4005871	     0xf8421010000	                            je 0x4005998	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4005877	            0x31f6	                            xor esi, esi	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4005879	            0x85d2	                           test edx, edx	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x400587b	        0x400f95c6	                               setne sil	      3415	objcopy.c	FUNCTION_40	IF_1	IF_2
0x400587f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4005886	          0x4c89e7	                            mov rdi, r12	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4005889	          0xff5078	                 call qword [rax + 0x78]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x400588c	      0x498b442408	                mov rax, qword [r12 + 8]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4005891	      0xe972feffff	                           jmp 0x4005708	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x4005896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3418	objcopy.c	FUNCTION_40	IF_1	CALL_2
0x40058a0	      0xe800000000	                          call 0x40058a5	      3555	objcopy.c	FUNCTION_41	ELSE_3	CALL_21
0x40058a5	      0x488d542410	                   lea rdx, [rsp + 0x10]	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40058aa	      0xbe03000000	                              mov esi, 3	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40058af	          0x4889df	                            mov rdi, rbx	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40058b2	          0x4189c7	                           mov r15d, eax	      3555	objcopy.c	FUNCTION_41	ELSE_3	CALL_21
0x40058b5	      0xe800000000	                          call 0x40058ba	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40058ba	            0x85c0	                           test eax, eax	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40058bc	     0xf8486000000	                            je 0x4005948	      3558	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_22
0x40058c2	        0x4183ff0d	                           cmp r15d, 0xd	      3561	objcopy.c	FUNCTION_41	ELSE_3	IF_14	IF_15
0x40058c6	     0xf850efeffff	                           jne 0x40056da	      3561	objcopy.c	FUNCTION_41	ELSE_3	IF_14	IF_15
0x40058cc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x40058d1	      0xe800000000	                          call 0x40058d6	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x40058d6	      0xe9fffdffff	                           jmp 0x40056da	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x40058db	       0xf1f440000	                   nop dword [rax + rax]	      3562	objcopy.c	FUNCTION_41	ELSE_3	IF_14	CALL_23
0x40058e0	          0x80cc40	                             or ah, 0x40	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x40058e3	      0xe9a9fcffff	                           jmp 0x4005591	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x40058e8	     0xf1f84000000	                   nop dword [rax + rax]	      3459	objcopy.c	FUNCTION_41	SWITCH_1
0x40058f0	        0x488b5308	                mov rdx, qword [rbx + 8]	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x40058f4	      0xbe01000000	                              mov esi, 1	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x40058f9	        0x837a0802	                  cmp dword [rdx + 8], 2	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x40058fd	     0xf8594fdffff	                           jne 0x4005697	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x4005903	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x400590a	            0x31f6	                            xor esi, esi	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x400590c	          0x8b4a74	            mov ecx, dword [rdx + 0x74] 	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x400590f	            0x85c9	                           test ecx, ecx	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4005911	        0x400f95c6	                               setne sil	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4005915	      0xe97dfdffff	                           jmp 0x4005697	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x400591a	    0x660f1f440000	                    nop word [rax + rax]	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x4005920	        0x488b4308	                mov rax, qword [rbx + 8]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4005924	          0x4c8b20	                    mov r12, qword [rax]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4005927	      0xe9b7fdffff	                           jmp 0x40056e3	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x400592c	         0xf1f4000	                         nop dword [rax]	      3520	objcopy.c	FUNCTION_41	ELSE_2	IF_8	IF_9
0x4005930	            0x31c9	                            xor ecx, ecx	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4005932	            0x31d2	                            xor edx, edx	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4005934	          0x4c89e6	                            mov rsi, r12	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4005937	            0x31ff	                            xor edi, edi	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4005939	      0xe800000000	                          call 0x400593e	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x400593e	      0xe9fefdffff	                           jmp 0x4005741	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4005943	       0xf1f440000	                   nop dword [rax + rax]	      2434	objcopy.c	FUNCTION_38	IF_2	CALL_4
0x4005948	      0xe800000000	                          call 0x400594d	      3566	objcopy.c	FUNCTION_41	ELSE_3	CALL_24
0x400594d	          0x4139c7	                           cmp r15d, eax	      3568	objcopy.c	FUNCTION_41	ELSE_3	IF_16
0x4005950	            0x89c3	                            mov ebx, eax	      3566	objcopy.c	FUNCTION_41	ELSE_3	CALL_24
0x4005952	            0x7408	                            je 0x400595c	      3568	objcopy.c	FUNCTION_41	ELSE_3	IF_16
0x4005954	          0x4489ff	                           mov edi, r15d	      3569	objcopy.c	FUNCTION_41	ELSE_3	CALL_25
0x4005957	      0xe800000000	                          call 0x400595c	      3569	objcopy.c	FUNCTION_41	ELSE_3	CALL_25
0x400595c	            0x31c9	                            xor ecx, ecx	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x400595e	            0x31d2	                            xor edx, edx	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4005960	            0x31f6	                            xor esi, esi	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4005962	            0x31c0	                            xor eax, eax	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4005964	          0x4889ef	                            mov rdi, rbp	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x4005967	      0xe800000000	                          call 0x400596c	      3571	objcopy.c	FUNCTION_41	ELSE_3	CALL_26
0x400596c	        0x4183ff0d	                           cmp r15d, 0xd	      3573	objcopy.c	FUNCTION_41	ELSE_3	IF_17
0x4005970	            0x7450	                            je 0x40059c2	      3573	objcopy.c	FUNCTION_41	ELSE_3	IF_17
0x4005972	          0x83fb0d	                            cmp ebx, 0xd	      3578	objcopy.c	FUNCTION_41	ELSE_3	IF_18
0x4005975	     0xf85cbfcffff	                           jne 0x4005646	      3578	objcopy.c	FUNCTION_41	ELSE_3	IF_18
0x400597b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3580	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_29
0x4005980	      0xe800000000	                          call 0x4005985	      3580	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_29
0x4005985	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x400598a	      0xe800000000	                          call 0x400598f	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x400598f	      0xe9b2fcffff	                           jmp 0x4005646	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x4005994	         0xf1f4000	                         nop dword [rax]	      3581	objcopy.c	FUNCTION_41	ELSE_3	IF_18	CALL_30
0x4005998	        0x488b5308	                mov rdx, qword [rbx + 8]	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x400599c	      0xbe01000000	                              mov esi, 1	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x40059a1	        0x837a0802	                  cmp dword [rdx + 8], 2	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x40059a5	     0xf85d4feffff	                           jne 0x400587f	      3416	objcopy.c	FUNCTION_40	IF_1	IF_2
0x40059ab	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x40059b2	            0x31f6	                            xor esi, esi	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x40059b4	          0x8b5274	            mov edx, dword [rdx + 0x74] 	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x40059b7	            0x85d2	                           test edx, edx	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x40059b9	        0x400f95c6	                               setne sil	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x40059bd	      0xe9bdfeffff	                           jmp 0x400587f	      3417	objcopy.c	FUNCTION_40	IF_1	CALL_1
0x40059c2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3575	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_27
0x40059c7	      0xe800000000	                          call 0x40059cc	      3575	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_27
0x40059cc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x40059d1	      0xe800000000	                          call 0x40059d6	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x40059d6	            0xeb9a	                           jmp 0x4005972	      3576	objcopy.c	FUNCTION_41	ELSE_3	IF_17	CALL_28
0x40059d8	      0xe800000000	                  call section_end..text	      3586	objcopy.c	FUNCTION_41
add_specific_symbols	SWITCH,1:ELSE,0:DO,0:functions,0:WHILE,0:FOR,5:IF,9:CALL,14	198
0x4000520	            0x4157	                                push r15	      1038	objcopy.c	FUNCTION_14
0x4000522	            0x4156	                                push r14	      1038	objcopy.c	FUNCTION_14
0x4000524	            0x4155	                                push r13	      1038	objcopy.c	FUNCTION_14
0x4000526	            0x4154	                                push r12	      1038	objcopy.c	FUNCTION_14
0x4000528	          0x4989f4	                            mov r12, rsi	      1038	objcopy.c	FUNCTION_14
0x400052b	              0x55	                                push rbp	      1038	objcopy.c	FUNCTION_14
0x400052c	              0x53	                                push rbx	      1038	objcopy.c	FUNCTION_14
0x400052d	          0x4889fd	                            mov rbp, rdi	      1038	objcopy.c	FUNCTION_14
0x4000530	        0x4883ec08	                              sub rsp, 8	      1038	objcopy.c	FUNCTION_14
0x4000534	      0xe800000000	                          call 0x4000539	      1045	objcopy.c	FUNCTION_14	CALL_1
0x4000539	          0x4885c0	                           test rax, rax	      1046	objcopy.c	FUNCTION_14	IF_1
0x400053c	            0x7519	                           jne 0x4000557	      1046	objcopy.c	FUNCTION_14	IF_1
0x400053e	    0xc70500000000	               mov dword [0x04000548], 1	      1048	objcopy.c	FUNCTION_14	IF_1
0x4000548	        0x4883c408	                              add rsp, 8	      1145	objcopy.c	FUNCTION_14
0x400054c	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x400054d	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x400054e	            0x415c	                                 pop r12	      1145	objcopy.c	FUNCTION_14
0x4000550	            0x415d	                                 pop r13	      1145	objcopy.c	FUNCTION_14
0x4000552	            0x415e	                                 pop r14	      1145	objcopy.c	FUNCTION_14
0x4000554	            0x415f	                                 pop r15	      1145	objcopy.c	FUNCTION_14
0x4000556	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
0x4000557	        0x488d7802	                      lea rdi, [rax + 2]	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400055b	          0x4889c3	                            mov rbx, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400055e	      0xe800000000	                          call 0x4000563	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000563	      0xbe00000000	                              mov esi, 0	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000568	          0x4889ef	                            mov rdi, rbp	      1053	objcopy.c	FUNCTION_14	CALL_3
0x400056b	          0x4989c6	                            mov r14, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400056e	      0xe800000000	                          call 0x4000573	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000573	          0x4885c0	                           test rax, rax	      1054	objcopy.c	FUNCTION_14	IF_2
0x4000576	          0x4989c5	                            mov r13, rax	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000579	     0xf8418020000	                            je 0x4000797	      1054	objcopy.c	FUNCTION_14	IF_2
0x400057f	          0x4889c1	                            mov rcx, rax	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000582	          0x4889da	                            mov rdx, rbx	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000585	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_94	CALL_9
0x400058a	          0x4c89f7	                            mov rdi, r14	       295	stdio2.h	FUNCTION_94	CALL_9
0x400058d	      0xe800000000	                          call 0x4000592	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000592	          0x4885c0	                           test rax, rax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000595	     0xf84de010000	                            je 0x4000779	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400059b	          0x4c89ef	                            mov rdi, r13	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400059e	      0xe800000000	                          call 0x40005a3	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x40005a3	            0x85c0	                           test eax, eax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x40005a5	     0xf85ce010000	                           jne 0x4000779	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x40005ab	          0x4c89ef	                            mov rdi, r13	      1060	objcopy.c	FUNCTION_14	CALL_11
0x40005ae	    0x41bd01000000	                             mov r13d, 1	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40005b4	      0xe800000000	                          call 0x40005b9	      1060	objcopy.c	FUNCTION_14	CALL_11
0x40005b9	      0x41c6041e0a	               mov byte [r14 + rbx], 0xa	      1061	objcopy.c	FUNCTION_14
0x40005be	    0x41c6441e0100	             mov byte [r14 + rbx + 1], 0	      1062	objcopy.c	FUNCTION_14
0x40005c4	        0x41803e00	                       cmp byte [r14], 0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40005c8	     0xf847affffff	                            je 0x4000548	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40005ce	            0x6690	                                     nop	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40005d0	          0x4c89f3	                            mov rbx, r14	      1038	objcopy.c	FUNCTION_14
0x40005d3	            0xeb16	                           jmp 0x40005eb	      1038	objcopy.c	FUNCTION_14
0x40005d5	           0xf1f00	                         nop dword [rax]	      1038	objcopy.c	FUNCTION_14
0x40005d8	            0x3c0d	                             cmp al, 0xd	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005da	     0xf84b8000000	                            je 0x4000698	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005e0	            0x3c23	                            cmp al, 0x23	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005e2	            0x7503	                           jne 0x40005e7	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005e4	          0xc60300	                       mov byte [rbx], 0	      1101	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005e7	        0x4883c301	                              add rbx, 1	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x40005eb	           0xfb603	                   movzx eax, byte [rbx]	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005ee	            0x3c0a	                             cmp al, 0xa	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005f0	     0xf84ba000000	                            je 0x40006b0	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005f6	            0x7fe0	                            jg 0x40005d8	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005f8	            0x84c0	                             test al, al	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005fa	            0x75eb	                           jne 0x40005e7	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005fc	        0x410fb606	                   movzx eax, byte [r14]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000600	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000602	            0x740c	                            je 0x4000610	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000604	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000606	            0x7518	                           jne 0x4000620	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000608	     0xf1f84000000	                   nop dword [rax + rax]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000610	        0x4983c601	                              add r14, 1	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000614	        0x410fb606	                   movzx eax, byte [r14]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000618	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x400061a	            0x74f4	                            je 0x4000610	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x400061c	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x400061e	            0x74f0	                            je 0x4000610	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000620	            0x3c09	                               cmp al, 9	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000622	     0xf8449010000	                            je 0x4000771	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000628	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400062a	     0xf8438010000	                            je 0x4000768	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000630	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000632	     0xf8430010000	                            je 0x4000768	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000638	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400063a	     0xf8428010000	                            je 0x4000768	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000640	          0x4d89f7	                            mov r15, r14	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000643	       0xf1f440000	                   nop dword [rax + rax]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000648	        0x4983c701	                              add r15, 1	      1120	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400064c	        0x410fb607	                   movzx eax, byte [r15]	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000650	            0x3c20	                            cmp al, 0x20	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000652	            0x7474	                            je 0x40006c8	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000654	            0x3c09	                               cmp al, 9	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000656	            0x7470	                            je 0x40006c8	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000658	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400065a	            0x7408	                            je 0x4000664	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400065c	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400065e	            0x7404	                            je 0x4000664	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000660	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000662	            0x75e4	                           jne 0x4000648	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000664	          0x4d39fe	                            cmp r14, r15	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000667	        0x41c60700	                       mov byte [r15], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x400066b	     0xf82bf000000	                            jb 0x4000730	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000671	        0x4183c501	                             add r13d, 1	      1143	objcopy.c	FUNCTION_14	FOR_1
0x4000675	        0x807b0100	                   cmp byte [rbx + 1], 0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000679	        0x4c8d7301	                      lea r14, [rbx + 1]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x400067d	     0xf854dffffff	                           jne 0x40005d0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000683	        0x4883c408	                              add rsp, 8	      1145	objcopy.c	FUNCTION_14
0x4000687	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x4000688	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x4000689	            0x415c	                                 pop r12	      1145	objcopy.c	FUNCTION_14
0x400068b	            0x415d	                                 pop r13	      1145	objcopy.c	FUNCTION_14
0x400068d	            0x415e	                                 pop r14	      1145	objcopy.c	FUNCTION_14
0x400068f	            0x415f	                                 pop r15	      1145	objcopy.c	FUNCTION_14
0x4000691	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
0x4000692	    0x660f1f440000	                    nop word [rax + rax]	      1145	objcopy.c	FUNCTION_14
0x4000698	            0x31c0	                            xor eax, eax	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400069a	        0x807b010a	                 cmp byte [rbx + 1], 0xa	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400069e	          0xc60300	                       mov byte [rbx], 0	      1086	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40006a1	           0xf94c0	                                 sete al	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x40006a4	          0x4801c3	                            add rbx, rax	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x40006a7	      0xe950ffffff	                           jmp 0x40005fc	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x40006ac	         0xf1f4000	                         nop dword [rax]	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x40006b0	            0x31c0	                            xor eax, eax	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006b2	        0x807b010d	                 cmp byte [rbx + 1], 0xd	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006b6	          0xc60300	                       mov byte [rbx], 0	      1078	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40006b9	           0xf94c0	                                 sete al	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006bc	          0x4801c3	                            add rbx, rax	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006bf	      0xe938ffffff	                           jmp 0x40005fc	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006c4	         0xf1f4000	                         nop dword [rax]	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006c8	            0x3c0a	                             cmp al, 0xa	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006ca	            0x7498	                            je 0x4000664	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006cc	            0x3c0d	                             cmp al, 0xd	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006ce	            0x7494	                            je 0x4000664	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006d0	            0x84c0	                             test al, al	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006d2	            0x7490	                            je 0x4000664	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006d4	      0x410fb65701	               movzx edx, byte [r15 + 1]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006d9	        0x498d4701	                      lea rax, [r15 + 1]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006dd	          0x80fa20	                            cmp dl, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006e0	            0x7512	                           jne 0x40006f4	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006e2	    0x660f1f440000	                    nop word [rax + rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006e8	        0x4883c001	                              add rax, 1	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006ec	           0xfb610	                   movzx edx, byte [rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006ef	          0x80fa20	                            cmp dl, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006f2	            0x74f4	                            je 0x40006e8	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006f4	          0x80fa09	                               cmp dl, 9	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006f7	            0x74ef	                            je 0x40006e8	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006f9	          0x80fa0d	                             cmp dl, 0xd	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x40006fc	            0x7652	                           jbe 0x4000750	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x40006fe	            0x31ff	                            xor edi, edi	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000700	      0xba05000000	                              mov edx, 5	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000705	      0xbe00000000	                              mov esi, 0	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400070a	      0xe800000000	                          call 0x400070f	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400070f	          0x4489ea	                           mov edx, r13d	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000712	          0x4889c7	                            mov rdi, rax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000715	          0x4889ee	                            mov rsi, rbp	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000718	            0x31c0	                            xor eax, eax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400071a	      0xe800000000	                          call 0x400071f	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400071f	          0x4d39fe	                            cmp r14, r15	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000722	        0x41c60700	                       mov byte [r15], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x4000726	     0xf8345ffffff	                           jae 0x4000671	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x400072c	         0xf1f4000	                         nop dword [rax]	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000730	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000735	          0x4c89f6	                            mov rsi, r14	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000738	          0x4c89e7	                            mov rdi, r12	      1020	objcopy.c	FUNCTION_12	CALL_1
0x400073b	      0xe800000000	                          call 0x4000740	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000740	          0x4c8930	                    mov qword [rax], r14	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000743	      0xe929ffffff	                           jmp 0x4000671	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000748	     0xf1f84000000	                   nop dword [rax + rax]	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000750	      0xb801240000	                         mov eax, 0x2401	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000755	        0x480fa3d0	                             bt rax, rdx	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000759	     0xf8205ffffff	                            jb 0x4000664	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400075f	            0xeb9d	                           jmp 0x40006fe	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000761	     0xf1f80000000	                         nop dword [rax]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000768	        0x41c60600	                       mov byte [r14], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x400076c	      0xe900ffffff	                           jmp 0x4000671	      1135	objcopy.c	FUNCTION_14	FOR_1
0x4000771	          0x4d89f7	                            mov r15, r14	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000774	      0xe95bffffff	                           jmp 0x40006d4	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000779	      0xbe00000000	                              mov esi, 0	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400077e	            0x31ff	                            xor edi, edi	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000780	      0xba05000000	                              mov edx, 5	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000785	      0xe800000000	                          call 0x400078a	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400078a	          0x4889ee	                            mov rsi, rbp	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400078d	          0x4889c7	                            mov rdi, rax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000790	            0x31c0	                            xor eax, eax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000792	      0xe800000000	                          call 0x4000797	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000797	      0xe800000000	                          call 0x400079c	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400079c	            0x8b38	                    mov edi, dword [rax]	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400079e	      0xe800000000	                          call 0x40007a3	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007a3	      0xba05000000	                              mov edx, 5	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007a8	          0x4889c3	                            mov rbx, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007ab	      0xbe00000000	                              mov esi, 0	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007b0	            0x31ff	                            xor edi, edi	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007b2	      0xe800000000	                          call 0x40007b7	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007b7	          0x4889da	                            mov rdx, rbx	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007ba	          0x4889c7	                            mov rdi, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007bd	          0x4889ee	                            mov rsi, rbp	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007c0	            0x31c0	                            xor eax, eax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007c2	      0xe800000000	                          call 0x40007c7	      1055	objcopy.c	FUNCTION_14	CALL_6
eq_string_redefnode	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:FOR,0:IF,0:CALL,1	9
0x40000d0	        0x4883ec08	                              sub rsp, 8	       961	objcopy.c	FUNCTION_6
0x40000d4	          0x488b36	                    mov rsi, qword [rsi]	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000d7	          0x488b3f	                    mov rdi, qword [rdi]	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000da	      0xe800000000	                          call 0x40000df	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000df	            0x85c0	                           test eax, eax	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000e1	           0xf94c0	                                 sete al	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000e4	        0x4883c408	                              add rsp, 8	       965	objcopy.c	FUNCTION_6
0x40000e8	           0xfb6c0	                           movzx eax, al	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000eb	              0xc3	                                     ret	       965	objcopy.c	FUNCTION_6
main	SWITCH,0:ELSE,1:DO,0:functions,0:WHILE,0:FOR,0:IF,4:CALL,17	2629
0x4000040	          0x488b02	                    mov rax, qword [rdx]	      4149	objcopy.c	FUNCTION_52
0x4000043	          0x488930	                    mov qword [rax], rsi	      4149	objcopy.c	FUNCTION_52
0x4000046	        0x48830208	                      add qword [rdx], 8	      4150	objcopy.c	FUNCTION_52
0x400004a	              0xc3	                                     ret	      4150	objcopy.c	FUNCTION_52
0x400004b	       0xf1f440000	                   nop dword [rax + rax]	      4150	objcopy.c	FUNCTION_52
0x4000050	          0x488b3f	                    mov rdi, qword [rdi]	      4165	objcopy.c	FUNCTION_53
0x4000053	          0x488b0e	                    mov rcx, qword [rsi]	      4166	objcopy.c	FUNCTION_53
0x4000056	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      4167	objcopy.c	FUNCTION_53	IF_1
0x4000059	          0x8b4120	            mov eax, dword [rcx + 0x20] 	      4166	objcopy.c	FUNCTION_53
0x400005c	    0x81e202010000	                          and edx, 0x102	      4167	objcopy.c	FUNCTION_53	IF_1
0x4000062	      0x2502010000	                          and eax, 0x102	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000067	    0x81fa02010000	                          cmp edx, 0x102	      4167	objcopy.c	FUNCTION_53	IF_1
0x400006d	            0x7441	                            je 0x40000b0	      4167	objcopy.c	FUNCTION_53	IF_1
0x400006f	      0x3d02010000	                          cmp eax, 0x102	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000074	            0x742a	                            je 0x40000a0	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000076	        0x488b7130	            mov rsi, qword [rcx + 0x30] 	      4182	objcopy.c	FUNCTION_53	IF_4
0x400007a	        0x48397730	            cmp qword [rdi + 0x30], rsi 	      4182	objcopy.c	FUNCTION_53	IF_4
0x400007e	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4000083	            0x7720	                            ja 0x40000a5	      4182	objcopy.c	FUNCTION_53	IF_4
0x4000085	            0x7219	                            jb 0x40000a0	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4000087	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      4188	objcopy.c	FUNCTION_53	IF_6
0x400008b	        0x48397738	            cmp qword [rdi + 0x38], rsi 	      4188	objcopy.c	FUNCTION_53	IF_6
0x400008f	            0x19d2	                            sbb edx, edx	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000091	        0x48397738	            cmp qword [rdi + 0x38], rsi 	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000095	           0xf46c2	                         cmovbe eax, edx	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000098	              0xc3	                                     ret	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000099	     0xf1f80000000	                         nop dword [rax]	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x40000a0	      0xb8ffffffff	                     mov eax, 0xffffffff	      4172	objcopy.c	FUNCTION_53	IF_1	IF_2
0x40000a5	            0xf3c3	                                     ret	      4194	objcopy.c	FUNCTION_53
0x40000a7	    0x660f1f840000	                    nop word [rax + rax]	      4194	objcopy.c	FUNCTION_53
0x40000b0	            0x89c2	                            mov edx, eax	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000b2	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000b7	    0x81fa02010000	                          cmp edx, 0x102	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000bd	            0x74b7	                            je 0x4000076	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000bf	            0xf3c3	                                     ret	      4194	objcopy.c	FUNCTION_53
0x40000c1	       0xf1f440000	                   nop dword [rax + rax]	      4194	objcopy.c	FUNCTION_53
0x40000c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4194	objcopy.c	FUNCTION_53
0x40000d0	        0x4883ec08	                              sub rsp, 8	       961	objcopy.c	FUNCTION_6
0x40000d4	          0x488b36	                    mov rsi, qword [rsi]	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000d7	          0x488b3f	                    mov rdi, qword [rdi]	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000da	      0xe800000000	                          call 0x40000df	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000df	            0x85c0	                           test eax, eax	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000e1	           0xf94c0	                                 sete al	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000e4	        0x4883c408	                              add rsp, 8	       965	objcopy.c	FUNCTION_6
0x40000e8	           0xfb6c0	                           movzx eax, al	       964	objcopy.c	FUNCTION_6	CALL_1
0x40000eb	              0xc3	                                     ret	       965	objcopy.c	FUNCTION_6
0x40000ec	         0xf1f4000	                         nop dword [rax]	       965	objcopy.c	FUNCTION_6
0x40000f0	        0x4883ec08	                              sub rsp, 8	       989	objcopy.c	FUNCTION_9
0x40000f4	      0xe800000000	                          call 0x40000f9	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000f9	            0x85c0	                           test eax, eax	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000fb	           0xf94c0	                                 sete al	       990	objcopy.c	FUNCTION_9	CALL_1
0x40000fe	        0x4883c408	                              add rsp, 8	       991	objcopy.c	FUNCTION_9
0x4000102	           0xfb6c0	                           movzx eax, al	       990	objcopy.c	FUNCTION_9	CALL_1
0x4000105	              0xc3	                                     ret	       991	objcopy.c	FUNCTION_9
0x4000106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       991	objcopy.c	FUNCTION_9
0x4000110	        0x488d5704	                      lea rdx, [rdi + 4]	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000114	          0xc60770	                    mov byte [rdi], 0x70	      4592	objcopy.c	FUNCTION_59
0x4000117	        0xc6470165	                mov byte [rdi + 1], 0x65	      4593	objcopy.c	FUNCTION_59
0x400011b	        0xc6470269	                mov byte [rdi + 2], 0x69	      4594	objcopy.c	FUNCTION_59
0x400011f	          0x4889f8	                            mov rax, rdi	      4591	objcopy.c	FUNCTION_59
0x4000122	      0xb905000000	                              mov ecx, 5	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000127	      0xbf00000000	                              mov edi, 0	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x400012c	          0x4889d6	                            mov rsi, rdx	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x400012f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000131	            0x741b	                            je 0x400014e	      4596	objcopy.c	FUNCTION_59	IF_1	CALL_1
0x4000133	              0x53	                                push rbx	      4591	objcopy.c	FUNCTION_59
0x4000134	      0xbe00000000	                              mov esi, 0	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000139	          0x4889d7	                            mov rdi, rdx	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013c	          0x4889c3	                            mov rbx, rax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013f	      0xe800000000	                          call 0x4000144	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000144	            0x85c0	                           test eax, eax	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000146	            0x7504	                           jne 0x400014c	      4603	objcopy.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000148	        0xc643072d	                mov byte [rbx + 7], 0x2d	      4606	objcopy.c	FUNCTION_59	ELSE_1	IF_2
0x400014c	              0x5b	                                 pop rbx	      4608	objcopy.c	FUNCTION_59
0x400014d	              0xc3	                                     ret	      4608	objcopy.c	FUNCTION_59
0x400014e	        0xc6400533	                mov byte [rax + 5], 0x33	      4599	objcopy.c	FUNCTION_59	IF_1
0x4000152	        0xc6400638	                mov byte [rax + 6], 0x38	      4600	objcopy.c	FUNCTION_59	IF_1
0x4000156	        0xc6400736	                mov byte [rax + 7], 0x36	      4601	objcopy.c	FUNCTION_59	IF_1
0x400015a	              0xc3	                                     ret	      4601	objcopy.c	FUNCTION_59	IF_1
0x400015b	       0xf1f440000	                   nop dword [rax + rax]	      4601	objcopy.c	FUNCTION_59	IF_1
0x4000160	          0x488b3f	                    mov rdi, qword [rdi]	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000163	      0xe900000000	                           jmp 0x4000168	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000168	     0xf1f84000000	                   nop dword [rax + rax]	       973	objcopy.c	FUNCTION_7	CALL_1
0x4000170	              0x53	                                push rbx	      1152	objcopy.c	FUNCTION_15
0x4000171	          0x488b3f	                    mov rdi, qword [rdi]	      1155	objcopy.c	FUNCTION_15
0x4000174	          0x4889f3	                            mov rbx, rsi	      1152	objcopy.c	FUNCTION_15
0x4000177	          0x803f21	                    cmp byte [rdi], 0x21	      1157	objcopy.c	FUNCTION_15	IF_1
0x400017a	            0x7424	                            je 0x40001a0	      1157	objcopy.c	FUNCTION_15	IF_1
0x400017c	          0x488b36	                    mov rsi, qword [rsi]	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400017f	            0x31d2	                            xor edx, edx	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000181	      0xe800000000	                          call 0x4000186	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000186	            0x85c0	                           test eax, eax	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4000188	            0x7507	                           jne 0x4000191	      1159	objcopy.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400018a	    0xc74308010000	                  mov dword [rbx + 8], 1	      1161	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4000191	      0xb801000000	                              mov eax, 1	      1163	objcopy.c	FUNCTION_15	IF_1	IF_2
0x4000196	              0x5b	                                 pop rbx	      1178	objcopy.c	FUNCTION_15
0x4000197	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
0x4000198	     0xf1f84000000	                   nop dword [rax + rax]	      1178	objcopy.c	FUNCTION_15
0x40001a0	          0x488b36	                    mov rsi, qword [rsi]	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a3	        0x4883c701	                              add rdi, 1	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a7	            0x31d2	                            xor edx, edx	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001a9	      0xe800000000	                          call 0x40001ae	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001ae	            0x85c0	                           test eax, eax	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001b0	            0x75df	                           jne 0x4000191	      1168	objcopy.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40001b2	    0xc74308000000	                  mov dword [rbx + 8], 0	      1170	objcopy.c	FUNCTION_15	ELSE_1	IF_3
0x40001b9	              0x5b	                                 pop rbx	      1178	objcopy.c	FUNCTION_15
0x40001ba	              0xc3	                                     ret	      1178	objcopy.c	FUNCTION_15
0x40001bb	       0xf1f440000	                   nop dword [rax + rax]	      1178	objcopy.c	FUNCTION_15
0x40001c0	            0x4154	                                push r12	       664	objcopy.c	FUNCTION_2
0x40001c2	    0x4c8b25000000	            mov r12, qword [0x040001c9] 	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001c9	      0xba05000000	                              mov edx, 5	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001ce	              0x55	                                push rbp	       664	objcopy.c	FUNCTION_2
0x40001cf	              0x53	                                push rbx	       664	objcopy.c	FUNCTION_2
0x40001d0	            0x89f5	                            mov ebp, esi	       664	objcopy.c	FUNCTION_2
0x40001d2	          0x4889fb	                            mov rbx, rdi	       664	objcopy.c	FUNCTION_2
0x40001d5	      0xbe00000000	                              mov esi, 0	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001da	            0x31ff	                            xor edi, edi	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001dc	      0xe800000000	                          call 0x40001e1	       665	objcopy.c	FUNCTION_2	CALL_1
0x40001e1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_382
0x40001e4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x40001e7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x40001ec	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x40001ef	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40001f1	      0xe800000000	                          call 0x40001f6	        97	stdio2.h	CALL_382
0x40001f6	            0x31ff	                            xor edi, edi	       666	objcopy.c	FUNCTION_2	CALL_2
0x40001f8	      0xba05000000	                              mov edx, 5	       666	objcopy.c	FUNCTION_2	CALL_2
0x40001fd	      0xbe00000000	                              mov esi, 0	       666	objcopy.c	FUNCTION_2	CALL_2
0x4000202	      0xe800000000	                          call 0x4000207	       666	objcopy.c	FUNCTION_2	CALL_2
0x4000207	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400020c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x400020f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000212	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000214	      0xe800000000	                          call 0x4000219	        97	stdio2.h	CALL_382
0x4000219	            0x31ff	                            xor edi, edi	       667	objcopy.c	FUNCTION_2	CALL_3
0x400021b	      0xba05000000	                              mov edx, 5	       667	objcopy.c	FUNCTION_2	CALL_3
0x4000220	      0xbe00000000	                              mov esi, 0	       667	objcopy.c	FUNCTION_2	CALL_3
0x4000225	      0xe800000000	                          call 0x400022a	       667	objcopy.c	FUNCTION_2	CALL_3
0x400022a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400022f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000232	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000235	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000237	      0xe800000000	                          call 0x400023c	        97	stdio2.h	CALL_382
0x400023c	            0x31ff	                            xor edi, edi	       668	objcopy.c	FUNCTION_2	CALL_4
0x400023e	      0xba05000000	                              mov edx, 5	       668	objcopy.c	FUNCTION_2	CALL_4
0x4000243	      0xbe00000000	                              mov esi, 0	       668	objcopy.c	FUNCTION_2	CALL_4
0x4000248	      0xe800000000	                          call 0x400024d	       668	objcopy.c	FUNCTION_2	CALL_4
0x400024d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x4000252	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000255	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000258	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x400025a	      0xe800000000	                          call 0x400025f	        97	stdio2.h	CALL_382
0x400025f	            0x31ff	                            xor edi, edi	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000261	      0xba05000000	                              mov edx, 5	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000266	      0xbe00000000	                              mov esi, 0	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x400026b	      0xe800000000	                          call 0x4000270	       681	objcopy.c	FUNCTION_2	ELSE_1	CALL_7
0x4000270	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x4000275	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000278	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x400027b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x400027d	      0xe800000000	                          call 0x4000282	        97	stdio2.h	CALL_382
0x4000282	            0x31ff	                            xor edi, edi	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000284	      0xba05000000	                              mov edx, 5	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000289	      0xbe00000000	                              mov esi, 0	       686	objcopy.c	FUNCTION_2	CALL_9
0x400028e	      0xe800000000	                          call 0x4000293	       686	objcopy.c	FUNCTION_2	CALL_9
0x4000293	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x4000298	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x400029b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x400029e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40002a0	      0xe800000000	                          call 0x40002a5	        97	stdio2.h	CALL_382
0x40002a5	    0x488b3d000000	            mov rdi, qword [0x040002ac] 	       709	objcopy.c	FUNCTION_2	CALL_12
0x40002ac	          0x4889de	                            mov rsi, rbx	       709	objcopy.c	FUNCTION_2	CALL_12
0x40002af	      0xe800000000	                          call 0x40002b4	       709	objcopy.c	FUNCTION_2	CALL_12
0x40002b4	            0x85ed	                           test ebp, ebp	       710	objcopy.c	FUNCTION_2	IF_2
0x40002b6	            0x7407	                            je 0x40002bf	       710	objcopy.c	FUNCTION_2	IF_2
0x40002b8	            0x89ef	                            mov edi, ebp	       712	objcopy.c	FUNCTION_2	CALL_14
0x40002ba	      0xe800000000	                          call 0x40002bf	       712	objcopy.c	FUNCTION_2	CALL_14
0x40002bf	            0x31ff	                            xor edi, edi	       711	objcopy.c	FUNCTION_2	CALL_13
0x40002c1	      0xba05000000	                              mov edx, 5	       711	objcopy.c	FUNCTION_2	CALL_13
0x40002c6	      0xbe00000000	                              mov esi, 0	       711	objcopy.c	FUNCTION_2	CALL_13
0x40002cb	      0xe800000000	                          call 0x40002d0	       711	objcopy.c	FUNCTION_2	CALL_13
0x40002d0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_382
0x40002d5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x40002d8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x40002dd	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x40002e0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40002e2	      0xe800000000	                          call 0x40002e7	        97	stdio2.h	CALL_382
0x40002e7	            0xebcf	                           jmp 0x40002b8	        97	stdio2.h	CALL_382
0x40002e9	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_382
0x40002f0	            0x4154	                                push r12	       528	objcopy.c	FUNCTION_1
0x40002f2	    0x4c8b25000000	            mov r12, qword [0x040002f9] 	       529	objcopy.c	FUNCTION_1	CALL_1
0x40002f9	      0xba05000000	                              mov edx, 5	       529	objcopy.c	FUNCTION_1	CALL_1
0x40002fe	              0x55	                                push rbp	       528	objcopy.c	FUNCTION_1
0x40002ff	              0x53	                                push rbx	       528	objcopy.c	FUNCTION_1
0x4000300	            0x89f5	                            mov ebp, esi	       528	objcopy.c	FUNCTION_1
0x4000302	          0x4889fb	                            mov rbx, rdi	       528	objcopy.c	FUNCTION_1
0x4000305	      0xbe00000000	                              mov esi, 0	       529	objcopy.c	FUNCTION_1	CALL_1
0x400030a	            0x31ff	                            xor edi, edi	       529	objcopy.c	FUNCTION_1	CALL_1
0x400030c	      0xe800000000	                          call 0x4000311	       529	objcopy.c	FUNCTION_1	CALL_1
0x4000311	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_382
0x4000314	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000317	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400031c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x400031f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000321	      0xe800000000	                          call 0x4000326	        97	stdio2.h	CALL_382
0x4000326	            0x31ff	                            xor edi, edi	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000328	      0xba05000000	                              mov edx, 5	       530	objcopy.c	FUNCTION_1	CALL_2
0x400032d	      0xbe00000000	                              mov esi, 0	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000332	      0xe800000000	                          call 0x4000337	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000337	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400033c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x400033f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000342	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000344	      0xe800000000	                          call 0x4000349	        97	stdio2.h	CALL_382
0x4000349	            0x31ff	                            xor edi, edi	       531	objcopy.c	FUNCTION_1	CALL_3
0x400034b	      0xba05000000	                              mov edx, 5	       531	objcopy.c	FUNCTION_1	CALL_3
0x4000350	      0xbe00000000	                              mov esi, 0	       531	objcopy.c	FUNCTION_1	CALL_3
0x4000355	      0xe800000000	                          call 0x400035a	       531	objcopy.c	FUNCTION_1	CALL_3
0x400035a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400035f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000362	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000365	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000367	      0xe800000000	                          call 0x400036c	        97	stdio2.h	CALL_382
0x400036c	            0x31ff	                            xor edi, edi	       532	objcopy.c	FUNCTION_1	CALL_4
0x400036e	      0xba05000000	                              mov edx, 5	       532	objcopy.c	FUNCTION_1	CALL_4
0x4000373	      0xbe00000000	                              mov esi, 0	       532	objcopy.c	FUNCTION_1	CALL_4
0x4000378	      0xe800000000	                          call 0x400037d	       532	objcopy.c	FUNCTION_1	CALL_4
0x400037d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x4000382	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000385	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000388	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x400038a	      0xe800000000	                          call 0x400038f	        97	stdio2.h	CALL_382
0x400038f	            0x31ff	                            xor edi, edi	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000391	      0xba05000000	                              mov edx, 5	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000396	      0xbe00000000	                              mov esi, 0	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x400039b	      0xe800000000	                          call 0x40003a0	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x40003a0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x40003a5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x40003a8	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x40003ab	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40003ad	      0xe800000000	                          call 0x40003b2	        97	stdio2.h	CALL_382
0x40003b2	            0x31ff	                            xor edi, edi	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x40003b4	      0xba05000000	                              mov edx, 5	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x40003b9	      0xbe00000000	                              mov esi, 0	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x40003be	      0xe800000000	                          call 0x40003c3	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x40003c3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x40003c8	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x40003cb	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x40003ce	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40003d0	      0xe800000000	                          call 0x40003d5	        97	stdio2.h	CALL_382
0x40003d5	    0x488b3d000000	            mov rdi, qword [0x040003dc] 	       656	objcopy.c	FUNCTION_1	CALL_12
0x40003dc	          0x4889de	                            mov rsi, rbx	       656	objcopy.c	FUNCTION_1	CALL_12
0x40003df	      0xe800000000	                          call 0x40003e4	       656	objcopy.c	FUNCTION_1	CALL_12
0x40003e4	            0x85ed	                           test ebp, ebp	       657	objcopy.c	FUNCTION_1	IF_4
0x40003e6	            0x7407	                            je 0x40003ef	       657	objcopy.c	FUNCTION_1	IF_4
0x40003e8	            0x89ef	                            mov edi, ebp	       659	objcopy.c	FUNCTION_1	CALL_14
0x40003ea	      0xe800000000	                          call 0x40003ef	       659	objcopy.c	FUNCTION_1	CALL_14
0x40003ef	            0x31ff	                            xor edi, edi	       658	objcopy.c	FUNCTION_1	CALL_13
0x40003f1	      0xba05000000	                              mov edx, 5	       658	objcopy.c	FUNCTION_1	CALL_13
0x40003f6	      0xbe00000000	                              mov esi, 0	       658	objcopy.c	FUNCTION_1	CALL_13
0x40003fb	      0xe800000000	                          call 0x4000400	       658	objcopy.c	FUNCTION_1	CALL_13
0x4000400	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_382
0x4000405	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000408	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400040d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000410	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000412	      0xe800000000	                          call 0x4000417	        97	stdio2.h	CALL_382
0x4000417	            0xebcf	                           jmp 0x40003e8	        97	stdio2.h	CALL_382
0x4000419	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_382
0x4000420	      0x48837e6800	               cmp qword [rsi + 0x68], 0	      4210	objcopy.c	FUNCTION_54	IF_1
0x4000425	            0x742d	                            je 0x4000454	      4210	objcopy.c	FUNCTION_54	IF_1
0x4000427	            0x4155	                                push r13	      4203	objcopy.c	FUNCTION_54
0x4000429	            0x4154	                                push r12	      4203	objcopy.c	FUNCTION_54
0x400042b	          0x4989d4	                            mov r12, rdx	      4203	objcopy.c	FUNCTION_54
0x400042e	              0x55	                                push rbp	      4203	objcopy.c	FUNCTION_54
0x400042f	              0x53	                                push rbx	      4203	objcopy.c	FUNCTION_54
0x4000430	          0x4889fd	                            mov rbp, rdi	      4203	objcopy.c	FUNCTION_54
0x4000433	          0x4889f3	                            mov rbx, rsi	      4203	objcopy.c	FUNCTION_54
0x4000436	        0x4883ec08	                              sub rsp, 8	      4203	objcopy.c	FUNCTION_54
0x400043a	      0xe800000000	                          call 0x400043f	      4213	objcopy.c	FUNCTION_54	CALL_1
0x400043f	          0x4885c0	                           test rax, rax	      4214	objcopy.c	FUNCTION_54	IF_2
0x4000442	     0xf88a8000000	                            js 0x40004f0	      4214	objcopy.c	FUNCTION_54	IF_2
0x4000448	            0x7516	                           jne 0x4000460	      4222	objcopy.c	FUNCTION_54	IF_4
0x400044a	        0x4883c408	                              add rsp, 8	      4245	objcopy.c	FUNCTION_54
0x400044e	              0x5b	                                 pop rbx	      4245	objcopy.c	FUNCTION_54
0x400044f	              0x5d	                                 pop rbp	      4245	objcopy.c	FUNCTION_54
0x4000450	            0x415c	                                 pop r12	      4245	objcopy.c	FUNCTION_54
0x4000452	            0x415d	                                 pop r13	      4245	objcopy.c	FUNCTION_54
0x4000454	            0xf3c3	                                     ret	      4245	objcopy.c	FUNCTION_54
0x4000456	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4245	objcopy.c	FUNCTION_54
0x4000460	          0x4889c7	                            mov rdi, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000463	      0xe800000000	                          call 0x4000468	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000468	          0x4c89e1	                            mov rcx, r12	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400046b	          0x4889c2	                            mov rdx, rax	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400046e	          0x4889de	                            mov rsi, rbx	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4000471	          0x4889ef	                            mov rdi, rbp	      4226	objcopy.c	FUNCTION_54	CALL_5
0x4000474	          0x4989c5	                            mov r13, rax	      4225	objcopy.c	FUNCTION_54	CALL_4
0x4000477	      0xe800000000	                          call 0x400047c	      4226	objcopy.c	FUNCTION_54	CALL_5
0x400047c	          0x4885c0	                           test rax, rax	      4227	objcopy.c	FUNCTION_54	IF_5
0x400047f	     0xf8888000000	                            js 0x400050d	      4227	objcopy.c	FUNCTION_54	IF_5
0x4000485	            0x7450	                            je 0x40004d7	      4232	objcopy.c	FUNCTION_54	FOR_1
0x4000487	    0x488b35000000	            mov rsi, qword [0x0400048e] 	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400048e	    0x488b3d000000	            mov rdi, qword [0x04000495] 	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x4000495	      0x498d4cc500	                  lea rcx, [r13 + rax*8]	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x400049a	    0x4c8b05000000	              mov r8, qword [0x040004a1]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004a1	          0x4c89ea	                            mov rdx, r13	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004a4	         0xf1f4000	                         nop dword [rax]	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004a8	          0x488b02	                    mov rax, qword [rdx]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004ab	          0x488b00	                    mov rax, qword [rax]	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004ae	          0x4885c0	                           test rax, rax	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004b1	            0x741b	                            je 0x40004ce	      4235	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004b3	          0x488b00	                    mov rax, qword [rax]	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004b6	          0x4885c0	                           test rax, rax	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004b9	            0x7413	                            je 0x40004ce	      4236	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004bb	          0x4839f0	                            cmp rax, rsi	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004be	            0x740e	                            je 0x40004ce	      4237	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004c0	          0x4839f8	                            cmp rax, rdi	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004c3	            0x7409	                            je 0x40004ce	      4238	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004c5	          0x4c39c0	                             cmp rax, r8	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004c8	            0x7404	                            je 0x40004ce	      4239	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004ca	        0x83481820	             or dword [rax + 0x18], 0x20	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004ce	        0x4883c208	                              add rdx, 8	      4240	objcopy.c	FUNCTION_54	FOR_1	IF_6
0x40004d2	          0x4839d1	                            cmp rcx, rdx	      4232	objcopy.c	FUNCTION_54	FOR_1
0x40004d5	            0x75d1	                           jne 0x40004a8	      4232	objcopy.c	FUNCTION_54	FOR_1
0x40004d7	        0x4883c408	                              add rsp, 8	      4245	objcopy.c	FUNCTION_54
0x40004db	          0x4c89ef	                            mov rdi, r13	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40004de	              0x5b	                                 pop rbx	      4245	objcopy.c	FUNCTION_54
0x40004df	              0x5d	                                 pop rbp	      4245	objcopy.c	FUNCTION_54
0x40004e0	            0x415c	                                 pop r12	      4245	objcopy.c	FUNCTION_54
0x40004e2	            0x415d	                                 pop r13	      4245	objcopy.c	FUNCTION_54
0x40004e4	      0xe900000000	                           jmp 0x40004e9	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40004e9	     0xf1f80000000	                         nop dword [rax]	      4244	objcopy.c	FUNCTION_54	CALL_7
0x40004f0	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40004f4	            0x750e	                           jne 0x4000504	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40004f6	      0xe800000000	                          call 0x40004fb	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40004fb	          0x83f805	                              cmp eax, 5	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x40004fe	     0xf8446ffffff	                            je 0x400044a	      4217	objcopy.c	FUNCTION_54	IF_2	IF_3	CALL_2
0x4000504	        0x488b7d00	                    mov rdi, qword [rbp]	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x4000508	      0xe800000000	                          call 0x400050d	      4219	objcopy.c	FUNCTION_54	IF_2	CALL_3
0x400050d	        0x488b7d00	                    mov rdi, qword [rbp]	      4228	objcopy.c	FUNCTION_54	CALL_6
0x4000511	      0xe800000000	                          call 0x4000516	      4228	objcopy.c	FUNCTION_54	CALL_6
0x4000516	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4228	objcopy.c	FUNCTION_54	CALL_6
0x4000520	            0x4157	                                push r15	      1038	objcopy.c	FUNCTION_14
0x4000522	            0x4156	                                push r14	      1038	objcopy.c	FUNCTION_14
0x4000524	            0x4155	                                push r13	      1038	objcopy.c	FUNCTION_14
0x4000526	            0x4154	                                push r12	      1038	objcopy.c	FUNCTION_14
0x4000528	          0x4989f4	                            mov r12, rsi	      1038	objcopy.c	FUNCTION_14
0x400052b	              0x55	                                push rbp	      1038	objcopy.c	FUNCTION_14
0x400052c	              0x53	                                push rbx	      1038	objcopy.c	FUNCTION_14
0x400052d	          0x4889fd	                            mov rbp, rdi	      1038	objcopy.c	FUNCTION_14
0x4000530	        0x4883ec08	                              sub rsp, 8	      1038	objcopy.c	FUNCTION_14
0x4000534	      0xe800000000	                          call 0x4000539	      1045	objcopy.c	FUNCTION_14	CALL_1
0x4000539	          0x4885c0	                           test rax, rax	      1046	objcopy.c	FUNCTION_14	IF_1
0x400053c	            0x7519	                           jne 0x4000557	      1046	objcopy.c	FUNCTION_14	IF_1
0x400053e	    0xc70500000000	               mov dword [0x04000548], 1	      1048	objcopy.c	FUNCTION_14	IF_1
0x4000548	        0x4883c408	                              add rsp, 8	      1145	objcopy.c	FUNCTION_14
0x400054c	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x400054d	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x400054e	            0x415c	                                 pop r12	      1145	objcopy.c	FUNCTION_14
0x4000550	            0x415d	                                 pop r13	      1145	objcopy.c	FUNCTION_14
0x4000552	            0x415e	                                 pop r14	      1145	objcopy.c	FUNCTION_14
0x4000554	            0x415f	                                 pop r15	      1145	objcopy.c	FUNCTION_14
0x4000556	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
0x4000557	        0x488d7802	                      lea rdi, [rax + 2]	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400055b	          0x4889c3	                            mov rbx, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400055e	      0xe800000000	                          call 0x4000563	      1052	objcopy.c	FUNCTION_14	CALL_2
0x4000563	      0xbe00000000	                              mov esi, 0	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000568	          0x4889ef	                            mov rdi, rbp	      1053	objcopy.c	FUNCTION_14	CALL_3
0x400056b	          0x4989c6	                            mov r14, rax	      1052	objcopy.c	FUNCTION_14	CALL_2
0x400056e	      0xe800000000	                          call 0x4000573	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000573	          0x4885c0	                           test rax, rax	      1054	objcopy.c	FUNCTION_14	IF_2
0x4000576	          0x4989c5	                            mov r13, rax	      1053	objcopy.c	FUNCTION_14	CALL_3
0x4000579	     0xf8418020000	                            je 0x4000797	      1054	objcopy.c	FUNCTION_14	IF_2
0x400057f	          0x4889c1	                            mov rcx, rax	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000582	          0x4889da	                            mov rdx, rbx	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000585	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_94	CALL_9
0x400058a	          0x4c89f7	                            mov rdi, r14	       295	stdio2.h	FUNCTION_94	CALL_9
0x400058d	      0xe800000000	                          call 0x4000592	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000592	          0x4885c0	                           test rax, rax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x4000595	     0xf84de010000	                            je 0x4000779	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400059b	          0x4c89ef	                            mov rdi, r13	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x400059e	      0xe800000000	                          call 0x40005a3	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x40005a3	            0x85c0	                           test eax, eax	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x40005a5	     0xf85ce010000	                           jne 0x4000779	      1057	objcopy.c	FUNCTION_14	IF_3	CALL_8
0x40005ab	          0x4c89ef	                            mov rdi, r13	      1060	objcopy.c	FUNCTION_14	CALL_11
0x40005ae	    0x41bd01000000	                             mov r13d, 1	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40005b4	      0xe800000000	                          call 0x40005b9	      1060	objcopy.c	FUNCTION_14	CALL_11
0x40005b9	      0x41c6041e0a	               mov byte [r14 + rbx], 0xa	      1061	objcopy.c	FUNCTION_14
0x40005be	    0x41c6441e0100	             mov byte [r14 + rbx + 1], 0	      1062	objcopy.c	FUNCTION_14
0x40005c4	        0x41803e00	                       cmp byte [r14], 0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40005c8	     0xf847affffff	                            je 0x4000548	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40005ce	            0x6690	                                     nop	      1066	objcopy.c	FUNCTION_14	FOR_1
0x40005d0	          0x4c89f3	                            mov rbx, r14	      1038	objcopy.c	FUNCTION_14
0x40005d3	            0xeb16	                           jmp 0x40005eb	      1038	objcopy.c	FUNCTION_14
0x40005d5	           0xf1f00	                         nop dword [rax]	      1038	objcopy.c	FUNCTION_14
0x40005d8	            0x3c0d	                             cmp al, 0xd	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005da	     0xf84b8000000	                            je 0x4000698	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005e0	            0x3c23	                            cmp al, 0x23	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005e2	            0x7503	                           jne 0x40005e7	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005e4	          0xc60300	                       mov byte [rbx], 0	      1101	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005e7	        0x4883c301	                              add rbx, 1	      1073	objcopy.c	FUNCTION_14	FOR_1	FOR_2
0x40005eb	           0xfb603	                   movzx eax, byte [rbx]	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005ee	            0x3c0a	                             cmp al, 0xa	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005f0	     0xf84ba000000	                            je 0x40006b0	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005f6	            0x7fe0	                            jg 0x40005d8	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005f8	            0x84c0	                             test al, al	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005fa	            0x75eb	                           jne 0x40005e7	      1075	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40005fc	        0x410fb606	                   movzx eax, byte [r14]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000600	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000602	            0x740c	                            je 0x4000610	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000604	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000606	            0x7518	                           jne 0x4000620	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000608	     0xf1f84000000	                   nop dword [rax + rax]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000610	        0x4983c601	                              add r14, 1	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000614	        0x410fb606	                   movzx eax, byte [r14]	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000618	            0x3c20	                            cmp al, 0x20	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x400061a	            0x74f4	                            je 0x4000610	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x400061c	            0x3c09	                               cmp al, 9	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x400061e	            0x74f0	                            je 0x4000610	      1115	objcopy.c	FUNCTION_14	FOR_1	FOR_3
0x4000620	            0x3c09	                               cmp al, 9	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000622	     0xf8449010000	                            je 0x4000771	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000628	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400062a	     0xf8438010000	                            je 0x4000768	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000630	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000632	     0xf8430010000	                            je 0x4000768	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000638	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400063a	     0xf8428010000	                            je 0x4000768	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000640	          0x4d89f7	                            mov r15, r14	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000643	       0xf1f440000	                   nop dword [rax + rax]	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000648	        0x4983c701	                              add r15, 1	      1120	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400064c	        0x410fb607	                   movzx eax, byte [r15]	      1118	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000650	            0x3c20	                            cmp al, 0x20	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000652	            0x7474	                            je 0x40006c8	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000654	            0x3c09	                               cmp al, 9	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000656	            0x7470	                            je 0x40006c8	      1117	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000658	            0x3c0a	                             cmp al, 0xa	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400065a	            0x7408	                            je 0x4000664	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400065c	            0x3c0d	                             cmp al, 0xd	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x400065e	            0x7404	                            je 0x4000664	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000660	            0x84c0	                             test al, al	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000662	            0x75e4	                           jne 0x4000648	      1119	objcopy.c	FUNCTION_14	FOR_1	FOR_4
0x4000664	          0x4d39fe	                            cmp r14, r15	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000667	        0x41c60700	                       mov byte [r15], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x400066b	     0xf82bf000000	                            jb 0x4000730	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000671	        0x4183c501	                             add r13d, 1	      1143	objcopy.c	FUNCTION_14	FOR_1
0x4000675	        0x807b0100	                   cmp byte [rbx + 1], 0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000679	        0x4c8d7301	                      lea r14, [rbx + 1]	      1066	objcopy.c	FUNCTION_14	FOR_1
0x400067d	     0xf854dffffff	                           jne 0x40005d0	      1066	objcopy.c	FUNCTION_14	FOR_1
0x4000683	        0x4883c408	                              add rsp, 8	      1145	objcopy.c	FUNCTION_14
0x4000687	              0x5b	                                 pop rbx	      1145	objcopy.c	FUNCTION_14
0x4000688	              0x5d	                                 pop rbp	      1145	objcopy.c	FUNCTION_14
0x4000689	            0x415c	                                 pop r12	      1145	objcopy.c	FUNCTION_14
0x400068b	            0x415d	                                 pop r13	      1145	objcopy.c	FUNCTION_14
0x400068d	            0x415e	                                 pop r14	      1145	objcopy.c	FUNCTION_14
0x400068f	            0x415f	                                 pop r15	      1145	objcopy.c	FUNCTION_14
0x4000691	              0xc3	                                     ret	      1145	objcopy.c	FUNCTION_14
0x4000692	    0x660f1f440000	                    nop word [rax + rax]	      1145	objcopy.c	FUNCTION_14
0x4000698	            0x31c0	                            xor eax, eax	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400069a	        0x807b010a	                 cmp byte [rbx + 1], 0xa	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x400069e	          0xc60300	                       mov byte [rbx], 0	      1086	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40006a1	           0xf94c0	                                 sete al	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x40006a4	          0x4801c3	                            add rbx, rax	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x40006a7	      0xe950ffffff	                           jmp 0x40005fc	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x40006ac	         0xf1f4000	                         nop dword [rax]	      1089	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_5
0x40006b0	            0x31c0	                            xor eax, eax	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006b2	        0x807b010d	                 cmp byte [rbx + 1], 0xd	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006b6	          0xc60300	                       mov byte [rbx], 0	      1078	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1
0x40006b9	           0xf94c0	                                 sete al	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006bc	          0x4801c3	                            add rbx, rax	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006bf	      0xe938ffffff	                           jmp 0x40005fc	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006c4	         0xf1f4000	                         nop dword [rax]	      1081	objcopy.c	FUNCTION_14	FOR_1	FOR_2	SWITCH_1	IF_4
0x40006c8	            0x3c0a	                             cmp al, 0xa	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006ca	            0x7498	                            je 0x4000664	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006cc	            0x3c0d	                             cmp al, 0xd	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006ce	            0x7494	                            je 0x4000664	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006d0	            0x84c0	                             test al, al	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006d2	            0x7490	                            je 0x4000664	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x40006d4	      0x410fb65701	               movzx edx, byte [r15 + 1]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006d9	        0x498d4701	                      lea rax, [r15 + 1]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006dd	          0x80fa20	                            cmp dl, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006e0	            0x7512	                           jne 0x40006f4	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006e2	    0x660f1f440000	                    nop word [rax + rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006e8	        0x4883c001	                              add rax, 1	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006ec	           0xfb610	                   movzx edx, byte [rax]	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006ef	          0x80fa20	                            cmp dl, 0x20	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006f2	            0x74f4	                            je 0x40006e8	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006f4	          0x80fa09	                               cmp dl, 9	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006f7	            0x74ef	                            je 0x40006e8	      1127	objcopy.c	FUNCTION_14	FOR_1	IF_7	FOR_5
0x40006f9	          0x80fa0d	                             cmp dl, 0xd	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x40006fc	            0x7652	                           jbe 0x4000750	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x40006fe	            0x31ff	                            xor edi, edi	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000700	      0xba05000000	                              mov edx, 5	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000705	      0xbe00000000	                              mov esi, 0	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400070a	      0xe800000000	                          call 0x400070f	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400070f	          0x4489ea	                           mov edx, r13d	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000712	          0x4889c7	                            mov rdi, rax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000715	          0x4889ee	                            mov rsi, rbp	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x4000718	            0x31c0	                            xor eax, eax	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400071a	      0xe800000000	                          call 0x400071f	      1131	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8	CALL_13
0x400071f	          0x4d39fe	                            cmp r14, r15	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000722	        0x41c60700	                       mov byte [r15], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x4000726	     0xf8345ffffff	                           jae 0x4000671	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x400072c	         0xf1f4000	                         nop dword [rax]	      1137	objcopy.c	FUNCTION_14	FOR_1	IF_9
0x4000730	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000735	          0x4c89f6	                            mov rsi, r14	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000738	          0x4c89e7	                            mov rdi, r12	      1020	objcopy.c	FUNCTION_12	CALL_1
0x400073b	      0xe800000000	                          call 0x4000740	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000740	          0x4c8930	                    mov qword [rax], r14	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000743	      0xe929ffffff	                           jmp 0x4000671	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000748	     0xf1f84000000	                   nop dword [rax + rax]	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000750	      0xb801240000	                         mov eax, 0x2401	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000755	        0x480fa3d0	                             bt rax, rdx	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000759	     0xf8205ffffff	                            jb 0x4000664	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x400075f	            0xeb9d	                           jmp 0x40006fe	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000761	     0xf1f80000000	                         nop dword [rax]	      1130	objcopy.c	FUNCTION_14	FOR_1	IF_7	IF_8
0x4000768	        0x41c60600	                       mov byte [r14], 0	      1135	objcopy.c	FUNCTION_14	FOR_1
0x400076c	      0xe900ffffff	                           jmp 0x4000671	      1135	objcopy.c	FUNCTION_14	FOR_1
0x4000771	          0x4d89f7	                            mov r15, r14	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000774	      0xe95bffffff	                           jmp 0x40006d4	      1123	objcopy.c	FUNCTION_14	FOR_1	IF_7
0x4000779	      0xbe00000000	                              mov esi, 0	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400077e	            0x31ff	                            xor edi, edi	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000780	      0xba05000000	                              mov edx, 5	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000785	      0xe800000000	                          call 0x400078a	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400078a	          0x4889ee	                            mov rsi, rbp	      1058	objcopy.c	FUNCTION_14	CALL_10
0x400078d	          0x4889c7	                            mov rdi, rax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000790	            0x31c0	                            xor eax, eax	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000792	      0xe800000000	                          call 0x4000797	      1058	objcopy.c	FUNCTION_14	CALL_10
0x4000797	      0xe800000000	                          call 0x400079c	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400079c	            0x8b38	                    mov edi, dword [rax]	      1055	objcopy.c	FUNCTION_14	CALL_6
0x400079e	      0xe800000000	                          call 0x40007a3	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007a3	      0xba05000000	                              mov edx, 5	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007a8	          0x4889c3	                            mov rbx, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007ab	      0xbe00000000	                              mov esi, 0	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007b0	            0x31ff	                            xor edi, edi	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007b2	      0xe800000000	                          call 0x40007b7	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007b7	          0x4889da	                            mov rdx, rbx	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007ba	          0x4889c7	                            mov rdi, rax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007bd	          0x4889ee	                            mov rsi, rbp	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007c0	            0x31c0	                            xor eax, eax	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007c2	      0xe800000000	                          call 0x40007c7	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007c7	    0x660f1f840000	                    nop word [rax + rax]	      1055	objcopy.c	FUNCTION_14	CALL_6
0x40007d0	            0x4156	                                push r14	      4645	objcopy.c	FUNCTION_61
0x40007d2	            0x4155	                                push r13	      4645	objcopy.c	FUNCTION_61
0x40007d4	          0x4989fd	                            mov r13, rdi	      4645	objcopy.c	FUNCTION_61
0x40007d7	            0x4154	                                push r12	      4645	objcopy.c	FUNCTION_61
0x40007d9	              0x55	                                push rbp	      4645	objcopy.c	FUNCTION_61
0x40007da	      0xbe00000000	                              mov esi, 0	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40007df	              0x53	                                push rbx	      4645	objcopy.c	FUNCTION_61
0x40007e0	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40007e4	      0xe800000000	                          call 0x40007e9	      4653	objcopy.c	FUNCTION_61	CALL_1
0x40007e9	          0x4885c0	                           test rax, rax	      4654	objcopy.c	FUNCTION_61	IF_1
0x40007ec	     0xf84b4000000	                            je 0x40008a6	      4654	objcopy.c	FUNCTION_61	IF_1
0x40007f2	      0xbf00100000	                         mov edi, 0x1000	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40007f7	          0x4889c5	                            mov rbp, rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x40007fa	    0x41bc00100000	                        mov r12d, 0x1000	      4659	objcopy.c	FUNCTION_61
0x4000800	      0xe800000000	                          call 0x4000805	      4660	objcopy.c	FUNCTION_61	CALL_5
0x4000805	            0x31db	                            xor ebx, ebx	      4658	objcopy.c	FUNCTION_61
0x4000807	        0x49894520	             mov qword [r13 + 0x20], rax	      4660	objcopy.c	FUNCTION_61	CALL_5
0x400080b	            0xeb2f	                           jmp 0x400083c	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x400080d	           0xf1f00	                         nop dword [rax]	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000810	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000814	          0x4c89e2	                            mov rdx, r12	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000817	          0x4801df	                            add rdi, rbx	       295	stdio2.h	FUNCTION_94	CALL_9
0x400081a	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_94	CALL_9
0x400081d	          0x4829da	                            sub rdx, rbx	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000820	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000825	      0xe800000000	                          call 0x400082a	       295	stdio2.h	FUNCTION_94	CALL_9
0x400082a	          0x4889ef	                            mov rdi, rbp	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x400082d	          0x4989c6	                            mov r14, rax	       295	stdio2.h	FUNCTION_94	CALL_9
0x4000830	      0xe800000000	                          call 0x4000835	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000835	            0x85c0	                           test eax, eax	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000837	            0x754b	                           jne 0x4000884	      4672	objcopy.c	FUNCTION_61	WHILE_1	IF_3	CALL_9
0x4000839	          0x4c01f3	                            add rbx, r14	      4675	objcopy.c	FUNCTION_61	WHILE_1
0x400083c	          0x4889ef	                            mov rdi, rbp	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x400083f	      0xe800000000	                          call 0x4000844	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000844	            0x85c0	                           test eax, eax	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000846	            0x7528	                           jne 0x4000870	      4661	objcopy.c	FUNCTION_61	WHILE_1	CALL_6
0x4000848	          0x4c39e3	                            cmp rbx, r12	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x400084b	            0x75c3	                           jne 0x4000810	      4665	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x400084d	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000851	        0x4c8d241b	                    lea r12, [rbx + rbx]	      4667	objcopy.c	FUNCTION_61	WHILE_1	IF_2
0x4000855	          0x4c89e6	                            mov rsi, r12	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000858	      0xe800000000	                          call 0x400085d	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x400085d	        0x49894520	             mov qword [r13 + 0x20], rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000861	          0x4889c7	                            mov rdi, rax	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000864	            0xebae	                           jmp 0x4000814	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000866	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4668	objcopy.c	FUNCTION_61	WHILE_1	IF_2	CALL_7
0x4000870	        0x49895d18	             mov qword [r13 + 0x18], rbx	      4678	objcopy.c	FUNCTION_61
0x4000874	          0x4889ef	                            mov rdi, rbp	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4000877	              0x5b	                                 pop rbx	      4681	objcopy.c	FUNCTION_61
0x4000878	              0x5d	                                 pop rbp	      4681	objcopy.c	FUNCTION_61
0x4000879	            0x415c	                                 pop r12	      4681	objcopy.c	FUNCTION_61
0x400087b	            0x415d	                                 pop r13	      4681	objcopy.c	FUNCTION_61
0x400087d	            0x415e	                                 pop r14	      4681	objcopy.c	FUNCTION_61
0x400087f	      0xe900000000	                           jmp 0x4000884	      4680	objcopy.c	FUNCTION_61	CALL_12
0x4000884	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000888	      0xbe00000000	                              mov esi, 0	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x400088d	            0x31ff	                            xor edi, edi	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x400088f	      0xba05000000	                              mov edx, 5	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000894	      0xe800000000	                          call 0x4000899	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x4000899	          0x4889de	                            mov rsi, rbx	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x400089c	          0x4889c7	                            mov rdi, rax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x400089f	            0x31c0	                            xor eax, eax	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x40008a1	      0xe800000000	                          call 0x40008a6	      4673	objcopy.c	FUNCTION_61	WHILE_1	CALL_11
0x40008a6	      0xe800000000	                          call 0x40008ab	      4656	objcopy.c	FUNCTION_61	CALL_4
0x40008ab	            0x8b38	                    mov edi, dword [rax]	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008ad	      0xe800000000	                          call 0x40008b2	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008b2	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008b6	          0x4889c5	                            mov rbp, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008b9	      0xba05000000	                              mov edx, 5	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008be	      0xbe00000000	                              mov esi, 0	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008c3	            0x31ff	                            xor edi, edi	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008c5	      0xe800000000	                          call 0x40008ca	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008ca	          0x4889ea	                            mov rdx, rbp	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008cd	          0x4889c7	                            mov rdi, rax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008d0	          0x4889de	                            mov rsi, rbx	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008d3	            0x31c0	                            xor eax, eax	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008d5	      0xe800000000	                          call 0x40008da	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008da	    0x660f1f440000	                    nop word [rax + rax]	      4655	objcopy.c	FUNCTION_61	IF_1	CALL_3
0x40008e0	            0x4155	                                push r13	      1687	objcopy.c	FUNCTION_29
0x40008e2	            0x4154	                                push r12	      1687	objcopy.c	FUNCTION_29
0x40008e4	          0x4989fd	                            mov r13, rdi	      1687	objcopy.c	FUNCTION_29
0x40008e7	              0x55	                                push rbp	      1687	objcopy.c	FUNCTION_29
0x40008e8	              0x53	                                push rbx	      1687	objcopy.c	FUNCTION_29
0x40008e9	          0x4989f4	                            mov r12, rsi	      1687	objcopy.c	FUNCTION_29
0x40008ec	      0xbf10000000	                           mov edi, 0x10	      1688	objcopy.c	FUNCTION_29
0x40008f1	          0x4889d5	                            mov rbp, rdx	      1687	objcopy.c	FUNCTION_29
0x40008f4	        0x4883ec08	                              sub rsp, 8	      1687	objcopy.c	FUNCTION_29
0x40008f8	      0xe800000000	                          call 0x40008fd	      1688	objcopy.c	FUNCTION_29
0x40008fd	          0x4c89e7	                            mov rdi, r12	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000900	          0x4889c3	                            mov rbx, rax	      1688	objcopy.c	FUNCTION_29
0x4000903	      0xe800000000	                          call 0x4000908	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000908	          0x4889ef	                            mov rdi, rbp	      1692	objcopy.c	FUNCTION_29	CALL_3
0x400090b	          0x488903	                    mov qword [rbx], rax	      1691	objcopy.c	FUNCTION_29	CALL_2
0x400090e	      0xe800000000	                          call 0x4000913	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4000913	    0x488b3d000000	            mov rdi, qword [0x0400091a] 	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x400091a	        0x48894308	                mov qword [rbx + 8], rax	      1692	objcopy.c	FUNCTION_29	CALL_3
0x400091e	          0x4889de	                            mov rsi, rbx	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000921	      0xe800000000	                          call 0x4000926	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000926	          0x4885c0	                           test rax, rax	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000929	            0x7551	                           jne 0x400097c	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x400092b	    0x488b3d000000	            mov rdi, qword [0x04000932] 	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000932	          0x4889ee	                            mov rsi, rbp	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000935	      0xe800000000	                          call 0x400093a	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x400093a	          0x4885c0	                           test rax, rax	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x400093d	            0x755e	                           jne 0x400099d	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x400093f	    0x488b3d000000	            mov rdi, qword [0x04000946] 	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000946	          0x4889de	                            mov rsi, rbx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000949	      0xba01000000	                              mov edx, 1	      1028	objcopy.c	FUNCTION_13	CALL_1
0x400094e	      0xe800000000	                          call 0x4000953	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000953	          0x488918	                    mov qword [rax], rbx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000956	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1707	objcopy.c	FUNCTION_29	CALL_11
0x400095a	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x400095f	    0x488b3d000000	            mov rdi, qword [0x04000966] 	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000966	          0x4889de	                            mov rsi, rbx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000969	      0xe800000000	                          call 0x400096e	      1020	objcopy.c	FUNCTION_12	CALL_1
0x400096e	          0x488918	                    mov qword [rax], rbx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000971	        0x4883c408	                              add rsp, 8	      1709	objcopy.c	FUNCTION_29
0x4000975	              0x5b	                                 pop rbx	      1709	objcopy.c	FUNCTION_29
0x4000976	              0x5d	                                 pop rbp	      1709	objcopy.c	FUNCTION_29
0x4000977	            0x415c	                                 pop r12	      1709	objcopy.c	FUNCTION_29
0x4000979	            0x415d	                                 pop r13	      1709	objcopy.c	FUNCTION_29
0x400097b	              0xc3	                                     ret	      1709	objcopy.c	FUNCTION_29
0x400097c	      0xba05000000	                              mov edx, 5	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000981	      0xbe00000000	                              mov esi, 0	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000986	            0x31ff	                            xor edi, edi	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000988	      0xe800000000	                          call 0x400098d	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x400098d	          0x4c89e2	                            mov rdx, r12	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000990	          0x4889c7	                            mov rdi, rax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000993	          0x4c89ee	                            mov rsi, r13	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000996	            0x31c0	                            xor eax, eax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000998	      0xe800000000	                          call 0x400099d	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x400099d	      0xba05000000	                              mov edx, 5	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009a2	      0xbe00000000	                              mov esi, 0	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009a7	            0x31ff	                            xor edi, edi	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009a9	      0xe800000000	                          call 0x40009ae	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009ae	          0x4889ea	                            mov rdx, rbp	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009b1	          0x4889c7	                            mov rdi, rax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009b4	          0x4c89ee	                            mov rsi, r13	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009b7	            0x31c0	                            xor eax, eax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009b9	      0xe800000000	                          call 0x40009be	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009be	            0x6690	                                     nop	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009c0	            0x4156	                                push r14	       720	objcopy.c	FUNCTION_3
0x40009c2	          0x4531f6	                          xor r14d, r14d	       725	objcopy.c	FUNCTION_3
0x40009c5	            0x4155	                                push r13	       720	objcopy.c	FUNCTION_3
0x40009c7	            0x4154	                                push r12	       720	objcopy.c	FUNCTION_3
0x40009c9	              0x55	                                push rbp	       720	objcopy.c	FUNCTION_3
0x40009ca	          0x4889fd	                            mov rbp, rdi	       720	objcopy.c	FUNCTION_3
0x40009cd	              0x53	                                push rbx	       720	objcopy.c	FUNCTION_3
0x40009ce	            0xeb0c	                           jmp 0x40009dc	       720	objcopy.c	FUNCTION_3
0x40009d0	        0x4183ce01	                              or r14d, 1	       741	objcopy.c	FUNCTION_3	DO_1
0x40009d4	          0x4885db	                           test rbx, rbx	       768	objcopy.c	FUNCTION_3
0x40009d7	            0x7456	                            je 0x4000a2f	       768	objcopy.c	FUNCTION_3
0x40009d9	          0x4889dd	                            mov rbp, rbx	       768	objcopy.c	FUNCTION_3
0x40009dc	      0xbe2c000000	                           mov esi, 0x2c	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x40009e1	          0x4889ef	                            mov rdi, rbp	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x40009e4	      0xe800000000	                          call 0x40009e9	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x40009e9	          0x4885c0	                           test rax, rax	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x40009ec	          0x4889c3	                            mov rbx, rax	       729	objcopy.c	FUNCTION_3	DO_1	CALL_1
0x40009ef	            0x746f	                            je 0x4000a60	       730	objcopy.c	FUNCTION_3	DO_1	IF_1
0x40009f1	          0x4189c5	                           mov r13d, eax	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x40009f4	        0x4883c301	                              add rbx, 1	       735	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x40009f8	          0x4129ed	                           sub r13d, ebp	       734	objcopy.c	FUNCTION_3	DO_1	ELSE_1
0x40009fb	          0x4d63e5	                        movsxd r12, r13d	       741	objcopy.c	FUNCTION_3	DO_1
0x40009fe	          0x4889ee	                            mov rsi, rbp	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a01	      0xbf00000000	                              mov edi, 0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a06	          0x4c89e2	                            mov rdx, r12	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a09	      0xe800000000	                          call 0x4000a0e	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a0e	            0x85c0	                           test eax, eax	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a10	            0x74be	                            je 0x40009d0	       741	objcopy.c	FUNCTION_3	DO_1
0x4000a12	          0x4c89e2	                            mov rdx, r12	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a15	          0x4889ee	                            mov rsi, rbp	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a18	      0xbf00000000	                              mov edi, 0	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a1d	      0xe800000000	                          call 0x4000a22	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a22	            0x85c0	                           test eax, eax	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a24	            0x751a	                           jne 0x4000a40	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a26	        0x4183ce02	                              or r14d, 2	       742	objcopy.c	FUNCTION_3	DO_1
0x4000a2a	          0x4885db	                           test rbx, rbx	       768	objcopy.c	FUNCTION_3
0x4000a2d	            0x75aa	                           jne 0x40009d9	       768	objcopy.c	FUNCTION_3
0x4000a2f	              0x5b	                                 pop rbx	       771	objcopy.c	FUNCTION_3
0x4000a30	          0x4489f0	                           mov eax, r14d	       771	objcopy.c	FUNCTION_3
0x4000a33	              0x5d	                                 pop rbp	       771	objcopy.c	FUNCTION_3
0x4000a34	            0x415c	                                 pop r12	       771	objcopy.c	FUNCTION_3
0x4000a36	            0x415d	                                 pop r13	       771	objcopy.c	FUNCTION_3
0x4000a38	            0x415e	                                 pop r14	       771	objcopy.c	FUNCTION_3
0x4000a3a	              0xc3	                                     ret	       771	objcopy.c	FUNCTION_3
0x4000a3b	       0xf1f440000	                   nop dword [rax + rax]	       771	objcopy.c	FUNCTION_3
0x4000a40	          0x4c89e2	                            mov rdx, r12	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a43	          0x4889ee	                            mov rsi, rbp	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a46	      0xbf00000000	                              mov edi, 0	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a4b	      0xe800000000	                          call 0x4000a50	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a50	            0x85c0	                           test eax, eax	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a52	            0x751c	                           jne 0x4000a70	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a54	    0x4181ce000200	                          or r14d, 0x200	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a5b	      0xe974ffffff	                           jmp 0x40009d4	       743	objcopy.c	FUNCTION_3	DO_1
0x4000a60	          0x4889ef	                            mov rdi, rbp	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a63	      0xe800000000	                          call 0x4000a68	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a68	          0x4189c5	                           mov r13d, eax	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a6b	            0xeb8e	                           jmp 0x40009fb	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a6d	           0xf1f00	                         nop dword [rax]	       731	objcopy.c	FUNCTION_3	DO_1	CALL_2
0x4000a70	          0x4c89e2	                            mov rdx, r12	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a73	          0x4889ee	                            mov rsi, rbp	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a76	      0xbf00000000	                              mov edi, 0	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a7b	      0xe800000000	                          call 0x4000a80	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a80	            0x85c0	                           test eax, eax	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a82	            0x750c	                           jne 0x4000a90	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a84	        0x4183ce08	                              or r14d, 8	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a88	      0xe947ffffff	                           jmp 0x40009d4	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a8d	           0xf1f00	                         nop dword [rax]	       744	objcopy.c	FUNCTION_3	DO_1
0x4000a90	          0x4c89e2	                            mov rdx, r12	       745	objcopy.c	FUNCTION_3	DO_1
0x4000a93	          0x4889ee	                            mov rsi, rbp	       745	objcopy.c	FUNCTION_3	DO_1
0x4000a96	      0xbf00000000	                              mov edi, 0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000a9b	      0xe800000000	                          call 0x4000aa0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000aa0	            0x85c0	                           test eax, eax	       745	objcopy.c	FUNCTION_3	DO_1
0x4000aa2	            0x750c	                           jne 0x4000ab0	       745	objcopy.c	FUNCTION_3	DO_1
0x4000aa4	    0x4181ce002000	                         or r14d, 0x2000	       745	objcopy.c	FUNCTION_3	DO_1
0x4000aab	      0xe924ffffff	                           jmp 0x40009d4	       745	objcopy.c	FUNCTION_3	DO_1
0x4000ab0	          0x4c89e2	                            mov rdx, r12	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ab3	          0x4889ee	                            mov rsi, rbp	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ab6	      0xbf00000000	                              mov edi, 0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000abb	      0xe800000000	                          call 0x4000ac0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ac0	            0x85c0	                           test eax, eax	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ac2	            0x750c	                           jne 0x4000ad0	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ac4	        0x4183ce10	                           or r14d, 0x10	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ac8	      0xe907ffffff	                           jmp 0x40009d4	       746	objcopy.c	FUNCTION_3	DO_1
0x4000acd	           0xf1f00	                         nop dword [rax]	       746	objcopy.c	FUNCTION_3	DO_1
0x4000ad0	          0x4c89e2	                            mov rdx, r12	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ad3	          0x4889ee	                            mov rsi, rbp	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ad6	      0xbf00000000	                              mov edi, 0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000adb	      0xe800000000	                          call 0x4000ae0	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ae0	            0x85c0	                           test eax, eax	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ae2	            0x741d	                            je 0x4000b01	       747	objcopy.c	FUNCTION_3	DO_1
0x4000ae4	          0x4c89e2	                            mov rdx, r12	       748	objcopy.c	FUNCTION_3	DO_1
0x4000ae7	          0x4889ee	                            mov rsi, rbp	       748	objcopy.c	FUNCTION_3	DO_1
0x4000aea	      0xbf00000000	                              mov edi, 0	       748	objcopy.c	FUNCTION_3	DO_1
0x4000aef	      0xe800000000	                          call 0x4000af4	       748	objcopy.c	FUNCTION_3	DO_1
0x4000af4	            0x85c0	                           test eax, eax	       748	objcopy.c	FUNCTION_3	DO_1
0x4000af6	            0x7512	                           jne 0x4000b0a	       748	objcopy.c	FUNCTION_3	DO_1
0x4000af8	        0x4183ce40	                           or r14d, 0x40	       748	objcopy.c	FUNCTION_3	DO_1
0x4000afc	      0xe9d3feffff	                           jmp 0x40009d4	       748	objcopy.c	FUNCTION_3	DO_1
0x4000b01	        0x4183ce20	                           or r14d, 0x20	       747	objcopy.c	FUNCTION_3	DO_1
0x4000b05	      0xe9cafeffff	                           jmp 0x40009d4	       747	objcopy.c	FUNCTION_3	DO_1
0x4000b0a	          0x4c89e2	                            mov rdx, r12	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b0d	          0x4889ee	                            mov rsi, rbp	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b10	      0xbf00000000	                              mov edi, 0	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b15	      0xe800000000	                          call 0x4000b1a	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b1a	            0x85c0	                           test eax, eax	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b1c	            0x7420	                            je 0x4000b3e	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b1e	          0x4c89e2	                            mov rdx, r12	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b21	          0x4889ee	                            mov rsi, rbp	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b24	      0xbf00000000	                              mov edi, 0	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b29	      0xe800000000	                          call 0x4000b2e	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b2e	            0x85c0	                           test eax, eax	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b30	            0x7518	                           jne 0x4000b4a	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b32	    0x4181ce000100	                          or r14d, 0x100	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b39	      0xe996feffff	                           jmp 0x40009d4	       750	objcopy.c	FUNCTION_3	DO_1
0x4000b3e	    0x4181ce000000	                   or r14d, section_end.	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b45	      0xe98afeffff	                           jmp 0x40009d4	       749	objcopy.c	FUNCTION_3	DO_1
0x4000b4a	          0x4c89e2	                            mov rdx, r12	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b4d	          0x4889ee	                            mov rsi, rbp	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b50	      0xbf00000000	                              mov edi, 0	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b55	      0xe800000000	                          call 0x4000b5a	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b5a	            0x85c0	                           test eax, eax	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b5c	            0x750c	                           jne 0x4000b6a	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b5e	    0x4181ce000080	                       or r14d, 0x800000	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b65	      0xe96afeffff	                           jmp 0x40009d4	       751	objcopy.c	FUNCTION_3	DO_1
0x4000b6a	          0x4c89e2	                            mov rdx, r12	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b6d	          0x4889ee	                            mov rsi, rbp	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b70	      0xbf00000000	                              mov edi, 0	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b75	      0xe800000000	                          call 0x4000b7a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b7a	            0x85c0	                           test eax, eax	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b7c	            0x750c	                           jne 0x4000b8a	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b7e	    0x4181ce000000	                      or r14d, 0x1000000	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b85	      0xe94afeffff	                           jmp 0x40009d4	       752	objcopy.c	FUNCTION_3	DO_1
0x4000b8a	        0x418d7d01	                      lea edi, [r13 + 1]	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000b8e	          0x4863ff	                         movsxd rdi, edi	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000b91	      0xe800000000	                          call 0x4000b96	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000b96	          0x4c89e2	                            mov rdx, r12	       126	string3.h	FUNCTION_72	CALL_3
0x4000b99	          0x4889c3	                            mov rbx, rax	       758	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_3
0x4000b9c	          0x4889ee	                            mov rsi, rbp	       126	string3.h	FUNCTION_72	CALL_3
0x4000b9f	          0x4889c7	                            mov rdi, rax	       126	string3.h	FUNCTION_72	CALL_3
0x4000ba2	      0xe800000000	                          call 0x4000ba7	       126	string3.h	FUNCTION_72	CALL_3
0x4000ba7	      0xba05000000	                              mov edx, 5	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bac	      0xbe00000000	                              mov esi, 0	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bb1	            0x31ff	                            xor edi, edi	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bb3	      0x42c6042300	                 mov byte [rbx + r12], 0	       760	objcopy.c	FUNCTION_3	DO_1	ELSE_2
0x4000bb8	      0xe800000000	                          call 0x4000bbd	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bbd	          0x4889de	                            mov rsi, rbx	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bc0	          0x4889c7	                            mov rdi, rax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bc3	            0x31c0	                            xor eax, eax	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bc5	      0xe800000000	                          call 0x4000bca	       761	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_6
0x4000bca	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bcf	            0x31ff	                            xor edi, edi	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bd1	      0xba05000000	                              mov edx, 5	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bd6	      0xe800000000	                          call 0x4000bdb	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bdb	      0xbe00000000	                              mov esi, 0	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000be0	          0x4889c7	                            mov rdi, rax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000be3	            0x31c0	                            xor eax, eax	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000be5	      0xe800000000	                          call 0x4000bea	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bea	    0x660f1f440000	                    nop word [rax + rax]	       762	objcopy.c	FUNCTION_3	DO_1	ELSE_2	CALL_8
0x4000bf0	            0x4155	                                push r13	      4620	objcopy.c	FUNCTION_60
0x4000bf2	            0x4154	                                push r12	      4620	objcopy.c	FUNCTION_60
0x4000bf4	          0x4989f5	                            mov r13, rsi	      4620	objcopy.c	FUNCTION_60
0x4000bf7	              0x55	                                push rbp	      4620	objcopy.c	FUNCTION_60
0x4000bf8	              0x53	                                push rbx	      4620	objcopy.c	FUNCTION_60
0x4000bf9	      0xbe3d000000	                           mov esi, 0x3d	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4000bfe	          0x4989fc	                            mov r12, rdi	      4620	objcopy.c	FUNCTION_60
0x4000c01	          0x4889d3	                            mov rbx, rdx	      4620	objcopy.c	FUNCTION_60
0x4000c04	        0x4883ec08	                              sub rsp, 8	      4620	objcopy.c	FUNCTION_60
0x4000c08	      0xe800000000	                          call 0x4000c0d	      4624	objcopy.c	FUNCTION_60	CALL_1
0x4000c0d	          0x4885c0	                           test rax, rax	      4625	objcopy.c	FUNCTION_60	IF_1
0x4000c10	            0x744b	                            je 0x4000c5d	      4625	objcopy.c	FUNCTION_60	IF_1
0x4000c12	          0x4889c5	                            mov rbp, rax	      4625	objcopy.c	FUNCTION_60	IF_1
0x4000c15	      0xbf30000000	                           mov edi, 0x30	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4000c1a	      0xe800000000	                          call 0x4000c1f	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4000c1f	          0x4889ee	                            mov rsi, rbp	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4000c22	          0x4889c3	                            mov rbx, rax	      4628	objcopy.c	FUNCTION_60	CALL_4
0x4000c25	          0x4c89e7	                            mov rdi, r12	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4000c28	          0x4c29e6	                            sub rsi, r12	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4000c2b	        0x4883c501	                              add rbp, 1	      4630	objcopy.c	FUNCTION_60
0x4000c2f	      0xe800000000	                          call 0x4000c34	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4000c34	        0x48896b10	             mov qword [rbx + 0x10], rbp	      4630	objcopy.c	FUNCTION_60
0x4000c38	        0x48894308	                mov qword [rbx + 8], rax	      4629	objcopy.c	FUNCTION_60	CALL_5
0x4000c3c	          0x4889d8	                            mov rax, rbx	      4636	objcopy.c	FUNCTION_60
0x4000c3f	          0x4c892b	                    mov qword [rbx], r13	      4631	objcopy.c	FUNCTION_60
0x4000c42	    0x48c743200000	               mov qword [rbx + 0x20], 0	      4632	objcopy.c	FUNCTION_60
0x4000c4a	    0x48c743180000	               mov qword [rbx + 0x18], 0	      4633	objcopy.c	FUNCTION_60
0x4000c52	        0x4883c408	                              add rsp, 8	      4636	objcopy.c	FUNCTION_60
0x4000c56	              0x5b	                                 pop rbx	      4636	objcopy.c	FUNCTION_60
0x4000c57	              0x5d	                                 pop rbp	      4636	objcopy.c	FUNCTION_60
0x4000c58	            0x415c	                                 pop r12	      4636	objcopy.c	FUNCTION_60
0x4000c5a	            0x415d	                                 pop r13	      4636	objcopy.c	FUNCTION_60
0x4000c5c	              0xc3	                                     ret	      4636	objcopy.c	FUNCTION_60
0x4000c5d	      0xbe00000000	                              mov esi, 0	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c62	            0x31ff	                            xor edi, edi	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c64	      0xba05000000	                              mov edx, 5	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c69	      0xe800000000	                          call 0x4000c6e	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c6e	          0x4889de	                            mov rsi, rbx	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c71	          0x4889c7	                            mov rdi, rax	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c74	            0x31c0	                            xor eax, eax	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c76	      0xe800000000	                          call 0x4000c7b	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c7b	       0xf1f440000	                   nop dword [rax + rax]	      4626	objcopy.c	FUNCTION_60	CALL_3
0x4000c80	            0x4154	                                push r12	       875	objcopy.c	
0x4000c82	              0x55	                                push rbp	       875	objcopy.c	
0x4000c83	          0x4189f4	                           mov r12d, esi	       875	objcopy.c	
0x4000c86	              0x53	                                push rbx	       875	objcopy.c	
0x4000c87	    0x488b1d000000	            mov rbx, qword [0x04000c8e] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000c8e	          0x4889fd	                            mov rbp, rdi	       875	objcopy.c	
0x4000c91	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000c94	            0x7422	                            je 0x4000cb8	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000ca0	        0x488b7b08	                mov rdi, qword [rbx + 8]	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x4000ca4	          0x4889ee	                            mov rsi, rbp	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x4000ca7	      0xe800000000	                          call 0x4000cac	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x4000cac	            0x85c0	                           test eax, eax	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x4000cae	            0x7450	                            je 0x4000d00	       885	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_1
0x4000cb0	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000cb3	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000cb6	            0x75e8	                           jne 0x4000ca0	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000cb8	      0xbf30000000	                           mov edi, 0x30	       944	objcopy.c	FUNCTION_5	CALL_10
0x4000cbd	      0xe800000000	                          call 0x4000cc2	       944	objcopy.c	FUNCTION_5	CALL_10
0x4000cc2	    0x488b15000000	            mov rdx, qword [0x04000cc9] 	       951	objcopy.c	FUNCTION_5
0x4000cc9	        0x48896808	                mov qword [rax + 8], rbp	       945	objcopy.c	FUNCTION_5
0x4000ccd	    0xc74010000000	               mov dword [rax + 0x10], 0	       946	objcopy.c	FUNCTION_5
0x4000cd4	        0x44896014	            mov dword [rax + 0x14], r12d	       947	objcopy.c	FUNCTION_5
0x4000cd8	    0x48c740180000	               mov qword [rax + 0x18], 0	       948	objcopy.c	FUNCTION_5
0x4000ce0	    0x48c740200000	               mov qword [rax + 0x20], 0	       949	objcopy.c	FUNCTION_5
0x4000ce8	    0xc74028000000	               mov dword [rax + 0x28], 0	       950	objcopy.c	FUNCTION_5
0x4000cef	          0x488910	                    mov qword [rax], rdx	       951	objcopy.c	FUNCTION_5
0x4000cf2	    0x488905000000	            mov qword [0x04000cf9], rax 	       952	objcopy.c	FUNCTION_5
0x4000cf9	              0x5b	                                 pop rbx	       955	objcopy.c	FUNCTION_5
0x4000cfa	              0x5d	                                 pop rbp	       955	objcopy.c	FUNCTION_5
0x4000cfb	            0x415c	                                 pop r12	       955	objcopy.c	FUNCTION_5
0x4000cfd	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
0x4000cfe	            0x6690	                                     nop	       955	objcopy.c	FUNCTION_5
0x4000d00	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d03	            0xa801	                              test al, 1	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d05	            0x7406	                            je 0x4000d0d	       888	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d07	        0x41f6c402	                            test r12b, 2	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d0b	            0x7565	                           jne 0x4000d72	       889	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d0d	        0x41f6c401	                            test r12b, 1	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d11	            0x7404	                            je 0x4000d17	       890	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d13	            0xa802	                              test al, 2	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d15	            0x755b	                           jne 0x4000d72	       891	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_3
0x4000d17	            0xa804	                              test al, 4	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000d19	            0x7545	                           jne 0x4000d60	       894	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000d1b	          0x4489e2	                           mov edx, r12d	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000d1e	          0x83e20c	                            and edx, 0xc	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000d21	          0x83fa0c	                            cmp edx, 0xc	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000d24	            0x7440	                            je 0x4000d66	       896	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000d26	            0xa810	                           test al, 0x10	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000d28	            0x751a	                           jne 0x4000d44	       900	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000d2a	          0x4489e2	                           mov edx, r12d	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000d2d	          0x83e230	                           and edx, 0x30	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000d30	          0x83fa30	                           cmp edx, 0x30	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000d33	            0x7415	                            je 0x4000d4a	       902	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000d35	          0x4109c4	                            or r12d, eax	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000d38	          0x4889d8	                            mov rax, rbx	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000d3b	        0x44896314	            mov dword [rbx + 0x14], r12d	       907	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000d3f	              0x5b	                                 pop rbx	       955	objcopy.c	FUNCTION_5
0x4000d40	              0x5d	                                 pop rbp	       955	objcopy.c	FUNCTION_5
0x4000d41	            0x415c	                                 pop r12	       955	objcopy.c	FUNCTION_5
0x4000d43	              0xc3	                                     ret	       955	objcopy.c	FUNCTION_5
0x4000d44	        0x41f6c420	                         test r12b, 0x20	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000d48	            0x74e0	                            je 0x4000d2a	       901	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_5
0x4000d4a	      0xba05000000	                              mov edx, 5	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000d4f	      0xbe00000000	                              mov esi, 0	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000d54	            0xeb26	                           jmp 0x4000d7c	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000d56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       904	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_7
0x4000d60	        0x41f6c408	                            test r12b, 8	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000d64	            0x74b5	                            je 0x4000d1b	       895	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	IF_4
0x4000d66	      0xba05000000	                              mov edx, 5	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d6b	      0xbe00000000	                              mov esi, 0	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d70	            0xeb0a	                           jmp 0x4000d7c	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d72	      0xba05000000	                              mov edx, 5	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000d77	      0xbe00000000	                              mov esi, 0	       892	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x4000d7c	            0x31ff	                            xor edi, edi	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d7e	      0xe800000000	                          call 0x4000d83	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d83	          0x4889ee	                            mov rsi, rbp	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d86	          0x4889c7	                            mov rdi, rax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d89	            0x31c0	                            xor eax, eax	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d8b	      0xe800000000	   call sym.handle_remove_section_option	       898	objcopy.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000d90	          0x4889f8	                            mov rax, rdi	      3901	objcopy.c	FUNCTION_49
0x4000d93	      0xb906000000	                              mov ecx, 6	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000d98	      0xbf00000000	                              mov edi, 0	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000d9d	          0x4889c6	                            mov rsi, rax	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000da0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000da2	            0x744c	                            je 0x4000df0	      3902	objcopy.c	FUNCTION_49	IF_1	CALL_1
0x4000da4	      0xbf00000000	                              mov edi, 0	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000da9	      0xb905000000	                              mov ecx, 5	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000dae	          0x4889c6	                            mov rsi, rax	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000db1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000db3	            0x7423	                            je 0x4000dd8	      3904	objcopy.c	FUNCTION_49	ELSE_1	IF_2	CALL_3
0x4000db5	        0x4883ec08	                              sub rsp, 8	      3901	objcopy.c	FUNCTION_49
0x4000db9	          0x4889c7	                            mov rdi, rax	      3901	objcopy.c	FUNCTION_49
0x4000dbc	      0xbe01000000	                              mov esi, 1	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x4000dc1	      0xe8bafeffff	 call sym.find_section_list.constprop.25	      3908	objcopy.c	FUNCTION_49	ELSE_2	CALL_5
0x4000dc6	    0xc70500000000	               mov dword [0x04000dd0], 1	      3909	objcopy.c	FUNCTION_49	ELSE_2
0x4000dd0	        0x4883c408	                              add rsp, 8	      3911	objcopy.c	FUNCTION_49
0x4000dd4	              0xc3	                                     ret	      3911	objcopy.c	FUNCTION_49
0x4000dd5	           0xf1f00	                         nop dword [rax]	      3911	objcopy.c	FUNCTION_49
0x4000dd8	        0x488d7804	                      lea rdi, [rax + 4]	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000ddc	      0xbe80000000	                           mov esi, 0x80	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000de1	      0xe99afeffff	  jmp sym.find_section_list.constprop.25	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000de6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000df0	        0x488d7805	                      lea rdi, [rax + 5]	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000df4	      0xbe80000000	                           mov esi, 0x80	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000df9	      0xe982feffff	  jmp sym.find_section_list.constprop.25	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000dfe	            0x6690	                                     nop	      3879	objcopy.c	FUNCTION_47	CALL_1
0x4000e00	    0x8b3500000000	            mov esi, dword [0x04000e06] 	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000e06	            0x4156	                                push r14	      1279	objcopy.c	
0x4000e08	            0x4155	                                push r13	      1279	objcopy.c	
0x4000e0a	          0x4989fd	                            mov r13, rdi	      1279	objcopy.c	
0x4000e0d	            0x4154	                                push r12	      1279	objcopy.c	
0x4000e0f	              0x55	                                push rbp	      1279	objcopy.c	
0x4000e10	              0x53	                                push rbx	      1279	objcopy.c	
0x4000e11	            0x85f6	                           test esi, esi	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000e13	            0x750e	                           jne 0x4000e23	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000e15	    0x8b0d00000000	            mov ecx, dword [0x04000e1b] 	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000e1b	            0x85c9	                           test ecx, ecx	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000e1d	     0xf8442010000	                            je 0x4000f65	      1281	objcopy.c	FUNCTION_21	IF_1
0x4000e23	    0x488b1d000000	            mov rbx, qword [0x04000e2a] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e2a	        0x498b6d00	                    mov rbp, qword [r13]	      1286	objcopy.c	FUNCTION_21	IF_1	CALL_1
0x4000e2e	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e31	     0xf8411020000	                            je 0x4001048	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e37	          0x4531e4	                          xor r12d, r12d	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e3a	            0xeb21	                           jmp 0x4000e5d	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e3c	         0xf1f4000	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e40	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000e42	          0x4889ee	                            mov rsi, rbp	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000e45	      0xe800000000	                          call 0x4000e4a	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000e4a	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000e4c	            0x7507	                           jne 0x4000e55	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000e4e	          0x4d85e4	                           test r12, r12	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000e51	        0x4c0f44e3	                          cmove r12, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000e55	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e58	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e5b	            0x743b	                            je 0x4000e98	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000e5d	        0xf6431401	               test byte [rbx + 0x14], 1	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000e61	            0x74f2	                            je 0x4000e55	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000e63	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000e67	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000e6a	            0x75d4	                           jne 0x4000e40	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000e6c	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000e70	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000e72	          0x4889ee	                            mov rsi, rbp	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000e75	      0xe800000000	                          call 0x4000e7a	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000e7a	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000e7c	            0x75d7	                           jne 0x4000e55	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000e7e	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000e85	        0x4d8b7500	                    mov r14, qword [r13]	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000e89	          0x4531e4	                          xor r12d, r12d	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000e8c	    0x488b1d000000	            mov rbx, qword [0x04000e93] 	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000e93	            0xeb1c	                           jmp 0x4000eb1	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000e95	           0xf1f00	                         nop dword [rax]	       923	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000e98	          0x4d85e4	                           test r12, r12	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000e9b	            0x7409	                            je 0x4000ea6	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000e9d	    0x41c744241001	               mov dword [r12 + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000ea6	        0x4d8b7500	                    mov r14, qword [r13]	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000eaa	    0x488b1d000000	            mov rbx, qword [0x04000eb1] 	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000eb1	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000eb4	            0x744f	                            je 0x4000f05	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000eb6	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000eb8	            0xeb23	                           jmp 0x4000edd	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000eba	    0x660f1f440000	                    nop word [rax + rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000ec0	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000ec2	          0x4c89f6	                            mov rsi, r14	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000ec5	      0xe800000000	                          call 0x4000eca	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4000eca	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000ecd	            0x7506	                           jne 0x4000ed5	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000ecf	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000ed1	        0x480f44eb	                          cmove rbp, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4000ed5	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000ed8	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000edb	            0x7473	                            je 0x4000f50	       881	objcopy.c	FUNCTION_5	FOR_1
0x4000edd	        0xf6431402	               test byte [rbx + 0x14], 2	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000ee1	            0x74f2	                            je 0x4000ed5	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4000ee3	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000ee7	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000eea	            0x75d4	                           jne 0x4000ec0	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4000eec	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000ef0	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000ef2	          0x4c89f6	                            mov rsi, r14	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000ef5	      0xe800000000	                          call 0x4000efa	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000efa	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000efc	            0x75d7	                           jne 0x4000ed5	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4000efe	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4000f05	          0x4d85e4	                           test r12, r12	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4000f08	     0xf843a010000	                            je 0x4001048	      1294	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x4000f0e	    0x488b1d000000	            mov rbx, qword [0x04000f15] 	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000f15	          0x4885db	                           test rbx, rbx	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000f18	            0x7422	                            je 0x4000f3c	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000f1a	        0x498b6d00	                    mov rbp, qword [r13]	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000f1e	            0x6690	                                     nop	      1242	objcopy.c	FUNCTION_19	IF_1
0x4000f20	        0x488b7308	                mov rsi, qword [rbx + 8]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000f24	          0x4889ef	                            mov rdi, rbp	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000f27	      0xe800000000	                          call 0x4000f2c	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000f2c	            0x85c0	                           test eax, eax	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000f2e	     0xf84cc000000	                            je 0x4001000	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4000f34	          0x488b1b	                    mov rbx, qword [rbx]	      1248	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4000f37	          0x4885db	                           test rbx, rbx	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4000f3a	            0x75e4	                           jne 0x4000f20	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4000f3c	      0xb801000000	                              mov eax, 1	      1299	objcopy.c	FUNCTION_21	IF_1	IF_4
0x4000f41	              0x5b	                                 pop rbx	      1330	objcopy.c	FUNCTION_21
0x4000f42	              0x5d	                                 pop rbp	      1330	objcopy.c	FUNCTION_21
0x4000f43	            0x415c	                                 pop r12	      1330	objcopy.c	FUNCTION_21
0x4000f45	            0x415d	                                 pop r13	      1330	objcopy.c	FUNCTION_21
0x4000f47	            0x415e	                                 pop r14	      1330	objcopy.c	FUNCTION_21
0x4000f49	              0xc3	                                     ret	      1330	objcopy.c	FUNCTION_21
0x4000f4a	    0x660f1f440000	                    nop word [rax + rax]	      1330	objcopy.c	FUNCTION_21
0x4000f50	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000f53	            0x74b0	                            je 0x4000f05	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000f55	          0x4d85e4	                           test r12, r12	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x4000f58	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4000f5f	     0xf85f6000000	                           jne 0x400105b	      1291	objcopy.c	FUNCTION_21	IF_1	IF_2
0x4000f65	      0x41f6452120	           test byte [r13 + 0x21], 0x20 	      1304	objcopy.c	FUNCTION_21	IF_6
0x4000f6a	            0x7454	                            je 0x4000fc0	      1304	objcopy.c	FUNCTION_21	IF_6
0x4000f6c	    0x8b1500000000	            mov edx, dword [0x04000f72] 	      1308	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f72	          0x8d42fe	                      lea eax, [rdx - 2]	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f75	          0x83f801	                              cmp eax, 1	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f78	            0x762e	                           jbe 0x4000fa8	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f7a	          0x83fa07	                              cmp edx, 7	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f7d	            0x7429	                            je 0x4000fa8	      1306	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f7f	    0x833d00000000	               cmp dword [0x04000f86], 2	      1309	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f86	            0x7420	                            je 0x4000fa8	      1309	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f88	    0x8b0500000000	            mov eax, dword [0x04000f8e] 	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f8e	            0x85c0	                           test eax, eax	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f90	            0x7516	                           jne 0x4000fa8	      1310	objcopy.c	FUNCTION_21	IF_6	IF_7
0x4000f92	          0x83fa05	                              cmp edx, 5	      1319	objcopy.c	FUNCTION_21	IF_6	IF_9
0x4000f95	     0xf8483000000	                            je 0x400101e	      1319	objcopy.c	FUNCTION_21	IF_6	IF_9
0x4000f9b	          0x83fa04	                              cmp edx, 4	      1322	objcopy.c	FUNCTION_21	IF_6	IF_10
0x4000f9e	            0x7526	                           jne 0x4000fc6	      1322	objcopy.c	FUNCTION_21	IF_6	IF_10
0x4000fa0	            0x31c0	                            xor eax, eax	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x4000fa2	            0xeb9d	                           jmp 0x4000f41	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x4000fa4	         0xf1f4000	                         nop dword [rax]	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x4000fa8	        0x498b7500	                    mov rsi, qword [r13]	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4000fac	      0xbf00000000	                              mov edi, 0	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4000fb1	      0xb907000000	                              mov ecx, 7	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4000fb6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4000fb8	            0x74d8	                            je 0x4000f92	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4000fba	            0xeb80	                           jmp 0x4000f3c	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4000fbc	         0xf1f4000	                         nop dword [rax]	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4000fc0	    0x8b1500000000	            mov edx, dword [0x04000fc6] 	      1315	objcopy.c	FUNCTION_21	IF_6	IF_7	IF_8	CALL_8
0x4000fc6	            0x31c0	                            xor eax, eax	      1323	objcopy.c	FUNCTION_21	IF_6	IF_10
0x4000fc8	          0x83fa06	                              cmp edx, 6	      1326	objcopy.c	FUNCTION_21	IF_11
0x4000fcb	     0xf8570ffffff	                           jne 0x4000f41	      1326	objcopy.c	FUNCTION_21	IF_11
0x4000fd1	        0x498b5d00	                    mov rbx, qword [r13]	      1326	objcopy.c	FUNCTION_21	IF_11
0x4000fd5	          0x4889df	                            mov rdi, rbx	      1232	objcopy.c	FUNCTION_18	CALL_1
0x4000fd8	      0xe800000000	                          call 0x4000fdd	      1232	objcopy.c	FUNCTION_18	CALL_1
0x4000fdd	            0x4898	                                    cdqe	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000fdf	      0xbf00000000	                              mov edi, 0	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000fe4	      0xb904000000	                              mov ecx, 4	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000fe9	      0x488d7403fc	                lea rsi, [rbx + rax - 4]	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4000fee	              0x5b	                                 pop rbx	      1330	objcopy.c	FUNCTION_21
0x4000fef	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1327	objcopy.c	FUNCTION_21	CALL_10
0x4000ff1	              0x5d	                                 pop rbp	      1330	objcopy.c	FUNCTION_21
0x4000ff2	           0xf95c0	                                setne al	      1327	objcopy.c	FUNCTION_21	CALL_10
0x4000ff5	            0x415c	                                 pop r12	      1330	objcopy.c	FUNCTION_21
0x4000ff7	           0xfb6c0	                           movzx eax, al	      1327	objcopy.c	FUNCTION_21	CALL_10
0x4000ffa	            0x415d	                                 pop r13	      1330	objcopy.c	FUNCTION_21
0x4000ffc	            0x415e	                                 pop r14	      1330	objcopy.c	FUNCTION_21
0x4000ffe	              0xc3	                                     ret	      1330	objcopy.c	FUNCTION_21
0x4000fff	              0x90	                                     nop	      1330	objcopy.c	FUNCTION_21
0x4001000	      0xbe00000000	                              mov esi, 0	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001005	            0x31ff	                            xor edi, edi	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001007	      0xba05000000	                              mov edx, 5	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x400100c	      0xe800000000	                          call 0x4001011	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001011	          0x4889ee	                            mov rsi, rbp	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001014	          0x4889c7	                            mov rdi, rax	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001017	            0x31c0	                            xor eax, eax	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001019	      0xe800000000	                          call 0x400101e	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x400101e	        0x498b5d00	                    mov rbx, qword [r13]	      1295	objcopy.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4001022	          0x4889df	                            mov rdi, rbx	      1232	objcopy.c	FUNCTION_18	CALL_1
0x4001025	      0xe800000000	                          call 0x400102a	      1232	objcopy.c	FUNCTION_18	CALL_1
0x400102a	            0x4898	                                    cdqe	      1234	objcopy.c	FUNCTION_18	CALL_2
0x400102c	      0xbf00000000	                              mov edi, 0	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001031	      0xb904000000	                              mov ecx, 4	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001036	      0x488d7403fc	                lea rsi, [rbx + rax - 4]	      1234	objcopy.c	FUNCTION_18	CALL_2
0x400103b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1234	objcopy.c	FUNCTION_18	CALL_2
0x400103d	           0xf94c0	                                 sete al	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001040	           0xfb6c0	                           movzx eax, al	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001043	      0xe9f9feffff	                           jmp 0x4000f41	      1234	objcopy.c	FUNCTION_18	CALL_2
0x4001048	    0x8b1500000000	            mov edx, dword [0x0400104e] 	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x400104e	            0x85d2	                           test edx, edx	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x4001050	     0xf85e6feffff	                           jne 0x4000f3c	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x4001056	      0xe90affffff	                           jmp 0x4000f65	      1300	objcopy.c	FUNCTION_21	IF_1	IF_5
0x400105b	        0x498b5d00	                    mov rbx, qword [r13]	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400105f	      0xbe00000000	                              mov esi, 0	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001064	            0x31ff	                            xor edi, edi	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001066	      0xba05000000	                              mov edx, 5	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400106b	      0xe800000000	                          call 0x4001070	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001070	          0x4889de	                            mov rsi, rbx	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001073	          0x4889c7	                            mov rdi, rax	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001076	            0x31c0	                            xor eax, eax	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001078	      0xe800000000	                          call 0x400107d	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400107d	           0xf1f00	                         nop dword [rax]	      1292	objcopy.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4001080	            0x4154	                                push r12	      1335	objcopy.c	
0x4001082	              0x55	                                push rbp	      1335	objcopy.c	
0x4001083	              0x53	                                push rbx	      1335	objcopy.c	
0x4001084	          0x4889fb	                            mov rbx, rdi	      1335	objcopy.c	
0x4001087	        0x4883ec20	                           sub rsp, 0x20	      1335	objcopy.c	
0x400108b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1335	objcopy.c	
0x4001094	      0x4889442418	             mov qword [rsp + 0x18], rax	      1335	objcopy.c	
0x4001099	            0x31c0	                            xor eax, eax	      1335	objcopy.c	
0x400109b	      0xe860fdffff	     call sym.is_strip_section_1.isra.13	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x40010a0	            0x85c0	                           test eax, eax	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x40010a2	     0xf8578010000	                           jne 0x4001220	      1337	objcopy.c	FUNCTION_22	IF_1	CALL_1
0x40010a8	        0xf6432302	               test byte [rbx + 0x23], 2	      1340	objcopy.c	FUNCTION_22	IF_2
0x40010ac	            0x89c5	                            mov ebp, eax	      1340	objcopy.c	FUNCTION_22	IF_2
0x40010ae	     0xf8414010000	                            je 0x40011c8	      1340	objcopy.c	FUNCTION_22	IF_2
0x40010b4	    0x488b0d000000	            mov rcx, qword [0x040010bb] 	      1207	objcopy.c	FUNCTION_17	IF_1
0x40010bb	    0x488b83f00000	            mov rax, qword [rbx + 0xf0] 	      1207	objcopy.c	FUNCTION_17	IF_1
0x40010c2	          0x4885c9	                           test rcx, rcx	      1207	objcopy.c	FUNCTION_17	IF_1
0x40010c5	     0xf8455010000	                            je 0x4001220	      1207	objcopy.c	FUNCTION_17	IF_1
0x40010cb	        0x488b5008	                mov rdx, qword [rax + 8]	      1210	objcopy.c	FUNCTION_17	IF_2
0x40010cf	        0x837a0805	                  cmp dword [rdx + 8], 5	      1210	objcopy.c	FUNCTION_17	IF_2
0x40010d3	     0xf8547010000	                           jne 0x4001220	      1210	objcopy.c	FUNCTION_17	IF_2
0x40010d9	    0x488bb3e00000	            mov rsi, qword [rbx + 0xe0] 	      1210	objcopy.c	FUNCTION_17	IF_2
0x40010e0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x40010e7	    0x8bb8780c0000	           mov edi, dword [rax + 0xc78] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x40010ed	          0x397e28	            cmp dword [rsi + 0x28], edi 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x40010f0	     0xf852a010000	                           jne 0x4001220	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x40010f6	          0x8b762c	            mov esi, dword [rsi + 0x2c] 	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x40010f9	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      1216	objcopy.c	FUNCTION_17	IF_3	CALL_3
0x4001100	            0x85f6	                           test esi, esi	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001102	     0xf8418010000	                            je 0x4001220	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001108	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400110f	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001116	            0x89f7	                            mov edi, esi	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001118	      0x440fb64205	               movzx r8d, byte [rdx + 5]	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400111d	            0x31d2	                            xor edx, edx	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400111f	          0x49f7f0	                                  div r8	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001122	          0x4839c7	                            cmp rdi, rax	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001125	     0xf83f5000000	                           jae 0x4001220	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400112b	          0x8d46ff	                      lea eax, [rsi - 1]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x400112e	        0x488b04c1	            mov rax, qword [rcx + rax*8]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001132	          0x4885c0	                           test rax, rax	      1348	objcopy.c	FUNCTION_22	IF_2	IF_3
0x4001135	     0xf84e5000000	                            je 0x4001220	      1348	objcopy.c	FUNCTION_22	IF_2	IF_3
0x400113b	    0x833d00000000	               cmp dword [0x04001142], 7	      1355	objcopy.c	FUNCTION_22	IF_2	IF_4
0x4001142	        0x4c8b6008	                mov r12, qword [rax + 8]	      1354	objcopy.c	FUNCTION_22	IF_2
0x4001146	     0xf84a4000000	                            je 0x40011f0	      1355	objcopy.c	FUNCTION_22	IF_2	IF_4
0x400114c	    0x8b1500000000	            mov edx, dword [0x04001152] 	      1183	objcopy.c	FUNCTION_16	IF_1
0x4001152	    0x488b3d000000	            mov rdi, qword [0x04001159] 	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001159	            0x85d2	                           test edx, edx	      1183	objcopy.c	FUNCTION_16	IF_1
0x400115b	     0xf85cf000000	                           jne 0x4001230	      1183	objcopy.c	FUNCTION_16	IF_1
0x4001161	          0x4c89e6	                            mov rsi, r12	      1195	objcopy.c	FUNCTION_16	CALL_2
0x4001164	      0xe800000000	                          call 0x4001169	      1195	objcopy.c	FUNCTION_16	CALL_2
0x4001169	          0x4885c0	                           test rax, rax	      1195	objcopy.c	FUNCTION_16	CALL_2
0x400116c	           0xf95c0	                                setne al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x400116f	           0xfb6c0	                           movzx eax, al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x4001172	            0x85c0	                           test eax, eax	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x4001174	     0xf85a6000000	                           jne 0x4001220	      1357	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_4
0x400117a	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x4001181	    0x4c8ba0c00000	            mov r12, qword [rax + 0xc0] 	      1361	objcopy.c	FUNCTION_22	IF_2	CALL_5
0x4001188	          0x4d85e4	                           test r12, r12	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x400118b	     0xf848f000000	                            je 0x4001220	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x4001191	          0x4c89e3	                            mov rbx, r12	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x4001194	            0xeb22	                           jmp 0x40011b8	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x4001196	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40011a0	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      1366	objcopy.c	FUNCTION_22	IF_2	WHILE_1	CALL_7
0x40011a7	    0x488b98c00000	            mov rbx, qword [rax + 0xc0] 	      1366	objcopy.c	FUNCTION_22	IF_2	WHILE_1	CALL_7
0x40011ae	          0x4939dc	                            cmp r12, rbx	      1367	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_6
0x40011b1	            0x746d	                            je 0x4001220	      1367	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_6
0x40011b3	          0x4885db	                           test rbx, rbx	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40011b6	            0x7468	                            je 0x4001220	      1362	objcopy.c	FUNCTION_22	IF_2	WHILE_1
0x40011b8	          0x4889df	                            mov rdi, rbx	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40011bb	      0xe840fcffff	     call sym.is_strip_section_1.isra.13	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40011c0	            0x85c0	                           test eax, eax	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40011c2	            0x75dc	                           jne 0x40011a0	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40011c4	         0xf1f4000	                         nop dword [rax]	      1364	objcopy.c	FUNCTION_22	IF_2	WHILE_1	IF_5	CALL_6
0x40011c8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1375	objcopy.c	FUNCTION_22
0x40011cd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1375	objcopy.c	FUNCTION_22
0x40011d6	            0x89e8	                            mov eax, ebp	      1375	objcopy.c	FUNCTION_22
0x40011d8	     0xf8599000000	                           jne 0x4001277	      1375	objcopy.c	FUNCTION_22
0x40011de	        0x4883c420	                           add rsp, 0x20	      1375	objcopy.c	FUNCTION_22
0x40011e2	              0x5b	                                 pop rbx	      1375	objcopy.c	FUNCTION_22
0x40011e3	              0x5d	                                 pop rbp	      1375	objcopy.c	FUNCTION_22
0x40011e4	            0x415c	                                 pop r12	      1375	objcopy.c	FUNCTION_22
0x40011e6	              0xc3	                                     ret	      1375	objcopy.c	FUNCTION_22
0x40011e7	    0x660f1f840000	                    nop word [rax + rax]	      1375	objcopy.c	FUNCTION_22
0x40011f0	    0x8b0500000000	            mov eax, dword [0x040011f6] 	      1183	objcopy.c	FUNCTION_16	IF_1
0x40011f6	    0x488b3d000000	            mov rdi, qword [0x040011fd] 	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x40011fd	            0x85c0	                           test eax, eax	      1183	objcopy.c	FUNCTION_16	IF_1
0x40011ff	            0x7557	                           jne 0x4001258	      1183	objcopy.c	FUNCTION_16	IF_1
0x4001201	          0x4c89e6	                            mov rsi, r12	      1195	objcopy.c	FUNCTION_16	CALL_2
0x4001204	      0xe800000000	                          call 0x4001209	      1195	objcopy.c	FUNCTION_16	CALL_2
0x4001209	          0x4885c0	                           test rax, rax	      1195	objcopy.c	FUNCTION_16	CALL_2
0x400120c	           0xf95c0	                                setne al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x400120f	           0xfb6c0	                           movzx eax, al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x4001212	            0x85c0	                           test eax, eax	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x4001214	     0xf8532ffffff	                           jne 0x400114c	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x400121a	    0x660f1f440000	                    nop word [rax + rax]	      1356	objcopy.c	FUNCTION_22	IF_2	IF_4	CALL_3
0x4001220	      0xbd01000000	                              mov ebp, 1	      1338	objcopy.c	FUNCTION_22	IF_1
0x4001225	            0xeba1	                           jmp 0x40011c8	      1338	objcopy.c	FUNCTION_22	IF_1
0x4001227	    0x660f1f840000	                    nop word [rax + rax]	      1338	objcopy.c	FUNCTION_22	IF_1
0x4001230	          0x4889e2	                            mov rdx, rsp	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x4001233	      0xbe00000000	                              mov esi, 0	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x4001238	        0x4c892424	                    mov qword [rsp], r12	      1187	objcopy.c	FUNCTION_16	IF_1
0x400123c	    0xc74424080000	                  mov dword [rsp + 8], 0	      1188	objcopy.c	FUNCTION_16	IF_1
0x4001244	      0xe800000000	                          call 0x4001249	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x4001249	        0x8b442408	                mov eax, dword [rsp + 8]	      1192	objcopy.c	FUNCTION_16	IF_1
0x400124d	      0xe920ffffff	                           jmp 0x4001172	      1192	objcopy.c	FUNCTION_16	IF_1
0x4001252	    0x660f1f440000	                    nop word [rax + rax]	      1192	objcopy.c	FUNCTION_16	IF_1
0x4001258	          0x4889e2	                            mov rdx, rsp	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x400125b	      0xbe00000000	                              mov esi, 0	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x4001260	        0x4c892424	                    mov qword [rsp], r12	      1187	objcopy.c	FUNCTION_16	IF_1
0x4001264	    0xc74424080000	                  mov dword [rsp + 8], 0	      1188	objcopy.c	FUNCTION_16	IF_1
0x400126c	      0xe800000000	                          call 0x4001271	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x4001271	        0x8b442408	                mov eax, dword [rsp + 8]	      1192	objcopy.c	FUNCTION_16	IF_1
0x4001275	            0xeb9b	                           jmp 0x4001212	      1192	objcopy.c	FUNCTION_16	IF_1
0x4001277	      0xe800000000	                          call 0x400127c	      1375	objcopy.c	FUNCTION_22
0x400127c	         0xf1f4000	                         nop dword [rax]	      1375	objcopy.c	FUNCTION_22
0x4001280	            0x4157	                                push r15	      3919	objcopy.c	FUNCTION_50
0x4001282	            0x4156	                                push r14	      3919	objcopy.c	FUNCTION_50
0x4001284	            0x4155	                                push r13	      3919	objcopy.c	FUNCTION_50
0x4001286	            0x4154	                                push r12	      3919	objcopy.c	FUNCTION_50
0x4001288	              0x55	                                push rbp	      3919	objcopy.c	FUNCTION_50
0x4001289	              0x53	                                push rbx	      3919	objcopy.c	FUNCTION_50
0x400128a	        0x4883ec48	                           sub rsp, 0x48	      3919	objcopy.c	FUNCTION_50
0x400128e	      0x48897c2408	                mov qword [rsp + 8], rdi	      3919	objcopy.c	FUNCTION_50
0x4001293	    0x8b3d00000000	            mov edi, dword [0x04001299] 	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001299	    0x64488b042528	                mov rax, qword fs:[0x28]	      3919	objcopy.c	FUNCTION_50
0x40012a2	      0x4889442438	             mov qword [rsp + 0x38], rax	      3919	objcopy.c	FUNCTION_50
0x40012a7	            0x31c0	                            xor eax, eax	      3919	objcopy.c	FUNCTION_50
0x40012a9	            0x85ff	                           test edi, edi	      3843	objcopy.c	FUNCTION_46	IF_1
0x40012ab	            0x750a	                           jne 0x40012b7	      3843	objcopy.c	FUNCTION_46	IF_1
0x40012ad	    0x8b0d00000000	            mov ecx, dword [0x040012b3] 	      3846	objcopy.c	FUNCTION_46	IF_2
0x40012b3	            0x85c9	                           test ecx, ecx	      3846	objcopy.c	FUNCTION_46	IF_2
0x40012b5	            0x7429	                            je 0x40012e0	      3846	objcopy.c	FUNCTION_46	IF_2
0x40012b7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4013	objcopy.c	FUNCTION_50
0x40012bc	    0x644833042528	                xor rax, qword fs:[0x28]	      4013	objcopy.c	FUNCTION_50
0x40012c5	     0xf8534030000	                           jne 0x40015ff	      4013	objcopy.c	FUNCTION_50
0x40012cb	        0x4883c448	                           add rsp, 0x48	      4013	objcopy.c	FUNCTION_50
0x40012cf	              0x5b	                                 pop rbx	      4013	objcopy.c	FUNCTION_50
0x40012d0	              0x5d	                                 pop rbp	      4013	objcopy.c	FUNCTION_50
0x40012d1	            0x415c	                                 pop r12	      4013	objcopy.c	FUNCTION_50
0x40012d3	            0x415d	                                 pop r13	      4013	objcopy.c	FUNCTION_50
0x40012d5	            0x415e	                                 pop r14	      4013	objcopy.c	FUNCTION_50
0x40012d7	            0x415f	                                 pop r15	      4013	objcopy.c	FUNCTION_50
0x40012d9	              0xc3	                                     ret	      4013	objcopy.c	FUNCTION_50
0x40012da	    0x660f1f440000	                    nop word [rax + rax]	      4013	objcopy.c	FUNCTION_50
0x40012e0	          0x4889f7	                            mov rdi, rsi	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x40012e3	          0x4989f5	                            mov r13, rsi	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x40012e6	          0x4989d4	                            mov r12, rdx	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x40012e9	      0xe892fdffff	       call sym.is_strip_section.isra.17	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x40012ee	            0x85c0	                           test eax, eax	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x40012f0	            0x75c5	                           jne 0x40012b7	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x40012f2	    0x488b1d000000	            mov rbx, qword [0x040012f9] 	      1242	objcopy.c	FUNCTION_19	IF_1
0x40012f9	          0x4885db	                           test rbx, rbx	      1242	objcopy.c	FUNCTION_19	IF_1
0x40012fc	            0x7422	                            je 0x4001320	      1242	objcopy.c	FUNCTION_19	IF_1
0x40012fe	        0x498b6d00	                    mov rbp, qword [r13]	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001302	    0x660f1f440000	                    nop word [rax + rax]	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001308	        0x488b7308	                mov rsi, qword [rbx + 8]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400130c	          0x4889ef	                            mov rdi, rbp	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400130f	      0xe800000000	                          call 0x4001314	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001314	            0x85c0	                           test eax, eax	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001316	            0x749f	                            je 0x40012b7	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001318	          0x488b1b	                    mov rbx, qword [rbx]	      1248	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x400131b	          0x4885db	                           test rbx, rbx	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x400131e	            0x75e8	                           jne 0x4001308	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x4001320	        0x418b4520	            mov eax, dword [r13 + 0x20] 	      3861	objcopy.c	FUNCTION_46	IF_6
0x4001324	      0x2500000002	                      and eax, 0x2000000	      3861	objcopy.c	FUNCTION_46	IF_6
0x4001329	        0x89442414	             mov dword [rsp + 0x14], eax	      3861	objcopy.c	FUNCTION_46	IF_6
0x400132d	            0x7588	                           jne 0x40012b7	      3861	objcopy.c	FUNCTION_46	IF_6
0x400132f	      0x49837d3800	               cmp qword [r13 + 0x38], 0	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001334	        0x4d8b7568	            mov r14, qword [r13 + 0x68] 	      3864	objcopy.c	FUNCTION_46
0x4001338	     0xf8479ffffff	                            je 0x40012b7	      3867	objcopy.c	FUNCTION_46	IF_7
0x400133e	          0x4d85f6	                           test r14, r14	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001341	     0xf8470ffffff	                            je 0x40012b7	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001347	    0x410fb6442444	           movzx eax, byte [r12 + 0x44] 	      3932	objcopy.c	FUNCTION_50	IF_2
0x400134d	          0x83e007	                              and eax, 7	      3932	objcopy.c	FUNCTION_50	IF_2
0x4001350	            0x3c03	                               cmp al, 3	      3932	objcopy.c	FUNCTION_50	IF_2
0x4001352	            0x7409	                            je 0x400135d	      3932	objcopy.c	FUNCTION_50	IF_2
0x4001354	    0x833d00000000	               cmp dword [0x0400135b], 6	      3933	objcopy.c	FUNCTION_50	IF_2
0x400135b	            0x7523	                           jne 0x4001380	      3933	objcopy.c	FUNCTION_50	IF_2
0x400135d	      0x498b442408	                mov rax, qword [r12 + 8]	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001362	            0x31c9	                            xor ecx, ecx	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001364	            0x31d2	                            xor edx, edx	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001366	          0x4c89f6	                            mov rsi, r14	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001369	          0x4c89e7	                            mov rdi, r12	      3956	objcopy.c	FUNCTION_50	IF_5
0x400136c	    0xff9078020000	                call qword [rax + 0x278]	      3956	objcopy.c	FUNCTION_50	IF_5
0x4001372	      0x41836620fb	      and dword [r14 + 0x20], 0xfffffffb	      3957	objcopy.c	FUNCTION_50	IF_5
0x4001377	      0xe93bffffff	                           jmp 0x40012b7	      3957	objcopy.c	FUNCTION_50	IF_5
0x400137c	         0xf1f4000	                         nop dword [rax]	      3957	objcopy.c	FUNCTION_50	IF_5
0x4001380	    0x4c8b3d000000	            mov r15, qword [0x04001387] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001387	        0x498b6d00	                    mov rbp, qword [r13]	       881	objcopy.c	FUNCTION_5	FOR_1
0x400138b	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x400138e	            0x7453	                            je 0x40013e3	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001390	            0x31db	                            xor ebx, ebx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001392	            0xeb25	                           jmp 0x40013b9	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001394	         0xf1f4000	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001398	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400139a	          0x4889ee	                            mov rsi, rbp	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400139d	      0xe800000000	                          call 0x40013a2	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x40013a2	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40013a4	            0x7507	                           jne 0x40013ad	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40013a6	          0x4885db	                           test rbx, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40013a9	        0x490f44df	                          cmove rbx, r15	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40013ad	          0x4d8b3f	                    mov r15, qword [r15]	       881	objcopy.c	FUNCTION_5	FOR_1
0x40013b0	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x40013b3	     0xf84d7000000	                            je 0x4001490	       881	objcopy.c	FUNCTION_5	FOR_1
0x40013b9	      0x41f6471480	           test byte [r15 + 0x14], 0x80 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x40013be	            0x74ed	                            je 0x40013ad	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x40013c0	        0x498b7f08	                mov rdi, qword [r15 + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x40013c4	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x40013c7	            0x75cf	                           jne 0x4001398	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x40013c9	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40013cd	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40013cf	          0x4889ee	                            mov rsi, rbp	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40013d2	      0xe800000000	                          call 0x40013d7	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40013d7	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40013d9	            0x75d2	                           jne 0x40013ad	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40013db	    0x41c747100100	               mov dword [r15 + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x40013e3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x40013e8	          0x4c89ee	                            mov rsi, r13	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x40013eb	      0xe800000000	                          call 0x40013f0	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x40013f0	          0x4885c0	                           test rax, rax	      3940	objcopy.c	FUNCTION_50	ELSE_1	IF_3
0x40013f3	          0x4989c7	                            mov r15, rax	      3938	objcopy.c	FUNCTION_50	ELSE_1	CALL_3
0x40013f6	     0xf88e0010000	                            js 0x40015dc	      3940	objcopy.c	FUNCTION_50	ELSE_1	IF_3
0x40013fc	     0xf845bffffff	                            je 0x400135d	      3954	objcopy.c	FUNCTION_50	IF_5
0x4001402	    0x498bad800000	            mov rbp, qword [r13 + 0x80] 	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4001409	          0x4885ed	                           test rbp, rbp	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x400140c	     0xf845e010000	                            je 0x4001570	      3961	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4001412	    0x418b9d880000	            mov ebx, dword [r13 + 0x88] 	      3965	objcopy.c	FUNCTION_50	ELSE_3	IF_6
0x4001419	    0x833d00000000	               cmp dword [0x04001420], 7	      3981	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001420	     0xf8482000000	                            je 0x40014a8	      3981	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001426	        0x895c2414	             mov dword [rsp + 0x14], ebx	      3981	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x400142a	      0x498b442408	                mov rax, qword [r12 + 8]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x400142f	          0x4885db	                           test rbx, rbx	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001432	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001439	            0x7435	                            je 0x4001470	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x400143b	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x400143f	          0x4889ea	                            mov rdx, rbp	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001442	          0x4c89f6	                            mov rsi, r14	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001445	          0x4c89e7	                            mov rdi, r12	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001448	            0xffd0	                                call rax	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x400144a	      0xe968feffff	                           jmp 0x40012b7	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x400144f	    0x4983bd800000	               cmp qword [r13 + 0x80], 0	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001457	     0xf8475010000	                            je 0x40015d2	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x400145d	          0x4889c5	                            mov rbp, rax	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001460	      0x498b442408	                mov rax, qword [r12 + 8]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001465	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x400146c	         0xf1f4000	                         nop dword [rax]	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001470	          0x4c89e7	                            mov rdi, r12	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001473	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001477	            0x31d2	                            xor edx, edx	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x4001479	          0x4c89f6	                            mov rsi, r14	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x400147c	            0xffd0	                                call rax	      4006	objcopy.c	FUNCTION_50	ELSE_3
0x400147e	      0x41836620fb	      and dword [r14 + 0x20], 0xfffffffb	      4009	objcopy.c	FUNCTION_50	ELSE_3	IF_12
0x4001483	          0x4889ef	                            mov rdi, rbp	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x4001486	      0xe800000000	                          call 0x400148b	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x400148b	      0xe927feffff	                           jmp 0x40012b7	      4010	objcopy.c	FUNCTION_50	ELSE_3	IF_12	CALL_13
0x4001490	          0x4885db	                           test rbx, rbx	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001493	     0xf844affffff	                            je 0x40013e3	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001499	    0xc74310010000	               mov dword [rbx + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x40014a0	      0xe9b8feffff	                           jmp 0x400135d	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x40014a5	           0xf1f00	                         nop dword [rax]	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x40014a8	          0x4c89ff	                            mov rdi, r15	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x40014ab	      0xe800000000	                          call 0x40014b0	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x40014b0	          0x4885db	                           test rbx, rbx	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x40014b3	      0x4889442418	             mov qword [rsp + 0x18], rax	      3989	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_10
0x40014b8	            0x7495	                            je 0x400144f	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x40014ba	    0x48c744240800	                  mov qword [rsp + 8], 0	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x40014c3	          0x4531ff	                          xor r15d, r15d	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x40014c6	            0xeb3f	                           jmp 0x4001507	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x40014c8	     0xf1f84000000	                   nop dword [rax + rax]	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x40014d0	      0xe800000000	                          call 0x40014d5	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40014d5	          0x4885c0	                           test rax, rax	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40014d8	           0xf95c0	                                setne al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40014db	           0xfb6c0	                           movzx eax, al	      1195	objcopy.c	FUNCTION_16	CALL_2
0x40014de	            0x85c0	                           test eax, eax	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x40014e0	            0x741c	                            je 0x40014fe	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x40014e2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x40014e7	      0x4a8b44fd00	            mov rax, qword [rbp + r15*8]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x40014ec	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x40014f1	        0x488904ca	            mov qword [rdx + rcx*8], rax	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x40014f5	        0x488d4101	                      lea rax, [rcx + 1]	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x40014f9	      0x4889442408	                mov qword [rsp + 8], rax	      3998	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10
0x40014fe	        0x4983c701	                              add r15, 1	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001502	          0x4939df	                            cmp r15, rbx	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001505	            0x744c	                            je 0x4001553	      3990	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1
0x4001507	      0x4a8b44fd00	            mov rax, qword [rbp + r15*8]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x400150c	          0x488b00	                    mov rax, qword [rax]	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x400150f	          0x4885c0	                           test rax, rax	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001512	            0x74ea	                            je 0x40014fe	      3993	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001514	          0x488b00	                    mov rax, qword [rax]	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x4001517	          0x4885c0	                           test rax, rax	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x400151a	            0x74e2	                            je 0x40014fe	      3995	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9
0x400151c	        0x488b7008	                mov rsi, qword [rax + 8]	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x4001520	    0x8b0500000000	            mov eax, dword [0x04001526] 	      1183	objcopy.c	FUNCTION_16	IF_1
0x4001526	    0x488b3d000000	            mov rdi, qword [0x0400152d] 	      3996	objcopy.c	FUNCTION_50	ELSE_3	IF_8	FOR_1	IF_9	IF_10	CALL_11
0x400152d	            0x85c0	                           test eax, eax	      1183	objcopy.c	FUNCTION_16	IF_1
0x400152f	            0x749f	                            je 0x40014d0	      1183	objcopy.c	FUNCTION_16	IF_1
0x4001531	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x4001536	      0x4889742420	             mov qword [rsp + 0x20], rsi	      1187	objcopy.c	FUNCTION_16	IF_1
0x400153b	      0xbe00000000	                              mov esi, 0	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x4001540	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1188	objcopy.c	FUNCTION_16	IF_1
0x4001548	      0xe800000000	                          call 0x400154d	      1190	objcopy.c	FUNCTION_16	IF_1	CALL_1
0x400154d	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1192	objcopy.c	FUNCTION_16	IF_1
0x4001551	            0xeb8b	                           jmp 0x40014de	      1192	objcopy.c	FUNCTION_16	IF_1
0x4001553	    0x4983bd800000	               cmp qword [r13 + 0x80], 0	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x400155b	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001560	        0x895c2414	             mov dword [rsp + 0x14], ebx	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001564	            0x746c	                            je 0x40015d2	      4001	objcopy.c	FUNCTION_50	ELSE_3	IF_8	IF_11
0x4001566	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x400156b	      0xe9bafeffff	                           jmp 0x400142a	      4003	objcopy.c	FUNCTION_50	ELSE_3	IF_8
0x4001570	          0x4c89ff	                            mov rdi, r15	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x4001573	      0xe800000000	                          call 0x4001578	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x4001578	    0x488b0d000000	            mov rcx, qword [0x0400157f] 	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x400157f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001584	          0x4889c2	                            mov rdx, rax	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001587	          0x4c89ee	                            mov rsi, r13	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x400158a	          0x4889c5	                            mov rbp, rax	      3970	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_6
0x400158d	      0xe800000000	                          call 0x4001592	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001592	          0x4885c0	                           test rax, rax	      3972	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x4001595	          0x4889c3	                            mov rbx, rax	      3971	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	CALL_7
0x4001598	     0xf897bfeffff	                           jns 0x4001419	      3972	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x400159e	      0xba05000000	                              mov edx, 5	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x40015a3	      0xbe00000000	                              mov esi, 0	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x40015a8	            0x31ff	                            xor edi, edi	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x40015aa	    0xc70500000000	               mov dword [0x040015b4], 1	      3974	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7
0x40015b4	      0xe800000000	                          call 0x40015b9	      3976	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_9
0x40015b9	          0x4889c1	                            mov rcx, rax	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x40015bc	      0x488b742408	                mov rsi, qword [rsp + 8]	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x40015c1	          0x4c89ea	                            mov rdx, r13	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x40015c4	            0x31ff	                            xor edi, edi	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x40015c6	            0x31c0	                            xor eax, eax	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x40015c8	      0xe800000000	                          call 0x40015cd	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x40015cd	      0xe9e5fcffff	                           jmp 0x40012b7	      3975	objcopy.c	FUNCTION_50	ELSE_3	ELSE_4	IF_7	CALL_8
0x40015d2	          0x4889ef	                            mov rdi, rbp	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x40015d5	      0xe800000000	                          call 0x40015da	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x40015da	            0xeb8a	                           jmp 0x4001566	      4002	objcopy.c	FUNCTION_50	ELSE_3	IF_8	CALL_12
0x40015dc	        0x4983ffff	             cmp r15, 0xffffffffffffffff	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x40015e0	            0x740e	                            je 0x40015f0	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x40015e2	    0xc70500000000	               mov dword [0x040015ec], 1	      3947	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2
0x40015ec	            0x31c9	                            xor ecx, ecx	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x40015ee	            0xebcc	                           jmp 0x40015bc	      3948	objcopy.c	FUNCTION_50	ELSE_1	IF_3	ELSE_2	CALL_5
0x40015f0	      0xe800000000	                          call 0x40015f5	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x40015f5	          0x83f805	                              cmp eax, 5	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x40015f8	            0x75e8	                           jne 0x40015e2	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x40015fa	      0xe95efdffff	                           jmp 0x400135d	      3943	objcopy.c	FUNCTION_50	ELSE_1	IF_3	IF_4	CALL_4
0x40015ff	      0xe800000000	                          call 0x4001604	      4013	objcopy.c	FUNCTION_50
0x4001604	            0x6690	                                     nop	      4013	objcopy.c	FUNCTION_50
0x4001606	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4013	objcopy.c	FUNCTION_50
0x4001610	            0x4156	                                push r14	      4020	objcopy.c	FUNCTION_51
0x4001612	            0x4155	                                push r13	      4020	objcopy.c	FUNCTION_51
0x4001614	            0x4154	                                push r12	      4020	objcopy.c	FUNCTION_51
0x4001616	              0x55	                                push rbp	      4020	objcopy.c	FUNCTION_51
0x4001617	              0x53	                                push rbx	      4020	objcopy.c	FUNCTION_51
0x4001618	        0x4883ec20	                           sub rsp, 0x20	      4020	objcopy.c	FUNCTION_51
0x400161c	    0x448b05000000	            mov r8d, dword [0x04001623] 	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001623	    0x64488b042528	                mov rax, qword fs:[0x28]	      4020	objcopy.c	FUNCTION_51
0x400162c	      0x4889442418	             mov qword [rsp + 0x18], rax	      4020	objcopy.c	FUNCTION_51
0x4001631	            0x31c0	                            xor eax, eax	      4020	objcopy.c	FUNCTION_51
0x4001633	          0x4585c0	                           test r8d, r8d	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001636	            0x750a	                           jne 0x4001642	      3843	objcopy.c	FUNCTION_46	IF_1
0x4001638	    0x8b0d00000000	            mov ecx, dword [0x0400163e] 	      3846	objcopy.c	FUNCTION_46	IF_2
0x400163e	            0x85c9	                           test ecx, ecx	      3846	objcopy.c	FUNCTION_46	IF_2
0x4001640	            0x7426	                            je 0x4001668	      3846	objcopy.c	FUNCTION_46	IF_2
0x4001642	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4139	objcopy.c	FUNCTION_51
0x4001647	    0x644833042528	                xor rax, qword fs:[0x28]	      4139	objcopy.c	FUNCTION_51
0x4001650	     0xf85ef030000	                           jne 0x4001a45	      4139	objcopy.c	FUNCTION_51
0x4001656	        0x4883c420	                           add rsp, 0x20	      4139	objcopy.c	FUNCTION_51
0x400165a	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x400165b	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x400165c	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x400165e	            0x415d	                                 pop r13	      4139	objcopy.c	FUNCTION_51
0x4001660	            0x415e	                                 pop r14	      4139	objcopy.c	FUNCTION_51
0x4001662	              0xc3	                                     ret	      4139	objcopy.c	FUNCTION_51
0x4001663	       0xf1f440000	                   nop dword [rax + rax]	      4139	objcopy.c	FUNCTION_51
0x4001668	          0x4989fc	                            mov r12, rdi	      4139	objcopy.c	FUNCTION_51
0x400166b	          0x4889f7	                            mov rdi, rsi	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400166e	          0x4889f3	                            mov rbx, rsi	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001671	          0x4989d5	                            mov r13, rdx	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001674	      0xe807faffff	       call sym.is_strip_section.isra.17	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x4001679	            0x85c0	                           test eax, eax	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400167b	            0x75c5	                           jne 0x4001642	      3849	objcopy.c	FUNCTION_46	IF_3	CALL_1
0x400167d	    0x488b2d000000	            mov rbp, qword [0x04001684] 	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001684	          0x4885ed	                           test rbp, rbp	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001687	            0x7420	                            je 0x40016a9	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001689	          0x4c8b33	                    mov r14, qword [rbx]	      1242	objcopy.c	FUNCTION_19	IF_1
0x400168c	         0xf1f4000	                         nop dword [rax]	      1242	objcopy.c	FUNCTION_19	IF_1
0x4001690	        0x488b7508	                mov rsi, qword [rbp + 8]	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001694	          0x4c89f7	                            mov rdi, r14	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x4001697	      0xe800000000	                          call 0x400169c	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400169c	            0x85c0	                           test eax, eax	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x400169e	            0x74a2	                            je 0x4001642	      1250	objcopy.c	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_1
0x40016a0	        0x488b6d00	                    mov rbp, qword [rbp]	      1248	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x40016a4	          0x4885ed	                           test rbp, rbp	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x40016a7	            0x75e7	                           jne 0x4001690	      1246	objcopy.c	FUNCTION_19	IF_1	FOR_1
0x40016a9	    0x8b0500000000	            mov eax, dword [0x040016af] 	      1261	objcopy.c	FUNCTION_20	IF_1
0x40016af	            0x85c0	                           test eax, eax	      1261	objcopy.c	FUNCTION_20	IF_1
0x40016b1	            0x7437	                            je 0x40016ea	      1261	objcopy.c	FUNCTION_20	IF_1
0x40016b3	      0x498b442408	                mov rax, qword [r12 + 8]	      1262	objcopy.c	FUNCTION_20	IF_1
0x40016b8	        0x83780805	                  cmp dword [rax + 8], 5	      1262	objcopy.c	FUNCTION_20	IF_1
0x40016bc	            0x752c	                           jne 0x40016ea	      1262	objcopy.c	FUNCTION_20	IF_1
0x40016be	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40016c5	        0x83780407	                  cmp dword [rax + 4], 7	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40016c9	            0x751f	                           jne 0x40016ea	      1263	objcopy.c	FUNCTION_20	IF_1	CALL_1
0x40016cb	        0xf6400a10	            test byte [rax + 0xa], 0x10 	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40016cf	     0xf856dffffff	                           jne 0x4001642	      1266	objcopy.c	FUNCTION_20	IF_1	CALL_2
0x40016d5	          0x488b33	                    mov rsi, qword [rbx]	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016d8	      0xbf00000000	                              mov edi, 0	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016dd	      0xb916000000	                           mov ecx, 0x16	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016e2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016e4	     0xf8458ffffff	                            je 0x4001642	      1270	objcopy.c	FUNCTION_20	IF_1	CALL_3
0x40016ea	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      3860	objcopy.c	FUNCTION_46
0x40016ed	      0xa900000002	                     test eax, 0x2000000	      3861	objcopy.c	FUNCTION_46	IF_6
0x40016f2	     0xf854affffff	                           jne 0x4001642	      3861	objcopy.c	FUNCTION_46	IF_6
0x40016f8	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      3865	objcopy.c	FUNCTION_46
0x40016fc	        0x4c8b7368	            mov r14, qword [rbx + 0x68] 	      3864	objcopy.c	FUNCTION_46
0x4001700	          0x4885d2	                           test rdx, rdx	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001703	     0xf8439ffffff	                            je 0x4001642	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001709	          0x4d85f6	                           test r14, r14	      3867	objcopy.c	FUNCTION_46	IF_7
0x400170c	     0xf8430ffffff	                            je 0x4001642	      3867	objcopy.c	FUNCTION_46	IF_7
0x4001712	          0xf6c401	                              test ah, 1	      4036	objcopy.c	FUNCTION_51	IF_2
0x4001715	      0x4889542408	                mov qword [rsp + 8], rdx	      4034	objcopy.c	FUNCTION_51
0x400171a	            0x740b	                            je 0x4001727	      4036	objcopy.c	FUNCTION_51	IF_2
0x400171c	      0x41f6462101	               test byte [r14 + 0x21], 1	      4037	objcopy.c	FUNCTION_51	IF_2
0x4001721	     0xf85fe000000	                           jne 0x4001825	      4037	objcopy.c	FUNCTION_51	IF_2
0x4001727	          0x4c8b23	                    mov r12, qword [rbx]	      4117	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_12
0x400172a	    0x488b1d000000	            mov rbx, qword [0x04001731] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001731	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001734	     0xf8408ffffff	                            je 0x4001642	       881	objcopy.c	FUNCTION_5	FOR_1
0x400173a	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x400173c	            0xeb1f	                           jmp 0x400175d	       881	objcopy.c	FUNCTION_5	FOR_1
0x400173e	            0x6690	                                     nop	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001740	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001742	          0x4c89e6	                            mov rsi, r12	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001745	      0xe800000000	                          call 0x400174a	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400174a	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400174d	            0x7506	                           jne 0x4001755	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400174f	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001751	        0x480f44eb	                          cmove rbp, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001755	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001758	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x400175b	            0x7433	                            je 0x4001790	       881	objcopy.c	FUNCTION_5	FOR_1
0x400175d	        0xf6431440	           test byte [rbx + 0x14], 0x40 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001761	            0x74f2	                            je 0x4001755	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001763	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001767	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x400176a	            0x75d4	                           jne 0x4001740	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x400176c	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001770	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001772	          0x4c89e6	                            mov rsi, r12	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001775	      0xe800000000	                          call 0x400177a	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400177a	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400177c	            0x75d7	                           jne 0x4001755	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400177e	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001785	      0xe9b8feffff	                           jmp 0x4001642	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x400178a	    0x660f1f440000	                    nop word [rax + rax]	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001790	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001793	     0xf84a9feffff	                            je 0x4001642	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001799	        0xf6452901	               test byte [rbp + 0x29], 1	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x400179d	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x40017a4	     0xf8498feffff	                            je 0x4001642	      4119	objcopy.c	FUNCTION_51	ELSE_2	IF_11
0x40017aa	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x40017af	      0xe800000000	                          call 0x40017b4	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x40017b4	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      4129	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_14
0x40017b9	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_67	CALL_6
0x40017bb	          0x4889c3	                            mov rbx, rax	      4121	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_13
0x40017be	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_67	CALL_6
0x40017c1	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_67	CALL_6
0x40017c4	      0xe800000000	                          call 0x40017c9	        90	string3.h	FUNCTION_67	CALL_6
0x40017c9	            0x31c9	                            xor ecx, ecx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017cb	          0x4989e8	                             mov r8, rbp	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017ce	          0x4889da	                            mov rdx, rbx	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017d1	          0x4c89f6	                            mov rsi, r14	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017d4	          0x4c89ef	                            mov rdi, r13	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017d7	      0xe800000000	                          call 0x40017dc	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017dc	            0x85c0	                           test eax, eax	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017de	     0xf854d020000	                           jne 0x4001a31	      4130	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_15
0x40017e4	            0x31c9	                            xor ecx, ecx	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017e6	            0x31ff	                            xor edi, edi	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017e8	          0x4c89f2	                            mov rdx, r14	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017eb	          0x4c89ee	                            mov rsi, r13	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017ee	    0xc70500000000	               mov dword [0x040017f8], 1	      4132	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12
0x40017f8	      0xe800000000	                          call 0x40017fd	      4133	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_16
0x40017fd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001802	    0x644833042528	                xor rax, qword fs:[0x28]	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x400180b	     0xf8534020000	                           jne 0x4001a45	      4134	objcopy.c	FUNCTION_51	ELSE_2	IF_11	IF_12	CALL_17
0x4001811	        0x4883c420	                           add rsp, 0x20	      4139	objcopy.c	FUNCTION_51
0x4001815	          0x4889df	                            mov rdi, rbx	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001818	              0x5b	                                 pop rbx	      4139	objcopy.c	FUNCTION_51
0x4001819	              0x5d	                                 pop rbp	      4139	objcopy.c	FUNCTION_51
0x400181a	            0x415c	                                 pop r12	      4139	objcopy.c	FUNCTION_51
0x400181c	            0x415d	                                 pop r13	      4139	objcopy.c	FUNCTION_51
0x400181e	            0x415e	                                 pop r14	      4139	objcopy.c	FUNCTION_51
0x4001820	      0xe900000000	                           jmp 0x4001825	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001825	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x400182a	          0x4889de	                            mov rsi, rbx	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x400182d	          0x4c89e7	                            mov rdi, r12	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x4001830	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4039	objcopy.c	FUNCTION_51	IF_2
0x4001839	      0xe800000000	                          call 0x400183e	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x400183e	            0x85c0	                           test eax, eax	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x4001840	     0xf84c1010000	                            je 0x4001a07	      4041	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_2
0x4001846	      0x4c8d442408	                       lea r8, [rsp + 8]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x400184b	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001850	          0x4c89ea	                            mov rdx, r13	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001853	          0x4889de	                            mov rsi, rbx	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001856	          0x4c89e7	                            mov rdi, r12	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001859	      0xe800000000	                          call 0x400185e	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x400185e	            0x85c0	                           test eax, eax	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001860	     0xf84a1010000	                            je 0x4001a07	      4042	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_3
0x4001866	    0x8b2d00000000	            mov ebp, dword [0x0400186c] 	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x400186c	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001871	            0x85ed	                           test ebp, ebp	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4001873	            0x747e	                            je 0x40018f3	      4051	objcopy.c	FUNCTION_51	IF_2	IF_4
0x4001875	            0x31d2	                            xor edx, edx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001877	          0x4c63d5	                         movsxd r10, ebp	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400187a	          0x4c89c0	                             mov rax, r8	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x400187d	          0x49f7f2	                                 div r10	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001880	          0x4885d2	                           test rdx, rdx	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001883	     0xf85d6010000	                           jne 0x4001a5f	      4056	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5
0x4001889	          0x4d85c0	                             test r8, r8	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400188c	            0x7465	                            je 0x40018f3	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400188e	          0x4189eb	                           mov r11d, ebp	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001891	          0x4531c9	                            xor r9d, r9d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001894	        0x41c1eb1f	                          shr r11d, 0x1f	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x4001898	          0x4101eb	                           add r11d, ebp	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400189b	        0x498d6aff	                      lea rbp, [r10 - 1]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x400189f	          0x41d1fb	                             sar r11d, 1	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018a2	          0x4d63db	                        movsxd r11, r11d	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018a5	           0xf1f00	                         nop dword [rax]	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018a8	          0x4d85db	                           test r11, r11	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018ab	            0x743e	                            je 0x40018eb	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018ad	      0x4a8d4c0d00	                     lea rcx, [rbp + r9]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018b2	        0x4f8d2419	                     lea r12, [r9 + r11]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018b6	          0x4c89ca	                             mov rdx, r9	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018b9	     0xf1f80000000	                         nop dword [rax]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018c0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4064	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018c5	        0x488d3410	                    lea rsi, [rax + rdx]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018c9	          0x4801c8	                            add rax, rcx	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018cc	        0x4883c201	                              add rdx, 1	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018d0	        0x440fb600	                   movzx r8d, byte [rax]	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018d4	        0x4883e901	                              sub rcx, 1	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018d8	          0x4939d4	                            cmp r12, rdx	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018db	           0xfb63e	                   movzx edi, byte [rsi]	      4066	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018de	          0x448806	                     mov byte [rsi], r8b	      4067	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018e1	          0x408838	                     mov byte [rax], dil	      4068	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018e4	            0x75da	                           jne 0x40018c0	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018e6	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4062	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1	FOR_2
0x40018eb	          0x4d01d1	                             add r9, r10	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018ee	          0x4d39c1	                              cmp r9, r8	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018f1	            0x72b5	                            jb 0x40018a8	      4061	objcopy.c	FUNCTION_51	IF_2	IF_4	IF_5	FOR_1
0x40018f3	    0x448b1d000000	           mov r11d, dword [0x040018fa] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40018fa	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40018ff	          0x4585db	                         test r11d, r11d	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001902	     0xf88c3000000	                            js 0x40019cb	      4077	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001908	    0x4c630d000000	          movsxd r9, dword [0x0400190f] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400190f	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001913	            0x31d2	                            xor edx, edx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001915	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400191a	          0x4963eb	                        movsxd rbp, r11d	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400191d	    0x4c6315000000	         movsxd r10, dword [0x04001924] 	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001924	          0x4989ec	                            mov r12, rbp	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001927	          0x49f7f1	                                  div r9	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400192a	        0x4a8d3401	                     lea rsi, [rcx + r8]	      4082	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400192e	          0x4889cf	                            mov rdi, rcx	      4080	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001931	          0x4863c2	                         movsxd rax, edx	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001934	          0x4889d3	                            mov rbx, rdx	      4089	objcopy.c	FUNCTION_51	IF_2	IF_6
0x4001937	          0x4929c4	                            sub r12, rax	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400193a	          0x4901cc	                            add r12, rcx	      4090	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400193d	          0x4139d3	                           cmp r11d, edx	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4001940	        0x4b8d040c	                     lea rax, [r12 + r9]	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4001944	        0x4c0f4ce0	                          cmovl r12, rax	      4092	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_7
0x4001948	          0x4c39e6	                            cmp rsi, r12	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400194b	            0x764d	                           jbe 0x400199a	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400194d	        0x458d42ff	                      lea r8d, [r10 - 1]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001951	     0xf1f80000000	                         nop dword [rax]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001958	          0x4585d2	                         test r10d, r10d	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x400195b	            0x7e2b	                           jle 0x4001988	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x400195d	          0x4c39e6	                            cmp rsi, r12	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001960	          0x4c89e0	                            mov rax, r12	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001963	        0x4b8d3c04	                     lea rdi, [r12 + r8]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001967	            0x7710	                            ja 0x4001979	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001969	            0xeb1d	                           jmp 0x4001988	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x400196b	       0xf1f440000	                   nop dword [rax + rax]	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001970	        0x4883c001	                              add rax, 1	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001974	          0x4839c6	                            cmp rsi, rax	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001977	            0x740f	                            je 0x4001988	      4097	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4	IF_8
0x4001979	           0xfb610	                   movzx edx, byte [rax]	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x400197c	        0x4883c101	                              add rcx, 1	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001980	          0x4839c7	                            cmp rdi, rax	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001983	          0x8851ff	                  mov byte [rcx - 1], dl	      4099	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001986	            0x75e8	                           jne 0x4001970	      4095	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3	FOR_4
0x4001988	          0x4d01cc	                             add r12, r9	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400198b	          0x4c39e6	                            cmp rsi, r12	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400198e	            0x77c8	                            ja 0x4001958	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001990	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x4001995	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4094	objcopy.c	FUNCTION_51	IF_2	IF_6	FOR_3
0x400199a	        0x498d41ff	                       lea rax, [r9 - 1]	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x400199e	            0x31d2	                            xor edx, edx	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a0	          0x4829e8	                            sub rax, rbp	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a3	          0x4c01c0	                             add rax, r8	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a6	          0x49f7f1	                                  div r9	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019a9	            0x31d2	                            xor edx, edx	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019ab	        0x490fafc2	                           imul rax, r10	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019af	          0x4989c0	                             mov r8, rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b2	      0x4889442408	                mov qword [rsp + 8], rax	      4102	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019b7	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019bb	          0x49f7f1	                                  div r9	      4103	objcopy.c	FUNCTION_51	IF_2	IF_6
0x40019be	          0x4139db	                           cmp r11d, ebx	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x40019c1	            0x7d04	                           jge 0x40019c7	      4104	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x40019c3	        0x4883c001	                              add rax, 1	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x40019c7	        0x49894630	             mov qword [r14 + 0x30], rax	      4105	objcopy.c	FUNCTION_51	IF_2	IF_6	IF_9
0x40019cb	            0x31c9	                            xor ecx, ecx	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019cd	          0x4889fa	                            mov rdx, rdi	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019d0	          0x4c89f6	                            mov rsi, r14	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019d3	          0x4c89ef	                            mov rdi, r13	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019d6	      0xe800000000	                          call 0x40019db	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019db	            0x85c0	                           test eax, eax	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019dd	            0x7571	                           jne 0x4001a50	      4108	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_8
0x40019df	            0x31ff	                            xor edi, edi	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019e1	            0x31c9	                            xor ecx, ecx	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019e3	          0x4c89f2	                            mov rdx, r14	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019e6	          0x4c89ee	                            mov rsi, r13	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019e9	    0xc70500000000	               mov dword [0x040019f3], 1	      4110	objcopy.c	FUNCTION_51	IF_2	IF_10
0x40019f3	      0xe800000000	                          call 0x40019f8	      4111	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_9
0x40019f8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x40019fd	      0xe800000000	                          call 0x4001a02	      4112	objcopy.c	FUNCTION_51	IF_2	IF_10	CALL_10
0x4001a02	      0xe93bfcffff	                           jmp 0x4001642	      4113	objcopy.c	FUNCTION_51	IF_2	IF_10
0x4001a07	            0x31ff	                            xor edi, edi	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a09	            0x31c9	                            xor ecx, ecx	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a0b	          0x4889da	                            mov rdx, rbx	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a0e	          0x4c89e6	                            mov rsi, r12	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a11	            0x31c0	                            xor eax, eax	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a13	    0xc70500000000	               mov dword [0x04001a1d], 1	      4045	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001a1d	      0xe800000000	                          call 0x4001a22	      4046	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_4
0x4001a22	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4001a27	      0xe800000000	                          call 0x4001a2c	      4047	objcopy.c	FUNCTION_51	IF_2	IF_3	CALL_5
0x4001a2c	      0xe911fcffff	                           jmp 0x4001642	      4048	objcopy.c	FUNCTION_51	IF_2	IF_3
0x4001a31	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001a36	    0x644833042528	                xor rax, qword fs:[0x28]	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001a3f	     0xf84ccfdffff	                            je 0x4001811	      4137	objcopy.c	FUNCTION_51	ELSE_2	IF_11	CALL_18
0x4001a45	      0xe800000000	                          call 0x4001a4a	      4139	objcopy.c	FUNCTION_51
0x4001a4a	    0x660f1f440000	                    nop word [rax + rax]	      4139	objcopy.c	FUNCTION_51
0x4001a50	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4001a55	      0xe800000000	                          call 0x4001a5a	      4115	objcopy.c	FUNCTION_51	IF_2	CALL_11
0x4001a5a	      0xe9e3fbffff	                           jmp 0x4001642	      4038	objcopy.c	FUNCTION_51	IF_2
0x4001a5f	          0x488b1b	                    mov rbx, qword [rbx]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a62	      0xba05000000	                              mov edx, 5	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a67	      0xbe00000000	                              mov esi, 0	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a6c	            0x31ff	                            xor edi, edi	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a6e	      0xe800000000	                          call 0x4001a73	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a73	            0x89ea	                            mov edx, ebp	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a75	          0x4889c7	                            mov rdi, rax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a78	          0x4889de	                            mov rsi, rbx	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a7b	            0x31c0	                            xor eax, eax	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a7d	      0xe800000000	                          call 0x4001a82	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a82	         0xf1f4000	                         nop dword [rax]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4073	objcopy.c	FUNCTION_51	IF_2	IF_4	ELSE_1	CALL_7
0x4001a90	            0x4157	                                push r15	      3664	objcopy.c	FUNCTION_45
0x4001a92	            0x4156	                                push r14	      3664	objcopy.c	FUNCTION_45
0x4001a94	            0x4155	                                push r13	      3664	objcopy.c	FUNCTION_45
0x4001a96	            0x4154	                                push r12	      3664	objcopy.c	FUNCTION_45
0x4001a98	          0x4989d5	                            mov r13, rdx	      3664	objcopy.c	FUNCTION_45
0x4001a9b	              0x55	                                push rbp	      3664	objcopy.c	FUNCTION_45
0x4001a9c	              0x53	                                push rbx	      3664	objcopy.c	FUNCTION_45
0x4001a9d	          0x4989f4	                            mov r12, rsi	      3664	objcopy.c	FUNCTION_45
0x4001aa0	        0x4883ec28	                           sub rsp, 0x28	      3664	objcopy.c	FUNCTION_45
0x4001aa4	      0x48897c2408	                mov qword [rsp + 8], rdi	      3664	objcopy.c	FUNCTION_45
0x4001aa9	          0x4889f7	                            mov rdi, rsi	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001aac	      0xe8cff5ffff	       call sym.is_strip_section.isra.17	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001ab1	            0x85c0	                           test eax, eax	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001ab3	            0x7413	                            je 0x4001ac8	      3677	objcopy.c	FUNCTION_45	IF_1	CALL_1
0x4001ab5	        0x4883c428	                           add rsp, 0x28	      3830	objcopy.c	FUNCTION_45
0x4001ab9	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x4001aba	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x4001abb	            0x415c	                                 pop r12	      3830	objcopy.c	FUNCTION_45
0x4001abd	            0x415d	                                 pop r13	      3830	objcopy.c	FUNCTION_45
0x4001abf	            0x415e	                                 pop r14	      3830	objcopy.c	FUNCTION_45
0x4001ac1	            0x415f	                                 pop r15	      3830	objcopy.c	FUNCTION_45
0x4001ac3	              0xc3	                                     ret	      3830	objcopy.c	FUNCTION_45
0x4001ac4	         0xf1f4000	                         nop dword [rax]	      3830	objcopy.c	FUNCTION_45
0x4001ac8	    0x488b2d000000	            mov rbp, qword [0x04001acf] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001acf	        0x498b1c24	                    mov rbx, qword [r12]	      3681	objcopy.c	FUNCTION_45
0x4001ad3	      0x458b7c2420	           mov r15d, dword [r12 + 0x20] 	      3682	objcopy.c	FUNCTION_45
0x4001ad8	          0x4885ed	                           test rbp, rbp	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001adb	            0x7518	                           jne 0x4001af5	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001add	      0xe95e020000	                           jmp 0x4001d40	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001ae2	    0x660f1f440000	                    nop word [rax + rax]	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001ae8	        0x488b6d18	            mov rbp, qword [rbp + 0x18] 	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001aec	          0x4885ed	                           test rbp, rbp	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001aef	     0xf844b020000	                            je 0x4001d40	      3627	objcopy.c	FUNCTION_43	FOR_1
0x4001af5	        0x488b7d00	                    mov rdi, qword [rbp]	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001af9	          0x4889de	                            mov rsi, rbx	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001afc	      0xe800000000	                          call 0x4001b01	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001b01	            0x85c0	                           test eax, eax	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001b03	            0x75e3	                           jne 0x4001ae8	      3628	objcopy.c	FUNCTION_43	FOR_1	IF_1	CALL_1
0x4001b05	        0x448b7510	           mov r14d, dword [rbp + 0x10] 	      3630	objcopy.c	FUNCTION_43	FOR_1	IF_1	IF_2
0x4001b09	        0x488b6d08	                mov rbp, qword [rbp + 8]	      3633	objcopy.c	FUNCTION_43	FOR_1	IF_1
0x4001b0d	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3682	objcopy.c	FUNCTION_45
0x4001b11	        0x450f44f7	                        cmove r14d, r15d	      3682	objcopy.c	FUNCTION_45
0x4001b15	    0x488b35000000	            mov rsi, qword [0x04001b1c] 	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001b1c	          0x4885f6	                           test rsi, rsi	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001b1f	            0x7406	                            je 0x4001b27	      3686	objcopy.c	FUNCTION_45	IF_2
0x4001b21	        0x4183e701	                             and r15d, 1	      3687	objcopy.c	FUNCTION_45	IF_2
0x4001b25	            0x7510	                           jne 0x4001b37	      3687	objcopy.c	FUNCTION_45	IF_2
0x4001b27	    0x488b35000000	            mov rsi, qword [0x04001b2e] 	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4001b2e	          0x4885f6	                           test rsi, rsi	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4001b31	     0xf84c7040000	                            je 0x4001ffe	      3689	objcopy.c	FUNCTION_45	ELSE_1	IF_3
0x4001b37	          0x4889f7	                            mov rdi, rsi	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b3a	      0x4889742418	             mov qword [rsp + 0x18], rsi	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b3f	      0xe800000000	                          call 0x4001b44	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b44	          0x4889ef	                            mov rdi, rbp	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b47	          0x4889c3	                            mov rbx, rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b4a	      0xe800000000	                          call 0x4001b4f	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b4f	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b54	      0xe800000000	                          call 0x4001b59	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b59	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       110	string3.h	FUNCTION_70	CALL_3
0x4001b5e	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_70	CALL_3
0x4001b61	      0x4889442410	             mov qword [rsp + 0x10], rax	      3696	objcopy.c	FUNCTION_45	IF_4	CALL_5
0x4001b66	      0xe800000000	                          call 0x4001b6b	       110	string3.h	FUNCTION_70	CALL_3
0x4001b6b	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_74	CALL_3
0x4001b6e	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_74	CALL_3
0x4001b71	      0xe800000000	                          call 0x4001b76	       148	string3.h	FUNCTION_74	CALL_3
0x4001b76	        0x498b1c24	                    mov rbx, qword [r12]	       148	string3.h	FUNCTION_74	CALL_3
0x4001b7a	    0x4c8b3d000000	            mov r15, qword [0x04001b81] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b81	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b84	            0x7455	                            je 0x4001bdb	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b86	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b88	            0xeb27	                           jmp 0x4001bb1	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b8a	    0x660f1f440000	                    nop word [rax + rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001b90	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001b92	          0x4889de	                            mov rsi, rbx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001b95	      0xe800000000	                          call 0x4001b9a	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001b9a	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001b9d	            0x7506	                           jne 0x4001ba5	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001b9f	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001ba1	        0x490f44ef	                          cmove rbp, r15	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001ba5	          0x4d8b3f	                    mov r15, qword [r15]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001ba8	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001bab	     0xf8417010000	                            je 0x4001cc8	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001bb1	      0x41f6471440	           test byte [r15 + 0x14], 0x40 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001bb6	            0x74ed	                            je 0x4001ba5	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001bb8	        0x498b7f08	                mov rdi, qword [r15 + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001bbc	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001bbf	            0x75cf	                           jne 0x4001b90	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001bc1	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bc5	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bc7	          0x4889de	                            mov rsi, rbx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bca	      0xe800000000	                          call 0x4001bcf	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bcf	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bd1	            0x75d2	                           jne 0x4001ba5	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001bd3	    0x41c747100100	               mov dword [r15 + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001bdb	    0x833d00000000	               cmp dword [0x04001be2], 4	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001be2	     0xf85fb000000	                           jne 0x4001ce3	      3708	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001be8	    0x41f7c6010000	                    test r14d, 0x2000001	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001bef	     0xf84ee000000	                            je 0x4001ce3	      3709	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001bf5	      0x488b442408	                mov rax, qword [rsp + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001bfa	        0x488b4008	                mov rax, qword [rax + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001bfe	          0x8b4008	                mov eax, dword [rax + 8]	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001c01	          0x83f805	                              cmp eax, 5	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001c04	     0xf8446040000	                            je 0x4002050	      1381	objcopy.c	FUNCTION_23	IF_1
0x4001c0a	          0x83f802	                              cmp eax, 2	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001c0d	     0xf8411040000	                            je 0x4002024	      1389	objcopy.c	FUNCTION_23	IF_2
0x4001c13	        0x498b4508	                mov rax, qword [r13 + 8]	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001c17	    0x4181e6fdfeff	                    and r14d, 0xfdfffefd	      3712	objcopy.c	FUNCTION_45	ELSE_2	IF_6
0x4001c1e	        0x83780805	                  cmp dword [rax + 8], 5	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001c22	     0xf85bb000000	                           jne 0x4001ce3	      3713	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001c28	    0x4181642420fd	      and dword [r12 + 0x20], 0xfdfffefd	      3721	objcopy.c	FUNCTION_45	ELSE_2	IF_6	IF_7
0x4001c31	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c36	          0x4489f2	                           mov edx, r14d	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c39	          0x4c89ef	                            mov rdi, r13	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c3c	      0xe800000000	                          call 0x4001c41	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c41	          0x4885c0	                           test rax, rax	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001c44	          0x4989c6	                            mov r14, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001c47	     0xf84b2000000	                            je 0x4001cff	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001c4d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3734	objcopy.c	FUNCTION_45	CALL_12
0x4001c54	    0xc74004080000	                  mov dword [rax + 4], 8	      3734	objcopy.c	FUNCTION_45	CALL_12
0x4001c5b	      0x498b4c2438	            mov rcx, qword [r12 + 0x38] 	      3736	objcopy.c	FUNCTION_45
0x4001c60	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3737	objcopy.c	FUNCTION_45	CALL_13
0x4001c65	          0x4c89ea	                            mov rdx, r13	      3737	objcopy.c	FUNCTION_45	CALL_13
0x4001c68	          0x4c89e6	                            mov rsi, r12	      3737	objcopy.c	FUNCTION_45	CALL_13
0x4001c6b	      0xe800000000	                          call 0x4001c70	      3737	objcopy.c	FUNCTION_45	CALL_13
0x4001c70	    0x8b0d00000000	            mov ecx, dword [0x04001c76] 	      3738	objcopy.c	FUNCTION_45	IF_10
0x4001c76	            0x85c9	                           test ecx, ecx	      3738	objcopy.c	FUNCTION_45	IF_10
0x4001c78	     0xf8848030000	                            js 0x4001fc6	      3738	objcopy.c	FUNCTION_45	IF_10
0x4001c7e	    0x48630d000000	         movsxd rcx, dword [0x04001c85] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c85	            0x31d2	                            xor edx, edx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c87	      0x488d4408ff	                lea rax, [rax + rcx - 1]	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c8c	          0x48f7f1	                                 div rcx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c8f	    0x486315000000	         movsxd rdx, dword [0x04001c96] 	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c96	        0x480fafc2	                           imul rax, rdx	      3739	objcopy.c	FUNCTION_45	IF_10
0x4001c9a	          0x4889c2	                            mov rdx, rax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001c9d	          0x4c89f6	                            mov rsi, r14	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001ca0	          0x4c89ef	                            mov rdi, r13	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001ca3	      0xe800000000	                          call 0x4001ca8	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001ca8	            0x85c0	                           test eax, eax	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001caa	     0xf85a0000000	                           jne 0x4001d50	      3742	objcopy.c	FUNCTION_45	IF_12	CALL_14
0x4001cb0	      0xba05000000	                              mov edx, 5	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001cb5	      0xbe00000000	                              mov esi, 0	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001cba	            0x31ff	                            xor edi, edi	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001cbc	      0xe800000000	                          call 0x4001cc1	      3744	objcopy.c	FUNCTION_45	IF_12	CALL_15
0x4001cc1	            0xeb50	                           jmp 0x4001d13	      3745	objcopy.c	FUNCTION_45	IF_12
0x4001cc3	       0xf1f440000	                   nop dword [rax + rax]	      3745	objcopy.c	FUNCTION_45	IF_12
0x4001cc8	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001ccb	     0xf840affffff	                            je 0x4001bdb	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001cd1	    0x4181e6040100	                         and r14d, 0x104	      3707	objcopy.c	FUNCTION_45	IF_5
0x4001cd8	        0x440b7528	             or r14d, dword [rbp + 0x28]	      3707	objcopy.c	FUNCTION_45	IF_5
0x4001cdc	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001ce3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001ce8	          0x4489f2	                           mov edx, r14d	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001ceb	          0x4c89ef	                            mov rdi, r13	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001cee	      0xe800000000	                          call 0x4001cf3	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001cf3	          0x4885c0	                           test rax, rax	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001cf6	          0x4989c6	                            mov r14, rax	      3725	objcopy.c	FUNCTION_45	CALL_10
0x4001cf9	     0xf855cffffff	                           jne 0x4001c5b	      3727	objcopy.c	FUNCTION_45	IF_8
0x4001cff	      0xba05000000	                              mov edx, 5	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001d04	      0xbe00000000	                              mov esi, 0	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001d09	            0x31ff	                            xor edi, edi	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001d0b	          0x4531f6	                          xor r14d, r14d	      3730	objcopy.c	FUNCTION_45	IF_8
0x4001d0e	      0xe800000000	                          call 0x4001d13	      3729	objcopy.c	FUNCTION_45	IF_8	CALL_11
0x4001d13	    0xc70500000000	               mov dword [0x04001d1d], 1	      3828	objcopy.c	FUNCTION_45
0x4001d1d	        0x4883c428	                           add rsp, 0x28	      3830	objcopy.c	FUNCTION_45
0x4001d21	          0x4c89f2	                            mov rdx, r14	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d24	              0x5b	                                 pop rbx	      3830	objcopy.c	FUNCTION_45
0x4001d25	          0x4c89ee	                            mov rsi, r13	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d28	          0x4889c1	                            mov rcx, rax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d2b	            0x31ff	                            xor edi, edi	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d2d	              0x5d	                                 pop rbp	      3830	objcopy.c	FUNCTION_45
0x4001d2e	            0x415c	                                 pop r12	      3830	objcopy.c	FUNCTION_45
0x4001d30	            0x415d	                                 pop r13	      3830	objcopy.c	FUNCTION_45
0x4001d32	            0x415e	                                 pop r14	      3830	objcopy.c	FUNCTION_45
0x4001d34	            0x415f	                                 pop r15	      3830	objcopy.c	FUNCTION_45
0x4001d36	            0x31c0	                            xor eax, eax	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d38	      0xe900000000	                           jmp 0x4001d3d	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d3d	           0xf1f00	                         nop dword [rax]	      3829	objcopy.c	FUNCTION_45	CALL_25
0x4001d40	          0x4589fe	                          mov r14d, r15d	      3682	objcopy.c	FUNCTION_45
0x4001d43	          0x4889dd	                            mov rbp, rbx	      3681	objcopy.c	FUNCTION_45
0x4001d46	      0xe9cafdffff	                           jmp 0x4001b15	      3681	objcopy.c	FUNCTION_45
0x4001d4b	       0xf1f440000	                   nop dword [rax + rax]	      3681	objcopy.c	FUNCTION_45
0x4001d50	    0x4c8b3d000000	            mov r15, qword [0x04001d57] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d57	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      3748	objcopy.c	FUNCTION_45
0x4001d5c	        0x498b1c24	                    mov rbx, qword [r12]	      3749	objcopy.c	FUNCTION_45	CALL_16
0x4001d60	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d63	      0x4889442410	             mov qword [rsp + 0x10], rax	      3748	objcopy.c	FUNCTION_45
0x4001d68	     0xf84af020000	                            je 0x400201d	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d6e	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d70	            0xeb23	                           jmp 0x4001d95	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d72	    0x660f1f440000	                    nop word [rax + rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d78	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001d7a	          0x4889de	                            mov rsi, rbx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001d7d	      0xe800000000	                          call 0x4001d82	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001d82	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001d85	            0x7506	                           jne 0x4001d8d	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001d87	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001d89	        0x490f44ef	                          cmove rbp, r15	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001d8d	          0x4d8b3f	                    mov r15, qword [r15]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d90	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d93	            0x744b	                            je 0x4001de0	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001d95	      0x41f647140c	            test byte [r15 + 0x14], 0xc 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001d9a	            0x74f1	                            je 0x4001d8d	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001d9c	        0x498b7f08	                mov rdi, qword [r15 + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001da0	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001da3	            0x75d3	                           jne 0x4001d78	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001da5	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001da9	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dab	          0x4889de	                            mov rsi, rbx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dae	      0xe800000000	                          call 0x4001db3	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001db3	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001db5	            0x75d6	                           jne 0x4001d8d	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001db7	    0x488b0d000000	            mov rcx, qword [0x04001dbe] 	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dbe	        0x498b1c24	                    mov rbx, qword [r12]	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dc2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001dc7	    0x41c747100100	               mov dword [r15 + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001dcf	    0x480305000000	             add rax, qword [0x04001dd6]	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x4001dd6	          0x4989cf	                            mov r15, rcx	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x4001dd9	            0xeb2e	                           jmp 0x4001e09	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x4001ddb	       0xf1f440000	                   nop dword [rax + rax]	      3759	objcopy.c	FUNCTION_45	ELSE_4	ELSE_5
0x4001de0	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001de3	     0xf841f020000	                            je 0x4002008	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001de9	        0xf6451404	               test byte [rbp + 0x14], 4	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001ded	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001df4	     0xf84eb010000	                            je 0x4001fe5	      3753	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001dfa	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001dfe	        0x498b1c24	                    mov rbx, qword [r12]	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001e02	    0x4c8b3d000000	            mov r15, qword [0x04001e09] 	      3754	objcopy.c	FUNCTION_45	IF_13	IF_14
0x4001e09	      0x41804e2401	                 or byte [r14 + 0x24], 1	      1688	bfd.h	FUNCTION_77
0x4001e0e	        0x49894630	             mov qword [r14 + 0x30], rax	      1687	bfd.h	FUNCTION_77
0x4001e12	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e15	        0x49894628	             mov qword [r14 + 0x28], rax	      1687	bfd.h	FUNCTION_77
0x4001e19	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      3767	objcopy.c	FUNCTION_45
0x4001e1e	      0x4889442410	             mov qword [rsp + 0x10], rax	      3767	objcopy.c	FUNCTION_45
0x4001e23	            0x7452	                            je 0x4001e77	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e25	            0x31ed	                            xor ebp, ebp	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e27	            0xeb24	                           jmp 0x4001e4d	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e29	     0xf1f80000000	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e30	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001e32	          0x4889de	                            mov rsi, rbx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001e35	      0xe800000000	                          call 0x4001e3a	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4001e3a	          0x4885ed	                           test rbp, rbp	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001e3d	            0x7506	                           jne 0x4001e45	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001e3f	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001e41	        0x490f44ef	                          cmove rbp, r15	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4001e45	          0x4d8b3f	                    mov r15, qword [r15]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e48	          0x4d85ff	                           test r15, r15	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e4b	            0x743b	                            je 0x4001e88	       881	objcopy.c	FUNCTION_5	FOR_1
0x4001e4d	      0x41f6471430	           test byte [r15 + 0x14], 0x30 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001e52	            0x74f1	                            je 0x4001e45	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4001e54	        0x498b7f08	                mov rdi, qword [r15 + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001e58	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001e5b	            0x75d3	                           jne 0x4001e30	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4001e5d	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e61	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e63	          0x4889de	                            mov rsi, rbx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e66	      0xe800000000	                          call 0x4001e6b	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e6b	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e6d	            0x75d6	                           jne 0x4001e45	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4001e6f	    0x41c747100100	               mov dword [r15 + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4001e77	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001e7c	    0x480305000000	             add rax, qword [0x04001e83]	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001e83	            0xeb22	                           jmp 0x4001ea7	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001e85	           0xf1f00	                         nop dword [rax]	      3778	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001e88	          0x4885ed	                           test rbp, rbp	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001e8b	            0x74ea	                            je 0x4001e77	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001e8d	        0xf6451420	           test byte [rbp + 0x14], 0x20 	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4001e91	    0xc74510010000	               mov dword [rbp + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4001e98	     0xf843e010000	                            je 0x4001fdc	      3772	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4001e9e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4001ea3	        0x48034520	             add rax, qword [rbp + 0x20]	      3773	objcopy.c	FUNCTION_45	IF_16	IF_17
0x4001ea7	        0x49894630	             mov qword [r14 + 0x30], rax	      3780	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7
0x4001eab	      0x418b442470	            mov eax, dword [r12 + 0x70] 	      3784	objcopy.c	FUNCTION_45	ELSE_6	ELSE_7	IF_18	CALL_20
0x4001eb0	      0x410fb65624	           movzx edx, byte [r14 + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x4001eb5	        0x41894670	             mov dword [r14 + 0x70], eax	      1696	bfd.h	FUNCTION_78
0x4001eb9	    0x418b8424c400	            mov eax, dword [r12 + 0xc4] 	      3793	objcopy.c	FUNCTION_45
0x4001ec1	          0x83e2cf	                     and edx, 0xffffffcf	      3796	objcopy.c	FUNCTION_45
0x4001ec4	    0x418986c40000	             mov dword [r14 + 0xc4], eax	      3793	objcopy.c	FUNCTION_45
0x4001ecb	    0x410fb6442424	           movzx eax, byte [r12 + 0x24] 	      3796	objcopy.c	FUNCTION_45
0x4001ed1	          0x83e030	                           and eax, 0x30	      3796	objcopy.c	FUNCTION_45
0x4001ed4	             0x9d0	                             or eax, edx	      3796	objcopy.c	FUNCTION_45
0x4001ed6	        0x41884624	               mov byte [r14 + 0x24], al	      3796	objcopy.c	FUNCTION_45
0x4001eda	    0x41f644242302	               test byte [r12 + 0x23], 2	      3804	objcopy.c	FUNCTION_45	IF_19
0x4001ee0	      0x4d89742468	             mov qword [r12 + 0x68], r14	      3801	objcopy.c	FUNCTION_45
0x4001ee5	    0x49c744246000	               mov qword [r12 + 0x60], 0	      3802	objcopy.c	FUNCTION_45
0x4001eee	     0xf849c000000	                            je 0x4001f90	      3804	objcopy.c	FUNCTION_45	IF_19
0x4001ef4	    0x488b35000000	            mov rsi, qword [0x04001efb] 	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001efb	    0x498b8424f000	            mov rax, qword [r12 + 0xf0] 	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001f03	          0x4885f6	                           test rsi, rsi	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001f06	     0xf8484000000	                            je 0x4001f90	      1207	objcopy.c	FUNCTION_17	IF_1
0x4001f0c	        0x488b5008	                mov rdx, qword [rax + 8]	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001f10	        0x837a0805	                  cmp dword [rdx + 8], 5	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001f14	            0x757a	                           jne 0x4001f90	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001f16	    0x498b8c24e000	            mov rcx, qword [r12 + 0xe0] 	      1210	objcopy.c	FUNCTION_17	IF_2
0x4001f1e	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001f25	    0x8b98780c0000	           mov ebx, dword [rax + 0xc78] 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001f2b	          0x395928	            cmp dword [rcx + 0x28], ebx 	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001f2e	            0x7560	                           jne 0x4001f90	      1214	objcopy.c	FUNCTION_17	IF_3	CALL_2
0x4001f30	        0x448b412c	            mov r8d, dword [rcx + 0x2c] 	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f34	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      1216	objcopy.c	FUNCTION_17	IF_3	CALL_3
0x4001f3b	          0x4585c0	                           test r8d, r8d	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f3e	            0x7450	                            je 0x4001f90	      1219	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f40	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f47	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f4e	          0x4489c7	                            mov edi, r8d	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f51	      0x440fb64a05	               movzx r9d, byte [rdx + 5]	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f56	            0x31d2	                            xor edx, edx	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f58	          0x49f7f1	                                  div r9	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f5b	          0x4839c7	                            cmp rdi, rax	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f5e	            0x7330	                           jae 0x4001f90	      1220	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f60	        0x418d40ff	                       lea eax, [r8 - 1]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f64	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      1221	objcopy.c	FUNCTION_17	IF_3	IF_4
0x4001f68	          0x4885c0	                           test rax, rax	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001f6b	            0x7423	                            je 0x4001f90	      3808	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001f6d	      0x488b542408	                mov rdx, qword [rsp + 8]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001f72	        0x83481820	             or dword [rax + 0x18], 0x20	      3810	objcopy.c	FUNCTION_45	IF_19	IF_20
0x4001f76	        0x488b5208	                mov rdx, qword [rdx + 8]	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001f7a	        0x837a0805	                  cmp dword [rdx + 8], 5	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001f7e	            0x7510	                           jne 0x4001f90	      3811	objcopy.c	FUNCTION_45	IF_19	IF_20	IF_21
0x4001f80	    0x488981b00000	             mov qword [rcx + 0xb0], rax	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4001f87	    0x660f1f840000	                    nop word [rax + rax]	      3812	objcopy.c	FUNCTION_45	IF_19	IF_20	CALL_23
0x4001f90	        0x498b4508	                mov rax, qword [r13 + 8]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001f94	          0x4c89f1	                            mov rcx, r14	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001f97	          0x4c89ea	                            mov rdx, r13	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001f9a	          0x4c89e6	                            mov rsi, r12	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001f9d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001fa2	    0xff9050010000	                call qword [rax + 0x150]	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001fa8	            0x85c0	                           test eax, eax	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001faa	     0xf8505fbffff	                           jne 0x4001ab5	      3818	objcopy.c	FUNCTION_45	IF_22
0x4001fb0	      0xba05000000	                              mov edx, 5	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001fb5	      0xbe00000000	                              mov esi, 0	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001fba	            0x31ff	                            xor edi, edi	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001fbc	      0xe800000000	                          call 0x4001fc1	      3820	objcopy.c	FUNCTION_45	IF_22	CALL_24
0x4001fc1	      0xe94dfdffff	                           jmp 0x4001d13	      3821	objcopy.c	FUNCTION_45	IF_22
0x4001fc6	    0x8b1500000000	            mov edx, dword [0x04001fcc] 	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fcc	            0x85d2	                           test edx, edx	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fce	      0xba00000000	                              mov edx, 0	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fd3	        0x480f45c2	                         cmovne rax, rdx	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fd7	      0xe9befcffff	                           jmp 0x4001c9a	      3741	objcopy.c	FUNCTION_45	ELSE_3	IF_11
0x4001fdc	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001fe0	      0xe9c2feffff	                           jmp 0x4001ea7	      3775	objcopy.c	FUNCTION_45	IF_16	ELSE_6
0x4001fe5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001fea	        0x498b1c24	                    mov rbx, qword [r12]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001fee	        0x48034518	             add rax, qword [rbp + 0x18]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001ff2	    0x4c8b3d000000	            mov r15, qword [0x04001ff9] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001ff9	      0xe90bfeffff	                           jmp 0x4001e09	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4001ffe	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4002003	      0xe972fbffff	                           jmp 0x4001b7a	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4002008	    0x488b0d000000	            mov rcx, qword [0x0400200f] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x400200f	        0x498b1c24	                    mov rbx, qword [r12]	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4002013	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x4002018	      0xe9b2fdffff	                           jmp 0x4001dcf	      3756	objcopy.c	FUNCTION_45	IF_13	ELSE_4
0x400201d	            0x31c9	                            xor ecx, ecx	       881	objcopy.c	FUNCTION_5	FOR_1
0x400201f	      0xe9abfdffff	                           jmp 0x4001dcf	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002024	        0x498b3424	                    mov rsi, qword [r12]	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4002028	      0xbf00000000	                              mov edi, 0	      1390	objcopy.c	FUNCTION_23	CALL_2
0x400202d	      0xb909000000	                              mov ecx, 9	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4002032	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4002034	           0xf94c0	                                 sete al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x4002037	           0xfb6c0	                           movzx eax, al	      1390	objcopy.c	FUNCTION_23	CALL_2
0x400203a	            0x85c0	                           test eax, eax	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x400203c	     0xf85a1fcffff	                           jne 0x4001ce3	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4002042	      0xe9ccfbffff	                           jmp 0x4001c13	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4002047	    0x660f1f840000	                    nop word [rax + rax]	      3710	objcopy.c	FUNCTION_45	ELSE_2	IF_6	CALL_9
0x4002050	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4002058	        0x83780407	                  cmp dword [rax + 4], 7	      1382	objcopy.c	FUNCTION_23	CALL_1
0x400205c	           0xf94c0	                                 sete al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x400205f	           0xfb6c0	                           movzx eax, al	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4002062	            0xebd6	                           jmp 0x400203a	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4002064	            0x6690	                                     nop	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4002066	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1382	objcopy.c	FUNCTION_23	CALL_1
0x4002070	            0x4157	                                push r15	      2407	objcopy.c	
0x4002072	            0x4156	                                push r14	      2407	objcopy.c	
0x4002074	          0x4989ff	                            mov r15, rdi	      2407	objcopy.c	
0x4002077	            0x4155	                                push r13	      2407	objcopy.c	
0x4002079	            0x4154	                                push r12	      2407	objcopy.c	
0x400207b	              0x55	                                push rbp	      2407	objcopy.c	
0x400207c	              0x53	                                push rbx	      2407	objcopy.c	
0x400207d	    0x4881ecf80000	                           sub rsp, 0xf8	      2407	objcopy.c	
0x4002084	    0x64488b042528	                mov rax, qword fs:[0x28]	      2407	objcopy.c	
0x400208d	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      2407	objcopy.c	
0x4002095	            0x31c0	                            xor eax, eax	      2407	objcopy.c	
0x4002097	    0x4883bf900000	               cmp qword [rdi + 0x90], 0	      2438	objcopy.c	FUNCTION_38	IF_3
0x400209f	     0xf8454060000	                            je 0x40026f9	      2438	objcopy.c	FUNCTION_38	IF_3
0x40020a5	        0x488b4708	                mov rax, qword [rdi + 8]	      2445	objcopy.c	FUNCTION_38	IF_4
0x40020a9	          0x4989f6	                            mov r14, rsi	      2445	objcopy.c	FUNCTION_38	IF_4
0x40020ac	          0x4889d5	                            mov rbp, rdx	      2445	objcopy.c	FUNCTION_38	IF_4
0x40020af	        0x83780805	                  cmp dword [rax + 8], 5	      2445	objcopy.c	FUNCTION_38	IF_4
0x40020b3	            0x7451	                            je 0x4002106	      2445	objcopy.c	FUNCTION_38	IF_4
0x40020b5	    0x8b1500000000	            mov edx, dword [0x040020bb] 	      2447	objcopy.c	FUNCTION_38	IF_4	IF_5
0x40020bb	          0x83fa01	                              cmp edx, 1	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x40020be	            0x7438	                            je 0x40020f8	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x40020c0	          0x83e201	                              and edx, 1	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x40020c3	            0x7433	                            je 0x40020f8	      2448	objcopy.c	FUNCTION_38	IF_4	IF_5
0x40020c5	      0xe800000000	                          call 0x40020ca	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020ca	      0xba05000000	                              mov edx, 5	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020cf	          0x4889c3	                            mov rbx, rax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020d2	      0xbe00000000	                              mov esi, 0	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020d7	            0x31ff	                            xor edi, edi	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020d9	      0xe800000000	                          call 0x40020de	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020de	          0x4889de	                            mov rsi, rbx	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020e1	          0x4889c7	                            mov rdi, rax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020e4	            0x31c0	                            xor eax, eax	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020e6	      0xe800000000	                          call 0x40020eb	      2450	objcopy.c	FUNCTION_38	IF_4	IF_5	CALL_9
0x40020eb	            0x31db	                            xor ebx, ebx	      2452	objcopy.c	FUNCTION_38	IF_4	IF_5
0x40020ed	      0xe978010000	                           jmp 0x400226a	      2452	objcopy.c	FUNCTION_38	IF_4	IF_5
0x40020f2	    0x660f1f440000	                    nop word [rax + rax]	      2452	objcopy.c	FUNCTION_38	IF_4	IF_5
0x40020f8	    0x8b0d00000000	            mov ecx, dword [0x040020fe] 	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x40020fe	            0x85c9	                           test ecx, ecx	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4002100	     0xf85ea040000	                           jne 0x40025f0	      2455	objcopy.c	FUNCTION_38	IF_4	IF_6
0x4002106	    0x8b1500000000	            mov edx, dword [0x0400210c] 	      2463	objcopy.c	FUNCTION_38	IF_7
0x400210c	            0x85d2	                           test edx, edx	      2463	objcopy.c	FUNCTION_38	IF_7
0x400210e	     0xf8584010000	                           jne 0x4002298	      2463	objcopy.c	FUNCTION_38	IF_7
0x4002114	    0x8b0500000000	            mov eax, dword [0x0400211a] 	      2468	objcopy.c	FUNCTION_38	IF_8
0x400211a	            0x31f6	                            xor esi, esi	      2469	objcopy.c	FUNCTION_38	IF_8
0x400211c	            0x85c0	                           test eax, eax	      2468	objcopy.c	FUNCTION_38	IF_8
0x400211e	     0xf840c010000	                            je 0x4002230	      2468	objcopy.c	FUNCTION_38	IF_8
0x4002124	      0x410fb64644	           movzx eax, byte [r14 + 0x44] 	      2481	objcopy.c	FUNCTION_38	IF_10
0x4002129	          0x83e007	                              and eax, 7	      2481	objcopy.c	FUNCTION_38	IF_10
0x400212c	            0x3c03	                               cmp al, 3	      2481	objcopy.c	FUNCTION_38	IF_10
0x400212e	            0x7455	                            je 0x4002185	      2481	objcopy.c	FUNCTION_38	IF_10
0x4002130	        0x418b5f44	            mov ebx, dword [r15 + 0x44] 	      2485	objcopy.c	FUNCTION_38	IF_10
0x4002134	    0x8b0500000000	            mov eax, dword [0x0400213a] 	      2488	objcopy.c	FUNCTION_38	IF_10
0x400213a	          0x4c89f7	                            mov rdi, r14	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_16
0x400213d	        0x498b5608	                mov rdx, qword [r14 + 8]	      2488	objcopy.c	FUNCTION_38	IF_10
0x4002141	          0xc1eb05	                              shr ebx, 5	      2485	objcopy.c	FUNCTION_38	IF_10
0x4002144	            0xf7d0	                                 not eax	      2488	objcopy.c	FUNCTION_38	IF_10
0x4002146	    0x81e3ffff0f00	                        and ebx, 0xfffff	      2485	objcopy.c	FUNCTION_38	IF_10
0x400214c	          0x234214	             and eax, dword [rdx + 0x14]	      2488	objcopy.c	FUNCTION_38	IF_10
0x400214f	     0xb1d00000000	              or ebx, dword [0x04002155]	      2486	objcopy.c	FUNCTION_38	IF_10
0x4002155	            0x21c3	                            and ebx, eax	      2488	objcopy.c	FUNCTION_38	IF_10
0x4002157	            0x89d8	                            mov eax, ebx	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4002159	          0x83e0fe	                     and eax, 0xfffffffe	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x400215c	    0x833d00000000	               cmp dword [0x04002163], 7	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4002163	           0xf44d8	                          cmove ebx, eax	      2491	objcopy.c	FUNCTION_38	IF_10	IF_11
0x4002166	      0xe800000000	                          call 0x400216b	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_16
0x400216b	            0x85c0	                           test eax, eax	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_16
0x400216d	     0xf84e5000000	                            je 0x4002258	      2493	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_16
0x4002173	            0x89de	                            mov esi, ebx	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4002175	          0x4c89f7	                            mov rdi, r14	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4002178	      0xe800000000	                          call 0x400217d	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x400217d	            0x85c0	                           test eax, eax	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x400217f	     0xf84d3000000	                            je 0x4002258	      2494	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_17
0x4002185	          0x4c89ff	                            mov rdi, r15	      2502	objcopy.c	FUNCTION_38	CALL_19
0x4002188	      0xe800000000	                          call 0x400218d	      2502	objcopy.c	FUNCTION_38	CALL_19
0x400218d	          0x4c89ff	                            mov rdi, r15	      2503	objcopy.c	FUNCTION_38	CALL_20
0x4002190	          0x4189c4	                           mov r12d, eax	      2502	objcopy.c	FUNCTION_38	CALL_19
0x4002193	      0xe800000000	                          call 0x4002198	      2503	objcopy.c	FUNCTION_38	CALL_20
0x4002198	          0x4885ed	                           test rbp, rbp	      2504	objcopy.c	FUNCTION_38	IF_13
0x400219b	            0x89c3	                            mov ebx, eax	      2503	objcopy.c	FUNCTION_38	CALL_20
0x400219d	            0x7429	                            je 0x40021c8	      2504	objcopy.c	FUNCTION_38	IF_13
0x400219f	          0x4c89ff	                            mov rdi, r15	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x40021a2	      0xe800000000	                          call 0x40021a7	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x40021a7	          0x4885c0	                           test rax, rax	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x40021aa	            0x7415	                            je 0x40021c1	      2506	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x40021ac	          0x4c89ff	                            mov rdi, r15	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x40021af	      0xe800000000	                          call 0x40021b4	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x40021b4	        0x448b680c	            mov r13d, dword [rax + 0xc] 	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x40021b8	          0x4585ed	                         test r13d, r13d	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x40021bb	     0xf850a050000	                           jne 0x40026cb	      2507	objcopy.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x40021c1	        0x448b650c	            mov r12d, dword [rbp + 0xc] 	      2509	objcopy.c	FUNCTION_38	IF_13	IF_14
0x40021c5	          0x8b5d10	            mov ebx, dword [rbp + 0x10] 	      2510	objcopy.c	FUNCTION_38	IF_13	IF_14
0x40021c8	        0x498b4608	                mov rax, qword [r14 + 8]	      2516	objcopy.c	FUNCTION_38	IF_15
0x40021cc	            0x89da	                            mov edx, ebx	      2516	objcopy.c	FUNCTION_38	IF_15
0x40021ce	          0x4489e6	                           mov esi, r12d	      2516	objcopy.c	FUNCTION_38	IF_15
0x40021d1	          0x4c89f7	                            mov rdi, r14	      2516	objcopy.c	FUNCTION_38	IF_15
0x40021d4	    0xff9090020000	                call qword [rax + 0x290]	      2516	objcopy.c	FUNCTION_38	IF_15
0x40021da	            0x85c0	                           test eax, eax	      2516	objcopy.c	FUNCTION_38	IF_15
0x40021dc	            0x89c3	                            mov ebx, eax	      2516	objcopy.c	FUNCTION_38	IF_15
0x40021de	     0xf851c010000	                           jne 0x4002300	      2516	objcopy.c	FUNCTION_38	IF_15
0x40021e4	      0x41f6474704	               test byte [r15 + 0x47], 4	      2517	objcopy.c	FUNCTION_38	IF_15
0x40021e9	     0xf84f7000000	                            je 0x40022e6	      2517	objcopy.c	FUNCTION_38	IF_15
0x40021ef	          0x4c89ff	                            mov rdi, r15	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_28
0x40021f2	      0xe800000000	                          call 0x40021f7	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_28
0x40021f7	            0x85c0	                           test eax, eax	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_28
0x40021f9	     0xf8594040000	                           jne 0x4002693	      2520	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_28
0x40021ff	          0x4c89ff	                            mov rdi, r15	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x4002202	      0xe800000000	                          call 0x4002207	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x4002207	      0xba05000000	                              mov edx, 5	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x400220c	          0x4889c5	                            mov rbp, rax	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x400220f	      0xbe00000000	                              mov esi, 0	      2521	objcopy.c	FUNCTION_38	IF_15	IF_16	CALL_30
0x4002214	            0x31ff	                            xor edi, edi	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002216	      0xe800000000	                          call 0x400221b	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x400221b	          0x4889ee	                            mov rsi, rbp	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x400221e	          0x4889c7	                            mov rdi, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002221	            0x31c0	                            xor eax, eax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002223	      0xe800000000	                          call 0x4002228	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002228	            0xeb40	                           jmp 0x400226a	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x400222a	    0x660f1f440000	                    nop word [rax + rax]	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002230	    0x8b0500000000	            mov eax, dword [0x04002236] 	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4002236	    0x488b35000000	            mov rsi, qword [0x0400223d] 	      2473	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x400223d	            0x85c0	                           test eax, eax	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x400223f	            0x7507	                           jne 0x4002248	      2472	objcopy.c	FUNCTION_38	ELSE_1	IF_9
0x4002241	    0x498bb7a80000	            mov rsi, qword [r15 + 0xa8] 	      2475	objcopy.c	FUNCTION_38	ELSE_1	ELSE_2
0x4002248	    0x480335000000	             add rsi, qword [0x0400224f]	      2476	objcopy.c	FUNCTION_38	ELSE_1
0x400224f	      0xe9d0feffff	                           jmp 0x4002124	      2476	objcopy.c	FUNCTION_38	ELSE_1
0x4002254	         0xf1f4000	                         nop dword [rax]	      2476	objcopy.c	FUNCTION_38	ELSE_1
0x4002258	            0x31c9	                            xor ecx, ecx	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x400225a	            0x31d2	                            xor edx, edx	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x400225c	          0x4c89fe	                            mov rsi, r15	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x400225f	            0x31ff	                            xor edi, edi	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4002261	            0x31c0	                            xor eax, eax	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x4002263	            0x31db	                            xor ebx, ebx	      2497	objcopy.c	FUNCTION_38	IF_10	IF_12
0x4002265	      0xe800000000	                          call 0x400226a	      2496	objcopy.c	FUNCTION_38	IF_10	IF_12	CALL_18
0x400226a	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      3197	objcopy.c	FUNCTION_38
0x4002272	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3197	objcopy.c	FUNCTION_38
0x400227b	            0x89d8	                            mov eax, ebx	      3197	objcopy.c	FUNCTION_38
0x400227d	     0xf85831c0000	                           jne 0x4003f06	      3197	objcopy.c	FUNCTION_38
0x4002283	    0x4881c4f80000	                           add rsp, 0xf8	      3197	objcopy.c	FUNCTION_38
0x400228a	              0x5b	                                 pop rbx	      3197	objcopy.c	FUNCTION_38
0x400228b	              0x5d	                                 pop rbp	      3197	objcopy.c	FUNCTION_38
0x400228c	            0x415c	                                 pop r12	      3197	objcopy.c	FUNCTION_38
0x400228e	            0x415d	                                 pop r13	      3197	objcopy.c	FUNCTION_38
0x4002290	            0x415e	                                 pop r14	      3197	objcopy.c	FUNCTION_38
0x4002292	            0x415f	                                 pop r15	      3197	objcopy.c	FUNCTION_38
0x4002294	              0xc3	                                     ret	      3197	objcopy.c	FUNCTION_38
0x4002295	           0xf1f00	                         nop dword [rax]	      3197	objcopy.c	FUNCTION_38
0x4002298	        0x498b5608	                mov rdx, qword [r14 + 8]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x400229c	          0x488b08	                    mov rcx, qword [rax]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x400229f	          0x4c89ff	                            mov rdi, r15	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022a2	          0x4d8b26	                    mov r12, qword [r14]	      2466	objcopy.c	FUNCTION_38	IF_7
0x40022a5	          0x4c8b2a	                    mov r13, qword [rdx]	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022a8	        0x48890c24	                    mov qword [rsp], rcx	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022ac	      0xe800000000	                          call 0x40022b1	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022b1	            0x31ff	                            xor edi, edi	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022b3	      0xba05000000	                              mov edx, 5	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022b8	      0xbe00000000	                              mov esi, 0	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022bd	          0x4889c3	                            mov rbx, rax	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022c0	      0xe800000000	                          call 0x40022c5	      2464	objcopy.c	FUNCTION_38	IF_7	CALL_14
0x40022c5	        0x488b0c24	                    mov rcx, qword [rsp]	       104	stdio2.h	CALL_385
0x40022c9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_385
0x40022cc	          0x4d89e9	                             mov r9, r13	       104	stdio2.h	CALL_385
0x40022cf	          0x4d89e0	                             mov r8, r12	       104	stdio2.h	CALL_385
0x40022d2	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_385
0x40022d5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_385
0x40022da	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_385
0x40022dc	      0xe800000000	                          call 0x40022e1	       104	stdio2.h	CALL_385
0x40022e1	      0xe92efeffff	                           jmp 0x4002114	       104	stdio2.h	CALL_385
0x40022e6	          0x4c89ff	                            mov rdi, r15	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x40022e9	      0xe800000000	                          call 0x40022ee	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x40022ee	          0x4c89f7	                            mov rdi, r14	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x40022f1	            0x89c5	                            mov ebp, eax	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x40022f3	      0xe800000000	                          call 0x40022f8	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x40022f8	            0x39c5	                            cmp ebp, eax	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x40022fa	     0xf85effeffff	                           jne 0x40021ef	      2518	objcopy.c	FUNCTION_38	IF_15	CALL_27
0x4002300	      0x410fb67744	           movzx esi, byte [r15 + 0x44] 	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x4002305	          0x4c89f7	                            mov rdi, r14	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x4002308	          0x83e607	                              and esi, 7	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x400230b	      0xe800000000	                          call 0x4002310	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x4002310	            0x85c0	                           test eax, eax	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x4002312	     0xf8440ffffff	                            je 0x4002258	      2530	objcopy.c	FUNCTION_38	IF_17	CALL_37
0x4002318	        0x498b4608	                mov rax, qword [r14 + 8]	      2536	objcopy.c	FUNCTION_38	IF_18
0x400231c	        0x83780802	                  cmp dword [rax + 8], 2	      2536	objcopy.c	FUNCTION_38	IF_18
0x4002320	     0xf84ea030000	                            je 0x4002710	      2536	objcopy.c	FUNCTION_38	IF_18
0x4002326	    0x488b1d000000	            mov rbx, qword [0x0400232d] 	      2593	objcopy.c	FUNCTION_38	IF_31
0x400232d	          0x4885db	                           test rbx, rbx	      2593	objcopy.c	FUNCTION_38	IF_31
0x4002330	            0x7408	                            je 0x400233a	      2593	objcopy.c	FUNCTION_38	IF_31
0x4002332	          0x4889df	                            mov rdi, rbx	      2594	objcopy.c	FUNCTION_38	CALL_45
0x4002335	      0xe800000000	                          call 0x400233a	      2594	objcopy.c	FUNCTION_38	CALL_45
0x400233a	    0x488b3d000000	            mov rdi, qword [0x04002341] 	      2596	objcopy.c	FUNCTION_38	IF_32
0x4002341	          0x4839fb	                            cmp rbx, rdi	      2596	objcopy.c	FUNCTION_38	IF_32
0x4002344	            0x7405	                            je 0x400234b	      2596	objcopy.c	FUNCTION_38	IF_32
0x4002346	      0xe800000000	                          call 0x400234b	      2597	objcopy.c	FUNCTION_38	CALL_46
0x400234b	        0x498b4708	                mov rax, qword [r15 + 8]	      2602	objcopy.c	FUNCTION_38
0x400234f	    0x48c705000000	               mov qword [0x0400235a], 0	      2599	objcopy.c	FUNCTION_38
0x400235a	          0x4c89ff	                            mov rdi, r15	      2602	objcopy.c	FUNCTION_38
0x400235d	    0x48c705000000	               mov qword [0x04002368], 0	      2600	objcopy.c	FUNCTION_38
0x4002368	    0xff90f0010000	                call qword [rax + 0x1f0]	      2602	objcopy.c	FUNCTION_38
0x400236e	          0x4885c0	                           test rax, rax	      2603	objcopy.c	FUNCTION_38	IF_33
0x4002371	     0xf88e1feffff	                            js 0x4002258	      2603	objcopy.c	FUNCTION_38	IF_33
0x4002377	          0x4889c7	                            mov rdi, rax	      2609	objcopy.c	FUNCTION_38	CALL_48
0x400237a	      0xe800000000	                          call 0x400237f	      2609	objcopy.c	FUNCTION_38	CALL_48
0x400237f	        0x498b5708	                mov rdx, qword [r15 + 8]	      2610	objcopy.c	FUNCTION_38
0x4002383	    0x488905000000	            mov qword [0x0400238a], rax 	      2609	objcopy.c	FUNCTION_38	CALL_48
0x400238a	          0x4889c6	                            mov rsi, rax	      2610	objcopy.c	FUNCTION_38
0x400238d	    0x488905000000	            mov qword [0x04002394], rax 	      2609	objcopy.c	FUNCTION_38	CALL_48
0x4002394	          0x4c89ff	                            mov rdi, r15	      2610	objcopy.c	FUNCTION_38
0x4002397	    0xff92f8010000	                call qword [rdx + 0x1f8]	      2610	objcopy.c	FUNCTION_38
0x400239d	          0x4885c0	                           test rax, rax	      2611	objcopy.c	FUNCTION_38	IF_34
0x40023a0	      0x4889442410	             mov qword [rsp + 0x10], rax	      2610	objcopy.c	FUNCTION_38
0x40023a5	     0xf88adfeffff	                            js 0x4002258	      2611	objcopy.c	FUNCTION_38	IF_34
0x40023ab	     0xf84d8040000	                            je 0x4002889	      2619	objcopy.c	FUNCTION_38	IF_35
0x40023b1	          0x4c89f2	                            mov rdx, r14	      2627	objcopy.c	FUNCTION_38	CALL_51
0x40023b4	      0xbe00000000	                              mov esi, 0	      2627	objcopy.c	FUNCTION_38	CALL_51
0x40023b9	          0x4c89ff	                            mov rdi, r15	      2627	objcopy.c	FUNCTION_38	CALL_51
0x40023bc	      0xe800000000	                          call 0x40023c1	      2627	objcopy.c	FUNCTION_38	CALL_51
0x40023c1	    0x448b25000000	           mov r12d, dword [0x040023c8] 	      2629	objcopy.c	FUNCTION_38	IF_36
0x40023c8	          0x4585e4	                         test r12d, r12d	      2629	objcopy.c	FUNCTION_38	IF_36
0x40023cb	     0xf84df040000	                            je 0x40028b0	      2629	objcopy.c	FUNCTION_38	IF_36
0x40023d1	    0x488b2d000000	            mov rbp, qword [0x040023d8] 	      2632	objcopy.c	FUNCTION_38	IF_37
0x40023d8	          0x4885ed	                           test rbp, rbp	      2632	objcopy.c	FUNCTION_38	IF_37
0x40023db	     0xf84a4010000	                            je 0x4002585	      2632	objcopy.c	FUNCTION_38	IF_37
0x40023e1	     0xf1f80000000	                         nop dword [rax]	      2632	objcopy.c	FUNCTION_38	IF_37
0x40023e8	    0x488b1d000000	            mov rbx, qword [0x040023ef] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x40023ef	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      2641	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_53
0x40023f3	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x40023f6	            0x7455	                            je 0x400244d	       881	objcopy.c	FUNCTION_5	FOR_1
0x40023f8	          0x4531e4	                          xor r12d, r12d	       881	objcopy.c	FUNCTION_5	FOR_1
0x40023fb	            0xeb24	                           jmp 0x4002421	       881	objcopy.c	FUNCTION_5	FOR_1
0x40023fd	           0xf1f00	                         nop dword [rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002400	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4002402	          0x4c89ee	                            mov rsi, r13	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4002405	      0xe800000000	                          call 0x400240a	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400240a	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400240c	            0x7507	                           jne 0x4002415	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400240e	          0x4d85e4	                           test r12, r12	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002411	        0x4c0f44e3	                          cmove r12, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002415	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002418	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x400241b	     0xf84ef010000	                            je 0x4002610	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002421	        0xf6431440	           test byte [rbx + 0x14], 0x40 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4002425	            0x74ee	                            je 0x4002415	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x4002427	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x400242b	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x400242e	            0x75d0	                           jne 0x4002400	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4002430	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002434	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002436	          0x4c89ee	                            mov rsi, r13	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002439	      0xe800000000	                          call 0x400243e	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400243e	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002440	            0x75d3	                           jne 0x4002415	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002442	        0x4c8b6d08	                mov r13, qword [rbp + 8]	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002446	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x400244d	      0xbb28010000	                          mov ebx, 0x128	      2646	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7
0x4002452	          0x4c89ee	                            mov rsi, r13	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x4002455	          0x4c89f7	                            mov rdi, r14	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x4002458	      0xe800000000	                          call 0x400245d	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x400245d	          0x4885c0	                           test rax, rax	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x4002460	     0xf8593040000	                           jne 0x40028f9	      2650	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_7	IF_39	CALL_54
0x4002466	        0x488b7508	                mov rsi, qword [rbp + 8]	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x400246a	            0x89da	                            mov edx, ebx	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x400246c	          0x4c89f7	                            mov rdi, r14	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x400246f	    0x81ca00001000	                        or edx, 0x100000	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x4002475	      0xe800000000	                          call 0x400247a	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x400247a	          0x4885c0	                           test rax, rax	      2664	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x400247d	        0x48894528	            mov qword [rbp + 0x28], rax 	      2662	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	CALL_57
0x4002481	     0xf842f060000	                            je 0x4002ab6	      2664	objcopy.c	FUNCTION_38	IF_37	FOR_1	ELSE_8	IF_40
0x4002487	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x400248b	          0x4889c6	                            mov rsi, rax	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x400248e	          0x4c89f7	                            mov rdi, r14	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x4002491	      0xe800000000	                          call 0x4002496	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x4002496	            0x85c0	                           test eax, eax	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x4002498	     0xf8401060000	                            je 0x4002a9f	      2673	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_41	CALL_60
0x400249e	    0x488b1d000000	            mov rbx, qword [0x040024a5] 	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024a5	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      2679	objcopy.c	FUNCTION_38	IF_37	FOR_1	CALL_62
0x40024a9	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024ac	     0xf84c6000000	                            je 0x4002578	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024b2	          0x4531e4	                          xor r12d, r12d	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024b5	            0xeb2a	                           jmp 0x40024e1	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024b7	    0x660f1f840000	                    nop word [rax + rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024c0	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x40024c2	          0x4c89ee	                            mov rsi, r13	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x40024c5	      0xe800000000	                          call 0x40024ca	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x40024ca	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40024cc	            0x7507	                           jne 0x40024d5	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40024ce	          0x4d85e4	                           test r12, r12	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40024d1	        0x4c0f44e3	                          cmove r12, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40024d5	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024d8	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024db	     0xf847f010000	                            je 0x4002660	       881	objcopy.c	FUNCTION_5	FOR_1
0x40024e1	        0xf643140c	            test byte [rbx + 0x14], 0xc 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x40024e5	            0x74ee	                            je 0x40024d5	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x40024e7	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x40024eb	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x40024ee	            0x75d0	                           jne 0x40024c0	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x40024f0	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40024f4	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40024f6	          0x4c89ee	                            mov rsi, r13	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40024f9	      0xe800000000	                          call 0x40024fe	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x40024fe	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002500	            0x75d3	                           jne 0x40024d5	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002502	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4002509	        0x4c8b6508	                mov r12, qword [rbp + 8]	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x400250d	    0x488b1d000000	            mov rbx, qword [0x04002514] 	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4002514	         0xf1f4000	                         nop dword [rax]	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4002518	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x400251b	            0x745b	                            je 0x4002578	       881	objcopy.c	FUNCTION_5	FOR_1
0x400251d	          0x4531ed	                          xor r13d, r13d	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002520	            0xeb27	                           jmp 0x4002549	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002522	    0x660f1f440000	                    nop word [rax + rax]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002528	            0x31d2	                            xor edx, edx	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400252a	          0x4c89e6	                            mov rsi, r12	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x400252d	      0xe800000000	                          call 0x4002532	       928	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	CALL_9
0x4002532	          0x4d85ed	                           test r13, r13	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002535	            0x7506	                           jne 0x400253d	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002537	            0x85c0	                           test eax, eax	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002539	        0x4c0f44eb	                          cmove r13, rbx	       930	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400253d	          0x488b1b	                    mov rbx, qword [rbx]	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002540	          0x4885db	                           test rbx, rbx	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002543	     0xf84ef000000	                            je 0x4002638	       881	objcopy.c	FUNCTION_5	FOR_1
0x4002549	        0xf6431430	           test byte [rbx + 0x14], 0x30 	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x400254d	            0x74ee	                            je 0x400253d	       913	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6
0x400254f	        0x488b7b08	                mov rdi, qword [rbx + 8]	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4002553	          0x803f21	                    cmp byte [rdi], 0x21	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4002556	            0x75d0	                           jne 0x4002528	       918	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7
0x4002558	        0x4883c701	                              add rdi, 1	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400255c	            0x31d2	                            xor edx, edx	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400255e	          0x4c89e6	                            mov rsi, r12	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002561	      0xe800000000	                          call 0x4002566	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002566	            0x85c0	                           test eax, eax	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x4002568	            0x75d3	                           jne 0x400253d	       920	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x400256a	    0xc74310010000	               mov dword [rbx + 0x10], 1	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4002571	     0xf1f80000000	                         nop dword [rax]	       922	objcopy.c	FUNCTION_5	FOR_1	ELSE_1	IF_6	IF_7	IF_8
0x4002578	        0x488b6d00	                    mov rbp, qword [rbp]	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x400257c	          0x4885ed	                           test rbp, rbp	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x400257f	     0xf8563feffff	                           jne 0x40023e8	      2637	objcopy.c	FUNCTION_38	IF_37	FOR_1
0x4002585	    0x488b2d000000	            mov rbp, qword [0x0400258c] 	      2705	objcopy.c	FUNCTION_38	IF_45
0x400258c	          0x4885ed	                           test rbp, rbp	      2705	objcopy.c	FUNCTION_38	IF_45
0x400258f	            0x7537	                           jne 0x40025c8	      2705	objcopy.c	FUNCTION_38	IF_45
0x4002591	      0xe933050000	                           jmp 0x4002ac9	      2705	objcopy.c	FUNCTION_38	IF_45
0x4002596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2705	objcopy.c	FUNCTION_38	IF_45
0x40025a0	        0x4c8b6068	            mov r12, qword [rax + 0x68] 	      2720	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x40025a4	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x40025a8	          0x4c89f7	                            mov rdi, r14	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x40025ab	          0x4c89e6	                            mov rsi, r12	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x40025ae	      0xe800000000	                          call 0x40025b3	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x40025b3	            0x85c0	                           test eax, eax	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x40025b5	     0xf8453080000	                            je 0x4002e0e	      2721	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_47	CALL_71
0x40025bb	        0x488b6d00	                    mov rbp, qword [rbp]	      2711	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x40025bf	          0x4885ed	                           test rbp, rbp	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x40025c2	     0xf8401050000	                            je 0x4002ac9	      2709	objcopy.c	FUNCTION_38	IF_45	FOR_2
0x40025c8	        0x488b7508	                mov rsi, qword [rbp + 8]	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_68
0x40025cc	          0x4c89ff	                            mov rdi, r15	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_68
0x40025cf	      0xe800000000	                          call 0x40025d4	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_68
0x40025d4	          0x4885c0	                           test rax, rax	      2714	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x40025d7	        0x48894528	            mov qword [rbp + 0x28], rax 	      2713	objcopy.c	FUNCTION_38	IF_45	FOR_2	CALL_68
0x40025db	            0x75c3	                           jne 0x40025a0	      2714	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46
0x40025dd	        0x488b5d08	                mov rbx, qword [rbp + 8]	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_70
0x40025e1	      0xba05000000	                              mov edx, 5	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_70
0x40025e6	      0xbe00000000	                              mov esi, 0	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_70
0x40025eb	      0xe9e7faffff	                           jmp 0x40020d7	      2716	objcopy.c	FUNCTION_38	IF_45	FOR_2	IF_46	CALL_70
0x40025f0	          0x4c89ff	                            mov rdi, r15	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40025f3	      0xe800000000	                          call 0x40025f8	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40025f8	      0xba05000000	                              mov edx, 5	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x40025fd	          0x4889c3	                            mov rbx, rax	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4002600	      0xbe00000000	                              mov esi, 0	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4002605	      0xe9cdfaffff	                           jmp 0x40020d7	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x400260a	    0x660f1f440000	                    nop word [rax + rax]	      2457	objcopy.c	FUNCTION_38	IF_4	IF_6	CALL_12
0x4002610	          0x4d85e4	                           test r12, r12	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4002613	     0xf84a9000000	                            je 0x40026c2	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4002619	      0x418b5c2428	            mov ebx, dword [r12 + 0x28] 	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x400261e	    0x41c744241001	               mov dword [r12 + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4002627	        0x4c8b6d08	                mov r13, qword [rbp + 8]	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x400262b	          0x80cf01	                                or bh, 1	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x400262e	      0xe91ffeffff	                           jmp 0x4002452	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x4002633	       0xf1f440000	                   nop dword [rax + rax]	      2644	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_38
0x4002638	          0x4d85ed	                           test r13, r13	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x400263b	     0xf8437ffffff	                            je 0x4002578	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4002641	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x4002645	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x4002649	    0x41c745100100	               mov dword [r13 + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4002651	        0x48895030	             mov qword [rax + 0x30], rdx	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x4002655	      0xe91effffff	                           jmp 0x4002578	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x400265a	    0x660f1f440000	                    nop word [rax + rax]	      2692	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_43
0x4002660	          0x4d85e4	                           test r12, r12	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4002663	            0x741e	                            je 0x4002683	       939	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4002665	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_63
0x4002669	    0x41c744241001	               mov dword [r12 + 0x10], 1	       940	objcopy.c	FUNCTION_5	IF_11	IF_12
0x4002672	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2682	objcopy.c	FUNCTION_38	IF_37	FOR_1	IF_42	CALL_63
0x4002677	        0x80482401	                 or byte [rax + 0x24], 1	      1688	bfd.h	FUNCTION_77
0x400267b	        0x48895030	             mov qword [rax + 0x30], rdx	      1687	bfd.h	FUNCTION_77
0x400267f	        0x48895028	             mov qword [rax + 0x28], rdx	      1687	bfd.h	FUNCTION_77
0x4002683	        0x4c8b6508	                mov r12, qword [rbp + 8]	      1687	bfd.h	FUNCTION_77
0x4002687	    0x488b1d000000	            mov rbx, qword [0x0400268e] 	      1687	bfd.h	FUNCTION_77
0x400268e	      0xe985feffff	                           jmp 0x4002518	      1687	bfd.h	FUNCTION_77
0x4002693	          0x4c89ff	                            mov rdi, r15	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x4002696	      0xe800000000	                          call 0x400269b	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x400269b	          0x4c89ff	                            mov rdi, r15	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x400269e	          0x4889c5	                            mov rbp, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026a1	      0xe800000000	                          call 0x40026a6	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026a6	          0x4889ee	                            mov rsi, rbp	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026a9	            0x89c7	                            mov edi, eax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026ab	      0xe800000000	                          call 0x40026b0	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026b0	      0xba05000000	                              mov edx, 5	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026b5	          0x4889c5	                            mov rbp, rax	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026b8	      0xbe00000000	                              mov esi, 0	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026bd	      0xe952fbffff	                           jmp 0x4002214	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026c2	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026c6	      0xe982fdffff	                           jmp 0x400244d	      2524	objcopy.c	FUNCTION_38	IF_15	ELSE_4	CALL_33
0x40026cb	          0x4c89ff	                            mov rdi, r15	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026ce	      0xe800000000	                          call 0x40026d3	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026d3	            0x31ff	                            xor edi, edi	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026d5	          0x4889c5	                            mov rbp, rax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026d8	      0xba05000000	                              mov edx, 5	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026dd	      0xbe00000000	                              mov esi, 0	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026e2	      0xe800000000	                          call 0x40026e7	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026e7	          0x4889ee	                            mov rsi, rbp	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026ea	          0x4889c7	                            mov rdi, rax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026ed	            0x31c0	                            xor eax, eax	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026ef	      0xe800000000	                          call 0x40026f4	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026f4	      0xe9cffaffff	                           jmp 0x40021c8	      2513	objcopy.c	FUNCTION_38	IF_13	ELSE_3	CALL_24
0x40026f9	      0xe800000000	                          call 0x40026fe	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x40026fe	      0xba05000000	                              mov edx, 5	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4002703	          0x4889c3	                            mov rbx, rax	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4002706	      0xbe00000000	                              mov esi, 0	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x400270b	      0xe9c7f9ffff	                           jmp 0x40020d7	      2440	objcopy.c	FUNCTION_38	IF_3	CALL_6
0x4002710	          0x488b30	                    mov rsi, qword [rax]	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
0x4002713	      0xba00000000	                              mov edx, 0	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
0x4002718	              0xb9	                                 invalid	      2537	objcopy.c	FUNCTION_38	IF_18	CALL_39
copy_usage	SWITCH,0:ELSE,1:DO,0:functions,0:WHILE,0:FOR,9:IF,4:CALL,14	79
0x40002f0	            0x4154	                                push r12	       528	objcopy.c	FUNCTION_1
0x40002f2	    0x4c8b25000000	            mov r12, qword [0x040002f9] 	       529	objcopy.c	FUNCTION_1	CALL_1
0x40002f9	      0xba05000000	                              mov edx, 5	       529	objcopy.c	FUNCTION_1	CALL_1
0x40002fe	              0x55	                                push rbp	       528	objcopy.c	FUNCTION_1
0x40002ff	              0x53	                                push rbx	       528	objcopy.c	FUNCTION_1
0x4000300	            0x89f5	                            mov ebp, esi	       528	objcopy.c	FUNCTION_1
0x4000302	          0x4889fb	                            mov rbx, rdi	       528	objcopy.c	FUNCTION_1
0x4000305	      0xbe00000000	                              mov esi, 0	       529	objcopy.c	FUNCTION_1	CALL_1
0x400030a	            0x31ff	                            xor edi, edi	       529	objcopy.c	FUNCTION_1	CALL_1
0x400030c	      0xe800000000	                          call 0x4000311	       529	objcopy.c	FUNCTION_1	CALL_1
0x4000311	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_382
0x4000314	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000317	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400031c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x400031f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000321	      0xe800000000	                          call 0x4000326	        97	stdio2.h	CALL_382
0x4000326	            0x31ff	                            xor edi, edi	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000328	      0xba05000000	                              mov edx, 5	       530	objcopy.c	FUNCTION_1	CALL_2
0x400032d	      0xbe00000000	                              mov esi, 0	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000332	      0xe800000000	                          call 0x4000337	       530	objcopy.c	FUNCTION_1	CALL_2
0x4000337	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400033c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x400033f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000342	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000344	      0xe800000000	                          call 0x4000349	        97	stdio2.h	CALL_382
0x4000349	            0x31ff	                            xor edi, edi	       531	objcopy.c	FUNCTION_1	CALL_3
0x400034b	      0xba05000000	                              mov edx, 5	       531	objcopy.c	FUNCTION_1	CALL_3
0x4000350	      0xbe00000000	                              mov esi, 0	       531	objcopy.c	FUNCTION_1	CALL_3
0x4000355	      0xe800000000	                          call 0x400035a	       531	objcopy.c	FUNCTION_1	CALL_3
0x400035a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400035f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000362	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000365	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000367	      0xe800000000	                          call 0x400036c	        97	stdio2.h	CALL_382
0x400036c	            0x31ff	                            xor edi, edi	       532	objcopy.c	FUNCTION_1	CALL_4
0x400036e	      0xba05000000	                              mov edx, 5	       532	objcopy.c	FUNCTION_1	CALL_4
0x4000373	      0xbe00000000	                              mov esi, 0	       532	objcopy.c	FUNCTION_1	CALL_4
0x4000378	      0xe800000000	                          call 0x400037d	       532	objcopy.c	FUNCTION_1	CALL_4
0x400037d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x4000382	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000385	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000388	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x400038a	      0xe800000000	                          call 0x400038f	        97	stdio2.h	CALL_382
0x400038f	            0x31ff	                            xor edi, edi	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000391	      0xba05000000	                              mov edx, 5	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x4000396	      0xbe00000000	                              mov esi, 0	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x400039b	      0xe800000000	                          call 0x40003a0	       546	objcopy.c	FUNCTION_1	IF_1	ELSE_1	CALL_7
0x40003a0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x40003a5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x40003a8	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x40003ab	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40003ad	      0xe800000000	                          call 0x40003b2	        97	stdio2.h	CALL_382
0x40003b2	            0x31ff	                            xor edi, edi	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x40003b4	      0xba05000000	                              mov edx, 5	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x40003b9	      0xbe00000000	                              mov esi, 0	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x40003be	      0xe800000000	                          call 0x40003c3	       551	objcopy.c	FUNCTION_1	IF_1	CALL_9
0x40003c3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x40003c8	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x40003cb	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x40003ce	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x40003d0	      0xe800000000	                          call 0x40003d5	        97	stdio2.h	CALL_382
0x40003d5	    0x488b3d000000	            mov rdi, qword [0x040003dc] 	       656	objcopy.c	FUNCTION_1	CALL_12
0x40003dc	          0x4889de	                            mov rsi, rbx	       656	objcopy.c	FUNCTION_1	CALL_12
0x40003df	      0xe800000000	                          call 0x40003e4	       656	objcopy.c	FUNCTION_1	CALL_12
0x40003e4	            0x85ed	                           test ebp, ebp	       657	objcopy.c	FUNCTION_1	IF_4
0x40003e6	            0x7407	                            je 0x40003ef	       657	objcopy.c	FUNCTION_1	IF_4
0x40003e8	            0x89ef	                            mov edi, ebp	       659	objcopy.c	FUNCTION_1	CALL_14
0x40003ea	      0xe800000000	                          call 0x40003ef	       659	objcopy.c	FUNCTION_1	CALL_14
0x40003ef	            0x31ff	                            xor edi, edi	       658	objcopy.c	FUNCTION_1	CALL_13
0x40003f1	      0xba05000000	                              mov edx, 5	       658	objcopy.c	FUNCTION_1	CALL_13
0x40003f6	      0xbe00000000	                              mov esi, 0	       658	objcopy.c	FUNCTION_1	CALL_13
0x40003fb	      0xe800000000	                          call 0x4000400	       658	objcopy.c	FUNCTION_1	CALL_13
0x4000400	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_382
0x4000405	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_382
0x4000408	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_382
0x400040d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_382
0x4000410	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_382
0x4000412	      0xe800000000	                          call 0x4000417	        97	stdio2.h	CALL_382
0x4000417	            0xebcf	                           jmp 0x40003e8	        97	stdio2.h	CALL_382
compare_section_lma	SWITCH,0:ELSE,3:DO,0:functions,0:WHILE,0:FOR,0:IF,7:CALL,0	30
0x4000050	          0x488b3f	                    mov rdi, qword [rdi]	      4165	objcopy.c	FUNCTION_53
0x4000053	          0x488b0e	                    mov rcx, qword [rsi]	      4166	objcopy.c	FUNCTION_53
0x4000056	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      4167	objcopy.c	FUNCTION_53	IF_1
0x4000059	          0x8b4120	            mov eax, dword [rcx + 0x20] 	      4166	objcopy.c	FUNCTION_53
0x400005c	    0x81e202010000	                          and edx, 0x102	      4167	objcopy.c	FUNCTION_53	IF_1
0x4000062	      0x2502010000	                          and eax, 0x102	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000067	    0x81fa02010000	                          cmp edx, 0x102	      4167	objcopy.c	FUNCTION_53	IF_1
0x400006d	            0x7441	                            je 0x40000b0	      4167	objcopy.c	FUNCTION_53	IF_1
0x400006f	      0x3d02010000	                          cmp eax, 0x102	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000074	            0x742a	                            je 0x40000a0	      4170	objcopy.c	FUNCTION_53	IF_1	IF_2
0x4000076	        0x488b7130	            mov rsi, qword [rcx + 0x30] 	      4182	objcopy.c	FUNCTION_53	IF_4
0x400007a	        0x48397730	            cmp qword [rdi + 0x30], rsi 	      4182	objcopy.c	FUNCTION_53	IF_4
0x400007e	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x4000083	            0x7720	                            ja 0x40000a5	      4182	objcopy.c	FUNCTION_53	IF_4
0x4000085	            0x7219	                            jb 0x40000a0	      4184	objcopy.c	FUNCTION_53	ELSE_2	IF_5
0x4000087	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      4188	objcopy.c	FUNCTION_53	IF_6
0x400008b	        0x48397738	            cmp qword [rdi + 0x38], rsi 	      4188	objcopy.c	FUNCTION_53	IF_6
0x400008f	            0x19d2	                            sbb edx, edx	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000091	        0x48397738	            cmp qword [rdi + 0x38], rsi 	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000095	           0xf46c2	                         cmovbe eax, edx	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000098	              0xc3	                                     ret	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x4000099	     0xf1f80000000	                         nop dword [rax]	      4190	objcopy.c	FUNCTION_53	ELSE_3	IF_7
0x40000a0	      0xb8ffffffff	                     mov eax, 0xffffffff	      4172	objcopy.c	FUNCTION_53	IF_1	IF_2
0x40000a5	            0xf3c3	                                     ret	      4194	objcopy.c	FUNCTION_53
0x40000a7	    0x660f1f840000	                    nop word [rax + rax]	      4194	objcopy.c	FUNCTION_53
0x40000b0	            0x89c2	                            mov edx, eax	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000b2	      0xb801000000	                              mov eax, 1	      4178	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000b7	    0x81fa02010000	                          cmp edx, 0x102	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000bd	            0x74b7	                            je 0x4000076	      4176	objcopy.c	FUNCTION_53	ELSE_1	IF_3
0x40000bf	            0xf3c3	                                     ret	      4194	objcopy.c	FUNCTION_53
add_redefine_and_check	SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0:FOR,0:IF,2:CALL,11	62
0x40008e0	            0x4155	                                push r13	      1687	objcopy.c	FUNCTION_29
0x40008e2	            0x4154	                                push r12	      1687	objcopy.c	FUNCTION_29
0x40008e4	          0x4989fd	                            mov r13, rdi	      1687	objcopy.c	FUNCTION_29
0x40008e7	              0x55	                                push rbp	      1687	objcopy.c	FUNCTION_29
0x40008e8	              0x53	                                push rbx	      1687	objcopy.c	FUNCTION_29
0x40008e9	          0x4989f4	                            mov r12, rsi	      1687	objcopy.c	FUNCTION_29
0x40008ec	      0xbf10000000	                           mov edi, 0x10	      1688	objcopy.c	FUNCTION_29
0x40008f1	          0x4889d5	                            mov rbp, rdx	      1687	objcopy.c	FUNCTION_29
0x40008f4	        0x4883ec08	                              sub rsp, 8	      1687	objcopy.c	FUNCTION_29
0x40008f8	      0xe800000000	                          call 0x40008fd	      1688	objcopy.c	FUNCTION_29
0x40008fd	          0x4c89e7	                            mov rdi, r12	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000900	          0x4889c3	                            mov rbx, rax	      1688	objcopy.c	FUNCTION_29
0x4000903	      0xe800000000	                          call 0x4000908	      1691	objcopy.c	FUNCTION_29	CALL_2
0x4000908	          0x4889ef	                            mov rdi, rbp	      1692	objcopy.c	FUNCTION_29	CALL_3
0x400090b	          0x488903	                    mov qword [rbx], rax	      1691	objcopy.c	FUNCTION_29	CALL_2
0x400090e	      0xe800000000	                          call 0x4000913	      1692	objcopy.c	FUNCTION_29	CALL_3
0x4000913	    0x488b3d000000	            mov rdi, qword [0x0400091a] 	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x400091a	        0x48894308	                mov qword [rbx + 8], rax	      1692	objcopy.c	FUNCTION_29	CALL_3
0x400091e	          0x4889de	                            mov rsi, rbx	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000921	      0xe800000000	                          call 0x4000926	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000926	          0x4885c0	                           test rax, rax	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x4000929	            0x7551	                           jne 0x400097c	      1694	objcopy.c	FUNCTION_29	IF_1	CALL_4
0x400092b	    0x488b3d000000	            mov rdi, qword [0x04000932] 	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000932	          0x4889ee	                            mov rsi, rbp	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x4000935	      0xe800000000	                          call 0x400093a	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x400093a	          0x4885c0	                           test rax, rax	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x400093d	            0x755e	                           jne 0x400099d	      1698	objcopy.c	FUNCTION_29	IF_2	CALL_7
0x400093f	    0x488b3d000000	            mov rdi, qword [0x04000946] 	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000946	          0x4889de	                            mov rsi, rbx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000949	      0xba01000000	                              mov edx, 1	      1028	objcopy.c	FUNCTION_13	CALL_1
0x400094e	      0xe800000000	                          call 0x4000953	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000953	          0x488918	                    mov qword [rax], rbx	      1028	objcopy.c	FUNCTION_13	CALL_1
0x4000956	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1707	objcopy.c	FUNCTION_29	CALL_11
0x400095a	      0xba01000000	                              mov edx, 1	      1020	objcopy.c	FUNCTION_12	CALL_1
0x400095f	    0x488b3d000000	            mov rdi, qword [0x04000966] 	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000966	          0x4889de	                            mov rsi, rbx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000969	      0xe800000000	                          call 0x400096e	      1020	objcopy.c	FUNCTION_12	CALL_1
0x400096e	          0x488918	                    mov qword [rax], rbx	      1020	objcopy.c	FUNCTION_12	CALL_1
0x4000971	        0x4883c408	                              add rsp, 8	      1709	objcopy.c	FUNCTION_29
0x4000975	              0x5b	                                 pop rbx	      1709	objcopy.c	FUNCTION_29
0x4000976	              0x5d	                                 pop rbp	      1709	objcopy.c	FUNCTION_29
0x4000977	            0x415c	                                 pop r12	      1709	objcopy.c	FUNCTION_29
0x4000979	            0x415d	                                 pop r13	      1709	objcopy.c	FUNCTION_29
0x400097b	              0xc3	                                     ret	      1709	objcopy.c	FUNCTION_29
0x400097c	      0xba05000000	                              mov edx, 5	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000981	      0xbe00000000	                              mov esi, 0	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000986	            0x31ff	                            xor edi, edi	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000988	      0xe800000000	                          call 0x400098d	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x400098d	          0x4c89e2	                            mov rdx, r12	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000990	          0x4889c7	                            mov rdi, rax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000993	          0x4c89ee	                            mov rsi, r13	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000996	            0x31c0	                            xor eax, eax	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x4000998	      0xe800000000	                          call 0x400099d	      1695	objcopy.c	FUNCTION_29	IF_1	CALL_6
0x400099d	      0xba05000000	                              mov edx, 5	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009a2	      0xbe00000000	                              mov esi, 0	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009a7	            0x31ff	                            xor edi, edi	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009a9	      0xe800000000	                          call 0x40009ae	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009ae	          0x4889ea	                            mov rdx, rbp	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009b1	          0x4889c7	                            mov rdi, rax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009b4	          0x4c89ee	                            mov rsi, r13	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009b7	            0x31c0	                            xor eax, eax	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
0x40009b9	      0xe800000000	                          call 0x40009be	      1699	objcopy.c	FUNCTION_29	IF_2	CALL_9
