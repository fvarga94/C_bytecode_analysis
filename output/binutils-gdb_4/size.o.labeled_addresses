main	IF,4:FOR,1:SWITCH,3:DO,0:WHILE,1:CALL,29:functions,0:ELSE,1	200
0x4000040	          0x8b4620	            mov eax, dword [rsi + 0x20] 	       453	size.c	FUNCTION_9	CALL_1
0x4000043	            0xa801	                              test al, 1	       454	size.c	FUNCTION_9	IF_1
0x4000045	            0x7414	                            je 0x400005b	       454	size.c	FUNCTION_9	IF_1
0x4000047	            0xa818	                           test al, 0x18	       458	size.c	FUNCTION_9	IF_2
0x4000049	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	       457	size.c	FUNCTION_9	CALL_2
0x400004d	            0x7511	                           jne 0x4000060	       458	size.c	FUNCTION_9	IF_2
0x400004f	          0xf6c401	                              test ah, 1	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000052	            0x751c	                           jne 0x4000070	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000054	    0x480115000000	            add qword [0x0400005b], rdx 	       463	size.c	FUNCTION_9	ELSE_2
0x400005b	            0xf3c3	                                     ret	       463	size.c	FUNCTION_9	ELSE_2
0x400005d	           0xf1f00	                         nop dword [rax]	       463	size.c	FUNCTION_9	ELSE_2
0x4000060	    0x480115000000	            add qword [0x04000067], rdx 	       459	size.c	FUNCTION_9	IF_2
0x4000067	              0xc3	                                     ret	       459	size.c	FUNCTION_9	IF_2
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	       459	size.c	FUNCTION_9	IF_2
0x4000070	    0x480115000000	            add qword [0x04000077], rdx 	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000077	              0xc3	                                     ret	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000078	     0xf1f84000000	                   nop dword [rax + rax]	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000080	            0x4154	                                push r12	        75	size.c	FUNCTION_1
0x4000082	    0x4c8b25000000	            mov r12, qword [0x04000089] 	        76	size.c	FUNCTION_1	CALL_1
0x4000089	      0xba05000000	                              mov edx, 5	        76	size.c	FUNCTION_1	CALL_1
0x400008e	              0x55	                                push rbp	        75	size.c	FUNCTION_1
0x400008f	              0x53	                                push rbx	        75	size.c	FUNCTION_1
0x4000090	            0x89f5	                            mov ebp, esi	        75	size.c	FUNCTION_1
0x4000092	          0x4889fb	                            mov rbx, rdi	        75	size.c	FUNCTION_1
0x4000095	      0xbe00000000	                              mov esi, 0	        76	size.c	FUNCTION_1	CALL_1
0x400009a	            0x31ff	                            xor edi, edi	        76	size.c	FUNCTION_1	CALL_1
0x400009c	      0xe800000000	                          call 0x40000a1	        76	size.c	FUNCTION_1	CALL_1
0x40000a1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_13
0x40000a4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000a7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ac	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000af	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000b1	      0xe800000000	                          call 0x40000b6	        97	stdio2.h	CALL_13
0x40000b6	            0x31ff	                            xor edi, edi	        77	size.c	FUNCTION_1	CALL_2
0x40000b8	      0xba05000000	                              mov edx, 5	        77	size.c	FUNCTION_1	CALL_2
0x40000bd	      0xbe00000000	                              mov esi, 0	        77	size.c	FUNCTION_1	CALL_2
0x40000c2	      0xe800000000	                          call 0x40000c7	        77	size.c	FUNCTION_1	CALL_2
0x40000c7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000cc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000cf	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000d2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000d4	      0xe800000000	                          call 0x40000d9	        97	stdio2.h	CALL_13
0x40000d9	            0x31ff	                            xor edi, edi	        78	size.c	FUNCTION_1	CALL_3
0x40000db	      0xba05000000	                              mov edx, 5	        78	size.c	FUNCTION_1	CALL_3
0x40000e0	      0xbe00000000	                              mov esi, 0	        78	size.c	FUNCTION_1	CALL_3
0x40000e5	      0xe800000000	                          call 0x40000ea	        78	size.c	FUNCTION_1	CALL_3
0x40000ea	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ef	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000f2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000f5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000f7	      0xe800000000	                          call 0x40000fc	        97	stdio2.h	CALL_13
0x40000fc	            0x31ff	                            xor edi, edi	        79	size.c	FUNCTION_1	CALL_4
0x40000fe	      0xba05000000	                              mov edx, 5	        79	size.c	FUNCTION_1	CALL_4
0x4000103	      0xbe00000000	                              mov esi, 0	        79	size.c	FUNCTION_1	CALL_4
0x4000108	      0xe800000000	                          call 0x400010d	        79	size.c	FUNCTION_1	CALL_4
0x400010d	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000112	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000115	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400011a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400011d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x400011f	      0xe800000000	                          call 0x4000124	        97	stdio2.h	CALL_13
0x4000124	    0x488b3d000000	            mov rdi, qword [0x0400012b] 	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012b	          0x4889de	                            mov rsi, rbx	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012e	      0xe800000000	                          call 0x4000133	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x4000133	            0x85ed	                           test ebp, ebp	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000135	            0x7407	                            je 0x400013e	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000137	            0x89ef	                            mov edi, ebp	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x4000139	      0xe800000000	                          call 0x400013e	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x400013e	            0x31ff	                            xor edi, edi	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000140	      0xba05000000	                              mov edx, 5	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000145	      0xbe00000000	                              mov esi, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014a	      0xe800000000	                          call 0x400014f	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014f	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000154	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000157	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400015c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400015f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000161	      0xe800000000	                          call 0x4000166	        97	stdio2.h	CALL_13
0x4000166	            0xebcf	                           jmp 0x4000137	        97	stdio2.h	CALL_13
0x4000168	     0xf1f84000000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_13
0x4000170	    0x4881fe000000	                              cmp rsi, 0	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000177	            0x744d	                            je 0x40001c6	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000179	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017d	            0x7547	                           jne 0x40001c6	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017f	    0x4881fe000000	                              cmp rsi, 0	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000186	            0x743e	                            je 0x40001c6	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000188	              0x55	                                push rbp	       516	size.c	FUNCTION_11
0x4000189	              0x53	                                push rbx	       516	size.c	FUNCTION_11
0x400018a	          0x4889f3	                            mov rbx, rsi	       516	size.c	FUNCTION_11
0x400018d	        0x4883ec08	                              sub rsp, 8	       516	size.c	FUNCTION_11
0x4000191	          0x488b3e	                    mov rdi, qword [rsi]	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000194	        0x488b6e38	            mov rbp, qword [rsi + 0x38] 	       517	size.c	FUNCTION_11	CALL_1
0x4000198	      0xe800000000	                          call 0x400019d	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x400019d	    0x3b0500000000	            cmp eax, dword [0x040001a3] 	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001a3	            0x7f2b	                            jg 0x40001d0	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001a5	    0x48012d000000	            add qword [0x040001ac], rbp 	       528	size.c	FUNCTION_11	IF_1
0x40001ac	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b0	    0x483b05000000	            cmp rax, qword [0x040001b7] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b7	            0x7607	                           jbe 0x40001c0	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b9	    0x488905000000	            mov qword [0x040001c0], rax 	       531	size.c	FUNCTION_11	IF_1	CALL_8
0x40001c0	        0x4883c408	                              add rsp, 8	       533	size.c	FUNCTION_11
0x40001c4	              0x5b	                                 pop rbx	       533	size.c	FUNCTION_11
0x40001c5	              0x5d	                                 pop rbp	       533	size.c	FUNCTION_11
0x40001c6	            0xf3c3	                                     ret	       533	size.c	FUNCTION_11
0x40001c8	     0xf1f84000000	                   nop dword [rax + rax]	       533	size.c	FUNCTION_11
0x40001d0	    0x890500000000	            mov dword [0x040001d6], eax 	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001d6	            0xebcd	                           jmp 0x40001a5	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001d8	     0xf1f84000000	                   nop dword [rax + rax]	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001e0	              0x53	                                push rbx	       431	size.c	FUNCTION_8
0x40001e1	          0x4989f0	                             mov r8, rsi	       431	size.c	FUNCTION_8
0x40001e4	            0x89fb	                            mov ebx, edi	       431	size.c	FUNCTION_8
0x40001e6	      0xb900000000	                              mov ecx, 0	       431	size.c	FUNCTION_8
0x40001eb	        0x4883ec30	                           sub rsp, 0x30	       431	size.c	FUNCTION_8
0x40001ef	    0x64488b042528	                mov rax, qword fs:[0x28]	       431	size.c	FUNCTION_8
0x40001f8	      0x4889442428	             mov qword [rsp + 0x28], rax	       431	size.c	FUNCTION_8
0x40001fd	            0x31c0	                            xor eax, eax	       431	size.c	FUNCTION_8
0x40001ff	    0x8b0500000000	            mov eax, dword [0x04000205] 	       435	size.c	FUNCTION_8
0x4000205	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8
0x4000207	            0x7411	                            je 0x400021a	       434	size.c	FUNCTION_8
0x4000209	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x400020c	      0xb900000000	                              mov ecx, 0	       435	size.c	FUNCTION_8
0x4000211	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x4000216	        0x480f44c8	                          cmove rcx, rax	       435	size.c	FUNCTION_8
0x400021a	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x400021f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000224	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000227	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000229	      0xe800000000	                          call 0x400022e	        33	stdio2.h	FUNCTION_16	CALL_1
0x400022e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000230	          0x4889e1	                            mov rcx, rsp	       104	stdio2.h	CALL_16
0x4000233	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x4000235	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400023a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400023f	      0xe800000000	                          call 0x4000244	       104	stdio2.h	CALL_16
0x4000244	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       440	size.c	FUNCTION_8
0x4000249	    0x644833042528	                xor rax, qword fs:[0x28]	       440	size.c	FUNCTION_8
0x4000252	            0x7506	                           jne 0x400025a	       440	size.c	FUNCTION_8
0x4000254	        0x4883c430	                           add rsp, 0x30	       440	size.c	FUNCTION_8
0x4000258	              0x5b	                                 pop rbx	       440	size.c	FUNCTION_8
0x4000259	              0xc3	                                     ret	       440	size.c	FUNCTION_8
0x400025a	      0xe800000000	                          call 0x400025f	       440	size.c	FUNCTION_8
0x400025f	              0x90	                                     nop	       440	size.c	FUNCTION_8
0x4000260	            0x4154	                                push r12	       548	size.c	FUNCTION_13
0x4000262	              0x55	                                push rbp	       548	size.c	FUNCTION_13
0x4000263	              0x53	                                push rbx	       548	size.c	FUNCTION_13
0x4000264	        0x4883ec30	                           sub rsp, 0x30	       548	size.c	FUNCTION_13
0x4000268	    0x64488b042528	                mov rax, qword fs:[0x28]	       548	size.c	FUNCTION_13
0x4000271	      0x4889442428	             mov qword [rsp + 0x28], rax	       548	size.c	FUNCTION_13
0x4000276	            0x31c0	                            xor eax, eax	       548	size.c	FUNCTION_13
0x4000278	    0x4881fe000000	                              cmp rsi, 0	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x400027f	     0xf8401010000	                            je 0x4000386	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x4000285	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000289	     0xf85f7000000	                           jne 0x4000386	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x400028f	    0x4881fe000000	                              cmp rsi, 0	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000296	     0xf84ea000000	                            je 0x4000386	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x400029c	          0x488b0e	                    mov rcx, qword [rsi]	       104	stdio2.h	CALL_16
0x400029f	    0x8b1500000000	            mov edx, dword [0x040002a5] 	       104	stdio2.h	CALL_16
0x40002a5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40002aa	        0x488b6e38	            mov rbp, qword [rsi + 0x38] 	       549	size.c	FUNCTION_13	CALL_1
0x40002ae	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x40002b2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40002b7	    0x48012d000000	            add qword [0x040002be], rbp 	       555	size.c	FUNCTION_13	IF_1
0x40002be	      0xe800000000	                          call 0x40002c3	       104	stdio2.h	CALL_16
0x40002c3	    0x8b0500000000	            mov eax, dword [0x040002c9] 	       435	size.c	FUNCTION_8
0x40002c9	    0x448b25000000	           mov r12d, dword [0x040002d0] 	       539	size.c	FUNCTION_12	CALL_1
0x40002d0	      0xb900000000	                              mov ecx, 0	       434	size.c	FUNCTION_8
0x40002d5	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8
0x40002d7	            0x7411	                            je 0x40002ea	       434	size.c	FUNCTION_8
0x40002d9	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x40002dc	      0xb900000000	                              mov ecx, 0	       435	size.c	FUNCTION_8
0x40002e1	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x40002e6	        0x480f44c8	                          cmove rcx, rax	       435	size.c	FUNCTION_8
0x40002ea	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002ed	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002f2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002f7	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002fa	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002fc	      0xe800000000	                          call 0x4000301	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000301	          0x4889e1	                            mov rcx, rsp	       104	stdio2.h	CALL_16
0x4000304	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4000307	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400030c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000311	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000313	      0xe800000000	                          call 0x4000318	       104	stdio2.h	CALL_16
0x4000318	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400031a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400031f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000324	      0xe800000000	                          call 0x4000329	       104	stdio2.h	CALL_16
0x4000329	    0x8b0500000000	            mov eax, dword [0x0400032f] 	       435	size.c	FUNCTION_8
0x400032f	    0x8b2d00000000	            mov ebp, dword [0x04000335] 	       541	size.c	FUNCTION_12	CALL_2
0x4000335	      0xb900000000	                              mov ecx, 0	       434	size.c	FUNCTION_8
0x400033a	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8
0x400033c	            0x7411	                            je 0x400034f	       434	size.c	FUNCTION_8
0x400033e	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x4000341	      0xb900000000	                              mov ecx, 0	       435	size.c	FUNCTION_8
0x4000346	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x400034b	        0x480f44c8	                          cmove rcx, rax	       435	size.c	FUNCTION_8
0x400034f	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000352	              0xba	                                 invalid	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000353	            0x2800	                      sub byte [rax], al	        33	stdio2.h	FUNCTION_16	CALL_1
sysv_internal_sizer	IF,3:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,8:functions,0:ELSE,0	27
0x4000170	    0x4881fe000000	                              cmp rsi, 0	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000177	            0x744d	                            je 0x40001c6	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000179	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017d	            0x7547	                           jne 0x40001c6	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017f	    0x4881fe000000	                              cmp rsi, 0	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000186	            0x743e	                            je 0x40001c6	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000188	              0x55	                                push rbp	       516	size.c	FUNCTION_11
0x4000189	              0x53	                                push rbx	       516	size.c	FUNCTION_11
0x400018a	          0x4889f3	                            mov rbx, rsi	       516	size.c	FUNCTION_11
0x400018d	        0x4883ec08	                              sub rsp, 8	       516	size.c	FUNCTION_11
0x4000191	          0x488b3e	                    mov rdi, qword [rsi]	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000194	        0x488b6e38	            mov rbp, qword [rsi + 0x38] 	       517	size.c	FUNCTION_11	CALL_1
0x4000198	      0xe800000000	                          call 0x400019d	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x400019d	    0x3b0500000000	            cmp eax, dword [0x040001a3] 	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001a3	            0x7f2b	                            jg 0x40001d0	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001a5	    0x48012d000000	            add qword [0x040001ac], rbp 	       528	size.c	FUNCTION_11	IF_1
0x40001ac	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b0	    0x483b05000000	            cmp rax, qword [0x040001b7] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b7	            0x7607	                           jbe 0x40001c0	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001b9	    0x488905000000	            mov qword [0x040001c0], rax 	       531	size.c	FUNCTION_11	IF_1	CALL_8
0x40001c0	        0x4883c408	                              add rsp, 8	       533	size.c	FUNCTION_11
0x40001c4	              0x5b	                                 pop rbx	       533	size.c	FUNCTION_11
0x40001c5	              0x5d	                                 pop rbp	       533	size.c	FUNCTION_11
0x40001c6	            0xf3c3	                                     ret	       533	size.c	FUNCTION_11
0x40001c8	     0xf1f84000000	                   nop dword [rax + rax]	       533	size.c	FUNCTION_11
0x40001d0	    0x890500000000	            mov dword [0x040001d6], eax 	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001d6	            0xebcd	                           jmp 0x40001a5	       526	size.c	FUNCTION_11	IF_1	IF_2
sysv_internal_printer	IF,1:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,7:functions,0:ELSE,0	78
0x4000260	            0x4154	                                push r12	       548	size.c	FUNCTION_13
0x4000262	              0x55	                                push rbp	       548	size.c	FUNCTION_13
0x4000263	              0x53	                                push rbx	       548	size.c	FUNCTION_13
0x4000264	        0x4883ec30	                           sub rsp, 0x30	       548	size.c	FUNCTION_13
0x4000268	    0x64488b042528	                mov rax, qword fs:[0x28]	       548	size.c	FUNCTION_13
0x4000271	      0x4889442428	             mov qword [rsp + 0x28], rax	       548	size.c	FUNCTION_13
0x4000276	            0x31c0	                            xor eax, eax	       548	size.c	FUNCTION_13
0x4000278	    0x4881fe000000	                              cmp rsi, 0	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x400027f	     0xf8401010000	                            je 0x4000386	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x4000285	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000289	     0xf85f7000000	                           jne 0x4000386	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x400028f	    0x4881fe000000	                              cmp rsi, 0	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000296	     0xf84ea000000	                            je 0x4000386	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x400029c	          0x488b0e	                    mov rcx, qword [rsi]	       104	stdio2.h	CALL_16
0x400029f	    0x8b1500000000	            mov edx, dword [0x040002a5] 	       104	stdio2.h	CALL_16
0x40002a5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40002aa	        0x488b6e38	            mov rbp, qword [rsi + 0x38] 	       549	size.c	FUNCTION_13	CALL_1
0x40002ae	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x40002b2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40002b7	    0x48012d000000	            add qword [0x040002be], rbp 	       555	size.c	FUNCTION_13	IF_1
0x40002be	      0xe800000000	                          call 0x40002c3	       104	stdio2.h	CALL_16
0x40002c3	    0x8b0500000000	            mov eax, dword [0x040002c9] 	       435	size.c	FUNCTION_8
0x40002c9	    0x448b25000000	           mov r12d, dword [0x040002d0] 	       539	size.c	FUNCTION_12	CALL_1
0x40002d0	      0xb900000000	                              mov ecx, 0	       434	size.c	FUNCTION_8
0x40002d5	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8
0x40002d7	            0x7411	                            je 0x40002ea	       434	size.c	FUNCTION_8
0x40002d9	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x40002dc	      0xb900000000	                              mov ecx, 0	       435	size.c	FUNCTION_8
0x40002e1	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x40002e6	        0x480f44c8	                          cmove rcx, rax	       435	size.c	FUNCTION_8
0x40002ea	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002ed	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002f2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002f7	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002fa	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002fc	      0xe800000000	                          call 0x4000301	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000301	          0x4889e1	                            mov rcx, rsp	       104	stdio2.h	CALL_16
0x4000304	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4000307	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400030c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000311	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000313	      0xe800000000	                          call 0x4000318	       104	stdio2.h	CALL_16
0x4000318	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400031a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400031f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000324	      0xe800000000	                          call 0x4000329	       104	stdio2.h	CALL_16
0x4000329	    0x8b0500000000	            mov eax, dword [0x0400032f] 	       435	size.c	FUNCTION_8
0x400032f	    0x8b2d00000000	            mov ebp, dword [0x04000335] 	       541	size.c	FUNCTION_12	CALL_2
0x4000335	      0xb900000000	                              mov ecx, 0	       434	size.c	FUNCTION_8
0x400033a	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8
0x400033c	            0x7411	                            je 0x400034f	       434	size.c	FUNCTION_8
0x400033e	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x4000341	      0xb900000000	                              mov ecx, 0	       435	size.c	FUNCTION_8
0x4000346	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x400034b	        0x480f44c8	                          cmove rcx, rax	       435	size.c	FUNCTION_8
0x400034f	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000352	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000357	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x400035c	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x400035f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000361	      0xe800000000	                          call 0x4000366	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000366	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400036b	          0x4889e1	                            mov rcx, rsp	       104	stdio2.h	CALL_16
0x400036e	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x4000370	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4000375	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000377	      0xe800000000	                          call 0x400037c	       104	stdio2.h	CALL_16
0x400037c	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4000381	      0xe800000000	                          call 0x4000386	       104	stdio2.h	CALL_16
0x4000386	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       561	size.c	FUNCTION_13
0x400038b	    0x644833042528	                xor rax, qword fs:[0x28]	       561	size.c	FUNCTION_13
0x4000394	            0x7509	                           jne 0x400039f	       561	size.c	FUNCTION_13
0x4000396	        0x4883c430	                           add rsp, 0x30	       561	size.c	FUNCTION_13
0x400039a	              0x5b	                                 pop rbx	       561	size.c	FUNCTION_13
0x400039b	              0x5d	                                 pop rbp	       561	size.c	FUNCTION_13
0x400039c	            0x415c	                                 pop r12	       561	size.c	FUNCTION_13
0x400039e	              0xc3	                                     ret	       561	size.c	FUNCTION_13
0x400039f	      0xe800000000	                          call 0x40003a4	       561	size.c	FUNCTION_13
usage	IF,1:FOR,1:SWITCH,0:DO,0:WHILE,0:CALL,9:functions,0:ELSE,0	62
0x4000080	            0x4154	                                push r12	        75	size.c	FUNCTION_1
0x4000082	    0x4c8b25000000	            mov r12, qword [0x04000089] 	        76	size.c	FUNCTION_1	CALL_1
0x4000089	      0xba05000000	                              mov edx, 5	        76	size.c	FUNCTION_1	CALL_1
0x400008e	              0x55	                                push rbp	        75	size.c	FUNCTION_1
0x400008f	              0x53	                                push rbx	        75	size.c	FUNCTION_1
0x4000090	            0x89f5	                            mov ebp, esi	        75	size.c	FUNCTION_1
0x4000092	          0x4889fb	                            mov rbx, rdi	        75	size.c	FUNCTION_1
0x4000095	      0xbe00000000	                              mov esi, 0	        76	size.c	FUNCTION_1	CALL_1
0x400009a	            0x31ff	                            xor edi, edi	        76	size.c	FUNCTION_1	CALL_1
0x400009c	      0xe800000000	                          call 0x40000a1	        76	size.c	FUNCTION_1	CALL_1
0x40000a1	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_13
0x40000a4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000a7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ac	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000af	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000b1	      0xe800000000	                          call 0x40000b6	        97	stdio2.h	CALL_13
0x40000b6	            0x31ff	                            xor edi, edi	        77	size.c	FUNCTION_1	CALL_2
0x40000b8	      0xba05000000	                              mov edx, 5	        77	size.c	FUNCTION_1	CALL_2
0x40000bd	      0xbe00000000	                              mov esi, 0	        77	size.c	FUNCTION_1	CALL_2
0x40000c2	      0xe800000000	                          call 0x40000c7	        77	size.c	FUNCTION_1	CALL_2
0x40000c7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000cc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000cf	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000d2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000d4	      0xe800000000	                          call 0x40000d9	        97	stdio2.h	CALL_13
0x40000d9	            0x31ff	                            xor edi, edi	        78	size.c	FUNCTION_1	CALL_3
0x40000db	      0xba05000000	                              mov edx, 5	        78	size.c	FUNCTION_1	CALL_3
0x40000e0	      0xbe00000000	                              mov esi, 0	        78	size.c	FUNCTION_1	CALL_3
0x40000e5	      0xe800000000	                          call 0x40000ea	        78	size.c	FUNCTION_1	CALL_3
0x40000ea	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ef	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000f2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000f5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x40000f7	      0xe800000000	                          call 0x40000fc	        97	stdio2.h	CALL_13
0x40000fc	            0x31ff	                            xor edi, edi	        79	size.c	FUNCTION_1	CALL_4
0x40000fe	      0xba05000000	                              mov edx, 5	        79	size.c	FUNCTION_1	CALL_4
0x4000103	      0xbe00000000	                              mov esi, 0	        79	size.c	FUNCTION_1	CALL_4
0x4000108	      0xe800000000	                          call 0x400010d	        79	size.c	FUNCTION_1	CALL_4
0x400010d	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000112	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000115	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400011a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400011d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x400011f	      0xe800000000	                          call 0x4000124	        97	stdio2.h	CALL_13
0x4000124	    0x488b3d000000	            mov rdi, qword [0x0400012b] 	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012b	          0x4889de	                            mov rsi, rbx	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012e	      0xe800000000	                          call 0x4000133	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x4000133	            0x85ed	                           test ebp, ebp	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000135	            0x7407	                            je 0x400013e	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x4000137	            0x89ef	                            mov edi, ebp	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x4000139	      0xe800000000	                          call 0x400013e	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x400013e	            0x31ff	                            xor edi, edi	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000140	      0xba05000000	                              mov edx, 5	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000145	      0xbe00000000	                              mov esi, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014a	      0xe800000000	                          call 0x400014f	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014f	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000154	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000157	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400015c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400015f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_13
0x4000161	      0xe800000000	                          call 0x4000166	        97	stdio2.h	CALL_13
0x4000166	            0xebcf	                           jmp 0x4000137	        97	stdio2.h	CALL_13
berkeley_sum	IF,3:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,2:functions,0:ELSE,2	16
0x4000040	          0x8b4620	            mov eax, dword [rsi + 0x20] 	       453	size.c	FUNCTION_9	CALL_1
0x4000043	            0xa801	                              test al, 1	       454	size.c	FUNCTION_9	IF_1
0x4000045	            0x7414	                            je 0x400005b	       454	size.c	FUNCTION_9	IF_1
0x4000047	            0xa818	                           test al, 0x18	       458	size.c	FUNCTION_9	IF_2
0x4000049	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	       457	size.c	FUNCTION_9	CALL_2
0x400004d	            0x7511	                           jne 0x4000060	       458	size.c	FUNCTION_9	IF_2
0x400004f	          0xf6c401	                              test ah, 1	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000052	            0x751c	                           jne 0x4000070	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000054	    0x480115000000	            add qword [0x0400005b], rdx 	       463	size.c	FUNCTION_9	ELSE_2
0x400005b	            0xf3c3	                                     ret	       463	size.c	FUNCTION_9	ELSE_2
0x400005d	           0xf1f00	                         nop dword [rax]	       463	size.c	FUNCTION_9	ELSE_2
0x4000060	    0x480115000000	            add qword [0x04000067], rdx 	       459	size.c	FUNCTION_9	IF_2
0x4000067	              0xc3	                                     ret	       459	size.c	FUNCTION_9	IF_2
0x4000068	     0xf1f84000000	                   nop dword [rax + rax]	       459	size.c	FUNCTION_9	IF_2
0x4000070	    0x480115000000	            add qword [0x04000077], rdx 	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000077	              0xc3	                                     ret	       461	size.c	FUNCTION_9	ELSE_1	IF_3
