scan_unit_for_symbols	functions,0:DO,0:SWITCH,3:WHILE,1:ELSE,2:IF,29:FOR,2:CALL,24	1088
0x4004190	            0x4157	                                push r15	      3041	dwarf2.c	FUNCTION_45
0x4004192	            0x4156	                                push r14	      3041	dwarf2.c	FUNCTION_45
0x4004194	          0x4989fe	                            mov r14, rdi	      3041	dwarf2.c	FUNCTION_45
0x4004197	            0x4155	                                push r13	      3041	dwarf2.c	FUNCTION_45
0x4004199	            0x4154	                                push r12	      3041	dwarf2.c	FUNCTION_45
0x400419b	              0x55	                                push rbp	      3041	dwarf2.c	FUNCTION_45
0x400419c	              0x53	                                push rbx	      3041	dwarf2.c	FUNCTION_45
0x400419d	    0x4881eca80000	                           sub rsp, 0xa8	      3041	dwarf2.c	FUNCTION_45
0x40041a4	        0x4c8b6768	            mov r12, qword [rdi + 0x68] 	      3043	dwarf2.c	FUNCTION_45
0x40041a8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3041	dwarf2.c	FUNCTION_45
0x40041b1	    0x488984249800	             mov qword [rsp + 0x98], rax	      3041	dwarf2.c	FUNCTION_45
0x40041b9	            0x31c0	                            xor eax, eax	      3041	dwarf2.c	FUNCTION_45
0x40041bb	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3042	dwarf2.c	FUNCTION_45
0x40041bf	      0x4889442408	                mov qword [rsp + 8], rax	      3042	dwarf2.c	FUNCTION_45
0x40041c4	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      3044	dwarf2.c	FUNCTION_45
0x40041cb	      0xbf00010000	                          mov edi, 0x100	      3054	dwarf2.c	FUNCTION_45
0x40041d0	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	      3044	dwarf2.c	FUNCTION_45
0x40041d4	      0xe800000000	                          call 0x40041d9	      3054	dwarf2.c	FUNCTION_45
0x40041d9	          0x4889c6	                            mov rsi, rax	      3054	dwarf2.c	FUNCTION_45
0x40041dc	        0x48890424	                    mov qword [rsp], rax	      3054	dwarf2.c	FUNCTION_45
0x40041e0	            0x31c0	                            xor eax, eax	      3057	dwarf2.c	FUNCTION_45	IF_1
0x40041e2	          0x4885f6	                           test rsi, rsi	      3056	dwarf2.c	FUNCTION_45	IF_1
0x40041e5	            0x7529	                           jne 0x4004210	      3056	dwarf2.c	FUNCTION_45	IF_1
0x40041e7	    0x488bbc249800	            mov rdi, qword [rsp + 0x98] 	      3321	dwarf2.c	FUNCTION_45
0x40041ef	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3321	dwarf2.c	FUNCTION_45
0x40041f8	     0xf8574120000	                           jne 0x4005472	      3321	dwarf2.c	FUNCTION_45
0x40041fe	    0x4881c4a80000	                           add rsp, 0xa8	      3321	dwarf2.c	FUNCTION_45
0x4004205	              0x5b	                                 pop rbx	      3321	dwarf2.c	FUNCTION_45
0x4004206	              0x5d	                                 pop rbp	      3321	dwarf2.c	FUNCTION_45
0x4004207	            0x415c	                                 pop r12	      3321	dwarf2.c	FUNCTION_45
0x4004209	            0x415d	                                 pop r13	      3321	dwarf2.c	FUNCTION_45
0x400420b	            0x415e	                                 pop r14	      3321	dwarf2.c	FUNCTION_45
0x400420d	            0x415f	                                 pop r15	      3321	dwarf2.c	FUNCTION_45
0x400420f	              0xc3	                                     ret	      3321	dwarf2.c	FUNCTION_45
0x4004210	          0x4d39ec	                            cmp r12, r13	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4004213	    0x48c706000000	                      mov qword [rsi], 0	      3058	dwarf2.c	FUNCTION_45
0x400421a	            0x735c	                           jae 0x4004278	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x400421c	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4004224	    0xc74424240000	               mov dword [rsp + 0x24], 0	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x400422c	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4004231	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x4004236	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400423b	      0x488d542478	                   lea rdx, [rsp + 0x78]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x4004240	            0x31c9	                            xor ecx, ecx	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x4004242	          0x4c89e6	                            mov rsi, r12	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x4004245	      0xe800000000	                          call 0x400424a	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400424a	          0x4889c1	                            mov rcx, rax	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400424d	            0x89c5	                            mov ebp, eax	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400424f	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x4004253	          0x4901c4	                            add r12, rax	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x4004256	            0x85c9	                           test ecx, ecx	      3079	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x4004258	            0x7536	                           jne 0x4004290	      3079	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x400425a	      0x836c242401	               sub dword [rsp + 0x24], 1	      3081	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x400425f	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3081	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x4004263	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x4004266	     0xf84c7110000	                            je 0x4005433	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x400426c	      0x4c39642428	            cmp qword [rsp + 0x28], r12 	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4004271	            0x77be	                            ja 0x4004231	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4004273	       0xf1f440000	                   nop dword [rax + rax]	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4004278	        0x488b3c24	                    mov rdi, qword [rsp]	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x400427c	      0xe800000000	                          call 0x4004281	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x4004281	            0x31c0	                            xor eax, eax	      3320	dwarf2.c	FUNCTION_45
0x4004283	      0xe95fffffff	                           jmp 0x40041e7	      3320	dwarf2.c	FUNCTION_45
0x4004288	     0xf1f84000000	                   nop dword [rax + rax]	      3320	dwarf2.c	FUNCTION_45
0x4004290	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x4004292	      0xbabf56cf0e	                      mov edx, 0xecf56bf	       925	dwarf2.c	FUNCTION_18
0x4004297	            0xf7e2	                                 mul edx	       925	dwarf2.c	FUNCTION_18
0x4004299	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x400429b	            0x29d0	                            sub eax, edx	       925	dwarf2.c	FUNCTION_18
0x400429d	            0xd1e8	                              shr eax, 1	       925	dwarf2.c	FUNCTION_18
0x400429f	             0x1d0	                            add eax, edx	       925	dwarf2.c	FUNCTION_18
0x40042a1	            0x89ca	                            mov edx, ecx	       925	dwarf2.c	FUNCTION_18
0x40042a3	          0xc1e806	                              shr eax, 6	       925	dwarf2.c	FUNCTION_18
0x40042a6	          0x6bc079	                     imul eax, eax, 0x79	       925	dwarf2.c	FUNCTION_18
0x40042a9	            0x29c2	                            sub edx, eax	       925	dwarf2.c	FUNCTION_18
0x40042ab	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       925	dwarf2.c	FUNCTION_18
0x40042af	        0x488b1cd0	            mov rbx, qword [rax + rdx*8]	       925	dwarf2.c	FUNCTION_18
0x40042b3	          0x4885db	                           test rbx, rbx	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x40042b6	            0x7415	                            je 0x40042cd	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x40042b8	            0x3b0b	                    cmp ecx, dword [rbx]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40042ba	            0x7508	                           jne 0x40042c4	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40042bc	            0xeb52	                           jmp 0x4004310	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40042be	            0x6690	                                     nop	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40042c0	            0x3b2b	                    cmp ebp, dword [rbx]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40042c2	            0x744c	                            je 0x4004310	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40042c4	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x40042c8	          0x4885db	                           test rbx, rbx	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x40042cb	            0x75f3	                           jne 0x40042c0	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x40042cd	    0x3b2d00000000	            cmp ebp, dword [0x040042d3] 	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x40042d3	            0x742b	                            je 0x4004300	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x40042d5	      0xba05000000	                              mov edx, 5	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40042da	      0xbe00000000	                              mov esi, 0	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40042df	      0xbf00000000	                              mov edi, 0	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40042e4	      0xe800000000	                          call 0x40042e9	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40042e9	            0x89ee	                            mov esi, ebp	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x40042eb	          0x4889c7	                            mov rdi, rax	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x40042ee	            0x31c0	                            xor eax, eax	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x40042f0	      0xe800000000	                          call 0x40042f5	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x40042f5	    0x892d00000000	            mov dword [0x040042fb], ebp 	      3096	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x40042fb	       0xf1f440000	                   nop dword [rax + rax]	      3096	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x4004300	      0xbf11000000	                           mov edi, 0x11	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x4004305	      0xe800000000	                          call 0x400430a	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x400430a	      0xe969ffffff	                           jmp 0x4004278	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x400430f	              0x90	                                     nop	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x4004310	          0x8b4304	                mov eax, dword [rbx + 4]	      3103	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004313	          0x83f82e	                           cmp eax, 0x2e	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004316	     0xf86dc070000	                           jbe 0x4004af8	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400431c	          0x83f834	                           cmp eax, 0x34	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x400431f	     0xf848b100000	                            je 0x40053b0	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4004325	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3102	dwarf2.c	FUNCTION_45	WHILE_1
0x400432e	      0x4863442424	         movsxd rax, dword [rsp + 0x24] 	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4004333	        0x488b3424	                    mov rsi, qword [rsp]	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4004337	          0x4531ed	                          xor r13d, r13d	      3128	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x400433a	    0x48c704c60000	              mov qword [rsi + rax*8], 0	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4004342	          0x8b7b0c	              mov edi, dword [rbx + 0xc]	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4004345	            0x85ff	                           test edi, edi	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4004347	     0xf847b0c0000	                            je 0x4004fc8	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400434d	        0x498d452c	                   lea rax, [r13 + 0x2c]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4004351	    0xc74424580000	               mov dword [rsp + 0x58], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4004359	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4004362	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400436b	            0x31ed	                            xor ebp, ebp	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400436d	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4004372	      0x4889442438	             mov qword [rsp + 0x38], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4004377	        0x498d4530	                   lea rax, [r13 + 0x30]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400437b	      0x4889442440	             mov qword [rsp + 0x40], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4004380	            0xeb4a	                           jmp 0x40043cc	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4004382	    0x660f1f440000	                    nop word [rax + rax]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4004388	          0x83f812	                           cmp eax, 0x12	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400438b	     0xf8417040000	                            je 0x40047a8	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004391	     0xf8769030000	                            ja 0x4004700	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004397	          0x83f803	                              cmp eax, 3	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400439a	     0xf8430040000	                            je 0x40047d0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40043a0	          0x83f811	                           cmp eax, 0x11	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40043a3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40043a8	    0x480f44842488	           cmove rax, qword [rsp + 0x88]	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40043b1	      0x4889442418	             mov qword [rsp + 0x18], rax	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40043b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40043c0	          0x83c501	                              add ebp, 1	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x40043c3	          0x396b0c	              cmp dword [rbx + 0xc], ebp	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x40043c6	     0xf86340c0000	                           jbe 0x4005000	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x40043cc	            0x89e8	                            mov eax, ebp	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x40043ce	        0x48c1e004	                              shl rax, 4	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x40043d2	        0x48034310	             add rax, qword [rbx + 0x10]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x40043d6	          0x4d39e7	                            cmp r15, r12	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40043d9	            0x8b10	                    mov edx, dword [rax]	      1285	dwarf2.c	FUNCTION_22
0x40043db	          0x8b4804	                mov ecx, dword [rax + 4]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40043de	    0x899424800000	             mov dword [rsp + 0x80], edx	      1285	dwarf2.c	FUNCTION_22
0x40043e5	            0x7709	                            ja 0x40043f0	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40043e7	          0x83f919	                           cmp ecx, 0x19	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40043ea	     0xf8540010000	                           jne 0x4004530	      1098	dwarf2.c	FUNCTION_21	IF_1
0x40043f0	          0x83f910	                           cmp ecx, 0x10	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40043f3	        0x4c8b5008	                mov r10, qword [rax + 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40043f7	        0x4d8b4e10	              mov r9, qword [r14 + 0x10]	      1093	dwarf2.c	FUNCTION_21
0x40043fb	    0x898c24840000	             mov dword [rsp + 0x84], ecx	      1105	dwarf2.c	FUNCTION_21
0x4004402	     0xf84a8060000	                            je 0x4004ab0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004408	     0xf87c2000000	                            ja 0x40044d0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400440e	          0x83f908	                              cmp ecx, 8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004411	     0xf8489080000	                            je 0x4004ca0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004417	     0xf8743010000	                            ja 0x4004560	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400441d	          0x83f904	                              cmp ecx, 4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004420	     0xf8492070000	                            je 0x4004bb8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004426	     0xf8694050000	                           jbe 0x40049c0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400442c	          0x83f906	                              cmp ecx, 6	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400442f	     0xf840b060000	                            je 0x4004a40	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004435	     0xf87c2000000	                            ja 0x40044fd	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400443b	      0x498d542402	                      lea rdx, [r12 + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4004440	            0x31c0	                            xor eax, eax	       604	dwarf2.c	FUNCTION_8	IF_1
0x4004442	          0x4939d7	                            cmp r15, rdx	       604	dwarf2.c	FUNCTION_8	IF_1
0x4004445	            0x7219	                            jb 0x4004460	       604	dwarf2.c	FUNCTION_8	IF_1
0x4004447	        0x498b4108	                 mov rax, qword [r9 + 8]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400444b	      0x4889542448	             mov qword [rsp + 0x48], rdx	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4004450	          0x4c89e7	                            mov rdi, r12	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4004453	          0xff5050	                 call qword [rax + 0x50]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4004456	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400445b	            0x89c0	                            mov eax, eax	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400445d	           0xf1f00	                         nop dword [rax]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4004460	    0x488984248800	             mov qword [rsp + 0x88], rax	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4004468	          0x4989d4	                            mov r12, rdx	       620	dwarf2.c	FUNCTION_10	IF_1
0x400446b	          0x4d85e4	                           test r12, r12	      3151	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x400446e	     0xf8404feffff	                            je 0x4004278	      3151	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x4004474	          0x4d85ed	                           test r13, r13	      3154	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13
0x4004477	     0xf8413020000	                            je 0x4004690	      3154	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13
0x400447d	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004484	          0x83f83b	                           cmp eax, 0x3b	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004487	     0xf8403030000	                            je 0x4004790	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400448d	     0xf86f5feffff	                           jbe 0x4004388	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004493	          0x83f858	                           cmp eax, 0x58	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004496	     0xf84e4030000	                            je 0x4004880	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400449c	     0xf868e020000	                           jbe 0x4004730	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044a2	          0x83f86e	                           cmp eax, 0x6e	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044a5	     0xf8485030000	                            je 0x4004830	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044ab	      0x3d07200000	                         cmp eax, 0x2007	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044b0	     0xf847a030000	                            je 0x4004830	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044b6	          0x83f859	                           cmp eax, 0x59	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044b9	     0xf8501ffffff	                           jne 0x40043c0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044bf	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044c7	        0x41894520	             mov dword [r13 + 0x20], eax	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044cb	      0xe9f0feffff	                           jmp 0x40043c0	      3165	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40044d0	          0x83f917	                           cmp ecx, 0x17	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044d3	     0xf84a7060000	                            je 0x4004b80	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044d9	     0xf87d1000000	                            ja 0x40045b0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044df	          0x83f913	                           cmp ecx, 0x13	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044e2	     0xf8458050000	                            je 0x4004a40	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044e8	     0xf8632050000	                           jbe 0x4004a20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044ee	          0x83f915	                           cmp ecx, 0x15	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044f1	     0xf8479050000	                            je 0x4004a70	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044f7	     0xf87a3080000	                            ja 0x4004da0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40044fd	      0x498d542408	                      lea rdx, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004502	            0x31c0	                            xor eax, eax	       621	dwarf2.c	FUNCTION_10	IF_1
0x4004504	          0x4939d7	                            cmp r15, rdx	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004507	     0xf8253ffffff	                            jb 0x4004460	       620	dwarf2.c	FUNCTION_10	IF_1
0x400450d	        0x498b4108	                 mov rax, qword [r9 + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4004511	      0x4889542448	             mov qword [rsp + 0x48], rdx	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4004516	          0x4c89e7	                            mov rdi, r12	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4004519	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400451c	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4004521	      0xe93affffff	                           jmp 0x4004460	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4004526	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4004530	      0xba05000000	                              mov edx, 5	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4004535	      0xbe00000000	                              mov esi, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400453a	      0xbf00000000	                              mov edi, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400453f	      0xe800000000	                          call 0x4004544	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4004544	          0x4889c7	                            mov rdi, rax	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4004547	            0x31c0	                            xor eax, eax	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4004549	      0xe800000000	                          call 0x400454e	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400454e	      0xbf11000000	                           mov edi, 0x11	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x4004553	      0xe800000000	                          call 0x4004558	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x4004558	      0xe90effffff	                           jmp 0x400446b	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x400455d	           0xf1f00	                         nop dword [rax]	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x4004560	          0x83f90c	                            cmp ecx, 0xc	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004563	     0xf84ff010000	                            je 0x4004768	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004569	     0xf8671030000	                           jbe 0x40048e0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400456f	          0x83f90e	                            cmp ecx, 0xe	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004572	     0xf8490080000	                            je 0x4004e08	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004578	     0xf87f2040000	                            ja 0x4004a70	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400457e	          0x4d89f8	                             mov r8, r15	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4004581	      0xb901000000	                              mov ecx, 1	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4004586	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x400458b	          0x4c89e6	                            mov rsi, r12	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x400458e	          0x4c89cf	                             mov rdi, r9	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4004591	      0xe800000000	                          call 0x4004596	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4004596	    0x488984248800	             mov qword [rsp + 0x88], rax	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x400459e	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045a2	          0x4901c4	                            add r12, rax	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045a5	      0xe9c1feffff	                           jmp 0x400446b	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045aa	    0x660f1f440000	                    nop word [rax + rax]	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045b0	          0x83f920	                           cmp ecx, 0x20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045b3	     0xf8444ffffff	                            je 0x40044fd	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045b9	     0xf87a9030000	                            ja 0x4004968	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045bf	          0x83f919	                           cmp ecx, 0x19	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045c2	     0xf84c0060000	                            je 0x4004c88	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045c8	     0xf8221030000	                            jb 0x40048ef	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045ce	          0x83f91f	                           cmp ecx, 0x1f	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045d1	     0xf85b2030000	                           jne 0x4004989	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40045d7	    0x410fb686ad00	           movzx eax, byte [r14 + 0xad] 	       739	dwarf2.c	FUNCTION_14	IF_1
0x40045df	    0x4d8b9ea00000	            mov r11, qword [r14 + 0xa0] 	       736	dwarf2.c	FUNCTION_14
0x40045e6	          0x4889c2	                            mov rdx, rax	       739	dwarf2.c	FUNCTION_14	IF_1
0x40045e9	          0x4c01e0	                            add rax, r12	       739	dwarf2.c	FUNCTION_14	IF_1
0x40045ec	          0x4939c7	                            cmp r15, rax	       739	dwarf2.c	FUNCTION_14	IF_1
0x40045ef	     0xf82ec0b0000	                            jb 0x40051e1	       739	dwarf2.c	FUNCTION_14	IF_1
0x40045f5	          0x80fa04	                               cmp dl, 4	       745	dwarf2.c	FUNCTION_14	IF_2
0x40045f8	     0xf844a0c0000	                            je 0x4005248	       745	dwarf2.c	FUNCTION_14	IF_2
0x40045fe	      0x498d442408	                      lea rax, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004603	          0x4531d2	                          xor r10d, r10d	       621	dwarf2.c	FUNCTION_10	IF_1
0x4004606	          0x4c89cf	                             mov rdi, r9	      1093	dwarf2.c	FUNCTION_21
0x4004609	          0x4939c7	                            cmp r15, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x400460c	     0xf83420b0000	                           jae 0x4005154	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004612	        0x498b4310	            mov rax, qword [r11 + 0x10] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004616	        0x8954247c	             mov dword [rsp + 0x7c], edx	       750	dwarf2.c	FUNCTION_14
0x400461a	    0x4d8d8bb80000	                    lea r9, [r11 + 0xb8]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004621	        0x498b5378	            mov rdx, qword [r11 + 0x78] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004625	    0x4d8d83b00000	                    lea r8, [r11 + 0xb0]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400462c	          0x4c89d1	                            mov rcx, r10	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400462f	      0x4c895c2450	             mov qword [rsp + 0x50], r11	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004634	      0x4c89542448	             mov qword [rsp + 0x48], r10	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004639	    0x488db0000100	                  lea rsi, [rax + 0x100]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004640	      0xe8fbb9ffff	                   call sym.read_section	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004645	            0x85c0	                           test eax, eax	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004647	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400464c	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004651	     0xf8439070000	                            je 0x4004d90	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4004657	    0x4d3b93b80000	            cmp r10, qword [r11 + 0xb8] 	       758	dwarf2.c	FUNCTION_14	IF_4
0x400465e	     0xf832c070000	                           jae 0x4004d90	       758	dwarf2.c	FUNCTION_14	IF_4
0x4004664	    0x4d0393b00000	             add r10, qword [r11 + 0xb0]	       760	dwarf2.c	FUNCTION_14
0x400466b	        0x41803a00	                       cmp byte [r10], 0	       761	dwarf2.c	FUNCTION_14	IF_5
0x400466f	     0xf841b070000	                            je 0x4004d90	       761	dwarf2.c	FUNCTION_14	IF_5
0x4004675	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	       761	dwarf2.c	FUNCTION_14	IF_5
0x4004679	    0x4c8994248800	             mov qword [rsp + 0x88], r10	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x4004681	          0x4901c4	                            add r12, rax	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004684	      0xe9e2fdffff	                           jmp 0x400446b	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004689	     0xf1f80000000	                         nop dword [rax]	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004690	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      3226	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19
0x4004696	     0xf8424fdffff	                            je 0x40043c0	      3226	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19
0x400469c	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40046a3	          0x83f83a	                           cmp eax, 0x3a	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40046a6	     0xf8404080000	                            je 0x4004eb0	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40046ac	     0xf87ce030000	                            ja 0x4004a80	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40046b2	          0x83f802	                              cmp eax, 2	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40046b5	     0xf842d080000	                            je 0x4004ee8	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40046bb	          0x83f803	                              cmp eax, 3	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40046be	     0xf85fcfcffff	                           jne 0x40043c0	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40046c4	    0x8b8424840000	            mov eax, dword [rsp + 0x84] 	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x40046cb	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x40046ce	     0xf87cc090000	                            ja 0x40050a0	      1077	dwarf2.c	FUNCTION_20
0x40046d4	      0xbe00410080	                     mov esi, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x40046d9	        0x480fa3c6	                             bt rsi, rax	      1078	dwarf2.c	FUNCTION_20
0x40046dd	     0xf83ddfcffff	                           jae 0x40043c0	      1078	dwarf2.c	FUNCTION_20
0x40046e3	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40046eb	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40046f0	        0x48894718	             mov qword [rdi + 0x18], rax	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40046f4	      0xe9c7fcffff	                           jmp 0x40043c0	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40046f9	     0xf1f80000000	                         nop dword [rax]	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x4004700	          0x83f831	                           cmp eax, 0x31	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004703	     0xf8497010000	                            je 0x40048a0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004709	          0x83f83a	                           cmp eax, 0x3a	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400470c	     0xf85aefcffff	                           jne 0x40043c0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004712	        0x498b7e78	            mov rdi, qword [r14 + 0x78] 	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4004716	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x400471d	      0xe8bebdffff	                call sym.concat_filename	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4004722	        0x49894518	             mov qword [r13 + 0x18], rax	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4004726	      0xe995fcffff	                           jmp 0x40043c0	      3216	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400472b	       0xf1f440000	                   nop dword [rax + rax]	      3216	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004730	          0x83f847	                           cmp eax, 0x47	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004733	     0xf8467010000	                            je 0x40048a0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004739	          0x83f855	                           cmp eax, 0x55	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400473c	     0xf857efcffff	                           jne 0x40043c0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004742	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400474a	        0x498d7538	                   lea rsi, [r13 + 0x38]	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400474e	          0x4c89f7	                            mov rdi, r14	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4004751	      0xe8dac4ffff	                 call sym.read_rangelist	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4004756	            0x85c0	                           test eax, eax	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4004758	     0xf8562fcffff	                           jne 0x40043c0	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400475e	      0xe915fbffff	                           jmp 0x4004278	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4004763	       0xf1f440000	                   nop dword [rax + rax]	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4004768	      0x498d442401	                      lea rax, [r12 + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400476d	            0x31d2	                            xor edx, edx	       588	dwarf2.c	FUNCTION_6	IF_1
0x400476f	          0x4939c7	                            cmp r15, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004772	            0x7205	                            jb 0x4004779	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004774	      0x410fb61424	                   movzx edx, byte [r12]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004779	    0x488994248800	             mov qword [rsp + 0x88], rdx	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x4004781	          0x4989c4	                            mov r12, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004784	      0xe9e2fcffff	                           jmp 0x400446b	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004789	     0xf1f80000000	                         nop dword [rax]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004790	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004798	        0x41894524	             mov dword [r13 + 0x24], eax	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400479c	      0xe91ffcffff	                           jmp 0x40043c0	      3220	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047a1	     0xf1f80000000	                         nop dword [rax]	      3220	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047a8	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3204	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047b0	      0x4889442430	             mov qword [rsp + 0x30], rax	      3204	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047b5	            0x31c0	                            xor eax, eax	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047b7	    0x83bc24840000	               cmp dword [rsp + 0x84], 1	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047bf	           0xf95c0	                                setne al	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047c2	        0x89442458	             mov dword [rsp + 0x58], eax	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047c6	      0xe9f5fbffff	                           jmp 0x40043c0	      3206	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047cb	       0xf1f440000	                   nop dword [rax + rax]	      3206	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40047d0	      0x49837d3000	               cmp qword [r13 + 0x30], 0	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x40047d5	     0xf85e5fbffff	                           jne 0x40043c0	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x40047db	    0x8b8424840000	            mov eax, dword [rsp + 0x84] 	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x40047e2	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x40047e5	     0xf86b5090000	                           jbe 0x40051a0	      1077	dwarf2.c	FUNCTION_20
0x40047eb	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x40047f0	     0xf85cafbffff	                           jne 0x40043c0	      1078	dwarf2.c	FUNCTION_20
0x40047f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1078	dwarf2.c	FUNCTION_20
0x4004800	        0x418b4e40	            mov ecx, dword [r14 + 0x40] 	      1078	dwarf2.c	FUNCTION_20
0x4004804	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x400480c	          0x83f91d	                           cmp ecx, 0x1d	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x400480f	        0x49894530	             mov qword [r13 + 0x30], rax	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4004813	     0xf87a7fbffff	                            ja 0x40043c0	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4004819	      0xb801000000	                              mov eax, 1	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x400481e	          0x48d3e0	                             shl rax, cl	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4004821	      0xa9eeb20420	                    test eax, 0x2004b2ee	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4004826	            0x7534	                           jne 0x400485c	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4004828	      0xe993fbffff	                           jmp 0x40043c0	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x400482d	           0xf1f00	                         nop dword [rax]	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x4004830	    0x8b8424840000	            mov eax, dword [rsp + 0x84] 	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x4004837	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x400483a	            0x7634	                           jbe 0x4004870	      1077	dwarf2.c	FUNCTION_20
0x400483c	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x4004841	     0xf8579fbffff	                           jne 0x40043c0	      1078	dwarf2.c	FUNCTION_20
0x4004847	    0x660f1f840000	                    nop word [rax + rax]	      1078	dwarf2.c	FUNCTION_20
0x4004850	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4004858	        0x49894530	             mov qword [r13 + 0x30], rax	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x400485c	    0x41c7452c0100	               mov dword [r13 + 0x2c], 1	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4004864	      0xe957fbffff	                           jmp 0x40043c0	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4004869	     0xf1f80000000	                         nop dword [rax]	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4004870	      0xbe00410080	                     mov esi, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x4004875	        0x480fa3c6	                             bt rsi, rax	      1078	dwarf2.c	FUNCTION_20
0x4004879	            0x72d5	                            jb 0x4004850	      1078	dwarf2.c	FUNCTION_20
0x400487b	      0xe940fbffff	                           jmp 0x40043c0	      1078	dwarf2.c	FUNCTION_20
0x4004880	        0x498b7e78	            mov rdi, qword [r14 + 0x78] 	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4004884	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x400488b	      0xe850bcffff	                call sym.concat_filename	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4004890	        0x49894510	             mov qword [r13 + 0x10], rax	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4004894	      0xe927fbffff	                           jmp 0x40043c0	      3161	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4004899	     0xf1f80000000	                         nop dword [rax]	      3161	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40048a0	        0x498d4524	                   lea rax, [r13 + 0x24]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048a4	          0x4c89e6	                            mov rsi, r12	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048a7	          0x4c89f7	                            mov rdi, r14	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048aa	              0x50	                                push rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048ab	        0x498d4518	                   lea rax, [r13 + 0x18]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048af	              0x50	                                push rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048b0	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048b5	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048ba	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048c2	    0x8b9424940000	            mov edx, dword [rsp + 0x94] 	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048c9	      0xe8a2e9ffff	 call sym.find_abstract_instance.isra.29	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048ce	            0x85c0	                           test eax, eax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048d0	              0x59	                                 pop rcx	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048d1	              0x5e	                                 pop rsi	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048d2	     0xf85e8faffff	                           jne 0x40043c0	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048d8	      0xe99bf9ffff	                           jmp 0x4004278	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048dd	           0xf1f00	                         nop dword [rax]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40048e0	          0x83f90a	                            cmp ecx, 0xa	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40048e3	     0xf8447030000	                            je 0x4004c30	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40048e9	     0xf8779feffff	                            ja 0x4004768	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40048ef	      0xbe10000000	                           mov esi, 0x10	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40048f4	          0x4c89cf	                             mov rdi, r9	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40048f7	      0x4c894c2450	              mov qword [rsp + 0x50], r9	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40048fc	      0xe800000000	                          call 0x4004901	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x4004901	          0x4885c0	                           test rax, rax	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4004904	      0x4889442448	             mov qword [rsp + 0x48], rax	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4004909	     0xf8469f9ffff	                            je 0x4004278	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x400490f	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4004914	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4004919	            0x31c9	                            xor ecx, ecx	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x400491b	          0x4c89e6	                            mov rsi, r12	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x400491e	          0x4d89f8	                             mov r8, r15	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4004921	          0x4c89cf	                             mov rdi, r9	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4004924	      0xe800000000	                          call 0x4004929	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4004929	        0x8b54247c	            mov edx, dword [rsp + 0x7c] 	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x400492d	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4004932	          0x418902	                    mov dword [r10], eax	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4004935	            0x89c0	                            mov eax, eax	       631	dwarf2.c	FUNCTION_11
0x4004937	          0x4c01e2	                            add rdx, r12	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x400493a	        0x4c8d2402	                    lea r12, [rdx + rax]	       631	dwarf2.c	FUNCTION_11
0x400493e	          0x4d39e7	                            cmp r15, r12	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004941	     0xf8289070000	                            jb 0x40050d0	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004947	          0x4c39e2	                            cmp rdx, r12	       633	dwarf2.c	FUNCTION_11	IF_1
0x400494a	          0x4889d0	                            mov rax, rdx	       633	dwarf2.c	FUNCTION_11	IF_1
0x400494d	     0xf877d070000	                            ja 0x40050d0	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004953	        0x49894208	                mov qword [r10 + 8], rax	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004957	    0x4c8994248800	             mov qword [rsp + 0x88], r10	      1192	dwarf2.c	FUNCTION_21	SWITCH_1
0x400495f	      0xe907fbffff	                           jmp 0x400446b	      1192	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004964	         0xf1f4000	                         nop dword [rax]	      1192	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004968	    0x81f9201f0000	                         cmp ecx, 0x1f20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400496e	     0xf840c020000	                            je 0x4004b80	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004974	    0x81f9211f0000	                         cmp ecx, 0x1f21	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400497a	     0xf8470030000	                            je 0x4004cf0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004980	          0x83f921	                           cmp ecx, 0x21	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004983	     0xf8447030000	                            je 0x4004cd0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004989	      0xba05000000	                              mov edx, 5	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x400498e	      0xbe00000000	                              mov esi, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4004993	      0xbf00000000	                              mov edi, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4004998	        0x894c2408	                mov dword [rsp + 8], ecx	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x400499c	      0xe800000000	                          call 0x40049a1	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40049a1	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40049a5	          0x4889c7	                            mov rdi, rax	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40049a8	            0x31c0	                            xor eax, eax	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40049aa	            0x89ce	                            mov esi, ecx	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40049ac	      0xe800000000	                          call 0x40049b1	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40049b1	      0xe94af9ffff	                           jmp 0x4004300	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40049b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40049c0	          0x83f901	                              cmp ecx, 1	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40049c3	     0xf84fa000000	                            je 0x4004ac3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40049c9	          0x83f903	                              cmp ecx, 3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40049cc	            0x75bb	                           jne 0x4004989	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40049ce	      0xbe10000000	                           mov esi, 0x10	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40049d3	          0x4c89cf	                             mov rdi, r9	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40049d6	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40049db	      0xe800000000	                          call 0x40049e0	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40049e0	          0x4885c0	                           test rax, rax	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x40049e3	          0x4889c2	                            mov rdx, rax	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40049e6	     0xf848cf8ffff	                            je 0x4004278	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x40049ec	      0x498d4c2402	                      lea rcx, [r12 + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x40049f1	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	       604	dwarf2.c	FUNCTION_8	IF_1
0x40049f6	          0x4939cf	                            cmp r15, rcx	       604	dwarf2.c	FUNCTION_8	IF_1
0x40049f9	     0xf8303080000	                           jae 0x4005202	       604	dwarf2.c	FUNCTION_8	IF_1
0x40049ff	    0xc70200000000	                      mov dword [rdx], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x4004a05	          0x4d89fc	                            mov r12, r15	       636	dwarf2.c	FUNCTION_11	IF_1
0x4004a08	            0x31c9	                            xor ecx, ecx	       635	dwarf2.c	FUNCTION_11	IF_1
0x4004a0a	        0x48894a08	                mov qword [rdx + 8], rcx	       635	dwarf2.c	FUNCTION_11	IF_1
0x4004a0e	    0x488994248800	             mov qword [rsp + 0x88], rdx	      1152	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a16	      0xe950faffff	                           jmp 0x400446b	      1152	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a1b	       0xf1f440000	                   nop dword [rax + rax]	      1152	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a20	          0x83f911	                           cmp ecx, 0x11	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a23	     0xf843ffdffff	                            je 0x4004768	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a29	          0x83f912	                           cmp ecx, 0x12	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a2c	     0xf8409faffff	                            je 0x400443b	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a32	      0xe952ffffff	                           jmp 0x4004989	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a37	    0x660f1f840000	                    nop word [rax + rax]	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004a40	      0x498d542404	                      lea rdx, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004a45	            0x31c0	                            xor eax, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004a47	          0x4939d7	                            cmp r15, rdx	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004a4a	     0xf8210faffff	                            jb 0x4004460	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004a50	        0x498b4108	                 mov rax, qword [r9 + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004a54	      0x4889542448	             mov qword [rsp + 0x48], rdx	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004a59	          0x4c89e7	                            mov rdi, r12	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004a5c	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004a5f	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004a64	            0x89c0	                            mov eax, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004a66	      0xe9f5f9ffff	                           jmp 0x4004460	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004a6b	       0xf1f440000	                   nop dword [rax + rax]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004a70	          0x4d89f8	                             mov r8, r15	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4004a73	            0x31c9	                            xor ecx, ecx	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4004a75	      0xe90cfbffff	                           jmp 0x4004586	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4004a7a	    0x660f1f440000	                    nop word [rax + rax]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4004a80	          0x83f83b	                           cmp eax, 0x3b	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004a83	     0xf8447040000	                            je 0x4004ed0	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004a89	          0x83f83f	                           cmp eax, 0x3f	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004a8c	     0xf852ef9ffff	                           jne 0x40043c0	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004a92	    0x4883bc248800	               cmp qword [rsp + 0x88], 0	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4004a9b	     0xf841ff9ffff	                            je 0x40043c0	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4004aa1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4004aa6	        0x806030fe	             and byte [rax + 0x30], 0xfe	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4004aaa	      0xe911f9ffff	                           jmp 0x40043c0	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4004aaf	              0x90	                                     nop	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4004ab0	    0x418b86a80000	            mov eax, dword [r14 + 0xa8] 	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4004ab7	          0x83e803	                              sub eax, 3	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4004aba	          0x83f801	                              cmp eax, 1	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4004abd	     0xf86bd000000	                           jbe 0x4004b80	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4004ac3	    0x410fb6b6ac00	           movzx esi, byte [r14 + 0xac] 	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4004acb	          0x4c89e2	                            mov rdx, r12	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4004ace	          0x4c89f9	                            mov rcx, r15	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4004ad1	          0x4c89cf	                             mov rdi, r9	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4004ad4	      0xe847c0ffff	           call sym.read_address.isra.28	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4004ad9	    0x488984248800	             mov qword [rsp + 0x88], rax	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4004ae1	    0x410fb686ac00	           movzx eax, byte [r14 + 0xac] 	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004ae9	          0x4901c4	                            add r12, rax	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004aec	      0xe97af9ffff	                           jmp 0x400446b	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004af1	     0xf1f80000000	                         nop dword [rax]	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004af8	    0x48bf08000020	              movabs rdi, 0x400020000008	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b02	        0x480fa3c7	                             bt rdi, rax	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b06	     0xf8319f8ffff	                           jae 0x4004325	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b0c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4004b11	      0xbe58000000	                           mov esi, 0x58	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4004b16	      0xe800000000	                          call 0x4004b1b	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4004b1b	          0x4885c0	                           test rax, rax	      3109	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x4004b1e	          0x4989c5	                            mov r13, rax	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4004b21	     0xf8451f7ffff	                            je 0x4004278	      3109	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x4004b27	          0x8b4304	                mov eax, dword [rbx + 4]	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b2a	    0x498b96800000	            mov rdx, qword [r14 + 0x80] 	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b31	    0x458b86b80000	            mov r8d, dword [r14 + 0xb8] 	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4004b38	        0x41894528	             mov dword [r13 + 0x28], eax	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b3c	        0x49895500	                    mov qword [r13], rdx	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b40	    0x498386900000	               add qword [r14 + 0x90], 1	      3114	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b48	          0x4585c0	                           test r8d, r8d	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4004b4b	    0x4d89ae800000	             mov qword [r14 + 0x80], r13	      3113	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b52	     0xf8589050000	                           jne 0x40050e1	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4004b58	          0x83f81d	                           cmp eax, 0x1d	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x4004b5b	     0xf8498050000	                            je 0x40050f9	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x4004b61	      0x4863442424	         movsxd rax, dword [rsp + 0x24] 	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b66	        0x488b3c24	                    mov rdi, qword [rsp]	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b6a	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3102	dwarf2.c	FUNCTION_45	WHILE_1
0x4004b73	        0x4c892cc7	            mov qword [rdi + rax*8], r13	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b77	      0xe9c6f7ffff	                           jmp 0x4004342	      3106	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b7c	         0xf1f4000	                         nop dword [rax]	      3106	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4004b80	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4004b88	          0x80fa04	                               cmp dl, 4	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4004b8b	     0xf8427060000	                            je 0x40051b8	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4004b91	      0x498d4c2408	                      lea rcx, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004b96	            0x31c0	                            xor eax, eax	       621	dwarf2.c	FUNCTION_10	IF_1
0x4004b98	          0x4939cf	                            cmp r15, rcx	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004b9b	     0xf834a060000	                           jae 0x40051eb	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004ba1	    0x488984248800	             mov qword [rsp + 0x88], rax	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4004ba9	          0x4901d4	                            add r12, rdx	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004bac	      0xe9baf8ffff	                           jmp 0x400446b	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004bb1	     0xf1f80000000	                         nop dword [rax]	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004bb8	      0xbe10000000	                           mov esi, 0x10	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4004bbd	          0x4c89cf	                             mov rdi, r9	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4004bc0	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4004bc5	      0xe800000000	                          call 0x4004bca	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4004bca	          0x4885c0	                           test rax, rax	      1147	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x4004bcd	          0x4889c2	                            mov rdx, rax	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4004bd0	     0xf84a2f6ffff	                            je 0x4004278	      1147	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x4004bd6	      0x498d4c2404	                      lea rcx, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004bdb	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004be0	          0x4939cf	                            cmp r15, rcx	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004be3	     0xf8216feffff	                            jb 0x40049ff	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004be9	      0x4889442448	             mov qword [rsp + 0x48], rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4004bee	        0x498b4108	                 mov rax, qword [r9 + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004bf2	          0x4c89e7	                            mov rdi, r12	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004bf5	      0x48894c2450	             mov qword [rsp + 0x50], rcx	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004bfa	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4004bfd	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	       631	dwarf2.c	FUNCTION_11
0x4004c02	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4004c07	          0x4189c4	                           mov r12d, eax	       631	dwarf2.c	FUNCTION_11
0x4004c0a	          0x4901cc	                            add r12, rcx	       631	dwarf2.c	FUNCTION_11
0x4004c0d	            0x8902	                    mov dword [rdx], eax	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4004c0f	          0x4d39e7	                            cmp r15, r12	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c12	     0xf82e7fdffff	                            jb 0x40049ff	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c18	          0x4c39e1	                            cmp rcx, r12	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c1b	     0xf86e9fdffff	                           jbe 0x4004a0a	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c21	      0xe9d9fdffff	                           jmp 0x40049ff	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c30	      0xbe10000000	                           mov esi, 0x10	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4004c35	          0x4c89cf	                             mov rdi, r9	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4004c38	      0xe800000000	                          call 0x4004c3d	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4004c3d	          0x4885c0	                           test rax, rax	      1197	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x4004c40	     0xf8432f6ffff	                            je 0x4004278	      1197	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x4004c46	      0x498d542401	                      lea rdx, [r12 + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004c4b	          0x4939d7	                            cmp r15, rdx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004c4e	     0xf823c040000	                            jb 0x4005090	       588	dwarf2.c	FUNCTION_6	IF_1
0x4004c54	      0x410fb63424	                   movzx esi, byte [r12]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4004c59	        0x440fb6e6	                         movzx r12d, sil	       631	dwarf2.c	FUNCTION_11
0x4004c5d	            0x8930	                    mov dword [rax], esi	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x4004c5f	          0x4901d4	                            add r12, rdx	       631	dwarf2.c	FUNCTION_11
0x4004c62	          0x4d39e7	                            cmp r15, r12	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c65	     0xf8225040000	                            jb 0x4005090	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c6b	          0x4c39e2	                            cmp rdx, r12	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c6e	     0xf871c040000	                            ja 0x4005090	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c74	        0x48895008	                mov qword [rax + 8], rdx	       633	dwarf2.c	FUNCTION_11	IF_1
0x4004c78	    0x488984248800	             mov qword [rsp + 0x88], rax	      1202	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004c80	      0xe9e6f7ffff	                           jmp 0x400446b	      1202	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004c85	           0xf1f00	                         nop dword [rax]	      1202	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004c88	    0x48c784248800	               mov qword [rsp + 0x88], 1	      1213	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004c94	      0xe9d2f7ffff	                           jmp 0x400446b	      1213	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004c99	     0xf1f80000000	                         nop dword [rax]	      1213	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004ca0	          0x4d39e7	                            cmp r15, r12	       660	dwarf2.c	FUNCTION_12	IF_1
0x4004ca3	     0xf86d7030000	                           jbe 0x4005080	       660	dwarf2.c	FUNCTION_12	IF_1
0x4004ca9	      0x41803c2400	                       cmp byte [r12], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4004cae	     0xf8567050000	                           jne 0x400521b	       666	dwarf2.c	FUNCTION_12	IF_2
0x4004cb4	      0xb801000000	                              mov eax, 1	       666	dwarf2.c	FUNCTION_12	IF_2
0x4004cb9	            0x31d2	                            xor edx, edx	       669	dwarf2.c	FUNCTION_12	IF_2
0x4004cbb	    0x488994248800	             mov qword [rsp + 0x88], rdx	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x4004cc3	          0x4901c4	                            add r12, rax	      1168	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004cc6	      0xe9a0f7ffff	                           jmp 0x400446b	      1168	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004ccb	       0xf1f440000	                   nop dword [rax + rax]	      1168	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004cd0	    0xc78424840000	            mov dword [rsp + 0x84], 0xd 	      1264	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004cdb	    0x4c8994248800	             mov qword [rsp + 0x88], r10	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004ce3	      0xe983f7ffff	                           jmp 0x400446b	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004ce8	     0xf1f84000000	                   nop dword [rax + rax]	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004cf0	    0x410fb686ad00	           movzx eax, byte [r14 + 0xad] 	       780	dwarf2.c	FUNCTION_15	IF_1
0x4004cf8	    0x4d8b9ea00000	            mov r11, qword [r14 + 0xa0] 	       777	dwarf2.c	FUNCTION_15
0x4004cff	          0x4889c2	                            mov rdx, rax	       780	dwarf2.c	FUNCTION_15	IF_1
0x4004d02	          0x4c01e0	                            add rax, r12	       780	dwarf2.c	FUNCTION_15	IF_1
0x4004d05	          0x4939c7	                            cmp r15, rax	       780	dwarf2.c	FUNCTION_15	IF_1
0x4004d08	     0xf82d3040000	                            jb 0x40051e1	       780	dwarf2.c	FUNCTION_15	IF_1
0x4004d0e	          0x80fa04	                               cmp dl, 4	       786	dwarf2.c	FUNCTION_15	IF_2
0x4004d11	     0xf84a9050000	                            je 0x40052c0	       786	dwarf2.c	FUNCTION_15	IF_2
0x4004d17	      0x498d442408	                      lea rax, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004d1c	          0x4531d2	                          xor r10d, r10d	       621	dwarf2.c	FUNCTION_10	IF_1
0x4004d1f	          0x4939c7	                            cmp r15, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004d22	     0xf8354040000	                           jae 0x400517c	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004d28	      0x49837b4800	               cmp qword [r11 + 0x48], 0	       793	dwarf2.c	FUNCTION_15	IF_3
0x4004d2d	        0x8954247c	             mov dword [rsp + 0x7c], edx	       791	dwarf2.c	FUNCTION_15
0x4004d31	     0xf84ef050000	                            je 0x4005326	       793	dwarf2.c	FUNCTION_15	IF_3
0x4004d37	        0x498b4310	            mov rax, qword [r11 + 0x10] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d3b	        0x4d8d4b58	                    lea r9, [r11 + 0x58]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d3f	        0x4d8d4350	                    lea r8, [r11 + 0x50]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d43	          0x4c89d1	                            mov rcx, r10	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d46	            0x31d2	                            xor edx, edx	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d48	      0x4c895c2450	             mov qword [rsp + 0x50], r11	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d4d	      0x4c89542448	             mov qword [rsp + 0x48], r10	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d52	    0x488db0f00000	                   lea rsi, [rax + 0xf0]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d59	    0x498b86a00000	            mov rax, qword [r14 + 0xa0] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d60	        0x488b7848	            mov rdi, qword [rax + 0x48] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d64	      0xe8d7b2ffff	                   call sym.read_section	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d69	            0x85c0	                           test eax, eax	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d6b	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d70	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d75	            0x7419	                            je 0x4004d90	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4004d77	        0x4d3b5358	            cmp r10, qword [r11 + 0x58] 	       822	dwarf2.c	FUNCTION_15	IF_8
0x4004d7b	            0x7313	                           jae 0x4004d90	       822	dwarf2.c	FUNCTION_15	IF_8
0x4004d7d	        0x4d035350	             add r10, qword [r11 + 0x50]	       824	dwarf2.c	FUNCTION_15
0x4004d81	        0x41803a00	                       cmp byte [r10], 0	       825	dwarf2.c	FUNCTION_15	IF_9
0x4004d85	     0xf85eaf8ffff	                           jne 0x4004675	       825	dwarf2.c	FUNCTION_15	IF_9
0x4004d8b	       0xf1f440000	                   nop dword [rax + rax]	       825	dwarf2.c	FUNCTION_15	IF_9
0x4004d90	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	       825	dwarf2.c	FUNCTION_15	IF_9
0x4004d94	          0x4531d2	                          xor r10d, r10d	       820	dwarf2.c	FUNCTION_15	IF_7
0x4004d97	      0xe9ddf8ffff	                           jmp 0x4004679	       820	dwarf2.c	FUNCTION_15	IF_7
0x4004d9c	         0xf1f4000	                         nop dword [rax]	       820	dwarf2.c	FUNCTION_15	IF_7
0x4004da0	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004da5	            0x31c9	                            xor ecx, ecx	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004da7	          0x4c89e6	                            mov rsi, r12	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004daa	          0x4c89cf	                             mov rdi, r9	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004dad	          0x4d89f8	                             mov r8, r15	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004db0	      0x4c89542450	             mov qword [rsp + 0x50], r10	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004db5	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004dba	      0xe800000000	                          call 0x4004dbf	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004dbf	          0x4989c3	                            mov r11, rax	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4004dc2	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004dc6	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4004dcb	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4004dd0	          0x4901c4	                            add r12, rax	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x4004dd3	        0x4183fb21	                          cmp r11d, 0x21	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4004dd7	     0xf8418050000	                            je 0x40052f5	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4004ddd	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004de5	          0x4d89e0	                             mov r8, r12	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004de8	          0x4d89f9	                             mov r9, r15	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004deb	          0x4c89f1	                            mov rcx, r14	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004dee	          0x4c89d2	                            mov rdx, r10	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004df1	          0x4489de	                           mov esi, r11d	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004df4	      0xe8b7c2ffff	           call sym.read_attribute_value	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004df9	          0x4989c4	                            mov r12, rax	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004dfc	      0xe96af6ffff	                           jmp 0x400446b	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004e01	     0xf1f80000000	                         nop dword [rax]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4004e08	    0x410fb686ad00	           movzx eax, byte [r14 + 0xad] 	       701	dwarf2.c	FUNCTION_13	IF_1
0x4004e10	    0x4d8b9ea00000	            mov r11, qword [r14 + 0xa0] 	       698	dwarf2.c	FUNCTION_13
0x4004e17	          0x4889c2	                            mov rdx, rax	       701	dwarf2.c	FUNCTION_13	IF_1
0x4004e1a	          0x4c01e0	                            add rax, r12	       701	dwarf2.c	FUNCTION_13	IF_1
0x4004e1d	          0x4939c7	                            cmp r15, rax	       701	dwarf2.c	FUNCTION_13	IF_1
0x4004e20	     0xf82bb030000	                            jb 0x40051e1	       701	dwarf2.c	FUNCTION_13	IF_1
0x4004e26	          0x80fa04	                               cmp dl, 4	       707	dwarf2.c	FUNCTION_13	IF_2
0x4004e29	     0xf8455040000	                            je 0x4005284	       707	dwarf2.c	FUNCTION_13	IF_2
0x4004e2f	      0x498d442408	                      lea rax, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004e34	          0x4531d2	                          xor r10d, r10d	       621	dwarf2.c	FUNCTION_10	IF_1
0x4004e37	          0x4c89cf	                             mov rdi, r9	      1093	dwarf2.c	FUNCTION_21
0x4004e3a	          0x4939c7	                            cmp r15, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004e3d	     0xf83e9020000	                           jae 0x400512c	       620	dwarf2.c	FUNCTION_10	IF_1
0x4004e43	        0x498b4310	            mov rax, qword [r11 + 0x10] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e47	        0x8954247c	             mov dword [rsp + 0x7c], edx	       712	dwarf2.c	FUNCTION_13
0x4004e4b	    0x4d8d8ba80000	                    lea r9, [r11 + 0xa8]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e52	        0x498b5378	            mov rdx, qword [r11 + 0x78] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e56	    0x4d8d83a00000	                    lea r8, [r11 + 0xa0]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e5d	          0x4c89d1	                            mov rcx, r10	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e60	      0x4c895c2450	             mov qword [rsp + 0x50], r11	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e65	      0x4c89542448	             mov qword [rsp + 0x48], r10	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e6a	    0x488db0e00000	                   lea rsi, [rax + 0xe0]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e71	      0xe8cab1ffff	                   call sym.read_section	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e76	            0x85c0	                           test eax, eax	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e78	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e7d	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e82	     0xf8408ffffff	                            je 0x4004d90	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4004e88	    0x4d3b93a80000	            cmp r10, qword [r11 + 0xa8] 	       719	dwarf2.c	FUNCTION_13	IF_4
0x4004e8f	     0xf83fbfeffff	                           jae 0x4004d90	       719	dwarf2.c	FUNCTION_13	IF_4
0x4004e95	    0x4d0393a00000	             add r10, qword [r11 + 0xa0]	       721	dwarf2.c	FUNCTION_13
0x4004e9c	        0x41803a00	                       cmp byte [r10], 0	       722	dwarf2.c	FUNCTION_13	IF_5
0x4004ea0	     0xf85cff7ffff	                           jne 0x4004675	       722	dwarf2.c	FUNCTION_13	IF_5
0x4004ea6	      0xe9e5feffff	                           jmp 0x4004d90	       722	dwarf2.c	FUNCTION_13	IF_5
0x4004eab	       0xf1f440000	                   nop dword [rax + rax]	       722	dwarf2.c	FUNCTION_13	IF_5
0x4004eb0	        0x498b7e78	            mov rdi, qword [r14 + 0x78] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4004eb4	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4004ebb	      0xe820b6ffff	                call sym.concat_filename	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4004ec0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4004ec5	        0x48894708	                mov qword [rdi + 8], rax	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4004ec9	      0xe9f2f4ffff	                           jmp 0x40043c0	      3238	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004ece	            0x6690	                                     nop	      3238	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004ed0	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004ed8	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004edd	          0x894610	             mov dword [rsi + 0x10], eax	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004ee0	      0xe9dbf4ffff	                           jmp 0x40043c0	      3242	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004ee5	           0xf1f00	                         nop dword [rax]	      3242	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4004ee8	    0x8b8c24840000	            mov ecx, dword [rsp + 0x84] 	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4004eef	          0x83f918	                           cmp ecx, 0x18	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4004ef2	     0xf87c8f4ffff	                            ja 0x40043c0	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4004ef8	      0xb801000000	                              mov eax, 1	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4004efd	          0x48d3e0	                             shl rax, cl	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4004f00	      0xa918060001	                     test eax, 0x1000618	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4004f05	     0xf84b5f4ffff	                            je 0x40043c0	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4004f0b	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4004f13	        0x488b4208	                mov rax, qword [rdx + 8]	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4004f17	          0x4885c0	                           test rax, rax	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4004f1a	     0xf84a0f4ffff	                            je 0x40043c0	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4004f20	          0x803803	                       cmp byte [rax], 3	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4004f23	     0xf8597f4ffff	                           jne 0x40043c0	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4004f29	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4004f2e	        0x806730fe	             and byte [rdi + 0x30], 0xfe	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4004f32	    0x410fb68eac00	           movzx ecx, byte [r14 + 0xac] 	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4004f3a	          0x8d7101	                      lea esi, [rcx + 1]	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4004f3d	            0x3932	                    cmp dword [rdx], esi	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4004f3f	     0xf857bf4ffff	                           jne 0x40043c0	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4004f45	    0x8d14cd000000	                        lea edx, [rcx*8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f4c	          0x83fa08	                              cmp edx, 8	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f4f	     0xf8422050000	                            je 0x4005477	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f55	          0x83fa10	                           cmp edx, 0x10	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f58	     0xf8422050000	                            je 0x4005480	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f5e	          0x83fa20	                           cmp edx, 0x20	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f61	     0xf8446050000	                            je 0x40054ad	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f67	          0x83fa40	                           cmp edx, 0x40	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f6a	     0xf8529050000	                           jne 0x4005499	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f70	        0x488d7801	                      lea rdi, [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f74	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f78	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f7c	          0xff5020	                 call qword [rax + 0x20]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f7f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f84	        0x48894720	             mov qword [rdi + 0x20], rax	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f88	      0xe933f4ffff	                           jmp 0x40043c0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4004f8d	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4004f91	      0xbe18000000	                           mov esi, 0x18	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4004f96	      0xe800000000	                          call 0x4004f9b	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4004f9b	          0x4885c0	                           test rax, rax	      1669	dwarf2.c	FUNCTION_27	IF_5
0x4004f9e	     0xf84d4f2ffff	                            je 0x4004278	      1669	dwarf2.c	FUNCTION_27	IF_5
0x4004fa4	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1671	dwarf2.c	FUNCTION_27
0x4004fa9	        0x498b5538	            mov rdx, qword [r13 + 0x38] 	      1673	dwarf2.c	FUNCTION_27
0x4004fad	        0x48897808	                mov qword [rax + 8], rdi	      1671	dwarf2.c	FUNCTION_27
0x4004fb1	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1672	dwarf2.c	FUNCTION_27
0x4004fb6	          0x488910	                    mov qword [rax], rdx	      1673	dwarf2.c	FUNCTION_27
0x4004fb9	        0x48897810	             mov qword [rax + 0x10], rdi	      1672	dwarf2.c	FUNCTION_27
0x4004fbd	        0x49894538	             mov qword [r13 + 0x38], rax	      1674	dwarf2.c	FUNCTION_27
0x4004fc1	     0xf1f80000000	                         nop dword [rax]	      1674	dwarf2.c	FUNCTION_27
0x4004fc8	          0x8b4308	                mov eax, dword [rbx + 8]	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004fcb	            0x85c0	                           test eax, eax	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004fcd	     0xf8499f2ffff	                            je 0x400426c	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004fd3	      0x8344242401	               add dword [rsp + 0x24], 1	      3297	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004fd8	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3297	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004fdc	        0x3b44245c	            cmp eax, dword [rsp + 0x5c] 	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4004fe0	     0xf8d0a040000	                           jge 0x40053f0	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4004fe6	      0x4863442424	         movsxd rax, dword [rsp + 0x24] 	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004feb	        0x488b3c24	                    mov rdi, qword [rsp]	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004fef	    0x48c704c70000	              mov qword [rdi + rax*8], 0	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004ff7	      0xe970f2ffff	                           jmp 0x400426c	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4004ffc	         0xf1f4000	                         nop dword [rax]	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4005000	        0x8b542458	            mov edx, dword [rsp + 0x58] 	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005004	            0x85d2	                           test edx, edx	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005006	     0xf84a4000000	                            je 0x40050b0	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x400500c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005011	      0x48017c2430	            add qword [rsp + 0x30], rdi 	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005016	           0xf95c2	                                setne dl	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005019	          0x4d85ed	                           test r13, r13	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x400501c	           0xf95c0	                                setne al	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x400501f	            0x21d0	                            and eax, edx	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4005021	            0x84c0	                             test al, al	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4005023	            0x74a3	                            je 0x4004fc8	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4005025	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1637	dwarf2.c	FUNCTION_27	IF_1
0x400502a	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1637	dwarf2.c	FUNCTION_27	IF_1
0x400502f	          0x4839f1	                            cmp rcx, rsi	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4005032	            0x7494	                            je 0x4004fc8	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4005034	        0x498b5548	            mov rdx, qword [r13 + 0x48] 	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4005038	        0x498d4538	                   lea rax, [r13 + 0x38]	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x400503c	          0x4885d2	                           test rdx, rdx	      1641	dwarf2.c	FUNCTION_27	IF_2
0x400503f	            0x7529	                           jne 0x400506a	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4005041	      0xe9db030000	                           jmp 0x4005421	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4005046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4005050	        0x483b7008	                cmp rsi, qword [rax + 8]	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4005054	     0xf84ec030000	                            je 0x4005446	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x400505a	          0x488b00	                    mov rax, qword [rax]	      1662	dwarf2.c	FUNCTION_27	DO_1
0x400505d	          0x4885c0	                           test rax, rax	      1664	dwarf2.c	FUNCTION_27
0x4005060	     0xf8427ffffff	                            je 0x4004f8d	      1664	dwarf2.c	FUNCTION_27
0x4005066	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1664	dwarf2.c	FUNCTION_27
0x400506a	          0x4839d1	                            cmp rcx, rdx	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x400506d	            0x75e1	                           jne 0x4005050	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x400506f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4005074	        0x48897810	             mov qword [rax + 0x10], rdi	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4005078	      0xe94bffffff	                           jmp 0x4004fc8	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x400507d	           0xf1f00	                         nop dword [rax]	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4005080	            0x31c0	                            xor eax, eax	       660	dwarf2.c	FUNCTION_12	IF_1
0x4005082	            0x31d2	                            xor edx, edx	       663	dwarf2.c	FUNCTION_12	IF_1
0x4005084	      0xe932fcffff	                           jmp 0x4004cbb	       663	dwarf2.c	FUNCTION_12	IF_1
0x4005089	     0xf1f80000000	                         nop dword [rax]	       663	dwarf2.c	FUNCTION_12	IF_1
0x4005090	    0xc70000000000	                      mov dword [rax], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x4005096	          0x4d89fc	                            mov r12, r15	       636	dwarf2.c	FUNCTION_11	IF_1
0x4005099	            0x31d2	                            xor edx, edx	       635	dwarf2.c	FUNCTION_11	IF_1
0x400509b	      0xe9d4fbffff	                           jmp 0x4004c74	       635	dwarf2.c	FUNCTION_11	IF_1
0x40050a0	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x40050a5	     0xf8515f3ffff	                           jne 0x40043c0	      1078	dwarf2.c	FUNCTION_20
0x40050ab	      0xe933f6ffff	                           jmp 0x40046e3	      1078	dwarf2.c	FUNCTION_20
0x40050b0	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      1078	dwarf2.c	FUNCTION_20
0x40050b6	           0xf95c2	                                setne dl	      1078	dwarf2.c	FUNCTION_20
0x40050b9	          0x4d85ed	                           test r13, r13	      1078	dwarf2.c	FUNCTION_20
0x40050bc	           0xf95c0	                                setne al	      1078	dwarf2.c	FUNCTION_20
0x40050bf	            0x21d0	                            and eax, edx	      1078	dwarf2.c	FUNCTION_20
0x40050c1	      0xe95bffffff	                           jmp 0x4005021	      1078	dwarf2.c	FUNCTION_20
0x40050c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1078	dwarf2.c	FUNCTION_20
0x40050d0	    0x41c702000000	                      mov dword [r10], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x40050d7	          0x4d89fc	                            mov r12, r15	       636	dwarf2.c	FUNCTION_11	IF_1
0x40050da	            0x31c0	                            xor eax, eax	       635	dwarf2.c	FUNCTION_11	IF_1
0x40050dc	      0xe972f8ffff	                           jmp 0x4004953	       635	dwarf2.c	FUNCTION_11	IF_1
0x40050e1	      0xbe2b0c0000	                          mov esi, 0xc2b	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x40050e6	      0xbf00000000	                              mov edi, 0	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x40050eb	      0xe800000000	                          call 0x40050f0	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x40050f0	        0x418b4528	            mov eax, dword [r13 + 0x28] 	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x40050f4	      0xe95ffaffff	                           jmp 0x4004b58	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x40050f9	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x40050fd	        0x488b0c24	                    mov rcx, qword [rsp]	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4005101	          0x83e801	                              sub eax, 1	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4005104	            0xeb1c	                           jmp 0x4005122	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4005106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4005110	            0x89c2	                            mov edx, eax	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005112	          0x83e801	                              sub eax, 1	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005115	        0x488b14d1	            mov rdx, qword [rcx + rdx*8]	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005119	          0x4885d2	                           test rdx, rdx	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x400511c	     0xf85f6020000	                           jne 0x4005418	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005122	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4005125	            0x75e9	                           jne 0x4005110	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4005127	      0xe935faffff	                           jmp 0x4004b61	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x400512c	        0x498b4108	                 mov rax, qword [r9 + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005130	      0x4c895c2448	             mov qword [rsp + 0x48], r11	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005135	          0x4c89e7	                            mov rdi, r12	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005138	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400513b	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005143	          0x4989c2	                            mov r10, rax	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005146	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400514a	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400514f	      0xe9effcffff	                           jmp 0x4004e43	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005154	        0x498b4108	                 mov rax, qword [r9 + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005158	      0x4c895c2448	             mov qword [rsp + 0x48], r11	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400515d	          0x4c89e7	                            mov rdi, r12	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005160	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005163	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400516b	          0x4989c2	                            mov r10, rax	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400516e	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005172	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005177	      0xe996f4ffff	                           jmp 0x4004612	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400517c	        0x498b4108	                 mov rax, qword [r9 + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005180	      0x4c895c2448	             mov qword [rsp + 0x48], r11	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005185	          0x4c89e7	                            mov rdi, r12	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005188	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400518b	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005193	          0x4989c2	                            mov r10, rax	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005196	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400519b	      0xe988fbffff	                           jmp 0x4004d28	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40051a0	      0xbf00410080	                     mov edi, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x40051a5	        0x480fa3c7	                             bt rdi, rax	      1078	dwarf2.c	FUNCTION_20
0x40051a9	     0xf8251f6ffff	                            jb 0x4004800	      1078	dwarf2.c	FUNCTION_20
0x40051af	      0xe90cf2ffff	                           jmp 0x40043c0	      1078	dwarf2.c	FUNCTION_20
0x40051b4	         0xf1f4000	                         nop dword [rax]	      1078	dwarf2.c	FUNCTION_20
0x40051b8	      0x498d4c2404	                      lea rcx, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40051bd	            0x31c0	                            xor eax, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x40051bf	          0x4939cf	                            cmp r15, rcx	       612	dwarf2.c	FUNCTION_9	IF_1
0x40051c2	     0xf82d9f9ffff	                            jb 0x4004ba1	       612	dwarf2.c	FUNCTION_9	IF_1
0x40051c8	        0x498b4108	                 mov rax, qword [r9 + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40051cc	          0x4c89e7	                            mov rdi, r12	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40051cf	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40051d2	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40051da	            0x89c0	                            mov eax, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40051dc	      0xe9c0f9ffff	                           jmp 0x4004ba1	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40051e1	            0x31c0	                            xor eax, eax	       780	dwarf2.c	FUNCTION_15	IF_1
0x40051e3	          0x4531d2	                          xor r10d, r10d	       783	dwarf2.c	FUNCTION_15	IF_1
0x40051e6	      0xe98ef4ffff	                           jmp 0x4004679	       783	dwarf2.c	FUNCTION_15	IF_1
0x40051eb	        0x498b4108	                 mov rax, qword [r9 + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40051ef	          0x4c89e7	                            mov rdi, r12	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40051f2	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40051f5	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40051fd	      0xe99ff9ffff	                           jmp 0x4004ba1	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005202	      0x4889442448	             mov qword [rsp + 0x48], rax	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4005207	        0x498b4108	                 mov rax, qword [r9 + 8]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400520b	          0x4c89e7	                            mov rdi, r12	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400520e	      0x48894c2450	             mov qword [rsp + 0x50], rcx	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4005213	          0xff5050	                 call qword [rax + 0x50]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4005216	      0xe9e2f9ffff	                           jmp 0x4004bfd	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400521b	      0x498d442401	                      lea rax, [r12 + 1]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4005220	            0xeb14	                           jmp 0x4005236	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4005222	    0x660f1f440000	                    nop word [rax + rax]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4005228	        0x4883c001	                              add rax, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x400522c	        0x8078ff00	                   cmp byte [rax - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4005230	     0xf846f010000	                            je 0x40053a5	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4005236	          0x4939c7	                            cmp r15, rax	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4005239	            0x75ed	                           jne 0x4005228	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x400523b	          0x4489f8	                           mov eax, r15d	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x400523e	            0x31d2	                            xor edx, edx	       680	dwarf2.c	FUNCTION_12
0x4005240	          0x4429e0	                           sub eax, r12d	       680	dwarf2.c	FUNCTION_12
0x4005243	      0xe973faffff	                           jmp 0x4004cbb	       680	dwarf2.c	FUNCTION_12
0x4005248	      0x498d442404	                      lea rax, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x400524d	          0x4531d2	                          xor r10d, r10d	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005250	          0x4c89cf	                             mov rdi, r9	      1093	dwarf2.c	FUNCTION_21
0x4005253	          0x4939c7	                            cmp r15, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005256	     0xf82b6f3ffff	                            jb 0x4004612	       612	dwarf2.c	FUNCTION_9	IF_1
0x400525c	        0x498b4108	                 mov rax, qword [r9 + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4005260	      0x4c895c2448	             mov qword [rsp + 0x48], r11	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4005265	          0x4c89e7	                            mov rdi, r12	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4005268	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400526b	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4005273	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4005277	          0x4189c2	                           mov r10d, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400527a	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400527f	      0xe98ef3ffff	                           jmp 0x4004612	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4005284	      0x498d442404	                      lea rax, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005289	          0x4531d2	                          xor r10d, r10d	       612	dwarf2.c	FUNCTION_9	IF_1
0x400528c	          0x4c89cf	                             mov rdi, r9	      1093	dwarf2.c	FUNCTION_21
0x400528f	          0x4939c7	                            cmp r15, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005292	     0xf82abfbffff	                            jb 0x4004e43	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005298	        0x498b4108	                 mov rax, qword [r9 + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400529c	      0x4c895c2448	             mov qword [rsp + 0x48], r11	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052a1	          0x4c89e7	                            mov rdi, r12	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052a4	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052a7	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052af	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052b3	          0x4189c2	                           mov r10d, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052b6	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052bb	      0xe983fbffff	                           jmp 0x4004e43	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052c0	      0x498d442404	                      lea rax, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40052c5	          0x4531d2	                          xor r10d, r10d	       612	dwarf2.c	FUNCTION_9	IF_1
0x40052c8	          0x4939c7	                            cmp r15, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x40052cb	     0xf8257faffff	                            jb 0x4004d28	       612	dwarf2.c	FUNCTION_9	IF_1
0x40052d1	        0x498b4108	                 mov rax, qword [r9 + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052d5	      0x4c895c2448	             mov qword [rsp + 0x48], r11	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052da	          0x4c89e7	                            mov rdi, r12	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052dd	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052e0	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052e8	          0x4189c2	                           mov r10d, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052eb	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052f0	      0xe933faffff	                           jmp 0x4004d28	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40052f5	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40052fa	          0x4c89e6	                            mov rsi, r12	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40052fd	          0x4d89f8	                             mov r8, r15	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4005300	      0xb901000000	                              mov ecx, 1	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4005305	          0x4c89cf	                             mov rdi, r9	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4005308	      0x4c895c2448	             mov qword [rsp + 0x48], r11	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x400530d	      0xe800000000	                          call 0x4005312	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4005312	          0x4989c2	                            mov r10, rax	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4005315	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4005319	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400531e	          0x4901c4	                            add r12, rax	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4005321	      0xe9b7faffff	                           jmp 0x4004ddd	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4005326	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x400532a	      0xbe00000000	                              mov esi, 0	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x400532f	      0x4c89542460	             mov qword [rsp + 0x60], r10	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x4005334	      0x4c895c2450	             mov qword [rsp + 0x50], r11	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x4005339	      0xe800000000	                          call 0x400533e	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x400533e	          0x4885c0	                           test rax, rax	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x4005341	      0x4889442448	             mov qword [rsp + 0x48], rax	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x4005346	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x400534b	      0x4c8b542460	            mov r10, qword [rsp + 0x60] 	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x4005350	     0xf843afaffff	                            je 0x4004d90	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x4005356	            0x31f6	                            xor esi, esi	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x4005358	          0x4889c7	                            mov rdi, rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x400535b	      0x4c89542468	             mov qword [rsp + 0x68], r10	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x4005360	      0x4c895c2460	             mov qword [rsp + 0x60], r11	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x4005365	      0xe800000000	                          call 0x400536a	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x400536a	          0x4885c0	                           test rax, rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x400536d	     0xf84e9000000	                            je 0x400545c	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x4005373	      0xbe01000000	                              mov esi, 1	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4005378	          0x4889c7	                            mov rdi, rax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x400537b	      0x4889442450	             mov qword [rsp + 0x50], rax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4005380	      0xe800000000	                          call 0x4005385	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4005385	            0x85c0	                           test eax, eax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4005387	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x400538c	      0x4c8b5c2460	            mov r11, qword [rsp + 0x60] 	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4005391	      0x4c8b542468	            mov r10, qword [rsp + 0x68] 	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4005396	     0xf84b8000000	                            je 0x4005454	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x400539c	        0x49895348	             mov qword [r11 + 0x48], rdx	       811	dwarf2.c	FUNCTION_15	IF_3
0x40053a0	      0xe992f9ffff	                           jmp 0x4004d37	       811	dwarf2.c	FUNCTION_15	IF_3
0x40053a5	          0x4429e0	                           sub eax, r12d	       811	dwarf2.c	FUNCTION_15	IF_3
0x40053a8	          0x4c89e2	                            mov rdx, r12	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40053ab	      0xe90bf9ffff	                           jmp 0x4004cbb	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40053b0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40053b5	      0xbe38000000	                           mov esi, 0x38	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40053ba	      0xe800000000	                          call 0x40053bf	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40053bf	          0x4885c0	                           test rax, rax	      3133	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x40053c2	          0x4889c6	                            mov rsi, rax	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40053c5	      0x4889442410	             mov qword [rsp + 0x10], rax	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40053ca	     0xf84a8eeffff	                            je 0x4004278	      3133	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x40053d0	          0x8b4304	                mov eax, dword [rbx + 4]	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40053d3	        0x804e3001	                 or byte [rsi + 0x30], 1	      3136	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40053d7	          0x894614	             mov dword [rsi + 0x14], eax	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40053da	    0x498b86980000	            mov rax, qword [r14 + 0x98] 	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40053e1	          0x488906	                    mov qword [rsi], rax	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40053e4	    0x4989b6980000	             mov qword [r14 + 0x98], rsi	      3138	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40053eb	      0xe93eefffff	                           jmp 0x400432e	      3138	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40053f0	        0xd164245c	               shl dword [rsp + 0x5c], 1	      3303	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x40053f4	        0x488b3c24	                    mov rdi, qword [rsp]	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x40053f8	      0x486374245c	         movsxd rsi, dword [rsp + 0x5c] 	      3303	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x40053fd	        0x48c1e603	                              shl rsi, 3	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005401	      0xe800000000	                          call 0x4005406	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4005406	          0x4885c0	                           test rax, rax	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x4005409	     0xf8469eeffff	                            je 0x4004278	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x400540f	        0x48890424	                    mov qword [rsp], rax	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x4005413	      0xe9cefbffff	                           jmp 0x4004fe6	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x4005418	        0x49895508	                mov qword [r13 + 8], rdx	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x400541c	      0xe940f7ffff	                           jmp 0x4004b61	      3122	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4005421	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1644	dwarf2.c	FUNCTION_27	IF_2
0x4005426	        0x49894d40	             mov qword [r13 + 0x40], rcx	      1643	dwarf2.c	FUNCTION_27	IF_2
0x400542a	        0x49894548	             mov qword [r13 + 0x48], rax	      1644	dwarf2.c	FUNCTION_27	IF_2
0x400542e	      0xe995fbffff	                           jmp 0x4004fc8	      1644	dwarf2.c	FUNCTION_27	IF_2
0x4005433	        0x488b3c24	                    mov rdi, qword [rsp]	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x4005437	      0xe800000000	                          call 0x400543c	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x400543c	      0xb801000000	                              mov eax, 1	      3316	dwarf2.c	FUNCTION_45
0x4005441	      0xe9a1edffff	                           jmp 0x40041e7	      3316	dwarf2.c	FUNCTION_45
0x4005446	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x400544b	        0x48897808	                mov qword [rax + 8], rdi	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x400544f	      0xe974fbffff	                           jmp 0x4004fc8	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4005454	          0x4889d7	                            mov rdi, rdx	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x4005457	      0xe800000000	                          call 0x400545c	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x400545c	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4005461	      0xe800000000	                          call 0x4005466	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4005466	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x400546a	          0x4531d2	                          xor r10d, r10d	       809	dwarf2.c	FUNCTION_15	IF_3	IF_5
0x400546d	      0xe907f2ffff	                           jmp 0x4004679	       809	dwarf2.c	FUNCTION_15	IF_3	IF_5
0x4005472	      0xe800000000	                          call 0x4005477	      3321	dwarf2.c	FUNCTION_45
0x4005477	         0xfb64001	               movzx eax, byte [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x400547b	      0xe904fbffff	                           jmp 0x4004f84	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005480	        0x488d7801	                      lea rdi, [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005484	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005488	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x400548c	          0xff5050	                 call qword [rax + 0x50]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x400548f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005494	      0xe9ebfaffff	                           jmp 0x4004f84	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4005499	      0xba00000000	                              mov edx, 0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x400549e	      0xbec70c0000	                          mov esi, 0xcc7	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40054a3	      0xbf00000000	                              mov edi, 0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40054a8	      0xe800000000	                          call 0x40054ad	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40054ad	        0x488d7801	                      lea rdi, [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40054b1	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40054b5	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40054b9	          0xff5038	                 call qword [rax + 0x38]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40054bc	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40054c1	      0xe9befaffff	                           jmp 0x4004f84	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
read_rangelist	functions,0:DO,0:SWITCH,0:WHILE,0:ELSE,1:IF,7:FOR,1:CALL,4	267
0x4000c30	            0x4157	                                push r15	      2990	dwarf2.c	FUNCTION_44
0x4000c32	            0x4156	                                push r14	      2990	dwarf2.c	FUNCTION_44
0x4000c34	          0x4989d6	                            mov r14, rdx	      2990	dwarf2.c	FUNCTION_44
0x4000c37	            0x4155	                                push r13	      2990	dwarf2.c	FUNCTION_44
0x4000c39	            0x4154	                                push r12	      2990	dwarf2.c	FUNCTION_44
0x4000c3b	          0x4989fd	                            mov r13, rdi	      2990	dwarf2.c	FUNCTION_44
0x4000c3e	              0x55	                                push rbp	      2990	dwarf2.c	FUNCTION_44
0x4000c3f	              0x53	                                push rbx	      2990	dwarf2.c	FUNCTION_44
0x4000c40	          0x4989f4	                            mov r12, rsi	      2990	dwarf2.c	FUNCTION_44
0x4000c43	        0x4883ec18	                           sub rsp, 0x18	      2990	dwarf2.c	FUNCTION_44
0x4000c47	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4000c4e	    0x488bafb00000	            mov rbp, qword [rdi + 0xb0] 	      2993	dwarf2.c	FUNCTION_44
0x4000c55	    0x488b98c00000	            mov rbx, qword [rax + 0xc0] 	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4000c5c	          0x4885db	                           test rbx, rbx	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4000c5f	     0xf8413010000	                            je 0x4000d78	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4000c65	          0x4901de	                            add r14, rbx	      3002	dwarf2.c	FUNCTION_44	IF_3
0x4000c68	     0xf8242010000	                            jb 0x4000db0	      3002	dwarf2.c	FUNCTION_44	IF_3
0x4000c6e	    0x480398c80000	             add rbx, qword [rax + 0xc8]	      3004	dwarf2.c	FUNCTION_44
0x4000c75	    0x410fb68dac00	           movzx ecx, byte [r13 + 0xac] 	      3004	dwarf2.c	FUNCTION_44
0x4000c7d	        0x488d0409	                    lea rax, [rcx + rcx]	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000c81	      0x25fe010000	                          and eax, 0x1fe	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000c86	          0x4c01f0	                            add rax, r14	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000c89	          0x4839c3	                            cmp rbx, rax	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000c8c	     0xf821e010000	                            jb 0x4000db0	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000c92	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c96	        0x488b5008	                mov rdx, qword [rax + 8]	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c9a	        0x837a0805	                  cmp dword [rdx + 8], 5	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000c9e	     0xf847c000000	                            je 0x4000d20	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000ca4	           0xfb6f9	                           movzx edi, cl	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000ca7	        0x4d8d3c3e	                    lea r15, [r14 + rdi]	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000cab	          0x4c39fb	                            cmp rbx, r15	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000cae	            0x7340	                           jae 0x4000cf0	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000cb0	            0x31f6	                            xor esi, esi	       884	dwarf2.c	FUNCTION_17	IF_2
0x4000cb2	          0x4c01ff	                            add rdi, r15	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000cb5	            0x31c0	                            xor eax, eax	       884	dwarf2.c	FUNCTION_17	IF_2
0x4000cb7	          0x4839fb	                            cmp rbx, rdi	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000cba	     0xf8308010000	                           jae 0x4000dc8	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000cc0	          0x4989fe	                            mov r14, rdi	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x4000cc3	          0x4889c7	                            mov rdi, rax	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4000cc6	          0x4809f7	                             or rdi, rsi	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4000cc9	     0xf84b9030000	                            je 0x4001088	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4000ccf	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000cd3	     0xf8537010000	                           jne 0x4000e10	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000cd9	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000cdd	     0xf842d010000	                            je 0x4000e10	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000ce3	          0x4889c5	                            mov rbp, rax	      2990	dwarf2.c	FUNCTION_44
0x4000ce6	            0xeb95	                           jmp 0x4000c7d	      2990	dwarf2.c	FUNCTION_44
0x4000ce8	     0xf1f84000000	                   nop dword [rax + rax]	      2990	dwarf2.c	FUNCTION_44
0x4000cf0	          0x80f904	                               cmp cl, 4	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000cf3	     0xf8487010000	                            je 0x4000e80	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000cf9	          0x80f908	                               cmp cl, 8	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000cfc	     0xf844e020000	                            je 0x4000f50	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d02	          0x80f902	                               cmp cl, 2	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d05	     0xf840d020000	                            je 0x4000f18	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000d0b	      0xba00000000	                              mov edx, 0	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d10	      0xbe8f030000	                          mov esi, 0x38f	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d15	      0xbf00000000	                              mov edi, 0	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d1a	      0xe800000000	                          call 0x4000d1f	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d1f	              0x90	                                     nop	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000d20	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000d27	           0xfb6f9	                           movzx edi, cl	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000d2a	        0x4d8d3c3e	                    lea r15, [r14 + rdi]	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000d2e	     0xfb680890300	          movzx eax, byte [rax + 0x389] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000d35	          0x83e001	                              and eax, 1	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000d38	          0x4c39fb	                            cmp rbx, r15	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000d3b	     0xf825e030000	                            jb 0x400109f	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000d41	            0x84c0	                             test al, al	       886	dwarf2.c	FUNCTION_17	IF_3
0x4000d43	            0x74ab	                            je 0x4000cf0	       886	dwarf2.c	FUNCTION_17	IF_3
0x4000d45	          0x80f904	                               cmp cl, 4	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000d48	     0xf8412020000	                            je 0x4000f60	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000d4e	          0x80f908	                               cmp cl, 8	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000d51	     0xf84e9010000	                            je 0x4000f40	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000d57	          0x80f902	                               cmp cl, 2	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000d5a	     0xf84d0010000	                            je 0x4000f30	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000d60	      0xba00000000	                              mov edx, 0	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000d65	      0xbe81030000	                          mov esi, 0x381	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000d6a	      0xbf00000000	                              mov edi, 0	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000d6f	      0xe800000000	                          call 0x4000d74	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000d74	         0xf1f4000	                         nop dword [rax]	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x4000d78	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000d7c	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000d80	    0x4c8d88c80000	                    lea r9, [rax + 0xc8]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000d87	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000d8b	    0x4c8d80c00000	                    lea r8, [rax + 0xc0]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000d92	            0x31c9	                            xor ecx, ecx	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000d94	    0x4881c6b00000	                           add rsi, 0xb0	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000d9b	      0xe8a0f2ffff	                   call sym.read_section	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000da0	            0x85c0	                           test eax, eax	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4000da2	     0xf85c8020000	                           jne 0x4001070	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4000da8	     0xf1f84000000	                   nop dword [rax + rax]	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4000db0	            0x31c0	                            xor eax, eax	      2998	dwarf2.c	FUNCTION_44	IF_1	IF_2
0x4000db2	        0x4883c418	                           add rsp, 0x18	      3032	dwarf2.c	FUNCTION_44
0x4000db6	              0x5b	                                 pop rbx	      3032	dwarf2.c	FUNCTION_44
0x4000db7	              0x5d	                                 pop rbp	      3032	dwarf2.c	FUNCTION_44
0x4000db8	            0x415c	                                 pop r12	      3032	dwarf2.c	FUNCTION_44
0x4000dba	            0x415d	                                 pop r13	      3032	dwarf2.c	FUNCTION_44
0x4000dbc	            0x415e	                                 pop r14	      3032	dwarf2.c	FUNCTION_44
0x4000dbe	            0x415f	                                 pop r15	      3032	dwarf2.c	FUNCTION_44
0x4000dc0	              0xc3	                                     ret	      3032	dwarf2.c	FUNCTION_44
0x4000dc1	     0xf1f80000000	                         nop dword [rax]	      3032	dwarf2.c	FUNCTION_44
0x4000dc8	          0x80f904	                               cmp cl, 4	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000dcb	     0xf84c7010000	                            je 0x4000f98	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000dd1	          0x80f908	                               cmp cl, 8	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000dd4	     0xf8496010000	                            je 0x4000f70	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000dda	          0x80f902	                               cmp cl, 2	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000ddd	     0xf8528ffffff	                           jne 0x4000d0b	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000de3	      0x4889742408	                mov qword [rsp + 8], rsi	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x4000de8	          0x4c89ff	                            mov rdi, r15	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000deb	          0xff5250	                 call qword [rdx + 0x50]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000dee	    0x410fb6bdac00	           movzx edi, byte [r13 + 0xac] 	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000df6	      0x488b742408	                mov rsi, qword [rsp + 8]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000dfb	          0x4889f9	                            mov rcx, rdi	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000dfe	          0x4c01ff	                            add rdi, r15	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000e01	      0xe9bafeffff	                           jmp 0x4000cc0	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000e06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000e10	      0x4c8d7c0500	                    lea r15, [rbp + rax]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000e15	      0x4c8d443500	                     lea r8, [rbp + rsi]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000e1a	          0x4d39c7	                             cmp r15, r8	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4000e1d	            0x741f	                            je 0x4000e3e	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4000e1f	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4000e24	          0x4c89e2	                            mov rdx, r12	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4000e27	          0x4885c0	                           test rax, rax	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4000e2a	            0x753e	                           jne 0x4000e6a	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4000e2c	      0x4d89442408	                 mov qword [r12 + 8], r8	      1643	dwarf2.c	FUNCTION_27	IF_2
0x4000e31	      0x4d897c2410	             mov qword [r12 + 0x10], r15	      1644	dwarf2.c	FUNCTION_27	IF_2
0x4000e36	    0x410fb68dac00	           movzx ecx, byte [r13 + 0xac] 	      1644	dwarf2.c	FUNCTION_27	IF_2
0x4000e3e	          0x4889e8	                            mov rax, rbp	      2990	dwarf2.c	FUNCTION_44
0x4000e41	      0xe99dfeffff	                           jmp 0x4000ce3	      2990	dwarf2.c	FUNCTION_44
0x4000e46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2990	dwarf2.c	FUNCTION_44
0x4000e50	        0x4c3b7a08	                cmp r15, qword [rdx + 8]	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4000e54	     0xf84b6010000	                            je 0x4001010	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4000e5a	          0x488b12	                    mov rdx, qword [rdx]	      1662	dwarf2.c	FUNCTION_27	DO_1
0x4000e5d	          0x4885d2	                           test rdx, rdx	      1664	dwarf2.c	FUNCTION_27
0x4000e60	     0xf84c2010000	                            je 0x4001028	      1664	dwarf2.c	FUNCTION_27
0x4000e66	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1664	dwarf2.c	FUNCTION_27
0x4000e6a	          0x4939c0	                             cmp r8, rax	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4000e6d	            0x75e1	                           jne 0x4000e50	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4000e6f	        0x4c897a10	             mov qword [rdx + 0x10], r15	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4000e73	    0x410fb68dac00	           movzx ecx, byte [r13 + 0xac] 	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4000e7b	            0xebc1	                           jmp 0x4000e3e	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4000e7d	           0xf1f00	                         nop dword [rax]	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4000e80	          0x4c89f7	                            mov rdi, r14	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000e83	          0xff5238	                 call qword [rdx + 0x38]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000e86	          0x4889c6	                            mov rsi, rax	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000e89	     0xf1f80000000	                         nop dword [rax]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000e90	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000e94	    0x410fb6bdac00	           movzx edi, byte [r13 + 0xac] 	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x4000e9c	        0x488b5008	                mov rdx, qword [rax + 8]	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000ea0	          0x4889f9	                            mov rcx, rdi	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x4000ea3	        0x4d8d3c3e	                    lea r15, [r14 + rdi]	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x4000ea7	        0x837a0805	                  cmp dword [rdx + 8], 5	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000eab	     0xf8501feffff	                           jne 0x4000cb2	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000eb1	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000eb8	          0x4c01ff	                            add rdi, r15	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000ebb	     0xfb680890300	          movzx eax, byte [rax + 0x389] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000ec2	          0x83e001	                              and eax, 1	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000ec5	          0x4839fb	                            cmp rbx, rdi	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000ec8	     0xf82c4010000	                            jb 0x4001092	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000ece	            0x84c0	                             test al, al	       886	dwarf2.c	FUNCTION_17	IF_3
0x4000ed0	     0xf84f2feffff	                            je 0x4000dc8	       886	dwarf2.c	FUNCTION_17	IF_3
0x4000ed6	          0x80f904	                               cmp cl, 4	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000ed9	     0xf8409010000	                            je 0x4000fe8	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000edf	          0x80f908	                               cmp cl, 8	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000ee2	     0xf84d8000000	                            je 0x4000fc0	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000ee8	          0x80f902	                               cmp cl, 2	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000eeb	     0xf856ffeffff	                           jne 0x4000d60	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000ef1	      0x4889742408	                mov qword [rsp + 8], rsi	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x4000ef6	          0x4c89ff	                            mov rdi, r15	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000ef9	          0xff5258	                 call qword [rdx + 0x58]	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000efc	    0x410fb6bdac00	           movzx edi, byte [r13 + 0xac] 	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f04	      0x488b742408	                mov rsi, qword [rsp + 8]	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f09	          0x4889f9	                            mov rcx, rdi	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f0c	          0x4c01ff	                            add rdi, r15	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f0f	      0xe9acfdffff	                           jmp 0x4000cc0	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f14	         0xf1f4000	                         nop dword [rax]	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f18	          0x4c89f7	                            mov rdi, r14	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000f1b	          0xff5250	                 call qword [rdx + 0x50]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000f1e	          0x4889c6	                            mov rsi, rax	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000f21	      0xe96affffff	                           jmp 0x4000e90	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000f26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000f30	          0x4c89f7	                            mov rdi, r14	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f33	          0xff5258	                 call qword [rdx + 0x58]	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f36	          0x4889c6	                            mov rsi, rax	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f39	      0xe952ffffff	                           jmp 0x4000e90	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f3e	            0x6690	                                     nop	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x4000f40	          0x4c89f7	                            mov rdi, r14	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000f43	          0xff5228	                 call qword [rdx + 0x28]	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000f46	          0x4889c6	                            mov rsi, rax	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000f49	      0xe942ffffff	                           jmp 0x4000e90	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000f4e	            0x6690	                                     nop	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000f50	          0x4c89f7	                            mov rdi, r14	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f53	          0xff5220	                 call qword [rdx + 0x20]	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f56	          0x4889c6	                            mov rsi, rax	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f59	      0xe932ffffff	                           jmp 0x4000e90	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f5e	            0x6690	                                     nop	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f60	          0x4c89f7	                            mov rdi, r14	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000f63	          0xff5240	                 call qword [rdx + 0x40]	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000f66	          0x4889c6	                            mov rsi, rax	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000f69	      0xe922ffffff	                           jmp 0x4000e90	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000f6e	            0x6690	                                     nop	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000f70	      0x4889742408	                mov qword [rsp + 8], rsi	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000f75	          0x4c89ff	                            mov rdi, r15	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f78	          0xff5220	                 call qword [rdx + 0x20]	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f7b	    0x410fb6bdac00	           movzx edi, byte [r13 + 0xac] 	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f83	      0x488b742408	                mov rsi, qword [rsp + 8]	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f88	          0x4889f9	                            mov rcx, rdi	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f8b	          0x4c01ff	                            add rdi, r15	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f8e	      0xe92dfdffff	                           jmp 0x4000cc0	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f93	       0xf1f440000	                   nop dword [rax + rax]	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f98	      0x4889742408	                mov qword [rsp + 8], rsi	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x4000f9d	          0x4c89ff	                            mov rdi, r15	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fa0	          0xff5238	                 call qword [rdx + 0x38]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fa3	    0x410fb6bdac00	           movzx edi, byte [r13 + 0xac] 	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fab	      0x488b742408	                mov rsi, qword [rsp + 8]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fb0	          0x4889f9	                            mov rcx, rdi	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fb3	          0x4c01ff	                            add rdi, r15	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fb6	      0xe905fdffff	                           jmp 0x4000cc0	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fbb	       0xf1f440000	                   nop dword [rax + rax]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fc0	      0x4889742408	                mov qword [rsp + 8], rsi	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000fc5	          0x4c89ff	                            mov rdi, r15	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fc8	          0xff5228	                 call qword [rdx + 0x28]	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fcb	    0x410fb6bdac00	           movzx edi, byte [r13 + 0xac] 	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fd3	      0x488b742408	                mov rsi, qword [rsp + 8]	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fd8	          0x4889f9	                            mov rcx, rdi	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fdb	          0x4c01ff	                            add rdi, r15	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fde	      0xe9ddfcffff	                           jmp 0x4000cc0	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fe3	       0xf1f440000	                   nop dword [rax + rax]	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fe8	      0x4889742408	                mov qword [rsp + 8], rsi	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x4000fed	          0x4c89ff	                            mov rdi, r15	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000ff0	          0xff5240	                 call qword [rdx + 0x40]	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000ff3	    0x410fb6bdac00	           movzx edi, byte [r13 + 0xac] 	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4000ffb	      0x488b742408	                mov rsi, qword [rsp + 8]	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4001000	          0x4889f9	                            mov rcx, rdi	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4001003	          0x4c01ff	                            add rdi, r15	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4001006	      0xe9b5fcffff	                           jmp 0x4000cc0	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x400100b	       0xf1f440000	                   nop dword [rax + rax]	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x4001010	        0x4c894208	                 mov qword [rdx + 8], r8	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4001014	    0x410fb68dac00	           movzx ecx, byte [r13 + 0xac] 	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x400101c	      0xe91dfeffff	                           jmp 0x4000e3e	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4001021	     0xf1f80000000	                         nop dword [rax]	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4001028	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x400102c	      0xbe18000000	                           mov esi, 0x18	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4001031	      0x4c89442408	                 mov qword [rsp + 8], r8	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4001036	      0xe800000000	                          call 0x400103b	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x400103b	          0x4885c0	                           test rax, rax	      1669	dwarf2.c	FUNCTION_27	IF_5
0x400103e	     0xf846cfdffff	                            je 0x4000db0	      1669	dwarf2.c	FUNCTION_27	IF_5
0x4001044	        0x498b1424	                    mov rdx, qword [r12]	      1673	dwarf2.c	FUNCTION_27
0x4001048	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1671	dwarf2.c	FUNCTION_27
0x400104d	        0x4c897810	             mov qword [rax + 0x10], r15	      1672	dwarf2.c	FUNCTION_27
0x4001051	        0x4c894008	                 mov qword [rax + 8], r8	      1671	dwarf2.c	FUNCTION_27
0x4001055	          0x488910	                    mov qword [rax], rdx	      1673	dwarf2.c	FUNCTION_27
0x4001058	        0x49890424	                    mov qword [r12], rax	      1674	dwarf2.c	FUNCTION_27
0x400105c	    0x410fb68dac00	           movzx ecx, byte [r13 + 0xac] 	      1674	dwarf2.c	FUNCTION_27
0x4001064	      0xe9d5fdffff	                           jmp 0x4000e3e	      1674	dwarf2.c	FUNCTION_27
0x4001069	     0xf1f80000000	                         nop dword [rax]	      1674	dwarf2.c	FUNCTION_27
0x4001070	    0x498b85a00000	            mov rax, qword [r13 + 0xa0] 	      1674	dwarf2.c	FUNCTION_27
0x4001077	    0x488b98c00000	            mov rbx, qword [rax + 0xc0] 	      1674	dwarf2.c	FUNCTION_27
0x400107e	      0xe9e2fbffff	                           jmp 0x4000c65	      1674	dwarf2.c	FUNCTION_27
0x4001083	       0xf1f440000	                   nop dword [rax + rax]	      1674	dwarf2.c	FUNCTION_27
0x4001088	      0xb801000000	                              mov eax, 1	      3031	dwarf2.c	FUNCTION_44
0x400108d	      0xe920fdffff	                           jmp 0x4000db2	      3031	dwarf2.c	FUNCTION_44
0x4001092	           0xfb6f9	                           movzx edi, cl	      3031	dwarf2.c	FUNCTION_44
0x4001095	            0x31c0	                            xor eax, eax	       884	dwarf2.c	FUNCTION_17	IF_2
0x4001097	          0x4c01ff	                            add rdi, r15	       884	dwarf2.c	FUNCTION_17	IF_2
0x400109a	      0xe921fcffff	                           jmp 0x4000cc0	       884	dwarf2.c	FUNCTION_17	IF_2
0x400109f	            0x31f6	                            xor esi, esi	       884	dwarf2.c	FUNCTION_17	IF_2
0x40010a1	      0xe90bfeffff	                           jmp 0x4000eb1	       884	dwarf2.c	FUNCTION_17	IF_2
read_section	functions,0:DO,0:SWITCH,0:WHILE,0:ELSE,0:IF,7:FOR,0:CALL,12	137
0x4000040	            0x4157	                                push r15	       526	dwarf2.c	FUNCTION_5
0x4000042	            0x4156	                                push r14	       526	dwarf2.c	FUNCTION_5
0x4000044	            0x4155	                                push r13	       526	dwarf2.c	FUNCTION_5
0x4000046	            0x4154	                                push r12	       526	dwarf2.c	FUNCTION_5
0x4000048	              0x55	                                push rbp	       526	dwarf2.c	FUNCTION_5
0x4000049	              0x53	                                push rbx	       526	dwarf2.c	FUNCTION_5
0x400004a	          0x4889cb	                            mov rbx, rcx	       526	dwarf2.c	FUNCTION_5
0x400004d	        0x4883ec18	                           sub rsp, 0x18	       526	dwarf2.c	FUNCTION_5
0x4000051	        0x49833800	                       cmp qword [r8], 0	       532	dwarf2.c	FUNCTION_5	IF_1
0x4000055	          0x4c8b2e	                    mov r13, qword [rsi]	       528	dwarf2.c	FUNCTION_5
0x4000058	            0x746e	                            je 0x40000c8	       532	dwarf2.c	FUNCTION_5	IF_1
0x400005a	          0x4885db	                           test rbx, rbx	       569	dwarf2.c	FUNCTION_5	IF_7
0x400005d	      0xb801000000	                              mov eax, 1	       580	dwarf2.c	FUNCTION_5
0x4000062	            0x7408	                            je 0x400006c	       569	dwarf2.c	FUNCTION_5	IF_7
0x4000064	          0x498b29	                     mov rbp, qword [r9]	       569	dwarf2.c	FUNCTION_5	IF_7
0x4000067	          0x4839eb	                            cmp rbx, rbp	       569	dwarf2.c	FUNCTION_5	IF_7
0x400006a	            0x7314	                           jae 0x4000080	       569	dwarf2.c	FUNCTION_5	IF_7
0x400006c	        0x4883c418	                           add rsp, 0x18	       581	dwarf2.c	FUNCTION_5
0x4000070	              0x5b	                                 pop rbx	       581	dwarf2.c	FUNCTION_5
0x4000071	              0x5d	                                 pop rbp	       581	dwarf2.c	FUNCTION_5
0x4000072	            0x415c	                                 pop r12	       581	dwarf2.c	FUNCTION_5
0x4000074	            0x415d	                                 pop r13	       581	dwarf2.c	FUNCTION_5
0x4000076	            0x415e	                                 pop r14	       581	dwarf2.c	FUNCTION_5
0x4000078	            0x415f	                                 pop r15	       581	dwarf2.c	FUNCTION_5
0x400007a	              0xc3	                                     ret	       581	dwarf2.c	FUNCTION_5
0x400007b	       0xf1f440000	                   nop dword [rax + rax]	       581	dwarf2.c	FUNCTION_5
0x4000080	      0xba05000000	                              mov edx, 5	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000085	      0xbe00000000	                              mov esi, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400008a	      0xbf00000000	                              mov edi, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400008f	      0xe800000000	                          call 0x4000094	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000094	          0x4889e9	                            mov rcx, rbp	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000097	          0x4c89ea	                            mov rdx, r13	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400009a	          0x4889de	                            mov rsi, rbx	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400009d	          0x4889c7	                            mov rdi, rax	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40000a0	            0x31c0	                            xor eax, eax	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40000a2	      0xe800000000	                          call 0x40000a7	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40000a7	      0xbf11000000	                           mov edi, 0x11	       576	dwarf2.c	FUNCTION_5	IF_7	CALL_12
0x40000ac	      0xe800000000	                          call 0x40000b1	       576	dwarf2.c	FUNCTION_5	IF_7	CALL_12
0x40000b1	        0x4883c418	                           add rsp, 0x18	       581	dwarf2.c	FUNCTION_5
0x40000b5	            0x31c0	                            xor eax, eax	       577	dwarf2.c	FUNCTION_5	IF_7
0x40000b7	              0x5b	                                 pop rbx	       581	dwarf2.c	FUNCTION_5
0x40000b8	              0x5d	                                 pop rbp	       581	dwarf2.c	FUNCTION_5
0x40000b9	            0x415c	                                 pop r12	       581	dwarf2.c	FUNCTION_5
0x40000bb	            0x415d	                                 pop r13	       581	dwarf2.c	FUNCTION_5
0x40000bd	            0x415e	                                 pop r14	       581	dwarf2.c	FUNCTION_5
0x40000bf	            0x415f	                                 pop r15	       581	dwarf2.c	FUNCTION_5
0x40000c1	              0xc3	                                     ret	       581	dwarf2.c	FUNCTION_5
0x40000c2	    0x660f1f440000	                    nop word [rax + rax]	       581	dwarf2.c	FUNCTION_5
0x40000c8	          0x4989f4	                            mov r12, rsi	       581	dwarf2.c	FUNCTION_5
0x40000cb	          0x4c89ee	                            mov rsi, r13	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000ce	      0x4c894c2408	                 mov qword [rsp + 8], r9	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000d3	        0x48891424	                    mov qword [rsp], rdx	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000d7	          0x4989fe	                            mov r14, rdi	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000da	          0x4c89c5	                             mov rbp, r8	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000dd	      0xe800000000	                          call 0x40000e2	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000e2	          0x4885c0	                           test rax, rax	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40000e5	          0x4989c7	                            mov r15, rax	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000e8	        0x488b1424	                    mov rdx, qword [rsp]	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40000ec	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40000f1	     0xf84a9000000	                            je 0x40001a0	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40000f7	        0x498b7f40	            mov rdi, qword [r15 + 0x40] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x40000fb	          0x4885ff	                           test rdi, rdi	       549	dwarf2.c	FUNCTION_5	IF_1
0x40000fe	            0x7460	                            je 0x4000160	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000100	          0x498939	                     mov qword [r9], rdi	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000103	        0x4883c701	                              add rdi, 1	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x4000107	      0x4889542408	                mov qword [rsp + 8], rdx	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x400010c	        0x4c890c24	                     mov qword [rsp], r9	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000110	      0xe800000000	                          call 0x4000115	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x4000115	          0x4885c0	                           test rax, rax	       553	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x4000118	          0x4989c4	                            mov r12, rax	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x400011b	     0xf84e8000000	                            je 0x4000209	       553	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x4000121	      0x488b542408	                mov rdx, qword [rsp + 8]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000126	        0x4c8b0c24	                     mov r9, qword [rsp]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400012a	          0x4885d2	                           test rdx, rdx	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400012d	            0x7437	                            je 0x4000166	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400012f	          0x4889d1	                            mov rcx, rdx	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000132	          0x4c89fe	                            mov rsi, r15	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000135	          0x4889c2	                            mov rdx, rax	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000138	          0x4c89f7	                            mov rdi, r14	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x400013b	      0xe800000000	                          call 0x4000140	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000140	        0x4c8b0c24	                     mov r9, qword [rsp]	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000144	          0x4885c0	                           test rax, rax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000147	           0xf94c0	                                 sete al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400014a	            0x84c0	                             test al, al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400014c	            0x7542	                           jne 0x4000190	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400014e	          0x498b01	                     mov rax, qword [r9]	       563	dwarf2.c	FUNCTION_5	IF_1
0x4000151	      0x41c6040400	                 mov byte [r12 + rax], 0	       563	dwarf2.c	FUNCTION_5	IF_1
0x4000156	        0x4c896500	                    mov qword [rbp], r12	       564	dwarf2.c	FUNCTION_5	IF_1
0x400015a	      0xe9fbfeffff	                           jmp 0x400005a	       564	dwarf2.c	FUNCTION_5	IF_1
0x400015f	              0x90	                                     nop	       564	dwarf2.c	FUNCTION_5	IF_1
0x4000160	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000164	            0xeb9a	                           jmp 0x4000100	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000166	          0x4d8b01	                      mov r8, qword [r9]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000169	            0x31c9	                            xor ecx, ecx	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400016b	          0x4889c2	                            mov rdx, rax	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400016e	          0x4c89fe	                            mov rsi, r15	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000171	          0x4c89f7	                            mov rdi, r14	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000174	        0x4c890c24	                     mov qword [rsp], r9	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000178	      0xe800000000	                          call 0x400017d	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400017d	            0x85c0	                           test eax, eax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400017f	        0x4c8b0c24	                     mov r9, qword [rsp]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000183	           0xf94c0	                                 sete al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000186	            0xebc2	                           jmp 0x400014a	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000188	     0xf1f84000000	                   nop dword [rax + rax]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000190	          0x4c89e7	                            mov rdi, r12	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x4000193	      0xe800000000	                          call 0x4000198	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x4000198	            0x31c0	                            xor eax, eax	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400019a	      0xe9cdfeffff	                           jmp 0x400006c	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400019f	              0x90	                                     nop	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x40001a0	      0x4d8b6c2408	                mov r13, qword [r12 + 8]	       537	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40001a5	          0x4d85ed	                           test r13, r13	       538	dwarf2.c	FUNCTION_5	IF_1	IF_2	IF_3
0x40001a8	            0x7429	                            je 0x40001d3	       538	dwarf2.c	FUNCTION_5	IF_1	IF_2	IF_3
0x40001aa	          0x4c89ee	                            mov rsi, r13	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001ad	          0x4c89f7	                            mov rdi, r14	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001b0	      0x4c894c2408	                 mov qword [rsp + 8], r9	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001b5	        0x48891424	                    mov qword [rsp], rdx	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001b9	      0xe800000000	                          call 0x40001be	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001be	          0x4885c0	                           test rax, rax	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40001c1	          0x4989c7	                            mov r15, rax	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001c4	        0x488b1424	                    mov rdx, qword [rsp]	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40001c8	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40001cd	     0xf8524ffffff	                           jne 0x40000f7	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40001d3	        0x498b1c24	                    mov rbx, qword [r12]	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001d7	      0xba05000000	                              mov edx, 5	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001dc	      0xbe00000000	                              mov esi, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001e1	      0xbf00000000	                              mov edi, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001e6	      0xe800000000	                          call 0x40001eb	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001eb	          0x4889de	                            mov rsi, rbx	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001ee	          0x4889c7	                            mov rdi, rax	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001f1	            0x31c0	                            xor eax, eax	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001f3	      0xe800000000	                          call 0x40001f8	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001f8	      0xbf11000000	                           mov edi, 0x11	       545	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_5
0x40001fd	      0xe800000000	                          call 0x4000202	       545	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_5
0x4000202	            0x31c0	                            xor eax, eax	       546	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x4000204	      0xe963feffff	                           jmp 0x400006c	       546	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x4000209	            0x31c0	                            xor eax, eax	       554	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x400020b	      0xe95cfeffff	                           jmp 0x400006c	       554	dwarf2.c	FUNCTION_5	IF_1	IF_5
_bfd_dwarf2_find_inliner_info	functions,0:DO,0:SWITCH,0:WHILE,0:ELSE,0:IF,2:FOR,0:CALL,0	22
0x40060e0	          0x498b38	                     mov rdi, qword [r8]	      4865	dwarf2.c	FUNCTION_69
0x40060e3	          0x4885ff	                           test rdi, rdi	      4866	dwarf2.c	FUNCTION_69	IF_1
0x40060e6	            0x7440	                            je 0x4006128	      4866	dwarf2.c	FUNCTION_69	IF_1
0x40060e8	    0x488b87d00000	            mov rax, qword [rdi + 0xd0] 	      4868	dwarf2.c	FUNCTION_69	IF_1
0x40060ef	          0x4885c0	                           test rax, rax	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40060f2	            0x7434	                            je 0x4006128	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40060f4	      0x4883780800	                  cmp qword [rax + 8], 0	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40060f9	            0x742d	                            je 0x4006128	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40060fb	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40060ff	          0x4c8906	                     mov qword [rsi], r8	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4006102	        0x488b7008	                mov rsi, qword [rax + 8]	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4006106	        0x488b7630	            mov rsi, qword [rsi + 0x30] 	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400610a	          0x488932	                    mov qword [rdx], rsi	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400610d	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4006110	        0x488b4008	                mov rax, qword [rax + 8]	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4006114	            0x8911	                    mov dword [rcx], edx	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4006116	    0x488987d00000	             mov qword [rdi + 0xd0], rax	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400611d	      0xb801000000	                              mov eax, 1	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4006122	              0xc3	                                     ret	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4006123	       0xf1f440000	                   nop dword [rax + rax]	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4006128	            0x31c0	                            xor eax, eax	      4880	dwarf2.c	FUNCTION_69
0x400612a	              0xc3	                                     ret	      4881	dwarf2.c	FUNCTION_69
_bfd_elf_find_function	functions,0:DO,0:SWITCH,0:WHILE,0:ELSE,0:IF,13:FOR,1:CALL,8	141
0x4006af0	            0x4157	                                push r15	      4990	dwarf2.c	FUNCTION_71
0x4006af2	            0x4156	                                push r14	      4990	dwarf2.c	FUNCTION_71
0x4006af4	            0x4155	                                push r13	      4990	dwarf2.c	FUNCTION_71
0x4006af6	            0x4154	                                push r12	      4990	dwarf2.c	FUNCTION_71
0x4006af8	              0x55	                                push rbp	      4990	dwarf2.c	FUNCTION_71
0x4006af9	              0x53	                                push rbx	      4990	dwarf2.c	FUNCTION_71
0x4006afa	        0x4883ec48	                           sub rsp, 0x48	      4990	dwarf2.c	FUNCTION_71
0x4006afe	    0x64488b042528	                mov rax, qword fs:[0x28]	      4990	dwarf2.c	FUNCTION_71
0x4006b07	      0x4889442438	             mov qword [rsp + 0x38], rax	      4990	dwarf2.c	FUNCTION_71
0x4006b0c	            0x31c0	                            xor eax, eax	      4990	dwarf2.c	FUNCTION_71
0x4006b0e	          0x4885f6	                           test rsi, rsi	      4999	dwarf2.c	FUNCTION_71	IF_1
0x4006b11	      0x4889542408	                mov qword [rsp + 8], rdx	      4990	dwarf2.c	FUNCTION_71
0x4006b16	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4990	dwarf2.c	FUNCTION_71
0x4006b1b	      0x4c89442418	              mov qword [rsp + 0x18], r8	      4990	dwarf2.c	FUNCTION_71
0x4006b20	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      4990	dwarf2.c	FUNCTION_71
0x4006b25	     0xf84d5010000	                            je 0x4006d00	      4999	dwarf2.c	FUNCTION_71	IF_1
0x4006b2b	        0x488b4708	                mov rax, qword [rdi + 8]	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4006b2f	          0x4889fd	                            mov rbp, rdi	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4006b32	        0x83780805	                  cmp dword [rax + 8], 5	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4006b36	     0xf85c4010000	                           jne 0x4006d00	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4006b3c	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x4006b43	          0x4889f3	                            mov rbx, rsi	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x4006b46	    0x4c8bb8380300	           mov r15, qword [rax + 0x338] 	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x4006b4d	          0x4d85ff	                           test r15, r15	      5006	dwarf2.c	FUNCTION_71	IF_3
0x4006b50	     0xf847f010000	                            je 0x4006cd5	      5006	dwarf2.c	FUNCTION_71	IF_3
0x4006b56	      0x488b442408	                mov rax, qword [rsp + 8]	      5013	dwarf2.c	FUNCTION_71	IF_5
0x4006b5b	          0x493907	                    cmp qword [r15], rax	      5013	dwarf2.c	FUNCTION_71	IF_5
0x4006b5e	     0xf84a4010000	                            je 0x4006d08	      5013	dwarf2.c	FUNCTION_71	IF_5
0x4006b64	        0x488b4508	                mov rax, qword [rbp + 8]	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x4006b68	    0x488ba8680300	           mov rbp, qword [rax + 0x368] 	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x4006b6f	      0x488b442408	                mov rax, qword [rsp + 8]	      5038	dwarf2.c	FUNCTION_71	IF_5
0x4006b74	    0x49c747100000	               mov qword [r15 + 0x10], 0	      5035	dwarf2.c	FUNCTION_71	IF_5
0x4006b7c	    0x49c747080000	                  mov qword [r15 + 8], 0	      5036	dwarf2.c	FUNCTION_71	IF_5
0x4006b84	    0x49c747180000	               mov qword [r15 + 0x18], 0	      5037	dwarf2.c	FUNCTION_71	IF_5
0x4006b8c	          0x498907	                    mov qword [r15], rax	      5038	dwarf2.c	FUNCTION_71	IF_5
0x4006b8f	          0x4c8b2b	                    mov r13, qword [rbx]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006b92	          0x4d85ed	                           test r13, r13	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006b95	     0xf8465010000	                            je 0x4006d00	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006b9b	          0x4531e4	                          xor r12d, r12d	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006b9e	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006ba7	          0x4531f6	                          xor r14d, r14d	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006baa	            0xeb24	                           jmp 0x4006bd0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006bac	         0xf1f4000	                         nop dword [rax]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006bb0	        0x4183fc01	                             cmp r12d, 1	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x4006bb4	      0xb802000000	                              mov eax, 2	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x4006bb9	          0x4d89ee	                            mov r14, r13	      5051	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4006bbc	        0x440f44e0	                         cmove r12d, eax	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x4006bc0	        0x4883c308	                              add rbx, 8	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006bc4	          0x4c8b2b	                    mov r13, qword [rbx]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006bc7	          0x4d85ed	                           test r13, r13	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006bca	     0xf848c000000	                            je 0x4006c5c	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006bd0	      0x41f6451940	           test byte [r13 + 0x19], 0x40 	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4006bd5	            0x75d9	                           jne 0x4006bb0	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4006bd7	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4006bdc	      0x488b742408	                mov rsi, qword [rsp + 8]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4006be1	          0x4c89ef	                            mov rdi, r13	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4006be4	    0xff95d0020000	                call qword [rbp + 0x2d0]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4006bea	          0x4885c0	                           test rax, rax	      5055	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006bed	            0x7451	                            je 0x4006c40	      5055	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006bef	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006bf4	      0x4839542410	            cmp qword [rsp + 0x10], rdx 	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006bf9	            0x7245	                            jb 0x4006c40	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006bfb	      0x483b542428	            cmp rdx, qword [rsp + 0x28] 	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006c00	     0xf86ba000000	                           jbe 0x4006cc0	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006c06	          0x4d85f6	                           test r14, r14	      5065	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4006c09	        0x4d896f08	                mov qword [r15 + 8], r13	      5061	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006c0d	        0x49894718	             mov qword [r15 + 0x18], rax	      5062	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006c11	    0x49c747100000	               mov qword [r15 + 0x10], 0	      5063	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006c19	     0xf841a010000	                            je 0x4006d39	      5065	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4006c1f	      0x41f6451801	               test byte [r13 + 0x18], 1	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4006c24	            0x750b	                           jne 0x4006c31	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4006c26	        0x4183fc02	                             cmp r12d, 2	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4006c2a	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4006c2f	            0x748f	                            je 0x4006bc0	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4006c31	        0x498b4608	                mov rax, qword [r14 + 8]	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4006c35	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4006c3a	        0x49894710	             mov qword [r15 + 0x10], rax	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4006c3e	            0x6690	                                     nop	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4006c40	          0x4585e4	                         test r12d, r12d	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x4006c43	      0xb801000000	                              mov eax, 1	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x4006c48	        0x440f44e0	                         cmove r12d, eax	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x4006c4c	        0x4883c308	                              add rbx, 8	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006c50	          0x4c8b2b	                    mov r13, qword [rbx]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006c53	          0x4d85ed	                           test r13, r13	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006c56	     0xf8574ffffff	                           jne 0x4006bd0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4006c5c	        0x498b4708	                mov rax, qword [r15 + 8]	      5075	dwarf2.c	FUNCTION_71	IF_11
0x4006c60	          0x4885c0	                           test rax, rax	      5075	dwarf2.c	FUNCTION_71	IF_11
0x4006c63	     0xf8497000000	                            je 0x4006d00	      5075	dwarf2.c	FUNCTION_71	IF_11
0x4006c69	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5078	dwarf2.c	FUNCTION_71	IF_12
0x4006c6e	          0x4885c9	                           test rcx, rcx	      5078	dwarf2.c	FUNCTION_71	IF_12
0x4006c71	            0x740b	                            je 0x4006c7e	      5078	dwarf2.c	FUNCTION_71	IF_12
0x4006c73	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4006c77	          0x488901	                    mov qword [rcx], rax	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4006c7a	        0x498b4708	                mov rax, qword [r15 + 8]	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4006c7e	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4006c83	          0x4885f6	                           test rsi, rsi	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4006c86	            0x740b	                            je 0x4006c93	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4006c88	        0x488b4008	                mov rax, qword [rax + 8]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4006c8c	          0x488906	                    mov qword [rsi], rax	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4006c8f	        0x498b4708	                mov rax, qword [r15 + 8]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4006c93	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5084	dwarf2.c	FUNCTION_71
0x4006c98	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      5084	dwarf2.c	FUNCTION_71
0x4006ca1	     0xf859c000000	                           jne 0x4006d43	      5084	dwarf2.c	FUNCTION_71
0x4006ca7	        0x4883c448	                           add rsp, 0x48	      5084	dwarf2.c	FUNCTION_71
0x4006cab	              0x5b	                                 pop rbx	      5084	dwarf2.c	FUNCTION_71
0x4006cac	              0x5d	                                 pop rbp	      5084	dwarf2.c	FUNCTION_71
0x4006cad	            0x415c	                                 pop r12	      5084	dwarf2.c	FUNCTION_71
0x4006caf	            0x415d	                                 pop r13	      5084	dwarf2.c	FUNCTION_71
0x4006cb1	            0x415e	                                 pop r14	      5084	dwarf2.c	FUNCTION_71
0x4006cb3	            0x415f	                                 pop r15	      5084	dwarf2.c	FUNCTION_71
0x4006cb5	              0xc3	                                     ret	      5084	dwarf2.c	FUNCTION_71
0x4006cb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5084	dwarf2.c	FUNCTION_71
0x4006cc0	     0xf857affffff	                           jne 0x4006c40	      5058	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006cc6	        0x493b4718	            cmp rax, qword [r15 + 0x18] 	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006cca	     0xf8670ffffff	                           jbe 0x4006c40	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006cd0	      0xe931ffffff	                           jmp 0x4006c06	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4006cd5	      0xbe20000000	                           mov esi, 0x20	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4006cda	      0xe800000000	                          call 0x4006cdf	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4006cdf	          0x4989c7	                            mov r15, rax	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4006ce2	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x4006ce9	          0x4d85ff	                           test r15, r15	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4006cec	    0x4c89b8380300	            mov qword [rax + 0x338], r15	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x4006cf3	     0xf855dfeffff	                           jne 0x4006b56	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4006cf9	     0xf1f80000000	                         nop dword [rax]	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4006d00	            0x31c0	                            xor eax, eax	      5000	dwarf2.c	FUNCTION_71	IF_1
0x4006d02	            0xeb8f	                           jmp 0x4006c93	      5000	dwarf2.c	FUNCTION_71	IF_1
0x4006d04	         0xf1f4000	                         nop dword [rax]	      5000	dwarf2.c	FUNCTION_71	IF_1
0x4006d08	        0x498b4708	                mov rax, qword [r15 + 8]	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4006d0c	          0x4885c0	                           test rax, rax	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4006d0f	     0xf844ffeffff	                            je 0x4006b64	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4006d15	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4006d19	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4006d1e	          0x4839fa	                            cmp rdx, rdi	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4006d21	     0xf873dfeffff	                            ja 0x4006b64	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4006d27	        0x49035718	             add rdx, qword [r15 + 0x18]	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4006d2b	          0x4839d7	                            cmp rdi, rdx	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4006d2e	     0xf8235ffffff	                            jb 0x4006c69	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4006d34	      0xe92bfeffff	                           jmp 0x4006b64	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4006d39	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4006d3e	      0xe9fdfeffff	                           jmp 0x4006c40	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4006d43	      0xe800000000	                          call 0x4006d48	      5084	dwarf2.c	FUNCTION_71
add_line_info	functions,0:DO,0:SWITCH,0:WHILE,1:ELSE,5:IF,12:FOR,0:CALL,10	194
0x4000210	            0x4157	                                push r15	      1448	dwarf2.c	FUNCTION_25
0x4000212	            0x4156	                                push r14	      1448	dwarf2.c	FUNCTION_25
0x4000214	          0x4589cf	                           mov r15d, r9d	      1448	dwarf2.c	FUNCTION_25
0x4000217	            0x4155	                                push r13	      1448	dwarf2.c	FUNCTION_25
0x4000219	            0x4154	                                push r12	      1448	dwarf2.c	FUNCTION_25
0x400021b	          0x4989f4	                            mov r12, rsi	      1448	dwarf2.c	FUNCTION_25
0x400021e	              0x55	                                push rbp	      1448	dwarf2.c	FUNCTION_25
0x400021f	              0x53	                                push rbx	      1448	dwarf2.c	FUNCTION_25
0x4000220	          0x4889fd	                            mov rbp, rdi	      1448	dwarf2.c	FUNCTION_25
0x4000223	      0xbe28000000	                           mov esi, 0x28	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4000228	          0x4189d6	                           mov r14d, edx	      1448	dwarf2.c	FUNCTION_25
0x400022b	        0x4883ec18	                           sub rsp, 0x18	      1448	dwarf2.c	FUNCTION_25
0x400022f	        0x4c8b6f30	            mov r13, qword [rdi + 0x30] 	      1450	dwarf2.c	FUNCTION_25
0x4000233	          0x488b3f	                    mov rdi, qword [rdi]	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4000236	      0x48894c2408	                mov qword [rsp + 8], rcx	      1448	dwarf2.c	FUNCTION_25
0x400023b	        0x44890424	                    mov dword [rsp], r8d	      1448	dwarf2.c	FUNCTION_25
0x400023f	      0xe800000000	                          call 0x4000244	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4000244	          0x4885c0	                           test rax, rax	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4000247	        0x448b0424	                    mov r8d, dword [rsp]	      1453	dwarf2.c	FUNCTION_25	IF_1
0x400024b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4000250	     0xf848a010000	                            je 0x40003e0	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4000256	          0x4889c3	                            mov rbx, rax	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4000259	    0x48c700000000	                      mov qword [rax], 0	      1457	dwarf2.c	FUNCTION_25
0x4000260	        0x4c896008	                mov qword [rax + 8], r12	      1458	dwarf2.c	FUNCTION_25
0x4000264	        0x44887024	             mov byte [rax + 0x24], r14b	      1459	dwarf2.c	FUNCTION_25
0x4000268	        0x44894018	             mov dword [rax + 0x18], r8d	      1460	dwarf2.c	FUNCTION_25
0x400026c	          0x4885c9	                           test rcx, rcx	      1465	dwarf2.c	FUNCTION_25	IF_2
0x400026f	        0x4489781c	            mov dword [rax + 0x1c], r15d	      1461	dwarf2.c	FUNCTION_25
0x4000273	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1462	dwarf2.c	FUNCTION_25
0x4000277	          0x894320	             mov dword [rbx + 0x20], eax	      1462	dwarf2.c	FUNCTION_25
0x400027a	       0xfb6442458	           movzx eax, byte [rsp + 0x58] 	      1463	dwarf2.c	FUNCTION_25
0x400027f	          0x884325	               mov byte [rbx + 0x25], al	      1463	dwarf2.c	FUNCTION_25
0x4000282	            0x7409	                            je 0x400028d	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000284	          0x803900	                       cmp byte [rcx], 0	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000287	     0xf8513010000	                           jne 0x40003a0	      1465	dwarf2.c	FUNCTION_25	IF_2
0x400028d	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1473	dwarf2.c	FUNCTION_25	ELSE_1
0x4000295	          0x4d85ed	                           test r13, r13	      1490	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000298	            0x7419	                            je 0x40002b3	      1490	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400029a	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400029e	        0x488b7108	                mov rsi, qword [rcx + 8]	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40002a2	          0x4939f4	                            cmp r12, rsi	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40002a5	     0xf844d010000	                            je 0x40003f8	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40002ab	         0xfb64125	           movzx eax, byte [rcx + 0x25] 	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40002af	            0x84c0	                             test al, al	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002b1	            0x7445	                            je 0x40002f8	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002b3	      0xbf28000000	                           mov edi, 0x28	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x40002b8	      0xe800000000	                          call 0x40002bd	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x40002bd	          0x4885c0	                           test rax, rax	      1507	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x40002c0	     0xf841a010000	                            je 0x40003e0	      1507	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x40002c6	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002ca	          0x4c8920	                    mov qword [rax], r12	      1509	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002cd	        0x48895810	             mov qword [rax + 0x10], rbx	      1511	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002d1	        0x48895008	                mov qword [rax + 8], rdx	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002d5	        0x83451001	               add dword [rbp + 0x10], 1	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002d9	        0x48894530	            mov qword [rbp + 0x30], rax 	      1513	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002dd	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1512	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x40002e1	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x40002e6	        0x4883c418	                           add rsp, 0x18	      1558	dwarf2.c	FUNCTION_25
0x40002ea	              0x5b	                                 pop rbx	      1558	dwarf2.c	FUNCTION_25
0x40002eb	              0x5d	                                 pop rbp	      1558	dwarf2.c	FUNCTION_25
0x40002ec	            0x415c	                                 pop r12	      1558	dwarf2.c	FUNCTION_25
0x40002ee	            0x415d	                                 pop r13	      1558	dwarf2.c	FUNCTION_25
0x40002f0	            0x415e	                                 pop r14	      1558	dwarf2.c	FUNCTION_25
0x40002f2	            0x415f	                                 pop r15	      1558	dwarf2.c	FUNCTION_25
0x40002f4	              0xc3	                                     ret	      1558	dwarf2.c	FUNCTION_25
0x40002f5	           0xf1f00	                         nop dword [rax]	      1558	dwarf2.c	FUNCTION_25
0x40002f8	        0x807b2500	                cmp byte [rbx + 0x25], 0	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x40002fc	            0x7572	                           jne 0x4000370	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x40002fe	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4000302	          0x4839fe	                            cmp rsi, rdi	      1429	dwarf2.c	FUNCTION_24
0x4000305	            0x7269	                            jb 0x4000370	      1429	dwarf2.c	FUNCTION_24
0x4000307	            0x7457	                            je 0x4000360	      1429	dwarf2.c	FUNCTION_24
0x4000309	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x400030d	        0x483b7808	                cmp rdi, qword [rax + 8]	      1429	dwarf2.c	FUNCTION_24
0x4000311	     0xf8659010000	                           jbe 0x4000470	      1429	dwarf2.c	FUNCTION_24
0x4000317	          0x488b01	                    mov rax, qword [rcx]	      1540	dwarf2.c	FUNCTION_25	ELSE_5
0x400031a	          0x4885c0	                           test rax, rax	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400031d	            0x752f	                           jne 0x400034e	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400031f	      0xe947010000	                           jmp 0x400046b	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000324	         0xf1f4000	                         nop dword [rax]	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000328	        0x483b7808	                cmp rdi, qword [rax + 8]	      1429	dwarf2.c	FUNCTION_24
0x400032c	     0xf870e010000	                            ja 0x4000440	      1429	dwarf2.c	FUNCTION_24
0x4000332	     0xf84f8000000	                            je 0x4000430	      1429	dwarf2.c	FUNCTION_24
0x4000338	          0x488b10	                    mov rdx, qword [rax]	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400033b	          0x4885d2	                           test rdx, rdx	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400033e	     0xf8424010000	                            je 0x4000468	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000344	        0x488b7008	                mov rsi, qword [rax + 8]	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000348	          0x4889c1	                            mov rcx, rax	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400034b	          0x4889d0	                            mov rax, rdx	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400034e	          0x4839f7	                            cmp rdi, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000351	            0x77e5	                            ja 0x4000338	      1429	dwarf2.c	FUNCTION_24
0x4000353	            0x75d3	                           jne 0x4000328	      1429	dwarf2.c	FUNCTION_24
0x4000355	         0xfb65124	           movzx edx, byte [rcx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000359	          0x385324	               cmp byte [rbx + 0x24], dl	      1430	dwarf2.c	FUNCTION_24
0x400035c	            0x77da	                            ja 0x4000338	      1430	dwarf2.c	FUNCTION_24
0x400035e	            0xebc8	                           jmp 0x4000328	      1430	dwarf2.c	FUNCTION_24
0x4000360	         0xfb64324	           movzx eax, byte [rbx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000364	          0x384124	               cmp byte [rcx + 0x24], al	      1430	dwarf2.c	FUNCTION_24
0x4000367	            0x73a0	                           jae 0x4000309	      1430	dwarf2.c	FUNCTION_24
0x4000369	     0xf1f80000000	                         nop dword [rax]	      1430	dwarf2.c	FUNCTION_24
0x4000370	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4000375	          0x48890b	                    mov qword [rbx], rcx	      1520	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4000378	        0x49895d10	             mov qword [r13 + 0x10], rbx	      1521	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x400037c	     0xf8426010000	                            je 0x40004a8	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4000382	        0x4883c418	                           add rsp, 0x18	      1558	dwarf2.c	FUNCTION_25
0x4000386	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x400038b	              0x5b	                                 pop rbx	      1558	dwarf2.c	FUNCTION_25
0x400038c	              0x5d	                                 pop rbp	      1558	dwarf2.c	FUNCTION_25
0x400038d	            0x415c	                                 pop r12	      1558	dwarf2.c	FUNCTION_25
0x400038f	            0x415d	                                 pop r13	      1558	dwarf2.c	FUNCTION_25
0x4000391	            0x415e	                                 pop r14	      1558	dwarf2.c	FUNCTION_25
0x4000393	            0x415f	                                 pop r15	      1558	dwarf2.c	FUNCTION_25
0x4000395	              0xc3	                                     ret	      1558	dwarf2.c	FUNCTION_25
0x4000396	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1558	dwarf2.c	FUNCTION_25
0x40003a0	          0x4889cf	                            mov rdi, rcx	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x40003a3	        0x48890c24	                    mov qword [rsp], rcx	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x40003a7	      0xe800000000	                          call 0x40003ac	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x40003ac	        0x488b7d00	                    mov rdi, qword [rbp]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x40003b0	        0x488d7001	                      lea rsi, [rax + 1]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x40003b4	      0xe800000000	                          call 0x40003b9	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x40003b9	          0x4885c0	                           test rax, rax	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x40003bc	        0x48894310	             mov qword [rbx + 0x10], rax	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x40003c0	            0x741e	                            je 0x40003e0	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x40003c2	        0x488b0c24	                    mov rcx, qword [rsp]	       110	string3.h	FUNCTION_78	CALL_3
0x40003c6	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_78	CALL_3
0x40003c9	          0x4889ce	                            mov rsi, rcx	       110	string3.h	FUNCTION_78	CALL_3
0x40003cc	      0xe800000000	                          call 0x40003d1	       110	string3.h	FUNCTION_78	CALL_3
0x40003d1	      0xe9bffeffff	                           jmp 0x4000295	       110	string3.h	FUNCTION_78	CALL_3
0x40003d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       110	string3.h	FUNCTION_78	CALL_3
0x40003e0	        0x4883c418	                           add rsp, 0x18	      1558	dwarf2.c	FUNCTION_25
0x40003e4	            0x31c0	                            xor eax, eax	      1454	dwarf2.c	FUNCTION_25	IF_1
0x40003e6	              0x5b	                                 pop rbx	      1558	dwarf2.c	FUNCTION_25
0x40003e7	              0x5d	                                 pop rbp	      1558	dwarf2.c	FUNCTION_25
0x40003e8	            0x415c	                                 pop r12	      1558	dwarf2.c	FUNCTION_25
0x40003ea	            0x415d	                                 pop r13	      1558	dwarf2.c	FUNCTION_25
0x40003ec	            0x415e	                                 pop r14	      1558	dwarf2.c	FUNCTION_25
0x40003ee	            0x415f	                                 pop r15	      1558	dwarf2.c	FUNCTION_25
0x40003f0	              0xc3	                                     ret	      1558	dwarf2.c	FUNCTION_25
0x40003f1	     0xf1f80000000	                         nop dword [rax]	      1558	dwarf2.c	FUNCTION_25
0x40003f8	        0x443a7124	            cmp r14b, byte [rcx + 0x24] 	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40003fc	     0xf85a9feffff	                           jne 0x40002ab	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000402	         0xfb65125	           movzx edx, byte [rcx + 0x25] 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000406	        0x39542458	            cmp dword [rsp + 0x58], edx 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400040a	            0x89d0	                            mov eax, edx	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400040c	     0xf859dfeffff	                           jne 0x40002af	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000412	        0x483b4d38	            cmp rcx, qword [rbp + 0x38] 	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4000416	     0xf84b3000000	                            je 0x40004cf	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x400041c	          0x488b01	                    mov rax, qword [rcx]	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400041f	          0x488903	                    mov qword [rbx], rax	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000422	        0x49895d10	             mov qword [r13 + 0x10], rbx	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000426	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x400042b	      0xe9b6feffff	                           jmp 0x40002e6	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000430	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000434	          0x385324	               cmp byte [rbx + 0x24], dl	      1430	dwarf2.c	FUNCTION_24
0x4000437	     0xf86fbfeffff	                           jbe 0x4000338	      1430	dwarf2.c	FUNCTION_24
0x400043d	           0xf1f00	                         nop dword [rax]	      1430	dwarf2.c	FUNCTION_24
0x4000440	        0x4d3b6500	                    cmp r12, qword [r13]	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4000444	        0x48894d38	            mov qword [rbp + 0x38], rcx 	      1551	dwarf2.c	FUNCTION_25	ELSE_5
0x4000448	          0x488903	                    mov qword [rbx], rax	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x400044b	          0x488919	                    mov qword [rcx], rbx	      1553	dwarf2.c	FUNCTION_25	ELSE_5
0x400044e	     0xf832effffff	                           jae 0x4000382	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4000454	        0x4d896500	                    mov qword [r13], r12	      1555	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4000458	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x400045d	      0xe984feffff	                           jmp 0x40002e6	      1557	dwarf2.c	FUNCTION_25
0x4000462	    0x660f1f440000	                    nop word [rax + rax]	      1557	dwarf2.c	FUNCTION_25
0x4000468	          0x4889c1	                            mov rcx, rax	      1557	dwarf2.c	FUNCTION_25
0x400046b	            0x31c0	                            xor eax, eax	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400046d	            0xebd1	                           jmp 0x4000440	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x400046f	              0x90	                                     nop	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000470	            0x744e	                            je 0x40004c0	      1429	dwarf2.c	FUNCTION_24
0x4000472	          0x488b10	                    mov rdx, qword [rax]	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000475	          0x4885d2	                           test rdx, rdx	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000478	            0x741e	                            je 0x4000498	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x400047a	        0x483b7a08	                cmp rdi, qword [rdx + 8]	      1429	dwarf2.c	FUNCTION_24
0x400047e	            0x7718	                            ja 0x4000498	      1429	dwarf2.c	FUNCTION_24
0x4000480	     0xf8591feffff	                           jne 0x4000317	      1429	dwarf2.c	FUNCTION_24
0x4000486	      0x440fb65224	          movzx r10d, byte [rdx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x400048b	        0x44385324	            cmp byte [rbx + 0x24], r10b 	      1430	dwarf2.c	FUNCTION_24
0x400048f	     0xf8682feffff	                           jbe 0x4000317	      1430	dwarf2.c	FUNCTION_24
0x4000495	           0xf1f00	                         nop dword [rax]	      1430	dwarf2.c	FUNCTION_24
0x4000498	          0x488913	                    mov qword [rbx], rdx	      1532	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x400049b	          0x488918	                    mov qword [rax], rbx	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x400049e	      0xe9dffeffff	                           jmp 0x4000382	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x40004a3	       0xf1f440000	                   nop dword [rax + rax]	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x40004a8	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1525	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x40004ac	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x40004b1	      0xe930feffff	                           jmp 0x40002e6	      1557	dwarf2.c	FUNCTION_25
0x40004b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1557	dwarf2.c	FUNCTION_25
0x40004c0	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x40004c4	          0x385324	               cmp byte [rbx + 0x24], dl	      1430	dwarf2.c	FUNCTION_24
0x40004c7	     0xf874afeffff	                            ja 0x4000317	      1430	dwarf2.c	FUNCTION_24
0x40004cd	            0xeba3	                           jmp 0x4000472	      1430	dwarf2.c	FUNCTION_24
0x40004cf	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1498	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x40004d3	      0xe944ffffff	                           jmp 0x400041c	      1498	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
stash_maybe_update_info_hash_tables	functions,0:DO,0:SWITCH,0:WHILE,1:ELSE,1:IF,3:FOR,0:CALL,1	222
0x4005c10	          0x488b17	                    mov rdx, qword [rdi]	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4005c13	    0x488b87080100	           mov rax, qword [rdi + 0x108] 	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4005c1a	          0x4839c2	                            cmp rdx, rax	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4005c1d	     0xf843d030000	                            je 0x4005f60	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4005c23	            0x4157	                                push r15	      4117	dwarf2.c	FUNCTION_60
0x4005c25	            0x4156	                                push r14	      4117	dwarf2.c	FUNCTION_60
0x4005c27	            0x4155	                                push r13	      4117	dwarf2.c	FUNCTION_60
0x4005c29	            0x4154	                                push r12	      4117	dwarf2.c	FUNCTION_60
0x4005c2b	              0x55	                                push rbp	      4117	dwarf2.c	FUNCTION_60
0x4005c2c	              0x53	                                push rbx	      4117	dwarf2.c	FUNCTION_60
0x4005c2d	        0x4883ec08	                              sub rsp, 8	      4117	dwarf2.c	FUNCTION_60
0x4005c31	          0x4885c0	                           test rax, rax	      4124	dwarf2.c	FUNCTION_60	IF_2
0x4005c34	     0xf841d030000	                            je 0x4005f57	      4124	dwarf2.c	FUNCTION_60	IF_2
0x4005c3a	        0x488b6808	                mov rbp, qword [rax + 8]	      4125	dwarf2.c	FUNCTION_60	IF_2
0x4005c3e	          0x4885ed	                           test rbp, rbp	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4005c41	          0x4989fc	                            mov r12, rdi	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4005c44	     0xf84fd010000	                            je 0x4005e47	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4005c4a	    0x660f1f440000	                    nop word [rax + rax]	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4005c50	    0x4183bc241001	              cmp dword [r12 + 0x110], 2	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4005c59	    0x4d8bac240001	           mov r13, qword [r12 + 0x100] 	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4005c61	    0x4d8bb424f800	            mov r14, qword [r12 + 0xf8] 	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4005c69	     0xf8499020000	                            je 0x4005f08	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4005c6f	          0x8b4d44	            mov ecx, dword [rbp + 0x44] 	      3642	dwarf2.c	FUNCTION_49	IF_1
0x4005c72	            0x85c9	                           test ecx, ecx	      3642	dwarf2.c	FUNCTION_49	IF_1
0x4005c74	     0xf8518020000	                           jne 0x4005e92	      3642	dwarf2.c	FUNCTION_49	IF_1
0x4005c7a	      0x48837d7800	               cmp qword [rbp + 0x78], 0	      3645	dwarf2.c	FUNCTION_49	IF_2
0x4005c7f	     0xf84fb010000	                            je 0x4005e80	      3645	dwarf2.c	FUNCTION_49	IF_2
0x4005c85	    0x8b85b8000000	            mov eax, dword [rbp + 0xb8] 	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4005c8b	            0x85c0	                           test eax, eax	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4005c8d	     0xf851d020000	                           jne 0x4005eb0	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4005c93	    0x488b9d800000	            mov rbx, qword [rbp + 0x80] 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4005c9a	          0x4885db	                           test rbx, rbx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005c9d	     0xf842c020000	                            je 0x4005ecf	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005ca3	            0x31d2	                            xor edx, edx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005ca5	            0xeb0c	                           jmp 0x4005cb3	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005ca7	    0x660f1f840000	                    nop word [rax + rax]	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005cb0	          0x4889c3	                            mov rbx, rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005cb3	          0x488b03	                    mov rax, qword [rbx]	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x4005cb6	          0x488913	                    mov qword [rbx], rdx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4005cb9	          0x4889da	                            mov rdx, rbx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4005cbc	          0x4885c0	                           test rax, rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005cbf	            0x75ef	                           jne 0x4005cb0	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005cc1	    0x48899d800000	            mov qword [rbp + 0x80], rbx 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4005cc8	     0xf1f84000000	                   nop dword [rax + rax]	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4005cd0	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4005cd4	          0x4885f6	                           test rsi, rsi	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4005cd7	            0x7440	                            je 0x4005d19	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4005cd9	            0x31c9	                            xor ecx, ecx	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005cdb	      0xba01000000	                              mov edx, 1	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005ce0	          0x4c89f7	                            mov rdi, r14	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005ce3	      0xe800000000	                          call 0x4005ce8	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005ce8	          0x4885c0	                           test rax, rax	       485	dwarf2.c	FUNCTION_3	IF_1
0x4005ceb	          0x4989c7	                            mov r15, rax	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005cee	     0xf8474010000	                            je 0x4005e68	       485	dwarf2.c	FUNCTION_3	IF_1
0x4005cf4	      0xbe10000000	                           mov esi, 0x10	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4005cf9	          0x4c89f7	                            mov rdi, r14	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4005cfc	      0xe800000000	                          call 0x4005d01	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4005d01	          0x4885c0	                           test rax, rax	       490	dwarf2.c	FUNCTION_3	IF_2
0x4005d04	     0xf845e010000	                            je 0x4005e68	       490	dwarf2.c	FUNCTION_3	IF_2
0x4005d0a	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	       494	dwarf2.c	FUNCTION_3
0x4005d0e	        0x48895808	                mov qword [rax + 8], rbx	       493	dwarf2.c	FUNCTION_3
0x4005d12	          0x488910	                    mov qword [rax], rdx	       494	dwarf2.c	FUNCTION_3
0x4005d15	        0x49894718	             mov qword [r15 + 0x18], rax	       495	dwarf2.c	FUNCTION_3
0x4005d19	          0x488b1b	                    mov rbx, qword [rbx]	      3760	dwarf2.c	FUNCTION_53	FOR_1
0x4005d1c	          0x4885db	                           test rbx, rbx	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4005d1f	            0x75af	                           jne 0x4005cd0	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4005d21	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4005d28	          0x4885c0	                           test rax, rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d2b	     0xf849e010000	                            je 0x4005ecf	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d31	      0xbe01000000	                              mov esi, 1	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d40	            0x31c9	                            xor ecx, ecx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d42	            0xeb07	                           jmp 0x4005d4b	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d44	         0xf1f4000	                         nop dword [rax]	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d48	          0x4889d0	                            mov rax, rdx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d4b	          0x488b10	                    mov rdx, qword [rax]	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x4005d4e	          0x488908	                    mov qword [rax], rcx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4005d51	          0x4889c1	                            mov rcx, rax	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4005d54	          0x4885d2	                           test rdx, rdx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d57	            0x75ef	                           jne 0x4005d48	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005d59	            0x85f6	                           test esi, esi	      3771	dwarf2.c	FUNCTION_53	IF_3
0x4005d5b	    0x488985800000	            mov qword [rbp + 0x80], rax 	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4005d62	     0xf842a010000	                            je 0x4005e92	      3771	dwarf2.c	FUNCTION_53	IF_3
0x4005d68	    0x488b9d980000	            mov rbx, qword [rbp + 0x98] 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4005d6f	          0x4885db	                           test rbx, rbx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005d72	     0xf8472010000	                            je 0x4005eea	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005d78	            0x31d2	                            xor edx, edx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005d7a	            0xeb07	                           jmp 0x4005d83	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005d7c	         0xf1f4000	                         nop dword [rax]	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005d80	          0x4889c3	                            mov rbx, rax	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005d83	          0x488b03	                    mov rax, qword [rbx]	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x4005d86	          0x488913	                    mov qword [rbx], rdx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4005d89	          0x4889da	                            mov rdx, rbx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4005d8c	          0x4885c0	                           test rax, rax	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005d8f	            0x75ef	                           jne 0x4005d80	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005d91	    0x48899d980000	            mov qword [rbp + 0x98], rbx 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4005d98	            0xeb33	                           jmp 0x4005dcd	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4005d9a	    0x660f1f440000	                    nop word [rax + rax]	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4005da0	      0xbe10000000	                           mov esi, 0x10	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4005da5	          0x4c89ef	                            mov rdi, r13	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4005da8	      0xe800000000	                          call 0x4005dad	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4005dad	          0x4885c0	                           test rax, rax	       490	dwarf2.c	FUNCTION_3	IF_2
0x4005db0	            0x7448	                            je 0x4005dfa	       490	dwarf2.c	FUNCTION_3	IF_2
0x4005db2	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       494	dwarf2.c	FUNCTION_3
0x4005db6	        0x48895808	                mov qword [rax + 8], rbx	       493	dwarf2.c	FUNCTION_3
0x4005dba	          0x488910	                    mov qword [rax], rdx	       494	dwarf2.c	FUNCTION_3
0x4005dbd	        0x49894618	             mov qword [r14 + 0x18], rax	       495	dwarf2.c	FUNCTION_3
0x4005dc1	          0x488b1b	                    mov rbx, qword [rbx]	      3778	dwarf2.c	FUNCTION_53	FOR_2
0x4005dc4	          0x4885db	                           test rbx, rbx	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4005dc7	     0xf8499010000	                            je 0x4005f66	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4005dcd	        0xf6433001	               test byte [rbx + 0x30], 1	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4005dd1	            0x75ee	                           jne 0x4005dc1	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4005dd3	      0x48837b0800	                  cmp qword [rbx + 8], 0	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4005dd8	            0x74e7	                            je 0x4005dc1	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4005dda	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4005dde	          0x4885f6	                           test rsi, rsi	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4005de1	            0x74de	                            je 0x4005dc1	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4005de3	            0x31c9	                            xor ecx, ecx	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005de5	      0xba01000000	                              mov edx, 1	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005dea	          0x4c89ef	                            mov rdi, r13	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005ded	      0xe800000000	                          call 0x4005df2	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005df2	          0x4885c0	                           test rax, rax	       485	dwarf2.c	FUNCTION_3	IF_1
0x4005df5	          0x4989c6	                            mov r14, rax	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4005df8	            0x75a6	                           jne 0x4005da0	       485	dwarf2.c	FUNCTION_3	IF_1
0x4005dfa	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	       485	dwarf2.c	FUNCTION_3	IF_1
0x4005e01	          0x4885c0	                           test rax, rax	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005e04	     0xf8476010000	                            je 0x4005f80	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005e0a	            0x31f6	                            xor esi, esi	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005e0c	            0x31c9	                            xor ecx, ecx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005e0e	            0xeb03	                           jmp 0x4005e13	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005e10	          0x4889d0	                            mov rax, rdx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005e13	          0x488b10	                    mov rdx, qword [rax]	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x4005e16	          0x488908	                    mov qword [rax], rcx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4005e19	          0x4889c1	                            mov rcx, rax	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4005e1c	          0x4885d2	                           test rdx, rdx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005e1f	            0x75ef	                           jne 0x4005e10	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005e21	            0x85f6	                           test esi, esi	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4005e23	    0x488985980000	            mov qword [rbp + 0x98], rax 	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4005e2a	    0xc785b8000000	               mov dword [rbp + 0xb8], 1	      3792	dwarf2.c	FUNCTION_53
0x4005e34	            0x745c	                            je 0x4005e92	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4005e36	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4137	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4005e3a	          0x4885ed	                           test rbp, rbp	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4005e3d	     0xf850dfeffff	                           jne 0x4005c50	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4005e43	        0x498b1424	                    mov rdx, qword [r12]	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4005e47	    0x498994240801	            mov qword [r12 + 0x108], rdx	      4140	dwarf2.c	FUNCTION_60
0x4005e4f	        0x4883c408	                              add rsp, 8	      4142	dwarf2.c	FUNCTION_60
0x4005e53	      0xb801000000	                              mov eax, 1	      4141	dwarf2.c	FUNCTION_60
0x4005e58	              0x5b	                                 pop rbx	      4142	dwarf2.c	FUNCTION_60
0x4005e59	              0x5d	                                 pop rbp	      4142	dwarf2.c	FUNCTION_60
0x4005e5a	            0x415c	                                 pop r12	      4142	dwarf2.c	FUNCTION_60
0x4005e5c	            0x415d	                                 pop r13	      4142	dwarf2.c	FUNCTION_60
0x4005e5e	            0x415e	                                 pop r14	      4142	dwarf2.c	FUNCTION_60
0x4005e60	            0x415f	                                 pop r15	      4142	dwarf2.c	FUNCTION_60
0x4005e62	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
0x4005e63	       0xf1f440000	                   nop dword [rax + rax]	      4142	dwarf2.c	FUNCTION_60
0x4005e68	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	      4142	dwarf2.c	FUNCTION_60
0x4005e6f	          0x4885c0	                           test rax, rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005e72	     0xf8422010000	                            je 0x4005f9a	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005e78	            0x31f6	                            xor esi, esi	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005e7a	      0xe9c1feffff	                           jmp 0x4005d40	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005e7f	              0x90	                                     nop	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005e80	          0x8b5550	            mov edx, dword [rbp + 0x50] 	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4005e83	            0x85d2	                           test edx, edx	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4005e85	     0xf8591000000	                           jne 0x4005f1c	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4005e8b	    0xc74544010000	               mov dword [rbp + 0x44], 1	      3664	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4005e92	    0x41c784241001	              mov dword [r12 + 0x110], 2	      4134	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x4005e9e	        0x4883c408	                              add rsp, 8	      4142	dwarf2.c	FUNCTION_60
0x4005ea2	            0x31c0	                            xor eax, eax	      4135	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x4005ea4	              0x5b	                                 pop rbx	      4142	dwarf2.c	FUNCTION_60
0x4005ea5	              0x5d	                                 pop rbp	      4142	dwarf2.c	FUNCTION_60
0x4005ea6	            0x415c	                                 pop r12	      4142	dwarf2.c	FUNCTION_60
0x4005ea8	            0x415d	                                 pop r13	      4142	dwarf2.c	FUNCTION_60
0x4005eaa	            0x415e	                                 pop r14	      4142	dwarf2.c	FUNCTION_60
0x4005eac	            0x415f	                                 pop r15	      4142	dwarf2.c	FUNCTION_60
0x4005eae	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
0x4005eaf	              0x90	                                     nop	      4142	dwarf2.c	FUNCTION_60
0x4005eb0	      0xbea60e0000	                          mov esi, 0xea6	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4005eb5	      0xbf00000000	                              mov edi, 0	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4005eba	      0xe800000000	                          call 0x4005ebf	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4005ebf	    0x488b9d800000	            mov rbx, qword [rbp + 0x80] 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4005ec6	          0x4885db	                           test rbx, rbx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005ec9	     0xf85d4fdffff	                           jne 0x4005ca3	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4005ecf	    0x488b9d980000	            mov rbx, qword [rbp + 0x98] 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4005ed6	    0x48c785800000	               mov qword [rbp + 0x80], 0	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4005ee1	          0x4885db	                           test rbx, rbx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005ee4	     0xf858efeffff	                           jne 0x4005d78	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005eea	    0x48c785980000	               mov qword [rbp + 0x98], 0	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4005ef5	    0xc785b8000000	               mov dword [rbp + 0xb8], 1	      3792	dwarf2.c	FUNCTION_53
0x4005eff	      0xe932ffffff	                           jmp 0x4005e36	      3792	dwarf2.c	FUNCTION_53
0x4005f04	         0xf1f4000	                         nop dword [rax]	      3792	dwarf2.c	FUNCTION_53
0x4005f08	      0xbea10e0000	                          mov esi, 0xea1	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4005f0d	      0xbf00000000	                              mov edi, 0	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4005f12	      0xe800000000	                          call 0x4005f17	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4005f17	      0xe953fdffff	                           jmp 0x4005c6f	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4005f1c	          0x4c89e6	                            mov rsi, r12	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4005f1f	          0x4889ef	                            mov rdi, rbp	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4005f22	      0xe8c9baffff	               call sym.decode_line_info	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4005f27	          0x4885c0	                           test rax, rax	      3655	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4005f2a	        0x48894578	            mov qword [rbp + 0x78], rax 	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4005f2e	     0xf8457ffffff	                            je 0x4005e8b	      3655	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4005f34	        0x488b4570	            mov rax, qword [rbp + 0x70] 	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4005f38	        0x48394568	            cmp qword [rbp + 0x68], rax 	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4005f3c	     0xf8343fdffff	                           jae 0x4005c85	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4005f42	          0x4889ef	                            mov rdi, rbp	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4005f45	      0xe846e2ffff	          call sym.scan_unit_for_symbols	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4005f4a	            0x85c0	                           test eax, eax	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4005f4c	     0xf8439ffffff	                            je 0x4005e8b	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4005f52	      0xe92efdffff	                           jmp 0x4005c85	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4005f57	        0x488b6f08	                mov rbp, qword [rdi + 8]	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x4005f5b	      0xe9defcffff	                           jmp 0x4005c3e	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x4005f60	      0xb801000000	                              mov eax, 1	      4122	dwarf2.c	FUNCTION_60	IF_1
0x4005f65	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
0x4005f66	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	      4142	dwarf2.c	FUNCTION_60
0x4005f6d	          0x4885c0	                           test rax, rax	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005f70	     0xf8474ffffff	                            je 0x4005eea	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005f76	      0xbe01000000	                              mov esi, 1	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005f7b	      0xe98cfeffff	                           jmp 0x4005e0c	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4005f80	    0x48c785980000	               mov qword [rbp + 0x98], 0	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4005f8b	    0xc785b8000000	               mov dword [rbp + 0xb8], 1	      3792	dwarf2.c	FUNCTION_53
0x4005f95	      0xe9f8feffff	                           jmp 0x4005e92	      3792	dwarf2.c	FUNCTION_53
0x4005f9a	    0x48c785800000	               mov qword [rbp + 0x80], 0	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4005fa5	      0xe9e8feffff	                           jmp 0x4005e92	      3770	dwarf2.c	FUNCTION_53	CALL_6
decode_line_info	functions,0:DO,0:SWITCH,2:WHILE,5:ELSE,8:IF,42:FOR,2:CALL,81	1465
0x40019f0	            0x4157	                                push r15	      2012	dwarf2.c	FUNCTION_35
0x40019f2	            0x4156	                                push r14	      2012	dwarf2.c	FUNCTION_35
0x40019f4	          0x4889f8	                            mov rax, rdi	      2012	dwarf2.c	FUNCTION_35
0x40019f7	            0x4155	                                push r13	      2012	dwarf2.c	FUNCTION_35
0x40019f9	            0x4154	                                push r12	      2012	dwarf2.c	FUNCTION_35
0x40019fb	              0x55	                                push rbp	      2012	dwarf2.c	FUNCTION_35
0x40019fc	              0x53	                                push rbx	      2012	dwarf2.c	FUNCTION_35
0x40019fd	          0x4889f3	                            mov rbx, rsi	      2012	dwarf2.c	FUNCTION_35
0x4001a00	    0x4c8d8b980000	                    lea r9, [rbx + 0x98]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a07	    0x4c8d83900000	                    lea r8, [rbx + 0x90]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a0e	    0x4881ecc80000	                           sub rsp, 0xc8	      2012	dwarf2.c	FUNCTION_35
0x4001a15	        0x488b5678	            mov rdx, qword [rsi + 0x78] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a19	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      2012	dwarf2.c	FUNCTION_35
0x4001a22	    0x48898c24b800	             mov qword [rsp + 0xb8], rcx	      2012	dwarf2.c	FUNCTION_35
0x4001a2a	            0x31c9	                            xor ecx, ecx	      2012	dwarf2.c	FUNCTION_35
0x4001a2c	        0x488b4860	            mov rcx, qword [rax + 0x60] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a30	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a34	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      2012	dwarf2.c	FUNCTION_35
0x4001a39	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      2013	dwarf2.c	FUNCTION_35
0x4001a3d	        0x488d7050	                   lea rsi, [rax + 0x50]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a41	        0x48893c24	                    mov qword [rsp], rdi	      2013	dwarf2.c	FUNCTION_35
0x4001a45	      0xe8f6e5ffff	                   call sym.read_section	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a4a	            0x85c0	                           test eax, eax	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a4c	     0xf8430010000	                            je 0x4001b82	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001a52	        0x4c8b3424	                    mov r14, qword [rsp]	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001a56	      0xbe40000000	                           mov esi, 0x40	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001a5b	          0x4c89f7	                            mov rdi, r14	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001a5e	      0xe800000000	                          call 0x4001a63	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001a63	          0x4885c0	                           test rax, rax	      2031	dwarf2.c	FUNCTION_35	IF_2
0x4001a66	          0x4989c7	                            mov r15, rax	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001a69	     0xf8413010000	                            je 0x4001b82	      2031	dwarf2.c	FUNCTION_35	IF_2
0x4001a6f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2034	dwarf2.c	FUNCTION_35
0x4001a74	    0x4c8ba3980000	            mov r12, qword [rbx + 0x98] 	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001a7b	          0x4d8937	                    mov qword [r15], r14	      2033	dwarf2.c	FUNCTION_35
0x4001a7e	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2034	dwarf2.c	FUNCTION_35
0x4001a82	        0x4983fc0f	                            cmp r12, 0xf	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001a86	    0x41c747080000	                  mov dword [r15 + 8], 0	      2036	dwarf2.c	FUNCTION_35
0x4001a8e	    0x49c747280000	               mov qword [r15 + 0x28], 0	      2037	dwarf2.c	FUNCTION_35
0x4001a96	    0x41c7470c0000	                mov dword [r15 + 0xc], 0	      2039	dwarf2.c	FUNCTION_35
0x4001a9e	    0x49c747200000	               mov qword [r15 + 0x20], 0	      2040	dwarf2.c	FUNCTION_35
0x4001aa6	    0x41c747100000	               mov dword [r15 + 0x10], 0	      2042	dwarf2.c	FUNCTION_35
0x4001aae	        0x49894718	             mov qword [r15 + 0x18], rax	      2034	dwarf2.c	FUNCTION_35
0x4001ab2	    0x49c747300000	               mov qword [r15 + 0x30], 0	      2043	dwarf2.c	FUNCTION_35
0x4001aba	    0x49c747380000	               mov qword [r15 + 0x38], 0	      2045	dwarf2.c	FUNCTION_35
0x4001ac2	     0xf86a30f0000	                           jbe 0x4002a6b	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001ac8	    0x488b9b900000	            mov rbx, qword [rbx + 0x90] 	      2055	dwarf2.c	FUNCTION_35
0x4001acf	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2055	dwarf2.c	FUNCTION_35
0x4001ad4	          0x4889dd	                            mov rbp, rbx	      2055	dwarf2.c	FUNCTION_35
0x4001ad7	        0x48036860	             add rbp, qword [rax + 0x60]	      2055	dwarf2.c	FUNCTION_35
0x4001adb	          0x4c01e3	                            add rbx, r12	      2056	dwarf2.c	FUNCTION_35
0x4001ade	        0x4c8d6504	                      lea r12, [rbp + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001ae2	          0x4c39e3	                            cmp rbx, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001ae5	     0xf83c2000000	                           jae 0x4001bad	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001aeb	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001af0	    0x41be04000000	                             mov r14d, 4	      2061	dwarf2.c	FUNCTION_35
0x4001af6	    0x80b8ac000000	                cmp byte [rax + 0xac], 8	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001afd	     0xf842d060000	                            je 0x4002130	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001b03	          0x4531ed	                          xor r13d, r13d	      2073	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001b06	      0x498d5c2402	                      lea rbx, [r12 + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001b0b	          0x4d01e5	                            add r13, r12	      2087	dwarf2.c	FUNCTION_35
0x4001b0e	            0x31ed	                            xor ebp, ebp	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001b10	          0x4c39eb	                            cmp rbx, r13	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001b13	     0xf86ce000000	                           jbe 0x4001be7	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001b19	      0xbe00000000	                              mov esi, 0	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4001b1e	      0xba05000000	                              mov edx, 5	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4001b23	      0xbf00000000	                              mov edi, 0	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4001b28	      0xe800000000	                          call 0x4001b2d	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4001b2d	            0x89ee	                            mov esi, ebp	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x4001b2f	          0x4889c7	                            mov rdi, rax	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4001b32	            0x31c0	                            xor eax, eax	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4001b34	      0xe800000000	                          call 0x4001b39	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4001b39	      0xbf11000000	                           mov edi, 0x11	      2123	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_23
0x4001b3e	      0xe800000000	                          call 0x4001b43	      2123	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_23
0x4001b43	            0x31c0	                            xor eax, eax	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4001b45	            0xeb3d	                           jmp 0x4001b84	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4001b47	    0x660f1f840000	                    nop word [rax + rax]	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4001b50	        0x488b4708	                mov rax, qword [rdi + 8]	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x4001b54	        0x49894730	             mov qword [r15 + 0x30], rax	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x4001b58	      0xe800000000	                          call 0x4001b5d	      2448	dwarf2.c	FUNCTION_35	WHILE_5	CALL_79
0x4001b5d	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4001b61	          0x4885ff	                           test rdi, rdi	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4001b64	            0x75ea	                           jne 0x4001b50	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4001b66	        0x498b7f28	            mov rdi, qword [r15 + 0x28] 	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4001b6a	          0x4885ff	                           test rdi, rdi	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4001b6d	            0x7405	                            je 0x4001b74	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4001b6f	      0xe800000000	                          call 0x4001b74	      2451	dwarf2.c	FUNCTION_35	CALL_80
0x4001b74	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4001b78	          0x4885ff	                           test rdi, rdi	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4001b7b	            0x7405	                            je 0x4001b82	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4001b7d	      0xe800000000	                          call 0x4001b82	      2453	dwarf2.c	FUNCTION_35	CALL_81
0x4001b82	            0x31c0	                            xor eax, eax	      2454	dwarf2.c	FUNCTION_35
0x4001b84	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      2455	dwarf2.c	FUNCTION_35
0x4001b8c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2455	dwarf2.c	FUNCTION_35
0x4001b95	     0xf8500160000	                           jne 0x400319b	      2455	dwarf2.c	FUNCTION_35
0x4001b9b	    0x4881c4c80000	                           add rsp, 0xc8	      2455	dwarf2.c	FUNCTION_35
0x4001ba2	              0x5b	                                 pop rbx	      2455	dwarf2.c	FUNCTION_35
0x4001ba3	              0x5d	                                 pop rbp	      2455	dwarf2.c	FUNCTION_35
0x4001ba4	            0x415c	                                 pop r12	      2455	dwarf2.c	FUNCTION_35
0x4001ba6	            0x415d	                                 pop r13	      2455	dwarf2.c	FUNCTION_35
0x4001ba8	            0x415e	                                 pop r14	      2455	dwarf2.c	FUNCTION_35
0x4001baa	            0x415f	                                 pop r15	      2455	dwarf2.c	FUNCTION_35
0x4001bac	              0xc3	                                     ret	      2455	dwarf2.c	FUNCTION_35
0x4001bad	        0x488b0424	                    mov rax, qword [rsp]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4001bb1	          0x4889ef	                            mov rdi, rbp	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4001bb4	        0x488b4008	                mov rax, qword [rax + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4001bb8	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4001bbb	          0x4189c5	                           mov r13d, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4001bbe	      0xb8ffffffff	                     mov eax, 0xffffffff	      2062	dwarf2.c	FUNCTION_35	IF_4
0x4001bc3	          0x4939c5	                            cmp r13, rax	      2062	dwarf2.c	FUNCTION_35	IF_4
0x4001bc6	     0xf8505140000	                           jne 0x4002fd1	      2062	dwarf2.c	FUNCTION_35	IF_4
0x4001bcc	        0x4883c50c	                            add rbp, 0xc	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001bd0	          0x4839eb	                            cmp rbx, rbp	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001bd3	     0xf8355070000	                           jae 0x400232e	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001bd9	          0x4989ec	                            mov r12, rbp	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001bdc	    0x41be08000000	                             mov r14d, 8	      2066	dwarf2.c	FUNCTION_35	IF_4
0x4001be2	      0xe91cffffff	                           jmp 0x4001b03	      2066	dwarf2.c	FUNCTION_35	IF_4
0x4001be7	        0x488b0424	                    mov rax, qword [rsp]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4001beb	          0x4c89e7	                            mov rdi, r12	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4001bee	        0x488b4008	                mov rax, qword [rax + 8]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4001bf2	          0xff5050	                 call qword [rax + 0x50]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4001bf5	          0x4889c5	                            mov rbp, rax	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4001bf8	          0x8d40fe	                      lea eax, [rax - 2]	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4001bfb	        0x6683f803	                               cmp ax, 3	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4001bff	     0xf8739160000	                            ja 0x400323e	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4001c05	        0x6683fd05	                               cmp bp, 5	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c09	          0x4489f2	                           mov edx, r14d	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c0c	            0x7472	                            je 0x4001c80	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c0e	            0x31c0	                            xor eax, eax	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c10	        0x6683fd04	                               cmp bp, 4	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c14	           0xf94c0	                                 sete al	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c17	      0x488d441005	                lea rax, [rax + rdx + 5]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c1c	          0x4801d8	                            add rax, rbx	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c1f	          0x4939c5	                            cmp r13, rax	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c22	     0xf860a100000	                           jbe 0x4002c32	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c28	        0x4183fe04	                             cmp r14d, 4	      2128	dwarf2.c	FUNCTION_35	IF_11
0x4001c2c	     0xf84ed080000	                            je 0x400251f	      2128	dwarf2.c	FUNCTION_35	IF_11
0x4001c32	        0x488d4308	                      lea rax, [rbx + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001c36	          0x4939c5	                            cmp r13, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001c39	     0xf83a7090000	                           jae 0x40025e6	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001c3f	          0x4801d3	                            add rbx, rdx	      2132	dwarf2.c	FUNCTION_35
0x4001c42	    0xc74424300000	               mov dword [rsp + 0x30], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4001c4a	        0x488d4301	                      lea rax, [rbx + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c4e	          0x4939c5	                            cmp r13, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c51	            0x7207	                            jb 0x4001c5a	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c53	           0xfb633	                   movzx esi, byte [rbx]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001c56	        0x89742430	             mov dword [rsp + 0x30], esi	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001c5a	        0x6683fd03	                               cmp bp, 3	      2137	dwarf2.c	FUNCTION_35	IF_12
0x4001c5e	            0x7660	                           jbe 0x4001cc0	      2137	dwarf2.c	FUNCTION_35	IF_12
0x4001c60	        0x488d4302	                      lea rax, [rbx + 2]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c64	          0x4939c5	                            cmp r13, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c67	     0xf8370040000	                           jae 0x40020dd	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c6d	      0xba05000000	                              mov edx, 5	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x4001c72	      0xbe00000000	                              mov esi, 0	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x4001c77	      0xe98f040000	                           jmp 0x400210b	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x4001c7c	         0xf1f4000	                         nop dword [rax]	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x4001c80	      0x488d441308	                lea rax, [rbx + rdx + 8]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c85	          0x4939c5	                            cmp r13, rax	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c88	     0xf86a40f0000	                           jbe 0x4002c32	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4001c8e	      0x498d5c2404	                      lea rbx, [r12 + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c93	          0x4939dd	                            cmp r13, rbx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c96	            0x7290	                            jb 0x4001c28	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001c98	    0x450fb6642403	              movzx r12d, byte [r12 + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001c9e	          0x4585e4	                         test r12d, r12d	      2118	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4001ca1	            0x7485	                            je 0x4001c28	      2118	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4001ca3	      0xbe00000000	                              mov esi, 0	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4001ca8	      0xba05000000	                              mov edx, 5	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4001cad	      0xbf00000000	                              mov edi, 0	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4001cb2	      0xe800000000	                          call 0x4001cb7	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4001cb7	          0x4489e6	                           mov esi, r12d	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4001cba	      0xe970feffff	                           jmp 0x4001b2f	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4001cbf	              0x90	                                     nop	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4001cc0	      0xc644243701	                mov byte [rsp + 0x37], 1	      2143	dwarf2.c	FUNCTION_35	ELSE_3
0x4001cc5	        0x488d5002	                      lea rdx, [rax + 2]	       596	dwarf2.c	FUNCTION_7	IF_1
0x4001cc9	    0xc74424400000	               mov dword [rsp + 0x40], 0	       597	dwarf2.c	FUNCTION_7	IF_1
0x4001cd1	          0x4939d5	                            cmp r13, rdx	       596	dwarf2.c	FUNCTION_7	IF_1
0x4001cd4	            0x7211	                            jb 0x4001ce7	       596	dwarf2.c	FUNCTION_7	IF_1
0x4001cd6	         0xfb67801	               movzx edi, byte [rax + 1]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4001cda	          0x8d5780	                   lea edx, [rdi - 0x80]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4001cdd	           0xfb6d2	                           movzx edx, dl	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4001ce0	          0x8d4a80	                   lea ecx, [rdx - 0x80]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4001ce3	        0x894c2440	             mov dword [rsp + 0x40], ecx	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4001ce7	        0x488d5003	                      lea rdx, [rax + 3]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001ceb	          0x4939d5	                            cmp r13, rdx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001cee	     0xf82ce030000	                            jb 0x40020c2	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001cf4	         0xfb67002	               movzx esi, byte [rax + 2]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001cf8	        0x4c8d6004	                      lea r12, [rax + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001cfc	          0x4d39e5	                            cmp r13, r12	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001cff	      0x4088742436	              mov byte [rsp + 0x36], sil	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001d04	        0x89742444	             mov dword [rsp + 0x44], esi	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001d08	     0xf82ea030000	                            jb 0x40020f8	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001d0e	         0xfb67803	               movzx edi, byte [rax + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001d12	        0x400fb6f7	                          movzx esi, dil	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4001d16	      0x40887c241b	              mov byte [rsp + 0x1b], dil	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001d1b	        0x897c241c	             mov dword [rsp + 0x1c], edi	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001d1f	      0x498d4434ff	                lea rax, [r12 + rsi - 1]	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4001d24	          0x4939c5	                            cmp r13, rax	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4001d27	     0xf86d4030000	                           jbe 0x4002101	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4001d2d	        0x488b3c24	                    mov rdi, qword [rsp]	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4001d31	      0xe800000000	                          call 0x4001d36	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4001d36	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d3a	      0x4889442458	             mov qword [rsp + 0x58], rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4001d3f	          0xc60001	                       mov byte [rax], 1	      2175	dwarf2.c	FUNCTION_35
0x4001d42	          0x83fe01	                              cmp esi, 1	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d45	     0xf86fb140000	                           jbe 0x4003246	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d4b	          0x8d56fe	                      lea edx, [rsi - 2]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d4e	        0x4883c001	                              add rax, 1	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d52	      0x498d5c1401	                lea rbx, [r12 + rdx + 1]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d57	    0x660f1f840000	                    nop word [rax + rax]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d60	        0x4983c401	                              add r12, 1	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001d64	            0x31d2	                            xor edx, edx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001d66	          0x4d39e5	                            cmp r13, r12	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001d69	            0x7206	                            jb 0x4001d71	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001d6b	    0x410fb65424ff	               movzx edx, byte [r12 - 1]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001d71	            0x8810	                      mov byte [rax], dl	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4001d73	        0x4883c001	                              add rax, 1	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4001d77	          0x4939dc	                            cmp r12, rbx	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d7a	            0x75e4	                           jne 0x4001d60	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4001d7c	        0x6683fd05	                               cmp bp, 5	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4001d80	     0xf84f0070000	                            je 0x4002576	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4001d86	          0x4939dd	                            cmp r13, rbx	       660	dwarf2.c	FUNCTION_12	IF_1
0x4001d89	     0xf86bf140000	                           jbe 0x400324e	       660	dwarf2.c	FUNCTION_12	IF_1
0x4001d8f	          0x803b00	                       cmp byte [rbx], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001d92	      0xbdcdcccccc	                     mov ebp, 0xcccccccd	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001d97	     0xf8409030000	                            je 0x40020a6	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001d9d	           0xf1f00	                         nop dword [rax]	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001da0	        0x488d4301	                      lea rax, [rbx + 1]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001da4	            0xeb18	                           jmp 0x4001dbe	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001da6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001db0	        0x4883c001	                              add rax, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001db4	        0x8078ff00	                   cmp byte [rax - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001db8	     0xf840a010000	                            je 0x4001ec8	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001dbe	          0x4939c5	                            cmp r13, rax	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4001dc1	            0x77ed	                            ja 0x4001db0	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4001dc3	          0x4829d8	                            sub rax, rbx	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4001dc6	          0x4189c6	                           mov r14d, eax	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4001dc9	    0x898424a00000	             mov dword [rsp + 0xa0], eax	       679	dwarf2.c	FUNCTION_12
0x4001dd0	          0x4901de	                            add r14, rbx	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x4001dd3	          0x4d39f5	                            cmp r13, r14	       660	dwarf2.c	FUNCTION_12	IF_1
0x4001dd6	     0xf8676020000	                           jbe 0x4002052	       660	dwarf2.c	FUNCTION_12	IF_1
0x4001ddc	        0x41803e00	                       cmp byte [r14], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001de0	     0xf840d070000	                            je 0x40024f3	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001de6	        0x498d6e01	                      lea rbp, [r14 + 1]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001dea	            0xeb12	                           jmp 0x4001dfe	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001dec	         0xf1f4000	                         nop dword [rax]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001df0	        0x4883c501	                              add rbp, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001df4	        0x807dff00	                   cmp byte [rbp - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001df8	     0xf8422010000	                            je 0x4001f20	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001dfe	          0x4c39ed	                            cmp rbp, r13	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4001e01	            0x72ed	                            jb 0x4001df0	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4001e03	          0x4c29f5	                            sub rbp, r14	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4001e06	          0x4189e9	                            mov r9d, ebp	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4001e09	    0x89ac24a00000	             mov dword [rsp + 0xa0], ebp	       679	dwarf2.c	FUNCTION_12
0x4001e10	        0x4f8d240e	                     lea r12, [r14 + r9]	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x4001e14	       0xfb6442437	           movzx eax, byte [rsp + 0x37] 	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4001e19	      0x4c897c2428	             mov qword [rsp + 0x28], r15	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4001e1e	          0x4d89e7	                            mov r15, r12	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4001e21	          0x4d89ec	                            mov r12, r13	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4001e24	        0x89442450	             mov dword [rsp + 0x50], eax	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4001e28	      0xb8ff000000	                           mov eax, 0xff	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4001e2d	        0x2b44241c	             sub eax, dword [rsp + 0x1c]	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4001e31	        0x89442470	             mov dword [rsp + 0x70], eax	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4001e35	          0x4d39fc	                            cmp r12, r15	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4001e38	     0xf86da0d0000	                           jbe 0x4002c18	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4001e3e	          0x4c89fb	                            mov rbx, r15	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4001e41	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4001e46	    0x48c744243800	               mov qword [rsp + 0x38], 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4001e4f	        0x448b4808	                mov r9d, dword [rax + 8]	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4001e53	          0x4585c9	                           test r9d, r9d	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4001e56	     0xf85f6070000	                           jne 0x4002652	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4001e5c	          0x4c39e3	                            cmp rbx, r12	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e5f	     0xf83fc020000	                           jae 0x4002161	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e65	          0x4531ed	                          xor r13d, r13d	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e68	          0x4531f6	                          xor r14d, r14d	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e6b	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e73	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e7a	    0xc74424080100	                  mov dword [rsp + 8], 1	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e82	      0xc644241000	                mov byte [rsp + 0x10], 0	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e87	    0xc74424480000	               mov dword [rsp + 0x48], 0	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e8f	          0x4d89ef	                            mov r15, r13	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e92	    0x660f1f440000	                    nop word [rax + rax]	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4001e98	        0x4c8d6b01	                      lea r13, [rbx + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001e9c	          0x4d39ec	                            cmp r12, r13	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001e9f	     0xf82eb040000	                            jb 0x4002390	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001ea5	           0xfb603	                   movzx eax, byte [rbx]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001ea8	        0x3a44241b	               cmp al, byte [rsp + 0x1b]	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4001eac	     0xf83eb040000	                           jae 0x400239d	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4001eb2	            0x3c09	                               cmp al, 9	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4001eb4	     0xf8762050000	                            ja 0x400241c	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4001eba	    0xff24c5000000	                       jmp qword [rax*8]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4001ec1	     0xf1f80000000	                         nop dword [rax]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4001ec8	          0x4829d8	                            sub rax, rbx	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001ecb	    0x898424a00000	             mov dword [rsp + 0xa0], eax	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001ed2	        0x418b4f0c	              mov ecx, dword [r15 + 0xc]	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001ed6	            0x89c0	                            mov eax, eax	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x4001ed8	        0x4c8d2403	                    lea r12, [rbx + rax]	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x4001edc	            0x89c8	                            mov eax, ecx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001ede	            0xf7e5	                                 mul ebp	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001ee0	          0xc1ea02	                              shr edx, 2	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001ee3	          0x8d0492	                  lea eax, [rdx + rdx*4]	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001ee6	            0x39c1	                            cmp ecx, eax	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001ee8	     0xf8412010000	                            je 0x4002000	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001eee	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4001ef2	          0x8d5101	                      lea edx, [rcx + 1]	      1841	dwarf2.c	FUNCTION_31
0x4001ef5	          0x4d39e5	                            cmp r13, r12	       660	dwarf2.c	FUNCTION_12	IF_1
0x4001ef8	        0x4189570c	              mov dword [r15 + 0xc], edx	      1841	dwarf2.c	FUNCTION_31
0x4001efc	        0x48891cc8	            mov qword [rax + rcx*8], rbx	      1841	dwarf2.c	FUNCTION_31
0x4001f00	     0xf862f010000	                           jbe 0x4002035	       660	dwarf2.c	FUNCTION_12	IF_1
0x4001f06	      0x41803c2400	                       cmp byte [r12], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001f0b	     0xf8498010000	                            je 0x40020a9	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001f11	          0x4c89e3	                            mov rbx, r12	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001f14	      0xe987feffff	                           jmp 0x4001da0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001f19	     0xf1f80000000	                         nop dword [rax]	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001f20	          0x4c29f5	                            sub rbp, r14	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001f23	        0x488b3c24	                    mov rdi, qword [rsp]	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4001f27	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4001f2f	    0x89ac24a00000	             mov dword [rsp + 0xa0], ebp	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001f36	            0x89ed	                            mov ebp, ebp	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4001f38	            0x31c9	                            xor ecx, ecx	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4001f3a	        0x498d1c2e	                    lea rbx, [r14 + rbp]	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4001f3e	          0x4d89e8	                             mov r8, r13	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4001f41	          0x4889de	                            mov rsi, rbx	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4001f44	      0xe800000000	                          call 0x4001f49	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4001f49	    0x448b8c24a000	            mov r9d, dword [rsp + 0xa0] 	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4001f51	        0x488b3c24	                    mov rdi, qword [rsp]	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4001f55	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4001f5d	            0x31c9	                            xor ecx, ecx	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4001f5f	          0x4d89e8	                             mov r8, r13	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4001f62	          0x4889c5	                            mov rbp, rax	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4001f65	        0x4e8d240b	                     lea r12, [rbx + r9]	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4001f69	          0x4c89e6	                            mov rsi, r12	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4001f6c	      0xe800000000	                          call 0x4001f71	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4001f71	          0x4889c3	                            mov rbx, rax	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4001f74	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4001f7b	        0x488b3c24	                    mov rdi, qword [rsp]	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4001f7f	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4001f87	            0x31c9	                            xor ecx, ecx	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4001f89	          0x4d89e8	                             mov r8, r13	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4001f8c	          0x4901c4	                            add r12, rax	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4001f8f	          0x4c89e6	                            mov rsi, r12	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4001f92	      0xe800000000	                          call 0x4001f97	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4001f97	          0x4989c0	                             mov r8, rax	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4001f9a	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4001fa1	        0x418b4f08	                mov ecx, dword [r15 + 8]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4001fa5	        0x4d8d0c04	                     lea r9, [r12 + rax]	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4001fa9	      0xb8cdcccccc	                     mov eax, 0xcccccccd	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4001fae	            0xf7e1	                                 mul ecx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4001fb0	          0xc1ea02	                              shr edx, 2	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4001fb3	          0x8d0492	                  lea eax, [rdx + rdx*4]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4001fb6	            0x39c1	                            cmp ecx, eax	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4001fb8	     0xf84aa000000	                            je 0x4002068	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4001fbe	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4001fc2	            0x89ca	                            mov edx, ecx	      1875	dwarf2.c	FUNCTION_33
0x4001fc4	          0x83c101	                              add ecx, 1	      1879	dwarf2.c	FUNCTION_33
0x4001fc7	          0x4d39cd	                             cmp r13, r9	       660	dwarf2.c	FUNCTION_12	IF_1
0x4001fca	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      1875	dwarf2.c	FUNCTION_33
0x4001fce	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1875	dwarf2.c	FUNCTION_33
0x4001fd2	          0x4c8930	                    mov qword [rax], r14	      1875	dwarf2.c	FUNCTION_33
0x4001fd5	          0x896808	                mov dword [rax + 8], ebp	      1876	dwarf2.c	FUNCTION_33
0x4001fd8	          0x89580c	              mov dword [rax + 0xc], ebx	      1877	dwarf2.c	FUNCTION_33
0x4001fdb	        0x44894010	             mov dword [rax + 0x10], r8d	      1878	dwarf2.c	FUNCTION_33
0x4001fdf	        0x41894f08	                mov dword [r15 + 8], ecx	      1879	dwarf2.c	FUNCTION_33
0x4001fe3	     0xf8620050000	                           jbe 0x4002509	       660	dwarf2.c	FUNCTION_12	IF_1
0x4001fe9	        0x41803900	                        cmp byte [r9], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001fed	     0xf84fd040000	                            je 0x40024f0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001ff3	          0x4d89ce	                             mov r14, r9	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001ff6	      0xe9ebfdffff	                           jmp 0x4001de6	       666	dwarf2.c	FUNCTION_12	IF_2
0x4001ffb	       0xf1f440000	                   nop dword [rax + rax]	       666	dwarf2.c	FUNCTION_12	IF_2
0x4002000	          0x8d7105	                      lea esi, [rcx + 5]	      1832	dwarf2.c	FUNCTION_31	IF_1
0x4002003	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x4002007	        0x48c1e603	                              shl rsi, 3	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x400200b	      0xe800000000	                          call 0x4002010	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x4002010	          0x4885c0	                           test rax, rax	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x4002013	     0xf8444fbffff	                            je 0x4001b5d	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x4002019	        0x418b4f0c	              mov ecx, dword [r15 + 0xc]	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x400201d	          0x4d39e5	                            cmp r13, r12	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002020	        0x49894720	             mov qword [r15 + 0x20], rax	      1838	dwarf2.c	FUNCTION_31	IF_1
0x4002024	          0x8d5101	                      lea edx, [rcx + 1]	      1841	dwarf2.c	FUNCTION_31
0x4002027	        0x4189570c	              mov dword [r15 + 0xc], edx	      1841	dwarf2.c	FUNCTION_31
0x400202b	        0x48891cc8	            mov qword [rax + rcx*8], rbx	      1841	dwarf2.c	FUNCTION_31
0x400202f	     0xf87d1feffff	                            ja 0x4001f06	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002035	          0x4531f6	                          xor r14d, r14d	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002038	          0x4c89e3	                            mov rbx, r12	       662	dwarf2.c	FUNCTION_12	IF_1
0x400203b	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002046	          0x4901de	                            add r14, rbx	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x4002049	          0x4d39f5	                            cmp r13, r14	       660	dwarf2.c	FUNCTION_12	IF_1
0x400204c	     0xf878afdffff	                            ja 0x4001ddc	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002052	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x400205d	          0x4531c9	                            xor r9d, r9d	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002060	      0xe9abfdffff	                           jmp 0x4001e10	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002065	           0xf1f00	                         nop dword [rax]	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002068	          0x8d4105	                      lea eax, [rcx + 5]	      1866	dwarf2.c	FUNCTION_33	IF_1
0x400206b	        0x498b7f28	            mov rdi, qword [r15 + 0x28] 	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x400206f	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002074	      0x4c89442408	                 mov qword [rsp + 8], r8	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002079	        0x488d3440	                  lea rsi, [rax + rax*2]	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x400207d	        0x48c1e603	                              shl rsi, 3	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002081	      0xe800000000	                          call 0x4002086	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002086	          0x4885c0	                           test rax, rax	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4002089	     0xf84cefaffff	                            je 0x4001b5d	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x400208f	        0x49894728	             mov qword [r15 + 0x28], rax	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002093	        0x418b4f08	                mov ecx, dword [r15 + 8]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002097	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x400209c	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x40020a1	      0xe91cffffff	                           jmp 0x4001fc2	      1872	dwarf2.c	FUNCTION_33	IF_1
0x40020a6	          0x4989dc	                            mov r12, rbx	       666	dwarf2.c	FUNCTION_12	IF_2
0x40020a9	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x40020b4	          0x4c89e3	                            mov rbx, r12	       668	dwarf2.c	FUNCTION_12	IF_2
0x40020b7	    0x41be01000000	                             mov r14d, 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x40020bd	      0xe90efdffff	                           jmp 0x4001dd0	       668	dwarf2.c	FUNCTION_12	IF_2
0x40020c2	        0x4c8d6004	                      lea r12, [rax + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40020c6	          0x4d39e5	                            cmp r13, r12	       588	dwarf2.c	FUNCTION_6	IF_1
0x40020c9	            0x7236	                            jb 0x4002101	       588	dwarf2.c	FUNCTION_6	IF_1
0x40020cb	    0xc74424440000	               mov dword [rsp + 0x44], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x40020d3	      0xc644243600	                mov byte [rsp + 0x36], 0	       588	dwarf2.c	FUNCTION_6	IF_1
0x40020d8	      0xe931fcffff	                           jmp 0x4001d0e	       588	dwarf2.c	FUNCTION_6	IF_1
0x40020dd	         0xfb67b01	               movzx edi, byte [rbx + 1]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40020e1	          0x4084ff	                           test dil, dil	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x40020e4	      0x40887c2437	              mov byte [rsp + 0x37], dil	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40020e9	     0xf85d6fbffff	                           jne 0x4001cc5	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x40020ef	      0xe979fbffff	                           jmp 0x4001c6d	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x40020f4	         0xf1f4000	                         nop dword [rax]	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x40020f8	          0x4939d5	                            cmp r13, rdx	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40020fb	     0xf8748040000	                            ja 0x4002549	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4002101	      0xba05000000	                              mov edx, 5	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002106	      0xbe00000000	                              mov esi, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x400210b	      0xbf00000000	                              mov edi, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002110	      0xe800000000	                          call 0x4002115	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002115	          0x4889c7	                            mov rdi, rax	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002118	            0x31c0	                            xor eax, eax	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x400211a	      0xe800000000	                          call 0x400211f	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x400211f	      0xbf11000000	                           mov edi, 0x11	      2168	dwarf2.c	FUNCTION_35	IF_14	CALL_37
0x4002124	      0xe800000000	                          call 0x4002129	      2168	dwarf2.c	FUNCTION_35	IF_14	CALL_37
0x4002129	            0x31c0	                            xor eax, eax	      2169	dwarf2.c	FUNCTION_35	IF_14
0x400212b	      0xe954faffff	                           jmp 0x4001b84	      2169	dwarf2.c	FUNCTION_35	IF_14
0x4002130	        0x4883c508	                              add rbp, 8	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002134	          0x4839eb	                            cmp rbx, rbp	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002137	     0xf83fe0d0000	                           jae 0x4002f3b	       612	dwarf2.c	FUNCTION_9	IF_1
0x400213d	          0x4989ec	                            mov r12, rbp	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002140	          0x4531ed	                          xor r13d, r13d	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002143	    0x41be08000000	                             mov r14d, 8	      2073	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002149	      0xe9b8f9ffff	                           jmp 0x4001b06	      2073	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x400214e	          0x4c89eb	                            mov rbx, r13	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002151	     0xf1f80000000	                         nop dword [rax]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002158	          0x4939dc	                            cmp r12, rbx	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x400215b	     0xf8737fdffff	                            ja 0x4001e98	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002161	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002167	          0x4989df	                            mov r15, rbx	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x400216a	     0xf84a80a0000	                            je 0x4002c18	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002170	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002175	      0xe800000000	                          call 0x400217a	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x400217a	      0xe9b6fcffff	                           jmp 0x4001e35	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x400217f	              0x90	                                     nop	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002180	        0x4883c303	                              add rbx, 3	       604	dwarf2.c	FUNCTION_8	IF_1
0x4002184	            0x31c0	                            xor eax, eax	       604	dwarf2.c	FUNCTION_8	IF_1
0x4002186	          0x4939dc	                            cmp r12, rbx	       604	dwarf2.c	FUNCTION_8	IF_1
0x4002189	     0xf831c080000	                           jae 0x40029ab	       604	dwarf2.c	FUNCTION_8	IF_1
0x400218f	          0x4901c7	                            add r15, rax	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4002192	      0xc644241000	                mov byte [rsp + 0x10], 0	      2421	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002197	            0xebbf	                           jmp 0x4002158	      2423	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002199	        0x488b3c24	                    mov rdi, qword [rsp]	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400219d	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x40021a5	          0x4d89e0	                             mov r8, r12	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x40021a8	            0x31c9	                            xor ecx, ecx	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x40021aa	          0x4c89ee	                            mov rsi, r13	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x40021ad	      0xe800000000	                          call 0x40021b2	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x40021b2	    0x8b9c24a00000	            mov ebx, dword [rsp + 0xa0] 	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40021b9	        0x89442448	             mov dword [rsp + 0x48], eax	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x40021bd	          0x4c01eb	                            add rbx, r13	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40021c0	            0xeb96	                           jmp 0x4002158	      2398	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40021c2	        0x488b3c24	                    mov rdi, qword [rsp]	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40021c6	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40021ce	            0x31c9	                            xor ecx, ecx	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40021d0	          0x4c89ee	                            mov rsi, r13	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40021d3	          0x4d89e0	                             mov r8, r12	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40021d6	      0xe800000000	                          call 0x40021db	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x40021db	    0x8b9c24a00000	            mov ebx, dword [rsp + 0xa0] 	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40021e2	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x40021e7	          0x4c01eb	                            add rbx, r13	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40021ea	          0x4885f6	                           test rsi, rsi	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x40021ed	            0x7412	                            je 0x4002201	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x40021ef	          0x4889f7	                            mov rdi, rsi	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x40021f2	      0x4889442438	             mov qword [rsp + 0x38], rax	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x40021f7	      0xe800000000	                          call 0x40021fc	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x40021fc	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x4002201	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002206	            0x89c6	                            mov esi, eax	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002208	      0xe8d3e2ffff	                call sym.concat_filename	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x400220d	      0x4889442438	             mov qword [rsp + 0x38], rax	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002212	      0xe941ffffff	                           jmp 0x4002158	      2392	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002217	        0x488b3c24	                    mov rdi, qword [rsp]	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x400221b	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4002223	          0x4d89e0	                             mov r8, r12	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4002226	      0xb901000000	                              mov ecx, 1	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x400222b	          0x4c89ee	                            mov rsi, r13	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x400222e	      0xe800000000	                          call 0x4002233	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4002233	         0x1442408	                add dword [rsp + 8], eax	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x4002237	    0x8b9c24a00000	            mov ebx, dword [rsp + 0xa0] 	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400223e	          0x4c01eb	                            add rbx, r13	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002241	      0xe912ffffff	                           jmp 0x4002158	      2379	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002246	            0x31c9	                            xor ecx, ecx	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002248	      0x807c243701	                cmp byte [rsp + 0x37], 1	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x400224d	          0x4d89e0	                             mov r8, r12	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002250	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002258	          0x4c89ee	                            mov rsi, r13	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x400225b	        0x488b3c24	                    mov rdi, qword [rsp]	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x400225f	     0xf846d070000	                            je 0x40029d2	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002265	      0xe800000000	                          call 0x400226a	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x400226a	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400226f	       0xfb64c2437	           movzx ecx, byte [rsp + 0x37] 	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4002274	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4002279	          0x4801d0	                            add rax, rdx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400227c	            0x31d2	                            xor edx, edx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400227e	          0x48f7f1	                                 div rcx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4002281	        0x490fafc2	                           imul rax, r10	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4002285	        0x88542410	               mov byte [rsp + 0x10], dl	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x4002289	          0x4989c7	                            mov r15, rax	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400228c	            0xeba9	                           jmp 0x4002237	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x400228e	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002293	            0x6a00	                                  push 0	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002295	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002299	              0x50	                                push rax	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400229a	      0x448b4c2458	            mov r9d, dword [rsp + 0x58] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400229f	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022a4	         0xf1f4000	                         nop dword [rax]	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022a8	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022ad	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022b2	          0x4c89fe	                            mov rsi, r15	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022b5	      0xe856dfffff	                  call sym.add_line_info	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022ba	            0x85c0	                           test eax, eax	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022bc	              0x5a	                                 pop rdx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022bd	              0x59	                                 pop rcx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022be	     0xf8487030000	                            je 0x400264b	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022c4	          0x4c39fd	                            cmp rbp, r15	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022c7	          0x4c89eb	                            mov rbx, r13	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x40022ca	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40022d2	        0x490f47ef	                          cmova rbp, r15	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40022d6	          0x4d39fe	                            cmp r14, r15	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40022d9	        0x4d0f42f7	                          cmovb r14, r15	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40022dd	      0xe976feffff	                           jmp 0x4002158	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40022e2	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x40022e6	            0x85c0	                           test eax, eax	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x40022e8	     0xf845d030000	                            je 0x400264b	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x40022ee	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40022f2	              0x99	                                     cdq	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40022f3	        0xf77c2444	                 idiv dword [rsp + 0x44]	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40022f7	      0x807c243701	                cmp byte [rsp + 0x37], 1	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40022fc	     0xf84be060000	                            je 0x40029c0	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002302	          0x4863d0	                         movsxd rdx, eax	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002305	       0xfb6442410	           movzx eax, byte [rsp + 0x10] 	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400230a	       0xfb64c2437	           movzx ecx, byte [rsp + 0x37] 	      2415	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400230f	          0x4c89eb	                            mov rbx, r13	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002312	          0x4801d0	                            add rax, rdx	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002315	            0x31d2	                            xor edx, edx	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002317	          0x48f7f1	                                 div rcx	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400231a	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400231e	        0x480fafc1	                           imul rax, rcx	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002322	        0x88542410	               mov byte [rsp + 0x10], dl	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002326	          0x4901c7	                            add r15, rax	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002329	      0xe92afeffff	                           jmp 0x4002158	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400232e	        0x488b0424	                    mov rax, qword [rsp]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4002332	          0x4c89e7	                            mov rdi, r12	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4002335	    0x41be08000000	                             mov r14d, 8	      2066	dwarf2.c	FUNCTION_35	IF_4
0x400233b	          0x4989ec	                            mov r12, rbp	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400233e	        0x488b4008	                mov rax, qword [rax + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4002342	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4002345	          0x4989c5	                            mov r13, rax	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4002348	          0x4c29e3	                            sub rbx, r12	      2076	dwarf2.c	FUNCTION_35	IF_6
0x400234b	          0x4c39eb	                            cmp rbx, r13	      2076	dwarf2.c	FUNCTION_35	IF_6
0x400234e	     0xf83b2f7ffff	                           jae 0x4001b06	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4002354	      0xba05000000	                              mov edx, 5	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002359	      0xbe00000000	                              mov esi, 0	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x400235e	      0xbf00000000	                              mov edi, 0	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002363	      0xe800000000	                          call 0x4002368	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002368	          0x4889da	                            mov rdx, rbx	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x400236b	          0x4889c7	                            mov rdi, rax	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x400236e	          0x4c89ee	                            mov rsi, r13	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002371	            0x31c0	                            xor eax, eax	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002373	      0xe800000000	                          call 0x4002378	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002378	      0xbf11000000	                           mov edi, 0x11	      2083	dwarf2.c	FUNCTION_35	IF_6	CALL_11
0x400237d	      0xe800000000	                          call 0x4002382	      2083	dwarf2.c	FUNCTION_35	IF_6	CALL_11
0x4002382	            0x31c0	                            xor eax, eax	      2084	dwarf2.c	FUNCTION_35	IF_6
0x4002384	      0xe9fbf7ffff	                           jmp 0x4001b84	      2084	dwarf2.c	FUNCTION_35	IF_6
0x4002389	     0xf1f80000000	                         nop dword [rax]	      2084	dwarf2.c	FUNCTION_35	IF_6
0x4002390	            0x31c0	                            xor eax, eax	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4002392	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002397	     0xf85f1000000	                           jne 0x400248e	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x400239d	      0x448b442444	            mov r8d, dword [rsp + 0x44] 	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x40023a2	        0x2a44241b	               sub al, byte [rsp + 0x1b]	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40023a6	          0x4585c0	                           test r8d, r8d	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x40023a9	     0xf849c020000	                            je 0x400264b	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x40023af	           0xfb6c8	                           movzx ecx, al	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40023b2	            0x89c8	                            mov eax, ecx	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40023b4	        0xf6742436	                   div byte [rsp + 0x36]	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40023b8	      0x807c243701	                cmp byte [rsp + 0x37], 1	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40023bd	           0xfb6c0	                           movzx eax, al	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40023c0	            0x744e	                            je 0x4002410	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40023c2	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40023c7	             0x1d0	                            add eax, edx	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40023c9	              0x99	                                     cdq	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40023ca	        0xf77c2450	                 idiv dword [rsp + 0x50]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40023ce	       0xfaf442430	            imul eax, dword [rsp + 0x30]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40023d3	        0x88542410	               mov byte [rsp + 0x10], dl	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40023d7	            0x4898	                                    cdqe	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40023d9	          0x4901c7	                            add r15, rax	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40023dc	            0x89c8	                            mov eax, ecx	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40023de	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x40023e3	        0xf6742436	                   div byte [rsp + 0x36]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40023e7	           0xfb6c4	                           movzx eax, ah	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40023ea	         0x3442440	             add eax, dword [rsp + 0x40]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40023ee	         0x1442408	                add dword [rsp + 8], eax	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40023f2	        0x8b742408	                mov esi, dword [rsp + 8]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40023f6	            0x6a00	                                  push 0	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x40023f8	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x40023fc	          0x4189f0	                            mov r8d, esi	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x40023ff	              0x50	                                push rax	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002400	      0x448b4c2458	            mov r9d, dword [rsp + 0x58] 	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002405	      0xe99efeffff	                           jmp 0x40022a8	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x400240a	    0x660f1f440000	                    nop word [rax + rax]	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002410	       0xfaf442430	            imul eax, dword [rsp + 0x30]	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4002415	            0x4898	                                    cdqe	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4002417	          0x4901c7	                            add r15, rax	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x400241a	            0xebc0	                           jmp 0x40023dc	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x400241c	      0x4803442458	             add rax, qword [rsp + 0x58]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002421	          0x4531c9	                            xor r9d, r9d	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002424	          0x4c89eb	                            mov rbx, r13	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002427	          0x803800	                       cmp byte [rax], 0	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400242a	     0xf8428fdffff	                            je 0x4002158	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002430	        0x4c8b2c24	                    mov r13, qword [rsp]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002434	      0x4c89742460	             mov qword [rsp + 0x60], r14	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002439	          0x4989de	                            mov r14, rbx	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400243c	      0x48896c2468	             mov qword [rsp + 0x68], rbp	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002441	          0x4889c3	                            mov rbx, rax	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002444	          0x4489cd	                            mov ebp, r9d	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002447	    0x660f1f840000	                    nop word [rax + rax]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002450	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002458	            0x31c9	                            xor ecx, ecx	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x400245a	          0x4c89f6	                            mov rsi, r14	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x400245d	          0x4d89e0	                             mov r8, r12	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002460	          0x4c89ef	                            mov rdi, r13	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002463	          0x83c501	                              add ebp, 1	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002466	      0xe800000000	                          call 0x400246b	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x400246b	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002472	          0x4901c6	                            add r14, rax	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002475	           0xfb603	                   movzx eax, byte [rbx]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002478	            0x39e8	                            cmp eax, ebp	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400247a	            0x77d4	                            ja 0x4002450	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400247c	          0x4c89f3	                            mov rbx, r14	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400247f	      0x488b6c2468	            mov rbp, qword [rsp + 0x68] 	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002484	      0x4c8b742460	            mov r14, qword [rsp + 0x60] 	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002489	      0xe9cafcffff	                           jmp 0x4002158	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400248e	        0x488b3c24	                    mov rdi, qword [rsp]	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002492	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x400249a	            0x31c9	                            xor ecx, ecx	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x400249c	          0x4d89e0	                             mov r8, r12	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x400249f	          0x4c89ee	                            mov rsi, r13	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x40024a2	      0xe800000000	                          call 0x40024a7	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x40024a7	    0x8b9424a00000	            mov edx, dword [rsp + 0xa0] 	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40024ae	      0x4d8d5c1500	                    lea r11, [r13 + rdx]	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40024b3	        0x498d5b01	                      lea rbx, [r11 + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40024b7	          0x4939dc	                            cmp r12, rbx	       588	dwarf2.c	FUNCTION_6	IF_1
0x40024ba	     0xf8243010000	                            jb 0x4002603	       588	dwarf2.c	FUNCTION_6	IF_1
0x40024c0	        0x410fb613	                   movzx edx, byte [r11]	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024c4	          0x80fa03	                               cmp dl, 3	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024c7	     0xf84d0050000	                            je 0x4002a9d	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024cd	     0xf8626050000	                           jbe 0x40029f9	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024d3	          0x80fa04	                               cmp dl, 4	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024d6	     0xf8463050000	                            je 0x4002a3f	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024dc	          0x80fa80	                            cmp dl, 0x80	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024df	     0xf851e010000	                           jne 0x4002603	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024e5	          0x83e801	                              sub eax, 1	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024e8	          0x4801c3	                            add rbx, rax	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024eb	      0xe968fcffff	                           jmp 0x4002158	      2337	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40024f0	          0x4d89ce	                             mov r14, r9	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x40024f3	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x40024fe	    0x41b901000000	                              mov r9d, 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002504	      0xe907f9ffff	                           jmp 0x4001e10	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002509	          0x4d89ce	                             mov r14, r9	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400250c	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002517	          0x4531c9	                            xor r9d, r9d	       662	dwarf2.c	FUNCTION_12	IF_1
0x400251a	      0xe9f1f8ffff	                           jmp 0x4001e10	       662	dwarf2.c	FUNCTION_12	IF_1
0x400251f	        0x488d4304	                      lea rax, [rbx + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002523	          0x4939c5	                            cmp r13, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002526	     0xf8213f7ffff	                            jb 0x4001c3f	       612	dwarf2.c	FUNCTION_9	IF_1
0x400252c	        0x488b0424	                    mov rax, qword [rsp]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002530	      0x4889542408	                mov qword [rsp + 8], rdx	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002535	          0x4889df	                            mov rdi, rbx	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002538	        0x488b4008	                mov rax, qword [rax + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400253c	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400253f	      0x488b542408	                mov rdx, qword [rsp + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002544	      0xe9f6f6ffff	                           jmp 0x4001c3f	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002549	        0x488b3c24	                    mov rdi, qword [rsp]	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x400254d	            0x31f6	                            xor esi, esi	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x400254f	      0xe800000000	                          call 0x4002554	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002554	        0x6683fd05	                               cmp bp, 5	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4002558	      0x4889442458	             mov qword [rsp + 0x58], rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x400255d	          0xc60001	                       mov byte [rax], 1	      2175	dwarf2.c	FUNCTION_35
0x4002560	     0xf8581040000	                           jne 0x40029e7	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4002566	          0x4c89e3	                            mov rbx, r12	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002569	      0xc644241b00	                mov byte [rsp + 0x1b], 0	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x400256e	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4002576	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1897	dwarf2.c	FUNCTION_34
0x400257b	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      1897	dwarf2.c	FUNCTION_34
0x400257f	        0x488d4301	                      lea rax, [rbx + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002583	          0x4939c5	                            cmp r13, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002586	      0x4889442460	             mov qword [rsp + 0x60], rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x400258b	     0xf83d8000000	                           jae 0x4002669	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002591	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002596	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x400259e	            0x31c9	                            xor ecx, ecx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40025a0	          0x4d89e8	                             mov r8, r13	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40025a3	          0x4c89f7	                            mov rdi, r14	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40025a6	      0x4889542408	                mov qword [rsp + 8], rdx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40025ab	      0xe800000000	                          call 0x40025b0	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40025b0	          0x4885c0	                           test rax, rax	      1917	dwarf2.c	FUNCTION_34	IF_1
0x40025b3	     0xf849d0c0000	                            je 0x4003256	      1917	dwarf2.c	FUNCTION_34	IF_1
0x40025b9	      0xba05000000	                              mov edx, 5	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x40025be	      0xbe00000000	                              mov esi, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x40025c3	      0xbf00000000	                              mov edi, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x40025c8	      0xe800000000	                          call 0x40025cd	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x40025cd	          0x4889c7	                            mov rdi, rax	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x40025d0	            0x31c0	                            xor eax, eax	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x40025d2	      0xe800000000	                          call 0x40025d7	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x40025d7	      0xbf11000000	                           mov edi, 0x11	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x40025dc	      0xe800000000	                          call 0x40025e1	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x40025e1	      0xe977f5ffff	                           jmp 0x4001b5d	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x40025e6	        0x488b0424	                    mov rax, qword [rsp]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40025ea	      0x4889542408	                mov qword [rsp + 8], rdx	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40025ef	          0x4889df	                            mov rdi, rbx	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40025f2	        0x488b4008	                mov rax, qword [rax + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40025f6	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40025f9	      0x488b542408	                mov rdx, qword [rsp + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40025fe	      0xe93cf6ffff	                           jmp 0x4001c3f	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4002603	      0xba05000000	                              mov edx, 5	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x4002608	      0xbe00000000	                              mov esi, 0	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x400260d	      0xbf00000000	                              mov edi, 0	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x4002612	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x4002617	      0xe800000000	                          call 0x400261c	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x400261c	          0x4889c7	                            mov rdi, rax	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x400261f	            0x31c0	                            xor eax, eax	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x4002621	      0xe800000000	                          call 0x4002626	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x4002626	      0xbf11000000	                           mov edi, 0x11	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x400262b	      0xe800000000	                          call 0x4002630	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x4002630	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x4002635	          0x4885c0	                           test rax, rax	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x4002638	     0xf841ff5ffff	                            je 0x4001b5d	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x400263e	          0x4889c7	                            mov rdi, rax	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4002641	      0xe800000000	                          call 0x4002646	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4002646	      0xe912f5ffff	                           jmp 0x4001b5d	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x400264b	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4002650	            0xebde	                           jmp 0x4002630	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4002652	      0xbe01000000	                              mov esi, 1	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002657	          0x4889c7	                            mov rdi, rax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400265a	      0xe881deffff	                call sym.concat_filename	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400265f	      0x4889442438	             mov qword [rsp + 0x38], rax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002664	      0xe9f3f7ffff	                           jmp 0x4001e5c	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002669	           0xfb60b	                   movzx ecx, byte [rbx]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x400266c	            0x84c9	                             test cl, cl	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x400266e	        0x884c2448	               mov byte [rsp + 0x48], cl	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002672	     0xf8419ffffff	                            je 0x4002591	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002678	    0x4c8da4248000	                   lea r12, [rsp + 0x80]	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002680	            0x31ed	                            xor ebp, ebp	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002682	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002687	          0x4889c3	                            mov rbx, rax	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x400268a	          0x4189ef	                           mov r15d, ebp	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x400268d	            0x89cd	                            mov ebp, ecx	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x400268f	      0x4c89642408	                mov qword [rsp + 8], r12	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002694	         0xf1f4000	                         nop dword [rax]	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002698	            0x31c9	                            xor ecx, ecx	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x400269a	          0x4889de	                            mov rsi, rbx	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x400269d	          0x4d89e8	                             mov r8, r13	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x40026a0	          0x4c89e2	                            mov rdx, r12	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x40026a3	          0x4c89f7	                            mov rdi, r14	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x40026a6	        0x4183c701	                             add r15d, 1	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x40026aa	      0xe800000000	                          call 0x40026af	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x40026af	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x40026b6	            0x31c9	                            xor ecx, ecx	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x40026b8	          0x4d89e8	                             mov r8, r13	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x40026bb	          0x4c89e2	                            mov rdx, r12	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x40026be	          0x4c89f7	                            mov rdi, r14	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x40026c1	          0x4801c3	                            add rbx, rax	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x40026c4	          0x4889de	                            mov rsi, rbx	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x40026c7	      0xe800000000	                          call 0x40026cc	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x40026cc	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x40026d3	          0x4801c3	                            add rbx, rax	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x40026d6	          0x4438fd	                           cmp bpl, r15b	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x40026d9	            0x75bd	                           jne 0x4002698	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x40026db	      0x488b542408	                mov rdx, qword [rsp + 8]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026e0	            0x31c9	                            xor ecx, ecx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026e2	          0x4d89e8	                             mov r8, r13	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026e5	          0x4889de	                            mov rsi, rbx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026e8	          0x4c89f7	                            mov rdi, r14	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026eb	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026f0	      0xe800000000	                          call 0x40026f5	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026f5	          0x4889c1	                            mov rcx, rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026f8	      0x4889442468	             mov qword [rsp + 0x68], rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40026fd	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1916	dwarf2.c	FUNCTION_34
0x4002704	        0x488d2c03	                    lea rbp, [rbx + rax]	      1916	dwarf2.c	FUNCTION_34
0x4002708	          0x4c89e8	                            mov rax, r13	      1926	dwarf2.c	FUNCTION_34	IF_2
0x400270b	          0x4829e8	                            sub rax, rbp	      1926	dwarf2.c	FUNCTION_34	IF_2
0x400270e	          0x4839c8	                            cmp rax, rcx	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002711	     0xf8206080000	                            jb 0x4002f1d	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002717	    0x48837c246800	               cmp qword [rsp + 0x68], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x400271d	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002725	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x400272e	      0x4889442410	             mov qword [rsp + 0x10], rax	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002733	     0xf8457010000	                            je 0x4002890	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002739	      0x4c897c2450	             mov qword [rsp + 0x50], r15	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x400273e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        90	string3.h	FUNCTION_75	CALL_6
0x4002743	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	        90	string3.h	FUNCTION_75	CALL_6
0x4002748	          0x4531e4	                          xor r12d, r12d	        90	string3.h	FUNCTION_75	CALL_6
0x400274b	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4002752	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_75	CALL_6
0x400275a	    0x48c740100000	               mov qword [rax + 0x10], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4002762	      0x488b542408	                mov rdx, qword [rsp + 8]	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002767	            0x31c9	                            xor ecx, ecx	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002769	          0x4889de	                            mov rsi, rbx	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x400276c	          0x4d89e8	                             mov r8, r13	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x400276f	          0x4c89f7	                            mov rdi, r14	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002772	      0xe800000000	                          call 0x4002777	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002777	    0x8b9424800000	            mov edx, dword [rsp + 0x80] 	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400277e	          0x4801d3	                            add rbx, rdx	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002781	        0x4883f805	                              cmp rax, 5	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002785	     0xf87d4010000	                            ja 0x400295f	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x400278b	    0xff24c5000000	                       jmp qword [rax*8]	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002792	    0x488d84248400	                   lea rax, [rsp + 0x84]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400279a	      0x4889442428	             mov qword [rsp + 0x28], rax	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400279f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x40027a4	      0x4889442438	             mov qword [rsp + 0x38], rax	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x40027a9	      0x488b542408	                mov rdx, qword [rsp + 8]	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x40027ae	            0x31c9	                            xor ecx, ecx	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x40027b0	          0x4889de	                            mov rsi, rbx	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x40027b3	          0x4d89e8	                             mov r8, r13	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x40027b6	          0x4c89f7	                            mov rdi, r14	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x40027b9	      0xe800000000	                          call 0x40027be	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x40027be	          0x4989c7	                            mov r15, rax	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x40027c1	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x40027c8	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x40027cd	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x40027d5	          0x4989e8	                             mov r8, rbp	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x40027d8	            0x31d2	                            xor edx, edx	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x40027da	          0x4d89e9	                             mov r9, r13	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x40027dd	          0x4489fe	                           mov esi, r15d	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x40027e0	          0x4801c3	                            add rbx, rax	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x40027e3	      0xe8c8e8ffff	           call sym.read_attribute_value	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x40027e8	          0x4885c0	                           test rax, rax	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x40027eb	          0x4889c5	                            mov rbp, rax	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x40027ee	     0xf8489070000	                            je 0x4002f7d	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x40027f4	        0x4983ff1f	                           cmp r15, 0x1f	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x40027f8	            0x7736	                            ja 0x4002830	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x40027fa	      0xb801000000	                              mov eax, 1	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x40027ff	          0x4489f9	                           mov ecx, r15d	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002802	          0x48d3e0	                             shl rax, cl	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002805	      0xa9e0880000	                        test eax, 0x88e0	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x400280a	     0xf8587010000	                           jne 0x4002997	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002810	      0xa900010080	                    test eax, 0x80000100	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002815	            0x7419	                            je 0x4002830	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002817	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x400281f	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002824	          0x488906	                    mov qword [rsi], rax	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002827	    0x660f1f840000	                    nop word [rax + rax]	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002830	        0x4183c401	                             add r12d, 1	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002834	      0x4438642448	            cmp byte [rsp + 0x48], r12b 	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002839	     0xf8523ffffff	                           jne 0x4002762	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400283f	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002844	      0xb8cdcccccc	                     mov eax, 0xcccccccd	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002849	    0x488b9c24a000	            mov rbx, qword [rsp + 0xa0] 	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002851	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002854	            0xf7e1	                                 mul ecx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002856	            0x89d0	                            mov eax, edx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002858	          0xc1e802	                              shr eax, 2	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400285b	          0x8d0480	                  lea eax, [rax + rax*4]	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400285e	            0x39c1	                            cmp ecx, eax	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002860	     0xf847a080000	                            je 0x40030e0	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4002866	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400286a	          0x4889fe	                            mov rsi, rdi	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400286d	          0x8d5101	                      lea edx, [rcx + 1]	      1841	dwarf2.c	FUNCTION_31
0x4002870	    0x488344247001	               add qword [rsp + 0x70], 1	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002876	          0x89560c	              mov dword [rsi + 0xc], edx	      1841	dwarf2.c	FUNCTION_31
0x4002879	        0x48891cc8	            mov qword [rax + rcx*8], rbx	      1841	dwarf2.c	FUNCTION_31
0x400287d	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002882	      0x483b442468	            cmp rax, qword [rsp + 0x68] 	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002887	     0xf82b1feffff	                            jb 0x400273e	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x400288d	          0x4989f7	                            mov r15, rsi	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002890	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1897	dwarf2.c	FUNCTION_34
0x4002895	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      1897	dwarf2.c	FUNCTION_34
0x4002899	        0x488d4501	                      lea rax, [rbp + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400289d	          0x4939c5	                            cmp r13, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x40028a0	      0x4889442438	             mov qword [rsp + 0x38], rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x40028a5	     0xf8396030000	                           jae 0x4002c41	       588	dwarf2.c	FUNCTION_6	IF_1
0x40028ab	      0x488b542408	                mov rdx, qword [rsp + 8]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40028b0	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40028b5	            0x31c9	                            xor ecx, ecx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40028b7	          0x4d89e8	                             mov r8, r13	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40028ba	          0x4c89f7	                            mov rdi, r14	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40028bd	      0xe800000000	                          call 0x40028c2	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x40028c2	          0x4885c0	                           test rax, rax	      1917	dwarf2.c	FUNCTION_34	IF_1
0x40028c5	     0xf85eefcffff	                           jne 0x40025b9	      1917	dwarf2.c	FUNCTION_34	IF_1
0x40028cb	    0x448b8c248000	            mov r9d, dword [rsp + 0x80] 	      1916	dwarf2.c	FUNCTION_34
0x40028d3	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      1916	dwarf2.c	FUNCTION_34
0x40028d8	          0x4d01cc	                             add r12, r9	      1916	dwarf2.c	FUNCTION_34
0x40028db	      0xe934f5ffff	                           jmp 0x4001e14	      1916	dwarf2.c	FUNCTION_34
0x40028e0	    0x488d84248400	                   lea rax, [rsp + 0x84]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x40028e8	      0x4889442428	             mov qword [rsp + 0x28], rax	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x40028ed	    0x488d84248800	                   lea rax, [rsp + 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x40028f5	      0x4889442438	             mov qword [rsp + 0x38], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x40028fa	      0xe9aafeffff	                           jmp 0x40027a9	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x40028ff	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002904	        0x4883c010	                           add rax, 0x10	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002908	      0x4889442428	             mov qword [rsp + 0x28], rax	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x400290d	    0x488d84248800	                   lea rax, [rsp + 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002915	      0x4889442438	             mov qword [rsp + 0x38], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400291a	      0xe98afeffff	                           jmp 0x40027a9	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400291f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002924	        0x4883c00c	                            add rax, 0xc	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002928	      0x4889442428	             mov qword [rsp + 0x28], rax	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x400292d	    0x488d84248800	                   lea rax, [rsp + 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002935	      0x4889442438	             mov qword [rsp + 0x38], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400293a	      0xe96afeffff	                           jmp 0x40027a9	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400293f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002944	        0x4883c008	                              add rax, 8	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002948	      0x4889442428	             mov qword [rsp + 0x28], rax	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x400294d	    0x488d84248800	                   lea rax, [rsp + 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002955	      0x4889442438	             mov qword [rsp + 0x38], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400295a	      0xe94afeffff	                           jmp 0x40027a9	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x400295f	          0x4989c4	                            mov r12, rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002962	      0xbe00000000	                              mov esi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002967	      0xba05000000	                              mov edx, 5	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x400296c	      0xbf00000000	                              mov edi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002971	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002976	      0xe800000000	                          call 0x400297b	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x400297b	          0x4c89e6	                            mov rsi, r12	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x400297e	          0x4889c7	                            mov rdi, rax	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002981	            0x31c0	                            xor eax, eax	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002983	      0xe800000000	                          call 0x4002988	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002988	      0xbf11000000	                           mov edi, 0x11	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x400298d	      0xe800000000	                          call 0x4002992	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4002992	      0xe9c6f1ffff	                           jmp 0x4001b5d	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4002997	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x400299f	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x40029a4	            0x8906	                    mov dword [rsi], eax	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x40029a6	      0xe985feffff	                           jmp 0x4002830	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x40029ab	        0x488b0424	                    mov rax, qword [rsp]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x40029af	          0x4c89ef	                            mov rdi, r13	       606	dwarf2.c	FUNCTION_8	CALL_1
0x40029b2	        0x488b4008	                mov rax, qword [rax + 8]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x40029b6	          0xff5050	                 call qword [rax + 0x50]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x40029b9	            0x89c0	                            mov eax, eax	       606	dwarf2.c	FUNCTION_8	CALL_1
0x40029bb	      0xe9cff7ffff	                           jmp 0x400218f	       606	dwarf2.c	FUNCTION_8	CALL_1
0x40029c0	       0xfaf442430	            imul eax, dword [rsp + 0x30]	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40029c5	          0x4c89eb	                            mov rbx, r13	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40029c8	            0x4898	                                    cdqe	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40029ca	          0x4901c7	                            add r15, rax	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40029cd	      0xe986f7ffff	                           jmp 0x4002158	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40029d2	      0xe800000000	                          call 0x40029d7	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x40029d7	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x40029db	        0x480fafc2	                           imul rax, rdx	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x40029df	          0x4901c7	                            add r15, rax	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x40029e2	      0xe950f8ffff	                           jmp 0x4002237	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x40029e7	      0xc644241b00	                mov byte [rsp + 0x1b], 0	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x40029ec	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x40029f4	      0xe93cf6ffff	                           jmp 0x4002035	       589	dwarf2.c	FUNCTION_6	IF_1
0x40029f9	          0x80fa01	                               cmp dl, 1	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40029fc	     0xf8481010000	                            je 0x4002b83	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a02	          0x80fa02	                               cmp dl, 2	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a05	     0xf85f8fbffff	                           jne 0x4002603	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a0b	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002a10	          0x4889da	                            mov rdx, rbx	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002a13	          0x4c89e1	                            mov rcx, r12	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002a16	    0x410fb6b5ac00	           movzx esi, byte [r13 + 0xac] 	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002a1e	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002a22	      0xe8f9e0ffff	           call sym.read_address.isra.28	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002a27	          0x4989c7	                            mov r15, rax	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002a2a	    0x410fb685ac00	           movzx eax, byte [r13 + 0xac] 	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a32	      0xc644241000	                mov byte [rsp + 0x10], 0	      2310	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a37	          0x4801c3	                            add rbx, rax	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a3a	      0xe919f7ffff	                           jmp 0x4002158	      2312	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a3f	        0x488b3c24	                    mov rdi, qword [rsp]	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002a43	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002a4b	          0x4889de	                            mov rsi, rbx	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002a4e	          0x4d89e0	                             mov r8, r12	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002a51	            0x31c9	                            xor ecx, ecx	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002a53	      0xe800000000	                          call 0x4002a58	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002a58	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2330	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a5c	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a63	          0x4801c3	                            add rbx, rax	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a66	      0xe9edf6ffff	                           jmp 0x4002158	      2334	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a6b	      0xba05000000	                              mov edx, 5	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4002a70	      0xbe00000000	                              mov esi, 0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4002a75	      0xbf00000000	                              mov edi, 0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4002a7a	      0xe800000000	                          call 0x4002a7f	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4002a7f	          0x4c89e6	                            mov rsi, r12	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4002a82	          0x4889c7	                            mov rdi, rax	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4002a85	            0x31c0	                            xor eax, eax	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4002a87	      0xe800000000	                          call 0x4002a8c	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4002a8c	      0xbf11000000	                           mov edi, 0x11	      2052	dwarf2.c	FUNCTION_35	IF_3	CALL_5
0x4002a91	      0xe800000000	                          call 0x4002a96	      2052	dwarf2.c	FUNCTION_35	IF_3	CALL_5
0x4002a96	            0x31c0	                            xor eax, eax	      2053	dwarf2.c	FUNCTION_35	IF_3
0x4002a98	      0xe9e7f0ffff	                           jmp 0x4001b84	      2053	dwarf2.c	FUNCTION_35	IF_3
0x4002a9d	          0x4939dc	                            cmp r12, rbx	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002aa0	     0xf87b4040000	                            ja 0x4002f5a	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002aa6	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002ab1	            0x31c0	                            xor eax, eax	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002ab3	          0x4531ed	                          xor r13d, r13d	       663	dwarf2.c	FUNCTION_12	IF_1
0x4002ab6	        0x488b3c24	                    mov rdi, qword [rsp]	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002aba	          0x4801c3	                            add rbx, rax	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002abd	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002ac5	            0x31c9	                            xor ecx, ecx	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002ac7	          0x4889de	                            mov rsi, rbx	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002aca	          0x4d89e0	                             mov r8, r12	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002acd	      0xe800000000	                          call 0x4002ad2	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002ad2	      0x4889442460	             mov qword [rsp + 0x60], rax	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002ad7	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002ade	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002ae6	        0x488b3c24	                    mov rdi, qword [rsp]	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002aea	            0x31c9	                            xor ecx, ecx	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002aec	          0x4d89e0	                             mov r8, r12	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002aef	          0x4801c3	                            add rbx, rax	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002af2	          0x4889de	                            mov rsi, rbx	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002af5	      0xe800000000	                          call 0x4002afa	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002afa	      0x4889442468	             mov qword [rsp + 0x68], rax	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002aff	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b06	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002b0e	        0x488b3c24	                    mov rdi, qword [rsp]	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002b12	            0x31c9	                            xor ecx, ecx	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002b14	          0x4d89e0	                             mov r8, r12	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002b17	          0x4801c3	                            add rbx, rax	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b1a	          0x4889de	                            mov rsi, rbx	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002b1d	      0xe800000000	                          call 0x4002b22	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002b22	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b27	          0x4989c0	                             mov r8, rax	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002b2a	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b31	      0xbacdcccccc	                     mov edx, 0xcccccccd	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b36	          0x8b4f08	                mov ecx, dword [rdi + 8]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b39	          0x4801c3	                            add rbx, rax	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b3c	            0x89c8	                            mov eax, ecx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b3e	            0xf7e2	                                 mul edx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b40	            0x89d0	                            mov eax, edx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b42	          0xc1e802	                              shr eax, 2	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b45	          0x8d0480	                  lea eax, [rax + rax*4]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b48	            0x39c1	                            cmp ecx, eax	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b4a	     0xf8437040000	                            je 0x4002f87	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b50	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002b54	            0x89ca	                            mov edx, ecx	      1875	dwarf2.c	FUNCTION_33
0x4002b56	        0x8b742460	            mov esi, dword [rsp + 0x60] 	      1876	dwarf2.c	FUNCTION_33
0x4002b5a	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      1877	dwarf2.c	FUNCTION_33
0x4002b5e	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      1875	dwarf2.c	FUNCTION_33
0x4002b62	          0x83c101	                              add ecx, 1	      1879	dwarf2.c	FUNCTION_33
0x4002b65	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1875	dwarf2.c	FUNCTION_33
0x4002b69	          0x897008	                mov dword [rax + 8], esi	      1876	dwarf2.c	FUNCTION_33
0x4002b6c	          0x4c8928	                    mov qword [rax], r13	      1875	dwarf2.c	FUNCTION_33
0x4002b6f	          0x89780c	              mov dword [rax + 0xc], edi	      1877	dwarf2.c	FUNCTION_33
0x4002b72	        0x44894010	             mov dword [rax + 0x10], r8d	      1878	dwarf2.c	FUNCTION_33
0x4002b76	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1879	dwarf2.c	FUNCTION_33
0x4002b7b	          0x894808	                mov dword [rax + 8], ecx	      1879	dwarf2.c	FUNCTION_33
0x4002b7e	      0xe9d5f5ffff	                           jmp 0x4002158	      1879	dwarf2.c	FUNCTION_33
0x4002b83	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002b88	            0x6a01	                                  push 1	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002b8a	          0x4c89fe	                            mov rsi, r15	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002b8d	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002b91	              0x50	                                push rax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002b92	      0x448b4c2458	            mov r9d, dword [rsp + 0x58] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002b97	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002b9c	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002ba1	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002ba6	      0xe865d6ffff	                  call sym.add_line_info	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002bab	            0x85c0	                           test eax, eax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002bad	              0x5e	                                 pop rsi	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002bae	              0x5f	                                 pop rdi	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002baf	     0xf8496faffff	                            je 0x400264b	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002bb5	          0x4939ef	                            cmp r15, rbp	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002bb8	        0x490f46ef	                         cmovbe rbp, r15	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002bbc	          0x4d39f7	                            cmp r15, r14	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002bbf	        0x4d0f43f7	                         cmovae r14, r15	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002bc3	          0x4c39f5	                            cmp rbp, r14	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4002bc6	            0x743b	                            je 0x4002c03	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4002bc8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4002bcd	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4002bd1	          0x4885d2	                           test rdx, rdx	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4002bd4	     0xf84ea030000	                            je 0x4002fc4	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4002bda	        0x4883c018	                           add rax, 0x18	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002bde	            0xeb1a	                           jmp 0x4002bfa	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002be0	        0x4c397008	                cmp qword [rax + 8], r14	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4002be4	     0xf8462050000	                            je 0x400314c	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4002bea	          0x488b00	                    mov rax, qword [rax]	      1662	dwarf2.c	FUNCTION_27	DO_1
0x4002bed	          0x4885c0	                           test rax, rax	      1664	dwarf2.c	FUNCTION_27
0x4002bf0	     0xf8422050000	                            je 0x4003118	      1664	dwarf2.c	FUNCTION_27
0x4002bf6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1664	dwarf2.c	FUNCTION_27
0x4002bfa	          0x4839d5	                            cmp rbp, rdx	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002bfd	            0x75e1	                           jne 0x4002be0	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002bff	        0x4c897010	             mov qword [rax + 0x10], r14	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4002c03	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002c09	     0xf8584050000	                           jne 0x4003193	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002c0f	          0x4939dc	                            cmp r12, rbx	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002c12	     0xf8729f2ffff	                            ja 0x4001e41	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002c18	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002c1d	        0x458b7710	           mov r14d, dword [r15 + 0x10] 	      1761	dwarf2.c	FUNCTION_30
0x4002c21	          0x4585f6	                         test r14d, r14d	      1764	dwarf2.c	FUNCTION_30	IF_1
0x4002c24	     0xf851b040000	                           jne 0x4003045	      1764	dwarf2.c	FUNCTION_30	IF_1
0x4002c2a	          0x4c89f8	                            mov rax, r15	      2169	dwarf2.c	FUNCTION_35	IF_14
0x4002c2d	      0xe952efffff	                           jmp 0x4001b84	      2169	dwarf2.c	FUNCTION_35	IF_14
0x4002c32	      0xba05000000	                              mov edx, 5	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002c37	      0xbe00000000	                              mov esi, 0	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002c3c	      0xe9caf4ffff	                           jmp 0x400210b	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002c41	         0xfb64500	                   movzx eax, byte [rbp]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002c45	            0x84c0	                             test al, al	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c47	        0x88442468	               mov byte [rsp + 0x68], al	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002c4b	     0xf845afcffff	                            je 0x40028ab	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c51	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c56	      0x4c8b642408	                mov r12, qword [rsp + 8]	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c5b	            0x31ed	                            xor ebp, ebp	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c5d	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c62	          0x4189ef	                           mov r15d, ebp	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c65	            0x89c5	                            mov ebp, eax	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c67	    0x660f1f840000	                    nop word [rax + rax]	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c70	            0x31c9	                            xor ecx, ecx	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c72	          0x4889de	                            mov rsi, rbx	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c75	          0x4d89e8	                             mov r8, r13	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c78	          0x4c89e2	                            mov rdx, r12	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c7b	          0x4c89f7	                            mov rdi, r14	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c7e	        0x4183c701	                             add r15d, 1	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002c82	      0xe800000000	                          call 0x4002c87	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4002c87	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4002c8e	            0x31c9	                            xor ecx, ecx	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c90	          0x4d89e8	                             mov r8, r13	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c93	          0x4c89e2	                            mov rdx, r12	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c96	          0x4c89f7	                            mov rdi, r14	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c99	          0x4801c3	                            add rbx, rax	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4002c9c	          0x4889de	                            mov rsi, rbx	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002c9f	      0xe800000000	                          call 0x4002ca4	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4002ca4	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4002cab	          0x4801c3	                            add rbx, rax	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4002cae	          0x4438fd	                           cmp bpl, r15b	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002cb1	            0x75bd	                           jne 0x4002c70	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4002cb3	      0x488b542408	                mov rdx, qword [rsp + 8]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002cb8	            0x31c9	                            xor ecx, ecx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002cba	          0x4d89e8	                             mov r8, r13	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002cbd	          0x4889de	                            mov rsi, rbx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002cc0	          0x4c89f7	                            mov rdi, r14	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002cc3	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002cc8	      0xe800000000	                          call 0x4002ccd	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002ccd	    0x448b8c248000	            mov r9d, dword [rsp + 0x80] 	      1916	dwarf2.c	FUNCTION_34
0x4002cd5	          0x4889c1	                            mov rcx, rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002cd8	      0x4889442450	             mov qword [rsp + 0x50], rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4002cdd	          0x4c89e8	                            mov rax, r13	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002ce0	        0x4e8d240b	                     lea r12, [rbx + r9]	      1916	dwarf2.c	FUNCTION_34
0x4002ce4	          0x4c29e0	                            sub rax, r12	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002ce7	          0x4839c8	                            cmp rax, rcx	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002cea	     0xf82f5020000	                            jb 0x4002fe5	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4002cf0	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002cf6	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002cfe	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002d07	      0x4889442410	             mov qword [rsp + 0x10], rax	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002d0c	     0xf8402f1ffff	                            je 0x4001e14	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002d12	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        90	string3.h	FUNCTION_75	CALL_6
0x4002d17	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	        90	string3.h	FUNCTION_75	CALL_6
0x4002d1c	      0xc644242800	                mov byte [rsp + 0x28], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4002d21	      0x4c897c2460	             mov qword [rsp + 0x60], r15	        90	string3.h	FUNCTION_75	CALL_6
0x4002d26	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4002d2d	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4002d35	    0x48c740100000	               mov qword [rax + 0x10], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4002d3d	      0x488b542408	                mov rdx, qword [rsp + 8]	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d42	            0x31c9	                            xor ecx, ecx	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d44	          0x4889de	                            mov rsi, rbx	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d47	          0x4d89e8	                             mov r8, r13	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d4a	          0x4c89f7	                            mov rdi, r14	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d4d	      0xe800000000	                          call 0x4002d52	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4002d52	    0x8b9424800000	            mov edx, dword [rsp + 0x80] 	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d59	          0x4801d3	                            add rbx, rdx	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d5c	        0x4883f805	                              cmp rax, 5	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002d60	     0xf877e010000	                            ja 0x4002ee4	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002d66	    0xff24c5000000	                       jmp qword [rax*8]	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002d6d	    0x4c8dbc248400	                   lea r15, [rsp + 0x84]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d75	    0x4c8d9c248800	                   lea r11, [rsp + 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002d7d	      0x488b542408	                mov rdx, qword [rsp + 8]	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002d82	            0x31c9	                            xor ecx, ecx	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002d84	          0x4889de	                            mov rsi, rbx	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002d87	          0x4d89e8	                             mov r8, r13	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002d8a	          0x4c89f7	                            mov rdi, r14	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002d8d	      0x4c895c2470	             mov qword [rsp + 0x70], r11	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002d92	      0xe800000000	                          call 0x4002d97	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002d97	          0x4889c5	                            mov rbp, rax	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4002d9a	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002da1	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002da6	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002dae	          0x4d89e0	                             mov r8, r12	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002db1	            0x31d2	                            xor edx, edx	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002db3	          0x4d89e9	                             mov r9, r13	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002db6	            0x89ee	                            mov esi, ebp	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002db8	          0x4801c3	                            add rbx, rax	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002dbb	      0xe8f0e2ffff	           call sym.read_attribute_value	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002dc0	          0x4885c0	                           test rax, rax	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002dc3	          0x4989c4	                            mov r12, rax	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4002dc6	     0xf8442030000	                            je 0x400310e	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002dcc	        0x4883fd1f	                           cmp rbp, 0x1f	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002dd0	            0x772c	                            ja 0x4002dfe	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002dd2	      0xb801000000	                              mov eax, 1	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002dd7	            0x89e9	                            mov ecx, ebp	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002dd9	          0x48d3e0	                             shl rax, cl	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002ddc	      0xa9e0880000	                        test eax, 0x88e0	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002de1	     0xf8526010000	                           jne 0x4002f0d	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002de7	      0xa900010080	                    test eax, 0x80000100	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002dec	            0x7410	                            je 0x4002dfe	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4002dee	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002df6	      0x4c8b5c2470	            mov r11, qword [rsp + 0x70] 	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002dfb	          0x498903	                    mov qword [r11], rax	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002dfe	      0x8044242801	                add byte [rsp + 0x28], 1	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e03	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e08	        0x38442468	               cmp byte [rsp + 0x68], al	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e0c	     0xf852bffffff	                           jne 0x4002d3d	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e12	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e17	      0xb8cdcccccc	                     mov eax, 0xcccccccd	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e1c	    0x8b9c24b00000	            mov ebx, dword [rsp + 0xb0] 	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e23	    0x8bac24ac0000	            mov ebp, dword [rsp + 0xac] 	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e2a	    0x448b8424a800	            mov r8d, dword [rsp + 0xa8] 	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e32	    0x4c8b8c24a000	              mov r9, qword [rsp + 0xa0]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e3a	        0x418b4f08	                mov ecx, dword [r15 + 8]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e3e	            0xf7e1	                                 mul ecx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e40	            0x89d0	                            mov eax, edx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e42	          0xc1e802	                              shr eax, 2	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e45	          0x8d0480	                  lea eax, [rax + rax*4]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e48	            0x39c1	                            cmp ecx, eax	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e4a	     0xf8405030000	                            je 0x4003155	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e50	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4002e54	            0x89ca	                            mov edx, ecx	      1875	dwarf2.c	FUNCTION_33
0x4002e56	    0x488344244801	               add qword [rsp + 0x48], 1	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002e5c	          0x83c101	                              add ecx, 1	      1879	dwarf2.c	FUNCTION_33
0x4002e5f	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      1875	dwarf2.c	FUNCTION_33
0x4002e63	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1875	dwarf2.c	FUNCTION_33
0x4002e67	          0x4c8908	                     mov qword [rax], r9	      1875	dwarf2.c	FUNCTION_33
0x4002e6a	        0x44894008	                mov dword [rax + 8], r8d	      1876	dwarf2.c	FUNCTION_33
0x4002e6e	          0x89680c	              mov dword [rax + 0xc], ebp	      1877	dwarf2.c	FUNCTION_33
0x4002e71	          0x895810	             mov dword [rax + 0x10], ebx	      1878	dwarf2.c	FUNCTION_33
0x4002e74	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002e79	      0x483b442450	            cmp rax, qword [rsp + 0x50] 	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002e7e	        0x41894f08	                mov dword [r15 + 8], ecx	      1879	dwarf2.c	FUNCTION_33
0x4002e82	     0xf828afeffff	                            jb 0x4002d12	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002e88	      0xe987efffff	                           jmp 0x4001e14	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002e8d	           0xf1f00	                         nop dword [rax]	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4002e90	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002e95	    0x4c8d9c248800	                   lea r11, [rsp + 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002e9d	        0x4c8d7810	                   lea r15, [rax + 0x10]	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ea1	      0xe9d7feffff	                           jmp 0x4002d7d	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ea6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002eab	    0x4c8d9c248800	                   lea r11, [rsp + 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002eb3	        0x4c8d780c	                    lea r15, [rax + 0xc]	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002eb7	      0xe9c1feffff	                           jmp 0x4002d7d	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ebc	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ec1	    0x4c8d9c248800	                   lea r11, [rsp + 0x88]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002ec9	        0x4c8d7808	                      lea r15, [rax + 8]	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ecd	      0xe9abfeffff	                           jmp 0x4002d7d	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ed2	    0x4c8dbc248400	                   lea r15, [rsp + 0x84]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4002eda	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002edf	      0xe999feffff	                           jmp 0x4002d7d	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4002ee4	      0xbe00000000	                              mov esi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002ee9	      0xba05000000	                              mov edx, 5	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002eee	      0xbf00000000	                              mov edi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002ef3	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002ef8	        0x48890424	                    mov qword [rsp], rax	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002efc	      0xe800000000	                          call 0x4002f01	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4002f01	        0x488b0c24	                    mov rcx, qword [rsp]	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002f05	          0x4889ce	                            mov rsi, rcx	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002f08	      0xe971faffff	                           jmp 0x400297e	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4002f0d	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002f15	          0x418907	                    mov dword [r15], eax	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002f18	      0xe9e1feffff	                           jmp 0x4002dfe	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4002f1d	      0xbe00000000	                              mov esi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002f22	      0xba05000000	                              mov edx, 5	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002f27	      0xbf00000000	                              mov edi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002f2c	      0xe800000000	                          call 0x4002f31	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002f31	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4002f36	      0xe943faffff	                           jmp 0x400297e	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4002f3b	        0x488b0424	                    mov rax, qword [rsp]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002f3f	          0x4c89e7	                            mov rdi, r12	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002f42	    0x41be08000000	                             mov r14d, 8	      2073	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002f48	          0x4989ec	                            mov r12, rbp	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002f4b	        0x488b4008	                mov rax, qword [rax + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002f4f	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002f52	          0x4189c5	                           mov r13d, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002f55	      0xe9eef3ffff	                           jmp 0x4002348	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4002f5a	      0x41807b0100	                   cmp byte [r11 + 1], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4002f5f	     0xf859e000000	                           jne 0x4003003	       666	dwarf2.c	FUNCTION_12	IF_2
0x4002f65	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002f70	      0xb801000000	                              mov eax, 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002f75	          0x4531ed	                          xor r13d, r13d	       669	dwarf2.c	FUNCTION_12	IF_2
0x4002f78	      0xe939fbffff	                           jmp 0x4002ab6	       669	dwarf2.c	FUNCTION_12	IF_2
0x4002f7d	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	       669	dwarf2.c	FUNCTION_12	IF_2
0x4002f82	      0xe9d6ebffff	                           jmp 0x4001b5d	       669	dwarf2.c	FUNCTION_12	IF_2
0x4002f87	          0x8d4105	                      lea eax, [rcx + 5]	      1866	dwarf2.c	FUNCTION_33	IF_1
0x4002f8a	      0x4c89442478	              mov qword [rsp + 0x78], r8	      1866	dwarf2.c	FUNCTION_33	IF_1
0x4002f8f	        0x488d3440	                  lea rsi, [rax + rax*2]	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002f93	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002f98	        0x48c1e603	                              shl rsi, 3	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002f9c	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002fa0	      0xe800000000	                          call 0x4002fa5	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4002fa5	          0x4885c0	                           test rax, rax	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4002fa8	     0xf849df6ffff	                            je 0x400264b	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4002fae	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002fb3	      0x4c8b442478	              mov r8, qword [rsp + 0x78]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002fb8	        0x48894628	             mov qword [rsi + 0x28], rax	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002fbc	          0x8b4e08	                mov ecx, dword [rsi + 8]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002fbf	      0xe990fbffff	                           jmp 0x4002b54	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4002fc4	        0x48896820	             mov qword [rax + 0x20], rbp	      1643	dwarf2.c	FUNCTION_27	IF_2
0x4002fc8	        0x4c897028	             mov qword [rax + 0x28], r14	      1644	dwarf2.c	FUNCTION_27	IF_2
0x4002fcc	      0xe932fcffff	                           jmp 0x4002c03	      1644	dwarf2.c	FUNCTION_27	IF_2
0x4002fd1	          0x4d85ed	                           test r13, r13	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002fd4	     0xf8411ebffff	                            je 0x4001aeb	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002fda	    0x41be04000000	                             mov r14d, 4	      2061	dwarf2.c	FUNCTION_35
0x4002fe0	      0xe963f3ffff	                           jmp 0x4002348	      2061	dwarf2.c	FUNCTION_35
0x4002fe5	      0xbe00000000	                              mov esi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002fea	      0xba05000000	                              mov edx, 5	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002fef	      0xbf00000000	                              mov edi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002ff4	      0xe800000000	                          call 0x4002ff9	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4002ff9	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4002ffe	      0xe97bf9ffff	                           jmp 0x400297e	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4003003	        0x4983c302	                              add r11, 2	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4003007	            0xeb0b	                           jmp 0x4003014	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4003009	        0x4983c301	                              add r11, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x400300d	      0x41807bff00	                   cmp byte [r11 - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4003012	            0x741b	                            je 0x400302f	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4003014	          0x4d39e3	                            cmp r11, r12	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4003017	            0x72f0	                            jb 0x4003009	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4003019	          0x4929db	                            sub r11, rbx	       679	dwarf2.c	FUNCTION_12
0x400301c	          0x4531ed	                          xor r13d, r13d	       680	dwarf2.c	FUNCTION_12
0x400301f	    0x44899c24a000	            mov dword [rsp + 0xa0], r11d	       679	dwarf2.c	FUNCTION_12
0x4003027	          0x4489d8	                           mov eax, r11d	       679	dwarf2.c	FUNCTION_12
0x400302a	      0xe987faffff	                           jmp 0x4002ab6	       679	dwarf2.c	FUNCTION_12
0x400302f	          0x4929db	                            sub r11, rbx	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4003032	          0x4989dd	                            mov r13, rbx	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4003035	    0x44899c24a000	            mov dword [rsp + 0xa0], r11d	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x400303d	          0x4489d8	                           mov eax, r11d	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4003040	      0xe971faffff	                           jmp 0x4002ab6	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4003045	          0x4589f5	                          mov r13d, r14d	      1768	dwarf2.c	FUNCTION_30
0x4003048	          0x498b3f	                    mov rdi, qword [r15]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x400304b	      0x4b8d74ad00	                  lea rsi, [r13 + r13*4]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4003050	        0x48c1e603	                              shl rsi, 3	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4003054	      0xe800000000	                          call 0x4003059	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4003059	          0x4885c0	                           test rax, rax	      1770	dwarf2.c	FUNCTION_30	IF_2
0x400305c	          0x4889c3	                            mov rbx, rax	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x400305f	     0xf84f8eaffff	                            je 0x4001b5d	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4003065	          0x4889c5	                            mov rbp, rax	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4003068	        0x418d46ff	                      lea eax, [r14 - 1]	      1770	dwarf2.c	FUNCTION_30	IF_2
0x400306c	        0x4d8b6730	            mov r12, qword [r15 + 0x30] 	      1774	dwarf2.c	FUNCTION_30
0x4003070	      0x488d448005	              lea rax, [rax + rax*4 + 5]	      1774	dwarf2.c	FUNCTION_30
0x4003075	        0x488d04c3	                  lea rax, [rbx + rax*8]	      1774	dwarf2.c	FUNCTION_30
0x4003079	        0x48890424	                    mov qword [rsp], rax	      1774	dwarf2.c	FUNCTION_30
0x400307d	            0xeb48	                           jmp 0x40030c7	      1774	dwarf2.c	FUNCTION_30
0x400307f	              0x90	                                     nop	      1774	dwarf2.c	FUNCTION_30
0x4003080	        0x498b0424	                    mov rax, qword [r12]	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x4003084	    0x48c745080000	                  mov qword [rbp + 8], 0	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x400308c	          0x4c89e7	                            mov rdi, r12	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x400308f	        0x4883c528	                           add rbp, 0x28	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4003093	        0x488945d8	             mov qword [rbp - 0x28], rax	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x4003097	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x400309c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x40030a4	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x40030ac	        0x488945e8	             mov qword [rbp - 0x18], rax	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x40030b0	      0x4d8b742408	                mov r14, qword [r12 + 8]	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x40030b5	      0xe800000000	                          call 0x40030ba	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x40030ba	        0x48392c24	                    cmp qword [rsp], rbp	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x40030be	     0xf84dc000000	                            je 0x40031a0	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x40030c4	          0x4d89f4	                            mov r12, r14	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x40030c7	          0x4d85e4	                           test r12, r12	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x40030ca	            0x75b4	                           jne 0x4003080	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x40030cc	      0xbef3060000	                          mov esi, 0x6f3	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x40030d1	      0xbf00000000	                              mov edi, 0	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x40030d6	      0xe800000000	                          call 0x40030db	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x40030db	            0xeba3	                           jmp 0x4003080	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x40030dd	           0xf1f00	                         nop dword [rax]	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x40030e0	          0x8d7105	                      lea esi, [rcx + 5]	      1832	dwarf2.c	FUNCTION_31	IF_1
0x40030e3	          0x4989ff	                            mov r15, rdi	      1832	dwarf2.c	FUNCTION_31	IF_1
0x40030e6	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x40030ea	        0x48c1e603	                              shl rsi, 3	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x40030ee	      0xe800000000	                          call 0x40030f3	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x40030f3	          0x4885c0	                           test rax, rax	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x40030f6	     0xf8481feffff	                            je 0x4002f7d	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x40030fc	        0x49894720	             mov qword [r15 + 0x20], rax	      1838	dwarf2.c	FUNCTION_31	IF_1
0x4003100	        0x418b4f0c	              mov ecx, dword [r15 + 0xc]	      1838	dwarf2.c	FUNCTION_31	IF_1
0x4003104	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      1838	dwarf2.c	FUNCTION_31	IF_1
0x4003109	      0xe95ff7ffff	                           jmp 0x400286d	      1838	dwarf2.c	FUNCTION_31	IF_1
0x400310e	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	      1838	dwarf2.c	FUNCTION_31	IF_1
0x4003113	      0xe945eaffff	                           jmp 0x4001b5d	      1838	dwarf2.c	FUNCTION_31	IF_1
0x4003118	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x400311d	      0xbe18000000	                           mov esi, 0x18	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4003122	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4003126	      0xe800000000	                          call 0x400312b	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x400312b	          0x4885c0	                           test rax, rax	      1669	dwarf2.c	FUNCTION_27	IF_5
0x400312e	     0xf8417f5ffff	                            je 0x400264b	      1669	dwarf2.c	FUNCTION_27	IF_5
0x4003134	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      1673	dwarf2.c	FUNCTION_27
0x4003138	        0x48896808	                mov qword [rax + 8], rbp	      1671	dwarf2.c	FUNCTION_27
0x400313c	        0x4c897010	             mov qword [rax + 0x10], r14	      1672	dwarf2.c	FUNCTION_27
0x4003140	          0x488910	                    mov qword [rax], rdx	      1673	dwarf2.c	FUNCTION_27
0x4003143	        0x49894718	             mov qword [r15 + 0x18], rax	      1674	dwarf2.c	FUNCTION_27
0x4003147	      0xe9b7faffff	                           jmp 0x4002c03	      1674	dwarf2.c	FUNCTION_27
0x400314c	        0x48896808	                mov qword [rax + 8], rbp	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4003150	      0xe9aefaffff	                           jmp 0x4002c03	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4003155	          0x8d4105	                      lea eax, [rcx + 5]	      1866	dwarf2.c	FUNCTION_33	IF_1
0x4003158	        0x498b7f28	            mov rdi, qword [r15 + 0x28] 	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x400315c	      0x4c894c2460	              mov qword [rsp + 0x60], r9	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4003161	      0x4489442428	             mov dword [rsp + 0x28], r8d	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4003166	        0x488d3440	                  lea rsi, [rax + rax*2]	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x400316a	        0x48c1e603	                              shl rsi, 3	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x400316e	      0xe800000000	                          call 0x4003173	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4003173	          0x4885c0	                           test rax, rax	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4003176	     0xf84e1e9ffff	                            je 0x4001b5d	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x400317c	        0x49894728	             mov qword [r15 + 0x28], rax	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4003180	        0x418b4f08	                mov ecx, dword [r15 + 8]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4003184	      0x4c8b4c2460	              mov r9, qword [rsp + 0x60]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4003189	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      1872	dwarf2.c	FUNCTION_33	IF_1
0x400318e	      0xe9c1fcffff	                           jmp 0x4002e54	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4003193	          0x4989df	                            mov r15, rbx	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4003196	      0xe9d5efffff	                           jmp 0x4002170	      1872	dwarf2.c	FUNCTION_33	IF_1
0x400319b	      0xe800000000	                          call 0x40031a0	      2455	dwarf2.c	FUNCTION_35
0x40031a0	          0x4d85f6	                           test r14, r14	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x40031a3	            0x740f	                            je 0x40031b4	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x40031a5	      0xbefc060000	                          mov esi, 0x6fc	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x40031aa	      0xbf00000000	                              mov edi, 0	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x40031af	      0xe800000000	                          call 0x40031b4	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x40031b4	      0xb900000000	                              mov ecx, 0	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40031b9	      0xba28000000	                           mov edx, 0x28	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40031be	          0x4c89ee	                            mov rsi, r13	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40031c1	          0x4889df	                            mov rdi, rbx	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40031c4	      0xe800000000	                          call 0x40031c9	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x40031c9	        0x458b4f10	            mov r9d, dword [r15 + 0x10] 	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40031cd	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1795	dwarf2.c	FUNCTION_30
0x40031d1	        0x4183f901	                              cmp r9d, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40031d5	        0x488b4808	                mov rcx, qword [rax + 8]	      1795	dwarf2.c	FUNCTION_30
0x40031d9	            0x7651	                           jbe 0x400322c	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40031db	        0x488d5328	                   lea rdx, [rbx + 0x28]	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40031df	      0xb801000000	                              mov eax, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40031e4	      0xbe01000000	                              mov esi, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x40031e9	          0x4c8b02	                     mov r8, qword [rdx]	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40031ec	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x40031f0	          0x4c39c1	                             cmp rcx, r8	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40031f3	            0x760c	                           jbe 0x4003201	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40031f5	        0x483b4f08	                cmp rcx, qword [rdi + 8]	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x40031f9	            0x7323	                           jae 0x400321e	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x40031fb	          0x48890a	                    mov qword [rdx], rcx	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x40031fe	          0x4989c8	                             mov r8, rcx	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4003201	            0x39f0	                            cmp eax, esi	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4003203	        0x488b4f08	                mov rcx, qword [rdi + 8]	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4003207	            0x7312	                           jae 0x400321b	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4003209	          0x4189c2	                           mov r10d, eax	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x400320c	        0x4f8d1492	                  lea r10, [r10 + r10*4]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4003210	        0x4e8d14d3	                  lea r10, [rbx + r10*8]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4003214	          0x4d8902	                     mov qword [r10], r8	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4003217	        0x49897a10	             mov qword [r10 + 0x10], rdi	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x400321b	          0x83c001	                              add eax, 1	      1814	dwarf2.c	FUNCTION_30	FOR_2
0x400321e	          0x83c601	                              add esi, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4003221	        0x4883c228	                           add rdx, 0x28	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4003225	          0x4139f1	                            cmp r9d, esi	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4003228	            0x75bf	                           jne 0x40031e9	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x400322a	            0xeb05	                           jmp 0x4003231	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x400322c	      0xb801000000	                              mov eax, 1	      1794	dwarf2.c	FUNCTION_30
0x4003231	        0x49895f30	             mov qword [r15 + 0x30], rbx	      1817	dwarf2.c	FUNCTION_30
0x4003235	        0x41894710	             mov dword [r15 + 0x10], eax	      1818	dwarf2.c	FUNCTION_30
0x4003239	      0xe9ecf9ffff	                           jmp 0x4002c2a	      1818	dwarf2.c	FUNCTION_30
0x400323e	           0xfb7ed	                           movzx ebp, bp	      1818	dwarf2.c	FUNCTION_30
0x4003241	      0xe9d3e8ffff	                           jmp 0x4001b19	      1818	dwarf2.c	FUNCTION_30
0x4003246	          0x4c89e3	                            mov rbx, r12	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4003249	      0xe92eebffff	                           jmp 0x4001d7c	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400324e	          0x4989dc	                            mov r12, rbx	       660	dwarf2.c	FUNCTION_12	IF_1
0x4003251	      0xe9dfedffff	                           jmp 0x4002035	       660	dwarf2.c	FUNCTION_12	IF_1
0x4003256	    0x8b9c24800000	            mov ebx, dword [rsp + 0x80] 	      1916	dwarf2.c	FUNCTION_34
0x400325d	      0x488b6c2460	            mov rbp, qword [rsp + 0x60] 	      1916	dwarf2.c	FUNCTION_34
0x4003262	          0x4801dd	                            add rbp, rbx	      1916	dwarf2.c	FUNCTION_34
0x4003265	      0xe926f6ffff	                           jmp 0x4002890	      1916	dwarf2.c	FUNCTION_34
_bfd_dwarf2_find_symbol_bias	functions,0:DO,0:SWITCH,0:WHILE,0:ELSE,0:IF,6:FOR,3:CALL,3	89
0x4005fb0	            0x4157	                                push r15	      4460	dwarf2.c	FUNCTION_67
0x4005fb2	            0x4156	                                push r14	      4460	dwarf2.c	FUNCTION_67
0x4005fb4	            0x4155	                                push r13	      4460	dwarf2.c	FUNCTION_67
0x4005fb6	            0x4154	                                push r12	      4460	dwarf2.c	FUNCTION_67
0x4005fb8	              0x55	                                push rbp	      4460	dwarf2.c	FUNCTION_67
0x4005fb9	              0x53	                                push rbx	      4460	dwarf2.c	FUNCTION_67
0x4005fba	        0x4883ec28	                           sub rsp, 0x28	      4460	dwarf2.c	FUNCTION_67
0x4005fbe	          0x488b06	                    mov rax, qword [rsi]	      4464	dwarf2.c	FUNCTION_67
0x4005fc1	          0x4885c0	                           test rax, rax	      4466	dwarf2.c	FUNCTION_67	IF_1
0x4005fc4	      0x4889442418	             mov qword [rsp + 0x18], rax	      4464	dwarf2.c	FUNCTION_67
0x4005fc9	     0xf84d6000000	                            je 0x40060a5	      4466	dwarf2.c	FUNCTION_67	IF_1
0x4005fcf	      0x48897c2408	                mov qword [rsp + 8], rdi	      4466	dwarf2.c	FUNCTION_67	IF_1
0x4005fd4	          0x488b00	                    mov rax, qword [rax]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4005fd7	          0x4885c0	                           test rax, rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4005fda	      0x4889442410	             mov qword [rsp + 0x10], rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4005fdf	     0xf84c0000000	                            je 0x40060a5	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4005fe5	    0x488b98800000	            mov rbx, qword [rax + 0x80] 	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4005fec	          0x4885db	                           test rbx, rbx	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4005fef	     0xf8485000000	                            je 0x400607a	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4005ff5	           0xf1f00	                         nop dword [rax]	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4005ff8	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x4005ffc	          0x4885ed	                           test rbp, rbp	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x4005fff	            0x744c	                            je 0x400604d	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x4006001	        0x4c8b6340	            mov r12, qword [rbx + 0x40] 	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x4006005	          0x4d85e4	                           test r12, r12	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x4006008	            0x7443	                            je 0x400604d	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x400600a	      0x488b442408	                mov rax, qword [rsp + 8]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400600f	          0x4c8b38	                    mov r15, qword [rax]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4006012	          0x4d85ff	                           test r15, r15	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4006015	            0x7436	                            je 0x400604d	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4006017	          0x4989c5	                            mov r13, rax	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400601a	    0x660f1f440000	                    nop word [rax + rax]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4006020	      0x41f6471808	               test byte [r15 + 0x18], 8	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4006025	            0x7419	                            je 0x4006040	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4006027	        0x4d8b7720	            mov r14, qword [r15 + 0x20] 	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400602b	          0x4d85f6	                           test r14, r14	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400602e	            0x7410	                            je 0x4006040	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4006030	        0x498b7f08	                mov rdi, qword [r15 + 8]	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4006034	          0x4889ee	                            mov rsi, rbp	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4006037	      0xe800000000	                          call 0x400603c	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x400603c	            0x85c0	                           test eax, eax	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x400603e	            0x7420	                            je 0x4006060	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4006040	        0x4983c508	                              add r13, 8	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4006044	        0x4d8b7d00	                    mov r15, qword [r13]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4006048	          0x4d85ff	                           test r15, r15	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400604b	            0x75d3	                           jne 0x4006020	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400604d	          0x488b1b	                    mov rbx, qword [rbx]	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4006050	          0x4885db	                           test rbx, rbx	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4006053	            0x75a3	                           jne 0x4005ff8	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4006055	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400605a	      0xe975ffffff	                           jmp 0x4005fd4	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400605f	              0x90	                                     nop	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4006060	          0x4c89e0	                            mov rax, r12	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4006063	        0x492b4628	             sub rax, qword [r14 + 0x28]	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4006067	        0x492b4710	             sub rax, qword [r15 + 0x10]	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400606b	        0x4883c428	                           add rsp, 0x28	      4502	dwarf2.c	FUNCTION_67
0x400606f	              0x5b	                                 pop rbx	      4502	dwarf2.c	FUNCTION_67
0x4006070	              0x5d	                                 pop rbp	      4502	dwarf2.c	FUNCTION_67
0x4006071	            0x415c	                                 pop r12	      4502	dwarf2.c	FUNCTION_67
0x4006073	            0x415d	                                 pop r13	      4502	dwarf2.c	FUNCTION_67
0x4006075	            0x415e	                                 pop r14	      4502	dwarf2.c	FUNCTION_67
0x4006077	            0x415f	                                 pop r15	      4502	dwarf2.c	FUNCTION_67
0x4006079	              0xc3	                                     ret	      4502	dwarf2.c	FUNCTION_67
0x400607a	      0x4883787800	               cmp qword [rax + 0x78], 0	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x400607f	            0x7435	                            je 0x40060b6	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x4006081	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x4006086	      0xe805e1ffff	          call sym.scan_unit_for_symbols	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x400608b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4006090	    0x488b98800000	            mov rbx, qword [rax + 0x80] 	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4006097	          0x4885db	                           test rbx, rbx	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400609a	     0xf8558ffffff	                           jne 0x4005ff8	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40060a0	      0xe92fffffff	                           jmp 0x4005fd4	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40060a5	        0x4883c428	                           add rsp, 0x28	      4502	dwarf2.c	FUNCTION_67
0x40060a9	            0x31c0	                            xor eax, eax	      4467	dwarf2.c	FUNCTION_67	IF_1
0x40060ab	              0x5b	                                 pop rbx	      4502	dwarf2.c	FUNCTION_67
0x40060ac	              0x5d	                                 pop rbp	      4502	dwarf2.c	FUNCTION_67
0x40060ad	            0x415c	                                 pop r12	      4502	dwarf2.c	FUNCTION_67
0x40060af	            0x415d	                                 pop r13	      4502	dwarf2.c	FUNCTION_67
0x40060b1	            0x415e	                                 pop r14	      4502	dwarf2.c	FUNCTION_67
0x40060b3	            0x415f	                                 pop r15	      4502	dwarf2.c	FUNCTION_67
0x40060b5	              0xc3	                                     ret	      4502	dwarf2.c	FUNCTION_67
0x40060b6	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40060bb	          0x4889c7	                            mov rdi, rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40060be	          0x4889c3	                            mov rbx, rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40060c1	      0xe82ab9ffff	               call sym.decode_line_info	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40060c6	          0x4885c0	                           test rax, rax	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x40060c9	        0x48894378	             mov qword [rbx + 0x78], rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40060cd	            0x74bc	                            je 0x400608b	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x40060cf	            0xebb0	                           jmp 0x4006081	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
info_hash_table_newfunc	functions,0:DO,0:SWITCH,0:WHILE,0:ELSE,0:IF,3:FOR,0:CALL,2	26
0x40006d0	              0x53	                                push rbx	       421	dwarf2.c	FUNCTION_1
0x40006d1	          0x4889f3	                            mov rbx, rsi	       421	dwarf2.c	FUNCTION_1
0x40006d4	        0x4883ec10	                           sub rsp, 0x10	       421	dwarf2.c	FUNCTION_1
0x40006d8	          0x4885ff	                           test rdi, rdi	       426	dwarf2.c	FUNCTION_1	IF_1
0x40006db	            0x7423	                            je 0x4000700	       426	dwarf2.c	FUNCTION_1	IF_1
0x40006dd	          0x4889de	                            mov rsi, rbx	       435	dwarf2.c	FUNCTION_1
0x40006e0	      0xe800000000	                          call 0x40006e5	       435	dwarf2.c	FUNCTION_1
0x40006e5	          0x4885c0	                           test rax, rax	       439	dwarf2.c	FUNCTION_1	IF_3
0x40006e8	            0x7435	                            je 0x400071f	       439	dwarf2.c	FUNCTION_1	IF_3
0x40006ea	    0x48c740180000	               mov qword [rax + 0x18], 0	       440	dwarf2.c	FUNCTION_1	IF_3
0x40006f2	        0x4883c410	                           add rsp, 0x10	       443	dwarf2.c	FUNCTION_1
0x40006f6	              0x5b	                                 pop rbx	       443	dwarf2.c	FUNCTION_1
0x40006f7	              0xc3	                                     ret	       443	dwarf2.c	FUNCTION_1
0x40006f8	     0xf1f84000000	                   nop dword [rax + rax]	       443	dwarf2.c	FUNCTION_1
0x4000700	          0x4889df	                            mov rdi, rbx	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000703	      0xbe20000000	                           mov esi, 0x20	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000708	      0x4889542408	                mov qword [rsp + 8], rdx	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x400070d	      0xe800000000	                          call 0x4000712	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000712	          0x4885c0	                           test rax, rax	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x4000715	          0x4889c7	                            mov rdi, rax	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000718	      0x488b542408	                mov rdx, qword [rsp + 8]	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x400071d	            0x75be	                           jne 0x40006dd	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x400071f	        0x4883c410	                           add rsp, 0x10	       443	dwarf2.c	FUNCTION_1
0x4000723	            0x31c0	                            xor eax, eax	       443	dwarf2.c	FUNCTION_1
0x4000725	              0x5b	                                 pop rbx	       443	dwarf2.c	FUNCTION_1
0x4000726	              0xc3	                                     ret	       443	dwarf2.c	FUNCTION_1
_bfd_dwarf2_cleanup_debug_info	functions,0:DO,0:SWITCH,0:WHILE,3:ELSE,0:IF,20:FOR,2:CALL,21	152
0x4006130	            0x4157	                                push r15	      4885	dwarf2.c	FUNCTION_70
0x4006132	            0x4156	                                push r14	      4885	dwarf2.c	FUNCTION_70
0x4006134	            0x4155	                                push r13	      4885	dwarf2.c	FUNCTION_70
0x4006136	            0x4154	                                push r12	      4885	dwarf2.c	FUNCTION_70
0x4006138	              0x55	                                push rbp	      4885	dwarf2.c	FUNCTION_70
0x4006139	              0x53	                                push rbx	      4885	dwarf2.c	FUNCTION_70
0x400613a	        0x4883ec18	                           sub rsp, 0x18	      4885	dwarf2.c	FUNCTION_70
0x400613e	          0x4885ff	                           test rdi, rdi	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4006141	          0x4c8b36	                    mov r14, qword [rsi]	      4886	dwarf2.c	FUNCTION_70
0x4006144	     0xf8420020000	                            je 0x400636a	      4889	dwarf2.c	FUNCTION_70	IF_1
0x400614a	          0x4d85f6	                           test r14, r14	      4889	dwarf2.c	FUNCTION_70	IF_1
0x400614d	     0xf8417020000	                            je 0x400636a	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4006153	          0x498b06	                    mov rax, qword [r14]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4006156	          0x4885c0	                           test rax, rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4006159	      0x4889442408	                mov qword [rsp + 8], rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x400615e	     0xf8411010000	                            je 0x4006275	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4006164	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4006168	    0x4c8ba0800000	            mov r12, qword [rax + 0x80] 	      4895	dwarf2.c	FUNCTION_70	FOR_1
0x400616f	    0x4c8ba8980000	            mov r13, qword [rax + 0x98] 	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x4006176	    0x488dabc80300	                  lea rbp, [rbx + 0x3c8]	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x400617d	           0xf1f00	                         nop dword [rax]	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x4006180	          0x4c8b3b	                    mov r15, qword [rbx]	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x4006183	          0x4d85ff	                           test r15, r15	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4006186	            0x741a	                            je 0x40061a2	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4006188	     0xf1f84000000	                   nop dword [rax + rax]	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4006190	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x4006194	      0xe800000000	                          call 0x4006199	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x4006199	        0x4d8b7f18	            mov r15, qword [r15 + 0x18] 	      4906	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x400619d	          0x4d85ff	                           test r15, r15	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40061a0	            0x75ee	                           jne 0x4006190	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40061a2	        0x4883c308	                              add rbx, 8	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40061a6	          0x4839dd	                            cmp rbp, rbx	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x40061a9	            0x75d5	                           jne 0x4006180	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x40061ab	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40061b0	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40061b4	          0x4885c0	                           test rax, rax	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40061b7	            0x7453	                            je 0x400620c	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40061b9	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x40061bd	      0xe800000000	                          call 0x40061c2	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x40061c2	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40061c6	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40061ca	      0xe800000000	                          call 0x40061cf	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40061cf	            0xeb3b	                           jmp 0x400620c	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40061d1	     0xf1f80000000	                         nop dword [rax]	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40061d8	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x40061dd	          0x4885ff	                           test rdi, rdi	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x40061e0	            0x740e	                            je 0x40061f0	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x40061e2	      0xe800000000	                          call 0x40061e7	      4920	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3	CALL_4
0x40061e7	    0x49c744241800	               mov qword [r12 + 0x18], 0	      4921	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x40061f0	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x40061f5	          0x4885ff	                           test rdi, rdi	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x40061f8	            0x740e	                            je 0x4006208	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x40061fa	      0xe800000000	                          call 0x40061ff	      4926	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4	CALL_5
0x40061ff	    0x49c744241000	               mov qword [r12 + 0x10], 0	      4927	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4006208	        0x4d8b2424	                    mov r12, qword [r12]	      4929	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x400620c	          0x4d85e4	                           test r12, r12	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x400620f	            0x75c7	                           jne 0x40061d8	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4006211	      0x488b442408	                mov rax, qword [rsp + 8]	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4006216	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x400621d	          0x4885ff	                           test rdi, rdi	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4006220	            0x7438	                            je 0x400625a	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4006222	      0xe800000000	                          call 0x4006227	      4934	dwarf2.c	FUNCTION_70	FOR_1	IF_5	CALL_6
0x4006227	      0x488b442408	                mov rax, qword [rsp + 8]	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x400622c	    0x48c780880000	               mov qword [rax + 0x88], 0	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4006237	            0xeb21	                           jmp 0x400625a	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4006239	     0xf1f80000000	                         nop dword [rax]	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4006240	        0x498b7d08	                mov rdi, qword [r13 + 8]	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4006244	          0x4885ff	                           test rdi, rdi	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4006247	            0x740d	                            je 0x4006256	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4006249	      0xe800000000	                          call 0x400624e	      4942	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6	CALL_7
0x400624e	    0x49c745080000	                  mov qword [r13 + 8], 0	      4943	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4006256	        0x4d8b6d00	                    mov r13, qword [r13]	      4946	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x400625a	          0x4d85ed	                           test r13, r13	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x400625d	            0x75e1	                           jne 0x4006240	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x400625f	      0x488b442408	                mov rax, qword [rsp + 8]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4006264	          0x488b00	                    mov rax, qword [rax]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4006267	          0x4885c0	                           test rax, rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x400626a	      0x4889442408	                mov qword [rsp + 8], rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x400626f	     0xf85effeffff	                           jne 0x4006164	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4006275	    0x498bbef80000	            mov rdi, qword [r14 + 0xf8] 	      4950	dwarf2.c	FUNCTION_70	IF_7
0x400627c	          0x4885ff	                           test rdi, rdi	      4950	dwarf2.c	FUNCTION_70	IF_7
0x400627f	            0x7405	                            je 0x4006286	      4950	dwarf2.c	FUNCTION_70	IF_7
0x4006281	      0xe800000000	                          call 0x4006286	      4951	dwarf2.c	FUNCTION_70	CALL_8
0x4006286	    0x498bbe000100	           mov rdi, qword [r14 + 0x100] 	      4952	dwarf2.c	FUNCTION_70	IF_8
0x400628d	          0x4885ff	                           test rdi, rdi	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4006290	            0x7405	                            je 0x4006297	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4006292	      0xe800000000	                          call 0x4006297	      4953	dwarf2.c	FUNCTION_70	CALL_9
0x4006297	    0x498bbe800000	            mov rdi, qword [r14 + 0x80] 	      4954	dwarf2.c	FUNCTION_70	IF_9
0x400629e	          0x4885ff	                           test rdi, rdi	      4954	dwarf2.c	FUNCTION_70	IF_9
0x40062a1	            0x7405	                            je 0x40062a8	      4954	dwarf2.c	FUNCTION_70	IF_9
0x40062a3	      0xe800000000	                          call 0x40062a8	      4955	dwarf2.c	FUNCTION_70	CALL_10
0x40062a8	    0x498bbe900000	            mov rdi, qword [r14 + 0x90] 	      4956	dwarf2.c	FUNCTION_70	IF_10
0x40062af	          0x4885ff	                           test rdi, rdi	      4956	dwarf2.c	FUNCTION_70	IF_10
0x40062b2	            0x7405	                            je 0x40062b9	      4956	dwarf2.c	FUNCTION_70	IF_10
0x40062b4	      0xe800000000	                          call 0x40062b9	      4957	dwarf2.c	FUNCTION_70	CALL_11
0x40062b9	    0x498bbea00000	            mov rdi, qword [r14 + 0xa0] 	      4958	dwarf2.c	FUNCTION_70	IF_11
0x40062c0	          0x4885ff	                           test rdi, rdi	      4958	dwarf2.c	FUNCTION_70	IF_11
0x40062c3	            0x7405	                            je 0x40062ca	      4958	dwarf2.c	FUNCTION_70	IF_11
0x40062c5	      0xe800000000	                          call 0x40062ca	      4959	dwarf2.c	FUNCTION_70	CALL_12
0x40062ca	    0x498bbeb00000	            mov rdi, qword [r14 + 0xb0] 	      4960	dwarf2.c	FUNCTION_70	IF_12
0x40062d1	          0x4885ff	                           test rdi, rdi	      4960	dwarf2.c	FUNCTION_70	IF_12
0x40062d4	            0x7405	                            je 0x40062db	      4960	dwarf2.c	FUNCTION_70	IF_12
0x40062d6	      0xe800000000	                          call 0x40062db	      4961	dwarf2.c	FUNCTION_70	CALL_13
0x40062db	    0x498bbec00000	            mov rdi, qword [r14 + 0xc0] 	      4962	dwarf2.c	FUNCTION_70	IF_13
0x40062e2	          0x4885ff	                           test rdi, rdi	      4962	dwarf2.c	FUNCTION_70	IF_13
0x40062e5	            0x7405	                            je 0x40062ec	      4962	dwarf2.c	FUNCTION_70	IF_13
0x40062e7	      0xe800000000	                          call 0x40062ec	      4963	dwarf2.c	FUNCTION_70	CALL_14
0x40062ec	        0x498b7e70	            mov rdi, qword [r14 + 0x70] 	      4964	dwarf2.c	FUNCTION_70	IF_14
0x40062f0	          0x4885ff	                           test rdi, rdi	      4964	dwarf2.c	FUNCTION_70	IF_14
0x40062f3	            0x7405	                            je 0x40062fa	      4964	dwarf2.c	FUNCTION_70	IF_14
0x40062f5	      0xe800000000	                          call 0x40062fa	      4965	dwarf2.c	FUNCTION_70	CALL_15
0x40062fa	    0x418b86140100	           mov eax, dword [r14 + 0x114] 	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4006301	            0x85c0	                           test eax, eax	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4006303	            0x755a	                           jne 0x400635f	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4006305	        0x498b7e50	            mov rdi, qword [r14 + 0x50] 	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4006309	          0x4885ff	                           test rdi, rdi	      4968	dwarf2.c	FUNCTION_70	IF_16
0x400630c	            0x7405	                            je 0x4006313	      4968	dwarf2.c	FUNCTION_70	IF_16
0x400630e	      0xe800000000	                          call 0x4006313	      4969	dwarf2.c	FUNCTION_70	CALL_17
0x4006313	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4006317	          0x4885ff	                           test rdi, rdi	      4970	dwarf2.c	FUNCTION_70	IF_17
0x400631a	            0x7405	                            je 0x4006321	      4970	dwarf2.c	FUNCTION_70	IF_17
0x400631c	      0xe800000000	                          call 0x4006321	      4971	dwarf2.c	FUNCTION_70	CALL_18
0x4006321	    0x498bbed80000	            mov rdi, qword [r14 + 0xd8] 	      4972	dwarf2.c	FUNCTION_70	IF_18
0x4006328	          0x4885ff	                           test rdi, rdi	      4972	dwarf2.c	FUNCTION_70	IF_18
0x400632b	            0x7405	                            je 0x4006332	      4972	dwarf2.c	FUNCTION_70	IF_18
0x400632d	      0xe800000000	                          call 0x4006332	      4973	dwarf2.c	FUNCTION_70	CALL_19
0x4006332	    0x498bbee80000	            mov rdi, qword [r14 + 0xe8] 	      4974	dwarf2.c	FUNCTION_70	IF_19
0x4006339	          0x4885ff	                           test rdi, rdi	      4974	dwarf2.c	FUNCTION_70	IF_19
0x400633c	            0x7405	                            je 0x4006343	      4974	dwarf2.c	FUNCTION_70	IF_19
0x400633e	      0xe800000000	                          call 0x4006343	      4975	dwarf2.c	FUNCTION_70	CALL_20
0x4006343	        0x498b7e48	            mov rdi, qword [r14 + 0x48] 	      4976	dwarf2.c	FUNCTION_70	IF_20
0x4006347	          0x4885ff	                           test rdi, rdi	      4976	dwarf2.c	FUNCTION_70	IF_20
0x400634a	            0x741e	                            je 0x400636a	      4976	dwarf2.c	FUNCTION_70	IF_20
0x400634c	        0x4883c418	                           add rsp, 0x18	      4978	dwarf2.c	FUNCTION_70
0x4006350	              0x5b	                                 pop rbx	      4978	dwarf2.c	FUNCTION_70
0x4006351	              0x5d	                                 pop rbp	      4978	dwarf2.c	FUNCTION_70
0x4006352	            0x415c	                                 pop r12	      4978	dwarf2.c	FUNCTION_70
0x4006354	            0x415d	                                 pop r13	      4978	dwarf2.c	FUNCTION_70
0x4006356	            0x415e	                                 pop r14	      4978	dwarf2.c	FUNCTION_70
0x4006358	            0x415f	                                 pop r15	      4978	dwarf2.c	FUNCTION_70
0x400635a	      0xe900000000	                           jmp 0x400635f	      4977	dwarf2.c	FUNCTION_70	CALL_21
0x400635f	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4006363	      0xe800000000	                          call 0x4006368	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4006368	            0xeb9b	                           jmp 0x4006305	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x400636a	        0x4883c418	                           add rsp, 0x18	      4978	dwarf2.c	FUNCTION_70
0x400636e	              0x5b	                                 pop rbx	      4978	dwarf2.c	FUNCTION_70
0x400636f	              0x5d	                                 pop rbp	      4978	dwarf2.c	FUNCTION_70
0x4006370	            0x415c	                                 pop r12	      4978	dwarf2.c	FUNCTION_70
0x4006372	            0x415d	                                 pop r13	      4978	dwarf2.c	FUNCTION_70
0x4006374	            0x415e	                                 pop r14	      4978	dwarf2.c	FUNCTION_70
0x4006376	            0x415f	                                 pop r15	      4978	dwarf2.c	FUNCTION_70
0x4006378	              0xc3	                                     ret	      4978	dwarf2.c	FUNCTION_70
_bfd_dwarf2_find_nearest_line	functions,0:DO,0:SWITCH,0:WHILE,1:ELSE,10:IF,40:FOR,3:CALL,23	1286
0x4006d50	            0x4157	                                push r15	      4529	dwarf2.c	FUNCTION_68
0x4006d52	            0x4156	                                push r14	      4529	dwarf2.c	FUNCTION_68
0x4006d54	            0x4155	                                push r13	      4529	dwarf2.c	FUNCTION_68
0x4006d56	            0x4154	                                push r12	      4529	dwarf2.c	FUNCTION_68
0x4006d58	              0x55	                                push rbp	      4529	dwarf2.c	FUNCTION_68
0x4006d59	              0x53	                                push rbx	      4529	dwarf2.c	FUNCTION_68
0x4006d5a	    0x4881ec180100	                          sub rsp, 0x118	      4529	dwarf2.c	FUNCTION_68
0x4006d61	    0x49c701000000	                       mov qword [r9], 0	      4546	dwarf2.c	FUNCTION_68
0x4006d68	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4529	dwarf2.c	FUNCTION_68
0x4006d6d	    0x488b8c245801	           mov rcx, qword [rsp + 0x158] 	      4529	dwarf2.c	FUNCTION_68
0x4006d75	    0x488b84245001	           mov rax, qword [rsp + 0x150] 	      4529	dwarf2.c	FUNCTION_68
0x4006d7d	        0x48893c24	                    mov qword [rsp], rdi	      4529	dwarf2.c	FUNCTION_68
0x4006d81	      0x4889742440	             mov qword [rsp + 0x40], rsi	      4529	dwarf2.c	FUNCTION_68
0x4006d86	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4529	dwarf2.c	FUNCTION_68
0x4006d8b	      0x48894c2408	                mov qword [rsp + 8], rcx	      4529	dwarf2.c	FUNCTION_68
0x4006d90	    0x488b8c246001	           mov rcx, qword [rsp + 0x160] 	      4529	dwarf2.c	FUNCTION_68
0x4006d98	      0x4c89442448	              mov qword [rsp + 0x48], r8	      4529	dwarf2.c	FUNCTION_68
0x4006d9d	      0x4c894c2460	              mov qword [rsp + 0x60], r9	      4529	dwarf2.c	FUNCTION_68
0x4006da2	      0x4889442458	             mov qword [rsp + 0x58], rax	      4529	dwarf2.c	FUNCTION_68
0x4006da7	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	      4529	dwarf2.c	FUNCTION_68
0x4006daf	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      4529	dwarf2.c	FUNCTION_68
0x4006db4	    0x488b8c246801	           mov rcx, qword [rsp + 0x168] 	      4529	dwarf2.c	FUNCTION_68
0x4006dbc	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      4542	dwarf2.c	FUNCTION_68
0x4006dc8	      0x48894c2450	             mov qword [rsp + 0x50], rcx	      4529	dwarf2.c	FUNCTION_68
0x4006dcd	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      4529	dwarf2.c	FUNCTION_68
0x4006dd6	    0x48898c240801	            mov qword [rsp + 0x108], rcx	      4529	dwarf2.c	FUNCTION_68
0x4006dde	            0x31c9	                            xor ecx, ecx	      4529	dwarf2.c	FUNCTION_68
0x4006de0	          0x4885c0	                           test rax, rax	      4547	dwarf2.c	FUNCTION_68	IF_1
0x4006de3	            0x7407	                            je 0x4006dec	      4547	dwarf2.c	FUNCTION_68	IF_1
0x4006de5	    0x48c700000000	                      mov qword [rax], 0	      4548	dwarf2.c	FUNCTION_68	IF_1
0x4006dec	      0x488b442408	                mov rax, qword [rsp + 8]	      4549	dwarf2.c	FUNCTION_68
0x4006df1	    0xc70000000000	                      mov dword [rax], 0	      4549	dwarf2.c	FUNCTION_68
0x4006df7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4006dfc	          0x4885c0	                           test rax, rax	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4006dff	            0x7406	                            je 0x4006e07	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4006e01	    0xc70000000000	                      mov dword [rax], 0	      4551	dwarf2.c	FUNCTION_68	IF_2
0x4006e07	        0x488b3c24	                    mov rdi, qword [rsp]	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4006e0b	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e10	          0x4531c9	                            xor r9d, r9d	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e13	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e18	          0x4989d8	                             mov r8, rbx	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e1b	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4006e1e	        0x89442420	             mov dword [rsp + 0x20], eax	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4006e22	          0xc1e805	                              shr eax, 5	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4006e25	            0xa842	                           test al, 0x42	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e27	        0x410f94c1	                                sete r9b	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e2b	            0x31f6	                            xor esi, esi	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e2d	      0xe800000000	                          call 0x4006e32	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e32	            0x85c0	                           test eax, eax	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e34	     0xf8490010000	                            je 0x4006fca	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4006e3a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4560	dwarf2.c	FUNCTION_68
0x4006e3f	            0x31f6	                            xor esi, esi	      4560	dwarf2.c	FUNCTION_68
0x4006e41	          0x4c8b33	                    mov r14, qword [rbx]	      4558	dwarf2.c	FUNCTION_68
0x4006e44	          0x4885c0	                           test rax, rax	      4560	dwarf2.c	FUNCTION_68
0x4006e47	        0x400f95c6	                               setne sil	      4560	dwarf2.c	FUNCTION_68
0x4006e4b	        0x8974246c	             mov dword [rsp + 0x6c], esi	      4560	dwarf2.c	FUNCTION_68
0x4006e4f	     0xf8437060000	                            je 0x400748c	      4561	dwarf2.c	FUNCTION_68	IF_4
0x4006e55	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e5b	           0xf95c2	                                setne dl	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e5e	    0x48837c244800	               cmp qword [rsp + 0x48], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e64	           0xf95c0	                                setne al	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e67	             0x8c2	                               or dl, al	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e69	            0x7508	                           jne 0x4006e73	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e6b	    0x48837c245800	               cmp qword [rsp + 0x58], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e71	            0x740f	                            je 0x4006e82	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e73	      0xbed3110000	                         mov esi, 0x11d3	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e78	      0xbf00000000	                              mov edi, 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e7d	      0xe800000000	                          call 0x4006e82	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4006e82	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4006e87	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4006e8b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4565	dwarf2.c	FUNCTION_68	IF_4
0x4006e8f	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4006e94	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4006e99	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4006e9d	          0x4885d2	                           test rdx, rdx	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4006ea0	     0xf84da050000	                            je 0x4007480	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4006ea6	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4006eaa	        0x48034228	             add rax, qword [rdx + 0x28]	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4006eae	        0x4c8d2408	                    lea r12, [rax + rcx]	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4006eb2	      0x49837e1800	               cmp qword [r14 + 0x18], 0	      4612	dwarf2.c	FUNCTION_68	IF_9
0x4006eb7	     0xf840d010000	                            je 0x4006fca	      4612	dwarf2.c	FUNCTION_68	IF_9
0x4006ebd	      0x448b44246c	            mov r8d, dword [rsp + 0x6c] 	      4618	dwarf2.c	FUNCTION_68	IF_10
0x4006ec2	    0x49c786d00000	               mov qword [r14 + 0xd0], 0	      4615	dwarf2.c	FUNCTION_68
0x4006ecd	          0x4585c0	                           test r8d, r8d	      4618	dwarf2.c	FUNCTION_68	IF_10
0x4006ed0	     0xf841f010000	                            je 0x4006ff5	      4618	dwarf2.c	FUNCTION_68	IF_10
0x4006ed6	    0x418b86100100	           mov eax, dword [r14 + 0x110] 	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x4006edd	            0x85c0	                           test eax, eax	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x4006edf	     0xf8497030000	                            je 0x400727c	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x4006ee5	          0x83f801	                              cmp eax, 1	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x4006ee8	     0xf8440040000	                            je 0x400732e	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x4006eee	          0x498b1e	                    mov rbx, qword [r14]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006ef1	          0x4885db	                           test rbx, rbx	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006ef4	     0xf846a020000	                            je 0x4007164	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006efa	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006eff	      0x4c8b6c2460	            mov r13, qword [rsp + 0x60] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006f04	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006f09	            0xeb1c	                           jmp 0x4006f27	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006f0b	       0xf1f440000	                   nop dword [rax + rax]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006f10	          0x8b7b44	            mov edi, dword [rbx + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006f13	            0x85ff	                           test edi, edi	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006f15	     0xf84cf040000	                            je 0x40073ea	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006f1b	          0x488b1b	                    mov rbx, qword [rbx]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006f1e	          0x4885db	                           test rbx, rbx	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006f21	     0xf843d020000	                            je 0x4007164	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4006f27	        0xf6451808	               test byte [rbp + 0x18], 8	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4006f2b	            0x7407	                            je 0x4006f34	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4006f2d	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4006f32	            0x75dc	                           jne 0x4006f10	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4006f34	          0x4d89f1	                             mov r9, r14	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4006f37	          0x4d89f8	                             mov r8, r15	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4006f3a	          0x4c89e9	                            mov rcx, r13	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4006f3d	          0x4c89e2	                            mov rdx, r12	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4006f40	          0x4889ee	                            mov rsi, rbp	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4006f43	          0x4889df	                            mov rdi, rbx	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4006f46	      0xe885e5ffff	            call sym.comp_unit_find_line	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4006f4b	            0x85c0	                           test eax, eax	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x4006f4d	            0x74cc	                            je 0x4006f1b	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x4006f4f	        0x89442468	             mov dword [rsp + 0x68], eax	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x4006f53	       0xf1f440000	                   nop dword [rax + rax]	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x4006f58	    0x488b8424e000	            mov rax, qword [rsp + 0xe0] 	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4006f60	          0x4885c0	                           test rax, rax	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4006f63	            0x7417	                            je 0x4006f7c	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4006f65	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4006f68	            0x85d2	                           test edx, edx	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4006f6a	     0xf849d040000	                            je 0x400740d	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4006f70	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4006f74	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4006f79	          0x488906	                    mov qword [rsi], rax	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4006f7c	        0x488b0424	                    mov rax, qword [rsp]	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4006f80	          0x8b5044	            mov edx, dword [rax + 0x44] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4006f83	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4853	dwarf2.c	FUNCTION_68
0x4006f87	          0xc1ea05	                              shr edx, 5	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4006f8a	          0x83e242	                           and edx, 0x42	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4006f8d	            0x753d	                           jne 0x4006fcc	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4006f8f	    0x418b8ee00000	            mov ecx, dword [r14 + 0xe0] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4006f96	    0x498b96e80000	            mov rdx, qword [r14 + 0xe8] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4006f9d	            0x85c9	                           test ecx, ecx	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006f9f	            0x7e2b	                           jle 0x4006fcc	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006fa1	          0x83e901	                              sub ecx, 1	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006fa4	        0x4883c101	                              add rcx, 1	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006fa8	        0x48c1e104	                              shl rcx, 4	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006fac	          0x4801d1	                            add rcx, rdx	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006faf	              0x90	                                     nop	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006fb0	          0x488b02	                    mov rax, qword [rdx]	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x4006fb3	        0x4883c210	                           add rdx, 0x10	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006fb7	          0x4839ca	                            cmp rdx, rcx	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006fba	    0x48c740280000	               mov qword [rax + 0x28], 0	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x4006fc2	            0x75ec	                           jne 0x4006fb0	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4006fc4	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4853	dwarf2.c	FUNCTION_68
0x4006fc8	            0xeb02	                           jmp 0x4006fcc	      4853	dwarf2.c	FUNCTION_68
0x4006fca	            0x31c0	                            xor eax, eax	      4556	dwarf2.c	FUNCTION_68	IF_3
0x4006fcc	    0x488bb4240801	           mov rsi, qword [rsp + 0x108] 	      4854	dwarf2.c	FUNCTION_68
0x4006fd4	    0x644833342528	                xor rsi, qword fs:[0x28]	      4854	dwarf2.c	FUNCTION_68
0x4006fdd	     0xf8571120000	                           jne 0x4008254	      4854	dwarf2.c	FUNCTION_68
0x4006fe3	    0x4881c4180100	                          add rsp, 0x118	      4854	dwarf2.c	FUNCTION_68
0x4006fea	              0x5b	                                 pop rbx	      4854	dwarf2.c	FUNCTION_68
0x4006feb	              0x5d	                                 pop rbp	      4854	dwarf2.c	FUNCTION_68
0x4006fec	            0x415c	                                 pop r12	      4854	dwarf2.c	FUNCTION_68
0x4006fee	            0x415d	                                 pop r13	      4854	dwarf2.c	FUNCTION_68
0x4006ff0	            0x415e	                                 pop r14	      4854	dwarf2.c	FUNCTION_68
0x4006ff2	            0x415f	                                 pop r15	      4854	dwarf2.c	FUNCTION_68
0x4006ff4	              0xc3	                                     ret	      4854	dwarf2.c	FUNCTION_68
0x4006ff5	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	      4656	dwarf2.c	FUNCTION_68	ELSE_4
0x4007001	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      4657	dwarf2.c	FUNCTION_68	ELSE_4
0x400700d	          0x498b2e	                    mov rbp, qword [r14]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4007010	    0xc78424d80000	               mov dword [rsp + 0xd8], 0	      4658	dwarf2.c	FUNCTION_68	ELSE_4
0x400701b	    0xc78424dc0000	               mov dword [rsp + 0xdc], 0	      4659	dwarf2.c	FUNCTION_68	ELSE_4
0x4007026	          0x4885ed	                           test rbp, rbp	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4007029	     0xf84ba100000	                            je 0x40080e9	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400702f	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4007036	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400703b	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007040	            0xeb20	                           jmp 0x4007062	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007042	    0x660f1f440000	                    nop word [rax + rax]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007048	          0x8b7544	            mov esi, dword [rbp + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400704b	            0x31d2	                            xor edx, edx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400704d	            0x85f6	                           test esi, esi	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400704f	     0xf84db000000	                            je 0x4007130	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4007055	        0x488b6d00	                    mov rbp, qword [rbp]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4007059	          0x4885ed	                           test rbp, rbp	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400705c	     0xf84ab000000	                            je 0x400710d	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4007062	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007067	            0x75df	                           jne 0x4007048	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007069	        0x4883ec08	                              sub rsp, 8	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400706d	          0x4c89e6	                            mov rsi, r12	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007070	          0x4889ef	                            mov rdi, rbp	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007073	            0x4156	                                push r14	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007075	    0x4c8d8c24ec00	                    lea r9, [rsp + 0xec]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400707d	    0x4c8d8424e800	                    lea r8, [rsp + 0xe8]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007085	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400708d	    0x488d9424f800	                   lea rdx, [rsp + 0xf8]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007095	      0xe876e6ffff	    call sym.comp_unit_find_nearest_line	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400709a	              0x5a	                                 pop rdx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400709b	            0x31d2	                            xor edx, edx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400709d	          0x4885c0	                           test rax, rax	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40070a0	              0x59	                                 pop rcx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40070a1	            0x74b2	                            je 0x4007055	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40070a3	          0x4839d8	                            cmp rax, rbx	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x40070a6	      0xba01000000	                              mov edx, 1	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x40070ab	            0x77a8	                            ja 0x4007055	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x40070ad	    0x488b9424e800	            mov rdx, qword [rsp + 0xe8] 	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40070b5	          0x4885d2	                           test rdx, rdx	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40070b8	            0x7403	                            je 0x40070bd	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40070ba	          0x498917	                    mov qword [r15], rdx	      4689	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40070bd	    0x488b9424f000	            mov rdx, qword [rsp + 0xf0] 	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40070c5	          0x4885d2	                           test rdx, rdx	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40070c8	            0x7408	                            je 0x40070d2	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40070ca	    0x48899424e000	             mov qword [rsp + 0xe0], rdx	      4691	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40070d2	          0x4d85ed	                           test r13, r13	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40070d5	            0x740f	                            je 0x40070e6	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40070d7	    0x8b9424dc0000	            mov edx, dword [rsp + 0xdc] 	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40070de	            0x85d2	                           test edx, edx	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40070e0	            0x7404	                            je 0x40070e6	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40070e2	        0x41895500	                    mov dword [r13], edx	      4693	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40070e6	    0x8b9424d80000	            mov edx, dword [rsp + 0xd8] 	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40070ed	            0x85d2	                           test edx, edx	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40070ef	            0x7466	                            je 0x4007157	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40070f1	        0x488b6d00	                    mov rbp, qword [rbp]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40070f5	      0x488b742408	                mov rsi, qword [rsp + 8]	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40070fa	          0x4889c3	                            mov rbx, rax	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40070fd	          0x4885ed	                           test rbp, rbp	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4007100	            0x8916	                    mov dword [rsi], edx	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x4007102	      0xba01000000	                              mov edx, 1	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x4007107	     0xf8555ffffff	                           jne 0x4007062	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400710d	        0x89542468	             mov dword [rsp + 0x68], edx	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4007111	      0x488b442408	                mov rax, qword [rsp + 8]	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4007116	            0x8b28	                    mov ebp, dword [rax]	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4007118	            0x85ed	                           test ebp, ebp	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x400711a	            0x7450	                            je 0x400716c	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x400711c	    0xc74424680100	               mov dword [rsp + 0x68], 1	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4007124	      0xe92ffeffff	                           jmp 0x4006f58	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4007129	     0xf1f80000000	                         nop dword [rax]	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4007130	        0x488d4518	                   lea rax, [rbp + 0x18]	      3565	dwarf2.c	FUNCTION_47
0x4007134	         0xf1f4000	                         nop dword [rax]	      3565	dwarf2.c	FUNCTION_47
0x4007138	        0x4c3b6008	                cmp r12, qword [rax + 8]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x400713c	            0x720a	                            jb 0x4007148	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x400713e	        0x4c3b6010	            cmp r12, qword [rax + 0x10] 	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007142	     0xf8221ffffff	                            jb 0x4007069	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007148	          0x488b00	                    mov rax, qword [rax]	      3570	dwarf2.c	FUNCTION_47	DO_1
0x400714b	          0x4885c0	                           test rax, rax	      3572	dwarf2.c	FUNCTION_47
0x400714e	            0x75e8	                           jne 0x4007138	      3572	dwarf2.c	FUNCTION_47
0x4007150	            0x31d2	                            xor edx, edx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007152	      0xe9fefeffff	                           jmp 0x4007055	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007157	          0x4889c3	                            mov rbx, rax	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400715a	      0xba01000000	                              mov edx, 1	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400715f	      0xe9f1feffff	                           jmp 0x4007055	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4007164	    0xc74424680000	               mov dword [rsp + 0x68], 0	      4543	dwarf2.c	FUNCTION_68
0x400716c	    0x8b9c24700100	           mov ebx, dword [rsp + 0x170] 	      4711	dwarf2.c	FUNCTION_68	IF_24
0x4007173	            0x85db	                           test ebx, ebx	      4711	dwarf2.c	FUNCTION_68	IF_24
0x4007175	     0xf84f1000000	                            je 0x400726c	      4711	dwarf2.c	FUNCTION_68	IF_24
0x400717b	    0x8b8424700100	           mov eax, dword [rsp + 0x170] 	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4007182	          0x83e804	                              sub eax, 4	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4007185	          0x83e0fb	                     and eax, 0xfffffffb	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4007188	            0x740f	                            je 0x4007199	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400718a	      0xbe69120000	                         mov esi, 0x1269	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400718f	      0xbf00000000	                              mov edi, 0	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4007194	      0xe800000000	                          call 0x4007199	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4007199	    0x83bc24700100	              cmp dword [rsp + 0x170], 8	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40071a1	      0xb804000000	                              mov eax, 4	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40071a6	        0x4d8b7e18	            mov r15, qword [r14 + 0x18] 	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40071aa	     0xf4584247001	         cmovne eax, dword [rsp + 0x170]	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40071b2	    0x4c89a4249800	             mov qword [rsp + 0x98], r12	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40071ba	        0x89442434	             mov dword [rsp + 0x34], eax	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40071be	    0x498d86880000	                   lea rax, [r14 + 0x88]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40071c5	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40071cd	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40071d1	      0xbbffffffff	                     mov ebx, 0xffffffff	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40071d6	          0x4939d7	                            cmp r15, rdx	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x40071d9	     0xf8379fdffff	                           jae 0x4006f58	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x40071df	        0x498d7f04	                      lea rdi, [r15 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40071e3	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x40071e7	          0x4d89fd	                            mov r13, r15	       612	dwarf2.c	FUNCTION_9	IF_1
0x40071ea	          0x4839d7	                            cmp rdi, rdx	       612	dwarf2.c	FUNCTION_9	IF_1
0x40071ed	            0x7638	                           jbe 0x4007227	       612	dwarf2.c	FUNCTION_9	IF_1
0x40071ef	        0x4983c508	                              add r13, 8	       612	dwarf2.c	FUNCTION_9	IF_1
0x40071f3	            0x31c0	                            xor eax, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x40071f5	          0x4c39ea	                            cmp rdx, r13	       612	dwarf2.c	FUNCTION_9	IF_1
0x40071f8	     0xf83d2010000	                           jae 0x40073d0	       612	dwarf2.c	FUNCTION_9	IF_1
0x40071fe	          0x4885c0	                           test rax, rax	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4007201	        0x4d896e18	             mov qword [r14 + 0x18], r13	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4007205	     0xf855e100000	                           jne 0x4008269	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400720b	          0x4d89ef	                            mov r15, r13	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400720e	          0x4939d7	                            cmp r15, rdx	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4007211	     0xf8341fdffff	                           jae 0x4006f58	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4007217	        0x498d7f04	                      lea rdi, [r15 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x400721b	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x400721f	          0x4d89fd	                            mov r13, r15	       612	dwarf2.c	FUNCTION_9	IF_1
0x4007222	          0x4839d7	                            cmp rdi, rdx	       612	dwarf2.c	FUNCTION_9	IF_1
0x4007225	            0x77c8	                            ja 0x40071ef	       612	dwarf2.c	FUNCTION_9	IF_1
0x4007227	        0x488b4108	                mov rax, qword [rcx + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400722b	          0x4c89ff	                            mov rdi, r15	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400722e	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4007231	            0x89c0	                            mov eax, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4007233	          0x4839d8	                            cmp rax, rbx	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x4007236	     0xf85f4020000	                           jne 0x4007530	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x400723c	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x4007240	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x4007244	            0x31c0	                            xor eax, eax	       621	dwarf2.c	FUNCTION_10	IF_1
0x4007246	        0x4c8d690c	                    lea r13, [rcx + 0xc]	       620	dwarf2.c	FUNCTION_10	IF_1
0x400724a	          0x4c39ea	                            cmp rdx, r13	       620	dwarf2.c	FUNCTION_10	IF_1
0x400724d	            0x72af	                            jb 0x40071fe	       620	dwarf2.c	FUNCTION_10	IF_1
0x400724f	        0x498b4630	            mov rax, qword [r14 + 0x30] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4007253	        0x488d7904	                      lea rdi, [rcx + 4]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4007257	        0x488b4008	                mov rax, qword [rax + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400725b	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400725e	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4007262	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x4007266	        0x4c8d690c	                    lea r13, [rcx + 0xc]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400726a	            0xeb92	                           jmp 0x40071fe	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400726c	    0xc78424700100	              mov dword [rsp + 0x170], 4	      4712	dwarf2.c	FUNCTION_68	IF_24
0x4007277	      0xe91dffffff	                           jmp 0x4007199	      4712	dwarf2.c	FUNCTION_68	IF_24
0x400727c	    0x418b86f00000	            mov eax, dword [r14 + 0xf0] 	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007283	          0x8d5001	                      lea edx, [rax + 1]	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007286	          0x83f863	                           cmp eax, 0x63	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007289	    0x418996f00000	             mov dword [r14 + 0xf0], edx	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007290	     0xf8e58fcffff	                           jle 0x4006eee	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4007296	        0x488b3c24	                    mov rdi, qword [rsp]	       454	dwarf2.c	FUNCTION_2
0x400729a	      0xbe28000000	                           mov esi, 0x28	       454	dwarf2.c	FUNCTION_2
0x400729f	      0xe800000000	                          call 0x40072a4	       454	dwarf2.c	FUNCTION_2
0x40072a4	            0x31f6	                            xor esi, esi	       456	dwarf2.c	FUNCTION_2	IF_1
0x40072a6	          0x4885c0	                           test rax, rax	       456	dwarf2.c	FUNCTION_2	IF_1
0x40072a9	          0x4889c3	                            mov rbx, rax	       454	dwarf2.c	FUNCTION_2
0x40072ac	            0x741d	                            je 0x40072cb	       456	dwarf2.c	FUNCTION_2	IF_1
0x40072ae	      0xbe00000000	                              mov esi, 0	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072b3	      0xba20000000	                           mov edx, 0x20	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072b8	          0x4889c7	                            mov rdi, rax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072bb	      0xe800000000	                          call 0x40072c0	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072c0	            0x85c0	                           test eax, eax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072c2	          0x4889de	                            mov rsi, rbx	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072c5	     0xf848e0f0000	                            je 0x4008259	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072cb	        0x488b3c24	                    mov rdi, qword [rsp]	       454	dwarf2.c	FUNCTION_2
0x40072cf	    0x4989b6f80000	             mov qword [r14 + 0xf8], rsi	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x40072d6	      0xbe28000000	                           mov esi, 0x28	       454	dwarf2.c	FUNCTION_2
0x40072db	      0xe800000000	                          call 0x40072e0	       454	dwarf2.c	FUNCTION_2
0x40072e0	          0x4885c0	                           test rax, rax	       456	dwarf2.c	FUNCTION_2	IF_1
0x40072e3	          0x4889c3	                            mov rbx, rax	       454	dwarf2.c	FUNCTION_2
0x40072e6	     0xf84090f0000	                            je 0x40081f5	       456	dwarf2.c	FUNCTION_2	IF_1
0x40072ec	      0xba20000000	                           mov edx, 0x20	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072f1	      0xbe00000000	                              mov esi, 0	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072f6	          0x4889c7	                            mov rdi, rax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072f9	      0xe800000000	                          call 0x40072fe	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40072fe	            0x85c0	                           test eax, eax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4007300	     0xf84e30e0000	                            je 0x40081e9	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4007306	    0x4983bef80000	               cmp qword [r14 + 0xf8], 0	      4216	dwarf2.c	FUNCTION_62	IF_2
0x400730e	    0x49899e000100	            mov qword [r14 + 0x100], rbx	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4007315	     0xf84e50e0000	                            je 0x4008200	      4216	dwarf2.c	FUNCTION_62	IF_2
0x400731b	          0x4c89f7	                            mov rdi, r14	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x400731e	      0xe8ede8ffff	call sym.stash_maybe_update_info_hash_tables	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x4007323	    0x41c786100100	              mov dword [r14 + 0x110], 1	      4226	dwarf2.c	FUNCTION_62
0x400732e	          0x4c89f7	                            mov rdi, r14	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x4007331	      0xe8dae8ffff	call sym.stash_maybe_update_info_hash_tables	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x4007336	    0x4183be100100	              cmp dword [r14 + 0x110], 1	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x400733e	     0xf85aafbffff	                           jne 0x4006eee	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x4007344	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4243	dwarf2.c	FUNCTION_63	IF_1
0x4007349	        0xf6401808	               test byte [rax + 0x18], 8	      4243	dwarf2.c	FUNCTION_63	IF_1
0x400734d	        0x488b5820	            mov rbx, qword [rax + 0x20] 	      4243	dwarf2.c	FUNCTION_63	IF_1
0x4007351	        0x488b7008	                mov rsi, qword [rax + 8]	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4007355	     0xf859b0d0000	                           jne 0x40080f6	      4243	dwarf2.c	FUNCTION_63	IF_1
0x400735b	    0x498bbe000100	           mov rdi, qword [r14 + 0x100] 	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4007362	            0x31c9	                            xor ecx, ecx	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4007364	            0x31d2	                            xor edx, edx	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4007366	      0xe800000000	                          call 0x400736b	       508	dwarf2.c	FUNCTION_4	CALL_1
0x400736b	          0x4885c0	                           test rax, rax	       510	dwarf2.c	FUNCTION_4
0x400736e	     0xf84f0fdffff	                            je 0x4007164	       510	dwarf2.c	FUNCTION_4
0x4007374	        0x488b4018	            mov rax, qword [rax + 0x18] 	       510	dwarf2.c	FUNCTION_4
0x4007378	          0x4885c0	                           test rax, rax	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x400737b	            0x7517	                           jne 0x4007394	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x400737d	      0xe9e2fdffff	                           jmp 0x4007164	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4007382	    0x660f1f440000	                    nop word [rax + rax]	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4007388	          0x488b00	                    mov rax, qword [rax]	      4095	dwarf2.c	FUNCTION_59	FOR_1
0x400738b	          0x4885c0	                           test rax, rax	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x400738e	     0xf84d0fdffff	                            je 0x4007164	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4007394	        0x488b5008	                mov rdx, qword [rax + 8]	      4097	dwarf2.c	FUNCTION_59	FOR_1
0x4007398	        0x4c3b6220	            cmp r12, qword [rdx + 0x20] 	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400739c	            0x75ea	                           jne 0x4007388	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400739e	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073a2	          0x4839cb	                            cmp rbx, rcx	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073a5	            0x7405	                            je 0x40073ac	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073a7	          0x4885c9	                           test rcx, rcx	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073aa	            0x75dc	                           jne 0x4007388	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073ac	        0x488b4208	                mov rax, qword [rdx + 8]	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073b0	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073b5	        0x48895a28	             mov qword [rdx + 0x28], rbx	      4101	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073b9	          0x488906	                    mov qword [rsi], rax	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073bc	          0x8b4210	            mov eax, dword [rdx + 0x10] 	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073bf	      0x488b742408	                mov rsi, qword [rsp + 8]	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073c4	            0x8906	                    mov dword [rsi], eax	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073c6	      0xe951fdffff	                           jmp 0x400711c	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073cb	       0xf1f440000	                   nop dword [rax + rax]	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x40073d0	        0x488b4108	                mov rax, qword [rcx + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40073d4	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40073d7	        0x4d8b6e18	            mov r13, qword [r14 + 0x18] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40073db	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40073df	            0x89c0	                            mov eax, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40073e1	        0x4983c508	                              add r13, 8	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40073e5	      0xe914feffff	                           jmp 0x40071fe	       614	dwarf2.c	FUNCTION_9	CALL_1
0x40073ea	        0x488d4318	                   lea rax, [rbx + 0x18]	      3565	dwarf2.c	FUNCTION_47
0x40073ee	            0xeb0c	                           jmp 0x40073fc	      3565	dwarf2.c	FUNCTION_47
0x40073f0	          0x488b00	                    mov rax, qword [rax]	      3570	dwarf2.c	FUNCTION_47	DO_1
0x40073f3	          0x4885c0	                           test rax, rax	      3572	dwarf2.c	FUNCTION_47
0x40073f6	     0xf841ffbffff	                            je 0x4006f1b	      3572	dwarf2.c	FUNCTION_47
0x40073fc	        0x4c3b6008	                cmp r12, qword [rax + 8]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007400	            0x72ee	                            jb 0x40073f0	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007402	        0x4c3b6010	            cmp r12, qword [rax + 0x10] 	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007406	            0x73e8	                           jae 0x40073f0	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007408	      0xe927fbffff	                           jmp 0x4006f34	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x400740d	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4007412	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4007417	    0x41b800000000	                              mov r8d, 0	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x400741d	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4007422	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4007427	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x400742c	        0x488b3c24	                    mov rdi, qword [rsp]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4007430	        0x48833800	                      cmp qword [rax], 0	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4007434	          0x4889da	                            mov rdx, rbx	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4007437	        0x4c0f44c0	                           cmove r8, rax	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x400743b	      0xe800000000	                          call 0x4007440	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4007440	        0x488b4b68	            mov rcx, qword [rbx + 0x68] 	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4007444	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      4838	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4007448	          0x4885c9	                           test rcx, rcx	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x400744b	            0x7408	                            je 0x4007455	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x400744d	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4007451	        0x48035128	             add rdx, qword [rcx + 0x28]	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4007455	          0x4885c0	                           test rax, rax	      4841	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007458	    0x488b8c24e000	            mov rcx, qword [rsp + 0xe0] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007460	            0x740e	                            je 0x4007470	      4841	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007462	        0x48035010	             add rdx, qword [rax + 0x10]	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007466	        0x483b5140	            cmp rdx, qword [rcx + 0x40] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x400746a	     0xf84120b0000	                            je 0x4007f82	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007470	        0x488b4130	            mov rax, qword [rcx + 0x30] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007474	    0xc7412c010000	               mov dword [rcx + 0x2c], 1	      4846	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x400747b	      0xe9f4faffff	                           jmp 0x4006f74	      4846	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4007480	        0x48034828	             add rcx, qword [rax + 0x28]	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4007484	          0x4989cc	                            mov r12, rcx	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4007487	      0xe926faffff	                           jmp 0x4006eb2	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x400748c	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4007492	     0xf843d0c0000	                            je 0x40080d5	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4007498	    0x48837c245800	               cmp qword [rsp + 0x58], 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x400749e	     0xf84310c0000	                            je 0x40080d5	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x40074a4	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x40074a9	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x40074ae	          0x4885d2	                           test rdx, rdx	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x40074b1	     0xf84ddf9ffff	                            je 0x4006e94	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x40074b7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x40074bc	        0xf6462010	           test byte [rsi + 0x20], 0x10 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x40074c0	     0xf85cef9ffff	                           jne 0x4006e94	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x40074c6	          0x488b02	                    mov rax, qword [rdx]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074c9	          0x4885c0	                           test rax, rax	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074cc	     0xf841c0e0000	                            je 0x40082ee	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074d2	        0x488b0c24	                    mov rcx, qword [rsp]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074d6	          0x4889f7	                            mov rdi, rsi	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074d9	            0xeb15	                           jmp 0x40074f0	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074db	       0xf1f440000	                   nop dword [rax + rax]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074e0	        0x4883c208	                              add rdx, 8	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074e4	          0x488b02	                    mov rax, qword [rdx]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074e7	          0x4885c0	                           test rax, rax	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074ea	     0xf84410b0000	                            je 0x4008031	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40074f0	          0x483b08	                    cmp rcx, qword [rax]	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40074f3	            0x75eb	                           jne 0x40074e0	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40074f5	        0x483b7820	            cmp rdi, qword [rax + 0x20] 	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40074f9	            0x75e5	                           jne 0x40074e0	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40074fb	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4007500	        0x483b7010	            cmp rsi, qword [rax + 0x10] 	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4007504	            0x75da	                           jne 0x40074e0	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4007506	          0x8b7018	            mov esi, dword [rax + 0x18] 	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4007509	    0xf7c600010000	                         test esi, 0x100	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x400750f	            0x75cf	                           jne 0x40074e0	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4007511	          0x83e602	                              and esi, 2	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x4007514	     0xf856a0d0000	                           jne 0x4008284	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x400751a	      0x4889442418	             mov qword [rsp + 0x18], rax	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x400751f	    0xc744246c0100	               mov dword [rsp + 0x6c], 1	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4007527	            0xebb7	                           jmp 0x40074e0	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4007529	     0xf1f80000000	                         nop dword [rax]	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4007530	          0x4885c0	                           test rax, rax	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4007533	     0xf84a00d0000	                            je 0x40082d9	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4007539	          0x4889c5	                            mov rbp, rax	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x400753c	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4007540	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4007544	        0x4c8d6804	                      lea r13, [rax + 4]	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4007548	        0x8b442434	            mov eax, dword [rsp + 0x34] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400754c	        0x4d896e18	             mov qword [r14 + 0x18], r13	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4007550	        0x89442420	             mov dword [rsp + 0x20], eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4007554	      0x498d442d00	                    lea rax, [r13 + rbp]	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4007559	          0x4839d0	                            cmp rax, rdx	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x400755c	    0x488984248800	             mov qword [rsp + 0x88], rax	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4007564	     0xf8760faffff	                            ja 0x4006fca	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x400756a	        0x498d5502	                      lea rdx, [r13 + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x400756e	          0x4839d0	                            cmp rax, rdx	       604	dwarf2.c	FUNCTION_8	IF_1
0x4007571	     0xf82e1f9ffff	                            jb 0x4006f58	       604	dwarf2.c	FUNCTION_8	IF_1
0x4007577	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      3352	dwarf2.c	FUNCTION_46
0x400757b	      0x4889542428	             mov qword [rsp + 0x28], rdx	      3352	dwarf2.c	FUNCTION_46
0x4007580	          0x4c89ef	                            mov rdi, r13	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4007583	      0x4889442470	             mov qword [rsp + 0x70], rax	      3352	dwarf2.c	FUNCTION_46
0x4007588	        0x488b4008	                mov rax, qword [rax + 8]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400758c	          0xff5050	                 call qword [rax + 0x50]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400758f	          0x8d48fe	                      lea ecx, [rax - 2]	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4007592	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400759a	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      3358	dwarf2.c	FUNCTION_46	IF_1
0x400759f	          0x83f903	                              cmp ecx, 3	      3358	dwarf2.c	FUNCTION_46	IF_1
0x40075a2	     0xf87090d0000	                            ja 0x40082b1	      3358	dwarf2.c	FUNCTION_46	IF_1
0x40075a8	    0x83bc24a80000	               cmp dword [rsp + 0xa8], 5	      3374	dwarf2.c	FUNCTION_46	IF_3
0x40075b0	      0xbb01000000	                              mov ebx, 1	      3375	dwarf2.c	FUNCTION_46	IF_3
0x40075b5	    0xc7442478ffff	     mov dword [rsp + 0x78], 0xffffffff 	      3342	dwarf2.c	FUNCTION_46
0x40075bd	            0x752e	                           jne 0x40075ed	      3374	dwarf2.c	FUNCTION_46	IF_3
0x40075bf	        0x498d4503	                      lea rax, [r13 + 3]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40075c3	            0x31db	                            xor ebx, ebx	       589	dwarf2.c	FUNCTION_6	IF_1
0x40075c5	    0x483984248800	            cmp qword [rsp + 0x88], rax 	       588	dwarf2.c	FUNCTION_6	IF_1
0x40075cd	     0xf83ce090000	                           jae 0x4007fa1	       588	dwarf2.c	FUNCTION_6	IF_1
0x40075d3	        0x498d5504	                      lea rdx, [r13 + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40075d7	    0x483994248800	            cmp qword [rsp + 0x88], rdx 	       588	dwarf2.c	FUNCTION_6	IF_1
0x40075df	     0xf83ae090000	                           jae 0x4007f93	       588	dwarf2.c	FUNCTION_6	IF_1
0x40075e5	    0xc74424780000	               mov dword [rsp + 0x78], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x40075ed	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40075f1	          0x83e804	                              sub eax, 4	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40075f4	          0x83e0fb	                     and eax, 0xfffffffb	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40075f7	     0xf85990a0000	                           jne 0x4008096	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40075fd	      0x837c242004	               cmp dword [rsp + 0x20], 4	      3386	dwarf2.c	FUNCTION_46	IF_4
0x4007602	     0xf84580a0000	                            je 0x4008060	      3386	dwarf2.c	FUNCTION_46	IF_4
0x4007608	        0x488d4208	                      lea rax, [rdx + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x400760c	          0x4531ed	                          xor r13d, r13d	       621	dwarf2.c	FUNCTION_10	IF_1
0x400760f	    0x483984248800	            cmp qword [rsp + 0x88], rax 	       620	dwarf2.c	FUNCTION_10	IF_1
0x4007617	     0xf83970a0000	                           jae 0x40080b4	       620	dwarf2.c	FUNCTION_10	IF_1
0x400761d	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3390	dwarf2.c	FUNCTION_46
0x4007621	    0x83bc24a80000	               cmp dword [rsp + 0xa8], 5	      3392	dwarf2.c	FUNCTION_46	IF_5
0x4007629	        0x488d3402	                    lea rsi, [rdx + rax]	      3390	dwarf2.c	FUNCTION_46
0x400762d	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	      3390	dwarf2.c	FUNCTION_46
0x4007635	            0x744d	                            je 0x4007684	      3392	dwarf2.c	FUNCTION_46	IF_5
0x4007637	        0x488d5601	                      lea rdx, [rsi + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400763b	    0x483994248800	            cmp qword [rsp + 0x88], rdx 	       588	dwarf2.c	FUNCTION_6	IF_1
0x4007643	            0x7330	                           jae 0x4007675	       588	dwarf2.c	FUNCTION_6	IF_1
0x4007645	          0x83fb02	                              cmp ebx, 2	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4007648	     0xf84ed090000	                            je 0x400803b	      3398	dwarf2.c	FUNCTION_46	IF_6
0x400764e	    0xc74424780000	               mov dword [rsp + 0x78], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4007656	        0x8b742478	            mov esi, dword [rsp + 0x78] 	       589	dwarf2.c	FUNCTION_6	IF_1
0x400765a	      0xbf00000000	                              mov edi, 0	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x400765f	            0x31c0	                            xor eax, eax	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4007661	      0xe800000000	                          call 0x4007666	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4007666	      0xbf11000000	                           mov edi, 0x11	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x400766b	      0xe800000000	                          call 0x4007670	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x4007670	      0xe9e3f8ffff	                           jmp 0x4006f58	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x4007675	           0xfb636	                   movzx esi, byte [rsi]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4007678	    0x48899424a000	             mov qword [rsp + 0xa0], rdx	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4007680	        0x89742478	             mov dword [rsp + 0x78], esi	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4007684	          0x83fb02	                              cmp ebx, 2	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4007687	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	      3398	dwarf2.c	FUNCTION_46	IF_6
0x400768f	     0xf84b9090000	                            je 0x400804e	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4007695	      0x837c247808	               cmp dword [rsp + 0x78], 8	      3407	dwarf2.c	FUNCTION_46	IF_7
0x400769a	     0xf87130b0000	                            ja 0x40081b3	      3407	dwarf2.c	FUNCTION_46	IF_7
0x40076a0	        0x8b742478	            mov esi, dword [rsp + 0x78] 	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40076a4	            0x89f0	                            mov eax, esi	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40076a6	          0x83e802	                              sub eax, 2	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40076a9	          0x83e0fd	                     and eax, 0xfffffffd	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40076ac	            0x7405	                            je 0x40076b3	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40076ae	          0x83fe08	                              cmp esi, 8	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40076b1	            0x75a7	                           jne 0x400765a	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40076b3	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076b8	        0x498b5678	            mov rdx, qword [r14 + 0x78] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076bc	    0x4d8d86800000	                    lea r8, [r14 + 0x80]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076c3	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076c7	    0x4c8b8c24b800	              mov r9, qword [rsp + 0xb8]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076cf	          0x4c89e9	                            mov rcx, r13	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076d2	          0x4889df	                            mov rdi, rbx	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076d5	      0xe86689ffff	                   call sym.read_section	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076da	            0x85c0	                           test eax, eax	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076dc	     0xf8476f8ffff	                            je 0x4006f58	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40076e2	    0x4d3bae880000	            cmp r13, qword [r14 + 0x88] 	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x40076e9	     0xf8369f8ffff	                           jae 0x4006f58	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x40076ef	      0xbec8030000	                          mov esi, 0x3c8	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x40076f4	          0x4889df	                            mov rdi, rbx	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x40076f7	      0x48895c2470	             mov qword [rsp + 0x70], rbx	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x40076fc	      0xe800000000	                          call 0x4007701	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4007701	          0x4885c0	                           test rax, rax	       964	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4007704	    0x48898424b000	             mov qword [rsp + 0xb0], rax	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x400770c	     0xf8446f8ffff	                            je 0x4006f58	       964	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4007712	    0x498b86800000	            mov rax, qword [r14 + 0x80] 	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4007719	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x400771e	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4007726	            0x31c9	                            xor ecx, ecx	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4007728	        0x4a8d1c28	                    lea rbx, [rax + r13]	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x400772c	    0x490386880000	             add rax, qword [r14 + 0x88]	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4007733	          0x4889de	                            mov rsi, rbx	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4007736	          0x4989c0	                             mov r8, rax	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4007739	          0x4989c4	                            mov r12, rax	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x400773c	      0xe800000000	                          call 0x4007741	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4007741	    0x8b9424f00000	            mov edx, dword [rsp + 0xf0] 	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x4007748	    0x898424800000	             mov dword [rsp + 0x80], eax	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x400774f	          0x4801d3	                            add rbx, rdx	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x4007752	            0x85c0	                           test eax, eax	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4007754	     0xf8453020000	                            je 0x40079ad	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400775a	    0x4889ac24c000	             mov qword [rsp + 0xc0], rbp	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4007762	    0x4c89b4249000	             mov qword [rsp + 0x90], r14	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400776a	    0x4c89bc24c800	             mov qword [rsp + 0xc8], r15	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4007772	      0x4c8b742470	            mov r14, qword [rsp + 0x70] 	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4007777	      0xbe20000000	                           mov esi, 0x20	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x400777c	          0x4c89f7	                            mov rdi, r14	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x400777f	      0xe800000000	                          call 0x4007784	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4007784	          0x4885c0	                           test rax, rax	       978	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x4007787	          0x4989c7	                            mov r15, rax	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x400778a	     0xf84a50a0000	                            je 0x4008235	       978	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x4007790	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4007797	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x400779f	            0x31c9	                            xor ecx, ecx	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40077a1	          0x4889de	                            mov rsi, rbx	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40077a4	          0x4d89e0	                             mov r8, r12	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40077a7	          0x4c89f7	                            mov rdi, r14	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40077aa	          0x418907	                    mov dword [r15], eax	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40077ad	      0xe800000000	                          call 0x40077b2	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40077b2	        0x41894704	                mov dword [r15 + 4], eax	       983	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40077b6	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40077bd	            0x31d2	                            xor edx, edx	       588	dwarf2.c	FUNCTION_6	IF_1
0x40077bf	          0x4801d8	                            add rax, rbx	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40077c2	        0x488d5801	                      lea rbx, [rax + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40077c6	          0x4939dc	                            cmp r12, rbx	       588	dwarf2.c	FUNCTION_6	IF_1
0x40077c9	            0x7203	                            jb 0x40077ce	       588	dwarf2.c	FUNCTION_6	IF_1
0x40077cb	           0xfb610	                   movzx edx, byte [rax]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40077ce	        0x41895708	                mov dword [r15 + 8], edx	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x40077d2	      0x488b6c2470	            mov rbp, qword [rsp + 0x70] 	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x40077d7	            0xeb27	                           jmp 0x4007800	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x40077d9	     0xf1f80000000	                         nop dword [rax]	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x40077e0	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x40077e4	            0x89c8	                            mov eax, ecx	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x40077e6	          0x83c101	                              add ecx, 1	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x40077e9	        0x48c1e004	                              shl rax, 4	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x40077ed	        0x488d0406	                    lea rax, [rsi + rax]	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x40077f1	          0x448930	                   mov dword [rax], r14d	      1040	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x40077f4	        0x44896804	               mov dword [rax + 4], r13d	      1042	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x40077f8	        0x4c894008	                 mov qword [rax + 8], r8	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x40077fc	        0x41894f0c	              mov dword [r15 + 0xc], ecx	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4007800	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4007808	            0x31c9	                            xor ecx, ecx	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x400780a	          0x4889de	                            mov rsi, rbx	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x400780d	          0x4d89e0	                             mov r8, r12	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4007810	          0x4889ef	                            mov rdi, rbp	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4007813	      0xe800000000	                          call 0x4007818	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4007818	          0x4989c6	                            mov r14, rax	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x400781b	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4007822	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400782a	          0x4d89e0	                             mov r8, r12	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400782d	            0x31c9	                            xor ecx, ecx	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400782f	          0x4889ef	                            mov rdi, rbp	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4007832	          0x4801c3	                            add rbx, rax	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4007835	          0x4889de	                            mov rsi, rbx	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4007838	      0xe800000000	                          call 0x400783d	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400783d	          0x4989c5	                            mov r13, rax	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4007840	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4007847	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	       994	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400784e	          0x4801c3	                            add rbx, rax	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4007851	        0x4183fd21	                          cmp r13d, 0x21	      1002	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4007855	            0x7449	                            je 0x40078a0	      1002	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4007857	          0x4585f6	                         test r14d, r14d	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x400785a	            0x7471	                            je 0x40078cd	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x400785c	        0x418b4f0c	              mov ecx, dword [r15 + 0xc]	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4007860	          0xf6c103	                              test cl, 3	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4007863	     0xf8577ffffff	                           jne 0x40077e0	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4007869	          0x8d7104	                      lea esi, [rcx + 4]	      1017	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x400786c	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x4007870	      0x4c89442428	              mov qword [rsp + 0x28], r8	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x4007875	        0x48c1e604	                              shl rsi, 4	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x4007879	      0xe800000000	                          call 0x400787e	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x400787e	          0x4885c0	                           test rax, rax	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x4007881	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x4007886	     0xf84b1060000	                            je 0x4007f3d	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x400788c	        0x49894710	             mov qword [r15 + 0x10], rax	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4007890	        0x418b4f0c	              mov ecx, dword [r15 + 0xc]	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4007894	          0x4889c6	                            mov rsi, rax	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4007897	      0xe948ffffff	                           jmp 0x40077e4	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x400789c	         0xf1f4000	                         nop dword [rax]	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x40078a0	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x40078a8	          0x4d89e0	                             mov r8, r12	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x40078ab	          0x4889de	                            mov rsi, rbx	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x40078ae	      0xb901000000	                              mov ecx, 1	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x40078b3	          0x4889ef	                            mov rdi, rbp	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x40078b6	      0xe800000000	                          call 0x40078bb	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x40078bb	          0x4989c0	                             mov r8, rax	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x40078be	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x40078c5	          0x4801c3	                            add rbx, rax	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x40078c8	          0x4585f6	                         test r14d, r14d	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x40078cb	            0x758f	                           jne 0x400785c	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x40078cd	    0x8bb424800000	            mov esi, dword [rsp + 0x80] 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078d4	      0xb8bf56cf0e	                      mov eax, 0xecf56bf	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078d9	    0x4c8bb424b000	            mov r14, qword [rsp + 0xb0] 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078e1	            0xf7e6	                                 mul esi	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078e3	            0x89f0	                            mov eax, esi	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078e5	          0x4189f5	                           mov r13d, esi	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078e8	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x40078f0	            0x29d0	                            sub eax, edx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078f2	            0xd1e8	                              shr eax, 1	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078f4	             0x1d0	                            add eax, edx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078f6	          0xc1e806	                              shr eax, 6	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078f9	          0x6bc079	                     imul eax, eax, 0x79	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078fc	          0x4129c5	                           sub r13d, eax	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40078ff	        0x4b8d04ee	                  lea rax, [r14 + r13*8]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4007903	          0x488b10	                    mov rdx, qword [rax]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4007906	        0x49895718	             mov qword [r15 + 0x18], rdx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400790a	          0x4c8938	                    mov qword [rax], r15	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400790d	            0x89d8	                            mov eax, ebx	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x400790f	    0x2b8680000000	             sub eax, dword [rsi + 0x80]	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4007915	    0x483b86880000	            cmp rax, qword [rsi + 0x88] 	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x400791c	     0xf83fb080000	                           jae 0x400821d	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4007922	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4007927	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x400792f	            0x31c9	                            xor ecx, ecx	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4007931	          0x4889de	                            mov rsi, rbx	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4007934	          0x4d89e0	                             mov r8, r12	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4007937	      0xe800000000	                          call 0x400793c	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x400793c	          0x4889c1	                            mov rcx, rax	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x400793f	    0x898424800000	             mov dword [rsp + 0x80], eax	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4007946	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400794d	            0x89ce	                            mov esi, ecx	       925	dwarf2.c	FUNCTION_18
0x400794f	          0x4801c3	                            add rbx, rax	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4007952	      0xb8bf56cf0e	                      mov eax, 0xecf56bf	       925	dwarf2.c	FUNCTION_18
0x4007957	            0xf7e1	                                 mul ecx	       925	dwarf2.c	FUNCTION_18
0x4007959	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x400795b	            0x29d0	                            sub eax, edx	       925	dwarf2.c	FUNCTION_18
0x400795d	            0xd1e8	                              shr eax, 1	       925	dwarf2.c	FUNCTION_18
0x400795f	             0x1d0	                            add eax, edx	       925	dwarf2.c	FUNCTION_18
0x4007961	          0xc1e806	                              shr eax, 6	       925	dwarf2.c	FUNCTION_18
0x4007964	          0x6bc079	                     imul eax, eax, 0x79	       925	dwarf2.c	FUNCTION_18
0x4007967	            0x29c6	                            sub esi, eax	       925	dwarf2.c	FUNCTION_18
0x4007969	          0x4889f0	                            mov rax, rsi	       925	dwarf2.c	FUNCTION_18
0x400796c	        0x498b04c6	            mov rax, qword [r14 + rax*8]	       925	dwarf2.c	FUNCTION_18
0x4007970	          0x4885c0	                           test rax, rax	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4007973	            0x7418	                            je 0x400798d	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4007975	            0x3908	                    cmp dword [rax], ecx	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007977	            0x741c	                            je 0x4007995	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007979	            0x89ca	                            mov edx, ecx	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x400797b	            0xeb07	                           jmp 0x4007984	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x400797d	           0xf1f00	                         nop dword [rax]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007980	            0x3b10	                    cmp edx, dword [rax]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007982	            0x7411	                            je 0x4007995	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007984	        0x488b4018	            mov rax, qword [rax + 0x18] 	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x4007988	          0x4885c0	                           test rax, rax	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x400798b	            0x75f3	                           jne 0x4007980	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x400798d	            0x85c9	                           test ecx, ecx	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400798f	     0xf85ddfdffff	                           jne 0x4007772	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4007995	    0x488bac24c000	            mov rbp, qword [rsp + 0xc0] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400799d	    0x4c8bb4249000	            mov r14, qword [rsp + 0x90] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40079a5	    0x4c8bbc24c800	            mov r15, qword [rsp + 0xc8] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40079ad	    0x488b9c24a000	            mov rbx, qword [rsp + 0xa0] 	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079b5	    0x4c8b84248800	              mov r8, qword [rsp + 0x88]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079bd	    0x488d9424e800	                   lea rdx, [rsp + 0xe8]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079c5	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079ca	            0x31c9	                            xor ecx, ecx	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079cc	          0x4889de	                            mov rsi, rbx	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079cf	      0xe800000000	                          call 0x40079d4	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079d4	    0x448b8424e800	            mov r8d, dword [rsp + 0xe8] 	      3435	dwarf2.c	FUNCTION_46
0x40079dc	          0x4889c1	                            mov rcx, rax	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079df	          0x4189c5	                           mov r13d, eax	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x40079e2	          0x4901d8	                             add r8, rbx	      3435	dwarf2.c	FUNCTION_46
0x40079e5	            0x85c9	                           test ecx, ecx	      3436	dwarf2.c	FUNCTION_46	IF_10
0x40079e7	     0xf846bf5ffff	                            je 0x4006f58	      3436	dwarf2.c	FUNCTION_46	IF_10
0x40079ed	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x40079ef	      0xbabf56cf0e	                      mov edx, 0xecf56bf	       925	dwarf2.c	FUNCTION_18
0x40079f4	            0x89ce	                            mov esi, ecx	       925	dwarf2.c	FUNCTION_18
0x40079f6	            0xf7e2	                                 mul edx	       925	dwarf2.c	FUNCTION_18
0x40079f8	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x40079fa	            0x29d0	                            sub eax, edx	       925	dwarf2.c	FUNCTION_18
0x40079fc	            0xd1e8	                              shr eax, 1	       925	dwarf2.c	FUNCTION_18
0x40079fe	             0x1d0	                            add eax, edx	       925	dwarf2.c	FUNCTION_18
0x4007a00	          0xc1e806	                              shr eax, 6	       925	dwarf2.c	FUNCTION_18
0x4007a03	          0x6bc079	                     imul eax, eax, 0x79	       925	dwarf2.c	FUNCTION_18
0x4007a06	            0x29c6	                            sub esi, eax	       925	dwarf2.c	FUNCTION_18
0x4007a08	          0x4889f0	                            mov rax, rsi	       925	dwarf2.c	FUNCTION_18
0x4007a0b	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       925	dwarf2.c	FUNCTION_18
0x4007a13	        0x488b1cc6	            mov rbx, qword [rsi + rax*8]	       925	dwarf2.c	FUNCTION_18
0x4007a17	          0x4885db	                           test rbx, rbx	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4007a1a	            0x741a	                            je 0x4007a36	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4007a1c	            0x3b0b	                    cmp ecx, dword [rbx]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007a1e	            0x750d	                           jne 0x4007a2d	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007a20	            0xeb44	                           jmp 0x4007a66	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007a22	    0x660f1f440000	                    nop word [rax + rax]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007a28	          0x443b2b	                   cmp r13d, dword [rbx]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007a2b	            0x7439	                            je 0x4007a66	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4007a2d	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x4007a31	          0x4885db	                           test rbx, rbx	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4007a34	            0x75f2	                           jne 0x4007a28	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4007a36	      0xbe00000000	                              mov esi, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4007a3b	      0xba05000000	                              mov edx, 5	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4007a40	      0xbf00000000	                              mov edi, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4007a45	      0xe800000000	                          call 0x4007a4a	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4007a4a	          0x4489ee	                           mov esi, r13d	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4007a4d	          0x4889c7	                            mov rdi, rax	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4007a50	            0x31c0	                            xor eax, eax	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4007a52	      0xe800000000	                          call 0x4007a57	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4007a57	      0xbf11000000	                           mov edi, 0x11	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x4007a5c	      0xe800000000	                          call 0x4007a61	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x4007a61	      0xe9f2f4ffff	                           jmp 0x4006f58	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x4007a66	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4007a6b	      0xbec0000000	                           mov esi, 0xc0	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4007a70	      0x4c89442428	              mov qword [rsp + 0x28], r8	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4007a75	      0xe800000000	                          call 0x4007a7a	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4007a7a	          0x4885c0	                           test rax, rax	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4007a7d	          0x4989c5	                            mov r13, rax	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4007a80	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4007a85	     0xf84cdf4ffff	                            je 0x4006f58	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4007a8b	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      3458	dwarf2.c	FUNCTION_46
0x4007a90	    0x4d89b5a00000	             mov qword [r13 + 0xa0], r14	      3464	dwarf2.c	FUNCTION_46
0x4007a97	        0x4d897d58	             mov qword [r13 + 0x58], r15	      3465	dwarf2.c	FUNCTION_46
0x4007a9b	        0x49894510	             mov qword [r13 + 0x10], rax	      3458	dwarf2.c	FUNCTION_46
0x4007a9f	    0x8b8424a80000	            mov eax, dword [rsp + 0xa8] 	      3459	dwarf2.c	FUNCTION_46
0x4007aa6	    0x418985a80000	             mov dword [r13 + 0xa8], eax	      3459	dwarf2.c	FUNCTION_46
0x4007aad	       0xfb6442478	           movzx eax, byte [rsp + 0x78] 	      3460	dwarf2.c	FUNCTION_46
0x4007ab2	    0x418885ac0000	               mov byte [r13 + 0xac], al	      3460	dwarf2.c	FUNCTION_46
0x4007ab9	       0xfb6442420	           movzx eax, byte [rsp + 0x20] 	      3461	dwarf2.c	FUNCTION_46
0x4007abe	    0x418885ad0000	               mov byte [r13 + 0xad], al	      3461	dwarf2.c	FUNCTION_46
0x4007ac5	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      3462	dwarf2.c	FUNCTION_46
0x4007acd	        0x448b5b0c	            mov r11d, dword [rbx + 0xc] 	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007ad1	        0x49894538	             mov qword [r13 + 0x38], rax	      3462	dwarf2.c	FUNCTION_46
0x4007ad5	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3463	dwarf2.c	FUNCTION_46
0x4007add	          0x4585db	                         test r11d, r11d	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007ae0	        0x49894570	             mov qword [r13 + 0x70], rax	      3463	dwarf2.c	FUNCTION_46
0x4007ae4	     0xf8425010000	                            je 0x4007c0f	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007aea	        0x498d7518	                   lea rsi, [r13 + 0x18]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007aee	    0x4889ac248800	             mov qword [rsp + 0x88], rbp	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007af6	          0x4531ff	                          xor r15d, r15d	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007af9	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007b02	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007b0a	          0x4531e4	                          xor r12d, r12d	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007b0d	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007b15	      0x4c89742470	             mov qword [rsp + 0x70], r14	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007b1a	          0x4889c5	                            mov rbp, rax	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007b1d	            0xeb3f	                           jmp 0x4007b5e	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007b1f	              0x90	                                     nop	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007b20	          0x83f810	                           cmp eax, 0x10	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007b23	     0xf84e2010000	                            je 0x4007d0b	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007b29	     0xf87b9010000	                            ja 0x4007ce8	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007b2f	          0x83f803	                              cmp eax, 3	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007b32	            0x751c	                           jne 0x4007b50	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007b34	    0x8b8424f40000	            mov eax, dword [rsp + 0xf4] 	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x4007b3b	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x4007b3e	     0xf86fe010000	                           jbe 0x4007d42	      1077	dwarf2.c	FUNCTION_20
0x4007b44	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x4007b49	     0xf8402020000	                            je 0x4007d51	      1078	dwarf2.c	FUNCTION_20
0x4007b4f	              0x90	                                     nop	      1078	dwarf2.c	FUNCTION_20
0x4007b50	        0x4183c401	                             add r12d, 1	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007b54	        0x443b630c	            cmp r12d, dword [rbx + 0xc] 	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007b58	     0xf834d040000	                           jae 0x4007fab	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4007b5e	          0x4489e0	                           mov eax, r12d	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x4007b61	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4007b69	          0x4989e9	                             mov r9, rbp	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4007b6c	        0x48c1e004	                              shl rax, 4	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x4007b70	        0x48034310	             add rax, qword [rbx + 0x10]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x4007b74	          0x4c89e9	                            mov rcx, r13	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4007b77	            0x8b10	                    mov edx, dword [rax]	      1285	dwarf2.c	FUNCTION_22
0x4007b79	          0x8b7004	                mov esi, dword [rax + 4]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4007b7c	    0x899424f00000	             mov dword [rsp + 0xf0], edx	      1285	dwarf2.c	FUNCTION_22
0x4007b83	        0x488b5008	                mov rdx, qword [rax + 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4007b87	      0xe82495ffff	           call sym.read_attribute_value	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4007b8c	          0x4885c0	                           test rax, rax	      3470	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x4007b8f	          0x4989c0	                             mov r8, rax	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4007b92	     0xf84f4010000	                            je 0x4007d8c	      3470	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x4007b98	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007b9f	          0x83f812	                           cmp eax, 0x12	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007ba2	     0xf847c010000	                            je 0x4007d24	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007ba8	     0xf8672ffffff	                           jbe 0x4007b20	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bae	          0x83f81b	                           cmp eax, 0x1b	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bb1	     0xf84df010000	                            je 0x4007d96	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bb7	          0x83f855	                           cmp eax, 0x55	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bba	     0xf84a2010000	                            je 0x4007d62	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bc0	          0x83f813	                           cmp eax, 0x13	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bc3	            0x758b	                           jne 0x4007b50	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bc5	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bcd	        0x41894540	             mov dword [r13 + 0x40], eax	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bd1	      0xe97affffff	                           jmp 0x4007b50	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007bd6	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4007bda	      0xbe18000000	                           mov esi, 0x18	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4007bdf	      0x4c89442428	              mov qword [rsp + 0x28], r8	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4007be4	      0xe800000000	                          call 0x4007be9	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4007be9	          0x4885c0	                           test rax, rax	      1669	dwarf2.c	FUNCTION_27	IF_5
0x4007bec	     0xf8466f3ffff	                            je 0x4006f58	      1669	dwarf2.c	FUNCTION_27	IF_5
0x4007bf2	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	      1673	dwarf2.c	FUNCTION_27
0x4007bf6	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1671	dwarf2.c	FUNCTION_27
0x4007bfb	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      1671	dwarf2.c	FUNCTION_27
0x4007c00	        0x4c897810	             mov qword [rax + 0x10], r15	      1672	dwarf2.c	FUNCTION_27
0x4007c04	        0x48897008	                mov qword [rax + 8], rsi	      1671	dwarf2.c	FUNCTION_27
0x4007c08	          0x488910	                    mov qword [rax], rdx	      1673	dwarf2.c	FUNCTION_27
0x4007c0b	        0x49894518	             mov qword [r13 + 0x18], rax	      1674	dwarf2.c	FUNCTION_27
0x4007c0f	        0x49036e18	             add rbp, qword [r14 + 0x18]	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4007c13	        0x4d894568	              mov qword [r13 + 0x68], r8	      3547	dwarf2.c	FUNCTION_46
0x4007c17	     0xf82f3050000	                            jb 0x4008210	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4007c1d	          0x498b06	                    mov rax, qword [r14]	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4007c20	        0x49896e18	             mov qword [r14 + 0x18], rbp	      4781	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_8
0x4007c24	          0x4885c0	                           test rax, rax	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4007c27	     0xf84fb030000	                            je 0x4008028	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4007c2d	        0x4c896808	                mov qword [rax + 8], r13	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4007c31	      0x448b4c246c	            mov r9d, dword [rsp + 0x6c] 	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4007c36	        0x49894500	                    mov qword [r13], rax	      4788	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4007c3a	          0x4d892e	                    mov qword [r14], r13	      4789	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4007c3d	          0x4585c9	                           test r9d, r9d	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4007c40	     0xf84e4010000	                            je 0x4007e2a	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4007c46	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007c4b	        0xf6401808	               test byte [rax + 0x18], 8	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007c4f	            0x743f	                            je 0x4007c90	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007c51	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4007c56	            0x7438	                            je 0x4007c90	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4007c58	        0x458b4544	            mov r8d, dword [r13 + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4007c5c	          0x4585c0	                           test r8d, r8d	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4007c5f	     0xf85dc010000	                           jne 0x4007e41	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4007c65	        0x498d4518	                   lea rax, [r13 + 0x18]	      3565	dwarf2.c	FUNCTION_47
0x4007c69	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	      3565	dwarf2.c	FUNCTION_47
0x4007c71	            0xeb11	                           jmp 0x4007c84	      3565	dwarf2.c	FUNCTION_47
0x4007c73	       0xf1f440000	                   nop dword [rax + rax]	      3565	dwarf2.c	FUNCTION_47
0x4007c78	          0x488b00	                    mov rax, qword [rax]	      3570	dwarf2.c	FUNCTION_47	DO_1
0x4007c7b	          0x4885c0	                           test rax, rax	      3572	dwarf2.c	FUNCTION_47
0x4007c7e	     0xf84bd010000	                            je 0x4007e41	      3572	dwarf2.c	FUNCTION_47
0x4007c84	        0x483b5008	                cmp rdx, qword [rax + 8]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007c88	            0x72ee	                            jb 0x4007c78	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007c8a	        0x483b5010	            cmp rdx, qword [rax + 0x10] 	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007c8e	            0x73e8	                           jae 0x4007c78	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007c90	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007c95	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007c9a	          0x4d89f1	                             mov r9, r14	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007c9d	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007ca5	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007caa	          0x4c89ef	                            mov rdi, r13	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007cad	            0x31ed	                            xor ebp, ebp	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007caf	      0xe81cd8ffff	            call sym.comp_unit_find_line	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4007cb4	            0x85c0	                           test eax, eax	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007cb6	        0x400f95c5	                               setne bpl	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007cba	        0x4d8b7e18	            mov r15, qword [r14 + 0x18] 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007cbe	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      4815	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007cc2	          0x4c89fa	                            mov rdx, r15	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007cc5	        0x492b5640	             sub rdx, qword [r14 + 0x40]	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007cc9	        0x48395038	            cmp qword [rax + 0x38], rdx 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007ccd	     0xf8488010000	                            je 0x4007e5b	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007cd3	            0x85ed	                           test ebp, ebp	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4007cd5	     0xf8541f4ffff	                           jne 0x400711c	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4007cdb	    0xc74424680000	               mov dword [rsp + 0x68], 0	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4007ce3	      0xe9e5f4ffff	                           jmp 0x40071cd	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4007ce8	        0x837b0411	               cmp dword [rbx + 4], 0x11	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4007cec	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3488	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007cf4	      0x4889442420	             mov qword [rsp + 0x20], rax	      3488	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007cf9	     0xf8551feffff	                           jne 0x4007b50	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4007cff	    0x498985b00000	             mov qword [r13 + 0xb0], rax	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4007d06	      0xe945feffff	                           jmp 0x4007b50	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4007d0b	    0x41c745500100	               mov dword [r13 + 0x50], 1	      3478	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d13	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d1b	        0x49894560	             mov qword [r13 + 0x60], rax	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d1f	      0xe92cfeffff	                           jmp 0x4007b50	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d24	            0x31c0	                            xor eax, eax	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d26	    0x83bc24f40000	               cmp dword [rsp + 0xf4], 1	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d2e	    0x4c8bbc24f800	            mov r15, qword [rsp + 0xf8] 	      3497	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d36	           0xf95c0	                                setne al	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d39	        0x89442428	             mov dword [rsp + 0x28], eax	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d3d	      0xe90efeffff	                           jmp 0x4007b50	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007d42	      0xbe00410080	                     mov esi, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x4007d47	        0x480fa3c6	                             bt rsi, rax	      1078	dwarf2.c	FUNCTION_20
0x4007d4b	     0xf83fffdffff	                           jae 0x4007b50	      1078	dwarf2.c	FUNCTION_20
0x4007d51	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4007d59	        0x49894530	             mov qword [r13 + 0x30], rax	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4007d5d	      0xe9eefdffff	                           jmp 0x4007b50	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4007d62	    0x488b9424f800	            mov rdx, qword [rsp + 0xf8] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d6a	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d72	          0x4c89ef	                            mov rdi, r13	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d75	      0x4c89442478	              mov qword [rsp + 0x78], r8	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d7a	      0xe8b18effff	                 call sym.read_rangelist	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d7f	            0x85c0	                           test eax, eax	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d81	      0x4c8b442478	              mov r8, qword [rsp + 0x78]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d86	     0xf85c4fdffff	                           jne 0x4007b50	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d8c	      0x4c8b742470	            mov r14, qword [rsp + 0x70] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d91	      0xe9c2f1ffff	                           jmp 0x4006f58	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4007d96	    0x8b8424f40000	            mov eax, dword [rsp + 0xf4] 	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x4007d9d	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x4007da0	            0x763b	                           jbe 0x4007ddd	      1077	dwarf2.c	FUNCTION_20
0x4007da2	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x4007da7	            0x743f	                            je 0x4007de8	      1078	dwarf2.c	FUNCTION_20
0x4007da9	      0xba05000000	                              mov edx, 5	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4007dae	      0xbe00000000	                              mov esi, 0	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4007db3	      0xbf00000000	                              mov edi, 0	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4007db8	      0x4c89442478	              mov qword [rsp + 0x78], r8	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4007dbd	          0x4531f6	                          xor r14d, r14d	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4007dc0	      0xe800000000	                          call 0x4007dc5	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4007dc5	          0x4889c7	                            mov rdi, rax	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4007dc8	            0x31c0	                            xor eax, eax	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4007dca	      0xe800000000	                          call 0x4007dcf	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4007dcf	      0x4c8b442478	              mov r8, qword [rsp + 0x78]	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4007dd4	        0x4d897548	             mov qword [r13 + 0x48], r14	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007dd8	      0xe973fdffff	                           jmp 0x4007b50	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007ddd	      0xbe00410080	                     mov esi, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x4007de2	        0x480fa3c6	                             bt rsi, rax	      1078	dwarf2.c	FUNCTION_20
0x4007de6	            0x73c1	                           jae 0x4007da9	      1078	dwarf2.c	FUNCTION_20
0x4007de8	    0x4c8bb424f800	            mov r14, qword [rsp + 0xf8] 	      3508	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4007df0	          0x4d85f6	                           test r14, r14	      3518	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18
0x4007df3	            0x74df	                            je 0x4007dd4	      3518	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18
0x4007df5	      0xbe3a000000	                           mov esi, 0x3a	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4007dfa	          0x4c89f7	                            mov rdi, r14	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4007dfd	      0x4c89442478	              mov qword [rsp + 0x78], r8	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4007e02	      0xe800000000	                          call 0x4007e07	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4007e07	          0x4885c0	                           test rax, rax	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e0a	      0x4c8b442478	              mov r8, qword [rsp + 0x78]	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e0f	            0x74c3	                            je 0x4007dd4	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e11	          0x4939c6	                            cmp r14, rax	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e14	            0x74be	                            je 0x4007dd4	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e16	        0x8078ff2e	                cmp byte [rax - 1], 0x2e	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e1a	            0x75b8	                           jne 0x4007dd4	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e1c	        0x8078012f	                cmp byte [rax + 1], 0x2f	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e20	        0x488d4801	                      lea rcx, [rax + 1]	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e24	        0x4c0f44f1	                          cmove r14, rcx	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e28	            0xebaa	                           jmp 0x4007dd4	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4007e2a	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007e2f	     0xf84cb000000	                            je 0x4007f00	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007e35	        0x418b7d44	            mov edi, dword [r13 + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4007e39	            0x85ff	                           test edi, edi	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4007e3b	     0xf8492000000	                            je 0x4007ed3	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4007e41	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      4815	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007e45	          0x4889ea	                            mov rdx, rbp	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007e48	        0x492b5640	             sub rdx, qword [r14 + 0x40]	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007e4c	          0x4989ef	                            mov r15, rbp	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007e4f	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007e53	     0xf8582feffff	                           jne 0x4007cdb	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007e59	            0x31ed	                            xor ebp, ebp	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007e5b	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e5f	          0x4d85ed	                           test r13, r13	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e62	     0xf8441040000	                            je 0x40082a9	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e68	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e6d	        0x896c2420	             mov dword [rsp + 0x20], ebp	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e71	        0x4c8b6030	            mov r12, qword [rax + 0x30] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e75	          0x4889c5	                            mov rbp, rax	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e78	            0xeb35	                           jmp 0x4007eaf	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e7a	    0x660f1f440000	                    nop word [rax + rax]	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007e80	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x4007e84	          0x4885f6	                           test rsi, rsi	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4007e87	            0x740c	                            je 0x4007e95	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4007e89	          0x4889df	                            mov rdi, rbx	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4007e8c	      0xe800000000	                          call 0x4007e91	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4007e91	            0x85c0	                           test eax, eax	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4007e93	            0x742d	                            je 0x4007ec2	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4007e95	      0xbf00000000	                              mov edi, 0	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4007e9a	      0xb911000000	                           mov ecx, 0x11	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4007e9f	          0x4889de	                            mov rsi, rbx	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4007ea2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4007ea4	            0x741c	                            je 0x4007ec2	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4007ea6	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007eaa	          0x4d85ed	                           test r13, r13	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007ead	            0x7413	                            je 0x4007ec2	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4007eaf	        0x498b5d00	                    mov rbx, qword [r13]	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4007eb3	          0x4c89e6	                            mov rsi, r12	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4007eb6	          0x4889df	                            mov rdi, rbx	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4007eb9	      0xe800000000	                          call 0x4007ebe	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4007ebe	            0x85c0	                           test eax, eax	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4007ec0	            0x75be	                           jne 0x4007e80	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4007ec2	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4007ec6	        0x4d896e38	             mov qword [r14 + 0x38], r13	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4007eca	        0x4d897e40	             mov qword [r14 + 0x40], r15	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007ece	      0xe900feffff	                           jmp 0x4007cd3	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4007ed3	        0x498d4518	                   lea rax, [r13 + 0x18]	      3565	dwarf2.c	FUNCTION_47
0x4007ed7	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	      3565	dwarf2.c	FUNCTION_47
0x4007edf	            0xeb13	                           jmp 0x4007ef4	      3565	dwarf2.c	FUNCTION_47
0x4007ee1	     0xf1f80000000	                         nop dword [rax]	      3565	dwarf2.c	FUNCTION_47
0x4007ee8	          0x488b00	                    mov rax, qword [rax]	      3570	dwarf2.c	FUNCTION_47	DO_1
0x4007eeb	          0x4885c0	                           test rax, rax	      3572	dwarf2.c	FUNCTION_47
0x4007eee	     0xf844dffffff	                            je 0x4007e41	      3572	dwarf2.c	FUNCTION_47
0x4007ef4	        0x483b5008	                cmp rdx, qword [rax + 8]	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007ef8	            0x72ee	                            jb 0x4007ee8	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007efa	        0x483b5010	            cmp rdx, qword [rax + 0x10] 	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007efe	            0x73e8	                           jae 0x4007ee8	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x4007f00	        0x4883ec08	                              sub rsp, 8	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f04	          0x4c89ef	                            mov rdi, r13	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f07	            0x31ed	                            xor ebp, ebp	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f09	            0x4156	                                push r14	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f0b	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f10	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f15	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f1a	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f22	    0x488d8c24f000	                   lea rcx, [rsp + 0xf0]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f2a	      0xe8e1d7ffff	    call sym.comp_unit_find_nearest_line	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f2f	          0x4885c0	                           test rax, rax	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f32	              0x59	                                 pop rcx	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f33	        0x400f95c5	                               setne bpl	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f37	              0x5e	                                 pop rsi	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f38	      0xe97dfdffff	                           jmp 0x4007cba	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f3d	    0x488b9c24b000	            mov rbx, qword [rsp + 0xb0] 	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f45	    0x4c8bb4249000	            mov r14, qword [rsp + 0x90] 	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f4d	    0x488dabc80300	                  lea rbp, [rbx + 0x3c8]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f54	         0xf1f4000	                         nop dword [rax]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4007f58	          0x4c8b23	                    mov r12, qword [rbx]	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4007f5b	          0x4d85e4	                           test r12, r12	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x4007f5e	            0x7414	                            je 0x4007f74	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x4007f60	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x4007f65	      0xe800000000	                          call 0x4007f6a	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x4007f6a	      0x4d8b642418	            mov r12, qword [r12 + 0x18] 	      1031	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x4007f6f	          0x4d85e4	                           test r12, r12	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x4007f72	            0x75ec	                           jne 0x4007f60	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x4007f74	        0x4883c308	                              add rbx, 8	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x4007f78	          0x4839eb	                            cmp rbx, rbp	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4007f7b	            0x75db	                           jne 0x4007f58	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4007f7d	      0xe9d6efffff	                           jmp 0x4006f58	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4007f82	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007f87	          0x488b00	                    mov rax, qword [rax]	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007f8a	        0x48894130	             mov qword [rcx + 0x30], rax	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007f8e	      0xe9e1f4ffff	                           jmp 0x4007474	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4007f93	      0x410fb64503	               movzx eax, byte [r13 + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4007f98	        0x89442478	             mov dword [rsp + 0x78], eax	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4007f9c	      0xe94cf6ffff	                           jmp 0x40075ed	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4007fa1	      0x410fb65d02	               movzx ebx, byte [r13 + 2]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4007fa6	      0xe928f6ffff	                           jmp 0x40075d3	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4007fab	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4007fb0	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4007fb5	    0x488bac248800	            mov rbp, qword [rsp + 0x88] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4007fbd	      0x4c8b742470	            mov r14, qword [rsp + 0x70] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4007fc2	          0x4c01f8	                            add rax, r15	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4007fc5	          0x4585d2	                         test r10d, r10d	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4007fc8	        0x4c0f45f8	                         cmovne r15, rax	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4007fcc	          0x4d85ff	                           test r15, r15	      3541	dwarf2.c	FUNCTION_46	IF_21
0x4007fcf	     0xf843afcffff	                            je 0x4007c0f	      3541	dwarf2.c	FUNCTION_46	IF_21
0x4007fd5	      0x4c3b7c2420	            cmp r15, qword [rsp + 0x20] 	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4007fda	     0xf842ffcffff	                            je 0x4007c0f	      1637	dwarf2.c	FUNCTION_27	IF_1
0x4007fe0	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4007fe4	        0x498d4518	                   lea rax, [r13 + 0x18]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4007fe8	          0x4885d2	                           test rdx, rdx	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4007feb	            0x7525	                           jne 0x4008012	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4007fed	      0xe950020000	                           jmp 0x4008242	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4007ff2	    0x660f1f440000	                    nop word [rax + rax]	      1641	dwarf2.c	FUNCTION_27	IF_2
0x4007ff8	        0x4c3b7808	                cmp r15, qword [rax + 8]	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4007ffc	     0xf8499020000	                            je 0x400829b	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x4008002	          0x488b00	                    mov rax, qword [rax]	      1662	dwarf2.c	FUNCTION_27	DO_1
0x4008005	          0x4885c0	                           test rax, rax	      1664	dwarf2.c	FUNCTION_27
0x4008008	     0xf84c8fbffff	                            je 0x4007bd6	      1664	dwarf2.c	FUNCTION_27
0x400800e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1664	dwarf2.c	FUNCTION_27
0x4008012	      0x483b542420	            cmp rdx, qword [rsp + 0x20] 	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4008017	            0x75df	                           jne 0x4007ff8	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4008019	        0x4c897810	             mov qword [rax + 0x10], r15	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x400801d	      0xe9edfbffff	                           jmp 0x4007c0f	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4008022	    0x660f1f440000	                    nop word [rax + rax]	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x4008028	        0x4d896e08	                mov qword [r14 + 8], r13	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x400802c	      0xe900fcffff	                           jmp 0x4007c31	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x4008031	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x4008036	      0xe959eeffff	                           jmp 0x4006e94	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x400803b	    0x48899424a000	             mov qword [rsp + 0xa0], rdx	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4008043	    0xc74424780000	               mov dword [rsp + 0x78], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x400804b	          0x4889d6	                            mov rsi, rdx	       589	dwarf2.c	FUNCTION_6	IF_1
0x400804e	      0x488d440608	                lea rax, [rsi + rax + 8]	      3404	dwarf2.c	FUNCTION_46	IF_6
0x4008053	    0x48898424a000	             mov qword [rsp + 0xa0], rax	      3404	dwarf2.c	FUNCTION_46	IF_6
0x400805b	      0xe935f6ffff	                           jmp 0x4007695	      3404	dwarf2.c	FUNCTION_46	IF_6
0x4008060	        0x488d4204	                      lea rax, [rdx + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4008064	          0x4531ed	                          xor r13d, r13d	       612	dwarf2.c	FUNCTION_9	IF_1
0x4008067	    0x483984248800	            cmp qword [rsp + 0x88], rax 	       612	dwarf2.c	FUNCTION_9	IF_1
0x400806f	     0xf82a8f5ffff	                            jb 0x400761d	       612	dwarf2.c	FUNCTION_9	IF_1
0x4008075	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400807a	          0x4889d7	                            mov rdi, rdx	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400807d	      0x4889542428	             mov qword [rsp + 0x28], rdx	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4008082	        0x488b4008	                mov rax, qword [rax + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4008086	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4008089	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400808e	          0x4189c5	                           mov r13d, eax	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4008091	      0xe987f5ffff	                           jmp 0x400761d	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4008096	      0xbe390d0000	                          mov esi, 0xd39	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x400809b	      0xbf00000000	                              mov edi, 0	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40080a0	      0x4889542428	             mov qword [rsp + 0x28], rdx	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40080a5	      0xe800000000	                          call 0x40080aa	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40080aa	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40080af	      0xe954f5ffff	                           jmp 0x4007608	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40080b4	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40080b9	          0x4889d7	                            mov rdi, rdx	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40080bc	      0x4889542428	             mov qword [rsp + 0x28], rdx	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40080c1	        0x488b4008	                mov rax, qword [rax + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40080c5	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40080c8	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40080cd	          0x4989c5	                            mov r13, rax	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40080d0	      0xe948f5ffff	                           jmp 0x400761d	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40080d5	      0xbed9110000	                         mov esi, 0x11d9	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x40080da	      0xbf00000000	                              mov edi, 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x40080df	      0xe800000000	                          call 0x40080e4	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x40080e4	      0xe9bbf3ffff	                           jmp 0x40074a4	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x40080e9	    0xc74424680000	               mov dword [rsp + 0x68], 0	      4543	dwarf2.c	FUNCTION_68
0x40080f1	      0xe91bf0ffff	                           jmp 0x4007111	      4543	dwarf2.c	FUNCTION_68
0x40080f6	    0x498bbef80000	            mov rdi, qword [r14 + 0xf8] 	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40080fd	            0x31c9	                            xor ecx, ecx	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40080ff	            0x31d2	                            xor edx, edx	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4008101	      0xe800000000	                          call 0x4008106	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4008106	          0x4885c0	                           test rax, rax	       510	dwarf2.c	FUNCTION_4
0x4008109	     0xf8455f0ffff	                            je 0x4007164	       510	dwarf2.c	FUNCTION_4
0x400810f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       510	dwarf2.c	FUNCTION_4
0x4008113	          0x4885d2	                           test rdx, rdx	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4008116	     0xf8448f0ffff	                            je 0x4007164	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400811c	          0x4531c9	                            xor r9d, r9d	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400811f	            0x31ff	                            xor edi, edi	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4008121	        0x488b4a08	                mov rcx, qword [rdx + 8]	      4047	dwarf2.c	FUNCTION_58	FOR_1
0x4008125	          0x4889c8	                            mov rax, rcx	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4008128	        0x4883c038	                           add rax, 0x38	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400812c	            0x741a	                            je 0x4008148	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400812e	        0x488b7150	            mov rsi, qword [rcx + 0x50] 	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4008132	          0x4839f3	                            cmp rbx, rsi	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4008135	            0x7449	                            je 0x4008180	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4008137	          0x4885f6	                           test rsi, rsi	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400813a	            0x7444	                            je 0x4008180	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400813c	         0xf1f4000	                         nop dword [rax]	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4008140	          0x488b00	                    mov rax, qword [rax]	      4050	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4008143	          0x4885c0	                           test rax, rax	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4008146	            0x75f8	                           jne 0x4008140	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4008148	          0x488b12	                    mov rdx, qword [rdx]	      4045	dwarf2.c	FUNCTION_58	FOR_1
0x400814b	          0x4885d2	                           test rdx, rdx	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400814e	            0x75d1	                           jne 0x4008121	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4008150	          0x4885ff	                           test rdi, rdi	      4064	dwarf2.c	FUNCTION_58	IF_2
0x4008153	     0xf840bf0ffff	                            je 0x4007164	      4064	dwarf2.c	FUNCTION_58	IF_2
0x4008159	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      4067	dwarf2.c	FUNCTION_58	IF_2
0x400815d	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4067	dwarf2.c	FUNCTION_58	IF_2
0x4008162	        0x48895f50	             mov qword [rdi + 0x50], rbx	      4066	dwarf2.c	FUNCTION_58	IF_2
0x4008166	          0x488906	                    mov qword [rsi], rax	      4067	dwarf2.c	FUNCTION_58	IF_2
0x4008169	          0x8b4724	            mov eax, dword [rdi + 0x24] 	      4068	dwarf2.c	FUNCTION_58	IF_2
0x400816c	      0x488b742408	                mov rsi, qword [rsp + 8]	      4068	dwarf2.c	FUNCTION_58	IF_2
0x4008171	            0x8906	                    mov dword [rsi], eax	      4068	dwarf2.c	FUNCTION_58	IF_2
0x4008173	      0xe9a4efffff	                           jmp 0x400711c	      4068	dwarf2.c	FUNCTION_58	IF_2
0x4008178	     0xf1f84000000	                   nop dword [rax + rax]	      4068	dwarf2.c	FUNCTION_58	IF_2
0x4008180	        0x488b7008	                mov rsi, qword [rax + 8]	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4008184	          0x4939f4	                            cmp r12, rsi	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4008187	            0x7220	                            jb 0x40081a9	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4008189	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400818d	          0x4d39c4	                             cmp r12, r8	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4008190	            0x7317	                           jae 0x40081a9	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4008192	          0x4885ff	                           test rdi, rdi	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4008195	     0xf84de000000	                            je 0x4008279	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400819b	          0x4929f0	                             sub r8, rsi	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400819e	          0x4d39c8	                              cmp r8, r9	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40081a1	            0x7306	                           jae 0x40081a9	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40081a3	          0x4d89c1	                              mov r9, r8	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40081a6	          0x4889cf	                            mov rdi, rcx	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40081a9	          0x488b00	                    mov rax, qword [rax]	      4050	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x40081ac	          0x4885c0	                           test rax, rax	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x40081af	            0x75cf	                           jne 0x4008180	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x40081b1	            0xeb95	                           jmp 0x4008148	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x40081b3	      0xba05000000	                              mov edx, 5	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x40081b8	      0xbe00000000	                              mov esi, 0	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x40081bd	      0xbf00000000	                              mov edi, 0	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x40081c2	      0xe800000000	                          call 0x40081c7	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x40081c7	        0x8b742478	            mov esi, dword [rsp + 0x78] 	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40081cb	          0x4889c7	                            mov rdi, rax	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40081ce	      0xba08000000	                              mov edx, 8	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40081d3	            0x31c0	                            xor eax, eax	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40081d5	      0xe800000000	                          call 0x40081da	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40081da	      0xbf11000000	                           mov edi, 0x11	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x40081df	      0xe800000000	                          call 0x40081e4	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x40081e4	      0xe96fedffff	                           jmp 0x4006f58	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x40081e9	        0x488b3c24	                    mov rdi, qword [rsp]	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x40081ed	          0x4889de	                            mov rsi, rbx	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x40081f0	      0xe800000000	                          call 0x40081f5	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x40081f5	    0x49c786000100	              mov qword [r14 + 0x100], 0	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4008200	    0x41c786100100	              mov dword [r14 + 0x110], 2	      4219	dwarf2.c	FUNCTION_62	IF_2
0x400820b	      0xe9deecffff	                           jmp 0x4006eee	      4219	dwarf2.c	FUNCTION_62	IF_2
0x4008210	    0xc74424680000	               mov dword [rsp + 0x68], 0	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4008218	      0xe93bedffff	                           jmp 0x4006f58	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x400821d	          0x4989f6	                            mov r14, rsi	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4008220	    0x488bac24c000	            mov rbp, qword [rsp + 0xc0] 	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4008228	    0x4c8bbc24c800	            mov r15, qword [rsp + 0xc8] 	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4008230	      0xe978f7ffff	                           jmp 0x40079ad	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4008235	    0x4c8bb4249000	            mov r14, qword [rsp + 0x90] 	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x400823d	      0xe916edffff	                           jmp 0x4006f58	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4008242	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1643	dwarf2.c	FUNCTION_27	IF_2
0x4008247	        0x4d897d28	             mov qword [r13 + 0x28], r15	      1644	dwarf2.c	FUNCTION_27	IF_2
0x400824b	        0x49894520	             mov qword [r13 + 0x20], rax	      1643	dwarf2.c	FUNCTION_27	IF_2
0x400824f	      0xe9bbf9ffff	                           jmp 0x4007c0f	      1643	dwarf2.c	FUNCTION_27	IF_2
0x4008254	      0xe800000000	                          call 0x4008259	      4854	dwarf2.c	FUNCTION_68
0x4008259	        0x488b3c24	                    mov rdi, qword [rsp]	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x400825d	      0xe800000000	                          call 0x4008262	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x4008262	            0x31f6	                            xor esi, esi	       463	dwarf2.c	FUNCTION_2	IF_2
0x4008264	      0xe962f0ffff	                           jmp 0x40072cb	       463	dwarf2.c	FUNCTION_2	IF_2
0x4008269	          0x4889c5	                            mov rbp, rax	       463	dwarf2.c	FUNCTION_2	IF_2
0x400826c	    0xc74424200800	               mov dword [rsp + 0x20], 8	       463	dwarf2.c	FUNCTION_2	IF_2
0x4008274	      0xe9dbf2ffff	                           jmp 0x4007554	       463	dwarf2.c	FUNCTION_2	IF_2
0x4008279	          0x4d89c1	                              mov r9, r8	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400827c	          0x4929f1	                             sub r9, rsi	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400827f	      0xe922ffffff	                           jmp 0x40081a6	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4008284	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4008289	      0x4889442418	             mov qword [rsp + 0x18], rax	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400828e	    0xc744246c0100	               mov dword [rsp + 0x6c], 1	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4008296	      0xe9f9ebffff	                           jmp 0x4006e94	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x400829b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x40082a0	        0x48897008	                mov qword [rax + 8], rsi	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x40082a4	      0xe966f9ffff	                           jmp 0x4007c0f	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x40082a9	          0x4531ed	                          xor r13d, r13d	      3851	dwarf2.c	FUNCTION_54
0x40082ac	      0xe915fcffff	                           jmp 0x4007ec6	      3851	dwarf2.c	FUNCTION_54
0x40082b1	            0x85c0	                           test eax, eax	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x40082b3	     0xf849fecffff	                            je 0x4006f58	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x40082b9	      0xbe00000000	                              mov esi, 0	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x40082be	      0xba05000000	                              mov edx, 5	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x40082c3	      0xbf00000000	                              mov edi, 0	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x40082c8	      0xe800000000	                          call 0x40082cd	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x40082cd	    0x8bb424a80000	            mov esi, dword [rsp + 0xa8] 	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40082d4	      0xe974f7ffff	                           jmp 0x4007a4d	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40082d9	        0x4d8b6e18	            mov r13, qword [r14 + 0x18] 	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40082dd	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40082e1	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40082e5	        0x498d7d04	                      lea rdi, [r13 + 4]	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40082e9	      0xe901efffff	                           jmp 0x40071ef	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40082ee	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40082f7	      0xe998ebffff	                           jmp 0x4006e94	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
_bfd_dwarf2_slurp_debug_info	functions,0:DO,0:SWITCH,0:WHILE,0:ELSE,2:IF,18:FOR,2:CALL,25	476
0x4006380	            0x4157	                                push r15	      4311	dwarf2.c	FUNCTION_66
0x4006382	            0x4156	                                push r14	      4311	dwarf2.c	FUNCTION_66
0x4006384	          0x4989ff	                            mov r15, rdi	      4311	dwarf2.c	FUNCTION_66
0x4006387	            0x4155	                                push r13	      4311	dwarf2.c	FUNCTION_66
0x4006389	            0x4154	                                push r12	      4311	dwarf2.c	FUNCTION_66
0x400638b	          0x4589cc	                           mov r12d, r9d	      4311	dwarf2.c	FUNCTION_66
0x400638e	              0x55	                                push rbp	      4311	dwarf2.c	FUNCTION_66
0x400638f	              0x53	                                push rbx	      4311	dwarf2.c	FUNCTION_66
0x4006390	          0x4889d5	                            mov rbp, rdx	      4311	dwarf2.c	FUNCTION_66
0x4006393	          0x4c89c3	                             mov rbx, r8	      4311	dwarf2.c	FUNCTION_66
0x4006396	        0x4883ec38	                           sub rsp, 0x38	      4311	dwarf2.c	FUNCTION_66
0x400639a	          0x4d8b28	                     mov r13, qword [r8]	      4315	dwarf2.c	FUNCTION_66
0x400639d	    0x64488b042528	                mov rax, qword fs:[0x28]	      4311	dwarf2.c	FUNCTION_66
0x40063a6	      0x4889442428	             mov qword [rsp + 0x28], rax	      4311	dwarf2.c	FUNCTION_66
0x40063ab	            0x31c0	                            xor eax, eax	      4311	dwarf2.c	FUNCTION_66
0x40063ad	      0x4889742408	                mov qword [rsp + 8], rsi	      4311	dwarf2.c	FUNCTION_66
0x40063b2	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4311	dwarf2.c	FUNCTION_66
0x40063b7	          0x4d85ed	                           test r13, r13	      4317	dwarf2.c	FUNCTION_66	IF_1
0x40063ba	     0xf84c8050000	                            je 0x4006988	      4317	dwarf2.c	FUNCTION_66	IF_1
0x40063c0	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x40063c4	          0x4c39ff	                            cmp rdi, r15	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x40063c7	     0xf84c7030000	                            je 0x4006794	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x40063cd	          0x4c89ff	                            mov rdi, r15	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x40063d0	          0x4889de	                            mov rsi, rbx	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x40063d3	      0xe800000000	                          call 0x40063d8	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x40063d8	        0x498d7d08	                      lea rdi, [r13 + 8]	        90	string3.h	FUNCTION_75	CALL_6
0x40063dc	          0x4c89e9	                            mov rcx, r13	        90	string3.h	FUNCTION_75	CALL_6
0x40063df	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_75	CALL_6
0x40063e1	    0x49c745000000	                      mov qword [r13], 0	        90	string3.h	FUNCTION_75	CALL_6
0x40063e9	    0x49c785100100	              mov qword [r13 + 0x110], 0	        90	string3.h	FUNCTION_75	CALL_6
0x40063f4	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_75	CALL_6
0x40063f8	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_75	CALL_6
0x40063fb	    0x81c118010000	                          add ecx, 0x118	        90	string3.h	FUNCTION_75	CALL_6
0x4006401	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_75	CALL_6
0x4006404	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_75	CALL_6
0x4006407	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4344	dwarf2.c	FUNCTION_66
0x400640c	        0x4d897d28	             mov qword [r13 + 0x28], r15	      4342	dwarf2.c	FUNCTION_66
0x4006410	        0x49896d10	             mov qword [r13 + 0x10], rbp	      4343	dwarf2.c	FUNCTION_66
0x4006414	        0x49894578	             mov qword [r13 + 0x78], rax	      4344	dwarf2.c	FUNCTION_66
0x4006418	    0x418b87a00000	            mov eax, dword [r15 + 0xa0] 	      4258	dwarf2.c	FUNCTION_64	IF_1
0x400641f	            0x85c0	                           test eax, eax	      4258	dwarf2.c	FUNCTION_64	IF_1
0x4006421	     0xf85a3010000	                           jne 0x40065ca	      4258	dwarf2.c	FUNCTION_64	IF_1
0x4006427	      0x488b442408	                mov rax, qword [rsp + 8]	      4258	dwarf2.c	FUNCTION_64	IF_1
0x400642c	          0x4c892b	                    mov qword [rbx], r13	      4348	dwarf2.c	FUNCTION_66
0x400642f	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006433	          0x4885c0	                           test rax, rax	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006436	        0x490f44c7	                          cmove rax, r15	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400643a	          0x4889c7	                            mov rdi, rax	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400643d	      0x4889442408	                mov qword [rsp + 8], rax	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006442	      0xe800000000	                          call 0x4006447	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006447	          0x4885c0	                           test rax, rax	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x400644a	          0x4889c3	                            mov rbx, rax	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400644d	     0xf8433040000	                            je 0x4006886	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006453	      0x488b442408	                mov rax, qword [rsp + 8]	      4388	dwarf2.c	FUNCTION_66
0x4006458	          0x4585e4	                         test r12d, r12d	      4390	dwarf2.c	FUNCTION_66	IF_13
0x400645b	        0x49894530	             mov qword [r13 + 0x30], rax	      4388	dwarf2.c	FUNCTION_66
0x400645f	     0xf852d010000	                           jne 0x4006592	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4006465	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006469	          0x4885c0	                           test rax, rax	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x400646c	      0x4889442418	             mov qword [rsp + 0x18], rax	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006471	     0xf84d0040000	                            je 0x4006947	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006477	        0x4c8b6530	            mov r12, qword [rbp + 0x30] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x400647b	          0x4989c6	                            mov r14, rax	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x400647e	            0xeb36	                           jmp 0x40064b6	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006480	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x4006484	          0x4885f6	                           test rsi, rsi	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006487	            0x740c	                            je 0x4006495	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006489	          0x4c89ff	                            mov rdi, r15	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x400648c	      0xe800000000	                          call 0x4006491	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006491	            0x85c0	                           test eax, eax	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006493	            0x7433	                            je 0x40064c8	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006495	      0xb800000000	                              mov eax, 0	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x400649a	      0xb911000000	                           mov ecx, 0x11	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x400649f	          0x4c89fe	                            mov rsi, r15	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40064a2	          0x4889c7	                            mov rdi, rax	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40064a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40064a7	            0x741f	                            je 0x40064c8	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40064a9	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40064ad	          0x4d85f6	                           test r14, r14	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40064b0	     0xf8491040000	                            je 0x4006947	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40064b6	          0x4d8b3e	                    mov r15, qword [r14]	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40064b9	          0x4c89e6	                            mov rsi, r12	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40064bc	          0x4c89ff	                            mov rdi, r15	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40064bf	      0xe800000000	                          call 0x40064c4	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40064c4	            0x85c0	                           test eax, eax	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40064c6	            0x75b8	                           jne 0x4006480	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40064c8	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40064cd	          0x4531ff	                          xor r15d, r15d	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40064d0	        0x4c037b38	             add r15, qword [rbx + 0x38]	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x40064d4	          0x4d85f6	                           test r14, r14	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40064d7	      0x4c897c2420	             mov qword [rsp + 0x20], r15	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x40064dc	            0x7540	                           jne 0x400651e	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40064de	      0xe99d010000	                           jmp 0x4006680	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40064e3	       0xf1f440000	                   nop dword [rax + rax]	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40064e8	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x40064ec	          0x4885f6	                           test rsi, rsi	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40064ef	            0x740c	                            je 0x40064fd	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40064f1	          0x4889df	                            mov rdi, rbx	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40064f4	      0xe800000000	                          call 0x40064f9	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40064f9	            0x85c0	                           test eax, eax	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40064fb	            0x7433	                            je 0x4006530	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40064fd	      0xb800000000	                              mov eax, 0	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006502	      0xb911000000	                           mov ecx, 0x11	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006507	          0x4889de	                            mov rsi, rbx	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x400650a	          0x4889c7	                            mov rdi, rax	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x400650d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x400650f	            0x741f	                            je 0x4006530	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006511	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006515	          0x4d85f6	                           test r14, r14	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006518	     0xf8462010000	                            je 0x4006680	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x400651e	          0x498b1e	                    mov rbx, qword [r14]	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006521	          0x4c89e6	                            mov rsi, r12	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006524	          0x4889df	                            mov rdi, rbx	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006527	      0xe800000000	                          call 0x400652c	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x400652c	            0x85c0	                           test eax, eax	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x400652e	            0x75b8	                           jne 0x40064e8	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006530	          0x4c89f3	                            mov rbx, r14	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006533	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006537	            0xeb97	                           jmp 0x40064d0	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x4006539	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400653d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006542	      0xe800000000	                          call 0x4006547	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006547	          0x4885c0	                           test rax, rax	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x400654a	          0x4889c3	                            mov rbx, rax	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400654d	     0xf84d4040000	                            je 0x4006a27	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006553	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4006558	      0xe800000000	                          call 0x400655d	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x400655d	            0x85c0	                           test eax, eax	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x400655f	     0xf84cb030000	                            je 0x4006930	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4006565	      0x488b442408	                mov rax, qword [rsp + 8]	      4384	dwarf2.c	FUNCTION_66	IF_8	CALL_16
0x400656a	          0x4585e4	                         test r12d, r12d	      4390	dwarf2.c	FUNCTION_66	IF_13
0x400656d	    0x488b90b00000	            mov rdx, qword [rax + 0xb0] 	      4384	dwarf2.c	FUNCTION_66	IF_8	CALL_16
0x4006574	    0x41c785140100	              mov dword [r13 + 0x114], 1	      4386	dwarf2.c	FUNCTION_66	IF_8
0x400657f	        0x49894530	             mov qword [r13 + 0x30], rax	      4388	dwarf2.c	FUNCTION_66
0x4006583	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4384	dwarf2.c	FUNCTION_66	IF_8	CALL_16
0x4006588	        0x49895578	             mov qword [r13 + 0x78], rdx	      4385	dwarf2.c	FUNCTION_66	IF_8
0x400658c	     0xf84d3feffff	                            je 0x4006465	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4006592	          0x4c89ee	                            mov rsi, r13	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4006595	          0x4c89ff	                            mov rdi, r15	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4006598	      0xe813a2ffff	                 call sym.place_sections	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x400659d	            0x85c0	                           test eax, eax	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x400659f	     0xf85c0feffff	                           jne 0x4006465	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x40065a5	            0x31c0	                            xor eax, eax	      4381	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x40065a7	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      4451	dwarf2.c	FUNCTION_66
0x40065ac	    0x644833142528	                xor rdx, qword fs:[0x28]	      4451	dwarf2.c	FUNCTION_66
0x40065b5	     0xf852d050000	                           jne 0x4006ae8	      4451	dwarf2.c	FUNCTION_66
0x40065bb	        0x4883c438	                           add rsp, 0x38	      4451	dwarf2.c	FUNCTION_66
0x40065bf	              0x5b	                                 pop rbx	      4451	dwarf2.c	FUNCTION_66
0x40065c0	              0x5d	                                 pop rbp	      4451	dwarf2.c	FUNCTION_66
0x40065c1	            0x415c	                                 pop r12	      4451	dwarf2.c	FUNCTION_66
0x40065c3	            0x415d	                                 pop r13	      4451	dwarf2.c	FUNCTION_66
0x40065c5	            0x415e	                                 pop r14	      4451	dwarf2.c	FUNCTION_66
0x40065c7	            0x415f	                                 pop r15	      4451	dwarf2.c	FUNCTION_66
0x40065c9	              0xc3	                                     ret	      4451	dwarf2.c	FUNCTION_66
0x40065ca	    0x488d3cc50000	                        lea rdi, [rax*8]	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40065d2	      0xe800000000	                          call 0x40065d7	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40065d7	          0x4885c0	                           test rax, rax	      4261	dwarf2.c	FUNCTION_64	IF_2
0x40065da	    0x498985d80000	             mov qword [r13 + 0xd8], rax	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40065e1	            0x74c2	                            je 0x40065a5	      4261	dwarf2.c	FUNCTION_64	IF_2
0x40065e3	    0x418b97a00000	            mov edx, dword [r15 + 0xa0] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40065ea	    0x498bbf900000	            mov rdi, qword [r15 + 0x90] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40065f1	            0x85d2	                           test edx, edx	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40065f3	     0xf842efeffff	                            je 0x4006427	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40065f9	          0x83ea01	                              sub edx, 1	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40065fc	      0x488d74d008	              lea rsi, [rax + rdx*8 + 8]	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4006601	            0xeb21	                           jmp 0x4006624	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4006603	       0xf1f440000	                   nop dword [rax + rax]	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4006608	        0x488b5760	            mov rdx, qword [rdi + 0x60] 	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x400660c	        0x48035128	             add rdx, qword [rcx + 0x28]	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4006610	          0x488910	                    mov qword [rax], rdx	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4006613	        0x4883c008	                              add rax, 8	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4006617	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x400661b	          0x4839f0	                            cmp rax, rsi	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x400661e	     0xf8403feffff	                            je 0x4006427	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4006624	        0x488b4f68	            mov rcx, qword [rdi + 0x68] 	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4006628	          0x4885c9	                           test rcx, rcx	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x400662b	            0x75db	                           jne 0x4006608	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x400662d	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4006631	          0x488910	                    mov qword [rax], rdx	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4006634	            0xebdd	                           jmp 0x4006613	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4006636	      0x488b442408	                mov rax, qword [rsp + 8]	      4388	dwarf2.c	FUNCTION_66
0x400663b	          0x4585e4	                         test r12d, r12d	      4390	dwarf2.c	FUNCTION_66	IF_13
0x400663e	        0x49894530	             mov qword [r13 + 0x30], rax	      4388	dwarf2.c	FUNCTION_66
0x4006642	            0x7413	                            je 0x4006657	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4006644	          0x4c89ee	                            mov rsi, r13	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4006647	          0x4c89ff	                            mov rdi, r15	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x400664a	      0xe861a1ffff	                 call sym.place_sections	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x400664f	            0x85c0	                           test eax, eax	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4006651	     0xf844effffff	                            je 0x40065a5	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4006657	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400665b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006660	      0xe800000000	                          call 0x4006665	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006665	          0x4885c0	                           test rax, rax	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006668	     0xf8422040000	                            je 0x4006a90	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x400666e	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4006677	          0x4531ff	                          xor r15d, r15d	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x400667a	    0x660f1f440000	                    nop word [rax + rax]	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4006680	          0x4c89ff	                            mov rdi, r15	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4006683	      0xe800000000	                          call 0x4006688	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4006688	          0x4885c0	                           test rax, rax	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x400668b	        0x49894570	             mov qword [r13 + 0x70], rax	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x400668f	     0xf8410ffffff	                            je 0x40065a5	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4006695	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006699	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400669e	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4426	dwarf2.c	FUNCTION_66	ELSE_2
0x40066a7	      0xe800000000	                          call 0x40066ac	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x40066ac	          0x4885c0	                           test rax, rax	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x40066af	          0x4989c7	                            mov r15, rax	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x40066b2	     0xf8435010000	                            je 0x40067ed	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x40066b8	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x40066bd	           0xf1f00	                         nop dword [rax]	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x40066c0	        0x498b5f38	            mov rbx, qword [r15 + 0x38] 	      4433	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x40066c4	          0x4885db	                           test rbx, rbx	      4434	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x40066c7	     0xf8593000000	                           jne 0x4006760	      4434	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x40066cd	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40066d1	        0x4c8b6530	            mov r12, qword [rbp + 0x30] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40066d5	          0x4d85ff	                           test r15, r15	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40066d8	            0x744a	                            je 0x4006724	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40066da	    0x660f1f440000	                    nop word [rax + rax]	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40066e0	          0x498b1f	                    mov rbx, qword [r15]	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40066e3	          0x4c89e6	                            mov rsi, r12	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40066e6	          0x4889df	                            mov rdi, rbx	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40066e9	      0xe800000000	                          call 0x40066ee	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40066ee	            0x85c0	                           test eax, eax	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40066f0	            0x74ce	                            je 0x40066c0	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40066f2	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x40066f6	          0x4885f6	                           test rsi, rsi	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40066f9	            0x740c	                            je 0x4006707	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40066fb	          0x4889df	                            mov rdi, rbx	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40066fe	      0xe800000000	                          call 0x4006703	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006703	            0x85c0	                           test eax, eax	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006705	            0x74b9	                            je 0x40066c0	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x4006707	      0xb800000000	                              mov eax, 0	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x400670c	      0xb911000000	                           mov ecx, 0x11	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006711	          0x4889de	                            mov rsi, rbx	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006714	          0x4889c7	                            mov rdi, rax	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006717	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x4006719	            0x74a5	                            je 0x40066c0	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x400671b	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x400671f	          0x4d85ff	                           test r15, r15	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006722	            0x75bc	                           jne 0x40066e0	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x4006724	        0x498b4570	            mov rax, qword [r13 + 0x70] 	      4446	dwarf2.c	FUNCTION_66
0x4006728	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400672d	          0x4c89e6	                            mov rsi, r12	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006730	        0x49894518	             mov qword [r13 + 0x18], rax	      4446	dwarf2.c	FUNCTION_66
0x4006734	          0x4c01f0	                            add rax, r14	      4447	dwarf2.c	FUNCTION_66
0x4006737	        0x49894520	             mov qword [r13 + 0x20], rax	      4447	dwarf2.c	FUNCTION_66
0x400673b	      0xe800000000	                          call 0x4006740	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4006740	          0x4885c0	                           test rax, rax	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006743	     0xf845a020000	                            je 0x40069a3	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4006749	        0x49894538	             mov qword [r13 + 0x38], rax	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x400674d	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      4449	dwarf2.c	FUNCTION_66
0x4006751	        0x49894540	             mov qword [r13 + 0x40], rax	      4449	dwarf2.c	FUNCTION_66
0x4006755	      0xb801000000	                              mov eax, 1	      4450	dwarf2.c	FUNCTION_66
0x400675a	      0xe948feffff	                           jmp 0x40065a7	      4450	dwarf2.c	FUNCTION_66
0x400675f	              0x90	                                     nop	      4450	dwarf2.c	FUNCTION_66
0x4006760	          0x4c89f2	                            mov rdx, r14	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4006763	        0x49035570	             add rdx, qword [r13 + 0x70]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4006767	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x400676c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4006771	          0x4c89fe	                            mov rsi, r15	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4006774	      0xe800000000	                          call 0x4006779	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4006779	          0x4885c0	                           test rax, rax	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x400677c	     0xf8423feffff	                            je 0x40065a5	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4006782	      0x48035c2420	             add rbx, qword [rsp + 0x20]	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4006787	          0x4989de	                            mov r14, rbx	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x400678a	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x400678f	      0xe939ffffff	                           jmp 0x40066cd	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4006794	    0x8b8fa0000000	            mov ecx, dword [rdi + 0xa0] 	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x400679a	    0x488b97900000	            mov rdx, qword [rdi + 0x90] 	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x40067a1	            0x85c9	                           test ecx, ecx	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067a3	     0xf84af000000	                            je 0x4006858	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067a9	    0x498b85d80000	            mov rax, qword [r13 + 0xd8] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067b0	          0x83e901	                              sub ecx, 1	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067b3	      0x4c8d44c808	               lea r8, [rax + rcx*8 + 8]	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067b8	            0xeb24	                           jmp 0x40067de	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067ba	    0x660f1f440000	                    nop word [rax + rax]	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067c0	        0x488b4a60	            mov rcx, qword [rdx + 0x60] 	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x40067c4	        0x48034e28	             add rcx, qword [rsi + 0x28]	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x40067c8	          0x483908	                    cmp qword [rax], rcx	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x40067cb	     0xf85fcfbffff	                           jne 0x40063cd	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x40067d1	        0x4883c008	                              add rax, 8	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x40067d5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067d9	          0x4c39c0	                             cmp rax, r8	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067dc	            0x747a	                            je 0x4006858	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40067de	        0x488b7268	            mov rsi, qword [rdx + 0x68] 	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x40067e2	          0x4885f6	                           test rsi, rsi	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x40067e5	            0x75d9	                           jne 0x40067c0	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x40067e7	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x40067eb	            0xebdb	                           jmp 0x40067c8	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x40067ed	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3822	dwarf2.c	FUNCTION_54	IF_1
0x40067f1	          0x4885f6	                           test rsi, rsi	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x40067f4	            0x7416	                            je 0x400680c	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x40067f6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x40067fb	      0xe800000000	                          call 0x4006800	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006800	          0x4885c0	                           test rax, rax	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006803	          0x4989c7	                            mov r15, rax	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006806	     0xf85acfeffff	                           jne 0x40066b8	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x400680c	      0x488b442408	                mov rax, qword [rsp + 8]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006811	    0x4c8bb8900000	            mov r15, qword [rax + 0x90] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006818	      0xb800000000	                              mov eax, 0	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x400681d	          0x4d85ff	                           test r15, r15	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006820	            0x751b	                           jne 0x400683d	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006822	      0xe953010000	                           jmp 0x400697a	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006827	    0x660f1f840000	                    nop word [rax + rax]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006830	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006834	          0x4d85ff	                           test r15, r15	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006837	     0xf843d010000	                            je 0x400697a	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x400683d	          0x498b37	                    mov rsi, qword [r15]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006840	      0xb911000000	                           mov ecx, 0x11	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006845	          0x4889c7	                            mov rdi, rax	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006848	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x400684a	            0x75e4	                           jne 0x4006830	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x400684c	      0xe967feffff	                           jmp 0x40066b8	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006851	     0xf1f80000000	                         nop dword [rax]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006858	      0x49837d3000	               cmp qword [r13 + 0x30], 0	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x400685d	     0xf8442fdffff	                            je 0x40065a5	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4006863	          0x4585e4	                         test r12d, r12d	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4006866	      0xb801000000	                              mov eax, 1	      4328	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x400686b	     0xf8436fdffff	                            je 0x40065a7	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4006871	          0x4c89ee	                            mov rsi, r13	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4006874	      0xe8379fffff	                 call sym.place_sections	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4006879	            0x85c0	                           test eax, eax	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x400687b	           0xf95c0	                                setne al	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x400687e	           0xfb6c0	                           movzx eax, al	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4006881	      0xe921fdffff	                           jmp 0x40065a7	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4006886	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3822	dwarf2.c	FUNCTION_54	IF_1
0x400688a	          0x4885f6	                           test rsi, rsi	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x400688d	            0x7416	                            je 0x40068a5	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x400688f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006894	      0xe800000000	                          call 0x4006899	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006899	          0x4885c0	                           test rax, rax	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x400689c	          0x4889c3	                            mov rbx, rax	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x400689f	     0xf85aefbffff	                           jne 0x4006453	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x40068a5	      0x488b442408	                mov rax, qword [rsp + 8]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068aa	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068b1	      0xb800000000	                              mov eax, 0	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068b6	          0x4885db	                           test rbx, rbx	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068b9	            0x7421	                            je 0x40068dc	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068bb	       0xf1f440000	                   nop dword [rax + rax]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068c0	          0x488b33	                    mov rsi, qword [rbx]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40068c3	      0xb911000000	                           mov ecx, 0x11	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40068c8	          0x4889c7	                            mov rdi, rax	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40068cb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40068cd	     0xf8480fbffff	                            je 0x4006453	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40068d3	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068d7	          0x4885db	                           test rbx, rbx	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068da	            0x75e4	                           jne 0x40068c0	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40068dc	      0x4c397c2408	                cmp qword [rsp + 8], r15	      4354	dwarf2.c	FUNCTION_66	IF_8
0x40068e1	     0xf854ffdffff	                           jne 0x4006636	      4354	dwarf2.c	FUNCTION_66	IF_8
0x40068e7	      0xbe00000000	                              mov esi, 0	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x40068ec	          0x4c89ff	                            mov rdi, r15	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x40068ef	      0xe800000000	                          call 0x40068f4	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x40068f4	          0x4885c0	                           test rax, rax	      4359	dwarf2.c	FUNCTION_66	IF_8	IF_9
0x40068f7	          0x4989c6	                            mov r14, rax	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x40068fa	     0xf8400010000	                            je 0x4006a00	      4359	dwarf2.c	FUNCTION_66	IF_8	IF_9
0x4006900	            0x31f6	                            xor esi, esi	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4006902	          0x4c89f7	                            mov rdi, r14	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4006905	      0xe800000000	                          call 0x400690a	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x400690a	          0x4885c0	                           test rax, rax	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x400690d	      0x4889442408	                mov qword [rsp + 8], rax	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4006912	            0x7426	                            je 0x400693a	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4006914	    0x814844000010	         or dword [rax + 0x44], 0x100000	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x400691b	      0xbe01000000	                              mov esi, 1	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4006920	          0x4889c7	                            mov rdi, rax	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4006923	      0xe800000000	                          call 0x4006928	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4006928	            0x85c0	                           test eax, eax	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x400692a	     0xf8509fcffff	                           jne 0x4006539	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4006930	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4006935	      0xe800000000	                          call 0x400693a	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x400693a	          0x4c89f7	                            mov rdi, r14	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x400693d	      0xe800000000	                          call 0x4006942	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x4006942	      0xe95efcffff	                           jmp 0x40065a5	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x4006947	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      4408	dwarf2.c	FUNCTION_66	IF_14
0x400694b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4006950	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4006955	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400695a	        0x4d8d4570	                    lea r8, [r13 + 0x70]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400695e	            0x31c9	                            xor ecx, ecx	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4006960	      0x4889442420	             mov qword [rsp + 0x20], rax	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4006965	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4006969	        0x488d7030	                   lea rsi, [rax + 0x30]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400696d	      0xe8ce96ffff	                   call sym.read_section	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4006972	            0x85c0	                           test eax, eax	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4006974	     0xf842bfcffff	                            je 0x40065a5	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400697a	        0x4c8b6530	            mov r12, qword [rbp + 0x30] 	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400697e	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4006983	      0xe99cfdffff	                           jmp 0x4006724	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4006988	      0xbe18010000	                          mov esi, 0x118	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x400698d	      0xe800000000	                          call 0x4006992	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4006992	          0x4885c0	                           test rax, rax	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4006995	          0x4989c5	                            mov r13, rax	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4006998	     0xf8569faffff	                           jne 0x4006407	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x400699e	      0xe902fcffff	                           jmp 0x40065a5	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x40069a3	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3822	dwarf2.c	FUNCTION_54	IF_1
0x40069a7	          0x4885f6	                           test rsi, rsi	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x40069aa	            0x7413	                            je 0x40069bf	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x40069ac	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x40069b1	      0xe800000000	                          call 0x40069b6	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x40069b6	          0x4885c0	                           test rax, rax	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x40069b9	     0xf858afdffff	                           jne 0x4006749	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x40069bf	      0x488b442408	                mov rax, qword [rsp + 8]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069c4	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069cb	      0xb800000000	                              mov eax, 0	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069d0	          0x4885d2	                           test rdx, rdx	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069d3	            0x7514	                           jne 0x40069e9	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069d5	            0xeb49	                           jmp 0x4006a20	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069d7	    0x660f1f840000	                    nop word [rax + rax]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069e0	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069e4	          0x4885d2	                           test rdx, rdx	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069e7	            0x7437	                            je 0x4006a20	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x40069e9	          0x488b32	                    mov rsi, qword [rdx]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40069ec	      0xb911000000	                           mov ecx, 0x11	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40069f1	          0x4889c7	                            mov rdi, rax	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40069f4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40069f6	            0x75e8	                           jne 0x40069e0	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40069f8	          0x4889d0	                            mov rax, rdx	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x40069fb	      0xe949fdffff	                           jmp 0x4006749	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006a00	      0xbe00000000	                              mov esi, 0	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4006a05	          0x4c89ff	                            mov rdi, r15	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4006a08	      0xe800000000	                          call 0x4006a0d	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4006a0d	          0x4885c0	                           test rax, rax	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4006a10	          0x4989c6	                            mov r14, rax	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4006a13	     0xf848cfbffff	                            je 0x40065a5	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4006a19	      0xe9e2feffff	                           jmp 0x4006900	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4006a1e	            0x6690	                                     nop	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4006a20	            0x31c0	                            xor eax, eax	      3834	dwarf2.c	FUNCTION_54	IF_1
0x4006a22	      0xe922fdffff	                           jmp 0x4006749	      3834	dwarf2.c	FUNCTION_54	IF_1
0x4006a27	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3822	dwarf2.c	FUNCTION_54	IF_1
0x4006a2b	          0x4885f6	                           test rsi, rsi	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x4006a2e	            0x7416	                            je 0x4006a46	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x4006a30	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006a35	      0xe800000000	                          call 0x4006a3a	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006a3a	          0x4885c0	                           test rax, rax	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006a3d	          0x4889c3	                            mov rbx, rax	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006a40	     0xf850dfbffff	                           jne 0x4006553	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006a46	      0x488b442408	                mov rax, qword [rsp + 8]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a4b	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a52	      0xb800000000	                              mov eax, 0	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a57	          0x4885db	                           test rbx, rbx	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a5a	            0x7519	                           jne 0x4006a75	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a5c	      0xe9cffeffff	                           jmp 0x4006930	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a61	     0xf1f80000000	                         nop dword [rax]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a68	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a6c	          0x4885db	                           test rbx, rbx	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a6f	     0xf84bbfeffff	                            je 0x4006930	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006a75	          0x488b33	                    mov rsi, qword [rbx]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006a78	      0xb911000000	                           mov ecx, 0x11	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006a7d	          0x4889c7	                            mov rdi, rax	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006a80	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006a82	            0x75e4	                           jne 0x4006a68	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006a84	      0xe9cafaffff	                           jmp 0x4006553	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006a89	     0xf1f80000000	                         nop dword [rax]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006a90	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      3822	dwarf2.c	FUNCTION_54	IF_1
0x4006a94	          0x4885f6	                           test rsi, rsi	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x4006a97	            0x7413	                            je 0x4006aac	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x4006a99	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006a9e	      0xe800000000	                          call 0x4006aa3	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4006aa3	          0x4885c0	                           test rax, rax	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006aa6	     0xf85c2fbffff	                           jne 0x400666e	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4006aac	      0x488b442408	                mov rax, qword [rsp + 8]	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006ab1	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006ab8	      0xb800000000	                              mov eax, 0	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006abd	          0x4885d2	                           test rdx, rdx	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006ac0	            0x741c	                            je 0x4006ade	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006ac2	          0x488b32	                    mov rsi, qword [rdx]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006ac5	      0xb911000000	                           mov ecx, 0x11	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006aca	          0x4889c7	                            mov rdi, rax	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006acd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006acf	     0xf8499fbffff	                            je 0x400666e	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4006ad5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006ad9	          0x4885d2	                           test rdx, rdx	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006adc	            0x75e4	                           jne 0x4006ac2	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4006ade	    0x488b04253800	                   mov rax, qword [0x38]	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4006ae6	             0xf0b	                                     ud2	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4006ae8	      0xe800000000	                          call 0x4006aed	      4451	dwarf2.c	FUNCTION_66
concat_filename	functions,0:DO,0:SWITCH,0:WHILE,0:ELSE,1:IF,11:FOR,0:CALL,13	137
0x40004e0	          0x4885ff	                           test rdi, rdi	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40004e3	            0x4156	                                push r14	      1566	dwarf2.c	FUNCTION_26
0x40004e5	            0x4155	                                push r13	      1566	dwarf2.c	FUNCTION_26
0x40004e7	            0x4154	                                push r12	      1566	dwarf2.c	FUNCTION_26
0x40004e9	              0x55	                                push rbp	      1566	dwarf2.c	FUNCTION_26
0x40004ea	              0x53	                                push rbx	      1566	dwarf2.c	FUNCTION_26
0x40004eb	     0xf84e7000000	                            je 0x40005d8	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40004f1	          0x8d46ff	                      lea eax, [rsi - 1]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40004f4	          0x3b4708	                cmp eax, dword [rdi + 8]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40004f7	     0xf83db000000	                           jae 0x40005d8	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40004fd	        0x488d1440	                  lea rdx, [rax + rax*2]	      1578	dwarf2.c	FUNCTION_26
0x4000501	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      1578	dwarf2.c	FUNCTION_26
0x4000505	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1578	dwarf2.c	FUNCTION_26
0x4000509	          0x488b28	                    mov rbp, qword [rax]	      1578	dwarf2.c	FUNCTION_26
0x400050c	          0x4885ed	                           test rbp, rbp	      1579	dwarf2.c	FUNCTION_26	IF_3
0x400050f	     0xf84cb000000	                            je 0x40005e0	      1579	dwarf2.c	FUNCTION_26	IF_3
0x4000515	        0x807d002f	                    cmp byte [rbp], 0x2f	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x4000519	     0xf8499010000	                            je 0x40006b8	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x400051f	          0x8b4008	                mov eax, dword [rax + 8]	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000522	            0x85c0	                           test eax, eax	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000524	     0xf84ee000000	                            je 0x4000618	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400052a	          0x3b470c	              cmp eax, dword [rdi + 0xc]	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400052d	     0xf87e5000000	                            ja 0x4000618	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000533	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000537	          0x4885d2	                           test rdx, rdx	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x400053a	     0xf84d8000000	                            je 0x4000618	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000540	          0x83e801	                              sub eax, 1	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000543	        0x4c8b24c2	            mov r12, qword [rdx + rax*8]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000547	          0x4d85e4	                           test r12, r12	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x400054a	     0xf84c8000000	                            je 0x4000618	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000550	      0x41803c242f	                    cmp byte [r12], 0x2f	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000555	     0xf84ca000000	                            je 0x4000625	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x400055b	        0x4c8b6f18	            mov r13, qword [rdi + 0x18] 	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x400055f	          0x4d85ed	                           test r13, r13	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4000562	     0xf84bd000000	                            je 0x4000625	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4000568	          0x4c89ef	                            mov rdi, r13	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400056b	      0xe800000000	                          call 0x4000570	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000570	          0x4889ef	                            mov rdi, rbp	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000573	          0x4989c6	                            mov r14, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000576	      0xe800000000	                          call 0x400057b	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400057b	          0x4c89e7	                            mov rdi, r12	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x400057e	          0x4889c3	                            mov rbx, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000581	      0xe800000000	                          call 0x4000586	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4000586	      0x498d7c1e03	                lea rdi, [r14 + rbx + 3]	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x400058b	          0x4801c7	                            add rdi, rax	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x400058e	      0xe800000000	                          call 0x4000593	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000593	          0x4885c0	                           test rax, rax	      1614	dwarf2.c	FUNCTION_26	IF_4	IF_9	IF_10
0x4000596	          0x4889c3	                            mov rbx, rax	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000599	     0xf84d1000000	                            je 0x4000670	      1614	dwarf2.c	FUNCTION_26	IF_4	IF_9	IF_10
0x400059f	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005a3	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005a6	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005a9	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005aa	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005b1	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005b4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005b9	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005be	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005c0	      0xe800000000	                          call 0x40005c5	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005c5	              0x58	                                 pop rax	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005c6	          0x4889d8	                            mov rax, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005c9	              0x5a	                                 pop rdx	        33	stdio2.h	FUNCTION_84	CALL_1
0x40005ca	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x40005cb	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x40005cc	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x40005ce	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x40005d0	            0x415e	                                 pop r14	      1628	dwarf2.c	FUNCTION_26
0x40005d2	              0xc3	                                     ret	      1628	dwarf2.c	FUNCTION_26
0x40005d3	       0xf1f440000	                   nop dword [rax + rax]	      1628	dwarf2.c	FUNCTION_26
0x40005d8	            0x85f6	                           test esi, esi	      1572	dwarf2.c	FUNCTION_26	IF_1	IF_2
0x40005da	     0xf85a0000000	                           jne 0x4000680	      1572	dwarf2.c	FUNCTION_26	IF_1	IF_2
0x40005e0	      0xbf0a000000	                            mov edi, 0xa	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40005e5	      0xe800000000	                          call 0x40005ea	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40005ea	          0x4885c0	                           test rax, rax	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40005ed	     0xf847d000000	                            je 0x4000670	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40005f3	    0x48b93c756e6b	          movabs rcx, 0x6e776f6e6b6e753c	        53	string3.h	FUNCTION_72	CALL_3
0x40005fd	          0x488908	                    mov qword [rax], rcx	        53	string3.h	FUNCTION_72	CALL_3
0x4000600	      0xb93e000000	                           mov ecx, 0x3e	        53	string3.h	FUNCTION_72	CALL_3
0x4000605	        0x66894808	                  mov word [rax + 8], cx	        53	string3.h	FUNCTION_72	CALL_3
0x4000609	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x400060a	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x400060b	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x400060d	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x400060f	            0x415e	                                 pop r14	      1628	dwarf2.c	FUNCTION_26
0x4000611	              0xc3	                                     ret	      1628	dwarf2.c	FUNCTION_26
0x4000612	    0x660f1f440000	                    nop word [rax + rax]	      1628	dwarf2.c	FUNCTION_26
0x4000618	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x400061c	          0x4d85e4	                           test r12, r12	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x400061f	     0xf8493000000	                            je 0x40006b8	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4000625	          0x4c89e7	                            mov rdi, r12	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000628	      0xe800000000	                          call 0x400062d	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400062d	          0x4889ef	                            mov rdi, rbp	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000630	          0x4889c3	                            mov rbx, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000633	      0xe800000000	                          call 0x4000638	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000638	      0x488d7c0302	                lea rdi, [rbx + rax + 2]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400063d	      0xe800000000	                          call 0x4000642	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x4000642	          0x4889c3	                            mov rbx, rax	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x4000645	            0x31c0	                            xor eax, eax	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x4000647	          0x4885db	                           test rbx, rbx	      1620	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	IF_11
0x400064a	            0x74bd	                            je 0x4000609	      1620	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	IF_11
0x400064c	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x400064f	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000652	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000657	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_84	CALL_1
0x400065e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000663	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000666	      0xe800000000	                          call 0x400066b	        33	stdio2.h	FUNCTION_84	CALL_1
0x400066b	          0x4889d8	                            mov rax, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x400066e	            0xeb99	                           jmp 0x4000609	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000670	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x4000671	            0x31c0	                            xor eax, eax	      1628	dwarf2.c	FUNCTION_26
0x4000673	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x4000674	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x4000676	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x4000678	            0x415e	                                 pop r14	      1628	dwarf2.c	FUNCTION_26
0x400067a	              0xc3	                                     ret	      1628	dwarf2.c	FUNCTION_26
0x400067b	       0xf1f440000	                   nop dword [rax + rax]	      1628	dwarf2.c	FUNCTION_26
0x4000680	      0xba05000000	                              mov edx, 5	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x4000685	      0xbe00000000	                              mov esi, 0	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x400068a	      0xbf00000000	                              mov edi, 0	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x400068f	      0xe800000000	                          call 0x4000694	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x4000694	          0x4889c7	                            mov rdi, rax	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x4000697	            0x31c0	                            xor eax, eax	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x4000699	      0xe800000000	                          call 0x400069e	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x400069e	      0xbf0a000000	                            mov edi, 0xa	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40006a3	      0xe800000000	                          call 0x40006a8	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40006a8	          0x4885c0	                           test rax, rax	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40006ab	     0xf8542ffffff	                           jne 0x40005f3	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40006b1	            0xebbd	                           jmp 0x4000670	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40006b3	       0xf1f440000	                   nop dword [rax + rax]	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40006b8	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x40006b9	          0x4889ef	                            mov rdi, rbp	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x40006bc	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x40006bd	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x40006bf	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x40006c1	            0x415e	                                 pop r14	      1628	dwarf2.c	FUNCTION_26
0x40006c3	      0xe900000000	                           jmp 0x40006c8	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
