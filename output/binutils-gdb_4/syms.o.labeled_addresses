_bfd_nosymbols_canonicalize_symtab	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,0	2
0x4001450	            0x31c0	                            xor eax, eax	      1436	syms.c	FUNCTION_14
0x4001452	              0xc3	                                     ret	      1436	syms.c	FUNCTION_14
_bfd_nosymbols_get_symbol_info	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,0	1
0x4001470	            0xf3c3	                                     ret	      1450	syms.c	FUNCTION_16
_bfd_nosymbols_find_line	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x40014c0	      0xe900000000	                           jmp 0x40014c5	      1495	syms.c	FUNCTION_21	CALL_1
_bfd_generic_minisymbol_to_symbol	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,0	2
0x40007b0	          0x488b02	                    mov rax, qword [rdx]	       847	syms.c	FUNCTION_11
0x40007b3	              0xc3	                                     ret	       848	syms.c	FUNCTION_11
bfd_is_local_label	DO,0:SWITCH,0:functions,0:IF,2:ELSE,0:FOR,0:WHILE,0:CALL,1	11
0x4000060	    0xf74618824100	        test dword [rsi + 0x18], 0x4182 	       377	syms.c	FUNCTION_1	IF_1
0x4000067	            0x7517	                           jne 0x4000080	       377	syms.c	FUNCTION_1	IF_1
0x4000069	        0x488b7608	                mov rsi, qword [rsi + 8]	       379	syms.c	FUNCTION_1	IF_2
0x400006d	          0x4885f6	                           test rsi, rsi	       379	syms.c	FUNCTION_1	IF_2
0x4000070	            0x740e	                            je 0x4000080	       379	syms.c	FUNCTION_1	IF_2
0x4000072	        0x488b4708	                mov rax, qword [rdi + 8]	       381	syms.c	FUNCTION_1	CALL_1
0x4000076	    0x488b80200200	           mov rax, qword [rax + 0x220] 	       381	syms.c	FUNCTION_1	CALL_1
0x400007d	            0xffe0	                                 jmp rax	       381	syms.c	FUNCTION_1	CALL_1
0x400007f	              0x90	                                     nop	       381	syms.c	FUNCTION_1	CALL_1
0x4000080	            0x31c0	                            xor eax, eax	       382	syms.c	FUNCTION_1
0x4000082	              0xc3	                                     ret	       382	syms.c	FUNCTION_1
_bfd_nosymbols_find_nearest_line	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x40014b0	      0xe900000000	                           jmp 0x40014b5	      1485	syms.c	FUNCTION_20	CALL_1
_bfd_generic_make_empty_symbol	DO,0:SWITCH,0:functions,0:IF,1:ELSE,0:FOR,0:WHILE,0:CALL,1	9
0x4000220	              0x53	                                push rbx	       540	syms.c	FUNCTION_4
0x4000221	      0xbe30000000	                           mov esi, 0x30	       542	syms.c	FUNCTION_4	CALL_1
0x4000226	          0x4889fb	                            mov rbx, rdi	       540	syms.c	FUNCTION_4
0x4000229	      0xe800000000	                          call 0x400022e	       542	syms.c	FUNCTION_4	CALL_1
0x400022e	          0x4885c0	                           test rax, rax	       543	syms.c	FUNCTION_4	IF_1
0x4000231	            0x7403	                            je 0x4000236	       543	syms.c	FUNCTION_4	IF_1
0x4000233	          0x488918	                    mov qword [rax], rbx	       544	syms.c	FUNCTION_4	IF_1
0x4000236	              0x5b	                                 pop rbx	       546	syms.c	FUNCTION_4
0x4000237	              0xc3	                                     ret	       546	syms.c	FUNCTION_4
_bfd_nosymbols_print_symbol	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,0	1
0x4001460	            0xf3c3	                                     ret	      1443	syms.c	FUNCTION_15
cmpindexentry	DO,0:SWITCH,0:functions,0:IF,2:ELSE,2:FOR,0:WHILE,0:CALL,0	7
0x4000040	          0x488b06	                    mov rax, qword [rsi]	       885	syms.c	FUNCTION_12	IF_1
0x4000043	          0x483907	                    cmp qword [rdi], rax	       885	syms.c	FUNCTION_12	IF_1
0x4000046	      0xbaffffffff	                     mov edx, 0xffffffff	       886	syms.c	FUNCTION_12	IF_1
0x400004b	           0xf97c0	                                 seta al	       886	syms.c	FUNCTION_12	IF_1
0x400004e	           0xfb6c0	                           movzx eax, al	       886	syms.c	FUNCTION_12	IF_1
0x4000051	           0xf42c2	                          cmovb eax, edx	       886	syms.c	FUNCTION_12	IF_1
0x4000054	              0xc3	                                     ret	       891	syms.c	FUNCTION_12	ELSE_2
_bfd_nosymbols_find_inliner_info	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x40014d0	      0xe900000000	                           jmp 0x40014d5	      1505	syms.c	FUNCTION_22	CALL_1
bfd_set_symtab	DO,0:SWITCH,0:functions,0:IF,1:ELSE,0:FOR,0:WHILE,0:CALL,4	19
0x4000090	        0x4883ec08	                              sub rsp, 8	       451	syms.c	FUNCTION_2
0x4000094	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x4000098	            0x89c1	                            mov ecx, eax	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x400009a	          0x83e107	                              and ecx, 7	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x400009d	          0x80f901	                               cmp cl, 1	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a0	            0x751e	                           jne 0x40000c0	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a2	          0x83e008	                              and eax, 8	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a5	            0x3c08	                               cmp al, 8	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a7	            0x7417	                            je 0x40000c0	       452	syms.c	FUNCTION_2	IF_1	CALL_1
0x40000a9	    0x4889b7b00000	             mov qword [rdi + 0xb0], rsi	       458	syms.c	FUNCTION_2	CALL_3
0x40000b0	    0x8997b8000000	             mov dword [rdi + 0xb8], edx	       459	syms.c	FUNCTION_2	CALL_4
0x40000b6	      0xb801000000	                              mov eax, 1	       460	syms.c	FUNCTION_2
0x40000bb	        0x4883c408	                              add rsp, 8	       461	syms.c	FUNCTION_2
0x40000bf	              0xc3	                                     ret	       461	syms.c	FUNCTION_2
0x40000c0	      0xbf05000000	                              mov edi, 5	       454	syms.c	FUNCTION_2	IF_1	CALL_2
0x40000c5	      0xe800000000	                          call 0x40000ca	       454	syms.c	FUNCTION_2	IF_1	CALL_2
0x40000ca	            0x31c0	                            xor eax, eax	       455	syms.c	FUNCTION_2	IF_1
0x40000cc	        0x4883c408	                              add rsp, 8	       461	syms.c	FUNCTION_2
0x40000d0	              0xc3	                                     ret	       461	syms.c	FUNCTION_2
_bfd_nosymbols_get_symbol_version_string	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x4001480	      0xe900000000	                           jmp 0x4001485	      1458	syms.c	FUNCTION_17	CALL_1
_bfd_generic_read_minisymbols	DO,0:SWITCH,0:functions,0:IF,7:ELSE,2:FOR,0:WHILE,0:CALL,7	78
0x40006c0	            0x85f6	                           test esi, esi	       805	syms.c	ELSE_1	FUNCTION_10	IF_1
0x40006c2	            0x4156	                                push r14	       800	syms.c	ELSE_1	FUNCTION_10
0x40006c4	            0x4155	                                push r13	       800	syms.c	ELSE_1	FUNCTION_10
0x40006c6	          0x4189f5	                           mov r13d, esi	       800	syms.c	ELSE_1	FUNCTION_10
0x40006c9	            0x4154	                                push r12	       800	syms.c	ELSE_1	FUNCTION_10
0x40006cb	          0x4989d4	                            mov r12, rdx	       800	syms.c	ELSE_1	FUNCTION_10
0x40006ce	              0x55	                                push rbp	       800	syms.c	ELSE_1	FUNCTION_10
0x40006cf	          0x4889cd	                            mov rbp, rcx	       800	syms.c	ELSE_1	FUNCTION_10
0x40006d2	              0x53	                                push rbx	       800	syms.c	ELSE_1	FUNCTION_10
0x40006d3	          0x4889fb	                            mov rbx, rdi	       800	syms.c	ELSE_1	FUNCTION_10
0x40006d6	        0x488b4708	                mov rax, qword [rdi + 8]	       806	syms.c	ELSE_1	FUNCTION_10	CALL_1
0x40006da	            0x7424	                            je 0x4000700	       805	syms.c	ELSE_1	FUNCTION_10	IF_1
0x40006dc	    0xff9038030000	                call qword [rax + 0x338]	       806	syms.c	ELSE_1	FUNCTION_10	CALL_1
0x40006e2	          0x4885c0	                           test rax, rax	       809	syms.c	FUNCTION_10	ELSE_1	IF_2
0x40006e5	            0x7824	                            js 0x400070b	       809	syms.c	FUNCTION_10	ELSE_1	IF_2
0x40006e7	      0xba00000000	                              mov edx, 0	       812	syms.c	FUNCTION_10	ELSE_1	IF_3
0x40006ec	            0x7542	                           jne 0x4000730	       811	syms.c	FUNCTION_10	ELSE_1	IF_3
0x40006ee	              0x5b	                                 pop rbx	       835	syms.c	FUNCTION_10	ELSE_1
0x40006ef	          0x4889d0	                            mov rax, rdx	       835	syms.c	FUNCTION_10	ELSE_1
0x40006f2	              0x5d	                                 pop rbp	       835	syms.c	FUNCTION_10	ELSE_1
0x40006f3	            0x415c	                                 pop r12	       835	syms.c	FUNCTION_10	ELSE_1
0x40006f5	            0x415d	                                 pop r13	       835	syms.c	FUNCTION_10	ELSE_1
0x40006f7	            0x415e	                                 pop r14	       835	syms.c	FUNCTION_10	ELSE_1
0x40006f9	              0xc3	                                     ret	       835	syms.c	FUNCTION_10	ELSE_1
0x40006fa	    0x660f1f440000	                    nop word [rax + rax]	       835	syms.c	FUNCTION_10	ELSE_1
0x4000700	    0xff90f0010000	                call qword [rax + 0x1f0]	       808	syms.c	FUNCTION_10	ELSE_1	CALL_2
0x4000706	          0x4885c0	                           test rax, rax	       809	syms.c	FUNCTION_10	ELSE_1	IF_2
0x4000709	            0x79dc	                           jns 0x40006e7	       809	syms.c	FUNCTION_10	ELSE_1	IF_2
0x400070b	      0xbf07000000	                              mov edi, 7	       831	syms.c	FUNCTION_10	ELSE_1	CALL_6
0x4000710	      0xe800000000	                          call 0x4000715	       831	syms.c	FUNCTION_10	ELSE_1	CALL_6
0x4000715	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       834	syms.c	FUNCTION_10	ELSE_1
0x400071c	              0x5b	                                 pop rbx	       835	syms.c	FUNCTION_10	ELSE_1
0x400071d	          0x4889d0	                            mov rax, rdx	       835	syms.c	FUNCTION_10	ELSE_1
0x4000720	              0x5d	                                 pop rbp	       835	syms.c	FUNCTION_10	ELSE_1
0x4000721	            0x415c	                                 pop r12	       835	syms.c	FUNCTION_10	ELSE_1
0x4000723	            0x415d	                                 pop r13	       835	syms.c	FUNCTION_10	ELSE_1
0x4000725	            0x415e	                                 pop r14	       835	syms.c	FUNCTION_10	ELSE_1
0x4000727	              0xc3	                                     ret	       835	syms.c	FUNCTION_10	ELSE_1
0x4000728	     0xf1f84000000	                   nop dword [rax + rax]	       835	syms.c	FUNCTION_10	ELSE_1
0x4000730	          0x4889c7	                            mov rdi, rax	       814	syms.c	FUNCTION_10	ELSE_1	CALL_3
0x4000733	      0xe800000000	                          call 0x4000738	       814	syms.c	FUNCTION_10	ELSE_1	CALL_3
0x4000738	          0x4885c0	                           test rax, rax	       815	syms.c	FUNCTION_10	ELSE_1	IF_4
0x400073b	          0x4989c6	                            mov r14, rax	       814	syms.c	FUNCTION_10	ELSE_1	CALL_3
0x400073e	            0x74cb	                            je 0x400070b	       815	syms.c	FUNCTION_10	ELSE_1	IF_4
0x4000740	          0x4585ed	                         test r13d, r13d	       818	syms.c	FUNCTION_10	ELSE_1	IF_5
0x4000743	        0x488b4308	                mov rax, qword [rbx + 8]	       819	syms.c	FUNCTION_10	ELSE_1	CALL_4
0x4000747	          0x4c89f6	                            mov rsi, r14	       819	syms.c	FUNCTION_10	ELSE_1	CALL_4
0x400074a	          0x4889df	                            mov rdi, rbx	       819	syms.c	FUNCTION_10	ELSE_1	CALL_4
0x400074d	            0x7529	                           jne 0x4000778	       818	syms.c	FUNCTION_10	ELSE_1	IF_5
0x400074f	    0xff90f8010000	                call qword [rax + 0x1f8]	       821	syms.c	FUNCTION_10	ELSE_1	CALL_5
0x4000755	          0x4885c0	                           test rax, rax	       822	syms.c	FUNCTION_10	ELSE_1	IF_6
0x4000758	            0x7829	                            js 0x4000783	       822	syms.c	FUNCTION_10	ELSE_1	IF_6
0x400075a	          0x4889c2	                            mov rdx, rax	       828	syms.c	FUNCTION_10	ELSE_1
0x400075d	        0x4d893424	                    mov qword [r12], r14	       825	syms.c	FUNCTION_10	ELSE_1
0x4000761	    0xc74500080000	                      mov dword [rbp], 8	       826	syms.c	FUNCTION_10	ELSE_1
0x4000768	          0x4889d0	                            mov rax, rdx	       835	syms.c	FUNCTION_10	ELSE_1
0x400076b	              0x5b	                                 pop rbx	       835	syms.c	FUNCTION_10	ELSE_1
0x400076c	              0x5d	                                 pop rbp	       835	syms.c	FUNCTION_10	ELSE_1
0x400076d	            0x415c	                                 pop r12	       835	syms.c	FUNCTION_10	ELSE_1
0x400076f	            0x415d	                                 pop r13	       835	syms.c	FUNCTION_10	ELSE_1
0x4000771	            0x415e	                                 pop r14	       835	syms.c	FUNCTION_10	ELSE_1
0x4000773	              0xc3	                                     ret	       835	syms.c	FUNCTION_10	ELSE_1
0x4000774	         0xf1f4000	                         nop dword [rax]	       835	syms.c	FUNCTION_10	ELSE_1
0x4000778	    0xff9040030000	                call qword [rax + 0x340]	       819	syms.c	FUNCTION_10	ELSE_1	CALL_4
0x400077e	          0x4885c0	                           test rax, rax	       822	syms.c	FUNCTION_10	ELSE_1	IF_6
0x4000781	            0x79d7	                           jns 0x400075a	       822	syms.c	FUNCTION_10	ELSE_1	IF_6
0x4000783	      0xbf07000000	                              mov edi, 7	       831	syms.c	FUNCTION_10	ELSE_1	CALL_6
0x4000788	      0xe800000000	                          call 0x400078d	       831	syms.c	FUNCTION_10	ELSE_1	CALL_6
0x400078d	          0x4c89f7	                            mov rdi, r14	       833	syms.c	FUNCTION_10	ELSE_1	CALL_7
0x4000790	      0xe800000000	                          call 0x4000795	       833	syms.c	FUNCTION_10	ELSE_1	CALL_7
0x4000795	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       834	syms.c	FUNCTION_10	ELSE_1
0x400079c	              0x5b	                                 pop rbx	       835	syms.c	FUNCTION_10	ELSE_1
0x400079d	          0x4889d0	                            mov rax, rdx	       835	syms.c	FUNCTION_10	ELSE_1
0x40007a0	              0x5d	                                 pop rbp	       835	syms.c	FUNCTION_10	ELSE_1
0x40007a1	            0x415c	                                 pop r12	       835	syms.c	FUNCTION_10	ELSE_1
0x40007a3	            0x415d	                                 pop r13	       835	syms.c	FUNCTION_10	ELSE_1
0x40007a5	            0x415e	                                 pop r14	       835	syms.c	FUNCTION_10	ELSE_1
0x40007a7	              0xc3	                                     ret	       835	syms.c	FUNCTION_10	ELSE_1
_bfd_nosymbols_read_minisymbols	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x40014f0	      0xe900000000	                           jmp 0x40014f5	      1522	syms.c	FUNCTION_24	CALL_1
_bfd_nosymbols_bfd_make_debug_symbol	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x40014e0	      0xe900000000	                           jmp 0x40014e5	      1513	syms.c	FUNCTION_23	CALL_1
_bfd_nosymbols_bfd_is_local_label_name	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,0	2
0x4001490	            0x31c0	                            xor eax, eax	      1466	syms.c	FUNCTION_18
0x4001492	              0xc3	                                     ret	      1466	syms.c	FUNCTION_18
_bfd_nodynamic_get_synthetic_symtab	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x4001510	      0xe900000000	                   jmp str.c_c_c_c_c_c_c	      1542	syms.c	FUNCTION_26	CALL_1
_bfd_nosymbols_minisymbol_to_symbol	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x4001500	      0xe900000000	                           jmp 0x4001505	      1531	syms.c	FUNCTION_25	CALL_1
_bfd_stab_section_find_nearest_line	DO,0:SWITCH,2:functions,0:IF,49:ELSE,7:FOR,4:WHILE,1:CALL,49	794
0x40007c0	            0x4157	                                push r15	       933	syms.c	ELSE_2	FUNCTION_13
0x40007c2	            0x4156	                                push r14	       933	syms.c	ELSE_2	FUNCTION_13
0x40007c4	          0x4989d7	                            mov r15, rdx	       933	syms.c	ELSE_2	FUNCTION_13
0x40007c7	            0x4155	                                push r13	       933	syms.c	ELSE_2	FUNCTION_13
0x40007c9	            0x4154	                                push r12	       933	syms.c	ELSE_2	FUNCTION_13
0x40007cb	          0x4989fe	                            mov r14, rdi	       933	syms.c	ELSE_2	FUNCTION_13
0x40007ce	              0x55	                                push rbp	       933	syms.c	ELSE_2	FUNCTION_13
0x40007cf	              0x53	                                push rbx	       933	syms.c	ELSE_2	FUNCTION_13
0x40007d0	          0x4989cd	                            mov r13, rcx	       933	syms.c	ELSE_2	FUNCTION_13
0x40007d3	        0x4883ec68	                           sub rsp, 0x68	       933	syms.c	ELSE_2	FUNCTION_13
0x40007d7	          0x488b07	                    mov rax, qword [rdi]	       945	syms.c	ELSE_2	FUNCTION_13	CALL_1
0x40007da	    0x41c700000000	                       mov dword [r8], 0	       944	syms.c	ELSE_2	FUNCTION_13
0x40007e1	      0x4c89442428	              mov qword [rsp + 0x28], r8	       933	syms.c	ELSE_2	FUNCTION_13
0x40007e6	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       933	syms.c	ELSE_2	FUNCTION_13
0x40007eb	          0x498901	                     mov qword [r9], rax	       945	syms.c	ELSE_2	FUNCTION_13	CALL_1
0x40007ee	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       946	syms.c	ELSE_2	FUNCTION_13
0x40007f6	    0x48c700000000	                      mov qword [rax], 0	       946	syms.c	ELSE_2	FUNCTION_13
0x40007fd	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       947	syms.c	ELSE_2	FUNCTION_13
0x4000805	    0xc70000000000	                      mov dword [rax], 0	       947	syms.c	ELSE_2	FUNCTION_13
0x400080b	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       969	syms.c	ELSE_2	FUNCTION_13
0x4000813	          0x488b28	                    mov rbp, qword [rax]	       969	syms.c	ELSE_2	FUNCTION_13
0x4000816	          0x4885ed	                           test rbp, rbp	       970	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000819	     0xf84b3030000	                            je 0x4000bd2	       970	syms.c	ELSE_2	FUNCTION_13	IF_1
0x400081f	      0x48837d0000	                      cmp qword [rbp], 0	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x4000824	     0xf84a1010000	                            je 0x40009cb	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x400082a	        0x488b4508	                mov rax, qword [rbp + 8]	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x400082e	          0x4885c0	                           test rax, rax	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x4000831	     0xf8494010000	                            je 0x40009cb	       972	syms.c	ELSE_2	FUNCTION_13	IF_1	IF_2
0x4000837	        0x488b5840	            mov rbx, qword [rax + 0x40] 	       981	syms.c	ELSE_2	FUNCTION_13	IF_1
0x400083b	          0x4885db	                           test rbx, rbx	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x400083e	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       981	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000843	     0xf8437030000	                            je 0x4000b80	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000849	        0x4d036f28	             add r13, qword [r15 + 0x28]	      1272	syms.c	FUNCTION_13	ELSE_2	CALL_36
0x400084d	        0x4c8b7d30	            mov r15, qword [rbp + 0x30] 	      1275	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000851	          0x4d85ff	                           test r15, r15	      1275	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000854	            0x740a	                            je 0x4000860	      1275	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000856	        0x4c3b6d38	            cmp r13, qword [rbp + 0x38] 	      1276	syms.c	FUNCTION_13	ELSE_2	IF_35
0x400085a	     0xf8330030000	                           jae 0x4000b90	      1276	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000860	          0x8b4528	            mov eax, dword [rbp + 0x28] 	      1294	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x4000863	            0x31ff	                            xor edi, edi	      1293	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x4000865	          0x8d50ff	                      lea edx, [rax - 1]	      1294	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x4000868	          0x4863d2	                         movsxd rdx, edx	      1294	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x400086b	          0x4839d7	                            cmp rdi, rdx	      1295	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400086e	     0xf8457010000	                            je 0x40009cb	      1295	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000874	        0x488d0417	                    lea rax, [rdi + rdx]	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000878	          0x4889c1	                            mov rcx, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400087b	        0x48c1e93f	                           shr rcx, 0x3f	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400087f	          0x4801c8	                            add rax, rcx	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000882	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000886	          0x48d1f8	                              sar rax, 1	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000889	          0x4889c6	                            mov rsi, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x400088c	         0xf1f4000	                         nop dword [rax]	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x4000890	        0x4c8d3c40	                  lea r15, [rax + rax*2]	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000894	        0x49c1e704	                              shl r15, 4	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x4000898	          0x4901cf	                            add r15, rcx	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x400089b	          0x4d3b2f	                    cmp r13, qword [r15]	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x400089e	            0x7220	                            jb 0x40008c0	      1298	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x40008a0	      0x488d444003	              lea rax, [rax + rax*2 + 3]	      1299	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x40008a5	        0x48c1e004	                              shl rax, 4	      1299	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x40008a9	        0x4c3b2c01	              cmp r13, qword [rcx + rax]	      1299	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x40008ad	     0xf822d010000	                            jb 0x40009e0	      1299	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	IF_36
0x40008b3	        0x488d7e01	                      lea rdi, [rsi + 1]	      1308	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	ELSE_6
0x40008b7	            0xebb2	                           jmp 0x400086b	      1308	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	ELSE_6
0x40008b9	     0xf1f80000000	                         nop dword [rax]	      1308	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1	ELSE_6
0x40008c0	          0x4839c7	                            cmp rdi, rax	      1295	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008c3	          0x4889c2	                            mov rdx, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008c6	     0xf84ff000000	                            je 0x40009cb	      1295	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008cc	        0x488d0417	                    lea rax, [rdi + rdx]	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008d0	          0x4889c6	                            mov rsi, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008d3	        0x48c1ee3f	                           shr rsi, 0x3f	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008d7	          0x4801f0	                            add rax, rsi	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008da	          0x48d1f8	                              sar rax, 1	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008dd	          0x4889c6	                            mov rsi, rax	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008e0	            0xebae	                           jmp 0x4000890	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008e2	    0x660f1f440000	                    nop word [rax + rax]	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008e8	          0x4c89f5	                            mov rbp, r14	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008eb	          0x4989de	                            mov r14, rbx	      1297	syms.c	FUNCTION_13	ELSE_2	ELSE_5	WHILE_1
0x40008ee	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1384	syms.c	FUNCTION_13	ELSE_2
0x40008f3	    0xc70001000000	                      mov dword [rax], 1	      1384	syms.c	FUNCTION_13	ELSE_2
0x40008f9	      0x488b442408	                mov rax, qword [rsp + 8]	      1386	syms.c	FUNCTION_13	ELSE_2	IF_45	CALL_41
0x40008fe	          0x4885c0	                           test rax, rax	      1386	syms.c	FUNCTION_13	ELSE_2	IF_45	CALL_41
0x4000901	     0xf84b9020000	                            je 0x4000bc0	      1386	syms.c	FUNCTION_13	ELSE_2	IF_45	CALL_41
0x4000907	          0x80382f	                    cmp byte [rax], 0x2f	      1387	syms.c	FUNCTION_13	ELSE_2	IF_45
0x400090a	     0xf84b0020000	                            je 0x4000bc0	      1387	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000910	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      1387	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000916	     0xf84a4020000	                            je 0x4000bc0	      1387	syms.c	FUNCTION_13	ELSE_2	IF_45
0x400091c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1393	syms.c	FUNCTION_13	ELSE_2	ELSE_7	CALL_42
0x4000921	      0xe800000000	                          call 0x4000926	      1393	syms.c	FUNCTION_13	ELSE_2	ELSE_7	CALL_42
0x4000926	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1394	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46
0x400092a	          0x4889c3	                            mov rbx, rax	      1393	syms.c	FUNCTION_13	ELSE_2	ELSE_7	CALL_42
0x400092d	          0x4885ff	                           test rdi, rdi	      1394	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46
0x4000930	            0x7415	                            je 0x4000947	      1394	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46
0x4000932	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x4000937	          0x4889c2	                            mov rdx, rax	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x400093a	      0xe800000000	                          call 0x400093f	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x400093f	            0x85c0	                           test eax, eax	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x4000941	     0xf8448050000	                            je 0x4000e8f	      1395	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_43
0x4000947	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1403	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_45
0x400094c	      0xe800000000	                          call 0x4000951	      1403	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_45
0x4000951	        0x4c8d6801	                      lea r13, [rax + 1]	      1403	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_45
0x4000955	          0x4c89f7	                            mov rdi, r14	      1404	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_46
0x4000958	        0x4a8d342b	                    lea rsi, [rbx + r13]	      1404	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_46
0x400095c	      0xe800000000	                          call 0x4000961	      1404	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_46
0x4000961	          0x4885c0	                           test rax, rax	      1405	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	IF_47
0x4000964	        0x48894550	            mov qword [rbp + 0x50], rax 	      1404	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_46
0x4000968	     0xf8410050000	                            je 0x4000e7e	      1405	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	IF_47
0x400096e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_27	CALL_3
0x4000973	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_27	CALL_3
0x4000976	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_27	CALL_3
0x4000979	      0xe800000000	                          call 0x400097e	        53	string3.h	FUNCTION_27	CALL_3
0x400097e	        0x48035d50	             add rbx, qword [rbp + 0x50]	        53	string3.h	FUNCTION_27	CALL_3
0x4000982	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_27	CALL_3
0x4000987	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_27	CALL_3
0x400098a	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_27	CALL_3
0x400098d	      0xe800000000	                          call 0x4000992	        53	string3.h	FUNCTION_27	CALL_3
0x4000992	        0x488b4550	            mov rax, qword [rbp + 0x50] 	      1411	syms.c	FUNCTION_13	ELSE_2	ELSE_7
0x4000996	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      1411	syms.c	FUNCTION_13	ELSE_2	ELSE_7
0x400099b	          0x488903	                    mov qword [rbx], rax	      1411	syms.c	FUNCTION_13	ELSE_2	ELSE_7
0x400099e	        0x498b5f28	            mov rbx, qword [r15 + 0x28] 	      1414	syms.c	FUNCTION_13	ELSE_2	IF_48
0x40009a2	          0x4885db	                           test rbx, rbx	      1414	syms.c	FUNCTION_13	ELSE_2	IF_48
0x40009a5	            0x7424	                            je 0x40009cb	      1414	syms.c	FUNCTION_13	ELSE_2	IF_48
0x40009a7	      0xbe3a000000	                           mov esi, 0x3a	      1421	syms.c	FUNCTION_13	ELSE_2	IF_48	CALL_49
0x40009ac	          0x4889df	                            mov rdi, rbx	      1421	syms.c	FUNCTION_13	ELSE_2	IF_48	CALL_49
0x40009af	      0xe800000000	                          call 0x40009b4	      1421	syms.c	FUNCTION_13	ELSE_2	IF_48	CALL_49
0x40009b4	          0x4885c0	                           test rax, rax	      1422	syms.c	FUNCTION_13	ELSE_2	IF_48	IF_49
0x40009b7	            0x7407	                            je 0x40009c0	      1422	syms.c	FUNCTION_13	ELSE_2	IF_48	IF_49
0x40009b9	          0xc60000	                       mov byte [rax], 0	      1423	syms.c	FUNCTION_13	ELSE_2	IF_48	IF_49
0x40009bc	        0x498b5f28	            mov rbx, qword [r15 + 0x28] 	      1423	syms.c	FUNCTION_13	ELSE_2	IF_48	IF_49
0x40009c0	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	      1425	syms.c	FUNCTION_13	ELSE_2	IF_48
0x40009c8	          0x488918	                    mov qword [rax], rbx	      1425	syms.c	FUNCTION_13	ELSE_2	IF_48
0x40009cb	      0xb801000000	                              mov eax, 1	      1428	syms.c	FUNCTION_13	ELSE_2
0x40009d0	        0x4883c468	                           add rsp, 0x68	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009d4	              0x5b	                                 pop rbx	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009d5	              0x5d	                                 pop rbp	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009d6	            0x415c	                                 pop r12	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009d8	            0x415d	                                 pop r13	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009da	            0x415e	                                 pop r14	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009dc	            0x415f	                                 pop r15	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009de	              0xc3	                                     ret	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009df	              0x90	                                     nop	      1429	syms.c	FUNCTION_13	ELSE_2
0x40009e0	        0x498b4708	                mov rax, qword [r15 + 8]	      1314	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x40009e4	        0x4c8d600c	                    lea r12, [rax + 0xc]	      1314	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x40009e8	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      1315	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x40009ec	      0x4889442408	                mov qword [rsp + 8], rax	      1315	syms.c	FUNCTION_13	ELSE_2	ELSE_5
0x40009f1	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      1318	syms.c	FUNCTION_13	ELSE_2
0x40009f5	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x40009f9	      0x4889442418	             mov qword [rsp + 0x18], rax	      1318	syms.c	FUNCTION_13	ELSE_2
0x40009fe	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1319	syms.c	FUNCTION_13	ELSE_2
0x4000a02	          0x4939fc	                            cmp r12, rdi	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a05	      0x4889442438	             mov qword [rsp + 0x38], rax	      1319	syms.c	FUNCTION_13	ELSE_2
0x4000a0a	     0xf83defeffff	                           jae 0x40008ee	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a10	          0x4c89f3	                            mov rbx, r14	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a13	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a1b	          0x4989ee	                            mov r14, rbp	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a1e	    0xc70424000000	                      mov dword [rsp], 0	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a25	          0x4c89e5	                            mov rbp, r12	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a28	            0xeb3b	                           jmp 0x4000a65	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a2a	    0x660f1f440000	                    nop word [rax + rax]	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a30	            0x3c64	                            cmp al, 0x64	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a32	     0xf8488000000	                            je 0x4000ac0	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a38	            0x3c84	                            cmp al, 0x84	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a3a	     0xf85a8000000	                           jne 0x4000ae8	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a40	        0x488b4308	                mov rax, qword [rbx + 8]	      1334	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_37
0x4000a44	        0x488d7d08	                      lea rdi, [rbp + 8]	      1334	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_37
0x4000a48	          0xff5038	                 call qword [rax + 0x38]	      1334	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_37
0x4000a4b	          0x4939c5	                            cmp r13, rax	      1335	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x4000a4e	     0xf83bc000000	                           jae 0x4000b10	      1335	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x4000a54	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      1335	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x4000a58	        0x4883c50c	                            add rbp, 0xc	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a5c	          0x4839fd	                            cmp rbp, rdi	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a5f	     0xf8383feffff	                           jae 0x40008e8	      1323	syms.c	FUNCTION_13	ELSE_2	FOR_4
0x4000a65	         0xfb64504	               movzx eax, byte [rbp + 4]	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a69	            0x3c46	                            cmp al, 0x46	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a6b	            0x740a	                            je 0x4000a77	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a6d	            0x77c1	                            ja 0x4000a30	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a6f	            0x3c24	                            cmp al, 0x24	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a71	            0x744d	                            je 0x4000ac0	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a73	            0x3c44	                            cmp al, 0x44	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a75	            0x75e1	                           jne 0x4000a58	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a77	      0x49837f2800	               cmp qword [r15 + 0x28], 0	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a7c	     0xf847e000000	                            je 0x4000b00	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a82	          0x4d8b27	                    mov r12, qword [r15]	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a85	        0x488b4308	                mov rax, qword [rbx + 8]	      1351	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_39
0x4000a89	        0x488d7d08	                      lea rdi, [rbp + 8]	      1351	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_39
0x4000a8d	          0xff5038	                 call qword [rax + 0x38]	      1351	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	CALL_39
0x4000a90	          0x4901c4	                            add r12, rax	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000a93	          0x8b0424	                    mov eax, dword [rsp]	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000a96	            0x85c0	                           test eax, eax	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000a98	     0xf84b2000000	                            je 0x4000b50	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000a9e	          0x4d39e5	                            cmp r13, r12	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000aa1	     0xf83a9000000	                           jae 0x4000b50	      1356	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000aa7	          0x4d39e5	                            cmp r13, r12	      1367	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_42
0x4000aaa	     0xf8238feffff	                            jb 0x40008e8	      1367	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_42
0x4000ab0	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      1367	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_42
0x4000ab4	    0xc70424010000	                      mov dword [rsp], 1	      1369	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000abb	            0xeb9b	                           jmp 0x4000a58	      1369	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000abd	           0xf1f00	                         nop dword [rax]	      1369	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000ac0	          0x8b0424	                    mov eax, dword [rsp]	      1374	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_43
0x4000ac3	         0xb442410	              or eax, dword [rsp + 0x10]	      1374	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_43
0x4000ac7	     0xf851bfeffff	                           jne 0x40008e8	      1374	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_43
0x4000acd	    0xc74424100100	               mov dword [rsp + 0x10], 1	      1376	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000ad5	    0xc70424000000	                      mov dword [rsp], 0	      1376	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000adc	      0xe977ffffff	                           jmp 0x4000a58	      1376	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000ae1	     0xf1f80000000	                         nop dword [rax]	      1376	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000ae8	            0x3c48	                            cmp al, 0x48	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000aea	     0xf8568ffffff	                           jne 0x4000a58	      1330	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000af0	      0x49837f2800	               cmp qword [r15 + 0x28], 0	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000af5	            0x758b	                           jne 0x4000a82	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000af7	    0x660f1f840000	                    nop word [rax + rax]	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000b00	          0x4531e4	                          xor r12d, r12d	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000b03	      0xe97dffffff	                           jmp 0x4000a85	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000b08	     0xf1f84000000	                   nop dword [rax + rax]	      1350	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2
0x4000b10	        0x488b4308	                mov rax, qword [rbx + 8]	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x4000b14	          0x4889ef	                            mov rdi, rbp	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x4000b17	          0xff5038	                 call qword [rax + 0x38]	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x4000b1a	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x4000b1f	          0x4801d0	                            add rax, rdx	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x4000b22	          0x4889c1	                            mov rcx, rax	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x4000b25	      0x4889442408	                mov qword [rsp + 8], rax	      1337	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	CALL_38
0x4000b2a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000b2f	        0x49034618	             add rax, qword [r14 + 0x18]	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000b33	          0x4839c1	                            cmp rcx, rax	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000b36	            0x7378	                           jae 0x4000bb0	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000b38	          0x4839ca	                            cmp rdx, rcx	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000b3b	            0x7773	                            ja 0x4000bb0	      1338	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000b3d	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      1340	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x4000b45	    0xc70000000000	                      mov dword [rax], 0	      1340	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x4000b4b	      0xe904ffffff	                           jmp 0x4000a54	      1340	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39
0x4000b50	        0x488b4308	                mov rax, qword [rbx + 8]	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000b54	        0x488d7d06	                      lea rdi, [rbp + 6]	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000b58	          0xff5050	                 call qword [rax + 0x50]	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000b5b	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000b63	            0x8901	                    mov dword [rcx], eax	      1358	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41	CALL_40
0x4000b65	      0x488b442408	                mov rax, qword [rsp + 8]	      1363	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000b6a	        0x49896e40	             mov qword [r14 + 0x40], rbp	      1361	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000b6e	        0x4d896638	             mov qword [r14 + 0x38], r12	      1362	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000b72	        0x4d897e30	             mov qword [r14 + 0x30], r15	      1364	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000b76	        0x49894648	             mov qword [r14 + 0x48], rax	      1363	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000b7a	      0xe928ffffff	                           jmp 0x4000aa7	      1363	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000b7f	              0x90	                                     nop	      1363	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_41
0x4000b80	        0x488b4038	            mov rax, qword [rax + 0x38] 	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000b84	      0x4889442420	             mov qword [rsp + 0x20], rax	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000b89	      0xe9bbfcffff	                           jmp 0x4000849	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000b8e	            0x6690	                                     nop	       983	syms.c	ELSE_2	FUNCTION_13	IF_1
0x4000b90	        0x4d3b6f30	            cmp r13, qword [r15 + 0x30] 	      1277	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000b94	     0xf83c6fcffff	                           jae 0x4000860	      1277	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000b9a	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      1281	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000b9e	        0x4c8b6540	            mov r12, qword [rbp + 0x40] 	      1279	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000ba2	      0x4889442408	                mov qword [rsp + 8], rax	      1281	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000ba7	      0xe945feffff	                           jmp 0x40009f1	      1281	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000bac	         0xf1f4000	                         nop dword [rax]	      1281	syms.c	FUNCTION_13	ELSE_2	IF_35
0x4000bb0	    0x48c744240800	                  mov qword [rsp + 8], 0	      1339	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000bb9	      0xe97fffffff	                           jmp 0x4000b3d	      1339	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000bbe	            0x6690	                                     nop	      1339	syms.c	FUNCTION_13	ELSE_2	FOR_4	SWITCH_2	IF_39	IF_40
0x4000bc0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000bc5	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000bca	          0x488918	                    mov qword [rax], rbx	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000bcd	      0xe9ccfdffff	                           jmp 0x400099e	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000bd2	          0x4889f3	                            mov rbx, rsi	      1388	syms.c	FUNCTION_13	ELSE_2	IF_45
0x4000bd5	      0xbe58000000	                           mov esi, 0x58	       993	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_2
0x4000bda	      0xe800000000	                          call 0x4000bdf	       993	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_2
0x4000bdf	          0x4885c0	                           test rax, rax	       994	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_3
0x4000be2	          0x4889c5	                            mov rbp, rax	       993	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_2
0x4000be5	     0xf8493020000	                            je 0x4000e7e	       994	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_3
0x4000beb	      0xbe00000000	                              mov esi, 0	      1001	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_3
0x4000bf0	          0x4c89f7	                            mov rdi, r14	      1001	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_3
0x4000bf3	      0xe800000000	                          call 0x4000bf8	      1001	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_3
0x4000bf8	      0xbe00000000	                              mov esi, 0	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x4000bfd	        0x48894500	                    mov qword [rbp], rax	      1001	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_3
0x4000c01	          0x4c89f7	                            mov rdi, r14	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x4000c04	      0xe800000000	                          call 0x4000c09	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x4000c09	          0x4885c0	                           test rax, rax	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x4000c0c	          0x4889c1	                            mov rcx, rax	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x4000c0f	        0x48894508	                mov qword [rbp + 8], rax	      1002	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_4
0x4000c13	        0x488b7500	                    mov rsi, qword [rbp]	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x4000c17	     0xf8490020000	                            je 0x4000ead	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x4000c1d	          0x4885f6	                           test rsi, rsi	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x4000c20	     0xf8487020000	                            je 0x4000ead	      1004	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4
0x4000c26	        0x488b4640	            mov rax, qword [rsi + 0x40] 	      1019	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c2a	          0x4885c0	                           test rax, rax	      1021	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c2d	            0x7504	                           jne 0x4000c33	      1021	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c2f	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1021	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c33	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c3d	          0x48f7e2	                                 mul rdx	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c40	        0x48c1ea03	                              shr rdx, 3	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c44	        0x488d0452	                  lea rax, [rdx + rdx*2]	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c48	        0x48c1e002	                              shl rax, 2	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c4c	        0x48890424	                    mov qword [rsp], rax	      1022	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c50	        0x488b4140	            mov rax, qword [rcx + 0x40] 	      1023	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c54	          0x4885c0	                           test rax, rax	      1025	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c57	      0x4889442420	             mov qword [rsp + 0x20], rax	      1023	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c5c	            0x7509	                           jne 0x4000c67	      1025	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c5e	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      1025	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c62	      0x4889442420	             mov qword [rsp + 0x20], rax	      1025	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000c67	        0x4c8b2424	                    mov r12, qword [rsp]	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000c6b	          0x4c89f7	                            mov rdi, r14	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000c6e	          0x4c89e6	                            mov rsi, r12	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000c71	      0xe800000000	                          call 0x4000c76	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000c76	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1028	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_8
0x4000c7b	        0x48894510	            mov qword [rbp + 0x10], rax 	      1027	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_7
0x4000c7f	          0x4c89f7	                            mov rdi, r14	      1028	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_8
0x4000c82	      0xe800000000	                          call 0x4000c87	      1028	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_8
0x4000c87	          0x4885c0	                           test rax, rax	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000c8a	        0x48894518	            mov qword [rbp + 0x18], rax 	      1028	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_8
0x4000c8e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000c92	     0xf84e6010000	                            je 0x4000e7e	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000c98	          0x4885d2	                           test rdx, rdx	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000c9b	     0xf84dd010000	                            je 0x4000e7e	      1029	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_6
0x4000ca1	        0x488b7500	                    mov rsi, qword [rbp]	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000ca5	            0x31c9	                            xor ecx, ecx	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000ca7	          0x4d89e0	                             mov r8, r12	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000caa	          0x4c89f7	                            mov rdi, r14	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000cad	      0xe800000000	                          call 0x4000cb2	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000cb2	            0x85c0	                           test eax, eax	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000cb4	     0xf84c4010000	                            je 0x4000e7e	      1032	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_9
0x4000cba	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000cbe	        0x488b7508	                mov rsi, qword [rbp + 8]	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000cc2	            0x31c9	                            xor ecx, ecx	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000cc4	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000cc9	          0x4c89f7	                            mov rdi, r14	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000ccc	      0xe800000000	                          call 0x4000cd1	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000cd1	            0x85c0	                           test eax, eax	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000cd3	     0xf84a5010000	                            je 0x4000e7e	      1034	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_7	CALL_10
0x4000cd9	        0x488b7500	                    mov rsi, qword [rbp]	      1042	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_11
0x4000cdd	          0x4c89f7	                            mov rdi, r14	      1042	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_11
0x4000ce0	      0xe800000000	                          call 0x4000ce5	      1042	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_11
0x4000ce5	          0x4885c0	                           test rax, rax	      1043	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_8
0x4000ce8	          0x4989c4	                            mov r12, rax	      1042	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_11
0x4000ceb	     0xf888d010000	                            js 0x4000e7e	      1043	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_8
0x4000cf1	          0x4889c7	                            mov rdi, rax	      1045	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_12
0x4000cf4	      0xe800000000	                          call 0x4000cf9	      1045	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_12
0x4000cf9	          0x4885c0	                           test rax, rax	      1046	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_9
0x4000cfc	          0x4989c0	                             mov r8, rax	      1045	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_12
0x4000cff	            0x7509	                           jne 0x4000d0a	      1046	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_9
0x4000d01	          0x4d85e4	                           test r12, r12	      1046	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_9
0x4000d04	     0xf8574010000	                           jne 0x4000e7e	      1046	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_9
0x4000d0a	        0x488b7500	                    mov rsi, qword [rbp]	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000d0e	          0x4c89c2	                             mov rdx, r8	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000d11	          0x4889d9	                            mov rcx, rbx	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000d14	          0x4c89f7	                            mov rdi, r14	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000d17	      0x4c89442408	                 mov qword [rsp + 8], r8	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000d1c	      0xe800000000	                          call 0x4000d21	      1048	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_13
0x4000d21	          0x4885c0	                           test rax, rax	      1050	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10
0x4000d24	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1050	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10
0x4000d29	     0xf8887020000	                            js 0x4000fb6	      1050	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10
0x4000d2f	     0xf8473020000	                            je 0x4000fa8	      1056	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12
0x4000d35	          0x498b08	                     mov rcx, qword [r8]	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000d38	          0x4885c9	                           test rcx, rcx	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000d3b	     0xf84bd010000	                            je 0x4000efe	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000d41	          0x4c89c2	                             mov rdx, r8	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000d44	    0x49b902000000	                 movabs r9, 0x2000000002	      1073	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d4e	          0x4989cc	                            mov r12, rcx	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d51	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d56	      0xe9d2000000	                           jmp 0x4000e2d	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d5b	        0x4c394808	                 cmp qword [rax + 8], r9	      1073	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d5f	     0xf85e1000000	                           jne 0x4000e46	      1073	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d65	      0x4883781000	               cmp qword [rax + 0x10], 0	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d6a	     0xf85d6000000	                           jne 0x4000e46	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d70	      0xb8ffffffff	                     mov eax, 0xffffffff	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d75	          0x4839c6	                            cmp rsi, rax	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d78	     0xf85c8000000	                           jne 0x4000e46	      1076	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000d7e	        0x498b4608	                mov rax, qword [r14 + 8]	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000d82	      0x498b5c2408	                mov rbx, qword [r12 + 8]	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000d87	          0x4c89f7	                            mov rdi, r14	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000d8a	      0x4889542440	             mov qword [rsp + 0x40], rdx	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000d8f	      0x4c89442438	              mov qword [rsp + 0x38], r8	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000d94	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000d99	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000d9d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000da1	      0x4889442408	                mov qword [rsp + 8], rax	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000da6	      0xe800000000	                          call 0x4000dab	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000dab	            0x89c7	                            mov edi, eax	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000dad	        0x480faffb	                           imul rdi, rbx	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000db1	      0x48037c2408	                add rdi, qword [rsp + 8]	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000db6	          0x41ffd5	                                call r13	      1086	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_19
0x4000db9	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	      1088	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000dbe	          0x4c89f7	                            mov rdi, r14	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000dc1	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000dc5	        0x48234138	             and rax, qword [rcx + 0x38]	      1088	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000dc9	          0x4889c3	                            mov rbx, rax	      1088	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000dcc	        0x498b0424	                    mov rax, qword [r12]	      1089	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000dd0	          0x488b00	                    mov rax, qword [rax]	      1089	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000dd3	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000dd7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000ddb	        0x48034628	             add rax, qword [rsi + 0x28]	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000ddf	      0x4903442410	             add rax, qword [r12 + 0x10]	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000de4	      0x4d8b642408	                mov r12, qword [r12 + 8]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000de9	          0x4801d8	                            add rax, rbx	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000dec	      0x4889442408	                mov qword [rsp + 8], rax	      1090	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000df1	        0x498b4608	                mov rax, qword [r14 + 8]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000df5	        0x488b5848	            mov rbx, qword [rax + 0x48] 	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000df9	      0xe800000000	                          call 0x4000dfe	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000dfe	            0x89c6	                            mov esi, eax	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000e00	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000e05	        0x490faff4	                           imul rsi, r12	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000e09	          0x4c01ee	                            add rsi, r13	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000e0c	            0xffd3	                                call rbx	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000e0e	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000e13	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000e18	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1091	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	CALL_21
0x4000e1d	        0x4883c208	                              add rdx, 8	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000e21	          0x4c8b22	                    mov r12, qword [rdx]	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000e24	          0x4d85e4	                           test r12, r12	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000e27	     0xf84cc000000	                            je 0x4000ef9	      1060	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1
0x4000e2d	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      1068	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_13
0x4000e32	        0x488b7040	            mov rsi, qword [rax + 0x40] 	      1068	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_13
0x4000e36	          0x4885f6	                           test rsi, rsi	      1068	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_13
0x4000e39	            0x74e2	                            je 0x4000e1d	      1068	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_13
0x4000e3b	          0x8b4804	                mov ecx, dword [rax + 4]	      1071	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000e3e	            0x85c9	                           test ecx, ecx	      1071	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000e40	     0xf8415ffffff	                            je 0x4000d5b	      1071	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000e46	      0xba05000000	                              mov edx, 5	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000e4b	      0xbe00000000	                              mov esi, 0	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000e50	      0xbf00000000	                              mov edi, 0	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000e55	        0x4c890424	                     mov qword [rsp], r8	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000e59	      0xe800000000	                          call 0x4000e5e	      1079	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_16
0x4000e5e	          0x4889c7	                            mov rdi, rax	      1078	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_15
0x4000e61	            0x31c0	                            xor eax, eax	      1078	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_15
0x4000e63	      0xe800000000	                          call 0x4000e68	      1078	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_15
0x4000e68	      0xbf05000000	                              mov edi, 5	      1080	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_17
0x4000e6d	      0xe800000000	                          call 0x4000e72	      1080	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_17
0x4000e72	        0x4c8b0424	                     mov r8, qword [rsp]	      1082	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_18
0x4000e76	          0x4c89c7	                             mov rdi, r8	      1082	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_18
0x4000e79	      0xe800000000	                          call 0x4000e7e	      1082	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14	CALL_18
0x4000e7e	            0x31c0	                            xor eax, eax	      1083	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000e80	        0x4883c468	                           add rsp, 0x68	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000e84	              0x5b	                                 pop rbx	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000e85	              0x5d	                                 pop rbp	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000e86	            0x415c	                                 pop r12	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000e88	            0x415d	                                 pop r13	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000e8a	            0x415e	                                 pop r14	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000e8c	            0x415f	                                 pop r15	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000e8e	              0xc3	                                     ret	      1429	syms.c	FUNCTION_13	ELSE_2
0x4000e8f	          0x4889df	                            mov rdi, rbx	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000e92	        0x48037d50	             add rdi, qword [rbp + 0x50]	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000e96	      0x488b742408	                mov rsi, qword [rsp + 8]	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000e9b	      0xe800000000	                          call 0x4000ea0	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000ea0	            0x85c0	                           test eax, eax	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000ea2	     0xf859ffaffff	                           jne 0x4000947	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000ea8	      0xe9e5faffff	                           jmp 0x4000992	      1396	syms.c	FUNCTION_13	ELSE_2	ELSE_7	IF_46	CALL_44
0x4000ead	      0xbe00000000	                              mov esi, 0	      1007	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_5
0x4000eb2	          0x4c89f7	                            mov rdi, r14	      1007	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_5
0x4000eb5	      0xe800000000	                          call 0x4000eba	      1007	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_5
0x4000eba	      0xbe00000000	                              mov esi, 0	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000ebf	        0x48894500	                    mov qword [rbp], rax	      1007	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_5
0x4000ec3	          0x4c89f7	                            mov rdi, r14	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000ec6	      0xe800000000	                          call 0x4000ecb	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000ecb	          0x4885c0	                           test rax, rax	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000ece	          0x4889c1	                            mov rcx, rax	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000ed1	        0x48894508	                mov qword [rbp + 8], rax	      1008	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	CALL_6
0x4000ed5	        0x488b7500	                    mov rsi, qword [rbp]	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000ed9	            0x7409	                            je 0x4000ee4	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000edb	          0x4885f6	                           test rsi, rsi	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000ede	     0xf8542fdffff	                           jne 0x4000c26	      1010	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000ee4	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      1014	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000eec	          0x488928	                    mov qword [rax], rbp	      1014	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000eef	      0xb801000000	                              mov eax, 1	      1015	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000ef4	      0xe9d7faffff	                           jmp 0x40009d0	      1015	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000ef9	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      1015	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_4	IF_5
0x4000efe	          0x4c89c7	                             mov rdi, r8	      1097	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_23
0x4000f01	      0xe800000000	                          call 0x4000f06	      1097	syms.c	ELSE_2	FUNCTION_13	ELSE_1	CALL_23
0x4000f06	        0x488b0c24	                    mov rcx, qword [rsp]	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f0a	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f0e	    0xc74528000000	               mov dword [rbp + 0x28], 0	      1105	syms.c	ELSE_2	FUNCTION_13	ELSE_1
0x4000f15	          0x4889c8	                            mov rax, rcx	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f18	          0x4801d8	                            add rax, rbx	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f1b	          0x4839c3	                            cmp rbx, rax	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f1e	     0xf83a7faffff	                           jae 0x40009cb	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f24	          0x4531e4	                          xor r12d, r12d	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f27	      0x4c896c2408	                mov qword [rsp + 8], r13	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f2c	          0x4889d8	                            mov rax, rbx	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f2f	          0x4d89f5	                            mov r13, r14	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f32	          0x4d89e6	                            mov r14, r12	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f35	          0x4989cc	                            mov r12, rcx	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f38	            0xeb1c	                           jmp 0x4000f56	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f3a	    0x660f1f440000	                    nop word [rax + rax]	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f40	          0x80fa24	                            cmp dl, 0x24	      1128	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000f43	     0xf84dd040000	                            je 0x4001426	      1128	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000f49	        0x4a8d1420	                    lea rdx, [rax + r12]	      1128	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000f4d	        0x4883c30c	                            add rbx, 0xc	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f51	          0x4839d3	                            cmp rbx, rdx	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f54	            0x7370	                           jae 0x4000fc6	      1107	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2
0x4000f56	         0xfb65304	               movzx edx, byte [rbx + 4]	      1109	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17
0x4000f5a	          0x80fa64	                            cmp dl, 0x64	      1109	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17
0x4000f5d	            0x75e1	                           jne 0x4000f40	      1109	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17
0x4000f5f	          0x4d85f6	                           test r14, r14	      1112	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_18
0x4000f62	            0x7404	                            je 0x4000f68	      1112	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_18
0x4000f64	        0x83452801	               add dword [rbp + 0x28], 1	      1113	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_18
0x4000f68	        0x498b4508	                mov rax, qword [r13 + 8]	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000f6c	          0x4889df	                            mov rdi, rbx	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000f6f	          0xff5038	                 call qword [rax + 0x38]	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000f72	          0x4885c0	                           test rax, rax	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000f75	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000f79	        0x4a8d1420	                    lea rdx, [rax + r12]	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000f7d	            0x7424	                            je 0x4000fa3	      1116	syms.c	ELSE_2	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_19	CALL_24
0x4000f7f	        0x488d7310	                   lea rsi, [rbx + 0x10]	      1123	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f83	          0x4989de	                            mov r14, rbx	      1123	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f86	          0x4839f2	                            cmp rdx, rsi	      1123	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f89	            0x76c2	                           jbe 0x4000f4d	      1123	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f8b	        0x807b1064	            cmp byte [rbx + 0x10], 0x64 	      1124	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f8f	            0x75bc	                           jne 0x4000f4d	      1124	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f91	        0x4883c30c	                            add rbx, 0xc	      1125	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f95	            0xebb6	                           jmp 0x4000f4d	      1125	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f97	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1125	syms.c	FUNCTION_13	ELSE_1	FOR_2	IF_17	IF_20
0x4000f9b	        0x83452801	               add dword [rbp + 0x28], 1	      1132	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000f9f	        0x4a8d1420	                    lea rdx, [rax + r12]	      1132	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000fa3	          0x4531f6	                          xor r14d, r14d	      1131	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000fa6	            0xeba5	                           jmp 0x4000f4d	      1131	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21
0x4000fa8	          0x4d85c0	                             test r8, r8	      1096	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_16
0x4000fab	     0xf854dffffff	                           jne 0x4000efe	      1096	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_16
0x4000fb1	      0xe950ffffff	                           jmp 0x4000f06	      1096	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_16
0x4000fb6	          0x4d85c0	                             test r8, r8	      1052	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10	IF_11
0x4000fb9	     0xf85b7feffff	                           jne 0x4000e76	      1052	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_10	IF_11
0x4000fbf	            0x31c0	                            xor eax, eax	      1083	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000fc1	      0xe9bafeffff	                           jmp 0x4000e80	      1083	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000fc6	          0x4d89f4	                            mov r12, r14	      1083	syms.c	ELSE_2	FUNCTION_13	ELSE_1	IF_12	FOR_1	IF_14
0x4000fc9	          0x8b4528	            mov eax, dword [rbp + 0x28] 	      1137	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000fcc	          0x4d89ee	                            mov r14, r13	      1137	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000fcf	          0x4d85e4	                           test r12, r12	      1136	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000fd2	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      1136	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000fd7	            0x7406	                            je 0x4000fdf	      1136	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000fd9	          0x83c001	                              add eax, 1	      1137	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000fdc	          0x894528	            mov dword [rbp + 0x28], eax 	      1137	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_22
0x4000fdf	            0x85c0	                           test eax, eax	      1139	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_23
0x4000fe1	     0xf84e4f9ffff	                            je 0x40009cb	      1139	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_23
0x4000fe7	          0x83c001	                              add eax, 1	      1141	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4000fea	          0x4c89f7	                            mov rdi, r14	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000fed	          0x894528	            mov dword [rbp + 0x28], eax 	      1141	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4000ff0	            0x4898	                                    cdqe	      1143	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4000ff2	        0x488d3440	                  lea rsi, [rax + rax*2]	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000ff6	        0x48c1e604	                              shl rsi, 4	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000ffa	      0xe800000000	                          call 0x4000fff	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4000fff	          0x4885c0	                           test rax, rax	      1146	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_24
0x4001002	        0x48894520	            mov qword [rbp + 0x20], rax 	      1145	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_26
0x4001006	     0xf8472feffff	                            je 0x4000e7e	      1146	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_24
0x400100c	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001010	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001014	        0x488b0c24	                    mov rcx, qword [rsp]	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001018	        0x488b5d18	            mov rbx, qword [rbp + 0x18] 	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x400101c	          0x4801d1	                            add rcx, rdx	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x400101f	          0x4585c0	                           test r8d, r8d	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001022	     0xf8ee0030000	                           jle 0x4001408	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001028	          0x4839ca	                            cmp rdx, rcx	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x400102b	     0xf83d7030000	                           jae 0x4001408	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001031	            0x31f6	                            xor esi, esi	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001033	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001038	      0x4c897c2440	             mov qword [rsp + 0x40], r15	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x400103d	      0x4c896c2448	             mov qword [rsp + 0x48], r13	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4001042	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x400104a	          0x4989dd	                            mov r13, rbx	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x400104d	    0x48c744240800	                  mov qword [rsp + 8], 0	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001056	          0x4c89f3	                            mov rbx, r14	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4001059	          0x4531e4	                          xor r12d, r12d	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x400105c	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001065	          0x4989d7	                            mov r15, rdx	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4001068	          0x4989f6	                            mov r14, rsi	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x400106b	            0xeb63	                           jmp 0x40010d0	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x400106d	           0xf1f00	                         nop dword [rax]	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4001070	     0xf8628020000	                           jbe 0x400129e	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001076	            0x3c64	                            cmp al, 0x64	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001078	     0xf84f2000000	                            je 0x4001170	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400107e	            0x3c84	                            cmp al, 0x84	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001080	            0x752e	                           jne 0x40010b0	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001082	        0x488b4308	                mov rax, qword [rbx + 8]	      1217	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_31
0x4001086	          0x4c89ff	                            mov rdi, r15	      1217	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_31
0x4001089	          0xff5038	                 call qword [rax + 0x38]	      1217	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_31
0x400108c	      0x4d8d640500	                    lea r12, [r13 + rax]	      1217	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_31
0x4001091	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x4001096	        0x48034518	             add rax, qword [rbp + 0x18]	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x400109a	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x400109e	          0x4939c4	                            cmp r12, rax	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x40010a1	     0xf839b030000	                           jae 0x4001442	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x40010a7	          0x4d39ec	                            cmp r12, r13	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x40010aa	     0xf8292030000	                            jb 0x4001442	      1220	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x40010b0	      0x4439442410	            cmp dword [rsp + 0x10], r8d 	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40010b5	     0xf8d20020000	                           jge 0x40012db	      1154	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40010bb	        0x488b0424	                    mov rax, qword [rsp]	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40010bf	        0x48034510	             add rax, qword [rbp + 0x10]	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40010c3	        0x4983c70c	                            add r15, 0xc	      1156	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40010c7	          0x4939c7	                            cmp r15, rax	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40010ca	     0xf830b020000	                           jae 0x40012db	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x40010d0	      0x410fb64704	               movzx eax, byte [r15 + 4]	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40010d5	            0x3c24	                            cmp al, 0x24	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40010d7	            0x7597	                           jne 0x4001070	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40010d9	        0x488b4308	                mov rax, qword [rbx + 8]	      1226	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_32
0x40010dd	          0x4c89ff	                            mov rdi, r15	      1226	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_32
0x40010e0	          0xff5038	                 call qword [rax + 0x38]	      1226	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_32
0x40010e3	      0x4d8d440500	                     lea r8, [r13 + rax]	      1226	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_32
0x40010e8	          0x4d39e8	                             cmp r8, r13	      1227	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_32
0x40010eb	     0xf842c030000	                            je 0x400141d	      1227	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_32
0x40010f1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1229	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x40010f6	        0x48034518	             add rax, qword [rbp + 0x18]	      1229	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x40010fa	        0x498d7f08	                      lea rdi, [r15 + 8]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x40010fe	          0x4939c0	                             cmp r8, rax	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4001101	      0xb800000000	                              mov eax, 0	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4001106	        0x4c0f43c0	                          cmovae r8, rax	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x400110a	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x400110f	      0x4c89442458	              mov qword [rsp + 0x58], r8	      1230	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_33
0x4001114	        0x488d3440	                  lea rsi, [rax + rax*2]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4001118	        0x488b4308	                mov rax, qword [rbx + 8]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x400111c	        0x48c1e604	                              shl rsi, 4	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4001120	          0x4989f3	                            mov r11, rsi	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4001123	        0x4c035d20	             add r11, qword [rbp + 0x20]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4001127	          0x4989f6	                            mov r14, rsi	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x400112a	      0x4c895c2450	             mov qword [rsp + 0x50], r11	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x400112f	          0xff5038	                 call qword [rax + 0x38]	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4001132	          0x4c89f6	                            mov rsi, r14	      1234	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001135	        0x48037520	             add rsi, qword [rbp + 0x20]	      1234	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001139	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	      1238	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400113e	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4001143	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1236	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001148	          0x4531f6	                          xor r14d, r14d	      1232	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400114b	      0x8344241001	               add dword [rsp + 0x10], 1	      1239	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001150	          0x498903	                    mov qword [r11], rax	      1233	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_33
0x4001153	        0x4c894628	              mov qword [rsi + 0x28], r8	      1238	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001157	        0x4c897e08	                mov qword [rsi + 8], r15	      1234	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400115b	        0x4c896e10	             mov qword [rsi + 0x10], r13	      1235	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400115f	        0x48894e18	             mov qword [rsi + 0x18], rcx	      1236	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001163	        0x4c896620	             mov qword [rsi + 0x20], r12	      1237	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001167	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1237	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400116b	      0xe940ffffff	                           jmp 0x40010b0	      1240	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001170	          0x4d85f6	                           test r14, r14	      1176	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4001173	            0x7461	                            je 0x40011d6	      1176	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x4001175	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x400117a	        0x498d7e08	                      lea rdi, [r14 + 8]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x400117e	        0x4c8d0440	                   lea r8, [rax + rax*2]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4001182	        0x488b4308	                mov rax, qword [rbx + 8]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4001186	        0x49c1e004	                               shl r8, 4	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x400118a	          0x4d89c3	                             mov r11, r8	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x400118d	        0x4c035d20	             add r11, qword [rbp + 0x20]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4001191	      0x4c89442458	              mov qword [rsp + 0x58], r8	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x4001196	      0x4c895c2450	             mov qword [rsp + 0x50], r11	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x400119b	          0xff5038	                 call qword [rax + 0x38]	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x400119e	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	      1179	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011a3	        0x4c034520	              add r8, qword [rbp + 0x20]	      1179	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011a7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1180	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011ac	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x40011b1	      0x8344241001	               add dword [rsp + 0x10], 1	      1184	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011b6	          0x498903	                    mov qword [r11], rax	      1178	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26	CALL_28
0x40011b9	        0x49894810	              mov qword [r8 + 0x10], rcx	      1180	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011bd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1181	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011c2	        0x4d897008	                 mov qword [r8 + 8], r14	      1179	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011c6	        0x4d896020	              mov qword [r8 + 0x20], r12	      1182	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011ca	    0x49c740280000	                mov qword [r8 + 0x28], 0	      1183	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011d2	        0x49894818	              mov qword [r8 + 0x18], rcx	      1181	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_26
0x40011d6	        0x488b4308	                mov rax, qword [rbx + 8]	      1188	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_29
0x40011da	          0x4c89ff	                            mov rdi, r15	      1188	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_29
0x40011dd	          0xff5038	                 call qword [rax + 0x38]	      1188	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_29
0x40011e0	      0x4d8d640500	                    lea r12, [r13 + rax]	      1188	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_29
0x40011e5	          0x4d39ec	                            cmp r12, r13	      1189	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x40011e8	            0x744a	                            je 0x4001234	      1189	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x40011ea	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x40011ef	        0x48034518	             add rax, qword [rbp + 0x18]	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x40011f3	          0x4939c4	                            cmp r12, rax	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x40011f6	            0x7337	                           jae 0x400122f	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x40011f8	          0x4d39ec	                            cmp r12, r13	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x40011fb	            0x7232	                            jb 0x400122f	      1198	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x40011fd	        0x488b0424	                    mov rax, qword [rsp]	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001201	        0x48034510	             add rax, qword [rbp + 0x10]	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001205	        0x498d7710	                   lea rsi, [r15 + 0x10]	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001209	          0x4839c6	                            cmp rsi, rax	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x400120c	            0x7307	                           jae 0x4001215	      1200	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x400120e	      0x41807f1064	            cmp byte [r15 + 0x10], 0x64 	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001213	            0x7437	                            je 0x400124c	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001215	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001219	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x400121e	          0x4d89fe	                            mov r14, r15	      1201	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001221	    0x48c744240800	                  mov qword [rsp + 8], 0	      1187	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400122a	      0xe981feffff	                           jmp 0x40010b0	      1187	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x400122f	          0x4531e4	                          xor r12d, r12d	      1199	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4001232	            0xebc9	                           jmp 0x40011fd	      1199	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4001234	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1199	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_28
0x4001238	    0x48c744240800	                  mov qword [rsp + 8], 0	      1187	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x4001241	          0x4531e4	                          xor r12d, r12d	      1191	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x4001244	          0x4531f6	                          xor r14d, r14d	      1192	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x4001247	      0xe964feffff	                           jmp 0x40010b0	      1192	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_27
0x400124c	        0x488b4308	                mov rax, qword [rbx + 8]	      1208	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	CALL_30
0x4001250	        0x4d8d5f0c	                    lea r11, [r15 + 0xc]	      1205	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001254	          0x4c89df	                            mov rdi, r11	      1208	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	CALL_30
0x4001257	      0x4c895c2408	                mov qword [rsp + 8], r11	      1208	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	CALL_30
0x400125c	          0xff5038	                 call qword [rax + 0x38]	      1208	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	CALL_30
0x400125f	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001264	        0x48037518	             add rsi, qword [rbp + 0x18]	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001268	          0x4c01e8	                            add rax, r13	      1207	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x400126b	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001270	          0x4839f0	                            cmp rax, rsi	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001273	     0xf834c010000	                           jae 0x40013c5	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001279	          0x4c39e8	                            cmp rax, r13	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400127c	     0xf8243010000	                            jb 0x40013c5	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001282	      0x4c89642408	                mov qword [rsp + 8], r12	      1206	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001287	          0x4d89fe	                            mov r14, r15	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400128a	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x400128e	          0x4989c4	                            mov r12, rax	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001291	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001296	          0x4d89df	                            mov r15, r11	      1205	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x4001299	      0xe912feffff	                           jmp 0x40010b0	      1205	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x400129e	            0x84c0	                             test al, al	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40012a0	     0xf850afeffff	                           jne 0x40010b0	      1158	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40012a6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x40012ab	        0x48034518	             add rax, qword [rbp + 0x18]	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x40012af	          0x4c29e8	                            sub rax, r13	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x40012b2	      0x483b442438	            cmp rax, qword [rsp + 0x38] 	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x40012b7	     0xf82f3fdffff	                            jb 0x40010b0	      1162	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_25
0x40012bd	        0x488b4308	                mov rax, qword [rbx + 8]	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x40012c1	      0x4c036c2438	             add r13, qword [rsp + 0x38]	      1164	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40012c6	        0x498d7f08	                      lea rdi, [r15 + 8]	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x40012ca	          0xff5038	                 call qword [rax + 0x38]	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x40012cd	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x40012d1	      0x4889442438	             mov qword [rsp + 0x38], rax	      1165	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	CALL_27
0x40012d6	      0xe9d5fdffff	                           jmp 0x40010b0	      1166	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40012db	          0x4c89f6	                            mov rsi, r14	      1166	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40012de	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	      1166	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40012e3	          0x4989de	                            mov r14, rbx	      1166	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1
0x40012e6	          0x4885f6	                           test rsi, rsi	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40012e9	          0x4c89eb	                            mov rbx, r13	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40012ec	      0x4c8b6c2448	            mov r13, qword [rsp + 0x48] 	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40012f1	     0xf84ea000000	                            je 0x40013e1	      1244	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x40012f7	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x40012fc	        0x488d7e08	                      lea rdi, [rsi + 8]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001300	      0x4889742438	             mov qword [rsp + 0x38], rsi	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001305	        0x488d0440	                  lea rax, [rax + rax*2]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001309	        0x48c1e004	                              shl rax, 4	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x400130d	          0x4989c0	                             mov r8, rax	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001310	        0x4c034520	              add r8, qword [rbp + 0x20]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001314	      0x4889442448	             mov qword [rsp + 0x48], rax	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001319	        0x498b4608	                mov rax, qword [r14 + 8]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x400131d	      0x4c89442440	              mov qword [rsp + 0x40], r8	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001322	          0xff5038	                 call qword [rax + 0x38]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001325	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001329	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400132e	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001333	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1248	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001338	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400133d	          0x498900	                     mov qword [r8], rax	      1246	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34	CALL_34
0x4001340	        0x488d0417	                    lea rax, [rdi + rdx]	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001344	        0x48894810	             mov qword [rax + 0x10], rcx	      1248	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001348	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400134d	        0x48897008	                mov qword [rax + 8], rsi	      1247	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001351	        0x4c896020	             mov qword [rax + 0x20], r12	      1250	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001355	    0x48c740280000	               mov qword [rax + 0x28], 0	      1251	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400135d	        0x48894818	             mov qword [rax + 0x18], rcx	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001361	        0x488d4230	                   lea rax, [rdx + 0x30]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001365	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001369	        0x488b0c24	                    mov rcx, qword [rsp]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x400136d	        0x48034d10	             add rcx, qword [rbp + 0x10]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001371	        0x448d6202	                     lea r12d, [rdx + 2]	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001375	          0x4963f4	                        movsxd rsi, r12d	      1249	syms.c	FUNCTION_13	ELSE_1	ELSE_2	IF_34
0x4001378	          0x4801f8	                            add rax, rdi	      1255	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x400137b	      0xba30000000	                           mov edx, 0x30	      1264	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_35
0x4001380	        0x48894808	                mov qword [rax + 8], rcx	      1256	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001384	    0x48c700ffffff	     mov qword [rax], 0xffffffffffffffff	      1255	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x400138b	      0xb900000000	                              mov ecx, 0	      1264	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_35
0x4001390	        0x48895810	             mov qword [rax + 0x10], rbx	      1257	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x4001394	    0x48c740180000	               mov qword [rax + 0x18], 0	      1258	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x400139c	    0x48c740200000	               mov qword [rax + 0x20], 0	      1259	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x40013a4	    0x48c740280000	               mov qword [rax + 0x28], 0	      1260	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x40013ac	        0x44896528	           mov dword [rbp + 0x28], r12d 	      1263	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x40013b0	      0xe800000000	                          call 0x40013b5	      1264	syms.c	FUNCTION_13	ELSE_1	ELSE_2	CALL_35
0x40013b5	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      1267	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x40013bd	          0x488928	                    mov qword [rax], rbp	      1267	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x40013c0	      0xe984f4ffff	                           jmp 0x4000849	      1267	syms.c	FUNCTION_13	ELSE_1	ELSE_2
0x40013c5	      0x4c89642408	                mov qword [rsp + 8], r12	      1206	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x40013ca	          0x4d89fe	                            mov r14, r15	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013cd	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013d1	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      1209	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013d6	          0x4d89df	                            mov r15, r11	      1205	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29
0x40013d9	          0x4531e4	                          xor r12d, r12d	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013dc	      0xe9cffcffff	                           jmp 0x40010b0	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013e1	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013e5	        0x488b0c24	                    mov rcx, qword [rsp]	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013e9	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013ed	        0x48034d10	             add rcx, qword [rbp + 0x10]	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013f1	          0x4863c2	                         movsxd rax, edx	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013f4	        0x448d6201	                     lea r12d, [rdx + 1]	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013f8	        0x488d0440	                  lea rax, [rax + rax*2]	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013fc	          0x4963f4	                        movsxd rsi, r12d	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x40013ff	        0x48c1e004	                              shl rax, 4	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001403	      0xe970ffffff	                           jmp 0x4001378	      1210	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	ELSE_4	IF_29	IF_30
0x4001408	          0x4889c7	                            mov rdi, rax	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x400140b	      0xbe01000000	                              mov esi, 1	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001410	    0x41bc01000000	                             mov r12d, 1	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001416	            0x31c0	                            xor eax, eax	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001418	      0xe95bffffff	                           jmp 0x4001378	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x400141d	        0x448b4528	            mov r8d, dword [rbp + 0x28] 	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001421	      0xe98afcffff	                           jmp 0x40010b0	      1155	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3
0x4001426	        0x498b4508	                mov rax, qword [r13 + 8]	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x400142a	          0x4889df	                            mov rdi, rbx	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x400142d	          0xff5038	                 call qword [rax + 0x38]	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x4001430	          0x4885c0	                           test rax, rax	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x4001433	     0xf855efbffff	                           jne 0x4000f97	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x4001439	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x400143d	      0xe907fbffff	                           jmp 0x4000f49	      1129	syms.c	FUNCTION_13	ELSE_1	FOR_2	ELSE_2	ELSE_3	IF_21	CALL_25
0x4001442	          0x4531e4	                          xor r12d, r12d	      1221	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
0x4001445	      0xe966fcffff	                           jmp 0x40010b0	      1221	syms.c	FUNCTION_13	ELSE_1	ELSE_2	FOR_3	SWITCH_1	IF_31
_bfd_nosymbols_get_lineno	DO,0:SWITCH,0:functions,0:IF,0:ELSE,0:FOR,0:WHILE,0:CALL,1	1
0x40014a0	      0xe900000000	                           jmp 0x40014a5	      1471	syms.c	FUNCTION_19	CALL_1
bfd_symbol_info	DO,0:SWITCH,0:functions,0:IF,1:ELSE,1:FOR,0:WHILE,0:CALL,2	179
0x4000410	            0x4157	                                push r15	       757	syms.c	FUNCTION_9
0x4000412	            0x4156	                                push r14	       757	syms.c	FUNCTION_9
0x4000414	            0x4155	                                push r13	       757	syms.c	FUNCTION_9
0x4000416	            0x4154	                                push r12	       757	syms.c	FUNCTION_9
0x4000418	              0x55	                                push rbp	       757	syms.c	FUNCTION_9
0x4000419	              0x53	                                push rbx	       757	syms.c	FUNCTION_9
0x400041a	          0x4889f5	                            mov rbp, rsi	       757	syms.c	FUNCTION_9
0x400041d	          0x4889fb	                            mov rbx, rdi	       757	syms.c	FUNCTION_9
0x4000420	        0x4883ec18	                           sub rsp, 0x18	       757	syms.c	FUNCTION_9
0x4000424	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x4000428	          0x4d85e4	                           test r12, r12	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x400042b	            0x7465	                            je 0x4000492	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x400042d	    0x41f644242110	           test byte [r12 + 0x21], 0x10 	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x4000433	      0xb843000000	                           mov eax, 0x43	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x4000438	      0xba43000000	                           mov edx, 0x43	       666	syms.c	FUNCTION_7	IF_1
0x400043d	            0x7439	                            je 0x4000478	       665	syms.c	FUNCTION_7	IF_1	CALL_1
0x400043f	          0x884508	                  mov byte [rbp + 8], al	       758	syms.c	FUNCTION_9	CALL_1
0x4000442	          0x83fa76	                           cmp edx, 0x76	       739	syms.c	FUNCTION_8
0x4000445	     0xf8424010000	                            je 0x400056f	       739	syms.c	FUNCTION_8
0x400044b	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       763	syms.c	FUNCTION_9	ELSE_1
0x400044f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       763	syms.c	FUNCTION_9	ELSE_1
0x4000453	        0x48034228	             add rax, qword [rdx + 0x28]	       763	syms.c	FUNCTION_9	ELSE_1
0x4000457	        0x48894500	                    mov qword [rbp], rax	       763	syms.c	FUNCTION_9	ELSE_1
0x400045b	        0x488b4308	                mov rax, qword [rbx + 8]	       765	syms.c	FUNCTION_9	ELSE_1
0x400045f	        0x48894510	            mov qword [rbp + 0x10], rax 	       765	syms.c	FUNCTION_9	ELSE_1
0x4000463	        0x4883c418	                           add rsp, 0x18	       766	syms.c	FUNCTION_9	ELSE_1
0x4000467	              0x5b	                                 pop rbx	       766	syms.c	FUNCTION_9	ELSE_1
0x4000468	              0x5d	                                 pop rbp	       766	syms.c	FUNCTION_9	ELSE_1
0x4000469	            0x415c	                                 pop r12	       766	syms.c	FUNCTION_9	ELSE_1
0x400046b	            0x415d	                                 pop r13	       766	syms.c	FUNCTION_9	ELSE_1
0x400046d	            0x415e	                                 pop r14	       766	syms.c	FUNCTION_9	ELSE_1
0x400046f	            0x415f	                                 pop r15	       766	syms.c	FUNCTION_9	ELSE_1
0x4000471	              0xc3	                                     ret	       766	syms.c	FUNCTION_9	ELSE_1
0x4000472	    0x660f1f440000	                    nop word [rax + rax]	       766	syms.c	FUNCTION_9	ELSE_1
0x4000478	    0x4981fc000000	                              cmp r12, 0	       667	syms.c	FUNCTION_7	IF_2	CALL_2
0x400047f	     0xf840b010000	                            je 0x4000590	       667	syms.c	FUNCTION_7	IF_2	CALL_2
0x4000485	    0x4981fc000000	                              cmp r12, 0	       681	syms.c	FUNCTION_7	IF_5	CALL_3
0x400048c	     0xf84ee000000	                            je 0x4000580	       681	syms.c	FUNCTION_7	IF_5	CALL_3
0x4000492	        0x448b6b18	           mov r13d, dword [rbx + 0x18] 	       683	syms.c	FUNCTION_7	IF_6
0x4000496	      0xb869000000	                           mov eax, 0x69	       683	syms.c	FUNCTION_7	IF_6
0x400049b	      0xba69000000	                           mov edx, 0x69	       684	syms.c	FUNCTION_7	IF_6
0x40004a0	    0x41f7c5000040	                     test r13d, 0x400000	       683	syms.c	FUNCTION_7	IF_6
0x40004a7	            0x7596	                           jne 0x400043f	       683	syms.c	FUNCTION_7	IF_6
0x40004a9	        0x41f6c580	                         test r13b, 0x80	       685	syms.c	FUNCTION_7	IF_7
0x40004ad	     0xf85fd000000	                           jne 0x40005b0	       685	syms.c	FUNCTION_7	IF_7
0x40004b3	    0x41f7c5000080	                     test r13d, 0x800000	       694	syms.c	FUNCTION_7	IF_9
0x40004ba	      0xb875000000	                           mov eax, 0x75	       694	syms.c	FUNCTION_7	IF_9
0x40004bf	      0xba75000000	                           mov edx, 0x75	       695	syms.c	FUNCTION_7	IF_9
0x40004c4	     0xf8575ffffff	                           jne 0x400043f	       694	syms.c	FUNCTION_7	IF_9
0x40004ca	        0x41f6c503	                            test r13b, 3	       696	syms.c	FUNCTION_7	IF_10
0x40004ce	      0xb83f000000	                           mov eax, 0x3f	       696	syms.c	FUNCTION_7	IF_10
0x40004d3	      0xba3f000000	                           mov edx, 0x3f	       697	syms.c	FUNCTION_7	IF_10
0x40004d8	     0xf8461ffffff	                            je 0x400043f	       696	syms.c	FUNCTION_7	IF_10
0x40004de	    0x4981fc000000	                              cmp r12, 0	       699	syms.c	FUNCTION_7	IF_11	CALL_4
0x40004e5	     0xf8417010000	                            je 0x4000602	       699	syms.c	FUNCTION_7	IF_11	CALL_4
0x40004eb	          0x4d85e4	                           test r12, r12	       701	syms.c	FUNCTION_7	ELSE_4	IF_12
0x40004ee	     0xf844bffffff	                            je 0x400043f	       701	syms.c	FUNCTION_7	ELSE_4	IF_12
0x40004f4	        0x498b0424	                    mov rax, qword [r12]	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x40004f8	      0xba04000000	                              mov edx, 4	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x40004fd	    0x41be00000000	                             mov r14d, 0	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x4000503	    0x41bf00000000	                             mov r15d, 0	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x4000509	      0x4889442408	                mov qword [rsp + 8], rax	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x400050e	          0x4889c7	                            mov rdi, rax	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x4000511	            0xeb25	                           jmp 0x4000538	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x4000513	       0xf1f440000	                   nop dword [rax + rax]	       703	syms.c	FUNCTION_7	ELSE_4	IF_12	CALL_5
0x4000518	        0x4983c610	                           add r14, 0x10	       606	syms.c	FUNCTION_5	FOR_1
0x400051c	          0x4d8b3e	                    mov r15, qword [r14]	       606	syms.c	FUNCTION_5	FOR_1
0x400051f	          0x4d85ff	                           test r15, r15	       606	syms.c	FUNCTION_5	FOR_1
0x4000522	     0xf84f2000000	                            je 0x400061a	       606	syms.c	FUNCTION_5	FOR_1
0x4000528	          0x4c89ff	                            mov rdi, r15	       606	syms.c	FUNCTION_5	FOR_1
0x400052b	      0xe800000000	                          call 0x4000530	       606	syms.c	FUNCTION_5	FOR_1
0x4000530	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       606	syms.c	FUNCTION_5	FOR_1
0x4000535	          0x4889c2	                            mov rdx, rax	       606	syms.c	FUNCTION_5	FOR_1
0x4000538	          0x4c89fe	                            mov rsi, r15	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x400053b	      0xe800000000	                          call 0x4000540	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x4000540	            0x85c0	                           test eax, eax	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x4000542	            0x75d4	                           jne 0x4000518	       607	syms.c	FUNCTION_5	FOR_1	IF_1	CALL_2
0x4000544	      0x410fb64608	               movzx eax, byte [r14 + 8]	       608	syms.c	FUNCTION_5	FOR_1	IF_1
0x4000549	            0x3c3f	                            cmp al, 0x3f	       704	syms.c	FUNCTION_7	ELSE_4	IF_12	IF_13
0x400054b	     0xf84c9000000	                            je 0x400061a	       704	syms.c	FUNCTION_7	ELSE_4	IF_12	IF_13
0x4000551	        0x4183e502	                             and r13d, 2	       709	syms.c	FUNCTION_7	IF_14
0x4000555	     0xf8599000000	                           jne 0x40005f4	       709	syms.c	FUNCTION_7	IF_14
0x400055b	           0xfbed0	                           movsx edx, al	       711	syms.c	FUNCTION_7
0x400055e	          0x884508	                  mov byte [rbp + 8], al	       758	syms.c	FUNCTION_9	CALL_1
0x4000561	          0x83fa77	                           cmp edx, 0x77	       739	syms.c	FUNCTION_8
0x4000564	            0x7409	                            je 0x400056f	       739	syms.c	FUNCTION_8
0x4000566	          0x83fa55	                           cmp edx, 0x55	       739	syms.c	FUNCTION_8
0x4000569	     0xf85d3feffff	                           jne 0x4000442	       739	syms.c	FUNCTION_8
0x400056f	    0x48c745000000	                      mov qword [rbp], 0	       761	syms.c	FUNCTION_9	IF_1
0x4000577	      0xe9dffeffff	                           jmp 0x400045b	       761	syms.c	FUNCTION_9	IF_1
0x400057c	         0xf1f4000	                         nop dword [rax]	       761	syms.c	FUNCTION_9	IF_1
0x4000580	      0xb849000000	                           mov eax, 0x49	       681	syms.c	FUNCTION_7	IF_5	CALL_3
0x4000585	      0xba49000000	                           mov edx, 0x49	       682	syms.c	FUNCTION_7	IF_5
0x400058a	      0xe9b0feffff	                           jmp 0x400043f	       682	syms.c	FUNCTION_7	IF_5
0x400058f	              0x90	                                     nop	       682	syms.c	FUNCTION_7	IF_5
0x4000590	          0x8b5718	            mov edx, dword [rdi + 0x18] 	       669	syms.c	FUNCTION_7	IF_2	IF_3
0x4000593	      0xb855000000	                           mov eax, 0x55	       669	syms.c	FUNCTION_7	IF_2	IF_3
0x4000598	          0xf6c280	                           test dl, 0x80	       669	syms.c	FUNCTION_7	IF_2	IF_3
0x400059b	            0x753b	                           jne 0x40005d8	       669	syms.c	FUNCTION_7	IF_2	IF_3
0x400059d	          0x884508	                  mov byte [rbp + 8], al	       758	syms.c	FUNCTION_9	CALL_1
0x40005a0	    0x48c745000000	                      mov qword [rbp], 0	       761	syms.c	FUNCTION_9	IF_1
0x40005a8	      0xe9aefeffff	                           jmp 0x400045b	       761	syms.c	FUNCTION_9	IF_1
0x40005ad	           0xf1f00	                         nop dword [rax]	       761	syms.c	FUNCTION_9	IF_1
0x40005b0	    0x4181e5000001	                       and r13d, 0x10000	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005b7	        0x4183fd01	                             cmp r13d, 1	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005bb	            0x19c0	                            sbb eax, eax	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005bd	            0xf7d0	                                 not eax	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005bf	          0x83c057	                           add eax, 0x57	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005c2	        0x4183fd01	                             cmp r13d, 1	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005c6	            0x19d2	                            sbb edx, edx	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005c8	            0xf7d2	                                 not edx	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005ca	          0x83c257	                           add edx, 0x57	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005cd	      0xe96dfeffff	                           jmp 0x400043f	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005d2	    0x660f1f440000	                    nop word [rax + rax]	       689	syms.c	FUNCTION_7	IF_7	IF_8
0x40005d8	    0x81e200000100	                        and edx, 0x10000	       673	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x40005de	      0xb877000000	                           mov eax, 0x77	       673	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x40005e3	            0x74b8	                            je 0x400059d	       673	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x40005e5	      0xb876000000	                           mov eax, 0x76	       673	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x40005ea	      0xba76000000	                           mov edx, 0x76	       674	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x40005ef	      0xe94bfeffff	                           jmp 0x400043f	       674	syms.c	FUNCTION_7	IF_2	IF_3	IF_4
0x40005f4	            0x4898	                                    cdqe	       710	syms.c	FUNCTION_7	CALL_7
0x40005f6	     0xfb680000000	                   movzx eax, byte [rax]	       710	syms.c	FUNCTION_7	CALL_7
0x40005fd	      0xe959ffffff	                           jmp 0x400055b	       710	syms.c	FUNCTION_7	CALL_7
0x4000602	      0xb861000000	                           mov eax, 0x61	       699	syms.c	FUNCTION_7	IF_11	CALL_4
0x4000607	      0xba61000000	                           mov edx, 0x61	       700	syms.c	FUNCTION_7	IF_11
0x400060c	        0x4183e502	                             and r13d, 2	       709	syms.c	FUNCTION_7	IF_14
0x4000610	            0x75e2	                           jne 0x40005f4	       709	syms.c	FUNCTION_7	IF_14
0x4000612	          0x885508	                  mov byte [rbp + 8], dl	       758	syms.c	FUNCTION_9	CALL_1
0x4000615	      0xe931feffff	                           jmp 0x400044b	       758	syms.c	FUNCTION_9	CALL_1
0x400061a	      0x418b442420	            mov eax, dword [r12 + 0x20] 	       623	syms.c	FUNCTION_6	IF_1
0x400061f	            0xa810	                           test al, 0x10	       623	syms.c	FUNCTION_6	IF_1
0x4000621	            0x7527	                           jne 0x400064a	       623	syms.c	FUNCTION_6	IF_1
0x4000623	            0xa820	                           test al, 0x20	       625	syms.c	FUNCTION_6	IF_2
0x4000625	            0x742f	                            je 0x4000656	       625	syms.c	FUNCTION_6	IF_2
0x4000627	            0xa808	                              test al, 8	       627	syms.c	FUNCTION_6	IF_2	IF_3
0x4000629	            0x754f	                           jne 0x400067a	       627	syms.c	FUNCTION_6	IF_2	IF_3
0x400062b	      0x2500004000	                       and eax, 0x400000	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000630	          0x83f801	                              cmp eax, 1	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000633	            0x89c2	                            mov edx, eax	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000635	            0x19c0	                            sbb eax, eax	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000637	          0x83e0fd	                     and eax, 0xfffffffd	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x400063a	          0x83c067	                           add eax, 0x67	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x400063d	          0x83fa01	                              cmp edx, 1	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000640	            0x19d2	                            sbb edx, edx	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000642	          0x83e2fd	                     and edx, 0xfffffffd	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000645	          0x83c267	                           add edx, 0x67	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x4000648	            0xebc2	                           jmp 0x400060c	       629	syms.c	FUNCTION_6	IF_2	ELSE_1	IF_4
0x400064a	      0xb874000000	                           mov eax, 0x74	       623	syms.c	FUNCTION_6	IF_1
0x400064f	      0xba74000000	                           mov edx, 0x74	       624	syms.c	FUNCTION_6	IF_1
0x4000654	            0xebb6	                           jmp 0x400060c	       624	syms.c	FUNCTION_6	IF_1
0x4000656	          0xf6c401	                              test ah, 1	       634	syms.c	FUNCTION_6	ELSE_2	IF_5
0x4000659	            0x752b	                           jne 0x4000686	       634	syms.c	FUNCTION_6	ELSE_2	IF_5
0x400065b	      0x2500004000	                       and eax, 0x400000	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x4000660	          0x83f801	                              cmp eax, 1	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x4000663	            0x89c2	                            mov edx, eax	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x4000665	            0x19c0	                            sbb eax, eax	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x4000667	          0x83e0ef	                     and eax, 0xffffffef	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x400066a	          0x83c073	                           add eax, 0x73	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x400066d	          0x83fa01	                              cmp edx, 1	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x4000670	            0x19d2	                            sbb edx, edx	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x4000672	          0x83e2ef	                     and edx, 0xffffffef	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x4000675	          0x83c273	                           add edx, 0x73	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x4000678	            0xeb92	                           jmp 0x400060c	       636	syms.c	FUNCTION_6	ELSE_2	IF_5	IF_6
0x400067a	      0xb872000000	                           mov eax, 0x72	       627	syms.c	FUNCTION_6	IF_2	IF_3
0x400067f	      0xba72000000	                           mov edx, 0x72	       628	syms.c	FUNCTION_6	IF_2	IF_3
0x4000684	            0xeb86	                           jmp 0x400060c	       628	syms.c	FUNCTION_6	IF_2	IF_3
0x4000686	          0xf6c420	                           test ah, 0x20	       641	syms.c	FUNCTION_6	IF_7
0x4000689	            0x7524	                           jne 0x40006af	       641	syms.c	FUNCTION_6	IF_7
0x400068b	      0x2508010000	                          and eax, 0x108	       643	syms.c	FUNCTION_6	IF_8
0x4000690	      0xb96e000000	                           mov ecx, 0x6e	       643	syms.c	FUNCTION_6	IF_8
0x4000695	      0xba3f000000	                           mov edx, 0x3f	       643	syms.c	FUNCTION_6	IF_8
0x400069a	      0x3d08010000	                          cmp eax, 0x108	       643	syms.c	FUNCTION_6	IF_8
0x400069f	      0xb83f000000	                           mov eax, 0x3f	       643	syms.c	FUNCTION_6	IF_8
0x40006a4	           0xf44c1	                          cmove eax, ecx	       643	syms.c	FUNCTION_6	IF_8
0x40006a7	           0xf44d1	                          cmove edx, ecx	       643	syms.c	FUNCTION_6	IF_8
0x40006aa	      0xe95dffffff	                           jmp 0x400060c	       643	syms.c	FUNCTION_6	IF_8
0x40006af	      0xb84e000000	                           mov eax, 0x4e	       641	syms.c	FUNCTION_6	IF_7
0x40006b4	      0xba4e000000	                           mov edx, 0x4e	       642	syms.c	FUNCTION_6	IF_7
0x40006b9	      0xe94effffff	                           jmp 0x400060c	       642	syms.c	FUNCTION_6	IF_7
bfd_print_symbol_vandf	DO,0:SWITCH,0:functions,0:IF,1:ELSE,1:FOR,0:WHILE,0:CALL,2	96
0x40000e0	              0x55	                                push rbp	       476	syms.c	FUNCTION_3
0x40000e1	              0x53	                                push rbx	       476	syms.c	FUNCTION_3
0x40000e2	          0x4889f5	                            mov rbp, rsi	       476	syms.c	FUNCTION_3
0x40000e5	        0x4883ec08	                              sub rsp, 8	       476	syms.c	FUNCTION_3
0x40000e9	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       481	syms.c	FUNCTION_3	IF_1
0x40000ed	          0x8b5a18	            mov ebx, dword [rdx + 0x18] 	       479	syms.c	FUNCTION_3
0x40000f0	          0x4885c0	                           test rax, rax	       481	syms.c	FUNCTION_3	IF_1
0x40000f3	     0xf8417010000	                            je 0x4000210	       481	syms.c	FUNCTION_3	IF_1
0x40000f9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       482	syms.c	FUNCTION_3	CALL_1
0x40000fd	        0x48034210	             add rax, qword [rdx + 0x10]	       482	syms.c	FUNCTION_3	CALL_1
0x4000101	          0x4889c2	                            mov rdx, rax	       482	syms.c	FUNCTION_3	CALL_1
0x4000104	      0xe800000000	                          call 0x4000109	       482	syms.c	FUNCTION_3	CALL_1
0x4000109	          0xf6c308	                              test bl, 8	       489	syms.c	FUNCTION_3
0x400010c	      0xbf46000000	                           mov edi, 0x46	       489	syms.c	FUNCTION_3
0x4000111	            0x750e	                           jne 0x4000121	       489	syms.c	FUNCTION_3
0x4000113	          0xf6c740	                           test bh, 0x40	       503	syms.c	FUNCTION_3
0x4000116	      0xbf66000000	                           mov edi, 0x66	       503	syms.c	FUNCTION_3
0x400011b	     0xf84cf000000	                            je 0x40001f0	       503	syms.c	FUNCTION_3
0x4000121	          0xf6c304	                              test bl, 4	       489	syms.c	FUNCTION_3
0x4000124	      0xbe64000000	                           mov esi, 0x64	       489	syms.c	FUNCTION_3
0x4000129	            0x7512	                           jne 0x400013d	       489	syms.c	FUNCTION_3
0x400012b	            0x89d8	                            mov eax, ebx	       498	syms.c	FUNCTION_3
0x400012d	      0x2500800000	                         and eax, 0x8000	       498	syms.c	FUNCTION_3
0x4000132	          0x83f801	                              cmp eax, 1	       498	syms.c	FUNCTION_3
0x4000135	            0x19f6	                            sbb esi, esi	       498	syms.c	FUNCTION_3
0x4000137	          0x83e6dc	                     and esi, 0xffffffdc	       498	syms.c	FUNCTION_3
0x400013a	          0x83c644	                           add esi, 0x44	       498	syms.c	FUNCTION_3
0x400013d	          0xf6c720	                           test bh, 0x20	       489	syms.c	FUNCTION_3
0x4000140	      0xba49000000	                           mov edx, 0x49	       489	syms.c	FUNCTION_3
0x4000145	            0x7512	                           jne 0x4000159	       489	syms.c	FUNCTION_3
0x4000147	            0x89d8	                            mov eax, ebx	       497	syms.c	FUNCTION_3
0x4000149	      0x2500004000	                       and eax, 0x400000	       497	syms.c	FUNCTION_3
0x400014e	          0x83f801	                              cmp eax, 1	       497	syms.c	FUNCTION_3
0x4000151	            0x19d2	                            sbb edx, edx	       497	syms.c	FUNCTION_3
0x4000153	          0x83e2b7	                     and edx, 0xffffffb7	       497	syms.c	FUNCTION_3
0x4000156	          0x83c269	                           add edx, 0x69	       497	syms.c	FUNCTION_3
0x4000159	            0x89d8	                            mov eax, ebx	       489	syms.c	FUNCTION_3
0x400015b	            0x89d9	                            mov ecx, ebx	       489	syms.c	FUNCTION_3
0x400015d	      0x2500100000	                         and eax, 0x1000	       489	syms.c	FUNCTION_3
0x4000162	          0x83f801	                              cmp eax, 1	       489	syms.c	FUNCTION_3
0x4000165	            0x19c0	                            sbb eax, eax	       489	syms.c	FUNCTION_3
0x4000167	    0x81e100080000	                          and ecx, 0x800	       489	syms.c	FUNCTION_3
0x400016d	          0x83e0c9	                     and eax, 0xffffffc9	       489	syms.c	FUNCTION_3
0x4000170	          0x83c057	                           add eax, 0x57	       489	syms.c	FUNCTION_3
0x4000173	          0x83f901	                              cmp ecx, 1	       489	syms.c	FUNCTION_3
0x4000176	            0x89d9	                            mov ecx, ebx	       489	syms.c	FUNCTION_3
0x4000178	          0x4519c9	                            sbb r9d, r9d	       489	syms.c	FUNCTION_3
0x400017b	    0x81e180000000	                           and ecx, 0x80	       489	syms.c	FUNCTION_3
0x4000181	        0x4183e1dd	                     and r9d, 0xffffffdd	       489	syms.c	FUNCTION_3
0x4000185	        0x4183c143	                           add r9d, 0x43	       489	syms.c	FUNCTION_3
0x4000189	          0x83f901	                              cmp ecx, 1	       489	syms.c	FUNCTION_3
0x400018c	          0x4519c0	                            sbb r8d, r8d	       489	syms.c	FUNCTION_3
0x400018f	        0x4183e0a9	                     and r8d, 0xffffffa9	       489	syms.c	FUNCTION_3
0x4000193	        0x4183c077	                           add r8d, 0x77	       489	syms.c	FUNCTION_3
0x4000197	          0xf6c301	                              test bl, 1	       489	syms.c	FUNCTION_3
0x400019a	            0x7434	                            je 0x40001d0	       489	syms.c	FUNCTION_3
0x400019c	          0x83e302	                              and ebx, 2	       491	syms.c	FUNCTION_3
0x400019f	          0x83fb01	                              cmp ebx, 1	       491	syms.c	FUNCTION_3
0x40001a2	            0x19c9	                            sbb ecx, ecx	       491	syms.c	FUNCTION_3
0x40001a4	          0x83e14b	                           and ecx, 0x4b	       491	syms.c	FUNCTION_3
0x40001a7	          0x83c121	                           add ecx, 0x21	       491	syms.c	FUNCTION_3
0x40001aa	              0x57	                                push rdi	        97	stdio2.h	CALL_12
0x40001ab	              0x56	                                push rsi	        97	stdio2.h	CALL_12
0x40001ac	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_12
0x40001af	              0x52	                                push rdx	        97	stdio2.h	CALL_12
0x40001b0	              0x50	                                push rax	        97	stdio2.h	CALL_12
0x40001b1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x40001b6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40001bb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40001bd	      0xe800000000	                          call 0x40001c2	        97	stdio2.h	CALL_12
0x40001c2	        0x4883c428	                           add rsp, 0x28	       504	syms.c	FUNCTION_3
0x40001c6	              0x5b	                                 pop rbx	       504	syms.c	FUNCTION_3
0x40001c7	              0x5d	                                 pop rbp	       504	syms.c	FUNCTION_3
0x40001c8	              0xc3	                                     ret	       504	syms.c	FUNCTION_3
0x40001c9	     0xf1f80000000	                         nop dword [rax]	       504	syms.c	FUNCTION_3
0x40001d0	          0xf6c302	                              test bl, 2	       493	syms.c	FUNCTION_3
0x40001d3	      0xb967000000	                           mov ecx, 0x67	       493	syms.c	FUNCTION_3
0x40001d8	            0x75d0	                           jne 0x40001aa	       493	syms.c	FUNCTION_3
0x40001da	    0x81e300008000	                       and ebx, 0x800000	       493	syms.c	FUNCTION_3
0x40001e0	          0x83fb01	                              cmp ebx, 1	       493	syms.c	FUNCTION_3
0x40001e3	            0x19c9	                            sbb ecx, ecx	       493	syms.c	FUNCTION_3
0x40001e5	          0x83e1ab	                     and ecx, 0xffffffab	       493	syms.c	FUNCTION_3
0x40001e8	          0x83c175	                           add ecx, 0x75	       493	syms.c	FUNCTION_3
0x40001eb	            0xebbd	                           jmp 0x40001aa	       493	syms.c	FUNCTION_3
0x40001ed	           0xf1f00	                         nop dword [rax]	       493	syms.c	FUNCTION_3
0x40001f0	            0x89d8	                            mov eax, ebx	       503	syms.c	FUNCTION_3
0x40001f2	      0x2500000100	                        and eax, 0x10000	       503	syms.c	FUNCTION_3
0x40001f7	          0x83f801	                              cmp eax, 1	       503	syms.c	FUNCTION_3
0x40001fa	            0x19ff	                            sbb edi, edi	       503	syms.c	FUNCTION_3
0x40001fc	          0x83e7d1	                     and edi, 0xffffffd1	       503	syms.c	FUNCTION_3
0x40001ff	          0x83c74f	                           add edi, 0x4f	       503	syms.c	FUNCTION_3
0x4000202	      0xe91affffff	                           jmp 0x4000121	       503	syms.c	FUNCTION_3
0x4000207	    0x660f1f840000	                    nop word [rax + rax]	       503	syms.c	FUNCTION_3
0x4000210	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       484	syms.c	FUNCTION_3	CALL_2
0x4000214	      0xe800000000	                          call 0x4000219	       484	syms.c	FUNCTION_3	CALL_2
0x4000219	      0xe9ebfeffff	                           jmp 0x4000109	       484	syms.c	FUNCTION_3	CALL_2
