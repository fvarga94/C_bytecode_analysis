gldelf_k1om_after_open	CALL,54:DO,0:IF,44:SWITCH,0:WHILE,0:FOR,8:ELSE,2:functions,0	549
0x40032a0	            0x4157	                                push r15	      1131	eelf_k1om.c	FUNCTION_17
0x40032a2	            0x4156	                                push r14	      1131	eelf_k1om.c	FUNCTION_17
0x40032a4	            0x4155	                                push r13	      1131	eelf_k1om.c	FUNCTION_17
0x40032a6	            0x4154	                                push r12	      1131	eelf_k1om.c	FUNCTION_17
0x40032a8	              0x55	                                push rbp	      1131	eelf_k1om.c	FUNCTION_17
0x40032a9	              0x53	                                push rbx	      1131	eelf_k1om.c	FUNCTION_17
0x40032aa	        0x4883ec58	                           sub rsp, 0x58	      1131	eelf_k1om.c	FUNCTION_17
0x40032ae	    0x64488b042528	                mov rax, qword fs:[0x28]	      1131	eelf_k1om.c	FUNCTION_17
0x40032b7	      0x4889442448	             mov qword [rsp + 0x48], rax	      1131	eelf_k1om.c	FUNCTION_17
0x40032bc	            0x31c0	                            xor eax, eax	      1131	eelf_k1om.c	FUNCTION_17
0x40032be	      0xe800000000	                          call 0x40032c3	      1137	eelf_k1om.c	FUNCTION_17	CALL_1
0x40032c3	    0x488b2d000000	            mov rbp, qword [0x040032ca] 	      1139	eelf_k1om.c	FUNCTION_17	CALL_2
0x40032ca	        0x837d4001	               cmp dword [rbp + 0x40], 1	      1140	eelf_k1om.c	FUNCTION_17	IF_1	CALL_3
0x40032ce	            0x7428	                            je 0x40032f8	      1140	eelf_k1om.c	FUNCTION_17	IF_1	CALL_3
0x40032d0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1417	eelf_k1om.c	FUNCTION_17
0x40032d5	    0x644833042528	                xor rax, qword fs:[0x28]	      1417	eelf_k1om.c	FUNCTION_17
0x40032de	     0xf850d090000	                           jne 0x4003bf1	      1417	eelf_k1om.c	FUNCTION_17
0x40032e4	        0x4883c458	                           add rsp, 0x58	      1417	eelf_k1om.c	FUNCTION_17
0x40032e8	              0x5b	                                 pop rbx	      1417	eelf_k1om.c	FUNCTION_17
0x40032e9	              0x5d	                                 pop rbp	      1417	eelf_k1om.c	FUNCTION_17
0x40032ea	            0x415c	                                 pop r12	      1417	eelf_k1om.c	FUNCTION_17
0x40032ec	            0x415d	                                 pop r13	      1417	eelf_k1om.c	FUNCTION_17
0x40032ee	            0x415e	                                 pop r14	      1417	eelf_k1om.c	FUNCTION_17
0x40032f0	            0x415f	                                 pop r15	      1417	eelf_k1om.c	FUNCTION_17
0x40032f2	              0xc3	                                     ret	      1417	eelf_k1om.c	FUNCTION_17
0x40032f3	       0xf1f440000	                   nop dword [rax + rax]	      1417	eelf_k1om.c	FUNCTION_17
0x40032f8	    0x488b3d000000	            mov rdi, qword [0x040032ff] 	      1143	eelf_k1om.c	FUNCTION_17	IF_2
0x40032ff	          0x4885ff	                           test rdi, rdi	      1143	eelf_k1om.c	FUNCTION_17	IF_2
0x4003302	            0x742f	                            je 0x4003333	      1143	eelf_k1om.c	FUNCTION_17	IF_2
0x4003304	      0xe800000000	                          call 0x4003309	      1145	eelf_k1om.c	FUNCTION_17	IF_2	CALL_4
0x4003309	    0x488b05000000	            mov rax, qword [0x04003310] 	      1148	eelf_k1om.c	FUNCTION_17	IF_2
0x4003310	    0x488b3d000000	            mov rdi, qword [0x04003317] 	      1147	eelf_k1om.c	FUNCTION_17	IF_2	CALL_5
0x4003317	        0x488b4008	                mov rax, qword [rax + 8]	      1148	eelf_k1om.c	FUNCTION_17	IF_2
0x400331b	          0x488b30	                    mov rsi, qword [rax]	      1147	eelf_k1om.c	FUNCTION_17	IF_2	CALL_5
0x400331e	      0xe800000000	                          call 0x4003323	      1147	eelf_k1om.c	FUNCTION_17	IF_2	CALL_5
0x4003323	          0x4885c0	                           test rax, rax	      1150	eelf_k1om.c	FUNCTION_17	IF_2	IF_3
0x4003326	    0x488905000000	            mov qword [0x0400332d], rax 	      1147	eelf_k1om.c	FUNCTION_17	IF_2	CALL_5
0x400332d	     0xf8485080000	                            je 0x4003bb8	      1150	eelf_k1om.c	FUNCTION_17	IF_2	IF_3
0x4003333	    0x488b3d000000	            mov rdi, qword [0x0400333a] 	      1157	eelf_k1om.c	FUNCTION_17	IF_4
0x400333a	          0x4885ff	                           test rdi, rdi	      1157	eelf_k1om.c	FUNCTION_17	IF_4
0x400333d	     0xf84ed000000	                            je 0x4003430	      1157	eelf_k1om.c	FUNCTION_17	IF_4
0x4003343	    0x488b1d000000	            mov rbx, qword [0x0400334a] 	      1160	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1
0x400334a	          0x4885db	                           test rbx, rbx	      1160	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1
0x400334d	            0x7519	                           jne 0x4003368	      1160	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1
0x400334f	      0xe9cc000000	                           jmp 0x4003420	      1160	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1
0x4003354	         0xf1f4000	                         nop dword [rax]	      1160	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1
0x4003358	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      1161	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1
0x400335f	          0x4885db	                           test rbx, rbx	      1160	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1
0x4003362	     0xf84b8000000	                            je 0x4003420	      1160	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1
0x4003368	        0x488b4308	                mov rax, qword [rbx + 8]	      1162	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x400336c	        0x83780805	                  cmp dword [rax + 8], 5	      1162	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x4003370	            0x75e6	                           jne 0x4003358	      1162	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x4003372	    0x8bb3a0000000	            mov esi, dword [rbx + 0xa0] 	      1163	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x4003378	            0x85f6	                           test esi, esi	      1163	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x400337a	            0x74dc	                            je 0x4003358	      1163	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x400337c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      1164	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x4003383	        0xf6404810	           test byte [rax + 0x48], 0x10 	      1164	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x4003387	            0x75cf	                           jne 0x4003358	      1164	eelf_k1om.c	FUNCTION_17	IF_4	FOR_1	IF_5
0x4003389	      0xe800000000	                          call 0x400338e	      1032	eelf_k1om.c	FUNCTION_14	CALL_1
0x400338e	          0x4885c0	                           test rax, rax	      1033	eelf_k1om.c	FUNCTION_14	IF_1
0x4003391	            0x746b	                            je 0x40033fe	      1033	eelf_k1om.c	FUNCTION_14	IF_1
0x4003393	        0x4883c010	                           add rax, 0x10	      1102	eelf_k1om.c	FUNCTION_16	IF_1
0x4003397	          0x4989c4	                            mov r12, rax	      1102	eelf_k1om.c	FUNCTION_16	IF_1
0x400339a	            0x7462	                            je 0x40033fe	      1102	eelf_k1om.c	FUNCTION_16	IF_1
0x400339c	      0xba2b401000	                       mov edx, 0x10402b	      1110	eelf_k1om.c	FUNCTION_16	CALL_4
0x40033a1	      0xbe00000000	                              mov esi, 0	      1110	eelf_k1om.c	FUNCTION_16	CALL_4
0x40033a6	          0x4889df	                            mov rdi, rbx	      1110	eelf_k1om.c	FUNCTION_16	CALL_4
0x40033a9	      0xe800000000	                          call 0x40033ae	      1110	eelf_k1om.c	FUNCTION_16	CALL_4
0x40033ae	          0x4885c0	                           test rax, rax	      1111	eelf_k1om.c	FUNCTION_16	IF_2	CALL_5
0x40033b1	     0xf842b080000	                            je 0x4003be2	      1111	eelf_k1om.c	FUNCTION_16	IF_2	CALL_5
0x40033b7	    0x488b15000000	            mov rdx, qword [0x040033be] 	      1113	eelf_k1om.c	FUNCTION_16	IF_2	CALL_6
0x40033be	    0xc74070020000	               mov dword [rax + 0x70], 2	      1696	bfd.h	FUNCTION_33
0x40033c5	    0x488b35000000	            mov rsi, qword [0x040033cc] 	      1115	eelf_k1om.c	FUNCTION_16	IF_2
0x40033cc	    0x488b8af80000	            mov rcx, qword [rdx + 0xf8] 	      1114	eelf_k1om.c	FUNCTION_16	IF_2
0x40033d3	    0x488b89980c00	           mov rcx, qword [rcx + 0xc98] 	      1114	eelf_k1om.c	FUNCTION_16	IF_2
0x40033da	    0x48c741200000	               mov qword [rcx + 0x20], 0	      1114	eelf_k1om.c	FUNCTION_16	IF_2
0x40033e2	        0x48897128	             mov qword [rcx + 0x28], rsi	      1115	eelf_k1om.c	FUNCTION_16	IF_2
0x40033e6	        0x48894130	             mov qword [rcx + 0x30], rax	      1116	eelf_k1om.c	FUNCTION_16	IF_2
0x40033ea	    0x488b88e00000	            mov rcx, qword [rax + 0xe0] 	      1117	eelf_k1om.c	FUNCTION_16	IF_2	CALL_7
0x40033f1	    0xc74104070000	                  mov dword [rcx + 4], 7	      1117	eelf_k1om.c	FUNCTION_16	IF_2	CALL_7
0x40033f8	        0x4c896038	             mov qword [rax + 0x38], r12	      1118	eelf_k1om.c	FUNCTION_16	IF_2
0x40033fc	            0xeb39	                           jmp 0x4003437	      1118	eelf_k1om.c	FUNCTION_16	IF_2
0x40033fe	      0xba05000000	                              mov edx, 5	      1104	eelf_k1om.c	FUNCTION_16	IF_1	CALL_3
0x4003403	      0xbe00000000	                              mov esi, 0	      1104	eelf_k1om.c	FUNCTION_16	IF_1	CALL_3
0x4003408	            0x31ff	                            xor edi, edi	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x400340a	      0xe800000000	                          call 0x400340f	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x400340f	          0x4889c7	                            mov rdi, rax	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x4003412	            0x31c0	                            xor eax, eax	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x4003414	      0xe800000000	                          call 0x4003419	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x4003419	    0x488b3d000000	            mov rdi, qword [0x04003420] 	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x4003420	      0xe800000000	                          call 0x4003425	      1172	eelf_k1om.c	FUNCTION_17	IF_4	IF_6	CALL_9
0x4003425	    0x48c705000000	               mov qword [0x04003430], 0	      1173	eelf_k1om.c	FUNCTION_17	IF_4	IF_6
0x4003430	    0x488b15000000	            mov rdx, qword [0x04003437] 	      1173	eelf_k1om.c	FUNCTION_17	IF_4	IF_6
0x4003437	        0x488b4208	                mov rax, qword [rdx + 8]	      1177	eelf_k1om.c	FUNCTION_17	CALL_11
0x400343b	      0xbf00000000	                              mov edi, 0	      1177	eelf_k1om.c	FUNCTION_17	CALL_11
0x4003440	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1177	eelf_k1om.c	FUNCTION_17	CALL_11
0x4003447	    0xff9060030000	                call qword [rax + 0x360]	      1177	eelf_k1om.c	FUNCTION_17	CALL_11
0x400344d	     0xfb605000000	           movzx eax, byte [0x04003454] 	      1179	eelf_k1om.c	FUNCTION_17	IF_7	CALL_12
0x4003454	          0x83e003	                              and eax, 3	      1179	eelf_k1om.c	FUNCTION_17	IF_7	CALL_12
0x4003457	            0x3c02	                               cmp al, 2	      1179	eelf_k1om.c	FUNCTION_17	IF_7	CALL_12
0x4003459	     0xf849c040000	                            je 0x40038fb	      1179	eelf_k1om.c	FUNCTION_17	IF_7	CALL_12
0x400345f	    0xf60500000000	           test byte [0x04003466], 0x20 	      1195	eelf_k1om.c	FUNCTION_17	IF_9
0x4003466	     0xf8524010000	                           jne 0x4003590	      1195	eelf_k1om.c	FUNCTION_17	IF_9
0x400346c	    0x4c8b0d000000	              mov r9, qword [0x04003473]	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x4003473	          0x4d85c9	                             test r9, r9	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x4003476	     0xf8414010000	                            je 0x4003590	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x400347c	          0x4531d2	                          xor r10d, r10d	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x400347f	            0x31db	                            xor ebx, ebx	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x4003481	          0x4531e4	                          xor r12d, r12d	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x4003484	         0xf1f4000	                         nop dword [rax]	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x4003488	    0x498b81000100	            mov rax, qword [r9 + 0x100] 	      1205	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_10
0x400348f	        0xf6404810	           test byte [rax + 0x48], 0x10 	      1205	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_10
0x4003493	     0xf851d040000	                           jne 0x40038b6	      1205	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_10
0x4003499	    0x498b81900000	              mov rax, qword [r9 + 0x90]	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x40034a0	          0x4885c0	                           test rax, rax	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x40034a3	     0xf8407040000	                            je 0x40038b0	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x40034a9	          0x4531c0	                            xor r8d, r8d	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x40034ac	         0xf1f4000	                         nop dword [rax]	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x40034b0	    0x488178680000	               cmp qword [rax + 0x68], 0	      1212	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	IF_11
0x40034b8	          0x488b10	                    mov rdx, qword [rax]	      1210	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x40034bb	     0xf84bf030000	                            je 0x4003880	      1212	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	IF_11
0x40034c1	      0xbf00000000	                              mov edi, 0	      1214	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	IF_12
0x40034c6	      0xb90f000000	                            mov ecx, 0xf	      1214	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	IF_12
0x40034cb	          0x4889d6	                            mov rsi, rdx	      1214	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	IF_12
0x40034ce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1214	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	IF_12
0x40034d0	     0xf84ba030000	                            je 0x4003890	      1214	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	IF_12
0x40034d6	      0xbf00000000	                              mov edi, 0	      1216	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13	CALL_14
0x40034db	      0xb90a000000	                            mov ecx, 0xa	      1216	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13	CALL_14
0x40034e0	          0x4889d6	                            mov rsi, rdx	      1216	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13	CALL_14
0x40034e3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1216	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13	CALL_14
0x40034e5	     0xf8595030000	                           jne 0x4003880	      1216	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13	CALL_14
0x40034eb	      0x4883783808	               cmp qword [rax + 0x38], 8	      1216	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13	CALL_14
0x40034f0	     0xf868a030000	                           jbe 0x4003880	      1216	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13	CALL_14
0x40034f6	      0xba01000000	                              mov edx, 1	      1216	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13	CALL_14
0x40034fb	    0x41b801000000	                              mov r8d, 1	      1217	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13
0x4003501	     0xf1f80000000	                         nop dword [rax]	      1217	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	ELSE_1	IF_13
0x4003508	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x400350c	          0x4885c0	                           test rax, rax	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x400350f	            0x7404	                            je 0x4003515	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x4003511	            0x84d2	                             test dl, dl	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x4003513	            0x759b	                           jne 0x40034b0	      1208	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3
0x4003515	          0x4585c0	                           test r8d, r8d	      1220	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14
0x4003518	     0xf8492030000	                            je 0x40038b0	      1220	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14
0x400351e	      0xe973030000	                           jmp 0x4003896	      1220	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14
0x4003523	       0xf1f440000	                   nop dword [rax + rax]	      1220	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14
0x4003528	        0x4183f801	                              cmp r8d, 1	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x400352c	      0xbe00000000	                              mov esi, 0	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x4003531	      0xba05000000	                              mov edx, 5	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x4003536	        0x4d0f45cc	                          cmovne r9, r12	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x400353a	            0x31ff	                            xor edi, edi	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x400353c	          0x4d89cd	                             mov r13, r9	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x400353f	      0xe800000000	                          call 0x4003544	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x4003544	          0x4c89ee	                            mov rsi, r13	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x4003547	          0x4889c7	                            mov rdi, rax	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x400354a	            0x31c0	                            xor eax, eax	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x400354c	      0xe800000000	                          call 0x4003551	      1228	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16	CALL_16
0x4003551	          0x4d85e4	                           test r12, r12	      1247	eelf_k1om.c	FUNCTION_17	IF_9	IF_20
0x4003554	     0xf8407050000	                            je 0x4003a61	      1247	eelf_k1om.c	FUNCTION_17	IF_9	IF_20
0x400355a	      0x498b442408	                mov rax, qword [r12 + 8]	      1251	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	CALL_17
0x400355f	      0xbe00000000	                              mov esi, 0	      1252	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	CALL_18
0x4003564	          0x4c89e7	                            mov rdi, r12	      1252	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	CALL_18
0x4003567	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1253	eelf_k1om.c	FUNCTION_17	IF_9	IF_20
0x400356e	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1252	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	CALL_18
0x4003571	          0x83ca08	                               or edx, 8	      1252	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	CALL_18
0x4003574	      0xe800000000	                          call 0x4003579	      1252	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	CALL_18
0x4003579	          0x4885c0	                           test rax, rax	      1255	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	IF_21
0x400357c	     0xf84df040000	                            je 0x4003a61	      1255	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	IF_21
0x4003582	    0xc74070020000	               mov dword [rax + 0x70], 2	      1696	bfd.h	FUNCTION_33
0x4003589	    0x488985280100	           mov qword [rbp + 0x128], rax 	      1258	eelf_k1om.c	FUNCTION_17	IF_9	IF_20	IF_21
0x4003590	    0x488b3d000000	            mov rdi, qword [0x04003597] 	      1276	eelf_k1om.c	FUNCTION_17	CALL_22
0x4003597	      0xbe00000000	                              mov esi, 0	      1276	eelf_k1om.c	FUNCTION_17	CALL_22
0x400359c	      0xe800000000	                          call 0x40035a1	      1276	eelf_k1om.c	FUNCTION_17	CALL_22
0x40035a1	          0x4885c0	                           test rax, rax	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x40035a4	          0x4989c4	                            mov r12, rax	      1276	eelf_k1om.c	FUNCTION_17	CALL_22
0x40035a7	          0x4889c5	                            mov rbp, rax	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x40035aa	     0xf846d020000	                            je 0x400381d	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x40035b0	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1285	eelf_k1om.c	FUNCTION_17	FOR_4	IF_23
0x40035b4	          0x4885ff	                           test rdi, rdi	      1285	eelf_k1om.c	FUNCTION_17	FOR_4	IF_23
0x40035b7	            0x742b	                            je 0x40035e4	      1285	eelf_k1om.c	FUNCTION_17	FOR_4	IF_23
0x40035b9	      0xe800000000	                          call 0x40035be	      1286	eelf_k1om.c	FUNCTION_17	FOR_4	IF_23	CALL_23
0x40035be	            0xa801	                              test al, 1	      1286	eelf_k1om.c	FUNCTION_17	FOR_4	IF_23	CALL_23
0x40035c0	     0xf854a020000	                           jne 0x4003810	      1286	eelf_k1om.c	FUNCTION_17	FOR_4	IF_23	CALL_23
0x40035c6	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1291	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24
0x40035ca	          0x4885ff	                           test rdi, rdi	      1291	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24
0x40035cd	            0x7415	                            je 0x40035e4	      1291	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24
0x40035cf	     0xfb705000000	           movzx eax, word [0x040035d6] 	      1292	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24
0x40035d6	        0x66258001	                           and ax, 0x180	      1292	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24
0x40035da	        0x6683c080	              add ax, 0xffffffffffffff80	      1292	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24
0x40035de	     0xf847f020000	                            je 0x4003863	      1292	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24
0x40035e4	          0x4939ec	                            cmp r12, rbp	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x40035e7	          0x4c89e3	                            mov rbx, r12	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x40035ea	            0x7433	                            je 0x400361f	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x40035ec	         0xf1f4000	                         nop dword [rax]	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x40035f0	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1298	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25
0x40035f4	          0x4885ff	                           test rdi, rdi	      1298	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25
0x40035f7	            0x7409	                            je 0x4003602	      1298	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25
0x40035f9	      0xe800000000	                          call 0x40035fe	      1299	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25	CALL_25
0x40035fe	            0xa801	                              test al, 1	      1299	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25	CALL_25
0x4003600	            0x7515	                           jne 0x4003617	      1299	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25	CALL_25
0x4003602	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      1300	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25	CALL_26
0x4003606	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1300	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25	CALL_26
0x400360a	      0xe800000000	                          call 0x400360f	      1300	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25	CALL_26
0x400360f	            0x85c0	                           test eax, eax	      1300	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25	CALL_26
0x4003611	     0xf84f9010000	                            je 0x4003810	      1300	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5	IF_25	CALL_26
0x4003617	          0x488b1b	                    mov rbx, qword [rbx]	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x400361a	          0x4839eb	                            cmp rbx, rbp	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x400361d	            0x75d1	                           jne 0x40035f0	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x400361f	      0xbf00000000	                              mov edi, 0	      1308	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_27
0x4003624	    0x48892d000000	            mov qword [0x0400362b], rbp 	      1306	eelf_k1om.c	FUNCTION_17	FOR_4
0x400362b	    0x48c705000000	               mov qword [0x04003636], 0	      1307	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003636	      0xe800000000	                          call 0x400363b	      1308	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_27
0x400363b	    0x488b05000000	            mov rax, qword [0x04003642] 	      1309	eelf_k1om.c	FUNCTION_17	FOR_4	IF_27
0x4003642	          0x4885c0	                           test rax, rax	      1309	eelf_k1om.c	FUNCTION_17	FOR_4	IF_27
0x4003645	            0x7419	                            je 0x4003660	      1309	eelf_k1om.c	FUNCTION_17	FOR_4	IF_27
0x4003647	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1310	eelf_k1om.c	FUNCTION_17	FOR_4	IF_27	CALL_28
0x400364b	      0xe800000000	                          call 0x4003650	      1310	eelf_k1om.c	FUNCTION_17	FOR_4	IF_27	CALL_28
0x4003650	            0xa801	                              test al, 1	      1310	eelf_k1om.c	FUNCTION_17	FOR_4	IF_27	CALL_28
0x4003652	     0xf84b8010000	                            je 0x4003810	      1310	eelf_k1om.c	FUNCTION_17	FOR_4	IF_27	CALL_28
0x4003658	     0xf1f84000000	                   nop dword [rax + rax]	      1310	eelf_k1om.c	FUNCTION_17	FOR_4	IF_27	CALL_28
0x4003660	    0x8b0d00000000	            mov ecx, dword [0x04003666] 	      1317	eelf_k1om.c	FUNCTION_17	FOR_4	IF_28
0x4003666	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1314	eelf_k1om.c	FUNCTION_17	FOR_4
0x400366a	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	      1315	eelf_k1om.c	FUNCTION_17	FOR_4
0x400366e	            0x85c9	                           test ecx, ecx	      1317	eelf_k1om.c	FUNCTION_17	FOR_4	IF_28
0x4003670	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1314	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003675	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      1316	eelf_k1om.c	FUNCTION_17	FOR_4
0x400367a	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      1315	eelf_k1om.c	FUNCTION_17	FOR_4
0x400367f	     0xf855b040000	                           jne 0x4003ae0	      1317	eelf_k1om.c	FUNCTION_17	FOR_4	IF_28
0x4003685	    0x488b05000000	            mov rax, qword [0x0400368c] 	      1322	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29
0x400368c	          0x4885c0	                           test rax, rax	      1322	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29
0x400368f	            0x7420	                            je 0x40036b1	      1322	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29
0x4003691	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1324	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29
0x4003695	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1325	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29	IF_30	CALL_31
0x400369a	      0xbe01000000	                              mov esi, 1	      1325	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29	IF_30	CALL_31
0x400369f	      0x4889442428	             mov qword [rsp + 0x28], rax	      1324	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29
0x40036a4	      0xe8f7e8ffff	         call sym.gldelf_k1om_try_needed	      1325	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29	IF_30	CALL_31
0x40036a9	            0x85c0	                           test eax, eax	      1325	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29	IF_30	CALL_31
0x40036ab	     0xf855f010000	                           jne 0x4003810	      1325	eelf_k1om.c	FUNCTION_17	FOR_4	IF_29	IF_30	CALL_31
0x40036b1	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x40036b9	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	      1297	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_5
0x40036be	    0x488b3d000000	            mov rdi, qword [0x040036c5] 	      1348	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_31	CALL_32
0x40036c5	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1348	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_31	CALL_32
0x40036ca	          0x4489f2	                           mov edx, r14d	      1348	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_31	CALL_32
0x40036cd	      0xe89eebffff	      call sym.gldelf_k1om_search_needed	      1348	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_31	CALL_32
0x40036d2	            0x85c0	                           test eax, eax	      1348	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_31	CALL_32
0x40036d4	     0xf8536010000	                           jne 0x4003810	      1348	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_31	CALL_32
0x40036da	    0x488b3d000000	            mov rdi, qword [0x040036e1] 	      1351	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6
0x40036e1	          0x4885ff	                           test rdi, rdi	      1352	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32
0x40036e4	     0xf84e6030000	                            je 0x4003ad0	      1352	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32
0x40036ea	      0xe8a1e2ffff	        call sym.gldelf_k1om_add_sysroot	      1354	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_33
0x40036ef	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1355	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_34
0x40036f4	          0x4889c3	                            mov rbx, rax	      1354	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_33
0x40036f7	          0x4489f2	                           mov edx, r14d	      1355	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_34
0x40036fa	          0x4889c7	                            mov rdi, rax	      1355	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_34
0x40036fd	      0xe86eebffff	      call sym.gldelf_k1om_search_needed	      1355	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_34
0x4003702	          0x4889df	                            mov rdi, rbx	      1356	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_35
0x4003705	          0x4189c5	                           mov r13d, eax	      1355	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_34
0x4003708	      0xe800000000	                          call 0x400370d	      1356	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	CALL_35
0x400370d	          0x4585ed	                         test r13d, r13d	      1357	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	IF_33
0x4003710	     0xf85fa000000	                           jne 0x4003810	      1357	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_32	IF_33
0x4003716	    0x48833d000000	               cmp qword [0x0400371e], 0	      1360	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34
0x400371e	     0xf846d030000	                            je 0x4003a91	      1360	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34
0x4003724	      0xbf00000000	                              mov edi, 0	      1368	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	CALL_38
0x4003729	      0xe800000000	                          call 0x400372e	      1368	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	CALL_38
0x400372e	          0x4885c0	                           test rax, rax	      1369	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_36
0x4003731	            0x7419	                            je 0x400374c	      1369	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_36
0x4003733	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1370	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_36	CALL_39
0x4003737	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1370	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_36	CALL_39
0x400373c	          0x4889c7	                            mov rdi, rax	      1370	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_36	CALL_39
0x400373f	      0xe82cebffff	      call sym.gldelf_k1om_search_needed	      1370	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_36	CALL_39
0x4003744	            0x85c0	                           test eax, eax	      1370	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_36	CALL_39
0x4003746	     0xf85c4000000	                           jne 0x4003810	      1370	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_36	CALL_39
0x400374c	    0x488b3d000000	            mov rdi, qword [0x04003753] 	      1373	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	CALL_40
0x4003753	      0xbe00000000	                              mov esi, 0	      1373	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	CALL_40
0x4003758	      0xe800000000	                          call 0x400375d	      1373	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	CALL_40
0x400375d	          0x4885c0	                           test rax, rax	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x4003760	          0x4889c3	                            mov rbx, rax	      1373	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	CALL_40
0x4003763	            0x7528	                           jne 0x400378d	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x4003765	      0xe91a020000	                           jmp 0x4003984	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x400376a	    0x660f1f440000	                    nop word [rax + rax]	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x4003770	          0x4c89ef	                            mov rdi, r13	      1380	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_43
0x4003773	      0xe800000000	                          call 0x4003778	      1380	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_43
0x4003778	          0x488b1b	                    mov rbx, qword [rbx]	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x400377b	          0x4885db	                           test rbx, rbx	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x400377e	     0xf84f7010000	                            je 0x400397b	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x4003784	          0x4584f6	                         test r14b, r14b	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x4003787	     0xf84ee010000	                            je 0x400397b	      1374	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7
0x400378d	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1376	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_41
0x4003791	          0x4531ff	                          xor r15d, r15d	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x4003794	    0x41be01000000	                             mov r14d, 1	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x400379a	      0xe8f1e1ffff	        call sym.gldelf_k1om_add_sysroot	      1376	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_41
0x400379f	          0x4989c5	                            mov r13, rax	      1376	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_41
0x40037a2	        0x488b4508	                mov rax, qword [rbp + 8]	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037a6	        0x48394308	                cmp qword [rbx + 8], rax	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037aa	            0x75c4	                           jne 0x4003770	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037ac	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037b0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037b5	          0x4c89ef	                            mov rdi, r13	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037b8	          0x4531ff	                          xor r15d, r15d	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037bb	      0xe8b0eaffff	      call sym.gldelf_k1om_search_needed	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037c0	            0x85c0	                           test eax, eax	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037c2	        0x410f95c7	                              setne r15b	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037c6	        0x410f94c6	                               sete r14b	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037ca	            0xeba4	                           jmp 0x4003770	      1378	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_7	CALL_42
0x40037cc	      0x8344240c01	                add dword [rsp + 0xc], 1	      1340	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6
0x40037d1	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1340	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6
0x40037d5	          0x83f802	                              cmp eax, 2	      1340	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6
0x40037d8	     0xf85ab020000	                           jne 0x4003a89	      1340	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6
0x40037de	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x40037e2	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x40037e6	      0xba05000000	                              mov edx, 5	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x40037eb	      0xbe00000000	                              mov esi, 0	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x40037f0	            0x31ff	                            xor edi, edi	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x40037f2	      0xe800000000	                          call 0x40037f7	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x40037f7	          0x4c89ea	                            mov rdx, r13	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x40037fa	          0x4889c7	                            mov rdi, rax	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x40037fd	          0x4889de	                            mov rsi, rbx	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x4003800	            0x31c0	                            xor eax, eax	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x4003802	      0xe800000000	                          call 0x4003807	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x4003807	    0x660f1f840000	                    nop word [rax + rax]	      1409	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_51
0x4003810	        0x488b6d00	                    mov rbp, qword [rbp]	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003814	          0x4885ed	                           test rbp, rbp	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003817	     0xf8593fdffff	                           jne 0x40035b0	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x400381d	     0xfb605000000	           movzx eax, byte [0x04003824] 	      1414	eelf_k1om.c	FUNCTION_17	IF_43
0x4003824	          0x83e0c0	                     and eax, 0xffffffc0	      1414	eelf_k1om.c	FUNCTION_17	IF_43
0x4003827	            0x3c80	                            cmp al, 0x80	      1414	eelf_k1om.c	FUNCTION_17	IF_43
0x4003829	     0xf85a1faffff	                           jne 0x40032d0	      1414	eelf_k1om.c	FUNCTION_17	IF_43
0x400382f	            0x31ff	                            xor edi, edi	      1415	eelf_k1om.c	FUNCTION_17	IF_43	IF_44	CALL_52
0x4003831	      0xbe00000000	                              mov esi, 0	      1415	eelf_k1om.c	FUNCTION_17	IF_43	IF_44	CALL_52
0x4003836	      0xe800000000	                          call 0x400383b	      1415	eelf_k1om.c	FUNCTION_17	IF_43	IF_44	CALL_52
0x400383b	            0x85c0	                           test eax, eax	      1415	eelf_k1om.c	FUNCTION_17	IF_43	IF_44	CALL_52
0x400383d	     0xf858dfaffff	                           jne 0x40032d0	      1415	eelf_k1om.c	FUNCTION_17	IF_43	IF_44	CALL_52
0x4003843	            0x31ff	                            xor edi, edi	      1416	eelf_k1om.c	FUNCTION_17	IF_43	IF_44
0x4003845	      0xba05000000	                              mov edx, 5	      1416	eelf_k1om.c	FUNCTION_17	IF_43	IF_44
0x400384a	      0xbe00000000	                              mov esi, 0	      1416	eelf_k1om.c	FUNCTION_17	IF_43	IF_44
0x400384f	      0xe800000000	                          call 0x4003854	      1416	eelf_k1om.c	FUNCTION_17	IF_43	IF_44
0x4003854	          0x4889c7	                            mov rdi, rax	      1416	eelf_k1om.c	FUNCTION_17	IF_43	IF_44
0x4003857	            0x31c0	                            xor eax, eax	      1416	eelf_k1om.c	FUNCTION_17	IF_43	IF_44
0x4003859	      0xe800000000	                          call 0x400385e	      1416	eelf_k1om.c	FUNCTION_17	IF_43	IF_44
0x400385e	      0xe96dfaffff	                           jmp 0x40032d0	      1416	eelf_k1om.c	FUNCTION_17	IF_43	IF_44
0x4003863	      0xe800000000	                          call 0x4003868	      1293	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24	CALL_24
0x4003868	            0xa804	                              test al, 4	      1293	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24	CALL_24
0x400386a	     0xf8474fdffff	                            je 0x40035e4	      1293	eelf_k1om.c	FUNCTION_17	FOR_4	IF_24	CALL_24
0x4003870	        0x488b6d00	                    mov rbp, qword [rbp]	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003874	          0x4885ed	                           test rbp, rbp	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003877	     0xf8533fdffff	                           jne 0x40035b0	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x400387d	            0xeb9e	                           jmp 0x400381d	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x400387f	              0x90	                                     nop	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003880	        0x4183f801	                              cmp r8d, 1	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003884	           0xf9ec2	                                setle dl	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003887	      0xe97cfcffff	                           jmp 0x4003508	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x400388c	         0xf1f4000	                         nop dword [rax]	      1277	eelf_k1om.c	FUNCTION_17	FOR_4
0x4003890	    0x41b802000000	                              mov r8d, 2	      1215	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	FOR_3	IF_12
0x4003896	          0x4585d2	                         test r10d, r10d	      1222	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_15
0x4003899	            0x7409	                            je 0x40038a4	      1222	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_15
0x400389b	          0x4539c2	                           cmp r10d, r8d	      1226	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16
0x400389e	     0xf8584fcffff	                           jne 0x4003528	      1226	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	ELSE_2	IF_16
0x40038a4	          0x4d85e4	                           test r12, r12	      1234	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17
0x40038a7	          0x4589c2	                           mov r10d, r8d	      1234	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17
0x40038aa	     0xf8492000000	                            je 0x4003942	      1234	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17
0x40038b0	        0x4183fa02	                             cmp r10d, 2	      1244	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_19
0x40038b4	            0x742a	                            je 0x40038e0	      1244	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_19
0x40038b6	    0x4d8b89f00000	               mov r9, qword [r9 + 0xf0]	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x40038bd	          0x4d85c9	                             test r9, r9	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x40038c0	     0xf85c2fbffff	                           jne 0x4003488	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x40038c6	      0xe986fcffff	                           jmp 0x4003551	      1201	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2
0x40038cb	        0x498b4108	                 mov rax, qword [r9 + 8]	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x40038cf	      0xbb01000000	                              mov ebx, 1	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x40038d4	        0x83780805	                  cmp dword [rax + 8], 5	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x40038d8	        0x4d0f44e1	                           cmove r12, r9	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x40038dc	         0xf1f4000	                         nop dword [rax]	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x40038e0	     0xfb605000000	           movzx eax, byte [0x040038e7] 	      1245	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_19
0x40038e7	    0x41ba02000000	                             mov r10d, 2	      1245	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_19
0x40038ed	          0x83e03f	                           and eax, 0x3f	      1245	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_19
0x40038f0	          0x83c880	                      or eax, 0xffffff80	      1245	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_19
0x40038f3	    0x880500000000	               mov byte [0x040038f9], al	      1245	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_19
0x40038f9	            0xebbb	                           jmp 0x40038b6	      1245	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_19
0x40038fb	     0xfb60d000000	           movzx ecx, byte [0x04003902] 	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x4003902	     0xfb605000000	           movzx eax, byte [0x04003909] 	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x4003909	            0x89ca	                            mov edx, ecx	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x400390b	            0xf7d0	                                 not eax	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x400390d	          0xc0ea07	                               shr dl, 7	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x4003910	          0x83e001	                              and eax, 1	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x4003913	           0xfb6d2	                           movzx edx, dl	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x4003916	            0x39c2	                            cmp edx, eax	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x4003918	     0xf85b2f9ffff	                           jne 0x40032d0	      1181	eelf_k1om.c	FUNCTION_17	IF_7	IF_8
0x400391e	          0x83e180	                     and ecx, 0xffffff80	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x4003921	    0x488b3d000000	            mov rdi, qword [0x04003928] 	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x4003928	      0xbe00000000	                              mov esi, 0	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x400392d	          0x80f901	                               cmp cl, 1	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x4003930	            0x19d2	                            sbb edx, edx	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x4003932	          0x83e2f0	                     and edx, 0xfffffff0	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x4003935	          0x83c218	                           add edx, 0x18	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x4003938	      0xe800000000	                          call 0x400393d	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x400393d	      0xe98ef9ffff	                           jmp 0x40032d0	      1188	eelf_k1om.c	FUNCTION_17	IF_7	IF_8	CALL_13
0x4003942	        0x4183f802	                              cmp r8d, 2	      1235	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17
0x4003946	     0xf847fffffff	                            je 0x40038cb	      1235	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17
0x400394c	    0xf60500000000	           test byte [0x04003953], 0xc0 	      1235	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17
0x4003953	    0x41ba01000000	                             mov r10d, 1	      1235	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17
0x4003959	     0xf8457ffffff	                            je 0x40038b6	      1235	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17
0x400395f	        0x498b4108	                 mov rax, qword [r9 + 8]	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x4003963	    0x41ba01000000	                             mov r10d, 1	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x4003969	      0xbb01000000	                              mov ebx, 1	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x400396e	        0x83780805	                  cmp dword [rax + 8], 5	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x4003972	        0x4d0f44e1	                           cmove r12, r9	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x4003976	      0xe93bffffff	                           jmp 0x40038b6	      1237	eelf_k1om.c	FUNCTION_17	IF_9	FOR_2	IF_14	IF_17	IF_18
0x400397b	          0x4585ff	                         test r15d, r15d	      1382	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_37
0x400397e	     0xf858cfeffff	                           jne 0x4003810	      1382	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_37
0x4003984	    0x8b1500000000	            mov edx, dword [0x0400398a] 	       938	eelf_k1om.c	FUNCTION_12	IF_1
0x400398a	    0x488b1d000000	            mov rbx, qword [0x04003991] 	       938	eelf_k1om.c	FUNCTION_12	IF_1
0x4003991	            0x85d2	                           test edx, edx	       938	eelf_k1om.c	FUNCTION_12	IF_1
0x4003993	     0xf846d010000	                            je 0x4003b06	       938	eelf_k1om.c	FUNCTION_12	IF_1
0x4003999	          0x4885db	                           test rbx, rbx	       964	eelf_k1om.c	FUNCTION_12	IF_4
0x400399c	            0x742b	                            je 0x40039c9	       964	eelf_k1om.c	FUNCTION_12	IF_4
0x400399e	        0x488b4508	                mov rax, qword [rbp + 8]	       968	eelf_k1om.c	FUNCTION_12
0x40039a2	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       970	eelf_k1om.c	FUNCTION_12	CALL_9
0x40039a6	      0x488d742430	                   lea rsi, [rsp + 0x30]	       970	eelf_k1om.c	FUNCTION_12	CALL_9
0x40039ab	          0x4889df	                            mov rdi, rbx	       970	eelf_k1om.c	FUNCTION_12	CALL_9
0x40039ae	      0x4889442430	             mov qword [rsp + 0x30], rax	       968	eelf_k1om.c	FUNCTION_12
0x40039b3	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       969	eelf_k1om.c	FUNCTION_12
0x40039b7	      0x4889442438	             mov qword [rsp + 0x38], rax	       969	eelf_k1om.c	FUNCTION_12
0x40039bc	      0xe8afe8ffff	      call sym.gldelf_k1om_search_needed	       970	eelf_k1om.c	FUNCTION_12	CALL_9
0x40039c1	            0x85c0	                           test eax, eax	      1385	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_38	CALL_44
0x40039c3	     0xf8547feffff	                           jne 0x4003810	      1385	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_38	CALL_44
0x40039c9	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1388	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	CALL_45
0x40039cd	      0xe800000000	                          call 0x40039d2	      1388	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	CALL_45
0x40039d2	    0x488b1d000000	            mov rbx, qword [0x040039d9] 	      1389	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8
0x40039d9	          0x4885db	                           test rbx, rbx	      1389	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8
0x40039dc	     0xf84eafdffff	                            je 0x40037cc	      1389	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8
0x40039e2	        0x4c8d6802	                      lea r13, [rax + 2]	      1395	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_47
0x40039e6	            0xeb14	                           jmp 0x40039fc	      1395	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_47
0x40039e8	     0xf1f84000000	                   nop dword [rax + rax]	      1395	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_47
0x40039f0	          0x488b1b	                    mov rbx, qword [rbx]	      1389	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8
0x40039f3	          0x4885db	                           test rbx, rbx	      1389	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8
0x40039f6	     0xf84d0fdffff	                            je 0x40037cc	      1389	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8
0x40039fc	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1393	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	IF_39
0x40039ff	            0x85c0	                           test eax, eax	      1393	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	IF_39
0x4003a01	            0x75ed	                           jne 0x40039f0	      1393	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	IF_39
0x4003a03	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1395	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_47
0x4003a07	      0xe800000000	                          call 0x4003a0c	      1395	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_47
0x4003a0c	      0x498d7c0500	                    lea rdi, [r13 + rax]	      1395	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_47
0x4003a11	      0xe800000000	                          call 0x4003a16	      1395	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_47
0x4003a16	        0x4c8b4d10	              mov r9, qword [rbp + 0x10]	        33	stdio2.h	FUNCTION_35	CALL_1
0x4003a1a	        0x4c8b4308	                 mov r8, qword [rbx + 8]	        33	stdio2.h	FUNCTION_35	CALL_1
0x4003a1e	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_35	CALL_1
0x4003a21	          0x4989c7	                            mov r15, rax	      1395	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_47
0x4003a24	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_35	CALL_1
0x4003a29	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_35	CALL_1
0x4003a30	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_35	CALL_1
0x4003a35	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_35	CALL_1
0x4003a37	      0xe800000000	                          call 0x4003a3c	        33	stdio2.h	FUNCTION_35	CALL_1
0x4003a3c	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1398	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	IF_40	CALL_48
0x4003a40	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1398	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	IF_40	CALL_48
0x4003a45	      0x4c897c2428	             mov qword [rsp + 0x28], r15	      1397	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8
0x4003a4a	      0xe851e5ffff	         call sym.gldelf_k1om_try_needed	      1398	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	IF_40	CALL_48
0x4003a4f	            0x85c0	                           test eax, eax	      1398	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	IF_40	CALL_48
0x4003a51	     0xf85b9fdffff	                           jne 0x4003810	      1398	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	IF_40	CALL_48
0x4003a57	          0x4c89ff	                            mov rdi, r15	      1400	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_49
0x4003a5a	      0xe800000000	                          call 0x4003a5f	      1400	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_49
0x4003a5f	            0xeb8f	                           jmp 0x40039f0	      1400	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	FOR_8	CALL_49
0x4003a61	            0x85db	                           test ebx, ebx	      1262	eelf_k1om.c	FUNCTION_17	IF_9	IF_22
0x4003a63	     0xf8427fbffff	                            je 0x4003590	      1262	eelf_k1om.c	FUNCTION_17	IF_9	IF_22
0x4003a69	            0x31ff	                            xor edi, edi	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a6b	      0xba05000000	                              mov edx, 5	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a70	      0xbe00000000	                              mov esi, 0	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a75	      0xe800000000	                          call 0x4003a7a	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a7a	          0x4889c7	                            mov rdi, rax	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a7d	            0x31c0	                            xor eax, eax	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a7f	      0xe800000000	                          call 0x4003a84	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a84	      0xe907fbffff	                           jmp 0x4003590	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a89	          0x4189c6	                           mov r14d, eax	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a8c	      0xe92dfcffff	                           jmp 0x40036be	      1263	eelf_k1om.c	FUNCTION_17	IF_9	IF_22	CALL_21
0x4003a91	    0x48833d000000	               cmp qword [0x04003a99], 0	      1361	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34
0x4003a99	     0xf8585fcffff	                           jne 0x4003724	      1361	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34
0x4003a9f	      0xbf00000000	                              mov edi, 0	      1363	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	CALL_36
0x4003aa4	      0xe800000000	                          call 0x4003aa9	      1363	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	CALL_36
0x4003aa9	          0x4885c0	                           test rax, rax	      1364	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35
0x4003aac	     0xf8472fcffff	                            je 0x4003724	      1364	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35
0x4003ab2	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1365	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35	CALL_37
0x4003ab6	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1365	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35	CALL_37
0x4003abb	          0x4889c7	                            mov rdi, rax	      1365	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35	CALL_37
0x4003abe	      0xe8ade7ffff	      call sym.gldelf_k1om_search_needed	      1365	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35	CALL_37
0x4003ac3	            0x85c0	                           test eax, eax	      1365	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35	CALL_37
0x4003ac5	     0xf8459fcffff	                            je 0x4003724	      1365	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35	CALL_37
0x4003acb	      0xe940fdffff	                           jmp 0x4003810	      1365	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34	IF_35	CALL_37
0x4003ad0	    0x48833d000000	               cmp qword [0x04003ad8], 0	      1360	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34
0x4003ad8	     0xf8546fcffff	                           jne 0x4003724	      1360	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34
0x4003ade	            0xebbf	                           jmp 0x4003a9f	      1360	eelf_k1om.c	FUNCTION_17	FOR_4	FOR_6	IF_34
0x4003ae0	            0x31ff	                            xor edi, edi	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003ae2	      0xba05000000	                              mov edx, 5	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003ae7	      0xbe00000000	                              mov esi, 0	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003aec	      0xe800000000	                          call 0x4003af1	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003af1	          0x4889da	                            mov rdx, rbx	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003af4	          0x4889c7	                            mov rdi, rax	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003af7	          0x4c89ee	                            mov rsi, r13	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003afa	            0x31c0	                            xor eax, eax	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003afc	      0xe800000000	                          call 0x4003b01	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003b01	      0xe97ffbffff	                           jmp 0x4003685	      1318	eelf_k1om.c	FUNCTION_17	FOR_4	CALL_30
0x4003b06	    0x488b3d000000	            mov rdi, qword [0x04003b0d] 	       945	eelf_k1om.c	FUNCTION_12	IF_1	CALL_1
0x4003b0d	            0x31d2	                            xor edx, edx	       945	eelf_k1om.c	FUNCTION_12	IF_1	CALL_1
0x4003b0f	      0xbe00000000	                              mov esi, 0	       945	eelf_k1om.c	FUNCTION_12	IF_1	CALL_1
0x4003b14	            0x31c0	                            xor eax, eax	       945	eelf_k1om.c	FUNCTION_12	IF_1	CALL_1
0x4003b16	    0x48c744243000	               mov qword [rsp + 0x30], 0	       943	eelf_k1om.c	FUNCTION_12	IF_1
0x4003b1f	    0x48c744244000	               mov qword [rsp + 0x40], 0	       944	eelf_k1om.c	FUNCTION_12	IF_1
0x4003b28	    0x48c744243800	               mov qword [rsp + 0x38], 0	       944	eelf_k1om.c	FUNCTION_12	IF_1
0x4003b31	      0xe800000000	                          call 0x4003b36	       945	eelf_k1om.c	FUNCTION_12	IF_1	CALL_1
0x4003b36	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       947	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x4003b3b	          0x4889c6	                            mov rsi, rax	       947	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x4003b3e	          0x4889c3	                            mov rbx, rax	       945	eelf_k1om.c	FUNCTION_12	IF_1	CALL_1
0x4003b41	      0xe82adfffff	   call sym.gldelf_k1om_parse_ld_so_conf	       947	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x4003b46	            0x85c0	                           test eax, eax	       947	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x4003b48	            0x752d	                           jne 0x4003b77	       947	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x4003b4a	          0x4889df	                            mov rdi, rbx	       949	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_3
0x4003b4d	      0xe800000000	                          call 0x4003b52	       949	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_3
0x4003b52	    0x488b3d000000	            mov rdi, qword [0x04003b59] 	       950	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4003b59	      0xbe00000000	                              mov esi, 0	       950	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4003b5e	            0x31d2	                            xor edx, edx	       950	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4003b60	            0x31c0	                            xor eax, eax	       950	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4003b62	      0xe800000000	                          call 0x4003b67	       950	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4003b67	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       952	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4003b6c	          0x4889c6	                            mov rsi, rax	       952	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4003b6f	          0x4889c3	                            mov rbx, rax	       950	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_4
0x4003b72	      0xe8f9deffff	   call sym.gldelf_k1om_parse_ld_so_conf	       952	eelf_k1om.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4003b77	          0x4889df	                            mov rdi, rbx	       954	eelf_k1om.c	FUNCTION_12	IF_1	CALL_6
0x4003b7a	      0xe800000000	                          call 0x4003b7f	       954	eelf_k1om.c	FUNCTION_12	IF_1	CALL_6
0x4003b7f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       956	eelf_k1om.c	FUNCTION_12	IF_1	IF_3
0x4003b84	    0x488b1d000000	            mov rbx, qword [0x04003b8b] 	       956	eelf_k1om.c	FUNCTION_12	IF_1	IF_3
0x4003b8b	          0x4885ff	                           test rdi, rdi	       956	eelf_k1om.c	FUNCTION_12	IF_1	IF_3
0x4003b8e	            0x7419	                            je 0x4003ba9	       956	eelf_k1om.c	FUNCTION_12	IF_1	IF_3
0x4003b90	      0xe8fbddffff	        call sym.gldelf_k1om_add_sysroot	       958	eelf_k1om.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4003b95	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       959	eelf_k1om.c	FUNCTION_12	IF_1	IF_3	CALL_8
0x4003b9a	          0x4889c3	                            mov rbx, rax	       958	eelf_k1om.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4003b9d	    0x488905000000	            mov qword [0x04003ba4], rax 	       958	eelf_k1om.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4003ba4	      0xe800000000	                          call 0x4003ba9	       959	eelf_k1om.c	FUNCTION_12	IF_1	IF_3	CALL_8
0x4003ba9	    0xc70500000000	               mov dword [0x04003bb3], 1	       961	eelf_k1om.c	FUNCTION_12	IF_1
0x4003bb3	      0xe9e1fdffff	                           jmp 0x4003999	       961	eelf_k1om.c	FUNCTION_12	IF_1
0x4003bb8	    0x488b1d000000	            mov rbx, qword [0x04003bbf] 	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bbf	            0x31ff	                            xor edi, edi	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bc1	      0xba05000000	                              mov edx, 5	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bc6	      0xbe00000000	                              mov esi, 0	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bcb	      0xe800000000	                          call 0x4003bd0	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bd0	          0x4889de	                            mov rsi, rbx	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bd3	          0x4889c7	                            mov rdi, rax	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bd6	            0x31c0	                            xor eax, eax	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bd8	      0xe800000000	                          call 0x4003bdd	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003bdd	      0xe951f7ffff	                           jmp 0x4003333	      1152	eelf_k1om.c	FUNCTION_17	IF_2	IF_3	CALL_7
0x4003be2	      0xba05000000	                              mov edx, 5	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x4003be7	      0xbe00000000	                              mov esi, 0	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x4003bec	      0xe917f8ffff	                           jmp 0x4003408	      1122	eelf_k1om.c	FUNCTION_16	CALL_9
0x4003bf1	      0xe800000000	                          call 0x4003bf6	      1417	eelf_k1om.c	FUNCTION_17
gldelf_k1om_open_dynamic_archive	CALL,15:DO,0:IF,6:SWITCH,0:WHILE,0:FOR,0:ELSE,1:functions,0	113
0x4001130	            0x4157	                                push r15	      1715	eelf_k1om.c	FUNCTION_22
0x4001132	            0x4156	                                push r14	      1715	eelf_k1om.c	FUNCTION_22
0x4001134	            0x31c0	                            xor eax, eax	      1722	eelf_k1om.c	FUNCTION_22	IF_1
0x4001136	            0x4155	                                push r13	      1715	eelf_k1om.c	FUNCTION_22
0x4001138	            0x4154	                                push r12	      1715	eelf_k1om.c	FUNCTION_22
0x400113a	              0x55	                                push rbp	      1715	eelf_k1om.c	FUNCTION_22
0x400113b	              0x53	                                push rbx	      1715	eelf_k1om.c	FUNCTION_22
0x400113c	        0x4883ec18	                           sub rsp, 0x18	      1715	eelf_k1om.c	FUNCTION_22
0x4001140	      0x440fb67a48	          movzx r15d, byte [rdx + 0x48] 	      1721	eelf_k1om.c	FUNCTION_22	IF_1
0x4001145	        0x41f6c701	                            test r15b, 1	      1721	eelf_k1om.c	FUNCTION_22	IF_1
0x4001149	     0xf84e1000000	                            je 0x4001230	      1721	eelf_k1om.c	FUNCTION_22	IF_1
0x400114f	        0x4c8b6a10	            mov r13, qword [rdx + 0x10] 	      1724	eelf_k1om.c	FUNCTION_22
0x4001153	          0x4989fe	                            mov r14, rdi	      1724	eelf_k1om.c	FUNCTION_22
0x4001156	        0x488b7e08	                mov rdi, qword [rsi + 8]	      1725	eelf_k1om.c	FUNCTION_22	CALL_2
0x400115a	          0x4889d3	                            mov rbx, rdx	      1725	eelf_k1om.c	FUNCTION_22	CALL_2
0x400115d	          0x4889f5	                            mov rbp, rsi	      1725	eelf_k1om.c	FUNCTION_22	CALL_2
0x4001160	      0xe800000000	                          call 0x4001165	      1725	eelf_k1om.c	FUNCTION_22	CALL_2
0x4001165	          0x4c89ef	                            mov rdi, r13	      1725	eelf_k1om.c	FUNCTION_22	CALL_2
0x4001168	          0x4989c4	                            mov r12, rax	      1725	eelf_k1om.c	FUNCTION_22	CALL_2
0x400116b	      0xe800000000	                          call 0x4001170	      1725	eelf_k1om.c	FUNCTION_22	CALL_2
0x4001170	          0x4901c4	                            add r12, rax	      1725	eelf_k1om.c	FUNCTION_22	CALL_2
0x4001173	        0x4183e702	                             and r15d, 2	      1726	eelf_k1om.c	FUNCTION_22	IF_2
0x4001177	     0xf85c3000000	                           jne 0x4001240	      1726	eelf_k1om.c	FUNCTION_22	IF_2
0x400117d	          0x4c89f7	                            mov rdi, r14	      1736	eelf_k1om.c	FUNCTION_22	ELSE_1	CALL_4
0x4001180	      0xe800000000	                          call 0x4001185	      1736	eelf_k1om.c	FUNCTION_22	ELSE_1	CALL_4
0x4001185	      0x498d7c0408	                lea rdi, [r12 + rax + 8]	      1742	eelf_k1om.c	FUNCTION_22	ELSE_1	CALL_7
0x400118a	      0xe800000000	                          call 0x400118f	      1742	eelf_k1om.c	FUNCTION_22	ELSE_1	CALL_7
0x400118f	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_35	CALL_1
0x4001193	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_35	CALL_1
0x4001196	          0x4989c4	                            mov r12, rax	      1742	eelf_k1om.c	FUNCTION_22	ELSE_1	CALL_7
0x4001199	            0x4156	                                push r14	        33	stdio2.h	FUNCTION_35	CALL_1
0x400119b	        0x4c8b4508	                 mov r8, qword [rbp + 8]	        33	stdio2.h	FUNCTION_35	CALL_1
0x400119f	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_35	CALL_1
0x40011a2	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_35	CALL_1
0x40011a7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_35	CALL_1
0x40011ae	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_35	CALL_1
0x40011b3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_35	CALL_1
0x40011b5	      0xe800000000	                          call 0x40011ba	        33	stdio2.h	FUNCTION_35	CALL_1
0x40011ba	              0x58	                                 pop rax	        33	stdio2.h	FUNCTION_35	CALL_1
0x40011bb	              0x5a	                                 pop rdx	        33	stdio2.h	FUNCTION_35	CALL_1
0x40011bc	          0x4889de	                            mov rsi, rbx	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x40011bf	          0x4c89e7	                            mov rdi, r12	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x40011c2	      0xe800000000	                          call 0x40011c7	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x40011c7	            0x85c0	                           test eax, eax	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x40011c9	     0xf84b3000000	                            je 0x4001282	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x40011cf	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1774	eelf_k1om.c	FUNCTION_22	IF_5	CALL_12
0x40011d3	        0x4c896310	             mov qword [rbx + 0x10], r12	      1759	eelf_k1om.c	FUNCTION_22
0x40011d7	      0xbe01000000	                              mov esi, 1	      1774	eelf_k1om.c	FUNCTION_22	IF_5	CALL_12
0x40011dc	      0xe800000000	                          call 0x40011e1	      1774	eelf_k1om.c	FUNCTION_22	IF_5	CALL_12
0x40011e1	            0x89c2	                            mov edx, eax	      1774	eelf_k1om.c	FUNCTION_22	IF_5	CALL_12
0x40011e3	      0xb801000000	                              mov eax, 1	      1787	eelf_k1om.c	FUNCTION_22
0x40011e8	            0x85d2	                           test edx, edx	      1774	eelf_k1om.c	FUNCTION_22	IF_5	CALL_12
0x40011ea	            0x7444	                            je 0x4001230	      1774	eelf_k1om.c	FUNCTION_22	IF_5	CALL_12
0x40011ec	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1775	eelf_k1om.c	FUNCTION_22	IF_5
0x40011f0	        0xf6424508	               test byte [rdx + 0x45], 8	      1775	eelf_k1om.c	FUNCTION_22	IF_5
0x40011f4	            0x743a	                            je 0x4001230	      1775	eelf_k1om.c	FUNCTION_22	IF_5
0x40011f6	         0xfb64348	           movzx eax, byte [rbx + 0x48] 	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x40011fa	            0x89c2	                            mov edx, eax	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x40011fc	          0x83e205	                              and edx, 5	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x40011ff	          0x80fa05	                               cmp dl, 5	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x4001202	            0x7413	                            je 0x4001217	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x4001204	      0xbef1060000	                          mov esi, 0x6f1	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x4001209	      0xbf00000000	                              mov edi, 0	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x400120e	      0xe800000000	                          call 0x4001213	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x4001213	         0xfb64348	           movzx eax, byte [rbx + 0x48] 	      1777	eelf_k1om.c	FUNCTION_22	IF_5	CALL_13
0x4001217	            0xa802	                              test al, 2	      1782	eelf_k1om.c	FUNCTION_22	IF_5	IF_6
0x4001219	     0xf8489000000	                            je 0x40012a8	      1782	eelf_k1om.c	FUNCTION_22	IF_5	IF_6
0x400121f	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1784	eelf_k1om.c	FUNCTION_22	IF_5	CALL_15
0x4001223	          0x4c89ee	                            mov rsi, r13	      1784	eelf_k1om.c	FUNCTION_22	IF_5	CALL_15
0x4001226	      0xe800000000	                          call 0x400122b	      1784	eelf_k1om.c	FUNCTION_22	IF_5	CALL_15
0x400122b	      0xb801000000	                              mov eax, 1	      1787	eelf_k1om.c	FUNCTION_22
0x4001230	        0x4883c418	                           add rsp, 0x18	      1788	eelf_k1om.c	FUNCTION_22
0x4001234	              0x5b	                                 pop rbx	      1788	eelf_k1om.c	FUNCTION_22
0x4001235	              0x5d	                                 pop rbp	      1788	eelf_k1om.c	FUNCTION_22
0x4001236	            0x415c	                                 pop r12	      1788	eelf_k1om.c	FUNCTION_22
0x4001238	            0x415d	                                 pop r13	      1788	eelf_k1om.c	FUNCTION_22
0x400123a	            0x415e	                                 pop r14	      1788	eelf_k1om.c	FUNCTION_22
0x400123c	            0x415f	                                 pop r15	      1788	eelf_k1om.c	FUNCTION_22
0x400123e	              0xc3	                                     ret	      1788	eelf_k1om.c	FUNCTION_22
0x400123f	              0x90	                                     nop	      1788	eelf_k1om.c	FUNCTION_22
0x4001240	      0x498d7c2402	                      lea rdi, [r12 + 2]	      1729	eelf_k1om.c	FUNCTION_22	IF_2	CALL_3
0x4001245	      0xe800000000	                          call 0x400124a	      1729	eelf_k1om.c	FUNCTION_22	IF_2	CALL_3
0x400124a	        0x4c8b4508	                 mov r8, qword [rbp + 8]	        33	stdio2.h	FUNCTION_35	CALL_1
0x400124e	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_35	CALL_1
0x4001251	          0x4989c4	                            mov r12, rax	      1729	eelf_k1om.c	FUNCTION_22	IF_2	CALL_3
0x4001254	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_35	CALL_1
0x4001257	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_35	CALL_1
0x400125c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_35	CALL_1
0x4001263	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_35	CALL_1
0x4001268	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_35	CALL_1
0x400126a	      0xe800000000	                          call 0x400126f	        33	stdio2.h	FUNCTION_35	CALL_1
0x400126f	          0x4889de	                            mov rsi, rbx	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x4001272	          0x4c89e7	                            mov rdi, r12	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x4001275	      0xe800000000	                          call 0x400127a	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x400127a	            0x85c0	                           test eax, eax	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x400127c	     0xf854dffffff	                           jne 0x40011cf	      1753	eelf_k1om.c	FUNCTION_22	IF_4	CALL_10
0x4001282	          0x4c89e7	                            mov rdi, r12	      1755	eelf_k1om.c	FUNCTION_22	IF_4	CALL_11
0x4001285	        0x8944240c	              mov dword [rsp + 0xc], eax	      1755	eelf_k1om.c	FUNCTION_22	IF_4	CALL_11
0x4001289	      0xe800000000	                          call 0x400128e	      1755	eelf_k1om.c	FUNCTION_22	IF_4	CALL_11
0x400128e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1756	eelf_k1om.c	FUNCTION_22	IF_4
0x4001292	        0x4883c418	                           add rsp, 0x18	      1788	eelf_k1om.c	FUNCTION_22
0x4001296	              0x5b	                                 pop rbx	      1788	eelf_k1om.c	FUNCTION_22
0x4001297	              0x5d	                                 pop rbp	      1788	eelf_k1om.c	FUNCTION_22
0x4001298	            0x415c	                                 pop r12	      1788	eelf_k1om.c	FUNCTION_22
0x400129a	            0x415d	                                 pop r13	      1788	eelf_k1om.c	FUNCTION_22
0x400129c	            0x415e	                                 pop r14	      1788	eelf_k1om.c	FUNCTION_22
0x400129e	            0x415f	                                 pop r15	      1788	eelf_k1om.c	FUNCTION_22
0x40012a0	              0xc3	                                     ret	      1788	eelf_k1om.c	FUNCTION_22
0x40012a1	     0xf1f80000000	                         nop dword [rax]	      1788	eelf_k1om.c	FUNCTION_22
0x40012a8	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1783	eelf_k1om.c	FUNCTION_22	IF_5	CALL_14
0x40012ac	      0xe800000000	                          call 0x40012b1	      1783	eelf_k1om.c	FUNCTION_22	IF_5	CALL_14
0x40012b1	          0x4989c5	                            mov r13, rax	      1783	eelf_k1om.c	FUNCTION_22	IF_5	CALL_14
0x40012b4	      0xe966ffffff	                           jmp 0x400121f	      1783	eelf_k1om.c	FUNCTION_22	IF_5	CALL_14
gldelf_k1om_find_statement_assignment	CALL,1:DO,0:IF,1:SWITCH,0:WHILE,0:FOR,0:ELSE,0:functions,0	6
0x4001800	        0x837f0801	                  cmp dword [rdi + 8], 1	      1482	eelf_k1om.c	FUNCTION_19	IF_1
0x4001804	            0x740a	                            je 0x4001810	      1482	eelf_k1om.c	FUNCTION_19	IF_1
0x4001806	            0xf3c3	                                     ret	      1482	eelf_k1om.c	FUNCTION_19	IF_1
0x4001808	     0xf1f84000000	                   nop dword [rax + rax]	      1482	eelf_k1om.c	FUNCTION_19	IF_1
0x4001810	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1483	eelf_k1om.c	FUNCTION_19	CALL_1
0x4001814	      0xe907ffffff	 jmp sym.gldelf_k1om_find_exp_assignment	      1483	eelf_k1om.c	FUNCTION_19	CALL_1
gldelf_k1om_add_sysroot	CALL,14:DO,0:IF,8:SWITCH,0:WHILE,0:FOR,2:ELSE,3:functions,0	69
0x4001990	            0x4157	                                push r15	       692	eelf_k1om.c	FUNCTION_9
0x4001992	            0x4156	                                push r14	       692	eelf_k1om.c	FUNCTION_9
0x4001994	            0x4155	                                push r13	       692	eelf_k1om.c	FUNCTION_9
0x4001996	            0x4154	                                push r12	       692	eelf_k1om.c	FUNCTION_9
0x4001998	              0x55	                                push rbp	       692	eelf_k1om.c	FUNCTION_9
0x4001999	              0x53	                                push rbx	       692	eelf_k1om.c	FUNCTION_9
0x400199a	          0x4889fd	                            mov rbp, rdi	       692	eelf_k1om.c	FUNCTION_9
0x400199d	            0x31db	                            xor ebx, ebx	       699	eelf_k1om.c	FUNCTION_9	FOR_1
0x400199f	        0x4883ec08	                              sub rsp, 8	       692	eelf_k1om.c	FUNCTION_9
0x40019a3	    0x488b3d000000	            mov rdi, qword [0x040019aa] 	       698	eelf_k1om.c	FUNCTION_9	CALL_2
0x40019aa	      0xe800000000	                          call 0x40019af	       698	eelf_k1om.c	FUNCTION_9	CALL_2
0x40019af	    0x440fbe250000	          movsx r12d, byte [0x040019b7] 	       698	eelf_k1om.c	FUNCTION_9	CALL_2
0x40019b7	          0x4989c5	                            mov r13, rax	       698	eelf_k1om.c	FUNCTION_9	CALL_2
0x40019ba	          0x4889ef	                            mov rdi, rbp	       698	eelf_k1om.c	FUNCTION_9	CALL_2
0x40019bd	            0xeb05	                           jmp 0x40019c4	       698	eelf_k1om.c	FUNCTION_9	CALL_2
0x40019bf	              0x90	                                     nop	       698	eelf_k1om.c	FUNCTION_9	CALL_2
0x40019c0	        0x488d7801	                      lea rdi, [rax + 1]	       718	eelf_k1om.c	FUNCTION_9	FOR_1
0x40019c4	          0x803f2f	                    cmp byte [rdi], 0x2f	       713	eelf_k1om.c	FUNCTION_9	FOR_1	IF_2	ELSE_1
0x40019c7	        0x4a8d042b	                    lea rax, [rbx + r13]	       713	eelf_k1om.c	FUNCTION_9	FOR_1	IF_2	ELSE_1
0x40019cb	          0x4489e6	                           mov esi, r12d	       715	eelf_k1om.c	FUNCTION_9	FOR_1	CALL_5
0x40019ce	        0x480f44d8	                          cmove rbx, rax	       713	eelf_k1om.c	FUNCTION_9	FOR_1	IF_2	ELSE_1
0x40019d2	      0xe800000000	                          call 0x40019d7	       715	eelf_k1om.c	FUNCTION_9	FOR_1	CALL_5
0x40019d7	          0x4885c0	                           test rax, rax	       716	eelf_k1om.c	FUNCTION_9	FOR_1	IF_4
0x40019da	            0x75e4	                           jne 0x40019c0	       716	eelf_k1om.c	FUNCTION_9	FOR_1	IF_4
0x40019dc	          0x4889ef	                            mov rdi, rbp	       721	eelf_k1om.c	FUNCTION_9	CALL_7
0x40019df	      0xe800000000	                          call 0x40019e4	       721	eelf_k1om.c	FUNCTION_9	CALL_7
0x40019e4	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	       721	eelf_k1om.c	FUNCTION_9	CALL_7
0x40019e9	      0xe800000000	                          call 0x40019ee	       721	eelf_k1om.c	FUNCTION_9	CALL_7
0x40019ee	    0x440fbe350000	          movsx r14d, byte [0x040019f6] 	       721	eelf_k1om.c	FUNCTION_9	CALL_7
0x40019f6	          0x4989c7	                            mov r15, rax	       721	eelf_k1om.c	FUNCTION_9	CALL_7
0x40019f9	          0x4989c4	                            mov r12, rax	       723	eelf_k1om.c	FUNCTION_9	FOR_2
0x40019fc	            0xeb2d	                           jmp 0x4001a2b	       723	eelf_k1om.c	FUNCTION_9	FOR_2
0x40019fe	            0x6690	                                     nop	       723	eelf_k1om.c	FUNCTION_9	FOR_2
0x4001a00	          0x4489f6	                           mov esi, r14d	       749	eelf_k1om.c	FUNCTION_9	FOR_2	CALL_12
0x4001a03	          0x4889ef	                            mov rdi, rbp	       749	eelf_k1om.c	FUNCTION_9	FOR_2	CALL_12
0x4001a06	      0xe800000000	                          call 0x4001a0b	       749	eelf_k1om.c	FUNCTION_9	FOR_2	CALL_12
0x4001a0b	          0x4885c0	                           test rax, rax	       750	eelf_k1om.c	FUNCTION_9	FOR_2	IF_8
0x4001a0e	            0x7443	                            je 0x4001a53	       750	eelf_k1om.c	FUNCTION_9	FOR_2	IF_8
0x4001a10	          0x4829e8	                            sub rax, rbp	       752	eelf_k1om.c	FUNCTION_9	FOR_2	IF_8
0x4001a13	          0x4889ee	                            mov rsi, rbp	       126	string3.h	FUNCTION_60	CALL_3
0x4001a16	          0x4c89e7	                            mov rdi, r12	       126	string3.h	FUNCTION_60	CALL_3
0x4001a19	        0x488d5801	                      lea rbx, [rax + 1]	       752	eelf_k1om.c	FUNCTION_9	FOR_2	IF_8
0x4001a1d	          0x4889da	                            mov rdx, rbx	       126	string3.h	FUNCTION_60	CALL_3
0x4001a20	          0x4901dc	                            add r12, rbx	       754	eelf_k1om.c	FUNCTION_9	FOR_2	IF_8
0x4001a23	          0x4801dd	                            add rbp, rbx	       755	eelf_k1om.c	FUNCTION_9	FOR_2	IF_8
0x4001a26	      0xe800000000	                          call 0x4001a2b	       126	string3.h	FUNCTION_60	CALL_3
0x4001a2b	        0x807d002f	                    cmp byte [rbp], 0x2f	       733	eelf_k1om.c	FUNCTION_9	FOR_2	IF_6	CALL_9
0x4001a2f	            0x75cf	                           jne 0x4001a00	       733	eelf_k1om.c	FUNCTION_9	FOR_2	IF_6	CALL_9
0x4001a31	    0x488b35000000	            mov rsi, qword [0x04001a38] 	       110	string3.h	FUNCTION_58	CALL_3
0x4001a38	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_58	CALL_3
0x4001a3b	          0x4d01ec	                            add r12, r13	       746	eelf_k1om.c	FUNCTION_9	FOR_2	IF_6	ELSE_2
0x4001a3e	      0xe800000000	                          call 0x4001a43	       110	string3.h	FUNCTION_58	CALL_3
0x4001a43	          0x4489f6	                           mov esi, r14d	       749	eelf_k1om.c	FUNCTION_9	FOR_2	CALL_12
0x4001a46	          0x4889ef	                            mov rdi, rbp	       749	eelf_k1om.c	FUNCTION_9	FOR_2	CALL_12
0x4001a49	      0xe800000000	                          call 0x4001a4e	       749	eelf_k1om.c	FUNCTION_9	FOR_2	CALL_12
0x4001a4e	          0x4885c0	                           test rax, rax	       750	eelf_k1om.c	FUNCTION_9	FOR_2	IF_8
0x4001a51	            0x75bd	                           jne 0x4001a10	       750	eelf_k1om.c	FUNCTION_9	FOR_2	IF_8
0x4001a53	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_58	CALL_3
0x4001a56	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_58	CALL_3
0x4001a59	      0xe800000000	                          call 0x4001a5e	       110	string3.h	FUNCTION_58	CALL_3
0x4001a5e	        0x4883c408	                              add rsp, 8	       765	eelf_k1om.c	FUNCTION_9
0x4001a62	          0x4c89f8	                            mov rax, r15	       765	eelf_k1om.c	FUNCTION_9
0x4001a65	              0x5b	                                 pop rbx	       765	eelf_k1om.c	FUNCTION_9
0x4001a66	              0x5d	                                 pop rbp	       765	eelf_k1om.c	FUNCTION_9
0x4001a67	            0x415c	                                 pop r12	       765	eelf_k1om.c	FUNCTION_9
0x4001a69	            0x415d	                                 pop r13	       765	eelf_k1om.c	FUNCTION_9
0x4001a6b	            0x415e	                                 pop r14	       765	eelf_k1om.c	FUNCTION_9
0x4001a6d	            0x415f	                                 pop r15	       765	eelf_k1om.c	FUNCTION_9
0x4001a6f	              0xc3	                                     ret	       765	eelf_k1om.c	FUNCTION_9
gldelf_k1om_stat_needed	CALL,11:DO,0:IF,9:SWITCH,0:WHILE,0:FOR,0:ELSE,0:functions,0	96
0x4002690	            0x4154	                                push r12	       260	eelf_k1om.c	FUNCTION_6
0x4002692	              0x55	                                push rbp	       260	eelf_k1om.c	FUNCTION_6
0x4002693	              0x53	                                push rbx	       260	eelf_k1om.c	FUNCTION_6
0x4002694	    0x4881eca00000	                           sub rsp, 0xa0	       260	eelf_k1om.c	FUNCTION_6
0x400269b	    0x64488b042528	                mov rax, qword fs:[0x28]	       260	eelf_k1om.c	FUNCTION_6
0x40026a4	    0x488984249800	             mov qword [rsp + 0x98], rax	       260	eelf_k1om.c	FUNCTION_6
0x40026ac	            0x31c0	                            xor eax, eax	       260	eelf_k1om.c	FUNCTION_6
0x40026ae	    0x48833d000000	               cmp qword [0x040026b6], 0	       265	eelf_k1om.c	FUNCTION_6	IF_1
0x40026b6	            0x7428	                            je 0x40026e0	       265	eelf_k1om.c	FUNCTION_6	IF_1
0x40026b8	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       319	eelf_k1om.c	FUNCTION_6
0x40026c0	    0x644833042528	                xor rax, qword fs:[0x28]	       319	eelf_k1om.c	FUNCTION_6
0x40026c9	     0xf853f010000	                           jne 0x400280e	       319	eelf_k1om.c	FUNCTION_6
0x40026cf	    0x4881c4a00000	                           add rsp, 0xa0	       319	eelf_k1om.c	FUNCTION_6
0x40026d6	              0x5b	                                 pop rbx	       319	eelf_k1om.c	FUNCTION_6
0x40026d7	              0x5d	                                 pop rbp	       319	eelf_k1om.c	FUNCTION_6
0x40026d8	            0x415c	                                 pop r12	       319	eelf_k1om.c	FUNCTION_6
0x40026da	              0xc3	                                     ret	       319	eelf_k1om.c	FUNCTION_6
0x40026db	       0xf1f440000	                   nop dword [rax + rax]	       319	eelf_k1om.c	FUNCTION_6
0x40026e0	          0x4889fb	                            mov rbx, rdi	       319	eelf_k1om.c	FUNCTION_6
0x40026e3	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       267	eelf_k1om.c	FUNCTION_6	IF_2
0x40026e7	          0x4885ff	                           test rdi, rdi	       267	eelf_k1om.c	FUNCTION_6	IF_2
0x40026ea	            0x74cc	                            je 0x40026b8	       267	eelf_k1om.c	FUNCTION_6	IF_2
0x40026ec	      0xe800000000	                          call 0x40026f1	       272	eelf_k1om.c	FUNCTION_6	IF_3	CALL_1
0x40026f1	            0xa801	                              test al, 1	       272	eelf_k1om.c	FUNCTION_6	IF_3	CALL_1
0x40026f3	            0x75c3	                           jne 0x40026b8	       272	eelf_k1om.c	FUNCTION_6	IF_3	CALL_1
0x40026f5	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       275	eelf_k1om.c	FUNCTION_6	IF_4	CALL_2
0x40026f9	          0x4889e6	                            mov rsi, rsp	       275	eelf_k1om.c	FUNCTION_6	IF_4	CALL_2
0x40026fc	      0xe800000000	                          call 0x4002701	       275	eelf_k1om.c	FUNCTION_6	IF_4	CALL_2
0x4002701	            0x85c0	                           test eax, eax	       275	eelf_k1om.c	FUNCTION_6	IF_4	CALL_2
0x4002703	     0xf85b7000000	                           jne 0x40027c0	       275	eelf_k1om.c	FUNCTION_6	IF_4	CALL_2
0x4002709	    0x488b05000000	            mov rax, qword [0x04002710] 	       288	eelf_k1om.c	FUNCTION_6	IF_5
0x4002710	        0x48390424	                    cmp qword [rsp], rax	       288	eelf_k1om.c	FUNCTION_6	IF_5
0x4002714	     0xf84cd000000	                            je 0x40027e7	       288	eelf_k1om.c	FUNCTION_6	IF_5
0x400271a	    0x488b05000000	            mov rax, qword [0x04002721] 	       305	eelf_k1om.c	FUNCTION_6	IF_6	CALL_5
0x4002721	      0xbe2f000000	                           mov esi, 0x2f	       305	eelf_k1om.c	FUNCTION_6	IF_6	CALL_5
0x4002726	        0x488b6810	            mov rbp, qword [rax + 0x10] 	       305	eelf_k1om.c	FUNCTION_6	IF_6	CALL_5
0x400272a	          0x4889ef	                            mov rdi, rbp	       305	eelf_k1om.c	FUNCTION_6	IF_6	CALL_5
0x400272d	      0xe800000000	                          call 0x4002732	       305	eelf_k1om.c	FUNCTION_6	IF_6	CALL_5
0x4002732	          0x4885c0	                           test rax, rax	       305	eelf_k1om.c	FUNCTION_6	IF_6	CALL_5
0x4002735	            0x7581	                           jne 0x40026b8	       305	eelf_k1om.c	FUNCTION_6	IF_6	CALL_5
0x4002737	      0xbe00000000	                              mov esi, 0	       307	eelf_k1om.c	FUNCTION_6	CALL_6
0x400273c	          0x4889ef	                            mov rdi, rbp	       307	eelf_k1om.c	FUNCTION_6	CALL_6
0x400273f	      0xe800000000	                          call 0x4002744	       307	eelf_k1om.c	FUNCTION_6	CALL_6
0x4002744	          0x4885c0	                           test rax, rax	       308	eelf_k1om.c	FUNCTION_6	IF_7
0x4002747	     0xf846bffffff	                            je 0x40026b8	       308	eelf_k1om.c	FUNCTION_6	IF_7
0x400274d	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       312	eelf_k1om.c	FUNCTION_6	CALL_7
0x4002751	        0x488d6804	                      lea rbp, [rax + 4]	       310	eelf_k1om.c	FUNCTION_6
0x4002755	      0xe800000000	                          call 0x400275a	       312	eelf_k1om.c	FUNCTION_6	CALL_7
0x400275a	          0x4885c0	                           test rax, rax	       313	eelf_k1om.c	FUNCTION_6	IF_8
0x400275d	          0x4989c4	                            mov r12, rax	       312	eelf_k1om.c	FUNCTION_6	CALL_7
0x4002760	     0xf84ad000000	                            je 0x4002813	       313	eelf_k1om.c	FUNCTION_6	IF_8
0x4002766	    0x488b05000000	            mov rax, qword [0x0400276d] 	       316	eelf_k1om.c	FUNCTION_6	IF_9	CALL_9
0x400276d	          0x4889ea	                            mov rdx, rbp	       316	eelf_k1om.c	FUNCTION_6	IF_9	CALL_9
0x4002770	          0x4c89e7	                            mov rdi, r12	       316	eelf_k1om.c	FUNCTION_6	IF_9	CALL_9
0x4002773	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       316	eelf_k1om.c	FUNCTION_6	IF_9	CALL_9
0x4002777	          0x4829f2	                            sub rdx, rsi	       316	eelf_k1om.c	FUNCTION_6	IF_9	CALL_9
0x400277a	      0xe800000000	                          call 0x400277f	       316	eelf_k1om.c	FUNCTION_6	IF_9	CALL_9
0x400277f	            0x85c0	                           test eax, eax	       316	eelf_k1om.c	FUNCTION_6	IF_9	CALL_9
0x4002781	     0xf8531ffffff	                           jne 0x40026b8	       316	eelf_k1om.c	FUNCTION_6	IF_9	CALL_9
0x4002787	    0x488b05000000	            mov rax, qword [0x0400278e] 	       318	eelf_k1om.c	FUNCTION_6	IF_9
0x400278e	            0x31ff	                            xor edi, edi	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x4002790	      0xba05000000	                              mov edx, 5	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x4002795	      0xbe00000000	                              mov esi, 0	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x400279a	        0x488b6808	                mov rbp, qword [rax + 8]	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x400279e	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027a2	      0xe800000000	                          call 0x40027a7	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027a7	          0x4c89e1	                            mov rcx, r12	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027aa	          0x4889c7	                            mov rdi, rax	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027ad	            0x31c0	                            xor eax, eax	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027af	          0x4889ea	                            mov rdx, rbp	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027b2	          0x4889de	                            mov rsi, rbx	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027b5	      0xe800000000	                          call 0x40027ba	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027ba	      0xe9f9feffff	                           jmp 0x40026b8	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027bf	              0x90	                                     nop	       317	eelf_k1om.c	FUNCTION_6	IF_9	CALL_11
0x40027c0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027c4	            0x31ff	                            xor edi, edi	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027c6	      0xba05000000	                              mov edx, 5	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027cb	      0xbe00000000	                              mov esi, 0	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027d0	      0xe800000000	                          call 0x40027d5	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027d5	          0x4889de	                            mov rsi, rbx	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027d8	          0x4889c7	                            mov rdi, rax	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027db	            0x31c0	                            xor eax, eax	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027dd	      0xe800000000	                          call 0x40027e2	       277	eelf_k1om.c	FUNCTION_6	IF_4	CALL_4
0x40027e2	      0xe9d1feffff	                           jmp 0x40026b8	       278	eelf_k1om.c	FUNCTION_6	IF_4
0x40027e7	      0x488b442408	                mov rax, qword [rsp + 8]	       289	eelf_k1om.c	FUNCTION_6	IF_5
0x40027ec	    0x483905000000	            cmp qword [0x040027f3], rax 	       290	eelf_k1om.c	FUNCTION_6	IF_5
0x40027f3	     0xf8521ffffff	                           jne 0x400271a	       290	eelf_k1om.c	FUNCTION_6	IF_5
0x40027f9	          0x4885c0	                           test rax, rax	       290	eelf_k1om.c	FUNCTION_6	IF_5
0x40027fc	     0xf8418ffffff	                            je 0x400271a	       290	eelf_k1om.c	FUNCTION_6	IF_5
0x4002802	    0x48891d000000	            mov qword [0x04002809], rbx 	       292	eelf_k1om.c	FUNCTION_6	IF_5
0x4002809	      0xe9aafeffff	                           jmp 0x40026b8	       293	eelf_k1om.c	FUNCTION_6	IF_5
0x400280e	      0xe800000000	                          call 0x4002813	       319	eelf_k1om.c	FUNCTION_6
0x4002813	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       314	eelf_k1om.c	FUNCTION_6	CALL_8
0x4002817	      0xe800000000	                          call 0x400281c	       314	eelf_k1om.c	FUNCTION_6	CALL_8
0x400281c	          0x4989c4	                            mov r12, rax	       314	eelf_k1om.c	FUNCTION_6	CALL_8
0x400281f	      0xe942ffffff	                           jmp 0x4002766	       314	eelf_k1om.c	FUNCTION_6	CALL_8
gldelf_k1om_load_symbols	CALL,3:DO,0:IF,4:SWITCH,0:WHILE,0:FOR,0:ELSE,0:functions,0	53
0x40002a0	            0x4154	                                push r12	       141	eelf_k1om.c	FUNCTION_4
0x40002a2	              0x55	                                push rbp	       141	eelf_k1om.c	FUNCTION_4
0x40002a3	          0x4889fd	                            mov rbp, rdi	       141	eelf_k1om.c	FUNCTION_4
0x40002a6	              0x53	                                push rbx	       141	eelf_k1om.c	FUNCTION_4
0x40002a7	         0xfbe5f48	           movsx ebx, byte [rdi + 0x48] 	       147	eelf_k1om.c	FUNCTION_4	IF_1
0x40002ab	            0x89d8	                            mov eax, ebx	       147	eelf_k1om.c	FUNCTION_4	IF_1
0x40002ad	          0xc1eb1f	                           shr ebx, 0x1f	       142	eelf_k1om.c	FUNCTION_4
0x40002b0	            0xa840	                           test al, 0x40	       153	eelf_k1om.c	FUNCTION_4	IF_2
0x40002b2	            0x752c	                           jne 0x40002e0	       153	eelf_k1om.c	FUNCTION_4	IF_2
0x40002b4	          0x83cb04	                               or ebx, 4	       154	eelf_k1om.c	FUNCTION_4	IF_2
0x40002b7	            0xa810	                           test al, 0x10	       156	eelf_k1om.c	FUNCTION_4	IF_3
0x40002b9	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	       157	eelf_k1om.c	FUNCTION_4	IF_3
0x40002bd	            0x7408	                            je 0x40002c7	       156	eelf_k1om.c	FUNCTION_4	IF_3
0x40002bf	    0x41f644244508	               test byte [r12 + 0x45], 8	       157	eelf_k1om.c	FUNCTION_4	IF_3
0x40002c5	            0x7551	                           jne 0x4000318	       157	eelf_k1om.c	FUNCTION_4	IF_3
0x40002c7	    0x41f644244508	               test byte [r12 + 0x45], 8	       162	eelf_k1om.c	FUNCTION_4	IF_4
0x40002cd	            0x7531	                           jne 0x4000300	       162	eelf_k1om.c	FUNCTION_4	IF_4
0x40002cf	              0x5b	                                 pop rbx	       170	eelf_k1om.c	FUNCTION_4
0x40002d0	            0x31c0	                            xor eax, eax	       170	eelf_k1om.c	FUNCTION_4
0x40002d2	              0x5d	                                 pop rbp	       170	eelf_k1om.c	FUNCTION_4
0x40002d3	            0x415c	                                 pop r12	       170	eelf_k1om.c	FUNCTION_4
0x40002d5	              0xc3	                                     ret	       170	eelf_k1om.c	FUNCTION_4
0x40002d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       170	eelf_k1om.c	FUNCTION_4
0x40002e0	            0xa810	                           test al, 0x10	       156	eelf_k1om.c	FUNCTION_4	IF_3
0x40002e2	            0x740c	                            je 0x40002f0	       156	eelf_k1om.c	FUNCTION_4	IF_3
0x40002e4	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	       157	eelf_k1om.c	FUNCTION_4	IF_3
0x40002e8	    0x41f644244508	               test byte [r12 + 0x45], 8	       157	eelf_k1om.c	FUNCTION_4	IF_3
0x40002ee	            0x7528	                           jne 0x4000318	       157	eelf_k1om.c	FUNCTION_4	IF_3
0x40002f0	            0x85db	                           test ebx, ebx	       161	eelf_k1om.c	FUNCTION_4	IF_4
0x40002f2	            0x74db	                            je 0x40002cf	       161	eelf_k1om.c	FUNCTION_4	IF_4
0x40002f4	        0x4c8b6520	            mov r12, qword [rbp + 0x20] 	       161	eelf_k1om.c	FUNCTION_4	IF_4
0x40002f8	    0x41f644244508	               test byte [r12 + 0x45], 8	       162	eelf_k1om.c	FUNCTION_4	IF_4
0x40002fe	            0x74cf	                            je 0x40002cf	       162	eelf_k1om.c	FUNCTION_4	IF_4
0x4000300	            0x89de	                            mov esi, ebx	       165	eelf_k1om.c	FUNCTION_4	CALL_3
0x4000302	          0x4c89e7	                            mov rdi, r12	       165	eelf_k1om.c	FUNCTION_4	CALL_3
0x4000305	      0xe800000000	                          call 0x400030a	       165	eelf_k1om.c	FUNCTION_4	CALL_3
0x400030a	              0x5b	                                 pop rbx	       170	eelf_k1om.c	FUNCTION_4
0x400030b	            0x31c0	                            xor eax, eax	       170	eelf_k1om.c	FUNCTION_4
0x400030d	              0x5d	                                 pop rbp	       170	eelf_k1om.c	FUNCTION_4
0x400030e	            0x415c	                                 pop r12	       170	eelf_k1om.c	FUNCTION_4
0x4000310	              0xc3	                                     ret	       170	eelf_k1om.c	FUNCTION_4
0x4000311	     0xf1f80000000	                         nop dword [rax]	       170	eelf_k1om.c	FUNCTION_4
0x4000318	            0x31ff	                            xor edi, edi	       158	eelf_k1om.c	FUNCTION_4	IF_3	CALL_2
0x400031a	      0xba05000000	                              mov edx, 5	       158	eelf_k1om.c	FUNCTION_4	IF_3	CALL_2
0x400031f	      0xbe00000000	                              mov esi, 0	       158	eelf_k1om.c	FUNCTION_4	IF_3	CALL_2
0x4000324	      0xe800000000	                          call 0x4000329	       158	eelf_k1om.c	FUNCTION_4	IF_3	CALL_2
0x4000329	          0x4c89e6	                            mov rsi, r12	       158	eelf_k1om.c	FUNCTION_4	IF_3	CALL_2
0x400032c	          0x4889c7	                            mov rdi, rax	       158	eelf_k1om.c	FUNCTION_4	IF_3	CALL_2
0x400032f	            0x31c0	                            xor eax, eax	       158	eelf_k1om.c	FUNCTION_4	IF_3	CALL_2
0x4000331	      0xe800000000	                          call 0x4000336	       158	eelf_k1om.c	FUNCTION_4	IF_3	CALL_2
0x4000336	            0x85db	                           test ebx, ebx	       161	eelf_k1om.c	FUNCTION_4	IF_4
0x4000338	            0x7495	                            je 0x40002cf	       161	eelf_k1om.c	FUNCTION_4	IF_4
0x400033a	            0xebb8	                           jmp 0x40002f4	       161	eelf_k1om.c	FUNCTION_4	IF_4
gldelf_k1om_before_parse	CALL,1:DO,0:IF,0:SWITCH,0:WHILE,0:FOR,0:ELSE,0:functions,0	12
0x40028b0	        0x4883ec08	                              sub rsp, 8	       109	eelf_k1om.c	FUNCTION_2
0x40028b4	      0xbe0a000000	                            mov esi, 0xa	       110	eelf_k1om.c	FUNCTION_2	CALL_1
0x40028b9	      0xbf00000000	                              mov edi, 0	       110	eelf_k1om.c	FUNCTION_2	CALL_1
0x40028be	      0xe800000000	                          call 0x40028c3	       110	eelf_k1om.c	FUNCTION_2	CALL_1
0x40028c3	    0x800d00000000	              or byte [0x040028ca], 0x20	       111	eelf_k1om.c	FUNCTION_2
0x40028ca	    0xc70500000000	               mov dword [0x040028d4], 1	       112	eelf_k1om.c	FUNCTION_2
0x40028d4	    0xc70500000000	               mov dword [0x040028de], 0	       113	eelf_k1om.c	FUNCTION_2
0x40028de	    0xc60500000000	            mov byte [0x040028e5], 0x67 	       114	eelf_k1om.c	FUNCTION_2
0x40028e5	    0x800d00000000	              or byte [0x040028ec], 0x20	       115	eelf_k1om.c	FUNCTION_2
0x40028ec	    0x800d00000000	              or byte [0x040028f3], 0x30	       117	eelf_k1om.c	FUNCTION_2
0x40028f3	        0x4883c408	                              add rsp, 8	       118	eelf_k1om.c	FUNCTION_2
0x40028f7	              0xc3	                                     ret	       118	eelf_k1om.c	FUNCTION_2
gldelf_k1om_search_needed	CALL,34:DO,0:IF,21:SWITCH,2:WHILE,2:FOR,0:ELSE,7:functions,0	268
0x4002270	            0x4157	                                push r15	       474	eelf_k1om.c	FUNCTION_8
0x4002272	            0x4156	                                push r14	       474	eelf_k1om.c	FUNCTION_8
0x4002274	            0x4155	                                push r13	       474	eelf_k1om.c	FUNCTION_8
0x4002276	            0x4154	                                push r12	       474	eelf_k1om.c	FUNCTION_8
0x4002278	              0x55	                                push rbp	       474	eelf_k1om.c	FUNCTION_8
0x4002279	              0x53	                                push rbx	       474	eelf_k1om.c	FUNCTION_8
0x400227a	          0x4889fb	                            mov rbx, rdi	       474	eelf_k1om.c	FUNCTION_8
0x400227d	          0x4889f7	                            mov rdi, rsi	       474	eelf_k1om.c	FUNCTION_8
0x4002280	        0x4883ec58	                           sub rsp, 0x58	       474	eelf_k1om.c	FUNCTION_8
0x4002284	    0x64488b042528	                mov rax, qword fs:[0x28]	       474	eelf_k1om.c	FUNCTION_8
0x400228d	      0x4889442448	             mov qword [rsp + 0x48], rax	       474	eelf_k1om.c	FUNCTION_8
0x4002292	            0x31c0	                            xor eax, eax	       474	eelf_k1om.c	FUNCTION_8
0x4002294	        0x488b4608	                mov rax, qword [rsi + 8]	       476	eelf_k1om.c	FUNCTION_8
0x4002298	        0x89542424	             mov dword [rsp + 0x24], edx	       474	eelf_k1om.c	FUNCTION_8
0x400229c	          0x80382f	                    cmp byte [rax], 0x2f	       480	eelf_k1om.c	FUNCTION_8	IF_1
0x400229f	      0x4889442418	             mov qword [rsp + 0x18], rax	       476	eelf_k1om.c	FUNCTION_8
0x40022a4	     0xf84d6030000	                            je 0x4002680	       480	eelf_k1om.c	FUNCTION_8	IF_1
0x40022aa	          0x4885db	                           test rbx, rbx	       483	eelf_k1om.c	FUNCTION_8	IF_2
0x40022ad	     0xf84a5030000	                            je 0x4002658	       483	eelf_k1om.c	FUNCTION_8	IF_2
0x40022b3	          0x803b00	                       cmp byte [rbx], 0	       483	eelf_k1om.c	FUNCTION_8	IF_2
0x40022b6	     0xf849c030000	                            je 0x4002658	       483	eelf_k1om.c	FUNCTION_8	IF_2
0x40022bc	          0x488b06	                    mov rax, qword [rsi]	       486	eelf_k1om.c	FUNCTION_8
0x40022bf	      0x4889442430	             mov qword [rsp + 0x30], rax	       486	eelf_k1om.c	FUNCTION_8
0x40022c4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       487	eelf_k1om.c	FUNCTION_8
0x40022c9	          0x4889c7	                            mov rdi, rax	       489	eelf_k1om.c	FUNCTION_8	CALL_2
0x40022cc	      0x4889442438	             mov qword [rsp + 0x38], rax	       487	eelf_k1om.c	FUNCTION_8
0x40022d1	      0xe800000000	                          call 0x40022d6	       489	eelf_k1om.c	FUNCTION_8	CALL_2
0x40022d6	        0x4883c002	                              add rax, 2	       489	eelf_k1om.c	FUNCTION_8	CALL_2
0x40022da	      0x4889442428	             mov qword [rsp + 0x28], rax	       489	eelf_k1om.c	FUNCTION_8	CALL_2
0x40022df	              0x90	                                     nop	       489	eelf_k1om.c	FUNCTION_8	CALL_2
0x40022e0	     0xfbe35000000	           movsx esi, byte [0x040022e7] 	       496	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_3
0x40022e7	          0x4889df	                            mov rdi, rbx	       496	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_3
0x40022ea	      0xe800000000	                          call 0x40022ef	       496	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_3
0x40022ef	          0x4885c0	                           test rax, rax	       497	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_3
0x40022f2	      0x4889442410	             mov qword [rsp + 0x10], rax	       496	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_3
0x40022f7	     0xf8443030000	                            je 0x4002640	       497	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_3
0x40022fd	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	       511	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_8
0x4002302	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       511	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_8
0x4002307	          0x4c89f5	                            mov rbp, r14	       511	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_8
0x400230a	          0x4829dd	                            sub rbp, rbx	       511	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_8
0x400230d	      0x488d7c0500	                    lea rdi, [rbp + rax]	       511	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_8
0x4002312	      0xe800000000	                          call 0x4002317	       511	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_8
0x4002317	          0x4c39f3	                            cmp rbx, r14	       512	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_6
0x400231a	          0x4989c4	                            mov r12, rax	       511	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_8
0x400231d	          0x4889c7	                            mov rdi, rax	       511	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_8
0x4002320	            0x7415	                            je 0x4002337	       512	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_6
0x4002322	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_52	CALL_3
0x4002325	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_52	CALL_3
0x4002328	      0xe800000000	                          call 0x400232d	        53	string3.h	FUNCTION_52	CALL_3
0x400232d	      0x498d7c2c01	                lea rdi, [r12 + rbp + 1]	       518	eelf_k1om.c	FUNCTION_8	WHILE_1	ELSE_2
0x4002332	      0x41c6042c2f	              mov byte [r12 + rbp], 0x2f	       517	eelf_k1om.c	FUNCTION_8	WHILE_1	ELSE_2
0x4002337	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       110	string3.h	FUNCTION_58	CALL_3
0x400233c	          0x4531ed	                          xor r13d, r13d	       492	eelf_k1om.c	FUNCTION_8	WHILE_1
0x400233f	      0xe800000000	                          call 0x4002344	       110	string3.h	FUNCTION_58	CALL_3
0x4002344	      0xe92e010000	                           jmp 0x4002477	       110	string3.h	FUNCTION_58	CALL_3
0x4002349	     0xf1f80000000	                         nop dword [rax]	       110	string3.h	FUNCTION_58	CALL_3
0x4002350	        0x488d4601	                      lea rax, [rsi + 1]	       553	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1
0x4002354	      0xbf00000000	                              mov edi, 0	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x4002359	      0xb906000000	                              mov ecx, 6	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x400235e	          0x4889c6	                            mov rsi, rax	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x4002361	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x4002363	            0x7415	                            je 0x400237a	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x4002365	      0xbf00000000	                              mov edi, 0	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x400236a	      0xb907000000	                              mov ecx, 7	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x400236f	          0x4889c6	                            mov rsi, rax	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x4002372	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x4002374	     0xf8558010000	                           jne 0x40024d2	       556	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	CALL_15
0x400237a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       560	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10
0x400237f	          0x4885c0	                           test rax, rax	       560	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10
0x4002382	     0xf8488020000	                            je 0x4002610	       560	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10
0x4002388	          0x4c8b30	                    mov r14, qword [rax]	       570	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	ELSE_4
0x400238b	          0x4d85f6	                           test r14, r14	       572	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12
0x400238e	     0xf843e010000	                            je 0x40024d2	       572	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12
0x4002394	        0x41803e2f	                    cmp byte [r14], 0x2f	       576	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_13
0x4002398	     0xf8442020000	                            je 0x40025e0	       576	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_13
0x400239e	      0xe800000000	                          call 0x40023a3	       580	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_17
0x40023a3	          0x4c89f7	                            mov rdi, r14	       582	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_20
0x40023a6	      0x4889442408	                mov qword [rsp + 8], rax	       580	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_17
0x40023ab	      0xe800000000	                          call 0x40023b0	       582	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_20
0x40023b0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       582	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_20
0x40023b5	          0x4989c5	                            mov r13, rax	       582	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_20
0x40023b8	      0xe800000000	                          call 0x40023bd	       582	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_20
0x40023bd	      0x498d7c0502	                lea rdi, [r13 + rax + 2]	       582	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_20
0x40023c2	      0xe800000000	                          call 0x40023c7	       582	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_20
0x40023c7	      0x4c8b442408	                 mov r8, qword [rsp + 8]	        33	stdio2.h	FUNCTION_35	CALL_1
0x40023cc	          0x4989c5	                            mov r13, rax	       582	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	ELSE_5	CALL_20
0x40023cf	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_35	CALL_1
0x40023d2	          0x4d89f1	                             mov r9, r14	        33	stdio2.h	FUNCTION_35	CALL_1
0x40023d5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_35	CALL_1
0x40023da	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_35	CALL_1
0x40023e1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_35	CALL_1
0x40023e6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_35	CALL_1
0x40023e8	      0xe800000000	                          call 0x40023ed	        33	stdio2.h	FUNCTION_35	CALL_1
0x40023ed	      0xbe2f000000	                           mov esi, 0x2f	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x40023f2	          0x4c89ef	                            mov rdi, r13	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x40023f5	      0xe800000000	                          call 0x40023fa	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x40023fa	          0x4885c0	                           test rax, rax	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x40023fd	     0xf8425020000	                            je 0x4002628	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x4002403	          0xc60000	                       mov byte [rax], 0	       588	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14
0x4002406	          0x4c89ef	                            mov rdi, r13	       588	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14
0x4002409	          0x4d89ee	                            mov r14, r13	       588	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14
0x400240c	      0xe800000000	                          call 0x4002411	       588	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14
0x4002411	            0x89ed	                            mov ebp, ebp	       627	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	CALL_26
0x4002413	      0x488d7c0500	                    lea rdi, [rbp + rax]	       627	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	CALL_26
0x4002418	      0xe800000000	                          call 0x400241d	       627	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	CALL_26
0x400241d	          0x4d85ff	                           test r15, r15	       629	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	IF_17
0x4002420	          0x4889c5	                            mov rbp, rax	       627	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	CALL_26
0x4002423	     0xf840f010000	                            je 0x4002538	       629	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	IF_17
0x4002429	        0x4983c701	                              add r15, 1	        33	stdio2.h	FUNCTION_35	CALL_1
0x400242d	          0x4c29e3	                            sub rbx, r12	       632	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	IF_17
0x4002430	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002435	            0x4157	                                push r15	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002437	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002439	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_35	CALL_1
0x400243c	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_35	CALL_1
0x400243f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002444	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_35	CALL_1
0x400244b	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_35	CALL_1
0x400244e	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002450	      0xe800000000	                          call 0x4002455	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002455	          0x4c89ef	                            mov rdi, r13	       634	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	IF_17	CALL_27
0x4002458	      0xe800000000	                          call 0x400245d	       634	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	IF_17	CALL_27
0x400245d	              0x5e	                                 pop rsi	       634	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	IF_17	CALL_27
0x400245e	              0x5f	                                 pop rdi	       634	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	IF_17	CALL_27
0x400245f	      0x448d6c0301	               lea r13d, [rbx + rax + 1]	       634	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	IF_17	CALL_27
0x4002464	          0x4c89e7	                            mov rdi, r12	       644	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	CALL_29
0x4002467	          0x4989ec	                            mov r12, rbp	       645	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16
0x400246a	      0xe800000000	                          call 0x400246f	       644	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	CALL_29
0x400246f	          0x4c89f7	                            mov rdi, r14	       666	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_32
0x4002472	      0xe800000000	                          call 0x4002477	       666	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_32
0x4002477	          0x4489ef	                           mov edi, r13d	       528	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_11
0x400247a	      0xbe24000000	                           mov esi, 0x24	       528	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_11
0x400247f	          0x4c01e7	                            add rdi, r12	       528	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_11
0x4002482	      0xe800000000	                          call 0x4002487	       528	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_11
0x4002487	          0x4885c0	                           test rax, rax	       528	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_11
0x400248a	          0x4889c3	                            mov rbx, rax	       528	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_11
0x400248d	     0xf84e5000000	                            je 0x4002578	       528	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_11
0x4002493	      0xbe2f000000	                           mov esi, 0x2f	       541	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_12
0x4002498	          0x4889df	                            mov rdi, rbx	       541	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_12
0x400249b	        0x4c8d6b01	                      lea r13, [rbx + 1]	       543	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2
0x400249f	      0xe800000000	                          call 0x40024a4	       541	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_12
0x40024a4	          0x4c89e7	                            mov rdi, r12	       545	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_13
0x40024a7	          0x4989c7	                            mov r15, rax	       541	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_12
0x40024aa	      0xe800000000	                          call 0x40024af	       545	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_13
0x40024af	          0x4d85ff	                           test r15, r15	       547	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_7
0x40024b2	          0x4889c5	                            mov rbp, rax	       545	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	CALL_13
0x40024b5	            0x7404	                            je 0x40024bb	       547	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_7
0x40024b7	        0x41c60700	                       mov byte [r15], 0	       549	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_7
0x40024bb	         0xfb64301	               movzx eax, byte [rbx + 1]	       551	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_8
0x40024bf	          0x4c89ee	                            mov rsi, r13	       543	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2
0x40024c2	            0x3c7b	                            cmp al, 0x7b	       551	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_8
0x40024c4	            0x7462	                            je 0x4002528	       551	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_8
0x40024c6	            0x3c4c	                            cmp al, 0x4c	       553	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1
0x40024c8	            0x742e	                            je 0x40024f8	       553	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1
0x40024ca	            0x3c4f	                            cmp al, 0x4f	       553	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1
0x40024cc	     0xf847efeffff	                            je 0x4002350	       553	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1
0x40024d2	    0x8b0500000000	            mov eax, dword [0x040024d8] 	       651	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	IF_18
0x40024d8	            0x85c0	                           test eax, eax	       651	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	IF_18
0x40024da	     0xf85d8000000	                           jne 0x40025b8	       651	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	IF_18
0x40024e0	          0x4d85ff	                           test r15, r15	       657	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	IF_19
0x40024e3	            0x7404	                            je 0x40024e9	       657	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	IF_19
0x40024e5	        0x41c6072f	                    mov byte [r15], 0x2f	       659	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	IF_19
0x40024e9	          0x4529e5	                          sub r13d, r12d	       663	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7
0x40024ec	          0x4531f6	                          xor r14d, r14d	       663	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7
0x40024ef	      0xe97bffffff	                           jmp 0x400246f	       663	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7
0x40024f4	         0xf1f4000	                         nop dword [rax]	       663	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7
0x40024f8	        0x807e0149	                cmp byte [rsi + 1], 0x49	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x40024fc	            0x75d4	                           jne 0x40024d2	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x40024fe	        0x807e0242	                cmp byte [rsi + 2], 0x42	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x4002502	            0x75ce	                           jne 0x40024d2	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x4002504	        0x807e0300	                   cmp byte [rsi + 3], 0	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x4002508	     0xf85e2000000	                           jne 0x40025f0	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x400250e	      0xb805000000	                              mov eax, 5	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x4002513	          0x4531f6	                          xor r14d, r14d	       544	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2
0x4002516	    0x41bd00000000	                             mov r13d, 0	       606	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	SWITCH_2
0x400251c	      0xe9f0feffff	                           jmp 0x4002411	       606	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	SWITCH_2
0x4002521	     0xf1f80000000	                         nop dword [rax]	       606	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	SWITCH_2
0x4002528	        0x488d7302	                      lea rsi, [rbx + 2]	       552	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_8
0x400252c	         0xfb64302	               movzx eax, byte [rbx + 2]	       552	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_8
0x4002530	            0xeb94	                           jmp 0x40024c6	       552	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_8
0x4002532	    0x660f1f440000	                    nop word [rax + rax]	       552	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_8
0x4002538	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_35	CALL_1
0x400253c	          0x4c29e3	                            sub rbx, r12	       639	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	ELSE_6
0x400253f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002544	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002546	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_35	CALL_1
0x400254d	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002550	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002553	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002558	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_35	CALL_1
0x400255b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_35	CALL_1
0x400255d	      0xe800000000	                          call 0x4002562	        33	stdio2.h	FUNCTION_35	CALL_1
0x4002562	          0x4c89ef	                            mov rdi, r13	       641	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	ELSE_6	CALL_28
0x4002565	      0xe800000000	                          call 0x400256a	       641	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	ELSE_6	CALL_28
0x400256a	              0x5a	                                 pop rdx	       641	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	ELSE_6	CALL_28
0x400256b	        0x448d2c03	                   lea r13d, [rbx + rax]	       641	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	ELSE_6	CALL_28
0x400256f	              0x59	                                 pop rcx	       641	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	ELSE_6	CALL_28
0x4002570	      0xe9effeffff	                           jmp 0x4002464	       641	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	ELSE_6	CALL_28
0x4002575	           0xf1f00	                         nop dword [rax]	       641	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	IF_16	ELSE_6	CALL_28
0x4002578	        0x8b742424	            mov esi, dword [rsp + 0x24] 	       671	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_20	CALL_33
0x400257c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       671	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_20	CALL_33
0x4002581	      0x4c89642438	             mov qword [rsp + 0x38], r12	       669	eelf_k1om.c	FUNCTION_8	WHILE_1
0x4002586	      0xe815faffff	         call sym.gldelf_k1om_try_needed	       671	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_20	CALL_33
0x400258b	            0x85c0	                           test eax, eax	       671	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_20	CALL_33
0x400258d	     0xf85e6000000	                           jne 0x4002679	       671	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_20	CALL_33
0x4002593	          0x4c89e7	                            mov rdi, r12	       674	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_34
0x4002596	      0xe800000000	                          call 0x400259b	       674	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_34
0x400259b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       676	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_21
0x40025a0	          0x803800	                       cmp byte [rax], 0	       676	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_21
0x40025a3	     0xf84af000000	                            je 0x4002658	       676	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_21
0x40025a9	          0x4889c3	                            mov rbx, rax	       678	eelf_k1om.c	FUNCTION_8	WHILE_1
0x40025ac	        0x4883c301	                              add rbx, 1	       678	eelf_k1om.c	FUNCTION_8	WHILE_1
0x40025b0	      0xe92bfdffff	                           jmp 0x40022e0	       679	eelf_k1om.c	FUNCTION_8	WHILE_1
0x40025b5	           0xf1f00	                         nop dword [rax]	       679	eelf_k1om.c	FUNCTION_8	WHILE_1
0x40025b8	            0x31ff	                            xor edi, edi	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025ba	      0xba05000000	                              mov edx, 5	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025bf	      0xbe00000000	                              mov esi, 0	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025c4	      0xe800000000	                          call 0x40025c9	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025c9	          0x4889de	                            mov rsi, rbx	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025cc	          0x4889c7	                            mov rdi, rax	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025cf	            0x31c0	                            xor eax, eax	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025d1	      0xe800000000	                          call 0x40025d6	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025d6	      0xe905ffffff	                           jmp 0x40024e0	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025db	       0xf1f440000	                   nop dword [rax + rax]	       655	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	ELSE_7	CALL_31
0x40025e0	          0x4c89f7	                            mov rdi, r14	       577	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	CALL_16
0x40025e3	      0xe800000000	                          call 0x40025e8	       577	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	CALL_16
0x40025e8	          0x4989c5	                            mov r13, rax	       577	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	CALL_16
0x40025eb	      0xe9fdfdffff	                           jmp 0x40023ed	       577	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	CALL_16
0x40025f0	        0x807e037d	                cmp byte [rsi + 3], 0x7d	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x40025f4	     0xf85d8feffff	                           jne 0x40024d2	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x40025fa	        0x807e0400	                   cmp byte [rsi + 4], 0	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x40025fe	     0xf840affffff	                            je 0x400250e	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x4002604	      0xe9c9feffff	                           jmp 0x40024d2	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x4002609	     0xf1f80000000	                         nop dword [rax]	       594	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_15	CALL_23
0x4002610	    0x488b05000000	            mov rax, qword [0x04002617] 	       562	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10	IF_11
0x4002617	          0x4885c0	                           test rax, rax	       562	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10	IF_11
0x400261a	     0xf8568fdffff	                           jne 0x4002388	       562	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10	IF_11
0x4002620	      0xe9adfeffff	                           jmp 0x40024d2	       562	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10	IF_11
0x4002625	           0xf1f00	                         nop dword [rax]	       562	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10	IF_11
0x4002628	          0x4c89ef	                            mov rdi, r13	       562	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_10	IF_11
0x400262b	          0x4d89ee	                            mov r14, r13	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x400262e	      0xe800000000	                          call 0x4002633	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x4002633	      0xe9d9fdffff	                           jmp 0x4002411	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x4002638	     0xf1f84000000	                   nop dword [rax + rax]	       587	eelf_k1om.c	FUNCTION_8	WHILE_1	WHILE_2	SWITCH_1	IF_9	IF_12	IF_14	CALL_21
0x4002640	          0x4889df	                            mov rdi, rbx	       498	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_4
0x4002643	      0xe800000000	                          call 0x4002648	       498	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_4
0x4002648	          0x4801d8	                            add rax, rbx	       498	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_4
0x400264b	      0x4889442410	             mov qword [rsp + 0x10], rax	       498	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_4
0x4002650	      0xe9a8fcffff	                           jmp 0x40022fd	       498	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_4
0x4002655	           0xf1f00	                         nop dword [rax]	       498	eelf_k1om.c	FUNCTION_8	WHILE_1	CALL_4
0x4002658	            0x31c0	                            xor eax, eax	       484	eelf_k1om.c	FUNCTION_8	IF_2
0x400265a	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       682	eelf_k1om.c	FUNCTION_8
0x400265f	    0x644833142528	                xor rdx, qword fs:[0x28]	       682	eelf_k1om.c	FUNCTION_8
0x4002668	            0x751f	                           jne 0x4002689	       682	eelf_k1om.c	FUNCTION_8
0x400266a	        0x4883c458	                           add rsp, 0x58	       682	eelf_k1om.c	FUNCTION_8
0x400266e	              0x5b	                                 pop rbx	       682	eelf_k1om.c	FUNCTION_8
0x400266f	              0x5d	                                 pop rbp	       682	eelf_k1om.c	FUNCTION_8
0x4002670	            0x415c	                                 pop r12	       682	eelf_k1om.c	FUNCTION_8
0x4002672	            0x415d	                                 pop r13	       682	eelf_k1om.c	FUNCTION_8
0x4002674	            0x415e	                                 pop r14	       682	eelf_k1om.c	FUNCTION_8
0x4002676	            0x415f	                                 pop r15	       682	eelf_k1om.c	FUNCTION_8
0x4002678	              0xc3	                                     ret	       682	eelf_k1om.c	FUNCTION_8
0x4002679	      0xb801000000	                              mov eax, 1	       672	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_20
0x400267e	            0xebda	                           jmp 0x400265a	       672	eelf_k1om.c	FUNCTION_8	WHILE_1	IF_20
0x4002680	            0x89d6	                            mov esi, edx	       481	eelf_k1om.c	FUNCTION_8	CALL_1
0x4002682	      0xe819f9ffff	         call sym.gldelf_k1om_try_needed	       481	eelf_k1om.c	FUNCTION_8	CALL_1
0x4002687	            0xebd1	                           jmp 0x400265a	       481	eelf_k1om.c	FUNCTION_8	CALL_1
0x4002689	      0xe800000000	                          call 0x400268e	       682	eelf_k1om.c	FUNCTION_8
gldelf_k1om_handle_option	CALL,73:DO,0:IF,56:SWITCH,1:WHILE,0:FOR,0:ELSE,47:functions,0	632
0x40004a0	              0x55	                                push rbp	      7209	eelf_k1om.c	FUNCTION_29
0x40004a1	              0x53	                                push rbx	      7209	eelf_k1om.c	FUNCTION_29
0x40004a2	        0x4883ec18	                           sub rsp, 0x18	      7209	eelf_k1om.c	FUNCTION_29
0x40004a6	    0x64488b042528	                mov rax, qword fs:[0x28]	      7209	eelf_k1om.c	FUNCTION_29
0x40004af	      0x4889442408	                mov qword [rsp + 8], rax	      7209	eelf_k1om.c	FUNCTION_29
0x40004b4	            0x31c0	                            xor eax, eax	      7209	eelf_k1om.c	FUNCTION_29
0x40004b6	    0x81ff92010000	                          cmp edi, 0x192	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004bc	     0xf84d6050000	                            je 0x4000a98	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004c2	            0x7e44	                           jle 0x4000508	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004c4	    0x81ff96010000	                          cmp edi, 0x196	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004ca	     0xf8480010000	                            je 0x4000650	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004d0	     0xf8f92000000	                            jg 0x4000568	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004d6	    0x81ff94010000	                          cmp edi, 0x194	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004dc	     0xf841e010000	                            je 0x4000600	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004e2	     0xf8fd8050000	                            jg 0x4000ac0	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004e8	     0xfb605000000	           movzx eax, byte [0x040004ef] 	      7257	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004ef	          0x83e03f	                           and eax, 0x3f	      7257	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004f2	          0x83c840	                            or eax, 0x40	      7257	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004f5	    0x880500000000	               mov byte [0x040004fb], al	      7257	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40004fb	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000500	            0xeb46	                           jmp 0x4000548	      7258	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000502	    0x660f1f440000	                    nop word [rax + rax]	      7258	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000508	    0x81ff2d010000	                          cmp edi, 0x12d	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x400050e	     0xf8404060000	                            je 0x4000b18	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000514	     0xf8ea6010000	                           jle 0x40006c0	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x400051a	    0x81ff90010000	                          cmp edi, 0x190	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000520	     0xf8412010000	                            je 0x4000638	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000526	     0xf8fd4050000	                            jg 0x4000b00	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x400052c	    0x81ff2e010000	                          cmp edi, 0x12e	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000532	     0xf85f8050000	                           jne 0x4000b30	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000538	    0x800d00000000	                 or byte [0x0400053f], 2	      7448	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x400053f	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000544	         0xf1f4000	                         nop dword [rax]	      7453	eelf_k1om.c	FUNCTION_29
0x4000548	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      7454	eelf_k1om.c	FUNCTION_29
0x400054d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      7454	eelf_k1om.c	FUNCTION_29
0x4000556	     0xf859a080000	                           jne 0x4000df6	      7454	eelf_k1om.c	FUNCTION_29
0x400055c	        0x4883c418	                           add rsp, 0x18	      7454	eelf_k1om.c	FUNCTION_29
0x4000560	              0x5b	                                 pop rbx	      7454	eelf_k1om.c	FUNCTION_29
0x4000561	              0x5d	                                 pop rbp	      7454	eelf_k1om.c	FUNCTION_29
0x4000562	              0xc3	                                     ret	      7454	eelf_k1om.c	FUNCTION_29
0x4000563	       0xf1f440000	                   nop dword [rax + rax]	      7454	eelf_k1om.c	FUNCTION_29
0x4000568	    0x81ff98010000	                          cmp edi, 0x198	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x400056e	     0xf84a4000000	                            je 0x4000618	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000574	     0xf8cc6050000	                            jl 0x4000b40	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x400057a	    0x81ff99010000	                          cmp edi, 0x199	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000580	     0xf85aa050000	                           jne 0x4000b30	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000586	    0x488b1d000000	            mov rbx, qword [0x0400058d] 	      7228	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_4	CALL_4
0x400058d	      0xbe00000000	                              mov esi, 0	      7228	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_4	CALL_4
0x4000592	          0x4889df	                            mov rdi, rbx	      7228	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_4	CALL_4
0x4000595	      0xe800000000	                          call 0x400059a	      7228	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_4	CALL_4
0x400059a	            0x85c0	                           test eax, eax	      7228	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_4	CALL_4
0x400059c	     0xf843e060000	                            je 0x4000be0	      7228	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_4	CALL_4
0x40005a2	      0xbe00000000	                              mov esi, 0	      7230	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_1	IF_5	CALL_5
0x40005a7	          0x4889df	                            mov rdi, rbx	      7230	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_1	IF_5	CALL_5
0x40005aa	      0xe800000000	                          call 0x40005af	      7230	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_1	IF_5	CALL_5
0x40005af	            0x85c0	                           test eax, eax	      7230	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_1	IF_5	CALL_5
0x40005b1	            0x7434	                            je 0x40005e7	      7230	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_1	IF_5	CALL_5
0x40005b3	      0xbe00000000	                              mov esi, 0	      7232	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_2	IF_6	CALL_6
0x40005b8	          0x4889df	                            mov rdi, rbx	      7232	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_2	IF_6	CALL_6
0x40005bb	      0xe800000000	                          call 0x40005c0	      7232	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_2	IF_6	CALL_6
0x40005c0	            0x85c0	                           test eax, eax	      7232	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_2	IF_6	CALL_6
0x40005c2	     0xf84fb060000	                            je 0x4000cc3	      7232	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_2	IF_6	CALL_6
0x40005c8	      0xbe00000000	                              mov esi, 0	      7234	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_3	IF_7	CALL_7
0x40005cd	          0x4889df	                            mov rdi, rbx	      7234	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_3	IF_7	CALL_7
0x40005d0	      0xe800000000	                          call 0x40005d5	      7234	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_3	IF_7	CALL_7
0x40005d5	            0x85c0	                           test eax, eax	      7234	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_3	IF_7	CALL_7
0x40005d7	      0xba05000000	                              mov edx, 5	      7237	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_4	CALL_9
0x40005dc	      0xbe00000000	                              mov esi, 0	      7237	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_4	CALL_9
0x40005e1	     0xf8579060000	                           jne 0x4000c60	      7234	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_3	IF_7	CALL_7
0x40005e7	    0xc70500000000	               mov dword [0x040005f1], 5	      7231	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_1	IF_5
0x40005f1	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x40005f6	      0xe94dffffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x40005fb	       0xf1f440000	                   nop dword [rax + rax]	      7453	eelf_k1om.c	FUNCTION_29
0x4000600	    0x802500000000	             and byte [0x04000607], 0x3f	      7261	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000607	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x400060c	      0xe937ffffff	                           jmp 0x4000548	      7262	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000611	     0xf1f80000000	                         nop dword [rax]	      7262	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000618	    0x488b35000000	            mov rsi, qword [0x0400061f] 	      7241	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_10
0x400061f	      0xbf00000000	                              mov edi, 0	      7241	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_10
0x4000624	      0xe887fdffff	call sym.gldelf_k1om_append_to_separated_string	      7241	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_10
0x4000629	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x400062e	      0xe915ffffff	                           jmp 0x4000548	      7242	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000633	       0xf1f440000	                   nop dword [rax + rax]	      7242	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000638	    0x802500000000	             and byte [0x0400063f], 0xfe	      7249	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x400063f	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000644	      0xe9fffeffff	                           jmp 0x4000548	      7250	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000649	     0xf1f80000000	                         nop dword [rax]	      7250	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000650	     0xfb605000000	           movzx eax, byte [0x04000657] 	      7277	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000657	    0x488b1d000000	            mov rbx, qword [0x0400065e] 	      7278	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_8	CALL_13
0x400065e	      0xbf00000000	                              mov edi, 0	      7278	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_8	CALL_13
0x4000663	      0xb905000000	                              mov ecx, 5	      7278	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_8	CALL_13
0x4000668	          0x4889de	                            mov rsi, rbx	      7278	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_8	CALL_13
0x400066b	          0x83e0f3	                     and eax, 0xfffffff3	      7277	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x400066e	    0x880500000000	               mov byte [0x04000674], al	      7277	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000674	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7278	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_8	CALL_13
0x4000676	     0xf844c050000	                            je 0x4000bc8	      7278	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_8	CALL_13
0x400067c	          0x803b67	                    cmp byte [rbx], 0x67	      7280	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9	CALL_14
0x400067f	     0xf8573050000	                           jne 0x4000bf8	      7280	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9	CALL_14
0x4000685	        0x807b016e	                cmp byte [rbx + 1], 0x6e	      7280	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9	CALL_14
0x4000689	     0xf8569050000	                           jne 0x4000bf8	      7280	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9	CALL_14
0x400068f	        0x807b0275	                cmp byte [rbx + 2], 0x75	      7280	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9	CALL_14
0x4000693	     0xf855f050000	                           jne 0x4000bf8	      7280	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9	CALL_14
0x4000699	        0x807b0300	                   cmp byte [rbx + 3], 0	      7280	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9	CALL_14
0x400069d	     0xf8555050000	                           jne 0x4000bf8	      7280	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9	CALL_14
0x40006a3	          0x83c808	                               or eax, 8	      7281	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9
0x40006a6	    0x880500000000	               mov byte [0x040006ac], al	      7281	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_5	IF_9
0x40006ac	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x40006b1	      0xe992feffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x40006b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7453	eelf_k1om.c	FUNCTION_29
0x40006c0	          0x83ff50	                           cmp edi, 0x50	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40006c3	     0xf8417040000	                            je 0x4000ae0	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40006c9	          0x83ff7a	                           cmp edi, 0x7a	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40006cc	     0xf855e040000	                           jne 0x4000b30	      7210	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x40006d2	    0x488b1d000000	            mov rbx, qword [0x040006d9] 	      7292	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_11	CALL_18
0x40006d9	      0xbf00000000	                              mov edi, 0	      7292	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_11	CALL_18
0x40006de	      0xb905000000	                              mov ecx, 5	      7292	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_11	CALL_18
0x40006e3	          0x4889de	                            mov rsi, rbx	      7292	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_11	CALL_18
0x40006e6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7292	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_11	CALL_18
0x40006e8	     0xf84c2040000	                            je 0x4000bb0	      7292	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_11	CALL_18
0x40006ee	      0xbf00000000	                              mov edi, 0	      7294	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12	CALL_19
0x40006f3	      0xb907000000	                              mov ecx, 7	      7294	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12	CALL_19
0x40006f8	          0x4889de	                            mov rsi, rbx	      7294	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12	CALL_19
0x40006fb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7294	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12	CALL_19
0x40006fd	     0xf847d050000	                            je 0x4000c80	      7294	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12	CALL_19
0x4000703	      0xbf00000000	                              mov edi, 0	      7296	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_9	IF_13	CALL_20
0x4000708	      0xb908000000	                              mov ecx, 8	      7296	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_9	IF_13	CALL_20
0x400070d	          0x4889de	                            mov rsi, rbx	      7296	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_9	IF_13	CALL_20
0x4000710	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7296	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_9	IF_13	CALL_20
0x4000712	     0xf849a050000	                            je 0x4000cb2	      7296	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_9	IF_13	CALL_20
0x4000718	      0xbf00000000	                              mov edi, 0	      7298	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14
0x400071d	      0xb90e000000	                            mov ecx, 0xe	      7298	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14
0x4000722	          0x4889de	                            mov rsi, rbx	      7298	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14
0x4000725	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7298	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14
0x4000727	     0xf84b9050000	                            je 0x4000ce6	      7298	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14
0x400072d	      0xbf00000000	                              mov edi, 0	      7307	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16
0x4000732	      0xb911000000	                           mov ecx, 0x11	      7307	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16
0x4000737	          0x4889de	                            mov rsi, rbx	      7307	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16
0x400073a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7307	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16
0x400073c	     0xf84dc040000	                            je 0x4000c1e	      7307	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16
0x4000742	      0xbf00000000	                              mov edi, 0	      7316	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18
0x4000747	      0xb90b000000	                            mov ecx, 0xb	      7316	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18
0x400074c	          0x4889de	                            mov rsi, rbx	      7316	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18
0x400074f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7316	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18
0x4000751	     0xf84d4050000	                            je 0x4000d2b	      7316	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18
0x4000757	      0xbf00000000	                              mov edi, 0	      7327	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_13	IF_21	CALL_30
0x400075c	      0xb90a000000	                            mov ecx, 0xa	      7327	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_13	IF_21	CALL_30
0x4000761	          0x4889de	                            mov rsi, rbx	      7327	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_13	IF_21	CALL_30
0x4000764	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7327	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_13	IF_21	CALL_30
0x4000766	     0xf8401060000	                            je 0x4000d6d	      7327	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_13	IF_21	CALL_30
0x400076c	      0xbf00000000	                              mov edi, 0	      7332	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_14	IF_22	CALL_31
0x4000771	      0xb90c000000	                            mov ecx, 0xc	      7332	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_14	IF_22	CALL_31
0x4000776	          0x4889de	                            mov rsi, rbx	      7332	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_14	IF_22	CALL_31
0x4000779	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7332	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_14	IF_22	CALL_31
0x400077b	     0xf8404060000	                            je 0x4000d85	      7332	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_14	IF_22	CALL_31
0x4000781	      0xbf00000000	                              mov edi, 0	      7337	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_15	IF_23	CALL_32
0x4000786	      0xb90c000000	                            mov ecx, 0xc	      7337	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_15	IF_23	CALL_32
0x400078b	          0x4889de	                            mov rsi, rbx	      7337	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_15	IF_23	CALL_32
0x400078e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7337	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_15	IF_23	CALL_32
0x4000790	     0xf8439060000	                            je 0x4000dcf	      7337	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_15	IF_23	CALL_32
0x4000796	      0xbf00000000	                              mov edi, 0	      7341	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_16	IF_24	CALL_33
0x400079b	      0xb907000000	                              mov ecx, 7	      7341	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_16	IF_24	CALL_33
0x40007a0	          0x4889de	                            mov rsi, rbx	      7341	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_16	IF_24	CALL_33
0x40007a3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7341	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_16	IF_24	CALL_33
0x40007a5	     0xf8439060000	                            je 0x4000de4	      7341	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_16	IF_24	CALL_33
0x40007ab	      0xbe00000000	                              mov esi, 0	      7343	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_17	IF_25	CALL_34
0x40007b0	          0x4889df	                            mov rdi, rbx	      7343	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_17	IF_25	CALL_34
0x40007b3	      0xe800000000	                          call 0x40007b8	      7343	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_17	IF_25	CALL_34
0x40007b8	            0x85c0	                           test eax, eax	      7343	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_17	IF_25	CALL_34
0x40007ba	     0xf843b060000	                            je 0x4000dfb	      7343	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_17	IF_25	CALL_34
0x40007c0	      0xbe00000000	                              mov esi, 0	      7345	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_18	IF_26	CALL_35
0x40007c5	          0x4889df	                            mov rdi, rbx	      7345	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_18	IF_26	CALL_35
0x40007c8	      0xe800000000	                          call 0x40007cd	      7345	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_18	IF_26	CALL_35
0x40007cd	            0x85c0	                           test eax, eax	      7345	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_18	IF_26	CALL_35
0x40007cf	     0xf8438060000	                            je 0x4000e0d	      7345	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_18	IF_26	CALL_35
0x40007d5	      0xbe00000000	                              mov esi, 0	      7347	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_19	IF_27	CALL_36
0x40007da	          0x4889df	                            mov rdi, rbx	      7347	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_19	IF_27	CALL_36
0x40007dd	      0xe800000000	                          call 0x40007e2	      7347	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_19	IF_27	CALL_36
0x40007e2	            0x85c0	                           test eax, eax	      7347	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_19	IF_27	CALL_36
0x40007e4	     0xf844d060000	                            je 0x4000e37	      7347	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_19	IF_27	CALL_36
0x40007ea	      0xbe00000000	                              mov esi, 0	      7349	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_20	IF_28	CALL_37
0x40007ef	          0x4889df	                            mov rdi, rbx	      7349	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_20	IF_28	CALL_37
0x40007f2	      0xe800000000	                          call 0x40007f7	      7349	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_20	IF_28	CALL_37
0x40007f7	            0x85c0	                           test eax, eax	      7349	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_20	IF_28	CALL_37
0x40007f9	     0xf8423060000	                            je 0x4000e22	      7349	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_20	IF_28	CALL_37
0x40007ff	      0xbe00000000	                              mov esi, 0	      7351	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_21	IF_29	CALL_38
0x4000804	          0x4889df	                            mov rdi, rbx	      7351	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_21	IF_29	CALL_38
0x4000807	      0xe800000000	                          call 0x400080c	      7351	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_21	IF_29	CALL_38
0x400080c	            0x85c0	                           test eax, eax	      7351	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_21	IF_29	CALL_38
0x400080e	     0xf8468070000	                            je 0x4000f7c	      7351	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_21	IF_29	CALL_38
0x4000814	      0xbe00000000	                              mov esi, 0	      7353	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_22	IF_30	CALL_39
0x4000819	          0x4889df	                            mov rdi, rbx	      7353	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_22	IF_30	CALL_39
0x400081c	      0xe800000000	                          call 0x4000821	      7353	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_22	IF_30	CALL_39
0x4000821	            0x85c0	                           test eax, eax	      7353	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_22	IF_30	CALL_39
0x4000823	     0xf8441070000	                            je 0x4000f6a	      7353	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_22	IF_30	CALL_39
0x4000829	      0xbe00000000	                              mov esi, 0	      7355	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_23	IF_31	CALL_40
0x400082e	          0x4889df	                            mov rdi, rbx	      7355	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_23	IF_31	CALL_40
0x4000831	      0xe800000000	                          call 0x4000836	      7355	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_23	IF_31	CALL_40
0x4000836	            0x85c0	                           test eax, eax	      7355	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_23	IF_31	CALL_40
0x4000838	     0xf84b1060000	                            je 0x4000eef	      7355	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_23	IF_31	CALL_40
0x400083e	          0x803b6e	                    cmp byte [rbx], 0x6e	      7357	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32	CALL_41
0x4000841	            0x7516	                           jne 0x4000859	      7357	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32	CALL_41
0x4000843	        0x807b016f	                cmp byte [rbx + 1], 0x6f	      7357	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32	CALL_41
0x4000847	            0x7510	                           jne 0x4000859	      7357	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32	CALL_41
0x4000849	        0x807b0277	                cmp byte [rbx + 2], 0x77	      7357	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32	CALL_41
0x400084d	            0x750a	                           jne 0x4000859	      7357	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32	CALL_41
0x400084f	        0x807b0300	                   cmp byte [rbx + 3], 0	      7357	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32	CALL_41
0x4000853	     0xf84f0050000	                            je 0x4000e49	      7357	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32	CALL_41
0x4000859	      0xbe00000000	                              mov esi, 0	      7362	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_25	IF_33	CALL_42
0x400085e	          0x4889df	                            mov rdi, rbx	      7362	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_25	IF_33	CALL_42
0x4000861	      0xe800000000	                          call 0x4000866	      7362	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_25	IF_33	CALL_42
0x4000866	            0x85c0	                           test eax, eax	      7362	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_25	IF_33	CALL_42
0x4000868	     0xf8467060000	                            je 0x4000ed5	      7362	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_25	IF_33	CALL_42
0x400086e	      0xbe00000000	                              mov esi, 0	      7367	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_26	IF_34	CALL_43
0x4000873	          0x4889df	                            mov rdi, rbx	      7367	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_26	IF_34	CALL_43
0x4000876	      0xe800000000	                          call 0x400087b	      7367	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_26	IF_34	CALL_43
0x400087b	            0x85c0	                           test eax, eax	      7367	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_26	IF_34	CALL_43
0x400087d	     0xf8435060000	                            je 0x4000eb8	      7367	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_26	IF_34	CALL_43
0x4000883	      0xbe00000000	                              mov esi, 0	      7372	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_27	IF_35	CALL_44
0x4000888	          0x4889df	                            mov rdi, rbx	      7372	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_27	IF_35	CALL_44
0x400088b	      0xe800000000	                          call 0x4000890	      7372	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_27	IF_35	CALL_44
0x4000890	            0x85c0	                           test eax, eax	      7372	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_27	IF_35	CALL_44
0x4000892	     0xf840f060000	                            je 0x4000ea7	      7372	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_27	IF_35	CALL_44
0x4000898	      0xbe00000000	                              mov esi, 0	      7374	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_28	IF_36	CALL_45
0x400089d	          0x4889df	                            mov rdi, rbx	      7374	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_28	IF_36	CALL_45
0x40008a0	      0xe800000000	                          call 0x40008a5	      7374	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_28	IF_36	CALL_45
0x40008a5	            0x85c0	                           test eax, eax	      7374	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_28	IF_36	CALL_45
0x40008a7	     0xf84e9050000	                            je 0x4000e96	      7374	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_28	IF_36	CALL_45
0x40008ad	      0xbe00000000	                              mov esi, 0	      7376	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_29	IF_37	CALL_46
0x40008b2	          0x4889df	                            mov rdi, rbx	      7376	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_29	IF_37	CALL_46
0x40008b5	      0xe800000000	                          call 0x40008ba	      7376	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_29	IF_37	CALL_46
0x40008ba	            0x85c0	                           test eax, eax	      7376	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_29	IF_37	CALL_46
0x40008bc	     0xf84c3050000	                            je 0x4000e85	      7376	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_29	IF_37	CALL_46
0x40008c2	      0xbe00000000	                              mov esi, 0	      7378	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_30	IF_38	CALL_47
0x40008c7	          0x4889df	                            mov rdi, rbx	      7378	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_30	IF_38	CALL_47
0x40008ca	      0xe800000000	                          call 0x40008cf	      7378	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_30	IF_38	CALL_47
0x40008cf	            0x85c0	                           test eax, eax	      7378	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_30	IF_38	CALL_47
0x40008d1	     0xf849d050000	                            je 0x4000e74	      7378	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_30	IF_38	CALL_47
0x40008d7	      0xbe00000000	                              mov esi, 0	      7380	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_31	IF_39	CALL_48
0x40008dc	          0x4889df	                            mov rdi, rbx	      7380	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_31	IF_39	CALL_48
0x40008df	      0xe800000000	                          call 0x40008e4	      7380	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_31	IF_39	CALL_48
0x40008e4	            0x85c0	                           test eax, eax	      7380	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_31	IF_39	CALL_48
0x40008e6	     0xf8477050000	                            je 0x4000e63	      7380	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_31	IF_39	CALL_48
0x40008ec	      0xbe00000000	                              mov esi, 0	      7382	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_32	IF_40	CALL_49
0x40008f1	          0x4889df	                            mov rdi, rbx	      7382	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_32	IF_40	CALL_49
0x40008f4	      0xe800000000	                          call 0x40008f9	      7382	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_32	IF_40	CALL_49
0x40008f9	            0x85c0	                           test eax, eax	      7382	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_32	IF_40	CALL_49
0x40008fb	     0xf8475070000	                            je 0x4001076	      7382	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_32	IF_40	CALL_49
0x4000901	      0xbe00000000	                              mov esi, 0	      7384	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_33	IF_41	CALL_50
0x4000906	          0x4889df	                            mov rdi, rbx	      7384	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_33	IF_41	CALL_50
0x4000909	      0xe800000000	                          call 0x400090e	      7384	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_33	IF_41	CALL_50
0x400090e	            0x85c0	                           test eax, eax	      7384	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_33	IF_41	CALL_50
0x4000910	     0xf844f070000	                            je 0x4001065	      7384	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_33	IF_41	CALL_50
0x4000916	      0xbe00000000	                              mov esi, 0	      7386	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42	CALL_51
0x400091b	          0x4889df	                            mov rdi, rbx	      7386	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42	CALL_51
0x400091e	      0xe800000000	                          call 0x4000923	      7386	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42	CALL_51
0x4000923	            0x85c0	                           test eax, eax	      7386	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42	CALL_51
0x4000925	     0xf841d070000	                            je 0x4001048	      7386	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42	CALL_51
0x400092b	      0xbe00000000	                              mov esi, 0	      7388	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43	CALL_52
0x4000930	          0x4889df	                            mov rdi, rbx	      7388	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43	CALL_52
0x4000933	      0xe800000000	                          call 0x4000938	      7388	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43	CALL_52
0x4000938	            0x85c0	                           test eax, eax	      7388	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43	CALL_52
0x400093a	     0xf84eb060000	                            je 0x400102b	      7388	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43	CALL_52
0x4000940	      0xbe00000000	                              mov esi, 0	      7390	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_36	IF_44	CALL_53
0x4000945	          0x4889df	                            mov rdi, rbx	      7390	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_36	IF_44	CALL_53
0x4000948	      0xe800000000	                          call 0x400094d	      7390	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_36	IF_44	CALL_53
0x400094d	            0x85c0	                           test eax, eax	      7390	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_36	IF_44	CALL_53
0x400094f	     0xf84c5060000	                            je 0x400101a	      7390	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_36	IF_44	CALL_53
0x4000955	      0xbe00000000	                              mov esi, 0	      7392	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_37	IF_45	CALL_54
0x400095a	          0x4889df	                            mov rdi, rbx	      7392	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_37	IF_45	CALL_54
0x400095d	      0xe800000000	                          call 0x4000962	      7392	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_37	IF_45	CALL_54
0x4000962	            0x85c0	                           test eax, eax	      7392	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_37	IF_45	CALL_54
0x4000964	     0xf849f060000	                            je 0x4001009	      7392	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_37	IF_45	CALL_54
0x400096a	      0xbe00000000	                              mov esi, 0	      7394	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_38	IF_46	CALL_55
0x400096f	          0x4889df	                            mov rdi, rbx	      7394	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_38	IF_46	CALL_55
0x4000972	      0xe800000000	                          call 0x4000977	      7394	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_38	IF_46	CALL_55
0x4000977	            0x85c0	                           test eax, eax	      7394	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_38	IF_46	CALL_55
0x4000979	     0xf848a060000	                            je 0x4001009	      7394	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_38	IF_46	CALL_55
0x400097f	      0xbe00000000	                              mov esi, 0	      7397	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_39	IF_47	CALL_56
0x4000984	          0x4889df	                            mov rdi, rbx	      7397	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_39	IF_47	CALL_56
0x4000987	      0xe800000000	                          call 0x400098c	      7397	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_39	IF_47	CALL_56
0x400098c	            0x85c0	                           test eax, eax	      7397	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_39	IF_47	CALL_56
0x400098e	     0xf8461060000	                            je 0x4000ff5	      7397	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_39	IF_47	CALL_56
0x4000994	      0xbe00000000	                              mov esi, 0	      7400	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_40	IF_48	CALL_57
0x4000999	          0x4889df	                            mov rdi, rbx	      7400	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_40	IF_48	CALL_57
0x400099c	      0xe800000000	                          call 0x40009a1	      7400	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_40	IF_48	CALL_57
0x40009a1	            0x85c0	                           test eax, eax	      7400	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_40	IF_48	CALL_57
0x40009a3	     0xf8438060000	                            je 0x4000fe1	      7400	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_40	IF_48	CALL_57
0x40009a9	      0xbe00000000	                              mov esi, 0	      7402	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_41	IF_49	CALL_58
0x40009ae	          0x4889df	                            mov rdi, rbx	      7402	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_41	IF_49	CALL_58
0x40009b1	      0xe800000000	                          call 0x40009b6	      7402	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_41	IF_49	CALL_58
0x40009b6	            0x85c0	                           test eax, eax	      7402	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_41	IF_49	CALL_58
0x40009b8	     0xf840f060000	                            je 0x4000fcd	      7402	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_41	IF_49	CALL_58
0x40009be	      0xba09000000	                              mov edx, 9	      7405	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_59
0x40009c3	      0xbe00000000	                              mov esi, 0	      7405	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_59
0x40009c8	          0x4889df	                            mov rdi, rbx	      7405	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_59
0x40009cb	      0xe800000000	                          call 0x40009d0	      7405	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_59
0x40009d0	            0x85c0	                           test eax, eax	      7405	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_59
0x40009d2	     0xf85e6050000	                           jne 0x4000fbe	      7405	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_59
0x40009d8	        0x488d6b09	                      lea rbp, [rbx + 9]	      7407	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	IF_51	CALL_60
0x40009dc	      0xbe00000000	                              mov esi, 0	      7407	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	IF_51	CALL_60
0x40009e1	          0x4889ef	                            mov rdi, rbp	      7407	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	IF_51	CALL_60
0x40009e4	      0xe800000000	                          call 0x40009e9	      7407	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	IF_51	CALL_60
0x40009e9	            0x85c0	                           test eax, eax	      7407	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	IF_51	CALL_60
0x40009eb	     0xf84b5050000	                            je 0x4000fa6	      7407	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	IF_51	CALL_60
0x40009f1	      0xbe00000000	                              mov esi, 0	      7412	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_43	IF_52	CALL_61
0x40009f6	          0x4889ef	                            mov rdi, rbp	      7412	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_43	IF_52	CALL_61
0x40009f9	      0xe800000000	                          call 0x40009fe	      7412	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_43	IF_52	CALL_61
0x40009fe	            0x85c0	                           test eax, eax	      7412	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_43	IF_52	CALL_61
0x4000a00	     0xf8488050000	                            je 0x4000f8e	      7412	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_43	IF_52	CALL_61
0x4000a06	      0xba07000000	                              mov edx, 7	      7417	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_62
0x4000a0b	      0xbe00000000	                              mov esi, 0	      7417	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_62
0x4000a10	          0x4889ef	                            mov rdi, rbp	      7417	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_62
0x4000a13	      0xe800000000	                          call 0x4000a18	      7417	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_62
0x4000a18	            0x85c0	                           test eax, eax	      7417	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_62
0x4000a1a	     0xf84f3040000	                            je 0x4000f13	      7417	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_62
0x4000a20	      0xba07000000	                              mov edx, 7	      7426	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_66
0x4000a25	      0xbe00000000	                              mov esi, 0	      7426	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_66
0x4000a2a	          0x4889ef	                            mov rdi, rbp	      7426	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_66
0x4000a2d	      0xe800000000	                          call 0x4000a32	      7426	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_66
0x4000a32	            0x85c0	                           test eax, eax	      7426	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_66
0x4000a34	     0xf85ca040000	                           jne 0x4000f04	      7426	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_66
0x4000a3a	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      7429	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_67
0x4000a3e	            0x31d2	                            xor edx, edx	      7429	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_67
0x4000a40	          0x4889e6	                            mov rsi, rsp	      7429	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_67
0x4000a43	      0xe800000000	                          call 0x4000a48	      7429	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_67
0x4000a48	    0x880500000000	               mov byte [0x04000a4e], al	      7429	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	CALL_67
0x4000a4e	        0x488b0424	                    mov rax, qword [rsp]	      7430	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56
0x4000a52	          0x803800	                       cmp byte [rax], 0	      7430	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56
0x4000a55	            0x7429	                            je 0x4000a80	      7430	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56
0x4000a57	    0x488b05000000	            mov rax, qword [0x04000a5e] 	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a5e	      0xbe00000000	                              mov esi, 0	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a63	            0x31ff	                            xor edi, edi	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a65	      0xba05000000	                              mov edx, 5	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a6a	        0x488d5810	                   lea rbx, [rax + 0x10]	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a6e	      0xe800000000	                          call 0x4000a73	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a73	          0x4889de	                            mov rsi, rbx	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a76	          0x4889c7	                            mov rdi, rax	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a79	            0x31c0	                            xor eax, eax	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a7b	      0xe800000000	                          call 0x4000a80	      7431	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55	IF_56	CALL_69
0x4000a80	    0x800d00000000	              or byte [0x04000a87], 0x10	      7433	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_45	IF_55
0x4000a87	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000a8c	      0xe9b7faffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000a91	     0xf1f80000000	                         nop dword [rax]	      7453	eelf_k1om.c	FUNCTION_29
0x4000a98	    0x800d00000000	              or byte [0x04000a9f], 0x60	      7267	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000a9f	    0x48830d000000	                or qword [0x04000aa7], 4	      7265	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000aa7	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000aac	    0x66810d000000	             or word [0x04000ab5], 0x180	      7268	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000ab5	      0xe98efaffff	                           jmp 0x4000548	      7269	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000aba	    0x660f1f440000	                    nop word [rax + rax]	      7269	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000ac0	    0x488b3d000000	            mov rdi, qword [0x04000ac7] 	      7272	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_12
0x4000ac7	      0xe800000000	                          call 0x4000acc	      7272	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_12
0x4000acc	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000ad1	      0xe972faffff	                           jmp 0x4000548	      7273	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000ad6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7273	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000ae0	    0x488b35000000	            mov rsi, qword [0x04000ae7] 	      7245	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_11
0x4000ae7	      0xbf00000000	                              mov edi, 0	      7245	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_11
0x4000aec	      0xe8bff8ffff	call sym.gldelf_k1om_append_to_separated_string	      7245	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_11
0x4000af1	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000af6	      0xe94dfaffff	                           jmp 0x4000548	      7246	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000afb	       0xf1f440000	                   nop dword [rax + rax]	      7246	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000b00	    0x800d00000000	                 or byte [0x04000b07], 1	      7253	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000b07	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000b0c	      0xe937faffff	                           jmp 0x4000548	      7254	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000b11	     0xf1f80000000	                         nop dword [rax]	      7254	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000b18	    0x802500000000	             and byte [0x04000b1f], 0xfd	      7444	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000b1f	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000b24	      0xe91ffaffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000b29	     0xf1f80000000	                         nop dword [rax]	      7453	eelf_k1om.c	FUNCTION_29
0x4000b30	            0x31c0	                            xor eax, eax	      7213	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000b32	      0xe911faffff	                           jmp 0x4000548	      7213	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000b37	    0x660f1f840000	                    nop word [rax + rax]	      7213	eelf_k1om.c	FUNCTION_29	SWITCH_1
0x4000b40	    0x488b3d000000	            mov rdi, qword [0x04000b47] 	      7216	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_1
0x4000b47	          0x4885ff	                           test rdi, rdi	      7216	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_1
0x4000b4a	            0x7410	                            je 0x4000b5c	      7216	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_1
0x4000b4c	      0xe800000000	                          call 0x4000b51	      7218	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_1	CALL_1
0x4000b51	    0x48c705000000	               mov qword [0x04000b5c], 0	      7219	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_1
0x4000b5c	    0x488b15000000	            mov rdx, qword [0x04000b63] 	      7221	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_2
0x4000b63	          0x4885d2	                           test rdx, rdx	      7221	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_2
0x4000b66	     0xf8431010000	                            je 0x4000c9d	      7221	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_2
0x4000b6c	      0xb905000000	                              mov ecx, 5	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000b71	          0x4889d6	                            mov rsi, rdx	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000b74	      0xbf00000000	                              mov edi, 0	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000b79	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000b7b	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000b80	        0x400f97c6	                                seta sil	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000b84	           0xf92c1	                                 setb cl	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000b87	          0x4038ce	                             cmp sil, cl	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000b8a	     0xf84b8f9ffff	                            je 0x4000548	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000b90	          0x4889d7	                            mov rdi, rdx	      7224	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_3
0x4000b93	      0xe800000000	                          call 0x4000b98	      7224	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_3
0x4000b98	    0x488905000000	            mov qword [0x04000b9f], rax 	      7224	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_3
0x4000b9f	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000ba4	      0xe99ff9ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000ba9	     0xf1f80000000	                         nop dword [rax]	      7453	eelf_k1om.c	FUNCTION_29
0x4000bb0	    0x800d00000000	              or byte [0x04000bb7], 0x60	      7293	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_11
0x4000bb7	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000bbc	      0xe987f9ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000bc1	     0xf1f80000000	                         nop dword [rax]	      7453	eelf_k1om.c	FUNCTION_29
0x4000bc8	          0x83c804	                               or eax, 4	      7279	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_8
0x4000bcb	    0x880500000000	               mov byte [0x04000bd1], al	      7279	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_8
0x4000bd1	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000bd6	      0xe96df9ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000bdb	       0xf1f440000	                   nop dword [rax + rax]	      7453	eelf_k1om.c	FUNCTION_29
0x4000be0	    0xc70500000000	               mov dword [0x04000bea], 0	      7229	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_4
0x4000bea	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000bef	      0xe954f9ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000bf4	         0xf1f4000	                         nop dword [rax]	      7453	eelf_k1om.c	FUNCTION_29
0x4000bf8	      0xbf00000000	                              mov edi, 0	      7282	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_6	IF_10	CALL_15
0x4000bfd	      0xb905000000	                              mov ecx, 5	      7282	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_6	IF_10	CALL_15
0x4000c02	          0x4889de	                            mov rsi, rbx	      7282	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_6	IF_10	CALL_15
0x4000c05	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7282	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_6	IF_10	CALL_15
0x4000c07	     0xf85ca000000	                           jne 0x4000cd7	      7282	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_6	IF_10	CALL_15
0x4000c0d	    0x800d00000000	               or byte [0x04000c14], 0xc	      7285	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_6	IF_10
0x4000c14	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000c19	      0xe92af9ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000c1e	        0x488d7b11	                   lea rdi, [rbx + 0x11]	      7310	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	CALL_24
0x4000c22	            0x31d2	                            xor edx, edx	      7310	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	CALL_24
0x4000c24	          0x4889e6	                            mov rsi, rsp	      7310	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	CALL_24
0x4000c27	      0xe800000000	                          call 0x4000c2c	      7310	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	CALL_24
0x4000c2c	        0x488b1424	                    mov rdx, qword [rsp]	      7311	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17
0x4000c30	    0x488905000000	            mov qword [0x04000c37], rax 	      7310	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	CALL_24
0x4000c37	          0x803a00	                       cmp byte [rdx], 0	      7311	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17
0x4000c3a	            0x750d	                           jne 0x4000c49	      7311	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17
0x4000c3c	        0x488d50ff	                      lea rdx, [rax - 1]	      7312	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17
0x4000c40	          0x4885c2	                           test rdx, rax	      7312	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17
0x4000c43	     0xf84d6feffff	                            je 0x4000b1f	      7312	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17
0x4000c49	    0x488b05000000	            mov rax, qword [0x04000c50] 	      7313	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17	CALL_26
0x4000c50	      0xba05000000	                              mov edx, 5	      7313	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17	CALL_26
0x4000c55	      0xbe00000000	                              mov esi, 0	      7313	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17	CALL_26
0x4000c5a	        0x488d5811	                   lea rbx, [rax + 0x11]	      7313	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17	CALL_26
0x4000c5e	            0x6690	                                     nop	      7313	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_11	IF_16	IF_17	CALL_26
0x4000c60	            0x31ff	                            xor edi, edi	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000c62	      0xe800000000	                          call 0x4000c67	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000c67	          0x4889de	                            mov rsi, rbx	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000c6a	          0x4889c7	                            mov rdi, rax	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000c6d	            0x31c0	                            xor eax, eax	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000c6f	      0xe800000000	                          call 0x4000c74	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000c74	      0xe9a6feffff	                           jmp 0x4000b1f	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000c79	     0xf1f80000000	                         nop dword [rax]	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000c80	     0xfb605000000	           movzx eax, byte [0x04000c87] 	      7295	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12
0x4000c87	          0x83e09f	                     and eax, 0xffffff9f	      7295	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12
0x4000c8a	          0x83c820	                            or eax, 0x20	      7295	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12
0x4000c8d	    0x880500000000	               mov byte [0x04000c93], al	      7295	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_8	IF_12
0x4000c93	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000c98	      0xe9abf8ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000c9d	    0x48c705000000	               mov qword [0x04000ca8], 0	      7222	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_2
0x4000ca8	      0xba00000000	                              mov edx, 0	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000cad	      0xe9defeffff	                           jmp 0x4000b90	      7223	eelf_k1om.c	FUNCTION_29	SWITCH_1	IF_3	CALL_2
0x4000cb2	    0x800d00000000	                 or byte [0x04000cb9], 8	      7297	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_9	IF_13
0x4000cb9	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000cbe	      0xe985f8ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000cc3	    0xc70500000000	               mov dword [0x04000ccd], 3	      7233	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_2	IF_6
0x4000ccd	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000cd2	      0xe971f8ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000cd7	      0xba05000000	                              mov edx, 5	      7288	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_17
0x4000cdc	      0xbe00000000	                              mov esi, 0	      7288	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_17
0x4000ce1	      0xe97affffff	                           jmp 0x4000c60	      7288	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_17
0x4000ce6	        0x488d7b0e	                    lea rdi, [rbx + 0xe]	      7302	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	CALL_21
0x4000cea	            0x31d2	                            xor edx, edx	      7302	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	CALL_21
0x4000cec	          0x4889e6	                            mov rsi, rsp	      7302	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	CALL_21
0x4000cef	      0xe800000000	                          call 0x4000cf4	      7302	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	CALL_21
0x4000cf4	        0x488b1424	                    mov rdx, qword [rsp]	      7303	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15
0x4000cf8	    0x488905000000	            mov qword [0x04000cff], rax 	      7302	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	CALL_21
0x4000cff	          0x803a00	                       cmp byte [rdx], 0	      7303	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15
0x4000d02	            0x750d	                           jne 0x4000d11	      7303	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15
0x4000d04	        0x488d50ff	                      lea rdx, [rax - 1]	      7303	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15
0x4000d08	          0x4885c2	                           test rdx, rax	      7303	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15
0x4000d0b	     0xf840efeffff	                            je 0x4000b1f	      7303	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15
0x4000d11	    0x488b05000000	            mov rax, qword [0x04000d18] 	      7304	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15	CALL_23
0x4000d18	      0xba05000000	                              mov edx, 5	      7304	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15	CALL_23
0x4000d1d	      0xbe00000000	                              mov esi, 0	      7304	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15	CALL_23
0x4000d22	        0x488d580e	                    lea rbx, [rax + 0xe]	      7304	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15	CALL_23
0x4000d26	      0xe935ffffff	                           jmp 0x4000c60	      7304	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_10	IF_14	IF_15	CALL_23
0x4000d2b	        0x488d7b0b	                    lea rdi, [rbx + 0xb]	      7319	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_27
0x4000d2f	            0x31d2	                            xor edx, edx	      7319	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_27
0x4000d31	          0x4889e6	                            mov rsi, rsp	      7319	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_27
0x4000d34	      0xe800000000	                          call 0x4000d39	      7319	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_27
0x4000d39	        0x488b1424	                    mov rdx, qword [rsp]	      7320	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_19
0x4000d3d	    0x488905000000	            mov qword [0x04000d44], rax 	      7319	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_27
0x4000d44	          0x803a00	                       cmp byte [rdx], 0	      7320	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_19
0x4000d47	            0x7554	                           jne 0x4000d9d	      7320	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_19
0x4000d49	          0x4889c2	                            mov rdx, rax	      7320	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_19
0x4000d4c	        0x48c1ea3f	                           shr rdx, 0x3f	      7320	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_19
0x4000d50	            0x84d2	                             test dl, dl	      7320	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_19
0x4000d52	            0x7549	                           jne 0x4000d9d	      7320	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_19
0x4000d54	          0x4885c0	                           test rax, rax	      7322	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_20
0x4000d57	     0xf85c2fdffff	                           jne 0x4000b1f	      7322	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_20
0x4000d5d	    0x48c705000000	mov qword [0x04000d68], 0xffffffffffffffff 	      7325	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_20
0x4000d68	      0xe9b2fdffff	                           jmp 0x4000b1f	      7325	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	IF_20
0x4000d6d	    0x800d00000000	              or byte [0x04000d74], 0x80	      7329	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_13	IF_21
0x4000d74	    0x802500000000	             and byte [0x04000d7b], 0xfe	      7330	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_13	IF_21
0x4000d7b	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000d80	      0xe9c3f7ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000d85	    0x800d00000000	                 or byte [0x04000d8c], 1	      7334	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_14	IF_22
0x4000d8c	    0x802500000000	             and byte [0x04000d93], 0x7f	      7335	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_14	IF_22
0x4000d93	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000d98	      0xe9abf7ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000d9d	    0x488b05000000	            mov rax, qword [0x04000da4] 	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000da4	      0xba05000000	                              mov edx, 5	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000da9	      0xbe00000000	                              mov esi, 0	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000dae	            0x31ff	                            xor edi, edi	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000db0	        0x488d580b	                    lea rbx, [rax + 0xb]	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000db4	      0xe800000000	                          call 0x4000db9	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000db9	          0x4889de	                            mov rsi, rbx	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000dbc	          0x4889c7	                            mov rdi, rax	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000dbf	            0x31c0	                            xor eax, eax	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000dc1	      0xe800000000	                          call 0x4000dc6	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000dc6	    0x488b05000000	            mov rax, qword [0x04000dcd] 	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000dcd	            0xeb85	                           jmp 0x4000d54	      7321	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_12	IF_18	CALL_29
0x4000dcf	    0x48810d000000	        or qword [0x04000dda], 0x1000000	      7339	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_15	IF_23
0x4000dda	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000ddf	      0xe964f7ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000de4	    0x48830d000000	                or qword [0x04000dec], 2	      7342	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_16	IF_24
0x4000dec	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000df1	      0xe952f7ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000df6	      0xe800000000	                          call 0x4000dfb	      7454	eelf_k1om.c	FUNCTION_29
0x4000dfb	    0x48830d000000	             or qword [0x04000e03], 0x20	      7344	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_17	IF_25
0x4000e03	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000e08	      0xe93bf7ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000e0d	    0x48810d000000	            or qword [0x04000e18], 0x400	      7346	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_18	IF_26
0x4000e18	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000e1d	      0xe926f7ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000e22	    0x48810d000000	            or qword [0x04000e2d], 0x800	      7350	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_20	IF_28
0x4000e2d	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000e32	      0xe911f7ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000e37	    0x48830d000000	             or qword [0x04000e3f], 0x10	      7348	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_19	IF_27
0x4000e3f	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000e44	      0xe9fff6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000e49	    0x48830d000000	                or qword [0x04000e51], 8	      7359	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32
0x4000e51	    0x48830d000000	                or qword [0x04000e59], 1	      7360	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_24	IF_32
0x4000e59	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000e5e	      0xe9e5f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000e63	    0x802500000000	             and byte [0x04000e6a], 0xef	      7381	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_31	IF_39
0x4000e6a	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000e6f	      0xe9d4f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000e74	    0x800d00000000	              or byte [0x04000e7b], 0x10	      7379	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_30	IF_38
0x4000e7b	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000e80	      0xe9c3f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000e85	    0x800d00000000	                 or byte [0x04000e8c], 8	      7377	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_29	IF_37
0x4000e8c	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000e91	      0xe9b2f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000e96	    0x802500000000	             and byte [0x04000e9d], 0xbf	      7375	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_28	IF_36
0x4000e9d	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000ea2	      0xe9a1f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000ea7	    0x800d00000000	              or byte [0x04000eae], 0x40	      7373	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_27	IF_35
0x4000eae	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000eb3	      0xe990f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000eb8	    0x48830d000000	                or qword [0x04000ec0], 1	      7369	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_26	IF_34
0x4000ec0	    0x48810d000000	             or qword [0x04000ecb], 0x80	      7370	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_26	IF_34
0x4000ecb	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000ed0	      0xe973f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000ed5	    0x488325000000	and qword [0x04000edd], 0xfffffffffffffff7	      7364	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_25	IF_33
0x4000edd	    0x488325000000	and qword [0x04000ee5], 0xfffffffffffffffe	      7365	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_25	IF_33
0x4000ee5	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000eea	      0xe959f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000eef	    0x48810d000000	           or qword [0x04000efa], 0x1000	      7356	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_23	IF_31
0x4000efa	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000eff	      0xe944f6ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000f04	      0xba05000000	                              mov edx, 5	      7436	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_71
0x4000f09	      0xbe00000000	                              mov esi, 0	      7436	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_71
0x4000f0e	      0xe94dfdffff	                           jmp 0x4000c60	      7436	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	CALL_71
0x4000f13	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      7420	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_63
0x4000f17	            0x31d2	                            xor edx, edx	      7420	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_63
0x4000f19	          0x4889e6	                            mov rsi, rsp	      7420	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_63
0x4000f1c	      0xe800000000	                          call 0x4000f21	      7420	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_63
0x4000f21	    0x880500000000	               mov byte [0x04000f27], al	      7420	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	CALL_63
0x4000f27	        0x488b0424	                    mov rax, qword [rsp]	      7421	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54
0x4000f2b	          0x803800	                       cmp byte [rax], 0	      7421	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54
0x4000f2e	            0x7429	                            je 0x4000f59	      7421	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54
0x4000f30	    0x488b05000000	            mov rax, qword [0x04000f37] 	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f37	      0xbe00000000	                              mov esi, 0	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f3c	            0x31ff	                            xor edi, edi	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f3e	      0xba05000000	                              mov edx, 5	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f43	        0x488d5810	                   lea rbx, [rax + 0x10]	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f47	      0xe800000000	                          call 0x4000f4c	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f4c	          0x4889de	                            mov rsi, rbx	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f4f	          0x4889c7	                            mov rdi, rax	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f52	            0x31c0	                            xor eax, eax	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f54	      0xe800000000	                          call 0x4000f59	      7422	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53	IF_54	CALL_65
0x4000f59	    0x802500000000	             and byte [0x04000f60], 0xef	      7424	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_44	IF_53
0x4000f60	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000f65	      0xe9def5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000f6a	    0x48830d000000	            or qword [0x04000f72], 0x40 	      7354	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_22	IF_30
0x4000f72	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000f77	      0xe9ccf5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000f7c	    0x48830d000000	                or qword [0x04000f84], 8	      7352	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_21	IF_29
0x4000f84	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000f89	      0xe9baf5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000f8e	    0x800d00000000	              or byte [0x04000f95], 0x10	      7414	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_43	IF_52
0x4000f95	    0xc60500000000	            mov byte [0x04000f9c], 0x90 	      7415	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	ELSE_43	IF_52
0x4000f9c	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000fa1	      0xe9a2f5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000fa6	    0x802500000000	             and byte [0x04000fad], 0xef	      7409	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	IF_51
0x4000fad	    0xc60500000000	            mov byte [0x04000fb4], 0x67 	      7410	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_42	IF_50	IF_51
0x4000fb4	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000fb9	      0xe98af5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000fbe	      0xba05000000	                              mov edx, 5	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000fc3	      0xbe00000000	                              mov esi, 0	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000fc8	      0xe993fcffff	                           jmp 0x4000c60	      7440	eelf_k1om.c	FUNCTION_29	SWITCH_1	CALL_73
0x4000fcd	    0xc70500000000	               mov dword [0x04000fd7], 0	      7403	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_41	IF_49
0x4000fd7	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000fdc	      0xe967f5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000fe1	    0xc70500000000	               mov dword [0x04000feb], 1	      7401	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_40	IF_48
0x4000feb	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4000ff0	      0xe953f5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4000ff5	    0xc70500000000	               mov dword [0x04000fff], 0	      7398	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_39	IF_47
0x4000fff	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4001004	      0xe93ff5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4001009	    0x802500000000	             and byte [0x04001010], 0xfd	      7393	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_37	IF_45
0x4001010	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4001015	      0xe92ef5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x400101a	    0x800d00000000	                 or byte [0x04001021], 2	      7391	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_36	IF_44
0x4001021	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4001026	      0xe91df5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x400102b	     0xfb605000000	           movzx eax, byte [0x04001032] 	      7389	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43
0x4001032	          0x83e0f9	                     and eax, 0xfffffff9	      7389	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43
0x4001035	          0x83c804	                               or eax, 4	      7389	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43
0x4001038	    0x880500000000	               mov byte [0x0400103e], al	      7389	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_35	IF_43
0x400103e	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4001043	      0xe900f5ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4001048	     0xfb605000000	           movzx eax, byte [0x0400104f] 	      7387	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42
0x400104f	          0x83e0f9	                     and eax, 0xfffffff9	      7387	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42
0x4001052	          0x83c802	                               or eax, 2	      7387	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42
0x4001055	    0x880500000000	               mov byte [0x0400105b], al	      7387	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_34	IF_42
0x400105b	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4001060	      0xe9e3f4ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4001065	    0x802500000000	             and byte [0x0400106c], 0xdf	      7385	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_33	IF_41
0x400106c	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4001071	      0xe9d2f4ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
0x4001076	    0x800d00000000	              or byte [0x0400107d], 0x20	      7383	eelf_k1om.c	FUNCTION_29	SWITCH_1	ELSE_32	IF_40
0x400107d	      0xb801000000	                              mov eax, 1	      7453	eelf_k1om.c	FUNCTION_29
0x4001082	      0xe9c1f4ffff	                           jmp 0x4000548	      7453	eelf_k1om.c	FUNCTION_29
gldelf_k1om_parse_ld_so_conf	CALL,14:DO,2:IF,10:SWITCH,0:WHILE,6:FOR,0:ELSE,2:functions,0	325
0x4001a70	            0x4157	                                push r15	       823	eelf_k1om.c	FUNCTION_11
0x4001a72	            0x4156	                                push r14	       823	eelf_k1om.c	FUNCTION_11
0x4001a74	            0x4155	                                push r13	       823	eelf_k1om.c	FUNCTION_11
0x4001a76	            0x4154	                                push r12	       823	eelf_k1om.c	FUNCTION_11
0x4001a78	              0x55	                                push rbp	       823	eelf_k1om.c	FUNCTION_11
0x4001a79	              0x53	                                push rbx	       823	eelf_k1om.c	FUNCTION_11
0x4001a7a	    0x4881ec980000	                           sub rsp, 0x98	       823	eelf_k1om.c	FUNCTION_11
0x4001a81	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       823	eelf_k1om.c	FUNCTION_11
0x4001a86	      0x4889742428	             mov qword [rsp + 0x28], rsi	       823	eelf_k1om.c	FUNCTION_11
0x4001a8b	          0x4889f7	                            mov rdi, rsi	       823	eelf_k1om.c	FUNCTION_11
0x4001a8e	      0xbe00000000	                              mov esi, 0	       824	eelf_k1om.c	FUNCTION_11	CALL_1
0x4001a93	    0x64488b042528	                mov rax, qword fs:[0x28]	       823	eelf_k1om.c	FUNCTION_11
0x4001a9c	    0x488984248800	             mov qword [rsp + 0x88], rax	       823	eelf_k1om.c	FUNCTION_11
0x4001aa4	            0x31c0	                            xor eax, eax	       823	eelf_k1om.c	FUNCTION_11
0x4001aa6	      0xe800000000	                          call 0x4001aab	       824	eelf_k1om.c	FUNCTION_11	CALL_1
0x4001aab	          0x4889c7	                            mov rdi, rax	       824	eelf_k1om.c	FUNCTION_11	CALL_1
0x4001aae	      0x4889442408	                mov qword [rsp + 8], rax	       824	eelf_k1om.c	FUNCTION_11	CALL_1
0x4001ab3	            0x31c0	                            xor eax, eax	       824	eelf_k1om.c	FUNCTION_11	CALL_1
0x4001ab5	          0x4885ff	                           test rdi, rdi	       828	eelf_k1om.c	FUNCTION_11	IF_1
0x4001ab8	     0xf84e7010000	                            je 0x4001ca5	       828	eelf_k1om.c	FUNCTION_11	IF_1
0x4001abe	      0xbf00010000	                          mov edi, 0x100	       832	eelf_k1om.c	FUNCTION_11	CALL_2
0x4001ac3	      0xbb00010000	                          mov ebx, 0x100	       831	eelf_k1om.c	FUNCTION_11
0x4001ac8	    0x41bc01000000	                             mov r12d, 1	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001ace	      0xe800000000	                          call 0x4001ad3	       832	eelf_k1om.c	FUNCTION_11	CALL_2
0x4001ad3	    0x49bd003a0000	                 movabs r13, 0x100003a00	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001add	          0x4889c5	                            mov rbp, rax	       832	eelf_k1om.c	FUNCTION_11	CALL_2
0x4001ae0	          0x4989ee	                            mov r14, rbp	       835	eelf_k1om.c	FUNCTION_11	DO_1
0x4001ae3	            0xeb35	                           jmp 0x4001b1a	       838	eelf_k1om.c	FUNCTION_11	DO_1	CALL_3
0x4001ae5	           0xf1f00	                         nop dword [rax]	       838	eelf_k1om.c	FUNCTION_11	DO_1	CALL_3
0x4001ae8	        0x4c8d73ff	                      lea r14, [rbx - 1]	       838	eelf_k1om.c	FUNCTION_11	DO_1	CALL_3
0x4001aec	          0x4889c7	                            mov rdi, rax	       839	eelf_k1om.c	FUNCTION_11	DO_1	CALL_4
0x4001aef	      0xe800000000	                          call 0x4001af4	       839	eelf_k1om.c	FUNCTION_11	DO_1	CALL_4
0x4001af4	          0x4c89f2	                            mov rdx, r14	       839	eelf_k1om.c	FUNCTION_11	DO_1	CALL_4
0x4001af7	          0x4c29fa	                            sub rdx, r15	       839	eelf_k1om.c	FUNCTION_11	DO_1	CALL_4
0x4001afa	          0x4839d0	                            cmp rax, rdx	       839	eelf_k1om.c	FUNCTION_11	DO_1	CALL_4
0x4001afd	            0x7541	                           jne 0x4001b40	       839	eelf_k1om.c	FUNCTION_11	DO_1	CALL_4
0x4001aff	      0x807c1dfe0a	          cmp byte [rbp + rbx - 2], 0xa 	       840	eelf_k1om.c	FUNCTION_11	DO_1
0x4001b04	            0x743a	                            je 0x4001b40	       840	eelf_k1om.c	FUNCTION_11	DO_1
0x4001b06	          0x4801db	                            add rbx, rbx	       842	eelf_k1om.c	FUNCTION_11	DO_1	CALL_5
0x4001b09	          0x4889ef	                            mov rdi, rbp	       842	eelf_k1om.c	FUNCTION_11	DO_1	CALL_5
0x4001b0c	          0x4889de	                            mov rsi, rbx	       842	eelf_k1om.c	FUNCTION_11	DO_1	CALL_5
0x4001b0f	      0xe800000000	                          call 0x4001b14	       842	eelf_k1om.c	FUNCTION_11	DO_1	CALL_5
0x4001b14	          0x4889c5	                            mov rbp, rax	       842	eelf_k1om.c	FUNCTION_11	DO_1	CALL_5
0x4001b17	          0x4901c6	                            add r14, rax	       843	eelf_k1om.c	FUNCTION_11	DO_1
0x4001b1a	          0x4d89f7	                            mov r15, r14	       838	eelf_k1om.c	FUNCTION_11	DO_1	CALL_3
0x4001b1d	      0x488b542408	                mov rdx, qword [rsp + 8]	       263	stdio2.h	FUNCTION_48	CALL_8
0x4001b22	            0x89de	                            mov esi, ebx	       263	stdio2.h	FUNCTION_48	CALL_8
0x4001b24	          0x4929ef	                            sub r15, rbp	       838	eelf_k1om.c	FUNCTION_11	DO_1	CALL_3
0x4001b27	          0x4c89f7	                            mov rdi, r14	       263	stdio2.h	FUNCTION_48	CALL_8
0x4001b2a	          0x4429fe	                           sub esi, r15d	       263	stdio2.h	FUNCTION_48	CALL_8
0x4001b2d	      0xe800000000	                          call 0x4001b32	       263	stdio2.h	FUNCTION_48	CALL_8
0x4001b32	          0x4885c0	                           test rax, rax	       838	eelf_k1om.c	FUNCTION_11	DO_1	CALL_3
0x4001b35	            0x75b1	                           jne 0x4001ae8	       838	eelf_k1om.c	FUNCTION_11	DO_1	CALL_3
0x4001b37	          0x4c39f5	                            cmp rbp, r14	       847	eelf_k1om.c	FUNCTION_11	DO_1	IF_2
0x4001b3a	     0xf844e010000	                            je 0x4001c8e	       847	eelf_k1om.c	FUNCTION_11	DO_1	IF_2
0x4001b40	      0xbe0a000000	                            mov esi, 0xa	       850	eelf_k1om.c	FUNCTION_11	DO_1	CALL_6
0x4001b45	          0x4889ef	                            mov rdi, rbp	       850	eelf_k1om.c	FUNCTION_11	DO_1	CALL_6
0x4001b48	      0xe800000000	                          call 0x4001b4d	       850	eelf_k1om.c	FUNCTION_11	DO_1	CALL_6
0x4001b4d	          0x4885c0	                           test rax, rax	       851	eelf_k1om.c	FUNCTION_11	DO_1	IF_3
0x4001b50	            0x7403	                            je 0x4001b55	       851	eelf_k1om.c	FUNCTION_11	DO_1	IF_3
0x4001b52	          0xc60000	                       mov byte [rax], 0	       852	eelf_k1om.c	FUNCTION_11	DO_1	IF_3
0x4001b55	      0xbe23000000	                           mov esi, 0x23	       857	eelf_k1om.c	FUNCTION_11	DO_1	CALL_7
0x4001b5a	          0x4889ef	                            mov rdi, rbp	       857	eelf_k1om.c	FUNCTION_11	DO_1	CALL_7
0x4001b5d	      0xe800000000	                          call 0x4001b62	       857	eelf_k1om.c	FUNCTION_11	DO_1	CALL_7
0x4001b62	          0x4885c0	                           test rax, rax	       858	eelf_k1om.c	FUNCTION_11	DO_1	IF_4
0x4001b65	            0x7403	                            je 0x4001b6a	       858	eelf_k1om.c	FUNCTION_11	DO_1	IF_4
0x4001b67	          0xc60000	                       mov byte [rax], 0	       859	eelf_k1om.c	FUNCTION_11	DO_1	IF_4
0x4001b6a	         0xfb65500	                   movzx edx, byte [rbp]	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001b6e	          0x4989ef	                            mov r15, rbp	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001b71	          0x80fa20	                            cmp dl, 0x20	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001b74	            0x89d1	                            mov ecx, edx	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001b76	     0xf8654010000	                           jbe 0x4001cd0	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001b7c	      0xbf00000000	                              mov edi, 0	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b81	      0xb907000000	                              mov ecx, 7	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b86	          0x4c89fe	                            mov rsi, r15	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b89	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b8b	            0x7515	                           jne 0x4001ba2	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b8d	      0x410fb64707	               movzx eax, byte [r15 + 7]	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b92	            0x3c20	                            cmp al, 0x20	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b94	     0xf84c1010000	                            je 0x4001d5b	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b9a	            0x3c09	                               cmp al, 9	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001b9c	     0xf84b9010000	                            je 0x4001d5b	       870	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001ba2	          0x80fa3d	                            cmp dl, 0x3d	       898	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001ba5	          0x4c89f8	                            mov rax, r15	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001ba8	            0x7716	                            ja 0x4001bc0	       898	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001baa	    0x48bf013a0000	          movabs rdi, 0x2000000100003a01	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bb4	        0x480fa3d7	                             bt rdi, rdx	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bb8	            0x7249	                            jb 0x4001c03	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bba	    0x660f1f440000	                    nop word [rax + rax]	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bc0	        0x4883c001	                              add rax, 1	       900	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bc4	           0xfb608	                   movzx ecx, byte [rax]	       898	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bc7	    0x48ba013a0000	          movabs rdx, 0x2000000100003a01	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bd1	          0x48d3ea	                             shr rdx, cl	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bd4	          0x83e201	                              and edx, 1	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bd7	        0x4883f201	                              xor rdx, 1	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bdb	          0x80f93d	                            cmp cl, 0x3d	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001bde	        0x410f47d4	                         cmova edx, r12d	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001be2	            0x84d2	                             test dl, dl	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001be4	            0x75da	                           jne 0x4001bc0	       899	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_4
0x4001be6	          0x4c39f8	                            cmp rax, r15	       902	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_5
0x4001be9	            0x7418	                            je 0x4001c03	       902	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_5
0x4001beb	       0xf1f440000	                   nop dword [rax + rax]	       902	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_5
0x4001bf0	        0x8078ff2f	                cmp byte [rax - 1], 0x2f	       902	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_5
0x4001bf4	     0xf8516010000	                           jne 0x4001d10	       902	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_5
0x4001bfa	        0x4883e801	                              sub rax, 1	       903	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_5
0x4001bfe	          0x4c39f8	                            cmp rax, r15	       902	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_5
0x4001c01	            0x75ed	                           jne 0x4001bf0	       902	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	WHILE_5
0x4001c03	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001c08	            0x31c9	                            xor ecx, ecx	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001c0a	            0x31c0	                            xor eax, eax	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001c0c	          0x488b3f	                    mov rdi, qword [rdi]	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001c0f	          0x4885ff	                           test rdi, rdi	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001c12	     0xf840f010000	                            je 0x4001d27	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001c18	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       912	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001c1d	        0x488b5008	                mov rdx, qword [rax + 8]	       912	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001c21	        0x488b4010	            mov rax, qword [rax + 0x10] 	       912	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001c25	        0x488d7201	                      lea rsi, [rdx + 1]	       912	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001c29	        0x4c8d040e	                     lea r8, [rsi + rcx]	       912	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001c2d	          0x4939c0	                             cmp r8, rax	       912	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001c30	     0xf83fa020000	                           jae 0x4001f30	       912	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001c36	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       917	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2
0x4001c3b	        0x49897208	                mov qword [r10 + 8], rsi	       917	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2
0x4001c3f	     0xfb605000000	           movzx eax, byte [0x04001c46] 	       917	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2
0x4001c46	          0x880417	                mov byte [rdi + rdx], al	       917	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2
0x4001c49	          0x498b3a	                    mov rdi, qword [r10]	       917	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2
0x4001c4c	        0x498b4208	                mov rax, qword [r10 + 8]	       917	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2
0x4001c50	          0x4889ca	                            mov rdx, rcx	        53	string3.h	FUNCTION_52	CALL_3
0x4001c53	          0x4801c7	                            add rdi, rax	        53	string3.h	FUNCTION_52	CALL_3
0x4001c56	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_52	CALL_3
0x4001c59	      0x48894c2410	             mov qword [rsp + 0x10], rcx	        53	string3.h	FUNCTION_52	CALL_3
0x4001c5e	      0xe800000000	                          call 0x4001c63	        53	string3.h	FUNCTION_52	CALL_3
0x4001c63	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       920	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1
0x4001c68	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       920	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1
0x4001c6d	        0x48034808	                add rcx, qword [rax + 8]	       920	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1
0x4001c71	        0x48894808	                mov qword [rax + 8], rcx	       920	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1
0x4001c75	          0x488b00	                    mov rax, qword [rax]	       921	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1
0x4001c78	        0xc6040800	                 mov byte [rax + rcx], 0	       921	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1
0x4001c7c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       924	eelf_k1om.c	FUNCTION_11	CALL_12
0x4001c81	      0xe800000000	                          call 0x4001c86	       924	eelf_k1om.c	FUNCTION_11	CALL_12
0x4001c86	            0x85c0	                           test eax, eax	       924	eelf_k1om.c	FUNCTION_11	CALL_12
0x4001c88	     0xf8452feffff	                            je 0x4001ae0	       924	eelf_k1om.c	FUNCTION_11	CALL_12
0x4001c8e	          0x4889ef	                            mov rdi, rbp	       925	eelf_k1om.c	FUNCTION_11	CALL_13
0x4001c91	      0xe800000000	                          call 0x4001c96	       925	eelf_k1om.c	FUNCTION_11	CALL_13
0x4001c96	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       926	eelf_k1om.c	FUNCTION_11	CALL_14
0x4001c9b	      0xe800000000	                          call 0x4001ca0	       926	eelf_k1om.c	FUNCTION_11	CALL_14
0x4001ca0	      0xb801000000	                              mov eax, 1	       927	eelf_k1om.c	FUNCTION_11
0x4001ca5	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       928	eelf_k1om.c	FUNCTION_11
0x4001cad	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       928	eelf_k1om.c	FUNCTION_11
0x4001cb6	     0xf85c2020000	                           jne 0x4001f7e	       928	eelf_k1om.c	FUNCTION_11
0x4001cbc	    0x4881c4980000	                           add rsp, 0x98	       928	eelf_k1om.c	FUNCTION_11
0x4001cc3	              0x5b	                                 pop rbx	       928	eelf_k1om.c	FUNCTION_11
0x4001cc4	              0x5d	                                 pop rbp	       928	eelf_k1om.c	FUNCTION_11
0x4001cc5	            0x415c	                                 pop r12	       928	eelf_k1om.c	FUNCTION_11
0x4001cc7	            0x415d	                                 pop r13	       928	eelf_k1om.c	FUNCTION_11
0x4001cc9	            0x415e	                                 pop r14	       928	eelf_k1om.c	FUNCTION_11
0x4001ccb	            0x415f	                                 pop r15	       928	eelf_k1om.c	FUNCTION_11
0x4001ccd	              0xc3	                                     ret	       928	eelf_k1om.c	FUNCTION_11
0x4001cce	            0x6690	                                     nop	       928	eelf_k1om.c	FUNCTION_11
0x4001cd0	        0x490fa3d5	                             bt r13, rdx	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001cd4	            0x732c	                           jae 0x4001d02	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001cd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001ce0	        0x4983c701	                              add r15, 1	       864	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001ce4	        0x410fb60f	                   movzx ecx, byte [r15]	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001ce8	          0x4c89e8	                            mov rax, r13	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001ceb	          0x48d3e8	                             shr rax, cl	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001cee	            0x89ca	                            mov edx, ecx	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001cf0	          0x83e001	                              and eax, 1	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001cf3	        0x4883f001	                              xor rax, 1	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001cf7	          0x80f920	                            cmp cl, 0x20	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001cfa	        0x410f47c4	                         cmova eax, r12d	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001cfe	            0x84c0	                             test al, al	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001d00	            0x74de	                            je 0x4001ce0	       863	eelf_k1om.c	FUNCTION_11	DO_1	WHILE_1
0x4001d02	            0x84c9	                             test cl, cl	       867	eelf_k1om.c	FUNCTION_11	DO_1	IF_5
0x4001d04	     0xf8472ffffff	                            je 0x4001c7c	       867	eelf_k1om.c	FUNCTION_11	DO_1	IF_5
0x4001d0a	      0xe96dfeffff	                           jmp 0x4001b7c	       867	eelf_k1om.c	FUNCTION_11	DO_1	IF_5
0x4001d0f	              0x90	                                     nop	       867	eelf_k1om.c	FUNCTION_11	DO_1	IF_5
0x4001d10	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d15	          0x4c29f8	                            sub rax, r15	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d18	          0x4889c1	                            mov rcx, rax	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d1b	          0x488b3f	                    mov rdi, qword [rdi]	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d1e	          0x4885ff	                           test rdi, rdi	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d21	     0xf85f1feffff	                           jne 0x4001c18	       904	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d27	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       906	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d2c	    0x488db8010100	                  lea rdi, [rax + 0x101]	       906	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d33	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       906	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d38	        0x49897e10	             mov qword [r14 + 0x10], rdi	       906	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d3c	      0xe800000000	                          call 0x4001d41	       907	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9	CALL_9
0x4001d41	    0x49c746080000	                  mov qword [r14 + 8], 0	       908	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9
0x4001d49	          0x498906	                    mov qword [r14], rax	       907	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9	CALL_9
0x4001d4c	          0x4889c7	                            mov rdi, rax	       907	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9	CALL_9
0x4001d4f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       907	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9	CALL_9
0x4001d54	            0x31c0	                            xor eax, eax	       907	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9	CALL_9
0x4001d56	      0xe9f5feffff	                           jmp 0x4001c50	       907	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	IF_9	CALL_9
0x4001d5b	        0x4d8d4f08	                       lea r9, [r15 + 8]	       873	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001d5f	              0x90	                                     nop	       873	eelf_k1om.c	FUNCTION_11	DO_1	IF_6
0x4001d60	        0x410fb601	                    movzx eax, byte [r9]	       876	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001d64	            0x3c20	                            cmp al, 0x20	       876	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001d66	     0xf841d010000	                            je 0x4001e89	       876	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001d6c	            0x3c09	                               cmp al, 9	       876	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001d6e	     0xf8415010000	                            je 0x4001e89	       876	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001d74	            0x84c0	                             test al, al	       879	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_7
0x4001d76	     0xf8400ffffff	                            je 0x4001c7c	       879	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_7
0x4001d7c	          0x4c89c8	                             mov rax, r9	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d7f	              0x90	                                     nop	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d80	        0x4883c001	                              add rax, 1	       885	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d84	        0x440fb638	                  movzx r15d, byte [rax]	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d88	        0x4180ff20	                          cmp r15b, 0x20	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d8c	     0xf8406010000	                            je 0x4001e98	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d92	        0x4180ff09	                             cmp r15b, 9	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d96	     0xf84fc000000	                            je 0x4001e98	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d9c	          0x4584ff	                         test r15b, r15b	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001d9f	            0x75df	                           jne 0x4001d80	       884	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	WHILE_2
0x4001da1	        0x488d7801	                      lea rdi, [rax + 1]	       888	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001da5	          0xc60000	                       mov byte [rax], 0	       888	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001da8	        0x410fb601	                    movzx eax, byte [r9]	       889	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_8
0x4001dac	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       888	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001db1	            0x84c0	                             test al, al	       889	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_8
0x4001db3	     0xf84c3feffff	                            je 0x4001c7c	       889	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_8
0x4001db9	            0x3c2f	                            cmp al, 0x2f	       791	eelf_k1om.c	FUNCTION_10	IF_1
0x4001dbb	     0xf84f4000000	                            je 0x4001eb5	       791	eelf_k1om.c	FUNCTION_10	IF_1
0x4001dc1	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       793	eelf_k1om.c	FUNCTION_10	IF_1	CALL_1
0x4001dc6	      0xbe2f000000	                           mov esi, 0x2f	       793	eelf_k1om.c	FUNCTION_10	IF_1	CALL_1
0x4001dcb	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       793	eelf_k1om.c	FUNCTION_10	IF_1	CALL_1
0x4001dd0	      0xe800000000	                          call 0x4001dd5	       793	eelf_k1om.c	FUNCTION_10	IF_1	CALL_1
0x4001dd5	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	       794	eelf_k1om.c	FUNCTION_10	IF_1	CALL_2
0x4001dda	      0x4889442420	             mov qword [rsp + 0x20], rax	       793	eelf_k1om.c	FUNCTION_10	IF_1	CALL_1
0x4001ddf	          0x4c89cf	                             mov rdi, r9	       794	eelf_k1om.c	FUNCTION_10	IF_1	CALL_2
0x4001de2	      0x4c894c2438	              mov qword [rsp + 0x38], r9	       794	eelf_k1om.c	FUNCTION_10	IF_1	CALL_2
0x4001de7	      0xe800000000	                          call 0x4001dec	       794	eelf_k1om.c	FUNCTION_10	IF_1	CALL_2
0x4001dec	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       796	eelf_k1om.c	FUNCTION_10	IF_1	CALL_3
0x4001df1	      0x482b4c2428	             sub rcx, qword [rsp + 0x28]	       796	eelf_k1om.c	FUNCTION_10	IF_1	CALL_3
0x4001df6	          0x4989c6	                            mov r14, rax	       794	eelf_k1om.c	FUNCTION_10	IF_1	CALL_2
0x4001df9	      0x488d7c0102	                lea rdi, [rcx + rax + 2]	       796	eelf_k1om.c	FUNCTION_10	IF_1	CALL_3
0x4001dfe	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       796	eelf_k1om.c	FUNCTION_10	IF_1	CALL_3
0x4001e03	      0xe800000000	                          call 0x4001e08	       796	eelf_k1om.c	FUNCTION_10	IF_1	CALL_3
0x4001e08	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_52	CALL_3
0x4001e0d	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_52	CALL_3
0x4001e12	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_52	CALL_3
0x4001e15	      0x4889442420	             mov qword [rsp + 0x20], rax	        53	string3.h	FUNCTION_52	CALL_3
0x4001e1a	        0x4883c101	                              add rcx, 1	        53	string3.h	FUNCTION_52	CALL_3
0x4001e1e	          0x4889ca	                            mov rdx, rcx	        53	string3.h	FUNCTION_52	CALL_3
0x4001e21	      0x48894c2430	             mov qword [rsp + 0x30], rcx	        53	string3.h	FUNCTION_52	CALL_3
0x4001e26	      0xe800000000	                          call 0x4001e2b	        53	string3.h	FUNCTION_52	CALL_3
0x4001e2b	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_52	CALL_3
0x4001e30	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_52	CALL_3
0x4001e35	        0x498d5601	                      lea rdx, [r14 + 1]	        53	string3.h	FUNCTION_52	CALL_3
0x4001e39	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	        53	string3.h	FUNCTION_52	CALL_3
0x4001e3e	        0x488d3c08	                    lea rdi, [rax + rcx]	        53	string3.h	FUNCTION_52	CALL_3
0x4001e42	          0x4c89ce	                             mov rsi, r9	        53	string3.h	FUNCTION_52	CALL_3
0x4001e45	      0xe800000000	                          call 0x4001e4a	        53	string3.h	FUNCTION_52	CALL_3
0x4001e4a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001e4f	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001e54	            0x31d2	                            xor edx, edx	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001e56	            0x31f6	                            xor esi, esi	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001e58	      0xe800000000	                          call 0x4001e5d	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001e5d	            0x85c0	                           test eax, eax	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001e5f	     0xf84fe000000	                            je 0x4001f63	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001e65	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       817	eelf_k1om.c	FUNCTION_10	CALL_10
0x4001e6a	      0xe800000000	                          call 0x4001e6f	       817	eelf_k1om.c	FUNCTION_10	CALL_10
0x4001e6f	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       817	eelf_k1om.c	FUNCTION_10	CALL_10
0x4001e74	          0x4584ff	                         test r15b, r15b	       893	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	WHILE_3
0x4001e77	     0xf84fffdffff	                            je 0x4001c7c	       893	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	WHILE_3
0x4001e7d	        0x410fb601	                    movzx eax, byte [r9]	       876	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001e81	            0x3c20	                            cmp al, 0x20	       876	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001e83	     0xf85e3feffff	                           jne 0x4001d6c	       876	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001e89	        0x4983c101	                               add r9, 1	       877	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001e8d	      0xe9cefeffff	                           jmp 0x4001d60	       877	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001e92	    0x660f1f440000	                    nop word [rax + rax]	       877	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001e98	        0x488d7801	                      lea rdi, [rax + 1]	       888	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001e9c	          0xc60000	                       mov byte [rax], 0	       888	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001e9f	        0x410fb601	                    movzx eax, byte [r9]	       889	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_8
0x4001ea3	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       888	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2
0x4001ea8	            0x84c0	                             test al, al	       889	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_8
0x4001eaa	     0xf8509ffffff	                           jne 0x4001db9	       889	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_8
0x4001eb0	          0x4989f9	                             mov r9, rdi	       889	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_8
0x4001eb3	            0xebbf	                           jmp 0x4001e74	       889	eelf_k1om.c	FUNCTION_11	DO_1	IF_6	DO_2	IF_8
0x4001eb5	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001eba	            0x31d2	                            xor edx, edx	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001ebc	            0x31f6	                            xor esi, esi	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001ebe	          0x4c89cf	                             mov rdi, r9	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001ec1	      0xe800000000	                          call 0x4001ec6	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001ec6	            0x85c0	                           test eax, eax	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001ec8	            0x75a5	                           jne 0x4001e6f	       803	eelf_k1om.c	FUNCTION_10	IF_2	CALL_6
0x4001eca	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       807	eelf_k1om.c	FUNCTION_10	IF_2	FOR_1
0x4001ed0	     0xf84ad000000	                            je 0x4001f83	       807	eelf_k1om.c	FUNCTION_10	IF_2	FOR_1
0x4001ed6	    0x48c744242000	               mov qword [rsp + 0x20], 0	       786	eelf_k1om.c	FUNCTION_10
0x4001edf	          0x4531f6	                          xor r14d, r14d	       786	eelf_k1om.c	FUNCTION_10
0x4001ee2	      0x48895c2430	             mov qword [rsp + 0x30], rbx	       786	eelf_k1om.c	FUNCTION_10
0x4001ee7	          0x4c89f3	                            mov rbx, r14	       786	eelf_k1om.c	FUNCTION_10
0x4001eea	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       786	eelf_k1om.c	FUNCTION_10
0x4001eef	              0x90	                                     nop	       786	eelf_k1om.c	FUNCTION_10
0x4001ef0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       808	eelf_k1om.c	FUNCTION_10	IF_2	CALL_7
0x4001ef5	          0x4c89f7	                            mov rdi, r14	       808	eelf_k1om.c	FUNCTION_10	IF_2	CALL_7
0x4001ef8	        0x488b34d8	            mov rsi, qword [rax + rbx*8]	       808	eelf_k1om.c	FUNCTION_10	IF_2	CALL_7
0x4001efc	        0x4883c301	                              add rbx, 1	       807	eelf_k1om.c	FUNCTION_10	IF_2	FOR_1
0x4001f00	      0xe86bfbffff	   call sym.gldelf_k1om_parse_ld_so_conf	       808	eelf_k1om.c	FUNCTION_10	IF_2	CALL_7
0x4001f05	      0x483b5c2440	            cmp rbx, qword [rsp + 0x40] 	       807	eelf_k1om.c	FUNCTION_10	IF_2	FOR_1
0x4001f0a	            0x72e4	                            jb 0x4001ef0	       807	eelf_k1om.c	FUNCTION_10	IF_2	FOR_1
0x4001f0c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
0x4001f11	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
0x4001f16	      0xe800000000	                          call 0x4001f1b	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
0x4001f1b	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       816	eelf_k1om.c	FUNCTION_10	IF_3
0x4001f21	     0xf853effffff	                           jne 0x4001e65	       816	eelf_k1om.c	FUNCTION_10	IF_3
0x4001f27	      0xe943ffffff	                           jmp 0x4001e6f	       816	eelf_k1om.c	FUNCTION_10	IF_3
0x4001f2c	         0xf1f4000	                         nop dword [rax]	       816	eelf_k1om.c	FUNCTION_10	IF_3
0x4001f30	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       914	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001f35	    0x488db4080001	           lea rsi, [rax + rcx + 0x100] 	       914	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001f3d	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       914	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001f42	        0x49897610	             mov qword [r14 + 0x10], rsi	       914	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10
0x4001f46	      0xe800000000	                          call 0x4001f4b	       915	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10	CALL_10
0x4001f4b	        0x498b5608	                mov rdx, qword [r14 + 8]	       915	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10	CALL_10
0x4001f4f	          0x498906	                    mov qword [r14], rax	       915	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10	CALL_10
0x4001f52	          0x4889c7	                            mov rdi, rax	       915	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10	CALL_10
0x4001f55	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       915	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10	CALL_10
0x4001f5a	        0x488d7201	                      lea rsi, [rdx + 1]	       915	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10	CALL_10
0x4001f5e	      0xe9d3fcffff	                           jmp 0x4001c36	       915	eelf_k1om.c	FUNCTION_11	DO_1	ELSE_1	ELSE_2	IF_10	CALL_10
0x4001f63	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       807	eelf_k1om.c	FUNCTION_10	IF_2	FOR_1
0x4001f69	     0xf8570ffffff	                           jne 0x4001edf	       807	eelf_k1om.c	FUNCTION_10	IF_2	FOR_1
0x4001f6f	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
0x4001f74	      0xe800000000	                          call 0x4001f79	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
0x4001f79	      0xe9e7feffff	                           jmp 0x4001e65	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
0x4001f7e	      0xe800000000	                          call 0x4001f83	       928	eelf_k1om.c	FUNCTION_11
0x4001f83	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
0x4001f88	      0xe800000000	                          call 0x4001f8d	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
0x4001f8d	      0xe9ddfeffff	                           jmp 0x4001e6f	       809	eelf_k1om.c	FUNCTION_10	IF_2	CALL_8
gldelf_k1om_after_parse	CALL,5:DO,0:IF,3:SWITCH,0:WHILE,0:FOR,0:ELSE,0:functions,0	27
0x4002830	     0xfb605000000	           movzx eax, byte [0x04002837] 	       124	eelf_k1om.c	FUNCTION_3	IF_1	CALL_1
0x4002837	          0x83e003	                              and eax, 3	       124	eelf_k1om.c	FUNCTION_3	IF_1	CALL_1
0x400283a	            0x3c01	                               cmp al, 1	       124	eelf_k1om.c	FUNCTION_3	IF_1	CALL_1
0x400283c	            0x740a	                            je 0x4002848	       124	eelf_k1om.c	FUNCTION_3	IF_1	CALL_1
0x400283e	            0x7613	                           jbe 0x4002853	       127	eelf_k1om.c	FUNCTION_3	IF_2	CALL_2
0x4002840	      0xe900000000	                           jmp 0x4002845	       134	eelf_k1om.c	FUNCTION_3	CALL_5
0x4002845	           0xf1f00	                         nop dword [rax]	       134	eelf_k1om.c	FUNCTION_3	CALL_5
0x4002848	    0x48810d000000	     or qword [0x04002853], section_end.	       125	eelf_k1om.c	FUNCTION_3	IF_1
0x4002853	    0xf60500000000	               test byte [0x0400285a], 4	       128	eelf_k1om.c	FUNCTION_3	IF_2
0x400285a	            0x74e4	                            je 0x4002840	       128	eelf_k1om.c	FUNCTION_3	IF_2
0x400285c	    0x8b0500000000	            mov eax, dword [0x04002862] 	       130	eelf_k1om.c	FUNCTION_3	IF_2	IF_3
0x4002862	            0x85c0	                           test eax, eax	       130	eelf_k1om.c	FUNCTION_3	IF_2	IF_3
0x4002864	            0x7e3a	                           jle 0x40028a0	       130	eelf_k1om.c	FUNCTION_3	IF_2	IF_3
0x4002866	        0x4883ec08	                              sub rsp, 8	       123	eelf_k1om.c	FUNCTION_3
0x400286a	      0xba05000000	                              mov edx, 5	       131	eelf_k1om.c	FUNCTION_3	IF_2	CALL_4
0x400286f	      0xbe00000000	                              mov esi, 0	       131	eelf_k1om.c	FUNCTION_3	IF_2	CALL_4
0x4002874	            0x31ff	                            xor edi, edi	       131	eelf_k1om.c	FUNCTION_3	IF_2	CALL_4
0x4002876	      0xe800000000	                          call 0x400287b	       131	eelf_k1om.c	FUNCTION_3	IF_2	CALL_4
0x400287b	          0x4889c7	                            mov rdi, rax	       131	eelf_k1om.c	FUNCTION_3	IF_2	CALL_4
0x400287e	            0x31c0	                            xor eax, eax	       131	eelf_k1om.c	FUNCTION_3	IF_2	CALL_4
0x4002880	      0xe800000000	                          call 0x4002885	       131	eelf_k1om.c	FUNCTION_3	IF_2	CALL_4
0x4002885	    0xc70500000000	               mov dword [0x0400288f], 0	       132	eelf_k1om.c	FUNCTION_3	IF_2
0x400288f	        0x4883c408	                              add rsp, 8	       135	eelf_k1om.c	FUNCTION_3
0x4002893	      0xe900000000	                           jmp 0x4002898	       134	eelf_k1om.c	FUNCTION_3	CALL_5
0x4002898	     0xf1f84000000	                   nop dword [rax + rax]	       134	eelf_k1om.c	FUNCTION_3	CALL_5
0x40028a0	    0xc70500000000	               mov dword [0x040028aa], 0	       132	eelf_k1om.c	FUNCTION_3	IF_2
0x40028aa	      0xe900000000	                           jmp 0x40028af	       134	eelf_k1om.c	FUNCTION_3	CALL_5
gldelf_k1om_append_to_separated_string	CALL,7:DO,1:IF,4:SWITCH,0:WHILE,0:FOR,0:ELSE,1:functions,0	72
0x40003b0	            0x4157	                                push r15	      1490	eelf_k1om.c	FUNCTION_20
0x40003b2	            0x4156	                                push r14	      1490	eelf_k1om.c	FUNCTION_20
0x40003b4	          0x4989fe	                            mov r14, rdi	      1490	eelf_k1om.c	FUNCTION_20
0x40003b7	            0x4155	                                push r13	      1490	eelf_k1om.c	FUNCTION_20
0x40003b9	            0x4154	                                push r12	      1490	eelf_k1om.c	FUNCTION_20
0x40003bb	              0x55	                                push rbp	      1490	eelf_k1om.c	FUNCTION_20
0x40003bc	              0x53	                                push rbx	      1490	eelf_k1om.c	FUNCTION_20
0x40003bd	          0x4889f5	                            mov rbp, rsi	      1490	eelf_k1om.c	FUNCTION_20
0x40003c0	        0x4883ec18	                           sub rsp, 0x18	      1490	eelf_k1om.c	FUNCTION_20
0x40003c4	          0x4c8b3f	                    mov r15, qword [rdi]	      1491	eelf_k1om.c	FUNCTION_20	IF_1
0x40003c7	          0x4d85ff	                           test r15, r15	      1491	eelf_k1om.c	FUNCTION_20	IF_1
0x40003ca	     0xf84ba000000	                            je 0x400048a	      1491	eelf_k1om.c	FUNCTION_20	IF_1
0x40003d0	          0x4c89ff	                            mov rdi, r15	      1495	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_2
0x40003d3	      0xe800000000	                          call 0x40003d8	      1495	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_2
0x40003d8	          0x4889ef	                            mov rdi, rbp	      1496	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_3
0x40003db	      0x4889442408	                mov qword [rsp + 8], rax	      1495	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_2
0x40003e0	      0xe800000000	                          call 0x40003e5	      1496	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_3
0x40003e5	    0x440fbe250000	          movsx r12d, byte [0x040003ed] 	      1496	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_3
0x40003ed	          0x4889c3	                            mov rbx, rax	      1496	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_3
0x40003f0	          0x4589e5	                          mov r13d, r12d	      1496	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_3
0x40003f3	            0xeb0c	                           jmp 0x4000401	      1496	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_3
0x40003f5	           0xf1f00	                         nop dword [rax]	      1496	eelf_k1om.c	FUNCTION_20	ELSE_1	CALL_3
0x40003f8	        0x4883c001	                              add rax, 1	      1514	eelf_k1om.c	FUNCTION_20	ELSE_1
0x40003fc	          0x4989c7	                            mov r15, rax	      1514	eelf_k1om.c	FUNCTION_20	ELSE_1
0x40003ff	            0x7430	                            je 0x4000431	      1514	eelf_k1om.c	FUNCTION_20	ELSE_1
0x4000401	          0x4889da	                            mov rdx, rbx	      1503	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2	CALL_4
0x4000404	          0x4c89fe	                            mov rsi, r15	      1503	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2	CALL_4
0x4000407	          0x4889ef	                            mov rdi, rbp	      1503	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2	CALL_4
0x400040a	      0xe800000000	                          call 0x400040f	      1503	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2	CALL_4
0x400040f	            0x85c0	                           test eax, eax	      1503	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2	CALL_4
0x4000411	            0x750e	                           jne 0x4000421	      1503	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2	CALL_4
0x4000413	      0x410fb6041f	             movzx eax, byte [r15 + rbx]	      1504	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2
0x4000418	            0x84c0	                             test al, al	      1504	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2
0x400041a	            0x745f	                            je 0x400047b	      1504	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2
0x400041c	          0x4138c5	                            cmp r13b, al	      1505	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2
0x400041f	            0x745a	                            je 0x400047b	      1505	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_2
0x4000421	          0x4489e6	                           mov esi, r12d	      1510	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	CALL_5
0x4000424	          0x4c89ff	                            mov rdi, r15	      1510	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	CALL_5
0x4000427	      0xe800000000	                          call 0x400042c	      1510	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	CALL_5
0x400042c	          0x4885c0	                           test rax, rax	      1511	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_3
0x400042f	            0x75c7	                           jne 0x40003f8	      1511	eelf_k1om.c	FUNCTION_20	ELSE_1	DO_1	IF_3
0x4000431	      0x488b442408	                mov rax, qword [rsp + 8]	      1518	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4	CALL_6
0x4000436	      0x488d7c1802	                lea rdi, [rax + rbx + 2]	      1518	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4	CALL_6
0x400043b	      0xe800000000	                          call 0x4000440	      1518	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4	CALL_6
0x4000440	    0x440fbe0d0000	           movsx r9d, byte [0x04000448] 	        33	stdio2.h	FUNCTION_35	CALL_1
0x4000448	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_35	CALL_1
0x400044c	          0x4d8b06	                     mov r8, qword [r14]	        33	stdio2.h	FUNCTION_35	CALL_1
0x400044f	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_35	CALL_1
0x4000450	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_35	CALL_1
0x4000457	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_35	CALL_1
0x400045a	          0x4889c3	                            mov rbx, rax	      1518	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4	CALL_6
0x400045d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_35	CALL_1
0x4000462	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_35	CALL_1
0x4000467	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_35	CALL_1
0x4000469	      0xe800000000	                          call 0x400046e	        33	stdio2.h	FUNCTION_35	CALL_1
0x400046e	          0x498b3e	                    mov rdi, qword [r14]	      1521	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4	CALL_7
0x4000471	      0xe800000000	                          call 0x4000476	      1521	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4	CALL_7
0x4000476	              0x58	                                 pop rax	      1522	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4
0x4000477	              0x5a	                                 pop rdx	      1522	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4
0x4000478	          0x49891e	                    mov qword [r14], rbx	      1522	eelf_k1om.c	FUNCTION_20	ELSE_1	IF_4
0x400047b	        0x4883c418	                           add rsp, 0x18	      1525	eelf_k1om.c	FUNCTION_20
0x400047f	              0x5b	                                 pop rbx	      1525	eelf_k1om.c	FUNCTION_20
0x4000480	              0x5d	                                 pop rbp	      1525	eelf_k1om.c	FUNCTION_20
0x4000481	            0x415c	                                 pop r12	      1525	eelf_k1om.c	FUNCTION_20
0x4000483	            0x415d	                                 pop r13	      1525	eelf_k1om.c	FUNCTION_20
0x4000485	            0x415e	                                 pop r14	      1525	eelf_k1om.c	FUNCTION_20
0x4000487	            0x415f	                                 pop r15	      1525	eelf_k1om.c	FUNCTION_20
0x4000489	              0xc3	                                     ret	      1525	eelf_k1om.c	FUNCTION_20
0x400048a	          0x4889f7	                            mov rdi, rsi	      1492	eelf_k1om.c	FUNCTION_20	CALL_1
0x400048d	      0xe800000000	                          call 0x4000492	      1492	eelf_k1om.c	FUNCTION_20	CALL_1
0x4000492	          0x498906	                    mov qword [r14], rax	      1492	eelf_k1om.c	FUNCTION_20	CALL_1
0x4000495	            0xebe4	                           jmp 0x400047b	      1492	eelf_k1om.c	FUNCTION_20	CALL_1
write_build_id	CALL,10:DO,0:IF,3:SWITCH,0:WHILE,0:FOR,0:ELSE,1:functions,0	89
0x4001820	            0x4157	                                push r15	      1043	eelf_k1om.c	ELSE_1	FUNCTION_15
0x4001822	            0x4156	                                push r14	      1043	eelf_k1om.c	ELSE_1	FUNCTION_15
0x4001824	            0x4155	                                push r13	      1043	eelf_k1om.c	ELSE_1	FUNCTION_15
0x4001826	            0x4154	                                push r12	      1043	eelf_k1om.c	ELSE_1	FUNCTION_15
0x4001828	              0x55	                                push rbp	      1043	eelf_k1om.c	ELSE_1	FUNCTION_15
0x4001829	              0x53	                                push rbx	      1043	eelf_k1om.c	ELSE_1	FUNCTION_15
0x400182a	        0x4883ec18	                           sub rsp, 0x18	      1043	eelf_k1om.c	ELSE_1	FUNCTION_15
0x400182e	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1054	eelf_k1om.c	ELSE_1	FUNCTION_15
0x4001835	        0x488b5708	                mov rdx, qword [rdi + 8]	      1044	eelf_k1om.c	ELSE_1	FUNCTION_15	CALL_1
0x4001839	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      1054	eelf_k1om.c	ELSE_1	FUNCTION_15
0x4001840	    0x4c8bb2680300	           mov r14, qword [rdx + 0x368] 	      1044	eelf_k1om.c	ELSE_1	FUNCTION_15	CALL_1
0x4001847	        0x4c8b6030	            mov r12, qword [rax + 0x30] 	      1055	eelf_k1om.c	ELSE_1	FUNCTION_15
0x400184b	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      1054	eelf_k1om.c	ELSE_1	FUNCTION_15
0x400184f	      0x498b442468	            mov rax, qword [r12 + 0x68] 	      1056	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1
0x4001854	      0x48894c2408	                mov qword [rsp + 8], rcx	      1054	eelf_k1om.c	ELSE_1	FUNCTION_15
0x4001859	    0x483d00000000	                              cmp rax, 0	      1056	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1
0x400185f	     0xf84fb000000	                            je 0x4001960	      1056	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1
0x4001865	    0x4c8bb8e00000	            mov r15, qword [rax + 0xe0] 	      1062	eelf_k1om.c	ELSE_1	FUNCTION_15	CALL_5
0x400186c	          0x4889fd	                            mov rbp, rdi	      1062	eelf_k1om.c	ELSE_1	FUNCTION_15	CALL_5
0x400186f	        0x498b5f48	            mov rbx, qword [r15 + 0x48] 	      1064	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2
0x4001873	          0x4885db	                           test rbx, rbx	      1064	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2
0x4001876	     0xf84b4000000	                            je 0x4001930	      1064	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2
0x400187c	      0x49035c2460	             add rbx, qword [r12 + 0x60]	      1071	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001881	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      1077	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001886	          0x4889de	                            mov rsi, rbx	      1079	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001889	      0xbf04000000	                              mov edi, 4	      1079	eelf_k1om.c	FUNCTION_15	ELSE_1
0x400188e	        0x4c8d68f0	                   lea r13, [rax - 0x10]	      1077	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001892	    0xff9290000000	                 call qword [rdx + 0x90]	      1079	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001898	        0x488b4508	                mov rax, qword [rbp + 8]	      1080	eelf_k1om.c	FUNCTION_15	ELSE_1
0x400189c	          0x4c89ef	                            mov rdi, r13	      1080	eelf_k1om.c	FUNCTION_15	ELSE_1
0x400189f	        0x488d7304	                      lea rsi, [rbx + 4]	      1080	eelf_k1om.c	FUNCTION_15	ELSE_1
0x40018a3	    0xff9090000000	                 call qword [rax + 0x90]	      1080	eelf_k1om.c	FUNCTION_15	ELSE_1
0x40018a9	        0x488b4508	                mov rax, qword [rbp + 8]	      1081	eelf_k1om.c	FUNCTION_15	ELSE_1
0x40018ad	        0x488d7308	                      lea rsi, [rbx + 8]	      1081	eelf_k1om.c	FUNCTION_15	ELSE_1
0x40018b1	      0xbf03000000	                              mov edi, 3	      1081	eelf_k1om.c	FUNCTION_15	ELSE_1
0x40018b6	    0xff9090000000	                 call qword [rax + 0x90]	      1081	eelf_k1om.c	FUNCTION_15	ELSE_1
0x40018bc	    0xc7430c474e55	        mov dword [rbx + 0xc], 0x554e47 	        53	string3.h	FUNCTION_52	CALL_3
0x40018c3	    0x498b86000300	           mov rax, qword [r14 + 0x300] 	      1084	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_8
0x40018ca	        0x488d4b10	                   lea rcx, [rbx + 0x10]	      1084	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_8
0x40018ce	      0x488b742408	                mov rsi, qword [rsp + 8]	      1084	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_8
0x40018d3	          0x4589e8	                           mov r8d, r13d	      1084	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_8
0x40018d6	          0x4889ef	                            mov rdi, rbp	      1084	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_8
0x40018d9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1084	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_8
0x40018dd	      0xe800000000	                          call 0x40018e2	      1084	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_8
0x40018e2	      0x498b742460	            mov rsi, qword [r12 + 0x60] 	      1088	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_9
0x40018e7	        0x49037718	             add rsi, qword [r15 + 0x18]	      1088	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_9
0x40018eb	            0x31d2	                            xor edx, edx	      1088	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_9
0x40018ed	          0x4889ef	                            mov rdi, rbp	      1088	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_9
0x40018f0	      0x4d8b6c2438	            mov r13, qword [r12 + 0x38] 	      1087	eelf_k1om.c	FUNCTION_15	ELSE_1
0x40018f5	      0xe800000000	                          call 0x40018fa	      1088	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_9
0x40018fa	            0x31d2	                            xor edx, edx	      1089	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_10
0x40018fc	            0x85c0	                           test eax, eax	      1089	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_10
0x40018fe	            0x7516	                           jne 0x4001916	      1089	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_10
0x4001900	          0x4889ea	                            mov rdx, rbp	      1089	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_10
0x4001903	          0x4c89ee	                            mov rsi, r13	      1089	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_10
0x4001906	          0x4889df	                            mov rdi, rbx	      1089	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_10
0x4001909	      0xe800000000	                          call 0x400190e	      1089	eelf_k1om.c	FUNCTION_15	ELSE_1	CALL_10
0x400190e	            0x31d2	                            xor edx, edx	      1060	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1
0x4001910	          0x4939c5	                            cmp r13, rax	      1060	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1
0x4001913	           0xf94c2	                                 sete dl	      1060	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1
0x4001916	        0x4883c418	                           add rsp, 0x18	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x400191a	            0x89d0	                            mov eax, edx	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x400191c	              0x5b	                                 pop rbx	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x400191d	              0x5d	                                 pop rbp	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x400191e	            0x415c	                                 pop r12	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001920	            0x415d	                                 pop r13	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001922	            0x415e	                                 pop r14	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001924	            0x415f	                                 pop r15	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001926	              0xc3	                                     ret	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001927	    0x660f1f840000	                    nop word [rax + rax]	      1090	eelf_k1om.c	FUNCTION_15	ELSE_1
0x4001930	    0x498b9c24b000	            mov rbx, qword [r12 + 0xb0] 	      1066	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	IF_3
0x4001938	          0x4885db	                           test rbx, rbx	      1066	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	IF_3
0x400193b	     0xf8540ffffff	                           jne 0x4001881	      1066	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	IF_3
0x4001941	      0x498b7c2438	            mov rdi, qword [r12 + 0x38] 	      1067	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	CALL_6
0x4001946	      0xe800000000	                          call 0x400194b	      1067	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	CALL_6
0x400194b	        0x488b5508	                mov rdx, qword [rbp + 8]	      1067	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	CALL_6
0x400194f	    0x49898424b000	             mov qword [r12 + 0xb0], rax	      1067	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	CALL_6
0x4001957	          0x4889c3	                            mov rbx, rax	      1067	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	CALL_6
0x400195a	      0xe922ffffff	                           jmp 0x4001881	      1067	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	CALL_6
0x400195f	              0x90	                                     nop	      1067	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_2	CALL_6
0x4001960	      0xba05000000	                              mov edx, 5	      1058	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1	CALL_4
0x4001965	      0xbe00000000	                              mov esi, 0	      1058	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1	CALL_4
0x400196a	            0x31ff	                            xor edi, edi	      1058	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1	CALL_4
0x400196c	      0xe800000000	                          call 0x4001971	      1058	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1	CALL_4
0x4001971	          0x4889c7	                            mov rdi, rax	      1058	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1	CALL_4
0x4001974	            0x31c0	                            xor eax, eax	      1058	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1	CALL_4
0x4001976	      0xe800000000	                          call 0x400197b	      1058	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1	CALL_4
0x400197b	      0xba01000000	                              mov edx, 1	      1060	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1
0x4001980	            0xeb94	                           jmp 0x4001916	      1060	eelf_k1om.c	ELSE_1	FUNCTION_15	IF_1
gldelf_k1om_try_needed	CALL,25:DO,0:IF,16:SWITCH,0:WHILE,0:FOR,1:ELSE,0:functions,0	184
0x4001fa0	            0x4156	                                push r14	       334	eelf_k1om.c	FUNCTION_7
0x4001fa2	            0x4155	                                push r13	       334	eelf_k1om.c	FUNCTION_7
0x4001fa4	          0x4189f6	                           mov r14d, esi	       334	eelf_k1om.c	FUNCTION_7
0x4001fa7	            0x4154	                                push r12	       334	eelf_k1om.c	FUNCTION_7
0x4001fa9	              0x55	                                push rbp	       334	eelf_k1om.c	FUNCTION_7
0x4001faa	          0x4989fd	                            mov r13, rdi	       334	eelf_k1om.c	FUNCTION_7
0x4001fad	              0x53	                                push rbx	       334	eelf_k1om.c	FUNCTION_7
0x4001fae	        0x4883ec10	                           sub rsp, 0x10	       334	eelf_k1om.c	FUNCTION_7
0x4001fb2	        0x4c8b6708	                mov r12, qword [rdi + 8]	       336	eelf_k1om.c	FUNCTION_7
0x4001fb6	    0x64488b042528	                mov rax, qword fs:[0x28]	       334	eelf_k1om.c	FUNCTION_7
0x4001fbf	      0x4889442408	                mov qword [rsp + 8], rax	       334	eelf_k1om.c	FUNCTION_7
0x4001fc4	            0x31c0	                            xor eax, eax	       334	eelf_k1om.c	FUNCTION_7
0x4001fc6	    0x488b05000000	            mov rax, qword [0x04001fcd] 	       340	eelf_k1om.c	FUNCTION_7	CALL_1
0x4001fcd	          0x4c89e7	                            mov rdi, r12	       340	eelf_k1om.c	FUNCTION_7	CALL_1
0x4001fd0	        0x488b4008	                mov rax, qword [rax + 8]	       340	eelf_k1om.c	FUNCTION_7	CALL_1
0x4001fd4	          0x488b30	                    mov rsi, qword [rax]	       340	eelf_k1om.c	FUNCTION_7	CALL_1
0x4001fd7	      0xe800000000	                          call 0x4001fdc	       340	eelf_k1om.c	FUNCTION_7	CALL_1
0x4001fdc	          0x4885c0	                           test rax, rax	       341	eelf_k1om.c	FUNCTION_7	IF_1
0x4001fdf	            0x746f	                            je 0x4002050	       341	eelf_k1om.c	FUNCTION_7	IF_1
0x4001fe1	    0x814844000010	         or dword [rax + 0x44], 0x100000	       349	eelf_k1om.c	FUNCTION_7
0x4001fe8	      0xbe01000000	                              mov esi, 1	       351	eelf_k1om.c	FUNCTION_7	IF_3	CALL_4
0x4001fed	          0x4889c7	                            mov rdi, rax	       351	eelf_k1om.c	FUNCTION_7	IF_3	CALL_4
0x4001ff0	          0x4889c3	                            mov rbx, rax	       351	eelf_k1om.c	FUNCTION_7	IF_3	CALL_4
0x4001ff3	      0xe800000000	                          call 0x4001ff8	       351	eelf_k1om.c	FUNCTION_7	IF_3	CALL_4
0x4001ff8	            0x85c0	                           test eax, eax	       351	eelf_k1om.c	FUNCTION_7	IF_3	CALL_4
0x4001ffa	            0x89c5	                            mov ebp, eax	       351	eelf_k1om.c	FUNCTION_7	IF_3	CALL_4
0x4001ffc	     0xf845e010000	                            je 0x4002160	       351	eelf_k1om.c	FUNCTION_7	IF_3	CALL_4
0x4002002	        0xf6434508	               test byte [rbx + 0x45], 8	       356	eelf_k1om.c	FUNCTION_7	IF_4
0x4002006	            0x7411	                            je 0x4002019	       356	eelf_k1om.c	FUNCTION_7	IF_4
0x4002008	    0x488b05000000	            mov rax, qword [0x0400200f] 	       363	eelf_k1om.c	FUNCTION_7	IF_5
0x400200f	        0x488b4008	                mov rax, qword [rax + 8]	       363	eelf_k1om.c	FUNCTION_7	IF_5
0x4002013	        0x48394308	                cmp qword [rbx + 8], rax	       363	eelf_k1om.c	FUNCTION_7	IF_5
0x4002017	            0x7467	                            je 0x4002080	       363	eelf_k1om.c	FUNCTION_7	IF_5
0x4002019	          0x4889df	                            mov rdi, rbx	       365	eelf_k1om.c	FUNCTION_7	IF_5	CALL_7
0x400201c	            0x31ed	                            xor ebp, ebp	       366	eelf_k1om.c	FUNCTION_7	IF_5
0x400201e	      0xe800000000	                          call 0x4002023	       365	eelf_k1om.c	FUNCTION_7	IF_5	CALL_7
0x4002023	      0x488b542408	                mov rdx, qword [rsp + 8]	       467	eelf_k1om.c	FUNCTION_7
0x4002028	    0x644833142528	                xor rdx, qword fs:[0x28]	       467	eelf_k1om.c	FUNCTION_7
0x4002031	            0x89e8	                            mov eax, ebp	       467	eelf_k1om.c	FUNCTION_7
0x4002033	     0xf852e020000	                           jne 0x4002267	       467	eelf_k1om.c	FUNCTION_7
0x4002039	        0x4883c410	                           add rsp, 0x10	       467	eelf_k1om.c	FUNCTION_7
0x400203d	              0x5b	                                 pop rbx	       467	eelf_k1om.c	FUNCTION_7
0x400203e	              0x5d	                                 pop rbp	       467	eelf_k1om.c	FUNCTION_7
0x400203f	            0x415c	                                 pop r12	       467	eelf_k1om.c	FUNCTION_7
0x4002041	            0x415d	                                 pop r13	       467	eelf_k1om.c	FUNCTION_7
0x4002043	            0x415e	                                 pop r14	       467	eelf_k1om.c	FUNCTION_7
0x4002045	              0xc3	                                     ret	       467	eelf_k1om.c	FUNCTION_7
0x4002046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       467	eelf_k1om.c	FUNCTION_7
0x4002050	    0x8b2d00000000	            mov ebp, dword [0x04002056] 	       343	eelf_k1om.c	FUNCTION_7	IF_1	IF_2
0x4002056	            0x85ed	                           test ebp, ebp	       343	eelf_k1om.c	FUNCTION_7	IF_1	IF_2
0x4002058	            0x74c9	                            je 0x4002023	       343	eelf_k1om.c	FUNCTION_7	IF_1	IF_2
0x400205a	      0xba05000000	                              mov edx, 5	       344	eelf_k1om.c	FUNCTION_7	IF_1	CALL_3
0x400205f	      0xbe00000000	                              mov esi, 0	       344	eelf_k1om.c	FUNCTION_7	IF_1	CALL_3
0x4002064	            0x31ff	                            xor edi, edi	       344	eelf_k1om.c	FUNCTION_7	IF_1	CALL_3
0x4002066	      0xe800000000	                          call 0x400206b	       344	eelf_k1om.c	FUNCTION_7	IF_1	CALL_3
0x400206b	          0x4c89e6	                            mov rsi, r12	       344	eelf_k1om.c	FUNCTION_7	IF_1	CALL_3
0x400206e	          0x4889c7	                            mov rdi, rax	       344	eelf_k1om.c	FUNCTION_7	IF_1	CALL_3
0x4002071	            0x31c0	                            xor eax, eax	       344	eelf_k1om.c	FUNCTION_7	IF_1	CALL_3
0x4002073	      0xe800000000	                          call 0x4002078	       344	eelf_k1om.c	FUNCTION_7	IF_1	CALL_3
0x4002078	            0x31ed	                            xor ebp, ebp	       345	eelf_k1om.c	FUNCTION_7	IF_1
0x400207a	            0xeba7	                           jmp 0x4002023	       345	eelf_k1om.c	FUNCTION_7	IF_1
0x400207c	         0xf1f4000	                         nop dword [rax]	       345	eelf_k1om.c	FUNCTION_7	IF_1
0x4002080	          0x4585f6	                         test r14d, r14d	       374	eelf_k1om.c	FUNCTION_7	IF_6
0x4002083	            0x757b	                           jne 0x4002100	       374	eelf_k1om.c	FUNCTION_7	IF_6
0x4002085	          0x4889e6	                            mov rsi, rsp	       378	eelf_k1om.c	FUNCTION_7	IF_6	IF_7	CALL_8
0x4002088	          0x4889df	                            mov rdi, rbx	       378	eelf_k1om.c	FUNCTION_7	IF_6	IF_7	CALL_8
0x400208b	      0xe800000000	                          call 0x4002090	       378	eelf_k1om.c	FUNCTION_7	IF_6	IF_7	CALL_8
0x4002090	            0x85c0	                           test eax, eax	       378	eelf_k1om.c	FUNCTION_7	IF_6	IF_7	CALL_8
0x4002092	     0xf8438010000	                            je 0x40021d0	       378	eelf_k1om.c	FUNCTION_7	IF_6	IF_7	CALL_8
0x4002098	        0x488b0424	                    mov rax, qword [rsp]	       381	eelf_k1om.c	FUNCTION_7	IF_6	IF_8
0x400209c	          0x4885c0	                           test rax, rax	       381	eelf_k1om.c	FUNCTION_7	IF_6	IF_8
0x400209f	            0x745f	                            je 0x4002100	       381	eelf_k1om.c	FUNCTION_7	IF_6	IF_8
0x40020a1	      0xbf00000000	                              mov edi, 0	       385	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	CALL_11
0x40020a6	    0x488905000000	            mov qword [0x040020ad], rax 	       383	eelf_k1om.c	FUNCTION_7	IF_6	IF_8
0x40020ad	    0xc70500000000	               mov dword [0x040020b7], 0	       384	eelf_k1om.c	FUNCTION_7	IF_6	IF_8
0x40020b7	      0xe800000000	                          call 0x40020bc	       385	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	CALL_11
0x40020bc	    0x8b1500000000	            mov edx, dword [0x040020c2] 	       386	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	IF_9
0x40020c2	            0x85d2	                           test edx, edx	       386	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	IF_9
0x40020c4	     0xf85a6000000	                           jne 0x4002170	       386	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	IF_9
0x40020ca	        0x488b0424	                    mov rax, qword [rsp]	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020ce	          0x4885c0	                           test rax, rax	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020d1	     0xf8499000000	                            je 0x4002170	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020d7	    0x41b800000000	                              mov r8d, 0	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020dd	            0xeb0d	                           jmp 0x40020ec	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020df	              0x90	                                     nop	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020e0	          0x488b00	                    mov rax, qword [rax]	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020e3	          0x4885c0	                           test rax, rax	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020e6	     0xf8484000000	                            je 0x4002170	       404	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1
0x40020ec	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       405	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1	IF_10
0x40020f0	      0xb907000000	                              mov ecx, 7	       405	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1	IF_10
0x40020f5	          0x4c89c7	                             mov rdi, r8	       405	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1	IF_10
0x40020f8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       405	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1	IF_10
0x40020fa	            0x75e4	                           jne 0x40020e0	       405	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1	IF_10
0x40020fc	         0xf1f4000	                         nop dword [rax]	       405	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	FOR_1	IF_10
0x4002100	      0xbe00000000	                              mov esi, 0	       427	eelf_k1om.c	FUNCTION_7	IF_12	CALL_14
0x4002105	          0x4889df	                            mov rdi, rbx	       427	eelf_k1om.c	FUNCTION_7	IF_12	CALL_14
0x4002108	      0xe800000000	                          call 0x400210d	       427	eelf_k1om.c	FUNCTION_7	IF_12	CALL_14
0x400210d	            0x85c0	                           test eax, eax	       427	eelf_k1om.c	FUNCTION_7	IF_12	CALL_14
0x400210f	     0xf8593000000	                           jne 0x40021a8	       427	eelf_k1om.c	FUNCTION_7	IF_12	CALL_14
0x4002115	          0x488b3b	                    mov rdi, qword [rbx]	       431	eelf_k1om.c	FUNCTION_7	CALL_17
0x4002118	      0xe800000000	                          call 0x400211d	       431	eelf_k1om.c	FUNCTION_7	CALL_17
0x400211d	          0x4889c5	                            mov rbp, rax	       431	eelf_k1om.c	FUNCTION_7	CALL_17
0x4002120	    0x8b0500000000	            mov eax, dword [0x04002126] 	       433	eelf_k1om.c	FUNCTION_7	IF_13
0x4002126	            0x85c0	                           test eax, eax	       433	eelf_k1om.c	FUNCTION_7	IF_13
0x4002128	            0x7556	                           jne 0x4002180	       433	eelf_k1om.c	FUNCTION_7	IF_13
0x400212a	      0xbf00000000	                              mov edi, 0	       437	eelf_k1om.c	FUNCTION_7	CALL_20
0x400212f	    0x48c705000000	               mov qword [0x0400213a], 0	       436	eelf_k1om.c	FUNCTION_7
0x400213a	      0xe800000000	                          call 0x400213f	       437	eelf_k1om.c	FUNCTION_7	CALL_20
0x400213f	    0x48833d000000	               cmp qword [0x04002147], 0	       438	eelf_k1om.c	FUNCTION_7	IF_14
0x4002147	     0xf84ab000000	                            je 0x40021f8	       438	eelf_k1om.c	FUNCTION_7	IF_14
0x400214d	      0xbd01000000	                              mov ebp, 1	       466	eelf_k1om.c	FUNCTION_7
0x4002152	      0xe9ccfeffff	                           jmp 0x4002023	       466	eelf_k1om.c	FUNCTION_7
0x4002157	    0x660f1f840000	                    nop word [rax + rax]	       466	eelf_k1om.c	FUNCTION_7
0x4002160	          0x4889df	                            mov rdi, rbx	       353	eelf_k1om.c	FUNCTION_7	IF_3	CALL_5
0x4002163	      0xe800000000	                          call 0x4002168	       353	eelf_k1om.c	FUNCTION_7	IF_3	CALL_5
0x4002168	      0xe9b6feffff	                           jmp 0x4002023	       354	eelf_k1om.c	FUNCTION_7	IF_3
0x400216d	           0xf1f00	                         nop dword [rax]	       354	eelf_k1om.c	FUNCTION_7	IF_3
0x4002170	          0x4889df	                            mov rdi, rbx	       409	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	IF_11	CALL_13
0x4002173	            0x31ed	                            xor ebp, ebp	       391	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	IF_9
0x4002175	      0xe800000000	                          call 0x400217a	       409	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	IF_11	CALL_13
0x400217a	      0xe9a4feffff	                           jmp 0x4002023	       409	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	IF_11	CALL_13
0x400217f	              0x90	                                     nop	       409	eelf_k1om.c	FUNCTION_7	IF_6	IF_8	IF_11	CALL_13
0x4002180	            0x31ff	                            xor edi, edi	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x4002182	      0xba05000000	                              mov edx, 5	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x4002187	      0xbe00000000	                              mov esi, 0	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x400218c	      0xe800000000	                          call 0x4002191	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x4002191	          0x4c89e2	                            mov rdx, r12	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x4002194	          0x4889c7	                            mov rdi, rax	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x4002197	          0x4889ee	                            mov rsi, rbp	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x400219a	            0x31c0	                            xor eax, eax	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x400219c	      0xe800000000	                          call 0x40021a1	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x40021a1	            0xeb87	                           jmp 0x400212a	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x40021a3	       0xf1f440000	                   nop dword [rax + rax]	       434	eelf_k1om.c	FUNCTION_7	CALL_19
0x40021a8	            0x31ff	                            xor edi, edi	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021aa	      0xba05000000	                              mov edx, 5	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021af	      0xbe00000000	                              mov esi, 0	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021b4	      0xe800000000	                          call 0x40021b9	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021b9	          0x4889de	                            mov rsi, rbx	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021bc	          0x4889c7	                            mov rdi, rax	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021bf	            0x31c0	                            xor eax, eax	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021c1	      0xe800000000	                          call 0x40021c6	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021c6	      0xe94affffff	                           jmp 0x4002115	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021cb	       0xf1f440000	                   nop dword [rax + rax]	       428	eelf_k1om.c	FUNCTION_7	CALL_16
0x40021d0	            0x31ff	                            xor edi, edi	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021d2	      0xba05000000	                              mov edx, 5	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021d7	      0xbe00000000	                              mov esi, 0	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021dc	      0xe800000000	                          call 0x40021e1	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021e1	          0x4889de	                            mov rsi, rbx	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021e4	          0x4889c7	                            mov rdi, rax	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021e7	            0x31c0	                            xor eax, eax	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021e9	      0xe800000000	                          call 0x40021ee	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021ee	      0xe9a5feffff	                           jmp 0x4002098	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021f3	       0xf1f440000	                   nop dword [rax + rax]	       379	eelf_k1om.c	FUNCTION_7	IF_6	CALL_10
0x40021f8	          0x4889df	                            mov rdi, rbx	       446	eelf_k1om.c	FUNCTION_7	CALL_21
0x40021fb	          0x4889ee	                            mov rsi, rbp	       446	eelf_k1om.c	FUNCTION_7	CALL_21
0x40021fe	      0xe800000000	                          call 0x4002203	       446	eelf_k1om.c	FUNCTION_7	CALL_21
0x4002203	        0x498b7d00	                    mov rdi, qword [r13]	       456	eelf_k1om.c	FUNCTION_7	IF_15
0x4002207	          0x4885ff	                           test rdi, rdi	       456	eelf_k1om.c	FUNCTION_7	IF_15
0x400220a	            0x7454	                            je 0x4002260	       456	eelf_k1om.c	FUNCTION_7	IF_15
0x400220c	      0xe800000000	                          call 0x4002211	       457	eelf_k1om.c	FUNCTION_7	IF_15	CALL_22
0x4002211	            0xa804	                              test al, 4	       457	eelf_k1om.c	FUNCTION_7	IF_15	CALL_22
0x4002213	            0x744b	                            je 0x4002260	       457	eelf_k1om.c	FUNCTION_7	IF_15	CALL_22
0x4002215	      0xbe0e000000	                            mov esi, 0xe	       457	eelf_k1om.c	FUNCTION_7	IF_15	CALL_22
0x400221a	          0x4889df	                            mov rdi, rbx	       460	eelf_k1om.c	FUNCTION_7	CALL_23
0x400221d	      0xe800000000	                          call 0x4002222	       460	eelf_k1om.c	FUNCTION_7	CALL_23
0x4002222	        0x488b4308	                mov rax, qword [rbx + 8]	       463	eelf_k1om.c	FUNCTION_7	IF_16
0x4002226	      0xbe00000000	                              mov esi, 0	       463	eelf_k1om.c	FUNCTION_7	IF_16
0x400222b	          0x4889df	                            mov rdi, rbx	       463	eelf_k1om.c	FUNCTION_7	IF_16
0x400222e	    0xff90c0020000	                call qword [rax + 0x2c0]	       463	eelf_k1om.c	FUNCTION_7	IF_16
0x4002234	            0x85c0	                           test eax, eax	       463	eelf_k1om.c	FUNCTION_7	IF_16
0x4002236	     0xf8511ffffff	                           jne 0x400214d	       463	eelf_k1om.c	FUNCTION_7	IF_16
0x400223c	            0x31ff	                            xor edi, edi	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x400223e	      0xba05000000	                              mov edx, 5	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x4002243	      0xbe00000000	                              mov esi, 0	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x4002248	      0xe800000000	                          call 0x400224d	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x400224d	          0x4889de	                            mov rsi, rbx	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x4002250	          0x4889c7	                            mov rdi, rax	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x4002253	            0x31c0	                            xor eax, eax	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x4002255	      0xe800000000	                          call 0x400225a	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x400225a	      0xe9eefeffff	                           jmp 0x400214d	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x400225f	              0x90	                                     nop	       464	eelf_k1om.c	FUNCTION_7	CALL_25
0x4002260	      0xbe02000000	                              mov esi, 2	       334	eelf_k1om.c	FUNCTION_7
0x4002265	            0xebb3	                           jmp 0x400221a	       334	eelf_k1om.c	FUNCTION_7
0x4002267	      0xe800000000	                          call 0x400226c	       467	eelf_k1om.c	FUNCTION_7
gldelf_k1om_place_orphan	CALL,23:DO,0:IF,32:SWITCH,1:WHILE,1:FOR,3:ELSE,14:functions,0	514
0x4002900	            0x4157	                                push r15	      1886	eelf_k1om.c	FUNCTION_25
0x4002902	            0x4156	                                push r14	      1886	eelf_k1om.c	FUNCTION_25
0x4002904	          0x4531ff	                          xor r15d, r15d	      1886	eelf_k1om.c	FUNCTION_25
0x4002907	            0x4155	                                push r13	      1886	eelf_k1om.c	FUNCTION_25
0x4002909	            0x4154	                                push r12	      1886	eelf_k1om.c	FUNCTION_25
0x400290b	          0x4989f5	                            mov r13, rsi	      1886	eelf_k1om.c	FUNCTION_25
0x400290e	              0x55	                                push rbp	      1886	eelf_k1om.c	FUNCTION_25
0x400290f	              0x53	                                push rbx	      1886	eelf_k1om.c	FUNCTION_25
0x4002910	          0x4889fd	                            mov rbp, rdi	      1886	eelf_k1om.c	FUNCTION_25
0x4002913	            0x89d3	                            mov ebx, edx	      1886	eelf_k1om.c	FUNCTION_25
0x4002915	        0x4883ec28	                           sub rsp, 0x28	      1886	eelf_k1om.c	FUNCTION_25
0x4002919	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	      1935	eelf_k1om.c	FUNCTION_25
0x4002920	        0x488b4008	                mov rax, qword [rax + 8]	      1935	eelf_k1om.c	FUNCTION_25
0x4002924	        0x448b6008	               mov r12d, dword [rax + 8]	      1935	eelf_k1om.c	FUNCTION_25
0x4002928	    0x488b05000000	            mov rax, qword [0x0400292f] 	      1936	eelf_k1om.c	FUNCTION_25
0x400292f	        0x488b4008	                mov rax, qword [rax + 8]	      1936	eelf_k1om.c	FUNCTION_25
0x4002933	        0x4183fc05	                             cmp r12d, 5	      1935	eelf_k1om.c	FUNCTION_25
0x4002937	       0xf94442408	                     sete byte [rsp + 8]	      1935	eelf_k1om.c	FUNCTION_25
0x400293c	        0x448b4808	                mov r9d, dword [rax + 8]	      1936	eelf_k1om.c	FUNCTION_25
0x4002940	     0xf845a030000	                            je 0x4002ca0	      1937	eelf_k1om.c	FUNCTION_25	CALL_1
0x4002946	     0xfb605000000	           movzx eax, byte [0x0400294d] 	      1941	eelf_k1om.c	FUNCTION_25	IF_1	CALL_2
0x400294d	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1934	eelf_k1om.c	FUNCTION_25
0x4002955	          0x83e003	                              and eax, 3	      1941	eelf_k1om.c	FUNCTION_25	IF_1	CALL_2
0x4002958	            0x3c02	                               cmp al, 2	      1941	eelf_k1om.c	FUNCTION_25	IF_1	CALL_2
0x400295a	     0xf84a0000000	                            je 0x4002a00	      1941	eelf_k1om.c	FUNCTION_25	IF_1	CALL_2
0x4002960	    0xf60500000000	           test byte [0x04002967], 0x40 	      1942	eelf_k1om.c	FUNCTION_25	IF_1
0x4002967	     0xf85b3010000	                           jne 0x4002b20	      1942	eelf_k1om.c	FUNCTION_25	IF_1
0x400296d	        0x4183f905	                              cmp r9d, 5	      1968	eelf_k1om.c	FUNCTION_25	IF_4
0x4002971	     0xf8589000000	                           jne 0x4002a00	      1968	eelf_k1om.c	FUNCTION_25	IF_4
0x4002977	      0x807c240800	                   cmp byte [rsp + 8], 0	      1968	eelf_k1om.c	FUNCTION_25	IF_4
0x400297c	     0xf847e000000	                            je 0x4002a00	      1968	eelf_k1om.c	FUNCTION_25	IF_4
0x4002982	          0x8b4d20	            mov ecx, dword [rbp + 0x20] 	      1969	eelf_k1om.c	FUNCTION_25	IF_4
0x4002985	          0xf6c101	                              test cl, 1	      1969	eelf_k1om.c	FUNCTION_25	IF_4
0x4002988	            0x7476	                            je 0x4002a00	      1969	eelf_k1om.c	FUNCTION_25	IF_4
0x400298a	    0x488bb5e00000	            mov rsi, qword [rbp + 0xe0] 	      1970	eelf_k1om.c	FUNCTION_25	IF_4	CALL_4
0x4002991	        0xf6460b01	                test byte [rsi + 0xb], 1	      1970	eelf_k1om.c	FUNCTION_25	IF_4	CALL_4
0x4002995	            0x7469	                            je 0x4002a00	      1970	eelf_k1om.c	FUNCTION_25	IF_4	CALL_4
0x4002997	    0x4c8b2d000000	            mov r13, qword [0x0400299e] 	      1974	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1
0x400299e	          0x4d85ed	                           test r13, r13	      1974	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1
0x40029a1	            0x7446	                            je 0x40029e9	      1974	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1
0x40029a3	       0xf1f440000	                   nop dword [rax + rax]	      1974	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1
0x40029a8	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1977	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029ac	    0x483d00000000	                              cmp rax, 0	      1978	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029b2	            0x742c	                            je 0x40029e0	      1978	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029b4	          0x4885c0	                           test rax, rax	      1978	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029b7	            0x7427	                            je 0x40029e0	      1978	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029b9	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      1979	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_5
0x40029c0	        0xf6420b01	                test byte [rdx + 0xb], 1	      1979	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_5
0x40029c4	            0x741a	                            je 0x40029e0	      1979	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_5
0x40029c6	          0x8b7820	            mov edi, dword [rax + 0x20] 	      1980	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029c9	            0x31cf	                            xor edi, ecx	      1980	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029cb	            0x89f8	                            mov eax, edi	      1980	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029cd	      0xa91b010000	                         test eax, 0x11b	      1980	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029d2	            0x750c	                           jne 0x40029e0	      1980	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x40029d4	          0x8b462c	            mov eax, dword [rsi + 0x2c] 	      1990	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_6
0x40029d7	          0x39422c	            cmp dword [rdx + 0x2c], eax 	      1990	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_6
0x40029da	     0xf8457050000	                            je 0x4002f37	      1990	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_6
0x40029e0	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      1976	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1
0x40029e4	          0x4d85ed	                           test r13, r13	      1974	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1
0x40029e7	            0x75bf	                           jne 0x40029a8	      1974	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1
0x40029e9	    0xf7c102010000	                         test ecx, 0x102	      1999	eelf_k1om.c	FUNCTION_25	IF_4	IF_6
0x40029ef	    0x41bd00000000	                             mov r13d, 0	      2000	eelf_k1om.c	FUNCTION_25	IF_4	IF_6
0x40029f5	     0xf8596040000	                           jne 0x4002e91	      1999	eelf_k1om.c	FUNCTION_25	IF_4	IF_6
0x40029fb	       0xf1f440000	                   nop dword [rax + rax]	      1999	eelf_k1om.c	FUNCTION_25	IF_4	IF_6
0x4002a00	            0x85db	                           test ebx, ebx	      2013	eelf_k1om.c	FUNCTION_25	IF_9
0x4002a02	     0xf84b8010000	                            je 0x4002bc0	      2013	eelf_k1om.c	FUNCTION_25	IF_9
0x4002a08	    0x448b05000000	            mov r8d, dword [0x04002a0f] 	      2053	eelf_k1om.c	FUNCTION_25	IF_13
0x4002a0f	          0x4585c0	                           test r8d, r8d	      2053	eelf_k1om.c	FUNCTION_25	IF_13
0x4002a12	            0x7551	                           jne 0x4002a65	      2053	eelf_k1om.c	FUNCTION_25	IF_13
0x4002a14	    0x41be00000000	                             mov r14d, 0	      2053	eelf_k1om.c	FUNCTION_25	IF_13
0x4002a1a	    0x660f1f440000	                    nop word [rax + rax]	      2053	eelf_k1om.c	FUNCTION_25	IF_13
0x4002a20	          0x498b3e	                    mov rdi, qword [r14]	      2058	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14
0x4002a23	          0x4885ff	                           test rdi, rdi	      2058	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14
0x4002a26	            0x7426	                            je 0x4002a4e	      2058	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14
0x4002a28	            0x31d2	                            xor edx, edx	      2060	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	CALL_14
0x4002a2a	            0x31f6	                            xor esi, esi	      2060	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	CALL_14
0x4002a2c	      0xe800000000	                          call 0x4002a31	      2060	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	CALL_14
0x4002a31	          0x4885c0	                           test rax, rax	      2061	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	IF_15
0x4002a34	        0x49894610	             mov qword [r14 + 0x10], rax	      2060	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	CALL_14
0x4002a38	            0x7414	                            je 0x4002a4e	      2061	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	IF_15
0x4002a3a	    0x8bb888000000	            mov edi, dword [rax + 0x88] 	      2061	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	IF_15
0x4002a40	            0x85ff	                           test edi, edi	      2061	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	IF_15
0x4002a42	            0x750a	                           jne 0x4002a4e	      2061	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	IF_15
0x4002a44	        0x418b5608	                mov edx, dword [r14 + 8]	      2062	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	IF_15
0x4002a48	    0x899088000000	             mov dword [rax + 0x88], edx	      2062	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3	IF_14	IF_15
0x4002a4e	        0x4983c630	                           add r14, 0x30	      2057	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3
0x4002a52	    0x4981fe000000	                              cmp r14, 0	      2057	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3
0x4002a59	            0x75c5	                           jne 0x4002a20	      2057	eelf_k1om.c	FUNCTION_25	IF_13	FOR_3
0x4002a5b	    0xc70500000000	               mov dword [0x04002a65], 1	      2064	eelf_k1om.c	FUNCTION_25	IF_13
0x4002a65	     0xfb605000000	           movzx eax, byte [0x04002a6c] 	      2069	eelf_k1om.c	FUNCTION_25	IF_16	CALL_15
0x4002a6c	          0x83e003	                              and eax, 3	      2069	eelf_k1om.c	FUNCTION_25	IF_16	CALL_15
0x4002a6f	            0x3c01	                               cmp al, 1	      2069	eelf_k1om.c	FUNCTION_25	IF_16	CALL_15
0x4002a71	     0xf8699030000	                           jbe 0x4002e10	      2069	eelf_k1om.c	FUNCTION_25	IF_16	CALL_15
0x4002a77	          0x8b4d20	            mov ecx, dword [rbp + 0x20] 	      2078	eelf_k1om.c	FUNCTION_25
0x4002a7a	            0x3c02	                               cmp al, 2	      2079	eelf_k1om.c	FUNCTION_25	IF_17	CALL_17
0x4002a7c	        0x894c2418	             mov dword [rsp + 0x18], ecx	      2078	eelf_k1om.c	FUNCTION_25
0x4002a80	     0xf84ea000000	                            je 0x4002b70	      2079	eelf_k1om.c	FUNCTION_25	IF_17	CALL_17
0x4002a86	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	      2079	eelf_k1om.c	FUNCTION_25	IF_17	CALL_17
0x4002a8d	          0x4989ee	                            mov r14, rbp	      2079	eelf_k1om.c	FUNCTION_25	IF_17	CALL_17
0x4002a90	            0xeb0d	                           jmp 0x4002a9f	      2079	eelf_k1om.c	FUNCTION_25	IF_17	CALL_17
0x4002a92	    0x660f1f440000	                    nop word [rax + rax]	      2079	eelf_k1om.c	FUNCTION_25	IF_17	CALL_17
0x4002a98	    0x498bbef00000	            mov rdi, qword [r14 + 0xf0] 	      2079	eelf_k1om.c	FUNCTION_25	IF_17	CALL_17
0x4002a9f	          0x4c89f6	                            mov rsi, r14	      2082	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	CALL_18
0x4002aa2	      0xe800000000	                          call 0x4002aa7	      2082	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	CALL_18
0x4002aa7	          0x4885c0	                           test rax, rax	      2082	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	CALL_18
0x4002aaa	          0x4989c6	                            mov r14, rax	      2082	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	CALL_18
0x4002aad	     0xf84bd000000	                            je 0x4002b70	      2082	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	CALL_18
0x4002ab3	      0x49837e6800	               cmp qword [r14 + 0x68], 0	      2084	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ab8	            0x75de	                           jne 0x4002a98	      2084	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002aba	        0x418b4620	            mov eax, dword [r14 + 0x20] 	      2085	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002abe	          0xf6c480	                           test ah, 0x80	      2085	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ac1	            0x75d5	                           jne 0x4002a98	      2085	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ac3	        0x33442418	             xor eax, dword [rsp + 0x18]	      2086	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ac7	    0x498bbef00000	            mov rdi, qword [r14 + 0xf0] 	      2087	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ace	            0xa803	                              test al, 3	      2086	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ad0	            0x75cd	                           jne 0x4002a9f	      2086	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ad2	        0xf6474508	               test byte [rdi + 0x45], 8	      2087	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ad6	            0x75c7	                           jne 0x4002a9f	      2087	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ad8	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      2088	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002adf	          0x4885c0	                           test rax, rax	      2088	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ae2	            0x74bb	                            je 0x4002a9f	      2088	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ae4	        0xf6404810	           test byte [rax + 0x48], 0x10 	      2089	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002ae8	            0x75b5	                           jne 0x4002a9f	      2089	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002aea	    0x488b95f00000	            mov rdx, qword [rbp + 0xf0] 	      2091	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18	CALL_19
0x4002af1	          0x4889e9	                            mov rcx, rbp	      2091	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18	CALL_19
0x4002af4	          0x4c89f6	                            mov rsi, r14	      2091	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18	CALL_19
0x4002af7	      0xe800000000	                          call 0x4002afc	      2091	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18	CALL_19
0x4002afc	            0x85c0	                           test eax, eax	      2091	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18	CALL_19
0x4002afe	            0x7498	                            je 0x4002a98	      2091	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18	CALL_19
0x4002b00	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2094	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b04	        0x418b5620	            mov edx, dword [r14 + 0x20] 	      2094	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b08	          0x83f008	                              xor eax, 8	      2094	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b0b	          0x83f208	                              xor edx, 8	      2094	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b0e	             0x9d0	                             or eax, edx	      2094	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b10	          0x83f008	                              xor eax, 8	      2093	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b13	        0x89442418	             mov dword [rsp + 0x18], eax	      2093	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b17	      0xe97cffffff	                           jmp 0x4002a98	      2093	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b1c	         0xf1f4000	                         nop dword [rax]	      2093	eelf_k1om.c	FUNCTION_25	IF_17	WHILE_1	IF_18
0x4002b20	        0xf6452001	               test byte [rbp + 0x20], 1	      1943	eelf_k1om.c	FUNCTION_25	IF_1
0x4002b24	     0xf8443feffff	                            je 0x400296d	      1943	eelf_k1om.c	FUNCTION_25	IF_1
0x4002b2a	        0x4183fc05	                             cmp r12d, 5	      1945	eelf_k1om.c	FUNCTION_25	IF_1	IF_2
0x4002b2e	     0xf843c030000	                            je 0x4002e70	      1945	eelf_k1om.c	FUNCTION_25	IF_1	IF_2
0x4002b34	      0xbf00000000	                              mov edi, 0	      1959	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b39	      0xb904000000	                              mov ecx, 4	      1959	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b3e	          0x4c89ee	                            mov rsi, r13	      1959	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b41	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1959	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b43	     0xf8524feffff	                           jne 0x400296d	      1959	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b49	      0x41807d0461	                cmp byte [r13 + 4], 0x61	      1961	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b4e	    0xc74424140100	               mov dword [rsp + 0x14], 1	      1962	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b56	     0xf845b030000	                            je 0x4002eb7	      1961	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b5c	    0x41bd00000000	                             mov r13d, 0	      1961	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b62	      0xe906feffff	                           jmp 0x400296d	      1961	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b67	    0x660f1f840000	                    nop word [rax + rax]	      1961	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002b70	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2105	eelf_k1om.c	FUNCTION_25	IF_19
0x4002b74	      0xa901200000	                        test eax, 0x2001	      2105	eelf_k1om.c	FUNCTION_25	IF_19
0x4002b79	     0xf8531010000	                           jne 0x4002cb0	      2105	eelf_k1om.c	FUNCTION_25	IF_19
0x4002b7f	    0x41b800000000	                              mov r8d, 0	      2106	eelf_k1om.c	FUNCTION_25	IF_19
0x4002b85	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      2133	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29
0x4002b89	          0x4885c9	                           test rcx, rcx	      2133	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29
0x4002b8c	     0xf8443030000	                            je 0x4002ed5	      2133	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29
0x4002b92	        0x4883ec08	                              sub rsp, 8	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002b96	            0x89da	                            mov edx, ebx	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002b98	          0x4531c9	                            xor r9d, r9d	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002b9b	            0x6a00	                                  push 0	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002b9d	          0x4c89ee	                            mov rsi, r13	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002ba0	          0x4889ef	                            mov rdi, rbp	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002ba3	      0xe800000000	                          call 0x4002ba8	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002ba8	              0x5a	                                 pop rdx	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002ba9	              0x59	                                 pop rcx	      2150	eelf_k1om.c	FUNCTION_25	CALL_23
0x4002baa	        0x4883c428	                           add rsp, 0x28	      2151	eelf_k1om.c	FUNCTION_25
0x4002bae	              0x5b	                                 pop rbx	      2151	eelf_k1om.c	FUNCTION_25
0x4002baf	              0x5d	                                 pop rbp	      2151	eelf_k1om.c	FUNCTION_25
0x4002bb0	            0x415c	                                 pop r12	      2151	eelf_k1om.c	FUNCTION_25
0x4002bb2	            0x415d	                                 pop r13	      2151	eelf_k1om.c	FUNCTION_25
0x4002bb4	            0x415e	                                 pop r14	      2151	eelf_k1om.c	FUNCTION_25
0x4002bb6	            0x415f	                                 pop r15	      2151	eelf_k1om.c	FUNCTION_25
0x4002bb8	              0xc3	                                     ret	      2151	eelf_k1om.c	FUNCTION_25
0x4002bb9	     0xf1f80000000	                         nop dword [rax]	      2151	eelf_k1om.c	FUNCTION_25
0x4002bc0	            0x31d2	                            xor edx, edx	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002bc2	            0x31f6	                            xor esi, esi	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002bc4	          0x4c89ef	                            mov rdi, r13	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002bc7	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002bcc	      0xe800000000	                          call 0x4002bd1	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002bd1	          0x4885c0	                           test rax, rax	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002bd4	          0x4989c6	                            mov r14, rax	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002bd7	     0xf842bfeffff	                            je 0x4002a08	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002bdd	            0x31db	                            xor ebx, ebx	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002bdf	        0x4183fc05	                             cmp r12d, 5	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002be3	     0xf859f010000	                           jne 0x4002d88	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002be9	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002bee	        0x4183f905	                              cmp r9d, 5	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002bf2	            0x7422	                            je 0x4002c16	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002bf4	      0xe98f010000	                           jmp 0x4002d88	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002bf9	     0xf1f80000000	                         nop dword [rax]	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c00	            0x31f6	                            xor esi, esi	      2016	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_10
0x4002c02	          0x4c89f7	                            mov rdi, r14	      2016	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_10
0x4002c05	      0xe800000000	                          call 0x4002c0a	      2016	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_10
0x4002c0a	          0x4885c0	                           test rax, rax	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002c0d	          0x4989c6	                            mov r14, rax	      2016	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_10
0x4002c10	     0xf84ca010000	                            je 0x4002de0	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002c16	        0x498b7638	            mov rsi, qword [r14 + 0x38] 	      2027	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c1a	          0x4885f6	                           test rsi, rsi	      2027	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c1d	            0x7479	                            je 0x4002c98	      2027	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c1f	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      2028	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c22	            0x85c0	                           test eax, eax	      2028	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c24	     0xf8481010000	                            je 0x4002dab	      2028	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c2a	          0x334520	             xor eax, dword [rbp + 0x20]	      2029	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c2d	            0xa803	                              test al, 3	      2029	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c2f	            0x75cf	                           jne 0x4002c00	      2029	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c31	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	      1867	eelf_k1om.c	FUNCTION_24	IF_1	CALL_1
0x4002c38	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      1868	eelf_k1om.c	FUNCTION_24	IF_1	CALL_2
0x4002c3f	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	      1867	eelf_k1om.c	FUNCTION_24	IF_1	CALL_1
0x4002c42	          0x394a2c	            cmp dword [rdx + 0x2c], ecx 	      1867	eelf_k1om.c	FUNCTION_24	IF_1	CALL_1
0x4002c45	            0x75b9	                           jne 0x4002c00	      1867	eelf_k1om.c	FUNCTION_24	IF_1	CALL_1
0x4002c47	     0xfb60d000000	           movzx ecx, byte [0x04002c4e] 	      1872	eelf_k1om.c	FUNCTION_24	IF_2	CALL_3
0x4002c4e	          0x83e103	                              and ecx, 3	      1872	eelf_k1om.c	FUNCTION_24	IF_2	CALL_3
0x4002c51	          0x80f902	                               cmp cl, 2	      1872	eelf_k1om.c	FUNCTION_24	IF_2	CALL_3
0x4002c54	            0x7512	                           jne 0x4002c68	      1872	eelf_k1om.c	FUNCTION_24	IF_2	CALL_3
0x4002c56	        0x488b5208	                mov rdx, qword [rdx + 8]	      1873	eelf_k1om.c	FUNCTION_24	IF_2	CALL_5
0x4002c5a	        0x48335008	                xor rdx, qword [rax + 8]	      1873	eelf_k1om.c	FUNCTION_24	IF_2	CALL_5
0x4002c5e	          0x4889d0	                            mov rax, rdx	      1873	eelf_k1om.c	FUNCTION_24	IF_2	CALL_5
0x4002c61	      0xa900000080	                    test eax, 0x80000000	      1873	eelf_k1om.c	FUNCTION_24	IF_2	CALL_5
0x4002c66	            0x7598	                           jne 0x4002c00	      1873	eelf_k1om.c	FUNCTION_24	IF_2	CALL_5
0x4002c68	    0x488b95f00000	            mov rdx, qword [rbp + 0xf0] 	      1875	eelf_k1om.c	FUNCTION_24	CALL_6
0x4002c6f	    0x488b3d000000	            mov rdi, qword [0x04002c76] 	      1875	eelf_k1om.c	FUNCTION_24	CALL_6
0x4002c76	          0x4889e9	                            mov rcx, rbp	      1875	eelf_k1om.c	FUNCTION_24	CALL_6
0x4002c79	      0xe800000000	                          call 0x4002c7e	      1875	eelf_k1om.c	FUNCTION_24	CALL_6
0x4002c7e	            0x85c0	                           test eax, eax	      2033	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10	CALL_11
0x4002c80	     0xf8525010000	                           jne 0x4002dab	      2033	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10	CALL_11
0x4002c86	      0x49837e3800	               cmp qword [r14 + 0x38], 0	      2041	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_11
0x4002c8b	        0x490f44de	                          cmove rbx, r14	      2041	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_11
0x4002c8f	      0xe96cffffff	                           jmp 0x4002c00	      2041	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_11
0x4002c94	         0xf1f4000	                         nop dword [rax]	      2041	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_11
0x4002c98	          0x4c89f3	                            mov rbx, r14	      2027	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002c9b	      0xe960ffffff	                           jmp 0x4002c00	      2027	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002ca0	    0x488b87e00000	            mov rax, qword [rdi + 0xe0] 	      1937	eelf_k1om.c	FUNCTION_25	CALL_1
0x4002ca7	        0x448b7804	               mov r15d, dword [rax + 4]	      1937	eelf_k1om.c	FUNCTION_25	CALL_1
0x4002cab	      0xe996fcffff	                           jmp 0x4002946	      1937	eelf_k1om.c	FUNCTION_25	CALL_1
0x4002cb0	            0xa801	                              test al, 1	      2107	eelf_k1om.c	FUNCTION_25	ELSE_5	IF_20
0x4002cb2	     0xf84a8010000	                            je 0x4002e60	      2107	eelf_k1om.c	FUNCTION_25	ELSE_5	IF_20
0x4002cb8	          0x83e002	                              and eax, 2	      2109	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cbb	            0x7443	                            je 0x4002d00	      2109	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cbd	        0x4183ff07	                             cmp r15d, 7	      2110	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cc1	            0x7511	                           jne 0x4002cd4	      2110	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cc3	      0x807c240800	                   cmp byte [rsp + 8], 0	      2110	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cc8	    0x41b800000000	                              mov r8d, 0	      2112	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cce	     0xf85b1feffff	                           jne 0x4002b85	      2110	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cd4	        0x4183fc05	                             cmp r12d, 5	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cd8	            0x7426	                            je 0x4002d00	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cda	      0xb905000000	                              mov ecx, 5	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cdf	      0xbf00000000	                              mov edi, 0	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002ce4	          0x4c89ee	                            mov rsi, r13	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002ce7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002ce9	    0x41b800000000	                              mov r8d, 0	      2112	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cef	           0xf97c1	                                 seta cl	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cf2	           0xf92c2	                                 setb dl	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cf5	            0x38d1	                              cmp cl, dl	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cf7	     0xf8488feffff	                            je 0x4002b85	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002cfd	           0xf1f00	                         nop dword [rax]	      2111	eelf_k1om.c	FUNCTION_25	ELSE_6	IF_21
0x4002d00	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      2113	eelf_k1om.c	FUNCTION_25	ELSE_7	IF_22
0x4002d04	    0x41b800000000	                              mov r8d, 0	      2114	eelf_k1om.c	FUNCTION_25	ELSE_7	IF_22
0x4002d0a	    0xf7c102050000	                         test ecx, 0x502	      2113	eelf_k1om.c	FUNCTION_25	ELSE_7	IF_22
0x4002d10	     0xf846ffeffff	                            je 0x4002b85	      2113	eelf_k1om.c	FUNCTION_25	ELSE_7	IF_22
0x4002d16	    0xf7c100004000	                      test ecx, 0x400000	      2115	eelf_k1om.c	FUNCTION_25	ELSE_8	IF_23
0x4002d1c	    0x41b800000000	                              mov r8d, 0	      2116	eelf_k1om.c	FUNCTION_25	ELSE_8	IF_23
0x4002d22	     0xf855dfeffff	                           jne 0x4002b85	      2115	eelf_k1om.c	FUNCTION_25	ELSE_8	IF_23
0x4002d28	          0xf6c504	                              test ch, 4	      2117	eelf_k1om.c	FUNCTION_25	ELSE_9	IF_24
0x4002d2b	    0x41b800000000	                              mov r8d, 0	      2118	eelf_k1om.c	FUNCTION_25	ELSE_9	IF_24
0x4002d31	     0xf854efeffff	                           jne 0x4002b85	      2117	eelf_k1om.c	FUNCTION_25	ELSE_9	IF_24
0x4002d37	          0x83e108	                              and ecx, 8	      2119	eelf_k1om.c	FUNCTION_25	ELSE_10	IF_25
0x4002d3a	    0x41b800000000	                              mov r8d, 0	      2120	eelf_k1om.c	FUNCTION_25	ELSE_10	IF_25
0x4002d40	     0xf843ffeffff	                            je 0x4002b85	      2119	eelf_k1om.c	FUNCTION_25	ELSE_10	IF_25
0x4002d46	        0x4183fc05	                             cmp r12d, 5	      2121	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d4a	     0xf8440030000	                            je 0x4003090	      2121	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d50	      0xbf00000000	                              mov edi, 0	      2122	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d55	      0xb904000000	                              mov ecx, 4	      2122	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d5a	          0x4c89ee	                            mov rsi, r13	      2122	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d5d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2122	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d5f	            0x750e	                           jne 0x4002d6f	      2122	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d61	            0x85c0	                           test eax, eax	      2123	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d63	    0x41b800000000	                              mov r8d, 0	      2124	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d69	     0xf8516feffff	                           jne 0x4002b85	      2123	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4002d6f	      0xf644241810	           test byte [rsp + 0x18], 0x10 	      2126	eelf_k1om.c	FUNCTION_25	ELSE_12	IF_27
0x4002d74	      0xb800000000	                              mov eax, 0	      2126	eelf_k1om.c	FUNCTION_25	ELSE_12	IF_27
0x4002d79	    0x41b800000000	                              mov r8d, 0	      2126	eelf_k1om.c	FUNCTION_25	ELSE_12	IF_27
0x4002d7f	        0x4c0f44c0	                           cmove r8, rax	      2126	eelf_k1om.c	FUNCTION_25	ELSE_12	IF_27
0x4002d83	      0xe9fdfdffff	                           jmp 0x4002b85	      2126	eelf_k1om.c	FUNCTION_25	ELSE_12	IF_27
0x4002d88	          0x4c89f0	                            mov rax, r14	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002d8b	       0xf1f440000	                   nop dword [rax + rax]	      2032	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002d90	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2027	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002d94	          0x4885d2	                           test rdx, rdx	      2027	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002d97	            0x7435	                            je 0x4002dce	      2027	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002d99	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      2028	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002d9c	            0x85d2	                           test edx, edx	      2028	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002d9e	            0x7408	                            je 0x4002da8	      2028	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002da0	          0x335520	             xor edx, dword [rbp + 0x20]	      2029	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002da3	          0x83e203	                              and edx, 3	      2029	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002da6	            0x7529	                           jne 0x4002dd1	      2029	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002da8	          0x4989c6	                            mov r14, rax	      2029	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002dab	        0x498d7e10	                   lea rdi, [r14 + 0x10]	      2035	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10	CALL_12
0x4002daf	          0x4c89f1	                            mov rcx, r14	      2035	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10	CALL_12
0x4002db2	          0x4889ee	                            mov rsi, rbp	      2035	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10	CALL_12
0x4002db5	            0x31d2	                            xor edx, edx	      2035	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10	CALL_12
0x4002db7	      0xe800000000	                          call 0x4002dbc	      2035	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10	CALL_12
0x4002dbc	        0x4883c428	                           add rsp, 0x28	      2151	eelf_k1om.c	FUNCTION_25
0x4002dc0	          0x4c89f0	                            mov rax, r14	      2036	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	IF_10
0x4002dc3	              0x5b	                                 pop rbx	      2151	eelf_k1om.c	FUNCTION_25
0x4002dc4	              0x5d	                                 pop rbp	      2151	eelf_k1om.c	FUNCTION_25
0x4002dc5	            0x415c	                                 pop r12	      2151	eelf_k1om.c	FUNCTION_25
0x4002dc7	            0x415d	                                 pop r13	      2151	eelf_k1om.c	FUNCTION_25
0x4002dc9	            0x415e	                                 pop r14	      2151	eelf_k1om.c	FUNCTION_25
0x4002dcb	            0x415f	                                 pop r15	      2151	eelf_k1om.c	FUNCTION_25
0x4002dcd	              0xc3	                                     ret	      2151	eelf_k1om.c	FUNCTION_25
0x4002dce	          0x4889c3	                            mov rbx, rax	      2151	eelf_k1om.c	FUNCTION_25
0x4002dd1	            0x31f6	                            xor esi, esi	      2016	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_10
0x4002dd3	          0x4889c7	                            mov rdi, rax	      2016	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_10
0x4002dd6	      0xe800000000	                          call 0x4002ddb	      2016	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_10
0x4002ddb	          0x4885c0	                           test rax, rax	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002dde	            0x75b0	                           jne 0x4002d90	      2014	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2	CALL_9
0x4002de0	          0x4885db	                           test rbx, rbx	      2047	eelf_k1om.c	FUNCTION_25	IF_12
0x4002de3	     0xf84c5020000	                            je 0x40030ae	      2047	eelf_k1om.c	FUNCTION_25	IF_12
0x4002de9	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      2049	eelf_k1om.c	FUNCTION_25	IF_12	CALL_13
0x4002ded	          0x4889d9	                            mov rcx, rbx	      2049	eelf_k1om.c	FUNCTION_25	IF_12	CALL_13
0x4002df0	          0x4889ee	                            mov rsi, rbp	      2049	eelf_k1om.c	FUNCTION_25	IF_12	CALL_13
0x4002df3	            0x31d2	                            xor edx, edx	      2049	eelf_k1om.c	FUNCTION_25	IF_12	CALL_13
0x4002df5	      0xe800000000	                          call 0x4002dfa	      2049	eelf_k1om.c	FUNCTION_25	IF_12	CALL_13
0x4002dfa	        0x4883c428	                           add rsp, 0x28	      2151	eelf_k1om.c	FUNCTION_25
0x4002dfe	          0x4889d8	                            mov rax, rbx	      2050	eelf_k1om.c	FUNCTION_25	IF_12
0x4002e01	              0x5b	                                 pop rbx	      2151	eelf_k1om.c	FUNCTION_25
0x4002e02	              0x5d	                                 pop rbp	      2151	eelf_k1om.c	FUNCTION_25
0x4002e03	            0x415c	                                 pop r12	      2151	eelf_k1om.c	FUNCTION_25
0x4002e05	            0x415d	                                 pop r13	      2151	eelf_k1om.c	FUNCTION_25
0x4002e07	            0x415e	                                 pop r14	      2151	eelf_k1om.c	FUNCTION_25
0x4002e09	            0x415f	                                 pop r15	      2151	eelf_k1om.c	FUNCTION_25
0x4002e0b	              0xc3	                                     ret	      2151	eelf_k1om.c	FUNCTION_25
0x4002e0c	         0xf1f4000	                         nop dword [rax]	      2151	eelf_k1om.c	FUNCTION_25
0x4002e10	        0x488b7500	                    mov rsi, qword [rbp]	      2070	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e14	      0xbf00000000	                              mov edi, 0	      2070	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e19	      0xb90d000000	                            mov ecx, 0xd	      2070	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e1e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2070	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e20	            0x752e	                           jne 0x4002e50	      2070	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e22	    0x488b05000000	            mov rax, qword [0x04002e29] 	      2071	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e29	          0x4885c0	                           test rax, rax	      2071	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e2c	            0x7422	                            je 0x4002e50	      2071	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e2e	        0x488d7810	                   lea rdi, [rax + 0x10]	      2074	eelf_k1om.c	FUNCTION_25	IF_16	CALL_16
0x4002e32	          0x4889c1	                            mov rcx, rax	      2074	eelf_k1om.c	FUNCTION_25	IF_16	CALL_16
0x4002e35	            0x31d2	                            xor edx, edx	      2074	eelf_k1om.c	FUNCTION_25	IF_16	CALL_16
0x4002e37	          0x4889ee	                            mov rsi, rbp	      2074	eelf_k1om.c	FUNCTION_25	IF_16	CALL_16
0x4002e3a	      0x4889442408	                mov qword [rsp + 8], rax	      2074	eelf_k1om.c	FUNCTION_25	IF_16	CALL_16
0x4002e3f	      0xe800000000	                          call 0x4002e44	      2074	eelf_k1om.c	FUNCTION_25	IF_16	CALL_16
0x4002e44	      0x488b442408	                mov rax, qword [rsp + 8]	      2075	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e49	      0xe95cfdffff	                           jmp 0x4002baa	      2075	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e4e	            0x6690	                                     nop	      2075	eelf_k1om.c	FUNCTION_25	IF_16
0x4002e50	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      2078	eelf_k1om.c	FUNCTION_25
0x4002e53	        0x89442418	             mov dword [rsp + 0x18], eax	      2078	eelf_k1om.c	FUNCTION_25
0x4002e57	      0xe92afcffff	                           jmp 0x4002a86	      2078	eelf_k1om.c	FUNCTION_25
0x4002e5c	         0xf1f4000	                         nop dword [rax]	      2078	eelf_k1om.c	FUNCTION_25
0x4002e60	          0x4531c0	                            xor r8d, r8d	      2104	eelf_k1om.c	FUNCTION_25
0x4002e63	            0x31c9	                            xor ecx, ecx	      2130	eelf_k1om.c	FUNCTION_25	ELSE_13
0x4002e65	      0xe928fdffff	                           jmp 0x4002b92	      2130	eelf_k1om.c	FUNCTION_25	ELSE_13
0x4002e6a	    0x660f1f440000	                    nop word [rax + rax]	      2130	eelf_k1om.c	FUNCTION_25	ELSE_13
0x4002e70	        0x4183ff04	                             cmp r15d, 4	      1946	eelf_k1om.c	FUNCTION_25	IF_1	IF_2	SWITCH_1
0x4002e74	            0x744c	                            je 0x4002ec2	      1946	eelf_k1om.c	FUNCTION_25	IF_1	IF_2	SWITCH_1
0x4002e76	            0x31c0	                            xor eax, eax	      1934	eelf_k1om.c	FUNCTION_25
0x4002e78	        0x4183ff09	                             cmp r15d, 9	      1934	eelf_k1om.c	FUNCTION_25
0x4002e7c	           0xf94c0	                                 sete al	      1934	eelf_k1om.c	FUNCTION_25
0x4002e7f	        0x89442414	             mov dword [rsp + 0x14], eax	      1934	eelf_k1om.c	FUNCTION_25
0x4002e83	      0xb800000000	                              mov eax, 0	      1934	eelf_k1om.c	FUNCTION_25
0x4002e88	        0x4c0f44e8	                          cmove r13, rax	      1934	eelf_k1om.c	FUNCTION_25
0x4002e8c	      0xe9dcfaffff	                           jmp 0x400296d	      1934	eelf_k1om.c	FUNCTION_25
0x4002e91	          0xf6c108	                              test cl, 8	      2001	eelf_k1om.c	FUNCTION_25	IF_4	ELSE_2	IF_7
0x4002e94	    0x41bd00000000	                             mov r13d, 0	      2002	eelf_k1om.c	FUNCTION_25	IF_4	ELSE_2	IF_7
0x4002e9a	     0xf8460fbffff	                            je 0x4002a00	      2001	eelf_k1om.c	FUNCTION_25	IF_4	ELSE_2	IF_7
0x4002ea0	          0x83e110	                           and ecx, 0x10	      2004	eelf_k1om.c	FUNCTION_25	IF_4	ELSE_3	IF_8
0x4002ea3	      0xb800000000	                              mov eax, 0	      2004	eelf_k1om.c	FUNCTION_25	IF_4	ELSE_3	IF_8
0x4002ea8	    0x41bd00000000	                             mov r13d, 0	      2004	eelf_k1om.c	FUNCTION_25	IF_4	ELSE_3	IF_8
0x4002eae	        0x4c0f44e8	                          cmove r13, rax	      2004	eelf_k1om.c	FUNCTION_25	IF_4	ELSE_3	IF_8
0x4002eb2	      0xe949fbffff	                           jmp 0x4002a00	      2004	eelf_k1om.c	FUNCTION_25	IF_4	ELSE_3	IF_8
0x4002eb7	    0x41bd00000000	                             mov r13d, 0	      1961	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002ebd	      0xe9abfaffff	                           jmp 0x400296d	      1961	eelf_k1om.c	FUNCTION_25	IF_1	ELSE_1	IF_3
0x4002ec2	    0xc74424140100	               mov dword [rsp + 0x14], 1	      1950	eelf_k1om.c	FUNCTION_25	IF_1	IF_2	SWITCH_1
0x4002eca	    0x41bd00000000	                             mov r13d, 0	      1949	eelf_k1om.c	FUNCTION_25	IF_1	IF_2	SWITCH_1
0x4002ed0	      0xe998faffff	                           jmp 0x400296d	      1949	eelf_k1om.c	FUNCTION_25	IF_1	IF_2	SWITCH_1
0x4002ed5	          0x498b38	                     mov rdi, qword [r8]	      2135	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	IF_30
0x4002ed8	          0x4885ff	                           test rdi, rdi	      2135	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	IF_30
0x4002edb	            0x7473	                            je 0x4002f50	      2135	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	IF_30
0x4002edd	            0x31d2	                            xor edx, edx	      2136	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_20
0x4002edf	            0x31f6	                            xor esi, esi	      2136	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_20
0x4002ee1	      0x4c89442408	                 mov qword [rsp + 8], r8	      2136	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_20
0x4002ee6	      0xe800000000	                          call 0x4002eeb	      2136	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_20
0x4002eeb	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2136	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_20
0x4002ef0	          0x4889c1	                            mov rcx, rax	      2136	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_20
0x4002ef3	        0x49894010	              mov qword [r8 + 0x10], rax	      2136	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_20
0x4002ef7	          0x4885c9	                           test rcx, rcx	      2141	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31
0x4002efa	     0xf8592fcffff	                           jne 0x4002b92	      2141	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31
0x4002f00	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      2143	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31	CALL_22
0x4002f04	        0x498d5010	                    lea rdx, [r8 + 0x10]	      2143	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31	CALL_22
0x4002f08	      0xb900000000	                              mov ecx, 0	      2143	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31	CALL_22
0x4002f0d	          0x4889ef	                            mov rdi, rbp	      2143	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31	CALL_22
0x4002f10	      0x4c89442408	                 mov qword [rsp + 8], r8	      2143	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31	CALL_22
0x4002f15	      0xe800000000	                          call 0x4002f1a	      2143	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31	CALL_22
0x4002f1a	          0x4885c0	                           test rax, rax	      2145	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_32
0x4002f1d	          0x4889c1	                            mov rcx, rax	      2143	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_31	CALL_22
0x4002f20	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2145	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_32
0x4002f25	     0xf8567fcffff	                           jne 0x4002b92	      2145	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_32
0x4002f2b	    0x488b0d000000	            mov rcx, qword [0x04002f32] 	      2147	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_32
0x4002f32	      0xe95bfcffff	                           jmp 0x4002b92	      2147	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_32
0x4002f37	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      1993	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_8
0x4002f3b	          0x4c89e9	                            mov rcx, r13	      1993	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_8
0x4002f3e	            0x31d2	                            xor edx, edx	      1993	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_8
0x4002f40	          0x4889ee	                            mov rsi, rbp	      1993	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_8
0x4002f43	      0xe800000000	                          call 0x4002f48	      1993	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5	CALL_8
0x4002f48	          0x4c89e8	                            mov rax, r13	      1994	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x4002f4b	      0xe95afcffff	                           jmp 0x4002baa	      1994	eelf_k1om.c	FUNCTION_25	IF_4	FOR_1	IF_5
0x4002f50	        0x488b4500	                    mov rax, qword [rbp]	      1802	eelf_k1om.c	FUNCTION_23
0x4002f54	        0x80780461	                cmp byte [rax + 4], 0x61	      1802	eelf_k1om.c	FUNCTION_23
0x4002f58	    0x488b05000000	            mov rax, qword [0x04002f5f] 	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f5f	       0xf94442408	                     sete byte [rsp + 8]	      1802	eelf_k1om.c	FUNCTION_23
0x4002f64	          0x4885c0	                           test rax, rax	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f67	    0x440fb65c2408	              movzx r11d, byte [rsp + 8]	      1802	eelf_k1om.c	FUNCTION_23
0x4002f6d	     0xf8436010000	                            je 0x40030a9	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f73	        0x895c241c	             mov dword [rsp + 0x1c], ebx	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f77	          0x4531c9	                            xor r9d, r9d	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f7a	          0x4531ff	                          xor r15d, r15d	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f7d	          0x4531d2	                          xor r10d, r10d	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f80	          0x4531e4	                          xor r12d, r12d	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f83	          0x4531f6	                          xor r14d, r14d	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f86	      0x4c89442408	                 mov qword [rsp + 8], r8	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f8b	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f8f	            0xeb43	                           jmp 0x4002fd4	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002f91	            0x84d2	                             test dl, dl	      1823	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_4
0x4002f93	     0xf858c000000	                           jne 0x4003025	      1823	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_4
0x4002f99	          0x4d85e4	                           test r12, r12	      1825	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4002f9c	     0xf848b000000	                            je 0x400302d	      1825	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4002fa2	            0x84d2	                             test dl, dl	      1825	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4002fa4	     0xf8583000000	                           jne 0x400302d	      1825	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4002faa	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1832	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6
0x4002fae	          0x4885d2	                           test rdx, rdx	      1832	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6
0x4002fb1	            0x7412	                            je 0x4002fc5	      1832	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6
0x4002fb3	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1832	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6
0x4002fb6	          0xf6c201	                              test dl, 1	      1833	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6
0x4002fb9	            0x740a	                            je 0x4002fc5	      1833	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6
0x4002fbb	          0x83e208	                              and edx, 8	      1836	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4002fbe	          0x4989c7	                            mov r15, rax	      1836	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4002fc1	        0x4c0f45d0	                         cmovne r10, rax	      1836	eelf_k1om.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4002fc5	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1806	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002fc9	          0x4989c1	                             mov r9, rax	      1806	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002fcc	          0x4885d2	                           test rdx, rdx	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002fcf	            0x7475	                            je 0x4003046	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002fd1	          0x4889d0	                            mov rax, rdx	      1804	eelf_k1om.c	FUNCTION_23	FOR_1
0x4002fd4	    0x8bb084000000	            mov esi, dword [rax + 0x84] 	      1808	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002fda	            0x85f6	                           test esi, esi	      1808	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002fdc	            0x78cc	                            js 0x4002faa	      1808	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002fde	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1809	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002fe2	      0xbf00000000	                              mov edi, 0	      1809	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002fe7	      0xb904000000	                              mov ecx, 4	      1809	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002fec	          0x4889d6	                            mov rsi, rdx	      1809	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002fef	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1809	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002ff1	            0x75b7	                           jne 0x4002faa	      1809	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002ff3	        0x807a0461	                cmp byte [rdx + 4], 0x61	      1811	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002ff7	        0x410f94c0	                                sete r8b	      1811	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1
0x4002ffb	            0x85db	                           test ebx, ebx	      1815	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4002ffd	            0x7561	                           jne 0x4003060	      1815	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4002fff	        0x410fb6c8	                          movzx ecx, r8b	      1820	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_3	CALL_1
0x4003003	      0xbe00000000	                              mov esi, 0	      1820	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_3	CALL_1
0x4003008	      0x488d7c0a04	                lea rdi, [rdx + rcx + 4]	      1820	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_3	CALL_1
0x400300d	      0xb905000000	                              mov ecx, 5	      1820	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_3	CALL_1
0x4003012	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1820	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_3	CALL_1
0x4003014	            0x744a	                            je 0x4003060	      1820	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_3	CALL_1
0x4003016	          0x4538c3	                           cmp r11b, r8b	      1823	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_4
0x4003019	           0xf94c2	                                 sete dl	      1823	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_4
0x400301c	          0x4d85f6	                           test r14, r14	      1823	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_4
0x400301f	     0xf856cffffff	                           jne 0x4002f91	      1823	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_4
0x4003025	          0x4989c6	                            mov r14, rax	      1823	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_4
0x4003028	      0xe96cffffff	                           jmp 0x4002f99	      1823	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_4
0x400302d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1826	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4003031	          0x4885d2	                           test rdx, rdx	      1826	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4003034	            0x748f	                            je 0x4002fc5	      1826	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4003036	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1827	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4003039	          0xf6c201	                              test dl, 1	      1827	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x400303c	            0x7487	                            je 0x4002fc5	      1827	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x400303e	          0x4989c4	                            mov r12, rax	      1827	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4003041	      0xe975ffffff	                           jmp 0x4002fbb	      1827	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x4003046	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1827	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x400304b	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	      1827	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_5
0x400304f	          0x4d85e4	                           test r12, r12	      1841	eelf_k1om.c	FUNCTION_23	IF_8
0x4003052	            0x741a	                            je 0x400306e	      1841	eelf_k1om.c	FUNCTION_23	IF_8
0x4003054	        0x4d896010	              mov qword [r8 + 0x10], r12	      2138	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_21
0x4003058	          0x4c89e1	                            mov rcx, r12	      2138	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_21
0x400305b	      0xe997feffff	                           jmp 0x4002ef7	      2138	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_21
0x4003060	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2138	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_21
0x4003065	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	      2138	eelf_k1om.c	FUNCTION_25	ELSE_13	IF_28	IF_29	CALL_21
0x4003069	          0x4c89c8	                             mov rax, r9	      1820	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_3	CALL_1
0x400306c	            0xebe1	                           jmp 0x400304f	      1820	eelf_k1om.c	FUNCTION_23	FOR_1	IF_1	IF_3	CALL_1
0x400306e	          0x4d85f6	                           test r14, r14	      1844	eelf_k1om.c	FUNCTION_23	IF_9
0x4003071	          0x4d89f4	                            mov r12, r14	      1844	eelf_k1om.c	FUNCTION_23	IF_9
0x4003074	            0x75de	                           jne 0x4003054	      1844	eelf_k1om.c	FUNCTION_23	IF_9
0x4003076	          0x4d85d2	                           test r10, r10	      1847	eelf_k1om.c	FUNCTION_23	IF_10
0x4003079	          0x4d89d4	                            mov r12, r10	      1847	eelf_k1om.c	FUNCTION_23	IF_10
0x400307c	            0x75d6	                           jne 0x4003054	      1847	eelf_k1om.c	FUNCTION_23	IF_10
0x400307e	          0x4d85ff	                           test r15, r15	      1850	eelf_k1om.c	FUNCTION_23	IF_11
0x4003081	        0x4c0f44f8	                          cmove r15, rax	      1850	eelf_k1om.c	FUNCTION_23	IF_11
0x4003085	          0x4d89fc	                            mov r12, r15	      1850	eelf_k1om.c	FUNCTION_23	IF_11
0x4003088	            0xebca	                           jmp 0x4003054	      1850	eelf_k1om.c	FUNCTION_23	IF_11
0x400308a	    0x660f1f440000	                    nop word [rax + rax]	      1850	eelf_k1om.c	FUNCTION_23	IF_11
0x4003090	        0x4183ff04	                             cmp r15d, 4	      2121	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x4003094	     0xf84c7fcffff	                            je 0x4002d61	      2121	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x400309a	        0x4183ff09	                             cmp r15d, 9	      2121	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x400309e	     0xf85cbfcffff	                           jne 0x4002d6f	      2121	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x40030a4	      0xe9b8fcffff	                           jmp 0x4002d61	      2121	eelf_k1om.c	FUNCTION_25	ELSE_11	IF_26
0x40030a9	          0x4531e4	                          xor r12d, r12d	      1797	eelf_k1om.c	FUNCTION_23
0x40030ac	            0xeba6	                           jmp 0x4003054	      1797	eelf_k1om.c	FUNCTION_23
0x40030ae	      0xbb7e010000	                          mov ebx, 0x17e	      2020	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2
0x40030b3	      0xe950f9ffff	                           jmp 0x4002a08	      2020	eelf_k1om.c	FUNCTION_25	IF_9	FOR_2
gldelf_k1om_get_script	CALL,1590:DO,1:IF,21:SWITCH,0:WHILE,0:FOR,23:ELSE,21:functions,2	118
0x4000040	    0xc70700000000	                      mov dword [rdi], 0	      2167	eelf_k1om.c	FUNCTION_27
0x4000046	     0xfb615000000	           movzx edx, byte [0x0400004d] 	      2169	eelf_k1om.c	FUNCTION_27	IF_1	CALL_1
0x400004d	          0x83e203	                              and edx, 3	      2169	eelf_k1om.c	FUNCTION_27	IF_1	CALL_1
0x4000050	          0x80fa02	                               cmp dl, 2	      2169	eelf_k1om.c	FUNCTION_27	IF_1	CALL_1
0x4000053	     0xf8467010000	                            je 0x40001c0	      2169	eelf_k1om.c	FUNCTION_27	IF_1	CALL_1
0x4000059	    0x8b3500000000	            mov esi, dword [0x0400005f] 	      2485	eelf_k1om.c	FUNCTION_27	ELSE_2	IF_3
0x400005f	      0xb800000000	                              mov eax, 0	      2486	eelf_k1om.c	FUNCTION_27	ELSE_2	IF_3
0x4000064	            0x85f6	                           test esi, esi	      2485	eelf_k1om.c	FUNCTION_27	ELSE_2	IF_3
0x4000066	     0xf844a010000	                            je 0x40001b6	      2485	eelf_k1om.c	FUNCTION_27	ELSE_2	IF_3
0x400006c	    0x8b0d00000000	            mov ecx, dword [0x04000072] 	      2715	eelf_k1om.c	FUNCTION_27	ELSE_3	IF_4
0x4000072	      0xb800000000	                              mov eax, 0	      2716	eelf_k1om.c	FUNCTION_27	ELSE_3	IF_4	FOR_4
0x4000077	            0x85c9	                           test ecx, ecx	      2715	eelf_k1om.c	FUNCTION_27	ELSE_3	IF_4
0x4000079	     0xf8437010000	                            je 0x40001b6	      2715	eelf_k1om.c	FUNCTION_27	ELSE_3	IF_4
0x400007f	    0x488b0d000000	            mov rcx, qword [0x04000086] 	      2949	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5
0x4000086	    0x48b803000020	                movabs rax, 0x4020000003	      2949	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5
0x4000090	    0x48be01000020	                movabs rsi, 0x4020000001	      2947	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	CALL_157
0x400009a	          0x4821c8	                            and rax, rcx	      2949	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5
0x400009d	          0x4839f0	                            cmp rax, rsi	      2947	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	CALL_157
0x40000a0	     0xf843a010000	                            je 0x40001e0	      2947	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	CALL_157
0x40000a6	    0x48be03000010	                movabs rsi, 0x4010000003	      3190	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6
0x40000b0	    0x48bf01000010	                movabs rdi, 0x4010000001	      3188	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6	CALL_244
0x40000ba	          0x4821ce	                            and rsi, rcx	      3190	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6
0x40000bd	          0x4839fe	                            cmp rsi, rdi	      3188	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6	CALL_244
0x40000c0	     0xf846a010000	                            je 0x4000230	      3188	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6	CALL_244
0x40000c6	    0x48bf03000000	                movabs rdi, 0x4000000003	      3666	eelf_k1om.c	FUNCTION_27	ELSE_7	IF_8
0x40000d0	    0x49b801000000	                 movabs r8, 0x4000000001	      3665	eelf_k1om.c	FUNCTION_27	ELSE_7	IF_8	CALL_411
0x40000da	          0x4821cf	                            and rdi, rcx	      3666	eelf_k1om.c	FUNCTION_27	ELSE_7	IF_8
0x40000dd	          0x4c39c7	                             cmp rdi, r8	      3665	eelf_k1om.c	FUNCTION_27	ELSE_7	IF_8	CALL_411
0x40000e0	     0xf842a010000	                            je 0x4000210	      3665	eelf_k1om.c	FUNCTION_27	ELSE_7	IF_8	CALL_411
0x40000e6	    0x448b05000000	            mov r8d, dword [0x040000ed] 	      3901	eelf_k1om.c	FUNCTION_27	ELSE_8	IF_9
0x40000ed	    0x4181e0030000	                     and r8d, 0x20000003	      3901	eelf_k1om.c	FUNCTION_27	ELSE_8	IF_9
0x40000f4	    0x4181f8010000	                     cmp r8d, 0x20000001	      3900	eelf_k1om.c	FUNCTION_27	ELSE_8	IF_9	CALL_491
0x40000fb	     0xf841f010000	                            je 0x4000220	      3900	eelf_k1om.c	FUNCTION_27	ELSE_8	IF_9	CALL_491
0x4000101	          0x80fa01	                               cmp dl, 1	      4138	eelf_k1om.c	FUNCTION_27	ELSE_9	IF_10	CALL_579
0x4000104	     0xf8456010000	                            je 0x4000260	      4138	eelf_k1om.c	FUNCTION_27	ELSE_9	IF_10	CALL_579
0x400010a	    0x49b903000020	                 movabs r9, 0x4020000003	      4370	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	CALL_659
0x4000114	          0x4c39c8	                             cmp rax, r9	      4370	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	CALL_659
0x4000117	     0xf842b010000	                            je 0x4000248	      4370	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	CALL_659
0x400011d	    0x48b803000010	                movabs rax, 0x4010000003	      4601	eelf_k1om.c	FUNCTION_27	ELSE_11	IF_12	CALL_735
0x4000127	          0x4839c6	                            cmp rsi, rax	      4601	eelf_k1om.c	FUNCTION_27	ELSE_11	IF_12	CALL_735
0x400012a	     0xf843c010000	                            je 0x400026c	      4601	eelf_k1om.c	FUNCTION_27	ELSE_11	IF_12	CALL_735
0x4000130	    0x48b803000000	                movabs rax, 0x4000000003	      5058	eelf_k1om.c	FUNCTION_27	ELSE_13	IF_14	CALL_880
0x400013a	          0x4839c7	                            cmp rdi, rax	      5058	eelf_k1om.c	FUNCTION_27	ELSE_13	IF_14	CALL_880
0x400013d	     0xf84bd000000	                            je 0x4000200	      5058	eelf_k1om.c	FUNCTION_27	ELSE_13	IF_14	CALL_880
0x4000143	    0x4181f8030000	                     cmp r8d, 0x20000003	      5283	eelf_k1om.c	FUNCTION_27	ELSE_14	IF_15	CALL_949
0x400014a	     0xf8416010000	                            je 0x4000266	      5283	eelf_k1om.c	FUNCTION_27	ELSE_14	IF_15	CALL_949
0x4000150	          0x80fa03	                               cmp dl, 3	      5511	eelf_k1om.c	FUNCTION_27	ELSE_15	IF_16	CALL_1026
0x4000153	     0xf843c010000	                            je 0x4000295	      5511	eelf_k1om.c	FUNCTION_27	ELSE_15	IF_16	CALL_1026
0x4000159	    0x48b800000020	                movabs rax, 0x4020000000	      5733	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17
0x4000163	          0x4889ca	                            mov rdx, rcx	      5733	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17
0x4000166	          0x4821c2	                            and rdx, rax	      5733	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17
0x4000169	          0x4839c2	                            cmp rdx, rax	      5733	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17
0x400016c	     0xf840d010000	                            je 0x400027f	      5733	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17
0x4000172	    0x48b800000010	                movabs rax, 0x4010000000	      5973	eelf_k1om.c	FUNCTION_27	ELSE_17	IF_18
0x400017c	          0x4821c1	                            and rcx, rax	      5973	eelf_k1om.c	FUNCTION_27	ELSE_17	IF_18
0x400017f	          0x4839c1	                            cmp rcx, rax	      5973	eelf_k1om.c	FUNCTION_27	ELSE_17	IF_18
0x4000182	            0x7424	                            je 0x40001a8	      5973	eelf_k1om.c	FUNCTION_27	ELSE_17	IF_18
0x4000184	    0xf60500000000	           test byte [0x0400018b], 0x40 	      6448	eelf_k1om.c	FUNCTION_27	ELSE_19	IF_20
0x400018b	      0xb800000000	                              mov eax, 0	      6449	eelf_k1om.c	FUNCTION_27	ELSE_19	IF_20	FOR_21
0x4000190	            0x7524	                           jne 0x40001b6	      6448	eelf_k1om.c	FUNCTION_27	ELSE_19	IF_20
0x4000192	    0xf60500000000	           test byte [0x04000199], 0x20 	      6920	eelf_k1om.c	FUNCTION_27	ELSE_21	FOR_23
0x4000199	      0xba00000000	                              mov edx, 0	      6920	eelf_k1om.c	FUNCTION_27	ELSE_21	FOR_23
0x400019e	      0xb800000000	                              mov eax, 0	      6920	eelf_k1om.c	FUNCTION_27	ELSE_21	FOR_23
0x40001a3	        0x480f44c2	                          cmove rax, rdx	      6920	eelf_k1om.c	FUNCTION_27	ELSE_21	FOR_23
0x40001a7	              0xc3	                                     ret	      6920	eelf_k1om.c	FUNCTION_27	ELSE_21	FOR_23
0x40001a8	    0xf60500000000	               test byte [0x040001af], 8	      5975	eelf_k1om.c	FUNCTION_27	ELSE_17	IF_18
0x40001af	      0xb800000000	                              mov eax, 0	      5976	eelf_k1om.c	FUNCTION_27	ELSE_17	IF_18	FOR_19
0x40001b4	            0x74ce	                            je 0x4000184	      5975	eelf_k1om.c	FUNCTION_27	ELSE_17	IF_18
0x40001b6	            0xf3c3	                                     ret	      7151	eelf_k1om.c	FUNCTION_27
0x40001b8	     0xf1f84000000	                   nop dword [rax + rax]	      7151	eelf_k1om.c	FUNCTION_27
0x40001c0	    0x8b3d00000000	            mov edi, dword [0x040001c6] 	      2329	eelf_k1om.c	FUNCTION_27	ELSE_1	IF_2	FOR_2
0x40001c6	      0xba00000000	                              mov edx, 0	      2329	eelf_k1om.c	FUNCTION_27	ELSE_1	IF_2	FOR_2
0x40001cb	      0xb800000000	                              mov eax, 0	      2329	eelf_k1om.c	FUNCTION_27	ELSE_1	IF_2	FOR_2
0x40001d0	            0x85ff	                           test edi, edi	      2329	eelf_k1om.c	FUNCTION_27	ELSE_1	IF_2	FOR_2
0x40001d2	        0x480f44c2	                          cmove rax, rdx	      2329	eelf_k1om.c	FUNCTION_27	ELSE_1	IF_2	FOR_2
0x40001d6	              0xc3	                                     ret	      2329	eelf_k1om.c	FUNCTION_27	ELSE_1	IF_2	FOR_2
0x40001d7	    0x660f1f840000	                    nop word [rax + rax]	      2329	eelf_k1om.c	FUNCTION_27	ELSE_1	IF_2	FOR_2
0x40001e0	    0xf60500000000	               test byte [0x040001e7], 8	      2951	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	FOR_5
0x40001e7	      0xba00000000	                              mov edx, 0	      2951	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	FOR_5
0x40001ec	      0xb800000000	                              mov eax, 0	      2951	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	FOR_5
0x40001f1	        0x480f45c2	                         cmovne rax, rdx	      2951	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	FOR_5
0x40001f5	              0xc3	                                     ret	      2951	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	FOR_5
0x40001f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2951	eelf_k1om.c	FUNCTION_27	ELSE_4	IF_5	FOR_5
0x4000200	      0xb800000000	                              mov eax, 0	      5060	eelf_k1om.c	FUNCTION_27	ELSE_13	IF_14	FOR_14
0x4000205	              0xc3	                                     ret	      5060	eelf_k1om.c	FUNCTION_27	ELSE_13	IF_14	FOR_14
0x4000206	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5060	eelf_k1om.c	FUNCTION_27	ELSE_13	IF_14	FOR_14
0x4000210	      0xb800000000	                              mov eax, 0	      3667	eelf_k1om.c	FUNCTION_27	ELSE_7	IF_8	FOR_8
0x4000215	              0xc3	                                     ret	      3667	eelf_k1om.c	FUNCTION_27	ELSE_7	IF_8	FOR_8
0x4000216	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3667	eelf_k1om.c	FUNCTION_27	ELSE_7	IF_8	FOR_8
0x4000220	      0xb800000000	                              mov eax, 0	      3902	eelf_k1om.c	FUNCTION_27	ELSE_8	IF_9	FOR_9
0x4000225	              0xc3	                                     ret	      3902	eelf_k1om.c	FUNCTION_27	ELSE_8	IF_9	FOR_9
0x4000226	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3902	eelf_k1om.c	FUNCTION_27	ELSE_8	IF_9	FOR_9
0x4000230	    0xf60500000000	               test byte [0x04000237], 8	      3191	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6
0x4000237	     0xf8489feffff	                            je 0x40000c6	      3191	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6
0x400023d	      0xb800000000	                              mov eax, 0	      3192	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6	FOR_6
0x4000242	              0xc3	                                     ret	      3192	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6	FOR_6
0x4000243	       0xf1f440000	                   nop dword [rax + rax]	      3192	eelf_k1om.c	FUNCTION_27	ELSE_5	IF_6	FOR_6
0x4000248	    0xf60500000000	               test byte [0x0400024f], 8	      4374	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	FOR_11
0x400024f	      0xba00000000	                              mov edx, 0	      4374	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	FOR_11
0x4000254	      0xb800000000	                              mov eax, 0	      4374	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	FOR_11
0x4000259	        0x480f45c2	                         cmovne rax, rdx	      4374	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	FOR_11
0x400025d	              0xc3	                                     ret	      4374	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	FOR_11
0x400025e	            0x6690	                                     nop	      4374	eelf_k1om.c	FUNCTION_27	ELSE_10	IF_11	FOR_11
0x4000260	      0xb800000000	                              mov eax, 0	      4139	eelf_k1om.c	FUNCTION_27	ELSE_9	IF_10	FOR_10
0x4000265	              0xc3	                                     ret	      4139	eelf_k1om.c	FUNCTION_27	ELSE_9	IF_10	FOR_10
0x4000266	      0xb800000000	                              mov eax, 0	      5285	eelf_k1om.c	FUNCTION_27	ELSE_14	IF_15	FOR_15
0x400026b	              0xc3	                                     ret	      5285	eelf_k1om.c	FUNCTION_27	ELSE_14	IF_15	FOR_15
0x400026c	    0xf60500000000	               test byte [0x04000273], 8	      4604	eelf_k1om.c	FUNCTION_27	ELSE_11	IF_12
0x4000273	     0xf84b7feffff	                            je 0x4000130	      4604	eelf_k1om.c	FUNCTION_27	ELSE_11	IF_12
0x4000279	      0xb800000000	                              mov eax, 0	      4605	eelf_k1om.c	FUNCTION_27	ELSE_11	IF_12	FOR_12
0x400027e	              0xc3	                                     ret	      4605	eelf_k1om.c	FUNCTION_27	ELSE_11	IF_12	FOR_12
0x400027f	    0xf60500000000	               test byte [0x04000286], 8	      5736	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17	FOR_18
0x4000286	      0xba00000000	                              mov edx, 0	      5736	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17	FOR_18
0x400028b	      0xb800000000	                              mov eax, 0	      5736	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17	FOR_18
0x4000290	        0x480f45c2	                         cmovne rax, rdx	      5736	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17	FOR_18
0x4000294	              0xc3	                                     ret	      5736	eelf_k1om.c	FUNCTION_27	ELSE_16	IF_17	FOR_18
0x4000295	      0xb800000000	                              mov eax, 0	      5512	eelf_k1om.c	FUNCTION_27	ELSE_15	IF_16	FOR_16
0x400029a	              0xc3	                                     ret	      5512	eelf_k1om.c	FUNCTION_27	ELSE_15	IF_16	FOR_16
gldelf_k1om_before_allocation	CALL,22:DO,1:IF,13:SWITCH,0:WHILE,0:FOR,1:ELSE,0:functions,1	264
0x40012c0	            0x4157	                                push r15	      1537	eelf_k1om.c	FUNCTION_21
0x40012c2	            0x4156	                                push r14	      1537	eelf_k1om.c	FUNCTION_21
0x40012c4	            0x4155	                                push r13	      1537	eelf_k1om.c	FUNCTION_21
0x40012c6	            0x4154	                                push r12	      1537	eelf_k1om.c	FUNCTION_21
0x40012c8	          0x4531e4	                          xor r12d, r12d	      1537	eelf_k1om.c	FUNCTION_21
0x40012cb	              0x55	                                push rbp	      1537	eelf_k1om.c	FUNCTION_21
0x40012cc	              0x53	                                push rbx	      1537	eelf_k1om.c	FUNCTION_21
0x40012cd	        0x4883ec68	                           sub rsp, 0x68	      1537	eelf_k1om.c	FUNCTION_21
0x40012d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1537	eelf_k1om.c	FUNCTION_21
0x40012da	      0x4889442458	             mov qword [rsp + 0x58], rax	      1537	eelf_k1om.c	FUNCTION_21
0x40012df	            0x31c0	                            xor eax, eax	      1537	eelf_k1om.c	FUNCTION_21
0x40012e1	    0x488b05000000	            mov rax, qword [0x040012e8] 	      1549	eelf_k1om.c	FUNCTION_21	IF_1	CALL_1
0x40012e8	        0x83784001	               cmp dword [rax + 0x40], 1	      1549	eelf_k1om.c	FUNCTION_21	IF_1	CALL_1
0x40012ec	     0xf84fe020000	                            je 0x40015f0	      1549	eelf_k1om.c	FUNCTION_21	IF_1	CALL_1
0x40012f2	    0x4c8b35000000	            mov r14, qword [0x040012f9] 	      1595	eelf_k1om.c	FUNCTION_21
0x40012f9	          0x4d85f6	                           test r14, r14	      1596	eelf_k1om.c	FUNCTION_21	IF_5
0x40012fc	     0xf844e030000	                            je 0x4001650	      1596	eelf_k1om.c	FUNCTION_21	IF_5
0x4001302	    0x488b1d000000	            mov rbx, qword [0x04001309] 	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x4001309	          0x4885db	                           test rbx, rbx	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x400130c	            0x751a	                           jne 0x4001328	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x400130e	      0xe9ad000000	                           jmp 0x40013c0	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x4001313	       0xf1f440000	                   nop dword [rax + rax]	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x4001318	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x400131f	          0x4885db	                           test rbx, rbx	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x4001322	     0xf8498000000	                            je 0x40013c0	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x4001328	        0x488b4308	                mov rax, qword [rbx + 8]	      1600	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6
0x400132c	        0x83780805	                  cmp dword [rax + 8], 5	      1600	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6
0x4001330	            0x75e6	                           jne 0x4001318	      1600	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6
0x4001332	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      1602	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	CALL_11
0x4001339	    0x488bb8180300	           mov rdi, qword [rax + 0x318] 	      1602	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	CALL_11
0x4001340	          0x4885ff	                           test rdi, rdi	      1606	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4001343	            0x74d3	                            je 0x4001318	      1606	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4001345	          0x803f00	                       cmp byte [rdi], 0	      1606	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4001348	            0x74ce	                            je 0x4001318	      1606	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400134a	      0xe800000000	                          call 0x400134f	      1608	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	CALL_12
0x400134f	          0x4889c5	                            mov rbp, rax	      1608	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	CALL_12
0x4001352	            0xeb0d	                           jmp 0x4001361	      1608	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	CALL_12
0x4001354	         0xf1f4000	                         nop dword [rax]	      1608	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	CALL_12
0x4001358	        0x4883c001	                              add rax, 1	      1625	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400135c	          0x4889c5	                            mov rbp, rax	      1625	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x400135f	            0x74b7	                            je 0x4001318	      1625	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4001361	     0xfbe35000000	           movsx esi, byte [0x04001368] 	      1612	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_13
0x4001368	          0x4889ef	                            mov rdi, rbp	      1612	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_13
0x400136b	      0xe800000000	                          call 0x4001370	      1612	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_13
0x4001370	          0x4885c0	                           test rax, rax	      1614	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	IF_8
0x4001373	            0x7423	                            je 0x4001398	      1614	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	IF_8
0x4001375	          0xc60000	                       mov byte [rax], 0	      1616	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	IF_8
0x4001378	        0x807d0000	                       cmp byte [rbp], 0	      1620	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	IF_9
0x400137c	            0x74da	                            je 0x4001358	      1620	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	IF_9
0x400137e	          0x4889ee	                            mov rsi, rbp	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x4001381	      0xbf00000000	                              mov edi, 0	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x4001386	        0x48890424	                    mov qword [rsp], rax	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x400138a	      0xe821f0ffff	call sym.gldelf_k1om_append_to_separated_string	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x400138f	        0x488b0424	                    mov rax, qword [rsp]	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x4001393	            0xebc3	                           jmp 0x4001358	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x4001395	           0xf1f00	                         nop dword [rax]	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x4001398	        0x807d0000	                       cmp byte [rbp], 0	      1620	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	IF_9
0x400139c	     0xf8476ffffff	                            je 0x4001318	      1620	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	IF_9
0x40013a2	          0x4889ee	                            mov rsi, rbp	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x40013a5	      0xbf00000000	                              mov edi, 0	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x40013aa	      0xe801f0ffff	call sym.gldelf_k1om_append_to_separated_string	      1621	eelf_k1om.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1	CALL_14
0x40013af	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x40013b6	          0x4885db	                           test rbx, rbx	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x40013b9	     0xf8569ffffff	                           jne 0x4001328	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x40013bf	              0x90	                                     nop	      1599	eelf_k1om.c	FUNCTION_21	FOR_1
0x40013c0	        0x4883ec08	                              sub rsp, 8	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013c4	    0x4c8b0d000000	              mov r9, qword [0x040013cb]	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013cb	    0x4c8b05000000	              mov r8, qword [0x040013d2]	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013d2	      0x488d442420	                   lea rax, [rsp + 0x20]	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013d7	    0x488b0d000000	            mov rcx, qword [0x040013de] 	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013de	    0x488b35000000	            mov rsi, qword [0x040013e5] 	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013e5	    0x488b3d000000	            mov rdi, qword [0x040013ec] 	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013ec	          0x4c89f2	                            mov rdx, r14	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013ef	              0x50	                                push rax	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013f0	      0x6800000000	                                  push 0	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013f5	    0xff3500000000	                 push qword [0x040013fb]	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x40013fb	      0xe800000000	                          call 0x4001400	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x4001400	        0x4883c420	                           add rsp, 0x20	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x4001404	            0x85c0	                           test eax, eax	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x4001406	     0xf84c4010000	                            je 0x40015d0	      1629	eelf_k1om.c	FUNCTION_21	IF_10	CALL_15
0x400140c	    0x488b3d000000	            mov rdi, qword [0x04001413] 	      1638	eelf_k1om.c	FUNCTION_21	IF_11
0x4001413	          0x4885ff	                           test rdi, rdi	      1638	eelf_k1om.c	FUNCTION_21	IF_11
0x4001416	            0x741e	                            je 0x4001436	      1638	eelf_k1om.c	FUNCTION_21	IF_11
0x4001418	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1639	eelf_k1om.c	FUNCTION_21	IF_11
0x400141d	          0x4885db	                           test rbx, rbx	      1639	eelf_k1om.c	FUNCTION_21	IF_11
0x4001420	            0x7414	                            je 0x4001436	      1639	eelf_k1om.c	FUNCTION_21	IF_11
0x4001422	    0x4889bbb00000	             mov qword [rbx + 0xb0], rdi	      1641	eelf_k1om.c	FUNCTION_21	IF_11
0x4001429	      0xe800000000	                          call 0x400142e	      1642	eelf_k1om.c	FUNCTION_21	IF_11	CALL_18
0x400142e	        0x4883c001	                              add rax, 1	      1642	eelf_k1om.c	FUNCTION_21	IF_11	CALL_18
0x4001432	        0x48894338	             mov qword [rbx + 0x38], rax	      1642	eelf_k1om.c	FUNCTION_21	IF_11	CALL_18
0x4001436	    0x488b1d000000	            mov rbx, qword [0x0400143d] 	      1651	eelf_k1om.c	FUNCTION_21
0x400143d	          0x4885db	                           test rbx, rbx	      1651	eelf_k1om.c	FUNCTION_21
0x4001440	            0x751b	                           jne 0x400145d	      1651	eelf_k1om.c	FUNCTION_21
0x4001442	      0xe9c9000000	                           jmp 0x4001510	      1651	eelf_k1om.c	FUNCTION_21
0x4001447	    0x660f1f840000	                    nop word [rax + rax]	      1651	eelf_k1om.c	FUNCTION_21
0x4001450	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      1651	eelf_k1om.c	FUNCTION_21
0x4001454	          0x4885db	                           test rbx, rbx	      1651	eelf_k1om.c	FUNCTION_21
0x4001457	     0xf84b3000000	                            je 0x4001510	      1651	eelf_k1om.c	FUNCTION_21
0x400145d	        0xf6434810	           test byte [rbx + 0x48], 0x10 	      1657	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_1
0x4001461	            0x75ed	                           jne 0x4001450	      1657	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_1
0x4001463	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1660	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_1
0x4001467	      0xbe00000000	                              mov esi, 0	      1660	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_1
0x400146c	      0xe800000000	                          call 0x4001471	      1660	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_1
0x4001471	          0x4885c0	                           test rax, rax	      1661	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_2
0x4001474	          0x4989c5	                            mov r13, rax	      1660	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_1
0x4001477	            0x74d7	                            je 0x4001450	      1661	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_2
0x4001479	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      1664	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x400147d	        0x498d7e01	                      lea rdi, [r14 + 1]	      1665	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_2
0x4001481	      0xe800000000	                          call 0x4001486	      1665	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_2
0x4001486	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1666	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_3
0x400148a	            0x31c9	                            xor ecx, ecx	      1666	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_3
0x400148c	          0x4d89f0	                             mov r8, r14	      1666	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_3
0x400148f	          0x4889c2	                            mov rdx, rax	      1666	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_3
0x4001492	          0x4c89ee	                            mov rsi, r13	      1666	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_3
0x4001495	          0x4889c5	                            mov rbp, rax	      1665	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_2
0x4001498	      0xe800000000	                          call 0x400149d	      1666	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_3
0x400149d	            0x85c0	                           test eax, eax	      1666	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_3
0x400149f	     0xf84db000000	                            je 0x4001580	      1666	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_3
0x40014a5	    0x488b05000000	            mov rax, qword [0x040014ac] 	      1671	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014ac	          0x4531c9	                            xor r9d, r9d	      1671	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014af	          0x4531c0	                            xor r8d, r8d	      1671	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014b2	            0x31d2	                            xor edx, edx	      1671	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014b4	    0x42c644350000	                 mov byte [rbp + r14], 0	      1670	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014ba	          0x4889ee	                            mov rsi, rbp	      1671	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014bd	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1671	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014c1	      0xbf00000000	                              mov edi, 0	      1671	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014c6	          0xff5028	                 call qword [rax + 0x28]	      1671	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014c9	          0x4889ef	                            mov rdi, rbp	      1674	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_6
0x40014cc	      0xe800000000	                          call 0x40014d1	      1674	eelf_k1om.c	FUNCTION_21	FUNCTION_1	CALL_6
0x40014d1	        0x498b4568	            mov rax, qword [r13 + 0x68] 	      1681	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014d5	          0x4885c0	                           test rax, rax	      1681	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014d8	            0x7414	                            je 0x40014ee	      1681	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014da	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1682	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014de	        0x498b4d38	            mov rcx, qword [r13 + 0x38] 	      1682	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014e2	          0x4839ca	                            cmp rdx, rcx	      1682	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014e5	            0x7207	                            jb 0x40014ee	      1682	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014e7	          0x4829ca	                            sub rdx, rcx	      1683	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014ea	        0x48895040	             mov qword [rax + 0x40], rdx	      1683	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_4
0x40014ee	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      1651	eelf_k1om.c	FUNCTION_21
0x40014f2	    0x41814d200080	         or dword [r13 + 0x20], 0x208000	      1689	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x40014fa	    0x49c745380000	               mov qword [r13 + 0x38], 0	      1685	eelf_k1om.c	FUNCTION_21	FUNCTION_1
0x4001502	          0x4885db	                           test rbx, rbx	      1651	eelf_k1om.c	FUNCTION_21
0x4001505	     0xf8552ffffff	                           jne 0x400145d	      1651	eelf_k1om.c	FUNCTION_21
0x400150b	       0xf1f440000	                   nop dword [rax + rax]	      1651	eelf_k1om.c	FUNCTION_21
0x4001510	      0xe800000000	                          call 0x4001515	      1693	eelf_k1om.c	FUNCTION_21	CALL_19
0x4001515	    0x488b3d000000	            mov rdi, qword [0x0400151c] 	      1695	eelf_k1om.c	FUNCTION_21	IF_12	CALL_20
0x400151c	      0xbe00000000	                              mov esi, 0	      1695	eelf_k1om.c	FUNCTION_21	IF_12	CALL_20
0x4001521	      0xe800000000	                          call 0x4001526	      1695	eelf_k1om.c	FUNCTION_21	IF_12	CALL_20
0x4001526	            0x85c0	                           test eax, eax	      1695	eelf_k1om.c	FUNCTION_21	IF_12	CALL_20
0x4001528	     0xf8482000000	                            je 0x40015b0	      1695	eelf_k1om.c	FUNCTION_21	IF_12	CALL_20
0x400152e	          0x4d85e4	                           test r12, r12	      1698	eelf_k1om.c	FUNCTION_21	IF_13
0x4001531	            0x7428	                            je 0x400155b	      1698	eelf_k1om.c	FUNCTION_21	IF_13
0x4001533	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1702	eelf_k1om.c	FUNCTION_21	IF_13
0x4001538	      0x4188442418	               mov byte [r12 + 0x18], al	      1702	eelf_k1om.c	FUNCTION_21	IF_13
0x400153d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1703	eelf_k1om.c	FUNCTION_21	IF_13
0x4001542	      0x4989442420	             mov qword [r12 + 0x20], rax	      1703	eelf_k1om.c	FUNCTION_21	IF_13
0x4001547	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1703	eelf_k1om.c	FUNCTION_21	IF_13
0x400154c	      0x4989442428	             mov qword [r12 + 0x28], rax	      1703	eelf_k1om.c	FUNCTION_21	IF_13
0x4001551	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1703	eelf_k1om.c	FUNCTION_21	IF_13
0x4001556	      0x4989442430	             mov qword [r12 + 0x30], rax	      1703	eelf_k1om.c	FUNCTION_21	IF_13
0x400155b	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1705	eelf_k1om.c	FUNCTION_21
0x4001560	    0x644833042528	                xor rax, qword fs:[0x28]	      1705	eelf_k1om.c	FUNCTION_21
0x4001569	     0xf859f010000	                           jne 0x400170e	      1705	eelf_k1om.c	FUNCTION_21
0x400156f	        0x4883c468	                           add rsp, 0x68	      1705	eelf_k1om.c	FUNCTION_21
0x4001573	              0x5b	                                 pop rbx	      1705	eelf_k1om.c	FUNCTION_21
0x4001574	              0x5d	                                 pop rbp	      1705	eelf_k1om.c	FUNCTION_21
0x4001575	            0x415c	                                 pop r12	      1705	eelf_k1om.c	FUNCTION_21
0x4001577	            0x415d	                                 pop r13	      1705	eelf_k1om.c	FUNCTION_21
0x4001579	            0x415e	                                 pop r14	      1705	eelf_k1om.c	FUNCTION_21
0x400157b	            0x415f	                                 pop r15	      1705	eelf_k1om.c	FUNCTION_21
0x400157d	              0xc3	                                     ret	      1705	eelf_k1om.c	FUNCTION_21
0x400157e	            0x6690	                                     nop	      1705	eelf_k1om.c	FUNCTION_21
0x4001580	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x4001584	            0x31ff	                            xor edi, edi	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x4001586	      0xba05000000	                              mov edx, 5	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x400158b	      0xbe00000000	                              mov esi, 0	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x4001590	      0xe800000000	                          call 0x4001595	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x4001595	          0x4c89fe	                            mov rsi, r15	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x4001598	          0x4889c7	                            mov rdi, rax	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x400159b	            0x31c0	                            xor eax, eax	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x400159d	      0xe800000000	                          call 0x40015a2	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x40015a2	      0xe9fefeffff	                           jmp 0x40014a5	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x40015a7	    0x660f1f840000	                    nop word [rax + rax]	      1668	eelf_k1om.c	FUNCTION_21	FUNCTION_1	IF_3	CALL_5
0x40015b0	            0x31ff	                            xor edi, edi	      1696	eelf_k1om.c	FUNCTION_21	CALL_22
0x40015b2	      0xba05000000	                              mov edx, 5	      1696	eelf_k1om.c	FUNCTION_21	CALL_22
0x40015b7	      0xbe00000000	                              mov esi, 0	      1696	eelf_k1om.c	FUNCTION_21	CALL_22
0x40015bc	      0xe800000000	                          call 0x40015c1	      1696	eelf_k1om.c	FUNCTION_21	CALL_22
0x40015c1	          0x4889c7	                            mov rdi, rax	      1696	eelf_k1om.c	FUNCTION_21	CALL_22
0x40015c4	            0x31c0	                            xor eax, eax	      1696	eelf_k1om.c	FUNCTION_21	CALL_22
0x40015c6	      0xe800000000	                          call 0x40015cb	      1696	eelf_k1om.c	FUNCTION_21	CALL_22
0x40015cb	      0xe95effffff	                           jmp 0x400152e	      1696	eelf_k1om.c	FUNCTION_21	CALL_22
0x40015d0	            0x31ff	                            xor edi, edi	      1634	eelf_k1om.c	FUNCTION_21	CALL_17
0x40015d2	      0xba05000000	                              mov edx, 5	      1634	eelf_k1om.c	FUNCTION_21	CALL_17
0x40015d7	      0xbe00000000	                              mov esi, 0	      1634	eelf_k1om.c	FUNCTION_21	CALL_17
0x40015dc	      0xe800000000	                          call 0x40015e1	      1634	eelf_k1om.c	FUNCTION_21	CALL_17
0x40015e1	          0x4889c7	                            mov rdi, rax	      1634	eelf_k1om.c	FUNCTION_21	CALL_17
0x40015e4	            0x31c0	                            xor eax, eax	      1634	eelf_k1om.c	FUNCTION_21	CALL_17
0x40015e6	      0xe800000000	                          call 0x40015eb	      1634	eelf_k1om.c	FUNCTION_21	CALL_17
0x40015eb	      0xe91cfeffff	                           jmp 0x400140c	      1634	eelf_k1om.c	FUNCTION_21	CALL_17
0x40015f0	    0x488b3d000000	            mov rdi, qword [0x040015f7] 	      1551	eelf_k1om.c	FUNCTION_21	IF_1	CALL_2
0x40015f7	      0xbe00000000	                              mov esi, 0	      1551	eelf_k1om.c	FUNCTION_21	IF_1	CALL_2
0x40015fc	      0xe800000000	                          call 0x4001601	      1551	eelf_k1om.c	FUNCTION_21	IF_1	CALL_2
0x4001601	     0xfb605000000	           movzx eax, byte [0x04001608] 	      1555	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	CALL_3
0x4001608	          0x83e003	                              and eax, 3	      1555	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	CALL_3
0x400160b	            0x3c02	                               cmp al, 2	      1555	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	CALL_3
0x400160d	            0x742f	                            je 0x400163e	      1555	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	CALL_3
0x400160f	    0x488b3d000000	            mov rdi, qword [0x04001616] 	      1558	eelf_k1om.c	FUNCTION_21	IF_1	IF_2
0x4001616	            0x31c9	                            xor ecx, ecx	      1558	eelf_k1om.c	FUNCTION_21	IF_1	IF_2
0x4001618	            0x31d2	                            xor edx, edx	      1558	eelf_k1om.c	FUNCTION_21	IF_1	IF_2
0x400161a	    0x41b801000000	                              mov r8d, 1	      1558	eelf_k1om.c	FUNCTION_21	IF_1	IF_2
0x4001620	      0xbe00000000	                              mov esi, 0	      1558	eelf_k1om.c	FUNCTION_21	IF_1	IF_2
0x4001625	      0xe800000000	                          call 0x400162a	      1558	eelf_k1om.c	FUNCTION_21	IF_1	IF_2
0x400162a	          0x4885c0	                           test rax, rax	      1563	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400162d	          0x4989c4	                            mov r12, rax	      1558	eelf_k1om.c	FUNCTION_21	IF_1	IF_2
0x4001630	            0x740c	                            je 0x400163e	      1563	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001632	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1564	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001636	            0x3c02	                               cmp al, 2	      1564	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001638	            0x7628	                           jbe 0x4001662	      1564	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400163a	            0x3c05	                               cmp al, 5	      1564	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400163c	            0x7424	                            je 0x4001662	      1564	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400163e	          0x4531e4	                          xor r12d, r12d	      1541	eelf_k1om.c	FUNCTION_21
0x4001641	      0xbf00000000	                              mov edi, 0	      1590	eelf_k1om.c	FUNCTION_21	IF_1	CALL_9
0x4001646	      0xe800000000	                          call 0x400164b	      1590	eelf_k1om.c	FUNCTION_21	IF_1	CALL_9
0x400164b	      0xe9a2fcffff	                           jmp 0x40012f2	      1590	eelf_k1om.c	FUNCTION_21	IF_1	CALL_9
0x4001650	      0xbf00000000	                              mov edi, 0	      1597	eelf_k1om.c	FUNCTION_21	CALL_10
0x4001655	      0xe800000000	                          call 0x400165a	      1597	eelf_k1om.c	FUNCTION_21	CALL_10
0x400165a	          0x4989c6	                            mov r14, rax	      1597	eelf_k1om.c	FUNCTION_21	CALL_10
0x400165d	      0xe9a0fcffff	                           jmp 0x4001302	      1597	eelf_k1om.c	FUNCTION_21	CALL_10
0x4001662	    0x488b05000000	            mov rax, qword [0x04001669] 	      1570	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	CALL_6
0x4001669	      0xba01000000	                              mov edx, 1	      1571	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400166e	          0x4c89e6	                            mov rsi, r12	      1571	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001671	      0xbf00000000	                              mov edi, 0	      1571	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001676	        0x488b4008	                mov rax, qword [rax + 8]	      1570	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	CALL_6
0x400167a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1571	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001681	    0xff90b8010000	                call qword [rax + 0x1b8]	      1571	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001687	    0x410fb6442461	           movzx eax, byte [r12 + 0x61] 	      1572	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	IF_4	CALL_7
0x400168d	            0x89c2	                            mov edx, eax	      1572	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	IF_4	CALL_7
0x400168f	          0x83e203	                              and edx, 3	      1572	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	IF_4	CALL_7
0x4001692	          0x80fa01	                               cmp dl, 1	      1572	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	IF_4	CALL_7
0x4001695	            0x740b	                            je 0x40016a2	      1572	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	IF_4	CALL_7
0x4001697	          0x83e0fc	                     and eax, 0xfffffffc	      1573	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	CALL_8
0x400169a	          0x83c802	                               or eax, 2	      1573	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	CALL_8
0x400169d	      0x4188442461	               mov byte [r12 + 0x61], al	      1573	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3	CALL_8
0x40016a2	        0x498b0424	                    mov rax, qword [r12]	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016a6	      0x4889442420	             mov qword [rsp + 0x20], rax	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016ab	      0x498b442408	                mov rax, qword [r12 + 8]	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016b0	      0x4889442428	             mov qword [rsp + 0x28], rax	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016b5	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016ba	      0x4889442430	             mov qword [rsp + 0x30], rax	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016bf	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016c4	      0x4889442438	             mov qword [rsp + 0x38], rax	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016c9	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016ce	      0x4889442440	             mov qword [rsp + 0x40], rax	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016d3	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016d8	    0x49c744242800	               mov qword [r12 + 0x28], 0	      1582	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016e1	      0x4889442448	             mov qword [rsp + 0x48], rax	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016e6	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016eb	    0x49c744243000	               mov qword [r12 + 0x30], 0	      1583	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016f4	      0x4889442450	             mov qword [rsp + 0x50], rax	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016f9	    0x410fb6442418	           movzx eax, byte [r12 + 0x18] 	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40016ff	    0x41c644241803	                mov byte [r12 + 0x18], 3	      1581	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001705	        0x8844240f	                mov byte [rsp + 0xf], al	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4001709	      0xe933ffffff	                           jmp 0x4001641	      1580	eelf_k1om.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400170e	      0xe800000000	                          call 0x4001713	      1705	eelf_k1om.c	FUNCTION_21
gldelf_k1om_find_exp_assignment	CALL,11:DO,0:IF,2:SWITCH,1:WHILE,0:FOR,0:ELSE,0:functions,0	57
0x4001720	              0x55	                                push rbp	      1424	eelf_k1om.c	FUNCTION_18
0x4001721	              0x53	                                push rbx	      1424	eelf_k1om.c	FUNCTION_18
0x4001722	          0x4889fb	                            mov rbx, rdi	      1424	eelf_k1om.c	FUNCTION_18
0x4001725	        0x4883ec08	                              sub rsp, 8	      1424	eelf_k1om.c	FUNCTION_18
0x4001729	     0xf1f80000000	                         nop dword [rax]	      1424	eelf_k1om.c	FUNCTION_18
0x4001730	        0x837b1006	               cmp dword [rbx + 0x10], 6	      1427	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x4001734	            0x7764	                            ja 0x400179a	      1427	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x4001736	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1427	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x4001739	    0xff24c5000000	                       jmp qword [rax*8]	      1427	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x4001740	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
0x4001744	            0x31c9	                            xor ecx, ecx	      1425	eelf_k1om.c	FUNCTION_18
0x4001746	          0x803a2e	                    cmp byte [rdx], 0x2e	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
0x4001749	     0xf84a3000000	                            je 0x40017f2	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
0x400174f	        0x448b4328	            mov r8d, dword [rbx + 0x28] 	      1443	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_2
0x4001753	    0x488b3d000000	            mov rdi, qword [0x0400175a] 	      1443	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_2
0x400175a	      0xbe00000000	                              mov esi, 0	      1443	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_2
0x400175f	      0xe800000000	                          call 0x4001764	      1443	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_2
0x4001764	            0x85c0	                           test eax, eax	      1443	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_2
0x4001766	            0x7569	                           jne 0x40017d1	      1443	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_2
0x4001768	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x400176c	            0x31ff	                            xor edi, edi	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x400176e	      0xba05000000	                              mov edx, 5	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x4001773	      0xbe00000000	                              mov esi, 0	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x4001778	      0xe800000000	                          call 0x400177d	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x400177d	          0x4889ee	                            mov rsi, rbp	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x4001780	          0x4889c7	                            mov rdi, rax	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x4001783	            0x31c0	                            xor eax, eax	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x4001785	      0xe800000000	                          call 0x400178a	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x400178a	            0xeb45	                           jmp 0x40017d1	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x400178c	         0xf1f4000	                         nop dword [rax]	      1447	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	IF_2	CALL_4
0x4001790	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      1465	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_11
0x4001794	        0x837b1006	               cmp dword [rbx + 0x10], 6	      1427	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x4001798	            0x769c	                           jbe 0x4001736	      1427	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x400179a	        0x4883c408	                              add rsp, 8	      1471	eelf_k1om.c	FUNCTION_18
0x400179e	              0x5b	                                 pop rbx	      1471	eelf_k1om.c	FUNCTION_18
0x400179f	              0x5d	                                 pop rbp	      1471	eelf_k1om.c	FUNCTION_18
0x40017a0	              0xc3	                                     ret	      1471	eelf_k1om.c	FUNCTION_18
0x40017a1	     0xf1f80000000	                         nop dword [rax]	      1471	eelf_k1om.c	FUNCTION_18
0x40017a8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1459	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_8
0x40017ac	      0xe86fffffff	call sym.gldelf_k1om_find_exp_assignment	      1459	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_8
0x40017b1	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1460	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_9
0x40017b5	      0xe866ffffff	call sym.gldelf_k1om_find_exp_assignment	      1460	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_9
0x40017ba	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      1461	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_10
0x40017be	      0xe96dffffff	                           jmp 0x4001730	      1462	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x40017c3	       0xf1f440000	                   nop dword [rax + rax]	      1462	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x40017c8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1454	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_6
0x40017cc	      0xe84fffffff	call sym.gldelf_k1om_find_exp_assignment	      1454	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_6
0x40017d1	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1455	eelf_k1om.c	FUNCTION_18	SWITCH_1	CALL_7
0x40017d5	      0xe956ffffff	                           jmp 0x4001730	      1456	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x40017da	    0x660f1f440000	                    nop word [rax + rax]	      1456	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x40017e0	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
0x40017e4	      0xb901000000	                              mov ecx, 1	      1431	eelf_k1om.c	FUNCTION_18	SWITCH_1
0x40017e9	          0x803a2e	                    cmp byte [rdx], 0x2e	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
0x40017ec	     0xf855dffffff	                           jne 0x400174f	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
0x40017f2	        0x807a0100	                   cmp byte [rdx + 1], 0	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
0x40017f6	            0x74d9	                            je 0x40017d1	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
0x40017f8	      0xe952ffffff	                           jmp 0x400174f	      1441	eelf_k1om.c	FUNCTION_18	SWITCH_1	IF_1	CALL_1
gldelf_k1om_add_options	CALL,4:DO,0:IF,0:SWITCH,0:WHILE,0:FOR,0:ELSE,0:functions,0	40
0x4001090	            0x4155	                                push r13	      7175	eelf_k1om.c	FUNCTION_28
0x4001092	            0x4154	                                push r12	      7175	eelf_k1om.c	FUNCTION_28
0x4001094	          0x4989f5	                            mov r13, rsi	      7175	eelf_k1om.c	FUNCTION_28
0x4001097	              0x55	                                push rbp	      7175	eelf_k1om.c	FUNCTION_28
0x4001098	              0x53	                                push rbx	      7175	eelf_k1om.c	FUNCTION_28
0x4001099	          0x4863ef	                         movsxd rbp, edi	      7198	eelf_k1om.c	FUNCTION_28	CALL_1
0x400109c	        0x488d7505	                      lea rsi, [rbp + 5]	      7198	eelf_k1om.c	FUNCTION_28	CALL_1
0x40010a0	          0x4989cc	                            mov r12, rcx	      7175	eelf_k1om.c	FUNCTION_28
0x40010a3	          0x4863da	                         movsxd rbx, edx	      7175	eelf_k1om.c	FUNCTION_28
0x40010a6	        0x4883ec08	                              sub rsp, 8	      7175	eelf_k1om.c	FUNCTION_28
0x40010aa	        0x498b7d00	                    mov rdi, qword [r13]	      7198	eelf_k1om.c	FUNCTION_28	CALL_1
0x40010ae	        0x4883c30e	                            add rbx, 0xe	      7201	eelf_k1om.c	FUNCTION_28	CALL_3
0x40010b2	        0x48c1e305	                              shl rbx, 5	      7201	eelf_k1om.c	FUNCTION_28	CALL_3
0x40010b6	      0xe800000000	                          call 0x40010bb	      7198	eelf_k1om.c	FUNCTION_28	CALL_1
0x40010bb	        0x49894500	                    mov qword [r13], rax	      7198	eelf_k1om.c	FUNCTION_28	CALL_1
0x40010bf	    0xc704287a3a50	      mov dword [rax + rbp], 0x3a503a7a 	        53	string3.h	FUNCTION_52	CALL_3
0x40010c6	          0x4889de	                            mov rsi, rbx	      7201	eelf_k1om.c	FUNCTION_28	CALL_3
0x40010c9	      0xc644280400	             mov byte [rax + rbp + 4], 0	        53	string3.h	FUNCTION_52	CALL_3
0x40010ce	        0x498b3c24	                    mov rdi, qword [r12]	      7201	eelf_k1om.c	FUNCTION_28	CALL_3
0x40010d2	      0xe800000000	                          call 0x40010d7	      7201	eelf_k1om.c	FUNCTION_28	CALL_3
0x40010d7	        0x49890424	                    mov qword [r12], rax	      7200	eelf_k1om.c	FUNCTION_28
0x40010db	    0x488d8c1840fe	            lea rcx, [rax + rbx - 0x1c0]	        53	string3.h	FUNCTION_52	CALL_3
0x40010e3	    0x488b05000000	            mov rax, qword [0x040010ea] 	        53	string3.h	FUNCTION_52	CALL_3
0x40010ea	      0xbe00000000	                              mov esi, 0	        53	string3.h	FUNCTION_52	CALL_3
0x40010ef	        0x488d7908	                      lea rdi, [rcx + 8]	        53	string3.h	FUNCTION_52	CALL_3
0x40010f3	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_52	CALL_3
0x40010f6	    0x488b05000000	            mov rax, qword [0x040010fd] 	        53	string3.h	FUNCTION_52	CALL_3
0x40010fd	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_52	CALL_3
0x4001101	    0x488981b80100	            mov qword [rcx + 0x1b8], rax	        53	string3.h	FUNCTION_52	CALL_3
0x4001108	          0x4829f9	                            sub rcx, rdi	        53	string3.h	FUNCTION_52	CALL_3
0x400110b	          0x4829ce	                            sub rsi, rcx	        53	string3.h	FUNCTION_52	CALL_3
0x400110e	    0x81c1c0010000	                          add ecx, 0x1c0	        53	string3.h	FUNCTION_52	CALL_3
0x4001114	          0xc1e903	                              shr ecx, 3	        53	string3.h	FUNCTION_52	CALL_3
0x4001117	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_52	CALL_3
0x400111a	        0x4883c408	                              add rsp, 8	      7203	eelf_k1om.c	FUNCTION_28
0x400111e	              0x5b	                                 pop rbx	      7203	eelf_k1om.c	FUNCTION_28
0x400111f	              0x5d	                                 pop rbp	      7203	eelf_k1om.c	FUNCTION_28
0x4001120	            0x415c	                                 pop r12	      7203	eelf_k1om.c	FUNCTION_28
0x4001122	            0x415d	                                 pop r13	      7203	eelf_k1om.c	FUNCTION_28
0x4001124	              0xc3	                                     ret	      7203	eelf_k1om.c	FUNCTION_28
