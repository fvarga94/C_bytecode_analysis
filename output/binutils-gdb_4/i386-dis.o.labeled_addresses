BND_Fixup	CALL,0:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	5
0x40001c0	    0xf60500000000	               test byte [0x040001c7], 2	     16954	i386-dis.c	FUNCTION_69	IF_1
0x40001c7	            0x7412	                            je 0x40001db	     16954	i386-dis.c	FUNCTION_69	IF_1
0x40001c9	    0x486305000000	         movsxd rax, dword [0x040001d0] 	     16955	i386-dis.c	FUNCTION_69	IF_1
0x40001d0	    0xc70485000000	                mov dword [rax*4], 0x4f2	     16955	i386-dis.c	FUNCTION_69	IF_1
0x40001db	            0xf3c3	                                     ret	     16955	i386-dis.c	FUNCTION_69	IF_1
OP_Mwaitx	CALL,3:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	25
0x40019c0	    0x803d00000000	                cmp byte [0x040019c7], 0	     16849	i386-dis.c	FUNCTION_64	IF_1
0x40019c7	              0x53	                                push rbx	     16847	i386-dis.c	FUNCTION_64
0x40019c8	            0x7558	                           jne 0x4001a22	     16849	i386-dis.c	FUNCTION_64	IF_1
0x40019ca	    0x833d00000000	               cmp dword [0x040019d1], 2	     16852	i386-dis.c	FUNCTION_64	IF_1
0x40019d1	    0x488b1d000000	            mov rbx, qword [0x040019d8] 	     16852	i386-dis.c	FUNCTION_64	IF_1
0x40019d8	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_107	CALL_3
0x40019dd	    0x480f451d0000	          cmovne rbx, qword [0x040019e5]	     16852	i386-dis.c	FUNCTION_64	IF_1
0x40019e5	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x40019ea	          0x488b33	                    mov rsi, qword [rbx]	       110	string3.h	FUNCTION_107	CALL_3
0x40019ed	      0xe800000000	                          call 0x40019f2	       110	string3.h	FUNCTION_107	CALL_3
0x40019f2	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x40019f6	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_107	CALL_3
0x40019fb	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001a00	      0xe800000000	                          call 0x4001a05	       110	string3.h	FUNCTION_107	CALL_3
0x4001a05	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       110	string3.h	FUNCTION_107	CALL_3
0x4001a09	      0xba2c010000	                          mov edx, 0x12c	       110	string3.h	FUNCTION_107	CALL_3
0x4001a0e	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001a13	      0xe800000000	                          call 0x4001a18	       110	string3.h	FUNCTION_107	CALL_3
0x4001a18	    0xc70500000000	               mov dword [0x04001a22], 1	     16856	i386-dis.c	FUNCTION_64	IF_1
0x4001a22	    0x803d00000000	                cmp byte [0x04001a29], 0	     16859	i386-dis.c	FUNCTION_64
0x4001a29	            0x740a	                            je 0x4001a35	     16859	i386-dis.c	FUNCTION_64
0x4001a2b	    0x488305000000	               add qword [0x04001a33], 1	     16860	i386-dis.c	FUNCTION_64
0x4001a33	              0x5b	                                 pop rbx	     16861	i386-dis.c	FUNCTION_64
0x4001a34	              0xc3	                                     ret	     16861	i386-dis.c	FUNCTION_64
0x4001a35	      0xe800000000	                          call 0x4001a3a	     16859	i386-dis.c	FUNCTION_64
OP_EX_Vex	CALL,2:IF,2:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	111
0x40082f0	        0x4883ec08	                              sub rsp, 8	     17571	i386-dis.c	FUNCTION_89
0x40082f4	    0x833d00000000	               cmp dword [0x040082fb], 3	     17572	i386-dis.c	FUNCTION_89	IF_1
0x40082fb	            0x743b	                            je 0x4008338	     17572	i386-dis.c	FUNCTION_89	IF_1
0x40082fd	    0x448b0d000000	            mov r9d, dword [0x04008304] 	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4008304	          0x4585c9	                           test r9d, r9d	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4008307	     0xf850b010000	                           jne 0x4008418	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x400830d	    0x803d00000000	                cmp byte [0x04008314], 0	     16566	i386-dis.c	FUNCTION_55
0x4008314	    0xc60500000000	                mov byte [0x0400831b], 0	     17576	i386-dis.c	FUNCTION_89	IF_1
0x400831b	     0xf84ef000000	                            je 0x4008410	     16566	i386-dis.c	FUNCTION_55
0x4008321	    0x488305000000	               add qword [0x04008329], 1	     16567	i386-dis.c	FUNCTION_55
0x4008329	        0x4883c408	                              add rsp, 8	     17579	i386-dis.c	FUNCTION_89
0x400832d	      0xe9bee9ffff	                     jmp sym.OP_E_memory	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x4008332	    0x660f1f440000	                    nop word [rax + rax]	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x4008338	    0x803d00000000	                cmp byte [0x0400833f], 0	     16566	i386-dis.c	FUNCTION_55
0x400833f	     0xf84cb000000	                            je 0x4008410	     16566	i386-dis.c	FUNCTION_55
0x4008345	    0x8b1500000000	            mov edx, dword [0x0400834b] 	     16576	i386-dis.c	FUNCTION_55
0x400834b	    0x488305000000	               add qword [0x04008353], 1	     16567	i386-dis.c	FUNCTION_55
0x4008353	    0x8b0500000000	            mov eax, dword [0x04008359] 	     16575	i386-dis.c	FUNCTION_55
0x4008359	          0xf6c201	                              test dl, 1	     16576	i386-dis.c	FUNCTION_55
0x400835c	            0x740a	                            je 0x4008368	     16576	i386-dis.c	FUNCTION_55
0x400835e	    0x830d00000000	            or dword [0x04008365], 0x41 	     16576	i386-dis.c	FUNCTION_55
0x4008365	          0x83c008	                              add eax, 8	     16578	i386-dis.c	FUNCTION_55	IF_2
0x4008368	    0x8b0d00000000	            mov ecx, dword [0x0400836e] 	     16579	i386-dis.c	FUNCTION_55	IF_3
0x400836e	            0x85c9	                           test ecx, ecx	     16579	i386-dis.c	FUNCTION_55	IF_3
0x4008370	            0x740f	                            je 0x4008381	     16579	i386-dis.c	FUNCTION_55	IF_3
0x4008372	          0x83e202	                              and edx, 2	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008375	            0x740a	                            je 0x4008381	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008377	    0x830d00000000	            or dword [0x0400837e], 0x42 	     16581	i386-dis.c	FUNCTION_55	IF_3
0x400837e	          0x83c010	                           add eax, 0x10	     16583	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x4008381	          0x83e604	                              and esi, 4	     16586	i386-dis.c	FUNCTION_55	IF_5
0x4008384	            0x742e	                            je 0x40083b4	     16586	i386-dis.c	FUNCTION_55	IF_5
0x4008386	          0x83ff3f	                           cmp edi, 0x3f	     16588	i386-dis.c	FUNCTION_55	IF_5
0x4008389	            0x7729	                            ja 0x40083b4	     16588	i386-dis.c	FUNCTION_55	IF_5
0x400838b	    0x48ba000a0100	          movabs rdx, 0xa000000000010a00	     16587	i386-dis.c	FUNCTION_55	IF_5
0x4008395	        0x480fa3fa	                             bt rdx, rdi	     16587	i386-dis.c	FUNCTION_55	IF_5
0x4008399	            0x7319	                           jae 0x40083b4	     16587	i386-dis.c	FUNCTION_55	IF_5
0x400839b	    0x488b15000000	            mov rdx, qword [0x040083a2] 	     13898	i386-dis.c	FUNCTION_11
0x40083a2	          0xc6022e	                    mov byte [rdx], 0x2e	     13898	i386-dis.c	FUNCTION_11
0x40083a5	        0xc6420173	                mov byte [rdx + 1], 0x73	     13899	i386-dis.c	FUNCTION_11
0x40083a9	        0x4883c202	                              add rdx, 2	     13900	i386-dis.c	FUNCTION_11
0x40083ad	    0x488915000000	            mov qword [0x040083b4], rdx 	     13900	i386-dis.c	FUNCTION_11
0x40083b4	    0x803d00000000	                cmp byte [0x040083bb], 0	     16594	i386-dis.c	FUNCTION_55	IF_6
0x40083bb	     0xf84ce000000	                            je 0x400848f	     16594	i386-dis.c	FUNCTION_55	IF_6
0x40083c1	          0x83ff1a	                           cmp edi, 0x1a	     16595	i386-dis.c	FUNCTION_55	IF_6
0x40083c4	     0xf86b6000000	                           jbe 0x4008480	     16595	i386-dis.c	FUNCTION_55	IF_6
0x40083ca	          0x8d57eb	                   lea edx, [rdi - 0x15]	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40083cd	          0x83fa03	                              cmp edx, 3	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40083d0	     0xf86b9000000	                           jbe 0x400848f	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40083d6	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40083d9	          0x83fa01	                              cmp edx, 1	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40083dc	     0xf87de000000	                            ja 0x40084c0	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40083e2	    0x660f1f440000	                    nop word [rax + rax]	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40083e8	    0x8b1500000000	            mov edx, dword [0x040083ee] 	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40083ee	    0x81fa00010000	                          cmp edx, 0x100	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40083f4	            0x7462	                            je 0x4008458	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40083f6	    0x81fa00020000	                          cmp edx, 0x200	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40083fc	     0xf84ae000000	                            je 0x40084b0	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008402	          0x83c280	             add edx, 0xffffffffffffff80	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008405	            0x7451	                            je 0x4008458	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008407	    0x660f1f840000	                    nop word [rax + rax]	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008410	      0xe800000000	                          call 0x4008415	     16640	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2	CALL_4
0x4008415	           0xf1f00	                         nop dword [rax]	     16640	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2	CALL_4
0x4008418	    0x488b05000000	            mov rax, qword [0x0400841f] 	     16917	i386-dis.c	FUNCTION_67
0x400841f	    0x41b829000000	                           mov r8d, 0x29	     16917	i386-dis.c	FUNCTION_67
0x4008425	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4008429	    0x488905000000	            mov qword [0x04008430], rax 	     16917	i386-dis.c	FUNCTION_67
0x4008430	    0x488b05000000	            mov rax, qword [0x04008437] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008437	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400843d	      0x6644894004	                 mov word [rax + 4], r8w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008442	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008446	    0x488905000000	            mov qword [0x0400844d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400844d	      0xe9bbfeffff	                           jmp 0x400830d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008452	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008458	    0x488b15000000	            mov rdx, qword [0x0400845f] 	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400845f	            0x4898	                                    cdqe	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x4008461	    0x488b3d000000	            mov rdi, qword [0x04008468] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008468	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400846c	      0xe800000000	                          call 0x4008471	       117	string3.h	FUNCTION_108	CALL_3
0x4008471	    0x488905000000	            mov qword [0x04008478], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008478	        0x4883c408	                              add rsp, 8	     17579	i386-dis.c	FUNCTION_89
0x400847c	              0xc3	                                     ret	     17579	i386-dis.c	FUNCTION_89
0x400847d	           0xf1f00	                         nop dword [rax]	     17579	i386-dis.c	FUNCTION_89
0x4008480	      0xba00001206	                      mov edx, 0x6120000	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4008485	        0x480fa3fa	                             bt rdx, rdi	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4008489	     0xf833bffffff	                           jae 0x40083ca	     16596	i386-dis.c	FUNCTION_55	IF_6
0x400848f	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008492	          0x83fa01	                              cmp edx, 1	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008495	     0xf864dffffff	                           jbe 0x40083e8	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x400849b	          0x83ff1b	                           cmp edi, 0x1b	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x400849e	    0x488b15000000	            mov rdx, qword [0x040084a5] 	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x40084a5	    0x480f45150000	          cmovne rdx, qword [0x040084ad]	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x40084ad	            0xebb0	                           jmp 0x400845f	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x40084af	              0x90	                                     nop	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x40084b0	    0x488b15000000	            mov rdx, qword [0x040084b7] 	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40084b7	            0xeba6	                           jmp 0x400845f	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40084b9	     0xf1f80000000	                         nop dword [rax]	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40084c0	          0x8d57e5	                   lea edx, [rdi - 0x1b]	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40084c3	          0x83fa26	                           cmp edx, 0x26	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40084c6	            0x7628	                           jbe 0x40084f0	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40084c8	    0x8b1500000000	            mov edx, dword [0x040084ce] 	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40084ce	    0x81fa00010000	                          cmp edx, 0x100	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40084d4	            0x74da	                            je 0x40084b0	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40084d6	    0x81fa00020000	                          cmp edx, 0x200	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40084dc	     0xf8520ffffff	                           jne 0x4008402	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40084e2	    0x488b15000000	            mov rdx, qword [0x040084e9] 	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40084e9	      0xe971ffffff	                           jmp 0x400845f	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40084ee	            0x6690	                                     nop	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40084f0	    0x48b901000000	                movabs rcx, 0x5e00000001	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40084fa	        0x480fa3d1	                             bt rcx, rdx	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40084fe	            0x729b	                            jb 0x400849b	     16606	i386-dis.c	FUNCTION_55	IF_6
0x4008500	            0xebc6	                           jmp 0x40084c8	     16606	i386-dis.c	FUNCTION_55	IF_6
OP_LWP_E	CALL,1:IF,2:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	15
0x4002030	        0x4883ec08	                              sub rsp, 8	     17882	i386-dis.c	FUNCTION_98
0x4002034	    0x8b0500000000	            mov eax, dword [0x0400203a] 	     17884	i386-dis.c	FUNCTION_98
0x400203a	    0xf60500000000	               test byte [0x04002041], 8	     17887	i386-dis.c	FUNCTION_98	IF_1
0x4002041	    0x488b15000000	            mov rdx, qword [0x04002048] 	     17887	i386-dis.c	FUNCTION_98	IF_1
0x4002048	    0x480f44150000	           cmove rdx, qword [0x04002050]	     17887	i386-dis.c	FUNCTION_98	IF_1
0x4002050	    0x488b3d000000	            mov rdi, qword [0x04002057] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002057	            0x89c1	                            mov ecx, eax	     17892	i386-dis.c	FUNCTION_98	IF_2
0x4002059	          0x83e107	                              and ecx, 7	     17892	i386-dis.c	FUNCTION_98	IF_2
0x400205c	    0x833d00000000	               cmp dword [0x04002063], 2	     17892	i386-dis.c	FUNCTION_98	IF_2
0x4002063	        0x480f45c1	                         cmovne rax, rcx	     17892	i386-dis.c	FUNCTION_98	IF_2
0x4002067	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400206b	      0xe800000000	                          call 0x4002070	       117	string3.h	FUNCTION_108	CALL_3
0x4002070	    0x488905000000	            mov qword [0x04002077], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002077	        0x4883c408	                              add rsp, 8	     17894	i386-dis.c	FUNCTION_98
0x400207b	              0xc3	                                     ret	     17894	i386-dis.c	FUNCTION_98
REP_Fixup	CALL,4:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,1:functions,0:DO,0	93
0x4003930	              0x55	                                push rbp	     16923	i386-dis.c	FUNCTION_68
0x4003931	              0x53	                                push rbx	     16923	i386-dis.c	FUNCTION_68
0x4003932	            0x89f5	                            mov ebp, esi	     16923	i386-dis.c	FUNCTION_68
0x4003934	        0x4883ec08	                              sub rsp, 8	     16923	i386-dis.c	FUNCTION_68
0x4003938	    0x8b1d00000000	            mov ebx, dword [0x0400393e] 	     16926	i386-dis.c	FUNCTION_68	IF_1
0x400393e	          0xf6c301	                              test bl, 1	     16926	i386-dis.c	FUNCTION_68	IF_1
0x4003941	            0x7412	                            je 0x4003955	     16926	i386-dis.c	FUNCTION_68	IF_1
0x4003943	    0x486305000000	         movsxd rax, dword [0x0400394a] 	     16927	i386-dis.c	FUNCTION_68	IF_1
0x400394a	    0xc70485000000	                mov dword [rax*4], 0x1f3	     16927	i386-dis.c	FUNCTION_68	IF_1
0x4003955	          0x8d47b4	                   lea eax, [rdi - 0x4c]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4003958	          0x83f821	                           cmp eax, 0x21	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x400395b	     0xf87ef000000	                            ja 0x4003a50	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4003961	    0xff24c5000000	                       jmp qword [rax*8]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4003968	     0xf1f84000000	                   nop dword [rax + rax]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4003970	        0x4883c408	                              add rsp, 8	     16946	i386-dis.c	FUNCTION_68
0x4003974	            0x89ee	                            mov esi, ebp	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4003976	      0xbf53000000	                           mov edi, 0x53	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x400397b	              0x5b	                                 pop rbx	     16946	i386-dis.c	FUNCTION_68
0x400397c	              0x5d	                                 pop rbp	     16946	i386-dis.c	FUNCTION_68
0x400397d	      0xe97efeffff	                        jmp sym.OP_ESreg	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4003982	    0x660f1f440000	                    nop word [rax + rax]	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4003988	    0x803d00000000	                cmp byte [0x0400398f], 0	     16327	i386-dis.c	FUNCTION_45	IF_1
0x400398f	            0x742f	                            je 0x40039c0	     16327	i386-dis.c	FUNCTION_45	IF_1
0x4003991	    0x488b05000000	            mov rax, qword [0x04003998] 	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003998	         0xfb640ff	               movzx eax, byte [rax - 1]	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x400399c	            0x3ca5	                            cmp al, 0xa5	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x400399e	     0xf84fc000000	                            je 0x4003aa0	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x40039a4	     0xf87ee000000	                            ja 0x4003a98	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x40039aa	            0x3c6f	                            cmp al, 0x6f	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x40039ac	     0xf85ce000000	                           jne 0x4003a80	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x40039b2	            0x89ee	                            mov esi, ebp	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x40039b4	      0xbf2b000000	                           mov edi, 0x2b	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x40039b9	      0xe8c2e6ffff	             call sym.intel_operand_size	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x40039be	            0x6690	                                     nop	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x40039c0	    0x8b0500000000	            mov eax, dword [0x040039c6] 	     16345	i386-dis.c	FUNCTION_45	IF_2
0x40039c6	            0x85c0	                           test eax, eax	     16345	i386-dis.c	FUNCTION_45	IF_2
0x40039c8	            0x750a	                           jne 0x40039d4	     16345	i386-dis.c	FUNCTION_45	IF_2
0x40039ca	    0xc70500000000	           mov dword [0x040039d4], 0x20 	     16346	i386-dis.c	FUNCTION_45	IF_2
0x40039d4	      0xe8f7e2ffff	                     call sym.append_seg	     16347	i386-dis.c	FUNCTION_45	CALL_4
0x40039d9	     0xfb615000000	           movzx edx, byte [0x040039e0] 	     16282	i386-dis.c	FUNCTION_43
0x40039e0	    0x488b05000000	            mov rax, qword [0x040039e7] 	     16282	i386-dis.c	FUNCTION_43
0x40039e7	    0x81e300040000	                          and ebx, 0x400	     16283	i386-dis.c	FUNCTION_43
0x40039ed	     0x91d00000000	              or dword [0x040039f3], ebx	     16283	i386-dis.c	FUNCTION_43
0x40039f3	        0x488d7801	                      lea rdi, [rax + 1]	     16282	i386-dis.c	FUNCTION_43
0x40039f7	            0x8810	                      mov byte [rax], dl	     16282	i386-dis.c	FUNCTION_43
0x40039f9	    0x833d00000000	               cmp dword [0x04003a00], 2	     16284	i386-dis.c	FUNCTION_43	IF_1
0x4003a00	            0x7456	                            je 0x4003a58	     16284	i386-dis.c	FUNCTION_43	IF_1
0x4003a02	          0x83e502	                              and ebp, 2	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003a05	            0x7556	                           jne 0x4003a5d	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003a07	    0x488b05000000	            mov rax, qword [0x04003a0e] 	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4003a0e	        0x488b7030	            mov rsi, qword [rax + 0x30] 	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4003a12	      0xe800000000	                          call 0x4003a17	       117	string3.h	FUNCTION_108	CALL_3
0x4003a17	        0x488d5001	                      lea rdx, [rax + 1]	     16296	i386-dis.c	FUNCTION_43
0x4003a1b	        0xc6400100	                   mov byte [rax + 1], 0	     16297	i386-dis.c	FUNCTION_43
0x4003a1f	    0x488915000000	            mov qword [0x04003a26], rdx 	     16296	i386-dis.c	FUNCTION_43
0x4003a26	     0xfb615000000	           movzx edx, byte [0x04003a2d] 	     16296	i386-dis.c	FUNCTION_43
0x4003a2d	            0x8810	                      mov byte [rax], dl	     16296	i386-dis.c	FUNCTION_43
0x4003a2f	        0x4883c408	                              add rsp, 8	     16946	i386-dis.c	FUNCTION_68
0x4003a33	              0x5b	                                 pop rbx	     16946	i386-dis.c	FUNCTION_68
0x4003a34	              0x5d	                                 pop rbp	     16946	i386-dis.c	FUNCTION_68
0x4003a35	              0xc3	                                     ret	     16946	i386-dis.c	FUNCTION_68
0x4003a36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     16946	i386-dis.c	FUNCTION_68
0x4003a40	        0x4883c408	                              add rsp, 8	     16946	i386-dis.c	FUNCTION_68
0x4003a44	            0x89ee	                            mov esi, ebp	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4003a46	              0x5b	                                 pop rbx	     16946	i386-dis.c	FUNCTION_68
0x4003a47	              0x5d	                                 pop rbp	     16946	i386-dis.c	FUNCTION_68
0x4003a48	      0xe953f3ffff	                        jmp sym.OP_IMREG	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4003a4d	           0xf1f00	                         nop dword [rax]	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4003a50	      0xe800000000	                          call 0x4003a55	     16943	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_4
0x4003a55	           0xf1f00	                         nop dword [rax]	     16943	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_4
0x4003a58	          0x83e502	                              and ebp, 2	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4003a5b	            0x7513	                           jne 0x4003a70	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x4003a5d	    0x488b05000000	            mov rax, qword [0x04003a64] 	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003a64	        0x488b7030	            mov rsi, qword [rax + 0x30] 	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003a68	            0xeba8	                           jmp 0x4003a12	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003a6a	    0x660f1f440000	                    nop word [rax + rax]	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003a70	    0x488b05000000	            mov rax, qword [0x04003a77] 	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4003a77	        0x488b7030	            mov rsi, qword [rax + 0x30] 	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4003a7b	            0xeb95	                           jmp 0x4003a12	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4003a7d	           0xf1f00	                         nop dword [rax]	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4003a80	            0x89ee	                            mov esi, ebp	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4003a82	      0xbf01000000	                              mov edi, 1	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4003a87	      0xe8f4e5ffff	             call sym.intel_operand_size	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4003a8c	      0xe92fffffff	                           jmp 0x40039c0	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4003a91	     0xf1f80000000	                         nop dword [rax]	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4003a98	            0x3ca7	                            cmp al, 0xa7	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003a9a	            0x7404	                            je 0x4003aa0	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003a9c	            0x3cad	                            cmp al, 0xad	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003a9e	            0x75e0	                           jne 0x4003a80	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003aa0	            0x89ee	                            mov esi, ebp	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4003aa2	      0xbf04000000	                              mov edi, 4	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4003aa7	      0xe8d4e5ffff	             call sym.intel_operand_size	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4003aac	      0xe90fffffff	                           jmp 0x40039c0	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
OP_LWPCB_E	CALL,1:IF,2:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	21
0x40028e0	        0x4883ec08	                              sub rsp, 8	     17859	i386-dis.c	FUNCTION_97
0x40028e4	    0x803d00000000	                cmp byte [0x040028eb], 0	     17864	i386-dis.c	FUNCTION_97
0x40028eb	            0x7453	                            je 0x4002940	     17864	i386-dis.c	FUNCTION_97
0x40028ed	    0x8b0d00000000	            mov ecx, dword [0x040028f3] 	     17867	i386-dis.c	FUNCTION_97	IF_1
0x40028f3	    0x488305000000	               add qword [0x040028fb], 1	     17865	i386-dis.c	FUNCTION_97
0x40028fb	    0x488b15000000	            mov rdx, qword [0x04002902] 	     17868	i386-dis.c	FUNCTION_97	IF_1
0x4002902	    0x8b0500000000	            mov eax, dword [0x04002908] 	     17872	i386-dis.c	FUNCTION_97
0x4002908	          0xf6c108	                              test cl, 8	     17868	i386-dis.c	FUNCTION_97	IF_1
0x400290b	    0x480f44150000	           cmove rdx, qword [0x04002913]	     17868	i386-dis.c	FUNCTION_97	IF_1
0x4002913	          0x83e101	                              and ecx, 1	     17873	i386-dis.c	FUNCTION_97
0x4002916	            0x740a	                            je 0x4002922	     17873	i386-dis.c	FUNCTION_97
0x4002918	    0x830d00000000	            or dword [0x0400291f], 0x41 	     17873	i386-dis.c	FUNCTION_97
0x400291f	          0x83c008	                              add eax, 8	     17875	i386-dis.c	FUNCTION_97	IF_2
0x4002922	            0x4898	                                    cdqe	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x4002924	    0x488b3d000000	            mov rdi, qword [0x0400292b] 	       117	string3.h	FUNCTION_108	CALL_3
0x400292b	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400292f	      0xe800000000	                          call 0x4002934	       117	string3.h	FUNCTION_108	CALL_3
0x4002934	    0x488905000000	            mov qword [0x0400293b], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400293b	        0x4883c408	                              add rsp, 8	     17878	i386-dis.c	FUNCTION_97
0x400293f	              0xc3	                                     ret	     17878	i386-dis.c	FUNCTION_97
0x4002940	      0xe800000000	                          call 0x4002945	     17864	i386-dis.c	FUNCTION_97
OP_3DNowSuffix	CALL,2:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	73
0x4003fd0	            0x4156	                                push r14	     16781	i386-dis.c	FUNCTION_62
0x4003fd2	            0x4155	                                push r13	     16781	i386-dis.c	FUNCTION_62
0x4003fd4	            0x4154	                                push r12	     16781	i386-dis.c	FUNCTION_62
0x4003fd6	    0x4c8b25000000	            mov r12, qword [0x04003fdd] 	     16784	i386-dis.c	FUNCTION_62
0x4003fdd	              0x55	                                push rbp	     16781	i386-dis.c	FUNCTION_62
0x4003fde	              0x53	                                push rbx	     16781	i386-dis.c	FUNCTION_62
0x4003fdf	    0x488b05000000	            mov rax, qword [0x04003fe6] 	     16784	i386-dis.c	FUNCTION_62
0x4003fe6	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     16784	i386-dis.c	FUNCTION_62
0x4003feb	        0x488d5801	                      lea rbx, [rax + 1]	     16784	i386-dis.c	FUNCTION_62
0x4003fef	        0x488b7500	                    mov rsi, qword [rbp]	     16784	i386-dis.c	FUNCTION_62
0x4003ff3	          0x4839f3	                            cmp rbx, rsi	     16784	i386-dis.c	FUNCTION_62
0x4003ff6	            0x7748	                            ja 0x4004040	     16784	i386-dis.c	FUNCTION_62
0x4003ff8	           0xfb600	                   movzx eax, byte [rax]	     16789	i386-dis.c	FUNCTION_62
0x4003ffb	    0x488b3d000000	            mov rdi, qword [0x04004002] 	     16788	i386-dis.c	FUNCTION_62
0x4004002	    0x48891d000000	            mov qword [0x04004009], rbx 	     16789	i386-dis.c	FUNCTION_62
0x4004009	    0x48893d000000	            mov qword [0x04004010], rdi 	     16788	i386-dis.c	FUNCTION_62
0x4004010	    0x488b34c50000	                  mov rsi, qword [rax*8]	     16789	i386-dis.c	FUNCTION_62
0x4004018	          0x4885f6	                           test rsi, rsi	     16790	i386-dis.c	FUNCTION_62	IF_1
0x400401b	            0x7463	                            je 0x4004080	     16790	i386-dis.c	FUNCTION_62	IF_1
0x400401d	      0xe800000000	                          call 0x4004022	       117	string3.h	FUNCTION_108	CALL_3
0x4004022	    0x488905000000	            mov qword [0x04004029], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004029	              0x5b	                                 pop rbx	     16803	i386-dis.c	FUNCTION_62
0x400402a	    0x488905000000	            mov qword [0x04004031], rax 	     16802	i386-dis.c	FUNCTION_62
0x4004031	              0x5d	                                 pop rbp	     16803	i386-dis.c	FUNCTION_62
0x4004032	            0x415c	                                 pop r12	     16803	i386-dis.c	FUNCTION_62
0x4004034	            0x415d	                                 pop r13	     16803	i386-dis.c	FUNCTION_62
0x4004036	            0x415e	                                 pop r14	     16803	i386-dis.c	FUNCTION_62
0x4004038	              0xc3	                                     ret	     16803	i386-dis.c	FUNCTION_62
0x4004039	     0xf1f80000000	                         nop dword [rax]	     16803	i386-dis.c	FUNCTION_62
0x4004040	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4004044	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4004047	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400404b	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4004050	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4004053	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4004057	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x400405a	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x400405d	            0x7661	                           jbe 0x40040c0	       205	i386-dis.c	FUNCTION_1	IF_1
0x400405f	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004062	     0xf847e000000	                            je 0x40040e6	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004068	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400406c	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004071	      0xe800000000	                          call 0x4004076	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004080	    0x488b05000000	            mov rax, qword [0x04004087] 	     16917	i386-dis.c	FUNCTION_67
0x4004087	    0xc60500000000	                mov byte [0x0400408e], 0	     16798	i386-dis.c	FUNCTION_62	ELSE_1
0x400408e	    0xc60500000000	                mov byte [0x04004095], 0	     16799	i386-dis.c	FUNCTION_62	ELSE_1
0x4004095	    0xc70728626164	            mov dword [rdi], 0x64616228 	     16799	i386-dis.c	FUNCTION_62	ELSE_1
0x400409b	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x400409f	    0x488905000000	            mov qword [0x040040a6], rax 	     16917	i386-dis.c	FUNCTION_67
0x40040a6	      0xb829000000	                           mov eax, 0x29	     16917	i386-dis.c	FUNCTION_67
0x40040ab	        0x66894704	                  mov word [rdi + 4], ax	     16917	i386-dis.c	FUNCTION_67
0x40040af	        0x488d4705	                      lea rax, [rdi + 5]	       117	string3.h	FUNCTION_108	CALL_3
0x40040b3	    0x488905000000	            mov qword [0x040040ba], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40040ba	      0xe96affffff	                           jmp 0x4004029	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40040bf	              0x90	                                     nop	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40040c0	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40040c3	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x40040c6	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x40040c9	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40040ce	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40040d0	            0x7526	                           jne 0x40040f8	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40040d2	    0x488b05000000	            mov rax, qword [0x040040d9] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40040d9	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40040dd	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40040e1	      0xe912ffffff	                           jmp 0x4003ff8	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40040e6	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40040e9	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40040ec	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40040ee	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40040f3	      0xe970ffffff	                           jmp 0x4004068	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40040f8	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40040fc	      0xe95effffff	                           jmp 0x400405f	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
OP_DIR	CALL,5:IF,2:FOR,0:ELSE,2:WHILE,0:SWITCH,0:functions,0:DO,0	184
0x4005230	            0x4156	                                push r14	     16200	i386-dis.c	FUNCTION_40
0x4005232	            0x4155	                                push r13	     16200	i386-dis.c	FUNCTION_40
0x4005234	            0x4154	                                push r12	     16200	i386-dis.c	FUNCTION_40
0x4005236	              0x55	                                push rbp	     16200	i386-dis.c	FUNCTION_40
0x4005237	              0x53	                                push rbx	     16200	i386-dis.c	FUNCTION_40
0x4005238	        0x4883ec10	                           sub rsp, 0x10	     16200	i386-dis.c	FUNCTION_40
0x400523c	          0x83e601	                              and esi, 1	     16203	i386-dis.c	FUNCTION_40	IF_1
0x400523f	            0x747f	                            je 0x40052c0	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4005241	    0x4c8b25000000	            mov r12, qword [0x04005248] 	     15798	i386-dis.c	FUNCTION_29
0x4005248	    0x488b05000000	            mov rax, qword [0x0400524f] 	     15798	i386-dis.c	FUNCTION_29
0x400524f	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     15798	i386-dis.c	FUNCTION_29
0x4005254	        0x488d5804	                      lea rbx, [rax + 4]	     15798	i386-dis.c	FUNCTION_29
0x4005258	        0x488b7500	                    mov rsi, qword [rbp]	     15798	i386-dis.c	FUNCTION_29
0x400525c	          0x4839f3	                            cmp rbx, rsi	     15798	i386-dis.c	FUNCTION_29
0x400525f	     0xf875b010000	                            ja 0x40053c0	     15798	i386-dis.c	FUNCTION_29
0x4005265	      0x440fb64801	               movzx r9d, byte [rax + 1]	     15801	i386-dis.c	FUNCTION_29
0x400526a	         0xfb65002	               movzx edx, byte [rax + 2]	     15801	i386-dis.c	FUNCTION_29
0x400526e	           0xfb608	                   movzx ecx, byte [rax]	     15799	i386-dis.c	FUNCTION_29
0x4005271	    0x48891d000000	            mov qword [0x04005278], rbx 	     15802	i386-dis.c	FUNCTION_29
0x4005278	        0x48c1e210	                           shl rdx, 0x10	     15801	i386-dis.c	FUNCTION_29
0x400527c	        0x49c1e108	                               shl r9, 8	     15801	i386-dis.c	FUNCTION_29
0x4005280	          0x4909d1	                              or r9, rdx	     15801	i386-dis.c	FUNCTION_29
0x4005283	          0x4889da	                            mov rdx, rbx	     15802	i386-dis.c	FUNCTION_29
0x4005286	        0x488d5806	                      lea rbx, [rax + 6]	     15827	i386-dis.c	FUNCTION_31
0x400528a	          0x4909c9	                              or r9, rcx	     15801	i386-dis.c	FUNCTION_29
0x400528d	         0xfb64803	               movzx ecx, byte [rax + 3]	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x4005291	        0x48c1e118	                           shl rcx, 0x18	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x4005295	          0x4109c9	                             or r9d, ecx	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x4005298	          0x4839f3	                            cmp rbx, rsi	     15827	i386-dis.c	FUNCTION_31
0x400529b	     0xf877f010000	                            ja 0x4005420	     15827	i386-dis.c	FUNCTION_31
0x40052a1	      0x440fb64201	               movzx r8d, byte [rdx + 1]	     15829	i386-dis.c	FUNCTION_31
0x40052a6	           0xfb602	                   movzx eax, byte [rdx]	     15828	i386-dis.c	FUNCTION_31
0x40052a9	    0x48891d000000	            mov qword [0x040052b0], rbx 	     15829	i386-dis.c	FUNCTION_31
0x40052b0	        0x41c1e008	                              shl r8d, 8	     15829	i386-dis.c	FUNCTION_31
0x40052b4	          0x4109c0	                             or r8d, eax	     15829	i386-dis.c	FUNCTION_31
0x40052b7	            0xeb67	                           jmp 0x4005320	     15829	i386-dis.c	FUNCTION_31
0x40052b9	     0xf1f80000000	                         nop dword [rax]	     15829	i386-dis.c	FUNCTION_31
0x40052c0	    0x4c8b25000000	            mov r12, qword [0x040052c7] 	     15827	i386-dis.c	FUNCTION_31
0x40052c7	    0x488b15000000	            mov rdx, qword [0x040052ce] 	     15827	i386-dis.c	FUNCTION_31
0x40052ce	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     15827	i386-dis.c	FUNCTION_31
0x40052d3	        0x488d5a02	                      lea rbx, [rdx + 2]	     15827	i386-dis.c	FUNCTION_31
0x40052d7	        0x488b7500	                    mov rsi, qword [rbp]	     15827	i386-dis.c	FUNCTION_31
0x40052db	          0x4839f3	                            cmp rbx, rsi	     15827	i386-dis.c	FUNCTION_31
0x40052de	     0xf879c000000	                            ja 0x4005380	     15827	i386-dis.c	FUNCTION_31
0x40052e4	      0x440fb64a01	               movzx r9d, byte [rdx + 1]	     15829	i386-dis.c	FUNCTION_31
0x40052e9	           0xfb60a	                   movzx ecx, byte [rdx]	     15828	i386-dis.c	FUNCTION_31
0x40052ec	          0x4889d8	                            mov rax, rbx	     15829	i386-dis.c	FUNCTION_31
0x40052ef	    0x48891d000000	            mov qword [0x040052f6], rbx 	     15829	i386-dis.c	FUNCTION_31
0x40052f6	        0x488d5a04	                      lea rbx, [rdx + 4]	     15827	i386-dis.c	FUNCTION_31
0x40052fa	        0x41c1e108	                              shl r9d, 8	     15829	i386-dis.c	FUNCTION_31
0x40052fe	          0x4109c9	                             or r9d, ecx	     15829	i386-dis.c	FUNCTION_31
0x4005301	          0x4839f3	                            cmp rbx, rsi	     15827	i386-dis.c	FUNCTION_31
0x4005304	     0xf8776010000	                            ja 0x4005480	     15827	i386-dis.c	FUNCTION_31
0x400530a	      0x440fb64001	               movzx r8d, byte [rax + 1]	     15829	i386-dis.c	FUNCTION_31
0x400530f	           0xfb610	                   movzx edx, byte [rax]	     15828	i386-dis.c	FUNCTION_31
0x4005312	    0x48891d000000	            mov qword [0x04005319], rbx 	     15829	i386-dis.c	FUNCTION_31
0x4005319	        0x41c1e008	                              shl r8d, 8	     15829	i386-dis.c	FUNCTION_31
0x400531d	          0x4109d0	                             or r8d, edx	     15829	i386-dis.c	FUNCTION_31
0x4005320	    0x8b0500000000	            mov eax, dword [0x04005326] 	     16213	i386-dis.c	FUNCTION_40
0x4005326	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x400532b	      0x2500020000	                          and eax, 0x200	     16213	i386-dis.c	FUNCTION_40
0x4005330	     0x90500000000	              or dword [0x04005336], eax	     16213	i386-dis.c	FUNCTION_40
0x4005336	    0x803d00000000	                cmp byte [0x0400533d], 0	     16214	i386-dis.c	FUNCTION_40	IF_2
0x400533d	            0x7505	                           jne 0x4005344	     16214	i386-dis.c	FUNCTION_40	IF_2
0x400533f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005344	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005349	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400534e	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005353	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005355	      0xe800000000	                          call 0x400535a	        33	stdio2.h	FUNCTION_113	CALL_1
0x400535a	    0x488b3d000000	            mov rdi, qword [0x04005361] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005361	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4005366	      0xe800000000	                          call 0x400536b	       117	string3.h	FUNCTION_108	CALL_3
0x400536b	    0x488905000000	            mov qword [0x04005372], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005372	        0x4883c410	                           add rsp, 0x10	     16219	i386-dis.c	FUNCTION_40
0x4005376	              0x5b	                                 pop rbx	     16219	i386-dis.c	FUNCTION_40
0x4005377	              0x5d	                                 pop rbp	     16219	i386-dis.c	FUNCTION_40
0x4005378	            0x415c	                                 pop r12	     16219	i386-dis.c	FUNCTION_40
0x400537a	            0x415d	                                 pop r13	     16219	i386-dis.c	FUNCTION_40
0x400537c	            0x415e	                                 pop r14	     16219	i386-dis.c	FUNCTION_40
0x400537e	              0xc3	                                     ret	     16219	i386-dis.c	FUNCTION_40
0x400537f	              0x90	                                     nop	     16219	i386-dis.c	FUNCTION_40
0x4005380	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4005384	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4005387	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400538b	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4005390	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4005393	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4005397	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x400539a	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x400539d	     0xf8635010000	                           jbe 0x40054d8	       205	i386-dis.c	FUNCTION_1	IF_1
0x40053a3	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40053a6	     0xf8462010000	                            je 0x400550e	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40053ac	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x40053b0	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x40053b5	      0xe800000000	                          call 0x40053ba	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x40053ba	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x40053c0	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x40053c4	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x40053c7	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x40053cb	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x40053d0	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x40053d3	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x40053d7	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x40053da	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x40053dd	            0x77c4	                            ja 0x40053a3	       205	i386-dis.c	FUNCTION_1	IF_1
0x40053df	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40053e2	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x40053e5	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x40053e8	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40053ed	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40053ef	     0xf852b010000	                           jne 0x4005520	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40053f5	    0x4c8b25000000	            mov r12, qword [0x040053fc] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40053fc	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005400	    0x488b05000000	            mov rax, qword [0x04005407] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005407	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400540c	        0x488d5804	                      lea rbx, [rax + 4]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005410	        0x488b7500	                    mov rsi, qword [rbp]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005414	      0xe94cfeffff	                           jmp 0x4005265	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005419	     0xf1f80000000	                         nop dword [rax]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005420	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4005424	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4005427	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400542b	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4005430	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4005433	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4005437	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x400543a	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x400543d	     0xf8760ffffff	                            ja 0x40053a3	       205	i386-dis.c	FUNCTION_1	IF_1
0x4005443	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4005446	      0x44894c240c	              mov dword [rsp + 0xc], r9d	       206	i386-dis.c	FUNCTION_1	IF_1
0x400544b	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400544e	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4005451	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4005456	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4005458	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400545d	     0xf85bd000000	                           jne 0x4005520	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4005463	    0x488b15000000	            mov rdx, qword [0x0400546a] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400546a	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400546e	        0x488d5a02	                      lea rbx, [rdx + 2]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005472	      0xe92afeffff	                           jmp 0x40052a1	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005477	    0x660f1f840000	                    nop word [rax + rax]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005480	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4005484	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4005487	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400548b	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4005490	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4005493	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4005497	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x400549a	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x400549d	     0xf8700ffffff	                            ja 0x40053a3	       205	i386-dis.c	FUNCTION_1	IF_1
0x40054a3	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054a6	      0x44894c240c	              mov dword [rsp + 0xc], r9d	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054ab	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054ae	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054b1	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054b6	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40054b8	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40054bd	            0x7561	                           jne 0x4005520	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40054bf	    0x488b05000000	            mov rax, qword [0x040054c6] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40054c6	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40054ca	        0x488d5802	                      lea rbx, [rax + 2]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40054ce	      0xe937feffff	                           jmp 0x400530a	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40054d3	       0xf1f440000	                   nop dword [rax + rax]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40054d8	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054db	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054de	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054e1	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40054e6	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40054e8	            0x7536	                           jne 0x4005520	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40054ea	    0x4c8b25000000	            mov r12, qword [0x040054f1] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40054f1	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40054f5	    0x488b15000000	            mov rdx, qword [0x040054fc] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40054fc	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005501	        0x488d5a02	                      lea rbx, [rdx + 2]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005505	        0x488b7500	                    mov rsi, qword [rbp]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005509	      0xe9d6fdffff	                           jmp 0x40052e4	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400550e	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005511	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005514	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005516	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400551b	      0xe98cfeffff	                           jmp 0x40053ac	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005520	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005524	      0xe97afeffff	                           jmp 0x40053a3	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
OP_MS	CALL,2:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	14
0x40093d0	    0x833d00000000	               cmp dword [0x040093d7], 3	     16653	i386-dis.c	FUNCTION_56	IF_1
0x40093d7	            0x7437	                            je 0x4009410	     16653	i386-dis.c	FUNCTION_56	IF_1
0x40093d9	    0x488b05000000	            mov rax, qword [0x040093e0] 	     16917	i386-dis.c	FUNCTION_67
0x40093e0	      0xba29000000	                           mov edx, 0x29	     16917	i386-dis.c	FUNCTION_67
0x40093e5	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x40093e9	    0x488905000000	            mov qword [0x040093f0], rax 	     16917	i386-dis.c	FUNCTION_67
0x40093f0	    0x488b05000000	            mov rax, qword [0x040093f7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40093f7	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40093fd	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009401	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009405	    0x488905000000	            mov qword [0x0400940c], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400940c	              0xc3	                                     ret	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400940d	           0xf1f00	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009410	      0xe9abfeffff	                           jmp sym.OP_EM	     16654	i386-dis.c	FUNCTION_56	CALL_1
CMP_Fixup	CALL,3:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	127
0x40046e0	            0x4156	                                push r14	     16819	i386-dis.c	FUNCTION_63
0x40046e2	            0x4155	                                push r13	     16819	i386-dis.c	FUNCTION_63
0x40046e4	            0x4154	                                push r12	     16819	i386-dis.c	FUNCTION_63
0x40046e6	              0x55	                                push rbp	     16819	i386-dis.c	FUNCTION_63
0x40046e7	              0x53	                                push rbx	     16819	i386-dis.c	FUNCTION_63
0x40046e8	        0x4883ec30	                           sub rsp, 0x30	     16819	i386-dis.c	FUNCTION_63
0x40046ec	    0x4c8b25000000	            mov r12, qword [0x040046f3] 	     16822	i386-dis.c	FUNCTION_63
0x40046f3	    0x64488b042528	                mov rax, qword fs:[0x28]	     16819	i386-dis.c	FUNCTION_63
0x40046fc	      0x4889442428	             mov qword [rsp + 0x28], rax	     16819	i386-dis.c	FUNCTION_63
0x4004701	            0x31c0	                            xor eax, eax	     16819	i386-dis.c	FUNCTION_63
0x4004703	    0x488b05000000	            mov rax, qword [0x0400470a] 	     16822	i386-dis.c	FUNCTION_63
0x400470a	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     16822	i386-dis.c	FUNCTION_63
0x400470f	        0x488d5801	                      lea rbx, [rax + 1]	     16822	i386-dis.c	FUNCTION_63
0x4004713	        0x488b7500	                    mov rsi, qword [rbp]	     16822	i386-dis.c	FUNCTION_63
0x4004717	          0x4839f3	                            cmp rbx, rsi	     16822	i386-dis.c	FUNCTION_63
0x400471a	     0xf87f0000000	                            ja 0x4004810	     16822	i386-dis.c	FUNCTION_63
0x4004720	        0x440fb600	                   movzx r8d, byte [rax]	     16823	i386-dis.c	FUNCTION_63
0x4004724	    0x48891d000000	            mov qword [0x0400472b], rbx 	     16823	i386-dis.c	FUNCTION_63
0x400472b	        0x4183f807	                              cmp r8d, 7	     16824	i386-dis.c	FUNCTION_63	IF_1	CALL_1
0x400472f	            0x767f	                           jbe 0x40047b0	     16824	i386-dis.c	FUNCTION_63	IF_1	CALL_1
0x4004731	    0x833d00000000	               cmp dword [0x04004738], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004738	    0xc60500000000	            mov byte [0x0400473f], 0x24 	     16837	i386-dis.c	FUNCTION_63	ELSE_1
0x400473f	     0xf840b010000	                            je 0x4004850	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004745	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x400474a	      0xba63000000	                           mov edx, 0x63	        33	stdio2.h	FUNCTION_113	CALL_1
0x400474f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004754	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004759	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400475b	      0xe800000000	                          call 0x4004760	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004760	    0x480fbe350000	           movsx rsi, byte [0x04004768] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004768	    0x488b3d000000	            mov rdi, qword [0x0400476f] 	       117	string3.h	FUNCTION_108	CALL_3
0x400476f	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004776	      0xe800000000	                          call 0x400477b	       117	string3.h	FUNCTION_108	CALL_3
0x400477b	    0xc60500000000	                mov byte [0x04004782], 0	     16840	i386-dis.c	FUNCTION_63	ELSE_1
0x4004782	    0x488905000000	            mov qword [0x04004789], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004789	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     16842	i386-dis.c	FUNCTION_63
0x400478e	    0x644833042528	                xor rax, qword fs:[0x28]	     16842	i386-dis.c	FUNCTION_63
0x4004797	     0xf8549010000	                           jne 0x40048e6	     16842	i386-dis.c	FUNCTION_63
0x400479d	        0x4883c430	                           add rsp, 0x30	     16842	i386-dis.c	FUNCTION_63
0x40047a1	              0x5b	                                 pop rbx	     16842	i386-dis.c	FUNCTION_63
0x40047a2	              0x5d	                                 pop rbp	     16842	i386-dis.c	FUNCTION_63
0x40047a3	            0x415c	                                 pop r12	     16842	i386-dis.c	FUNCTION_63
0x40047a5	            0x415d	                                 pop r13	     16842	i386-dis.c	FUNCTION_63
0x40047a7	            0x415e	                                 pop r14	     16842	i386-dis.c	FUNCTION_63
0x40047a9	              0xc3	                                     ret	     16842	i386-dis.c	FUNCTION_63
0x40047aa	    0x660f1f440000	                    nop word [rax + rax]	     16842	i386-dis.c	FUNCTION_63
0x40047b0	    0x488b3d000000	            mov rdi, qword [0x040047b7] 	     16827	i386-dis.c	FUNCTION_63	IF_1
0x40047b7	          0x4589c0	                            mov r8d, r8d	     16831	i386-dis.c	FUNCTION_63	IF_1
0x40047ba	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x40047bd	        0x49c1e004	                               shl r8, 4	     16831	i386-dis.c	FUNCTION_63	IF_1
0x40047c1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40047c6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x40047cd	    0x498d98000000	                           lea rbx, [r8]	     16831	i386-dis.c	FUNCTION_63	IF_1
0x40047d4	    0x4d8b80000000	                      mov r8, qword [r8]	        33	stdio2.h	FUNCTION_113	CALL_1
0x40047db	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40047e0	         0xfb647fe	               movzx eax, byte [rdi - 2]	     16828	i386-dis.c	FUNCTION_63	IF_1
0x40047e4	        0x4883ef02	                              sub rdi, 2	        33	stdio2.h	FUNCTION_113	CALL_1
0x40047e8	          0x880424	                      mov byte [rsp], al	     16828	i386-dis.c	FUNCTION_63	IF_1
0x40047eb	         0xfb64701	               movzx eax, byte [rdi + 1]	     16829	i386-dis.c	FUNCTION_63	IF_1
0x40047ef	      0xc644240200	                   mov byte [rsp + 2], 0	     16830	i386-dis.c	FUNCTION_63	IF_1
0x40047f4	        0x88442401	                  mov byte [rsp + 1], al	     16829	i386-dis.c	FUNCTION_63	IF_1
0x40047f8	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40047fa	      0xe800000000	                          call 0x40047ff	        33	stdio2.h	FUNCTION_113	CALL_1
0x40047ff	          0x8b4308	                mov eax, dword [rbx + 8]	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4004802	    0x480105000000	            add qword [0x04004809], rax 	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4004809	      0xe97bffffff	                           jmp 0x4004789	     16832	i386-dis.c	FUNCTION_63	IF_1
0x400480e	            0x6690	                                     nop	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4004810	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4004814	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4004817	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400481b	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4004820	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4004823	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4004827	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x400482a	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x400482d	     0xf868d000000	                           jbe 0x40048c0	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004833	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004836	     0xf84af000000	                            je 0x40048eb	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400483c	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004840	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004845	      0xe800000000	                          call 0x400484a	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400484a	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004850	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004855	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x400485a	        0x450fb6c0	                          movzx r8d, r8b	        33	stdio2.h	FUNCTION_113	CALL_1
0x400485e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004863	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004866	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004868	    0xc60500000000	            mov byte [0x0400486f], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x400486f	    0xc60500000000	            mov byte [0x04004876], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004876	      0xe800000000	                          call 0x400487b	        33	stdio2.h	FUNCTION_113	CALL_1
0x400487b	         0xfb61424	                   movzx edx, byte [rsp]	        33	stdio2.h	FUNCTION_113	CALL_1
0x400487f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004881	      0x488d4c2401	                      lea rcx, [rsp + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004886	            0xeb14	                           jmp 0x400489c	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004888	     0xf1f84000000	                   nop dword [rax + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004890	         0xfb61401	             movzx edx, byte [rcx + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004894	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004898	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400489a	            0x7408	                            je 0x40048a4	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400489c	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400489f	          0x4863f0	                         movsxd rsi, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40048a2	            0x74ec	                            je 0x4004890	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40048a4	          0x4801e6	                            add rsi, rsp	       110	string3.h	FUNCTION_107	CALL_3
0x40048a7	      0xba61000000	                           mov edx, 0x61	       110	string3.h	FUNCTION_107	CALL_3
0x40048ac	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x40048b1	      0xe800000000	                          call 0x40048b6	       110	string3.h	FUNCTION_107	CALL_3
0x40048b6	      0xe9a5feffff	                           jmp 0x4004760	       110	string3.h	FUNCTION_107	CALL_3
0x40048bb	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_107	CALL_3
0x40048c0	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40048c3	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x40048c6	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x40048c9	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40048ce	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40048d0	            0x752b	                           jne 0x40048fd	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40048d2	    0x488b05000000	            mov rax, qword [0x040048d9] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40048d9	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40048dd	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40048e1	      0xe93afeffff	                           jmp 0x4004720	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40048e6	      0xe800000000	                          call 0x40048eb	     16842	i386-dis.c	FUNCTION_63
0x40048eb	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40048ee	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40048f1	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40048f3	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40048f8	      0xe93fffffff	                           jmp 0x400483c	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40048fd	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004901	      0xe92dffffff	                           jmp 0x4004833	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
XMM_Fixup	CALL,2:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,1:functions,0:DO,0	21
0x4002870	        0x4883ec08	                              sub rsp, 8	     17050	i386-dis.c	FUNCTION_75
0x4002874	    0x803d00000000	                cmp byte [0x0400287b], 0	     17053	i386-dis.c	FUNCTION_75	IF_1
0x400287b	            0x7423	                            je 0x40028a0	     17053	i386-dis.c	FUNCTION_75	IF_1
0x400287d	    0x8b0500000000	            mov eax, dword [0x04002883] 	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002883	      0x3d80000000	                           cmp eax, 0x80	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002888	            0x7416	                            je 0x40028a0	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x400288a	      0x3d00010000	                          cmp eax, 0x100	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x400288f	            0x753f	                           jne 0x40028d0	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002891	    0x488b05000000	            mov rax, qword [0x04002898] 	     17061	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4002898	            0xeb0d	                           jmp 0x40028a7	     17062	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x400289a	    0x660f1f440000	                    nop word [rax + rax]	     17062	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x40028a0	    0x488b05000000	            mov rax, qword [0x040028a7] 	     17068	i386-dis.c	FUNCTION_75	ELSE_1
0x40028a7	          0x4863ff	                         movsxd rdi, edi	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x40028aa	        0x488b34f8	            mov rsi, qword [rax + rdi*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40028ae	    0x488b3d000000	            mov rdi, qword [0x040028b5] 	       117	string3.h	FUNCTION_108	CALL_3
0x40028b5	      0xe800000000	                          call 0x40028ba	       117	string3.h	FUNCTION_108	CALL_3
0x40028ba	    0x488905000000	            mov qword [0x040028c1], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40028c1	        0x4883c408	                              add rsp, 8	     17070	i386-dis.c	FUNCTION_75
0x40028c5	              0xc3	                                     ret	     17070	i386-dis.c	FUNCTION_75
0x40028c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17070	i386-dis.c	FUNCTION_75
0x40028d0	      0xe800000000	                          call 0x40028d5	     17064	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1	CALL_1
OP_sI	CALL,5:IF,7:FOR,0:ELSE,4:WHILE,0:SWITCH,1:functions,0:DO,0	229
0x4005e30	            0x4157	                                push r15	     16088	i386-dis.c	FUNCTION_37
0x4005e32	            0x4156	                                push r14	     16088	i386-dis.c	FUNCTION_37
0x4005e34	            0x4155	                                push r13	     16088	i386-dis.c	FUNCTION_37
0x4005e36	            0x4154	                                push r12	     16088	i386-dis.c	FUNCTION_37
0x4005e38	              0x55	                                push rbp	     16088	i386-dis.c	FUNCTION_37
0x4005e39	              0x53	                                push rbx	     16088	i386-dis.c	FUNCTION_37
0x4005e3a	            0x89f5	                            mov ebp, esi	     16088	i386-dis.c	FUNCTION_37
0x4005e3c	            0x89fb	                            mov ebx, edi	     16088	i386-dis.c	FUNCTION_37
0x4005e3e	        0x4883ec48	                           sub rsp, 0x48	     16088	i386-dis.c	FUNCTION_37
0x4005e42	    0x64488b042528	                mov rax, qword fs:[0x28]	     16088	i386-dis.c	FUNCTION_37
0x4005e4b	      0x4889442438	             mov qword [rsp + 0x38], rax	     16088	i386-dis.c	FUNCTION_37
0x4005e50	            0x31c0	                            xor eax, eax	     16088	i386-dis.c	FUNCTION_37
0x4005e52	          0x83ff03	                              cmp edi, 3	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005e55	            0x7461	                            je 0x4005eb8	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005e57	          0x83ff04	                              cmp edi, 4	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005e5a	     0xf8408010000	                            je 0x4005f68	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005e60	          0x83ff01	                              cmp edi, 1	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005e63	            0x7453	                            je 0x4005eb8	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005e65	      0xba05000000	                              mov edx, 5	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x4005e6a	      0xbe00000000	                              mov esi, 0	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x4005e6f	      0xbf00000000	                              mov edi, 0	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x4005e74	      0xe800000000	                          call 0x4005e79	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x4005e79	    0x488b3d000000	            mov rdi, qword [0x04005e80] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005e80	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4005e83	      0xe800000000	                          call 0x4005e88	       117	string3.h	FUNCTION_108	CALL_3
0x4005e88	    0x488905000000	            mov qword [0x04005e8f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005e8f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	     16137	i386-dis.c	FUNCTION_37
0x4005e94	    0x644833042528	                xor rax, qword fs:[0x28]	     16137	i386-dis.c	FUNCTION_37
0x4005e9d	     0xf8537030000	                           jne 0x40061da	     16137	i386-dis.c	FUNCTION_37
0x4005ea3	        0x4883c448	                           add rsp, 0x48	     16137	i386-dis.c	FUNCTION_37
0x4005ea7	              0x5b	                                 pop rbx	     16137	i386-dis.c	FUNCTION_37
0x4005ea8	              0x5d	                                 pop rbp	     16137	i386-dis.c	FUNCTION_37
0x4005ea9	            0x415c	                                 pop r12	     16137	i386-dis.c	FUNCTION_37
0x4005eab	            0x415d	                                 pop r13	     16137	i386-dis.c	FUNCTION_37
0x4005ead	            0x415e	                                 pop r14	     16137	i386-dis.c	FUNCTION_37
0x4005eaf	            0x415f	                                 pop r15	     16137	i386-dis.c	FUNCTION_37
0x4005eb1	              0xc3	                                     ret	     16137	i386-dis.c	FUNCTION_37
0x4005eb2	    0x660f1f440000	                    nop word [rax + rax]	     16137	i386-dis.c	FUNCTION_37
0x4005eb8	    0x4c8b35000000	            mov r14, qword [0x04005ebf] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005ebf	    0x488b05000000	            mov rax, qword [0x04005ec6] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005ec6	        0x4d8b6e68	            mov r13, qword [r14 + 0x68] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005eca	        0x4c8d6001	                      lea r12, [rax + 1]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005ece	        0x498b7500	                    mov rsi, qword [r13]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005ed2	          0x4939f4	                            cmp r12, rsi	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005ed5	     0xf8705020000	                            ja 0x40060e0	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005edb	        0x440fb600	                   movzx r8d, byte [rax]	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005edf	    0x4c8925000000	            mov qword [0x04005ee6], r12 	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4005ee6	    0x498d9000ffff	                   lea rdx, [r8 - 0x100]	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4005eed	          0x4584c0	                           test r8b, r8b	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4005ef0	        0x4c0f48c2	                           cmovs r8, rdx	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4005ef4	          0x83fb03	                              cmp ebx, 3	     16099	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2
0x4005ef7	     0xf842b020000	                            je 0x4006128	     16099	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2
0x4005efd	    0xf60500000000	               test byte [0x04005f04], 8	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4005f04	     0xf84d6000000	                            je 0x4005fe0	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4005f0a	    0x8b0500000000	            mov eax, dword [0x04005f10] 	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4005f10	          0x83f802	                              cmp eax, 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4005f13	    0xc60500000000	            mov byte [0x04005f1a], 0x24 	     16134	i386-dis.c	FUNCTION_37
0x4005f1a	     0xf8458010000	                            je 0x4006078	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4005f20	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005f25	      0xba63000000	                           mov edx, 0x63	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005f2a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005f2f	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005f34	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005f36	      0xe800000000	                          call 0x4005f3b	        33	stdio2.h	FUNCTION_113	CALL_1
0x4005f3b	    0x480fbe350000	           movsx rsi, byte [0x04005f43] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005f43	    0x488b3d000000	            mov rdi, qword [0x04005f4a] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005f4a	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4005f51	      0xe800000000	                          call 0x4005f56	       117	string3.h	FUNCTION_108	CALL_3
0x4005f56	    0x488905000000	            mov qword [0x04005f5d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005f5d	      0xe92dffffff	                           jmp 0x4005e8f	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005f62	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005f68	          0x83e501	                              and ebp, 1	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4005f6b	            0x750d	                           jne 0x4005f7a	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4005f6d	    0xf60500000000	               test byte [0x04005f74], 8	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4005f74	     0xf84c6000000	                            je 0x4006040	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4005f7a	    0x4c8b25000000	            mov r12, qword [0x04005f81] 	     15811	i386-dis.c	FUNCTION_30
0x4005f81	    0x488b15000000	            mov rdx, qword [0x04005f88] 	     15811	i386-dis.c	FUNCTION_30
0x4005f88	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     15811	i386-dis.c	FUNCTION_30
0x4005f8d	        0x488d5a04	                      lea rbx, [rdx + 4]	     15811	i386-dis.c	FUNCTION_30
0x4005f91	        0x488b7500	                    mov rsi, qword [rbp]	     15811	i386-dis.c	FUNCTION_30
0x4005f95	          0x4839f3	                            cmp rbx, rsi	     15811	i386-dis.c	FUNCTION_30
0x4005f98	            0x7766	                            ja 0x4006000	     15811	i386-dis.c	FUNCTION_30
0x4005f9a	      0x440fb64201	               movzx r8d, byte [rdx + 1]	     15814	i386-dis.c	FUNCTION_30
0x4005f9f	         0xfb64202	               movzx eax, byte [rdx + 2]	     15814	i386-dis.c	FUNCTION_30
0x4005fa3	           0xfb60a	                   movzx ecx, byte [rdx]	     15812	i386-dis.c	FUNCTION_30
0x4005fa6	    0x48891d000000	            mov qword [0x04005fad], rbx 	     15815	i386-dis.c	FUNCTION_30
0x4005fad	        0x48c1e010	                           shl rax, 0x10	     15814	i386-dis.c	FUNCTION_30
0x4005fb1	        0x49c1e008	                               shl r8, 8	     15814	i386-dis.c	FUNCTION_30
0x4005fb5	          0x4909c0	                              or r8, rax	     15814	i386-dis.c	FUNCTION_30
0x4005fb8	          0x4c89c0	                             mov rax, r8	     15814	i386-dis.c	FUNCTION_30
0x4005fbb	      0x440fb64203	               movzx r8d, byte [rdx + 3]	     15817	i386-dis.c	FUNCTION_30
0x4005fc0	          0x4809c8	                             or rax, rcx	     15814	i386-dis.c	FUNCTION_30
0x4005fc3	        0x49c1e018	                            shl r8, 0x18	     15817	i386-dis.c	FUNCTION_30
0x4005fc7	          0x4909c0	                              or r8, rax	     15817	i386-dis.c	FUNCTION_30
0x4005fca	      0xb800000080	                     mov eax, 0x80000000	     15817	i386-dis.c	FUNCTION_30
0x4005fcf	          0x4931c0	                             xor r8, rax	     15817	i386-dis.c	FUNCTION_30
0x4005fd2	    0x4981c0000000	              add r8, 0xffffffff80000000	     15817	i386-dis.c	FUNCTION_30
0x4005fd9	      0xe92cffffff	                           jmp 0x4005f0a	     15817	i386-dis.c	FUNCTION_30
0x4005fde	            0x6690	                                     nop	     15817	i386-dis.c	FUNCTION_30
0x4005fe0	          0x83e501	                              and ebp, 1	     16115	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4005fe3	     0xf8467010000	                            je 0x4006150	     16115	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4005fe9	          0x4589c0	                            mov r8d, r8d	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4005fec	    0x8b0500000000	            mov eax, dword [0x04005ff2] 	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4005ff2	      0xe919ffffff	                           jmp 0x4005f10	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4005ff7	    0x660f1f840000	                    nop word [rax + rax]	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4006000	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4006004	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x4006007	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400600b	          0x4c29f0	                            sub rax, r14	       203	i386-dis.c	FUNCTION_1
0x400600e	        0x48034520	             add rax, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4006012	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4006015	          0x4989c5	                            mov r13, rax	       203	i386-dis.c	FUNCTION_1
0x4006018	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400601d	     0xf8655010000	                           jbe 0x4006178	       205	i386-dis.c	FUNCTION_1	IF_1
0x4006023	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006026	     0xf84b3010000	                            je 0x40061df	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400602c	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006030	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006035	      0xe800000000	                          call 0x400603a	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400603a	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006040	      0xe8fbdcffff	                          call sym.get16	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4006045	          0x4c63c0	                          movsxd r8, eax	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4006048	    0x8b0500000000	            mov eax, dword [0x0400604e] 	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x400604e	      0xe9bdfeffff	                           jmp 0x4005f10	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4006053	       0xf1f440000	                   nop dword [rax + rax]	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4006058	          0x83e501	                              and ebp, 1	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x400605b	            0x750d	                           jne 0x400606a	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x400605d	    0xf60500000000	               test byte [0x04006064], 8	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4006064	     0xf84ff000000	                            je 0x4006169	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x400606a	    0xc60500000000	            mov byte [0x04006071], 0x24 	     16134	i386-dis.c	FUNCTION_37
0x4006071	     0xf1f80000000	                         nop dword [rax]	     16134	i386-dis.c	FUNCTION_37
0x4006078	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_113	CALL_1
0x400607d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4006082	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x4006087	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400608c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400608e	    0xc60500000000	            mov byte [0x04006095], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4006095	    0xc60500000000	            mov byte [0x0400609c], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x400609c	      0xe800000000	                          call 0x40060a1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40060a1	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x40060a6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40060a8	      0x488d4c2411	                   lea rcx, [rsp + 0x11]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060ad	            0xeb0d	                           jmp 0x40060bc	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060af	              0x90	                                     nop	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060b0	         0xfb61401	             movzx edx, byte [rcx + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060b4	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060b8	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060ba	            0x7408	                            je 0x40060c4	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060bc	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060bf	          0x4863f0	                         movsxd rsi, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060c2	            0x74ec	                            je 0x40060b0	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40060c4	      0x488d442410	                   lea rax, [rsp + 0x10]	       110	string3.h	FUNCTION_107	CALL_3
0x40060c9	      0xba61000000	                           mov edx, 0x61	       110	string3.h	FUNCTION_107	CALL_3
0x40060ce	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x40060d3	          0x4801c6	                            add rsi, rax	       110	string3.h	FUNCTION_107	CALL_3
0x40060d6	      0xe800000000	                          call 0x40060db	       110	string3.h	FUNCTION_107	CALL_3
0x40060db	      0xe95bfeffff	                           jmp 0x4005f3b	       110	string3.h	FUNCTION_107	CALL_3
0x40060e0	        0x4d8d4508	                       lea r8, [r13 + 8]	       203	i386-dis.c	FUNCTION_1
0x40060e4	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x40060e7	        0x498d551c	                   lea rdx, [r13 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x40060eb	          0x4c29c0	                             sub rax, r8	       203	i386-dis.c	FUNCTION_1
0x40060ee	        0x49034520	             add rax, qword [r13 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x40060f2	          0x4939d4	                            cmp r12, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x40060f5	          0x4989c7	                            mov r15, rax	       203	i386-dis.c	FUNCTION_1
0x40060f8	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x40060fd	     0xf86a5000000	                           jbe 0x40061a8	       205	i386-dis.c	FUNCTION_1	IF_1
0x4006103	          0x4939f0	                             cmp r8, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006106	            0x750c	                           jne 0x4006114	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006108	          0x4c89f2	                            mov rdx, r14	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400610b	          0x4c89fe	                            mov rsi, r15	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400610e	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006110	        0x41ff5678	                 call qword [r14 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006114	        0x498d7d30	                   lea rdi, [r13 + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006118	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400611d	      0xe800000000	                          call 0x4006122	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006122	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006128	    0x8b0500000000	            mov eax, dword [0x0400612e] 	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x400612e	          0x83f802	                              cmp eax, 2	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4006131	     0xf8421ffffff	                            je 0x4006058	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4006137	          0x83e501	                              and ebp, 1	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400613a	            0x7424	                            je 0x4006160	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400613c	          0x4589c0	                            mov r8d, r8d	     16106	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400613f	    0xc60500000000	            mov byte [0x04006146], 0x24 	     16134	i386-dis.c	FUNCTION_37
0x4006146	      0xe9d5fdffff	                           jmp 0x4005f20	     16134	i386-dis.c	FUNCTION_37
0x400614b	       0xf1f440000	                   nop dword [rax + rax]	     16134	i386-dis.c	FUNCTION_37
0x4006150	        0x450fb7c0	                          movzx r8d, r8w	     16118	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	ELSE_3
0x4006154	    0x8b0500000000	            mov eax, dword [0x0400615a] 	     16118	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	ELSE_3
0x400615a	      0xe9b1fdffff	                           jmp 0x4005f10	     16118	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	ELSE_3
0x400615f	              0x90	                                     nop	     16118	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	ELSE_3
0x4006160	    0xf60500000000	               test byte [0x04006167], 8	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4006167	            0x75d3	                           jne 0x400613c	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4006169	        0x450fb7c0	                          movzx r8d, r8w	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x400616d	      0xe99efdffff	                           jmp 0x4005f10	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x4006172	    0x660f1f440000	                    nop word [rax + rax]	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x4006178	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x400617b	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400617e	          0x4c89ef	                            mov rdi, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x4006181	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4006184	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4006189	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400618b	            0x7564	                           jne 0x40061f1	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400618d	    0x488b15000000	            mov rdx, qword [0x04006194] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4006194	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4006198	        0x488d5a04	                      lea rbx, [rdx + 4]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400619c	      0xe9f9fdffff	                           jmp 0x4005f9a	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40061a1	     0xf1f80000000	                         nop dword [rax]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40061a8	          0x4c89e2	                            mov rdx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x40061ab	      0x4c89442408	                 mov qword [rsp + 8], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x40061b0	          0x4c89f1	                            mov rcx, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x40061b3	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x40061b6	          0x4c89ff	                            mov rdi, r15	       206	i386-dis.c	FUNCTION_1	IF_1
0x40061b9	        0x41ff5670	                 call qword [r14 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40061bd	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40061bf	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40061c4	            0x7534	                           jne 0x40061fa	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40061c6	    0x488b05000000	            mov rax, qword [0x040061cd] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40061cd	        0x4d896500	                    mov qword [r13], r12	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40061d1	        0x4c8d6001	                      lea r12, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40061d5	      0xe901fdffff	                           jmp 0x4005edb	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40061da	      0xe800000000	                          call 0x40061df	     16137	i386-dis.c	FUNCTION_37
0x40061df	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40061e2	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40061e5	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40061e7	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40061ec	      0xe93bfeffff	                           jmp 0x400602c	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40061f1	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40061f5	      0xe929feffff	                           jmp 0x4006023	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40061fa	        0x498b7500	                    mov rsi, qword [r13]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40061fe	      0xe900ffffff	                           jmp 0x4006103	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
OP_STi	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	15
0x4001c50	        0x4883ec08	                              sub rsp, 8	     13975	i386-dis.c	FUNCTION_16
0x4001c54	    0x448b05000000	            mov r8d, dword [0x04001c5b] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001c5b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001c60	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001c65	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001c6a	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001c6f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001c71	      0xe800000000	                          call 0x4001c76	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001c76	    0x480fbe350000	           movsx rsi, byte [0x04001c7e] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001c7e	    0x488b3d000000	            mov rdi, qword [0x04001c85] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001c85	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4001c8c	      0xe800000000	                          call 0x4001c91	       117	string3.h	FUNCTION_108	CALL_3
0x4001c91	    0x488905000000	            mov qword [0x04001c98], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4001c98	        0x4883c408	                              add rsp, 8	     13978	i386-dis.c	FUNCTION_16
0x4001c9c	              0xc3	                                     ret	     13978	i386-dis.c	FUNCTION_16
FXSAVE_Fixup	CALL,1:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	28
0x40090a0	    0xf60500000000	               test byte [0x040090a7], 8	     17147	i386-dis.c	FUNCTION_77
0x40090a7	            0x7423	                            je 0x40090cc	     17147	i386-dis.c	FUNCTION_77
0x40090a9	    0x488b05000000	            mov rax, qword [0x040090b0] 	     17150	i386-dis.c	FUNCTION_77	IF_1
0x40090b0	    0x830d00000000	            or dword [0x040090b7], 0x48 	     17147	i386-dis.c	FUNCTION_77
0x40090b7	          0xc60036	                    mov byte [rax], 0x36	     17151	i386-dis.c	FUNCTION_77	IF_1
0x40090ba	        0x4883c002	                              add rax, 2	     17152	i386-dis.c	FUNCTION_77	IF_1
0x40090be	        0xc640ff34	                mov byte [rax - 1], 0x34	     17152	i386-dis.c	FUNCTION_77	IF_1
0x40090c2	          0xc60000	                       mov byte [rax], 0	     17153	i386-dis.c	FUNCTION_77	IF_1
0x40090c5	    0x488905000000	            mov qword [0x040090cc], rax 	     17152	i386-dis.c	FUNCTION_77	IF_1
0x40090cc	    0x833d00000000	               cmp dword [0x040090d3], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x40090d3	            0x741b	                            je 0x40090f0	     16671	i386-dis.c	FUNCTION_58	IF_1
0x40090d5	    0x803d00000000	                cmp byte [0x040090dc], 0	     15667	i386-dis.c	FUNCTION_26
0x40090dc	            0x7446	                            je 0x4009124	     15667	i386-dis.c	FUNCTION_26
0x40090de	    0x488305000000	               add qword [0x040090e6], 1	     15668	i386-dis.c	FUNCTION_26
0x40090e6	      0xe905dcffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x40090eb	       0xf1f440000	                   nop dword [rax + rax]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x40090f0	    0x488b05000000	            mov rax, qword [0x040090f7] 	     16917	i386-dis.c	FUNCTION_67
0x40090f7	      0xba29000000	                           mov edx, 0x29	     16917	i386-dis.c	FUNCTION_67
0x40090fc	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4009100	    0x488905000000	            mov qword [0x04009107], rax 	     16917	i386-dis.c	FUNCTION_67
0x4009107	    0x488b05000000	            mov rax, qword [0x0400910e] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400910e	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009114	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009118	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400911c	    0x488905000000	            mov qword [0x04009123], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009123	              0xc3	                                     ret	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009124	              0x50	                                push rax	     17145	i386-dis.c	FUNCTION_77
0x4009125	      0xe800000000	                          call 0x400912a	     15667	i386-dis.c	FUNCTION_26
OP_ESreg	CALL,5:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,1:functions,0:DO,0	69
0x4003800	            0x4154	                                push r12	     16302	i386-dis.c	FUNCTION_44
0x4003802	              0x55	                                push rbp	     16302	i386-dis.c	FUNCTION_44
0x4003803	          0x4189f4	                           mov r12d, esi	     16302	i386-dis.c	FUNCTION_44
0x4003806	              0x53	                                push rbx	     16302	i386-dis.c	FUNCTION_44
0x4003807	     0xfb61d000000	           movzx ebx, byte [0x0400380e] 	     16303	i386-dis.c	FUNCTION_44	IF_1
0x400380e	          0x4863ef	                         movsxd rbp, edi	     16302	i386-dis.c	FUNCTION_44
0x4003811	            0x84db	                             test bl, bl	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4003813	            0x742b	                            je 0x4003840	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4003815	    0x488b05000000	            mov rax, qword [0x0400381c] 	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x400381c	         0xfb640ff	               movzx eax, byte [rax - 1]	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003820	            0x3ca7	                            cmp al, 0xa7	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003822	     0xf84cc000000	                            je 0x40038f4	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003828	     0xf87a2000000	                            ja 0x40038d0	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x400382e	            0x3c6d	                            cmp al, 0x6d	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003830	     0xf85ba000000	                           jne 0x40038f0	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003836	      0xbf2b000000	                           mov edi, 0x2b	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x400383b	      0xe840e8ffff	             call sym.intel_operand_size	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4003840	    0x488b3d000000	            mov rdi, qword [0x04003847] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003847	        0x480fbef3	                           movsx rsi, bl	       117	string3.h	FUNCTION_108	CALL_3
0x400384b	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4003852	      0xe800000000	                          call 0x4003857	       117	string3.h	FUNCTION_108	CALL_3
0x4003857	     0xfb615000000	           movzx edx, byte [0x0400385e] 	     16282	i386-dis.c	FUNCTION_43
0x400385e	        0x488d7801	                      lea rdi, [rax + 1]	     16282	i386-dis.c	FUNCTION_43
0x4003862	            0x8810	                      mov byte [rax], dl	     16282	i386-dis.c	FUNCTION_43
0x4003864	    0x8b0500000000	            mov eax, dword [0x0400386a] 	     16283	i386-dis.c	FUNCTION_43
0x400386a	      0x2500040000	                          and eax, 0x400	     16283	i386-dis.c	FUNCTION_43
0x400386f	     0x90500000000	              or dword [0x04003875], eax	     16283	i386-dis.c	FUNCTION_43
0x4003875	    0x833d00000000	               cmp dword [0x0400387c], 2	     16284	i386-dis.c	FUNCTION_43	IF_1
0x400387c	            0x743a	                            je 0x40038b8	     16284	i386-dis.c	FUNCTION_43	IF_1
0x400387e	        0x4183e402	                             and r12d, 2	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003882	            0x753a	                           jne 0x40038be	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003884	    0x488b05000000	            mov rax, qword [0x0400388b] 	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x400388b	    0x488bb4e8a0fd	    mov rsi, qword [rax + rbp*8 - 0x260]	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4003893	      0xe800000000	                          call 0x4003898	       117	string3.h	FUNCTION_108	CALL_3
0x4003898	        0x488d5001	                      lea rdx, [rax + 1]	     16296	i386-dis.c	FUNCTION_43
0x400389c	        0xc6400100	                   mov byte [rax + 1], 0	     16297	i386-dis.c	FUNCTION_43
0x40038a0	    0x488915000000	            mov qword [0x040038a7], rdx 	     16296	i386-dis.c	FUNCTION_43
0x40038a7	     0xfb615000000	           movzx edx, byte [0x040038ae] 	     16296	i386-dis.c	FUNCTION_43
0x40038ae	            0x8810	                      mov byte [rax], dl	     16296	i386-dis.c	FUNCTION_43
0x40038b0	              0x5b	                                 pop rbx	     16322	i386-dis.c	FUNCTION_44
0x40038b1	              0x5d	                                 pop rbp	     16322	i386-dis.c	FUNCTION_44
0x40038b2	            0x415c	                                 pop r12	     16322	i386-dis.c	FUNCTION_44
0x40038b4	              0xc3	                                     ret	     16322	i386-dis.c	FUNCTION_44
0x40038b5	           0xf1f00	                         nop dword [rax]	     16322	i386-dis.c	FUNCTION_44
0x40038b8	        0x4183e402	                             and r12d, 2	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x40038bc	            0x7552	                           jne 0x4003910	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x40038be	    0x488b05000000	            mov rax, qword [0x040038c5] 	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x40038c5	    0x488bb4e8a0fd	    mov rsi, qword [rax + rbp*8 - 0x260]	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x40038cd	            0xebc4	                           jmp 0x4003893	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x40038cf	              0x90	                                     nop	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x40038d0	            0x3cab	                            cmp al, 0xab	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x40038d2	            0x7420	                            je 0x40038f4	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x40038d4	            0x3caf	                            cmp al, 0xaf	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x40038d6	            0x741c	                            je 0x40038f4	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x40038d8	          0x4489e6	                           mov esi, r12d	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x40038db	      0xbf01000000	                              mov edi, 1	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x40038e0	      0xe89be7ffff	             call sym.intel_operand_size	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x40038e5	      0xe956ffffff	                           jmp 0x4003840	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x40038ea	    0x660f1f440000	                    nop word [rax + rax]	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x40038f0	            0x3ca5	                            cmp al, 0xa5	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x40038f2	            0x75e4	                           jne 0x40038d8	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x40038f4	          0x4489e6	                           mov esi, r12d	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x40038f7	      0xbf04000000	                              mov edi, 4	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x40038fc	      0xe87fe7ffff	             call sym.intel_operand_size	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4003901	      0xe93affffff	                           jmp 0x4003840	     16315	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003906	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     16315	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003910	    0x488b05000000	            mov rax, qword [0x04003917] 	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4003917	    0x488bb4e8a0fd	    mov rsi, qword [rax + rbp*8 - 0x260]	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x400391f	      0xe96fffffff	                           jmp 0x4003893	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
OP_E_memory	CALL,46:IF,54:FOR,0:ELSE,15:WHILE,0:SWITCH,8:functions,0:DO,0	1109
0x4006cf0	            0x4157	                                push r15	     15211	i386-dis.c	FUNCTION_25
0x4006cf2	            0x4156	                                push r14	     15211	i386-dis.c	FUNCTION_25
0x4006cf4	            0x4155	                                push r13	     15211	i386-dis.c	FUNCTION_25
0x4006cf6	            0x4154	                                push r12	     15211	i386-dis.c	FUNCTION_25
0x4006cf8	              0x55	                                push rbp	     15211	i386-dis.c	FUNCTION_25
0x4006cf9	              0x53	                                push rbx	     15211	i386-dis.c	FUNCTION_25
0x4006cfa	            0x89f5	                            mov ebp, esi	     15211	i386-dis.c	FUNCTION_25
0x4006cfc	            0x89fb	                            mov ebx, edi	     15211	i386-dis.c	FUNCTION_25
0x4006cfe	    0x4881ec880000	                           sub rsp, 0x88	     15211	i386-dis.c	FUNCTION_25
0x4006d05	    0x448b35000000	           mov r14d, dword [0x04006d0c] 	     15213	i386-dis.c	FUNCTION_25
0x4006d0c	    0x64488b042528	                mov rax, qword fs:[0x28]	     15211	i386-dis.c	FUNCTION_25
0x4006d15	      0x4889442478	             mov qword [rsp + 0x78], rax	     15211	i386-dis.c	FUNCTION_25
0x4006d1a	            0x31c0	                            xor eax, eax	     15211	i386-dis.c	FUNCTION_25
0x4006d1c	          0x4489f1	                           mov ecx, r14d	     15213	i386-dis.c	FUNCTION_25
0x4006d1f	          0x83e101	                              and ecx, 1	     15213	i386-dis.c	FUNCTION_25
0x4006d22	            0x743c	                            je 0x4006d60	     15213	i386-dis.c	FUNCTION_25
0x4006d24	    0x8b1500000000	            mov edx, dword [0x04006d2a] 	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4006d2a	          0x4531e4	                          xor r12d, r12d	     15325	i386-dis.c	FUNCTION_25	ELSE_4
0x4006d2d	    0x41bd08000000	                             mov r13d, 8	     15213	i386-dis.c	FUNCTION_25
0x4006d33	            0x85d2	                           test edx, edx	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4006d35	     0xf841c020000	                            je 0x4006f57	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4006d3b	    0x8b0500000000	            mov eax, dword [0x04006d41] 	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4006d41	            0x85c0	                           test eax, eax	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4006d43	     0xf8587010000	                           jne 0x4006ed0	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4006d49	          0x8d53f8	                      lea edx, [rbx - 8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4006d4c	          0x83fa37	                           cmp edx, 0x37	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4006d4f	     0xf8798050000	                            ja 0x40072ed	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4006d55	    0xff24d5000000	                       jmp qword [rdx*8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4006d5c	         0xf1f4000	                         nop dword [rax]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4006d60	    0x8b0500000000	            mov eax, dword [0x04006d66] 	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4006d66	          0x4531ed	                          xor r13d, r13d	     15213	i386-dis.c	FUNCTION_25
0x4006d69	            0x85c0	                           test eax, eax	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4006d6b	            0x75ce	                           jne 0x4006d3b	     15217	i386-dis.c	FUNCTION_25	IF_1
0x4006d6d	          0x4531e4	                          xor r12d, r12d	     15325	i386-dis.c	FUNCTION_25	ELSE_4
0x4006d70	    0x440fb63d0000	          movzx r15d, byte [0x04006d78] 	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4006d78	          0x4584ff	                         test r15b, r15b	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4006d7b	     0xf85ee010000	                           jne 0x4006f6f	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4006d81	      0xe84aafffff	                     call sym.append_seg	     15330	i386-dis.c	FUNCTION_25	CALL_5
0x4006d86	          0x83e502	                              and ebp, 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4006d89	     0xf85f7010000	                           jne 0x4006f86	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4006d8f	    0x833d00000000	               cmp dword [0x04006d96], 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4006d96	     0xf84dc020000	                            je 0x4007078	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4006d9c	    0x8b0500000000	            mov eax, dword [0x04006da2] 	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4006da2	    0x8b2d00000000	            mov ebp, dword [0x04006da8] 	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006da8	      0x2500040000	                          and eax, 0x400	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4006dad	     0x90500000000	              or dword [0x04006db3], eax	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4006db3	          0x83fd01	                              cmp ebp, 1	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006db6	     0xf84140a0000	                            je 0x40077d0	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006dbc	          0x83fd02	                              cmp ebp, 2	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006dbf	     0xf8433060000	                            je 0x40073f8	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006dc5	          0x4531ed	                          xor r13d, r13d	     15212	i386-dis.c	FUNCTION_25
0x4006dc8	            0x85ed	                           test ebp, ebp	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006dca	     0xf8410060000	                            je 0x40073e0	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4006dd0	          0x4584ff	                         test r15b, r15b	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x4006dd3	    0x448b25000000	           mov r12d, dword [0x04006dda] 	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x4006dda	     0xf858d060000	                           jne 0x400746d	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x4006de0	            0x85ed	                           test ebp, ebp	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4006de2	     0xf8550060000	                           jne 0x4007438	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4006de8	    0x448b25000000	           mov r12d, dword [0x04006def] 	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4006def	        0x4183fc06	                             cmp r12d, 6	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4006df3	     0xf843f060000	                            je 0x4007438	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4006df9	     0xf1f80000000	                         nop dword [rax]	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4006e00	     0xfb605000000	           movzx eax, byte [0x04006e07] 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e07	    0x488b3d000000	            mov rdi, qword [0x04006e0e] 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e0e	    0x488b0d000000	            mov rcx, qword [0x04006e15] 	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x4006e15	        0xc6470100	                   mov byte [rdi + 1], 0	     15584	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e19	        0x4883c701	                              add rdi, 1	       117	string3.h	FUNCTION_108	CALL_3
0x4006e1d	          0x8847ff	                  mov byte [rdi - 1], al	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e20	          0x4963c4	                        movsxd rax, r12d	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x4006e23	        0x488b34c1	            mov rsi, qword [rcx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4006e27	      0xe800000000	                          call 0x4006e2c	       117	string3.h	FUNCTION_108	CALL_3
0x4006e2c	          0x4584ff	                         test r15b, r15b	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e2f	          0x4889c1	                            mov rcx, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4006e32	    0x488905000000	            mov qword [0x04006e39], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006e39	            0x7425	                            je 0x4006e60	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e3b	            0x85ed	                           test ebp, ebp	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e3d	        0x400f95c6	                               setne sil	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e41	          0x4d85ed	                           test r13, r13	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e44	           0xf95c2	                                setne dl	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e47	          0x4008d6	                              or sil, dl	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e4a	     0xf8530070000	                           jne 0x4007580	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e50	        0x4183fc06	                             cmp r12d, 6	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e54	     0xf8426070000	                            je 0x4007580	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e5a	    0x660f1f440000	                    nop word [rax + rax]	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4006e60	        0x488d4101	                      lea rax, [rcx + 1]	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e64	        0xc6410100	                   mov byte [rcx + 1], 0	     15606	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e68	    0x488905000000	            mov qword [0x04006e6f], rax 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e6f	     0xfb605000000	           movzx eax, byte [0x04006e76] 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e76	            0x8801	                      mov byte [rcx], al	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4006e78	    0x448b15000000	           mov r10d, dword [0x04006e7f] 	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006e7f	          0x4585d2	                         test r10d, r10d	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006e82	            0x7421	                            je 0x4006ea5	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006e84	    0x448b0d000000	            mov r9d, dword [0x04006e8b] 	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006e8b	          0x4585c9	                           test r9d, r9d	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006e8e	            0x7415	                            je 0x4006ea5	     15619	i386-dis.c	FUNCTION_25	IF_53
0x4006e90	          0x83fb0d	                            cmp ebx, 0xd	     15622	i386-dis.c	FUNCTION_25	IF_53
0x4006e93	          0x8d43ee	                   lea eax, [rbx - 0x12]	     15621	i386-dis.c	FUNCTION_25	IF_53
0x4006e96	     0xf8424040000	                            je 0x40072c0	     15622	i386-dis.c	FUNCTION_25	IF_53
0x4006e9c	          0x83f801	                              cmp eax, 1	     15622	i386-dis.c	FUNCTION_25	IF_53
0x4006e9f	     0xf861b040000	                           jbe 0x40072c0	     15622	i386-dis.c	FUNCTION_25	IF_53
0x4006ea5	      0x488b442478	            mov rax, qword [rsp + 0x78] 	     15661	i386-dis.c	FUNCTION_25
0x4006eaa	    0x644833042528	                xor rax, qword fs:[0x28]	     15661	i386-dis.c	FUNCTION_25
0x4006eb3	     0xf8518120000	                           jne 0x40080d1	     15661	i386-dis.c	FUNCTION_25
0x4006eb9	    0x4881c4880000	                           add rsp, 0x88	     15661	i386-dis.c	FUNCTION_25
0x4006ec0	              0x5b	                                 pop rbx	     15661	i386-dis.c	FUNCTION_25
0x4006ec1	              0x5d	                                 pop rbp	     15661	i386-dis.c	FUNCTION_25
0x4006ec2	            0x415c	                                 pop r12	     15661	i386-dis.c	FUNCTION_25
0x4006ec4	            0x415d	                                 pop r13	     15661	i386-dis.c	FUNCTION_25
0x4006ec6	            0x415e	                                 pop r14	     15661	i386-dis.c	FUNCTION_25
0x4006ec8	            0x415f	                                 pop r15	     15661	i386-dis.c	FUNCTION_25
0x4006eca	              0xc3	                                     ret	     15661	i386-dis.c	FUNCTION_25
0x4006ecb	       0xf1f440000	                   nop dword [rax + rax]	     15661	i386-dis.c	FUNCTION_25
0x4006ed0	          0x8d53ee	                   lea edx, [rbx - 0x12]	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4006ed3	          0x83fa01	                              cmp edx, 1	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4006ed6	     0xf8644050000	                           jbe 0x4007420	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4006edc	          0x83fb0d	                            cmp ebx, 0xd	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4006edf	     0xf843b050000	                            je 0x4007420	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4006ee5	    0x488b05000000	            mov rax, qword [0x04006eec] 	     16917	i386-dis.c	FUNCTION_67
0x4006eec	      0xbe29000000	                           mov esi, 0x29	     16917	i386-dis.c	FUNCTION_67
0x4006ef1	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4006ef5	    0x488905000000	            mov qword [0x04006efc], rax 	     16917	i386-dis.c	FUNCTION_67
0x4006efc	    0x488b05000000	            mov rax, qword [0x04006f03] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006f03	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006f09	        0x66897004	                  mov word [rax + 4], si	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006f0d	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006f11	    0x488905000000	            mov qword [0x04006f18], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006f18	            0xeb8b	                           jmp 0x4006ea5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006f1a	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006f20	      0xb8ffffffff	                     mov eax, 0xffffffff	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4006f25	          0x4531e4	                          xor r12d, r12d	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4006f28	          0x8d53ee	                   lea edx, [rbx - 0x12]	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4006f2b	          0x83fa01	                              cmp edx, 1	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4006f2e	     0xf86bc090000	                           jbe 0x40078f0	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4006f34	          0x83fb1a	                           cmp ebx, 0x1a	     15317	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4006f37	     0xf8483080000	                            je 0x40077c0	     15317	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4006f3d	          0x83fb19	                           cmp ebx, 0x19	     15319	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4006f40	     0xf843a090000	                            je 0x4007880	     15319	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4006f46	          0x83fb1c	                           cmp ebx, 0x1c	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4006f49	     0xf84f90d0000	                            je 0x4007d48	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4006f4f	            0x85c9	                           test ecx, ecx	     15327	i386-dis.c	FUNCTION_25
0x4006f51	     0xf8419feffff	                            je 0x4006d70	     15327	i386-dis.c	FUNCTION_25
0x4006f57	    0x440fb63d0000	          movzx r15d, byte [0x04006f5f] 	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4006f5f	    0x830d00000000	            or dword [0x04006f66], 0x41 	     15327	i386-dis.c	FUNCTION_25
0x4006f66	          0x4584ff	                         test r15b, r15b	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4006f69	     0xf8412feffff	                            je 0x4006d81	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4006f6f	            0x89ee	                            mov esi, ebp	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4006f71	            0x89df	                            mov edi, ebx	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4006f73	      0xe808b1ffff	             call sym.intel_operand_size	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4006f78	      0xe853adffff	                     call sym.append_seg	     15330	i386-dis.c	FUNCTION_25	CALL_5
0x4006f7d	          0x83e502	                              and ebp, 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4006f80	     0xf8409feffff	                            je 0x4006d8f	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4006f86	    0xc74424100000	               mov dword [rsp + 0x10], 0	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4006f8e	    0x488b05000000	            mov rax, qword [0x04006f95] 	     15347	i386-dis.c	FUNCTION_25	IF_9
0x4006f95	    0x8b2d00000000	            mov ebp, dword [0x04006f9b] 	     15353	i386-dis.c	FUNCTION_25	IF_9
0x4006f9b	      0x4889442428	             mov qword [rsp + 0x28], rax	     15347	i386-dis.c	FUNCTION_25	IF_9
0x4006fa0	    0x488b05000000	            mov rax, qword [0x04006fa7] 	     15348	i386-dis.c	FUNCTION_25	IF_9
0x4006fa7	          0x83fd04	                              cmp ebp, 4	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4006faa	      0x4889442420	             mov qword [rsp + 0x20], rax	     15348	i386-dis.c	FUNCTION_25	IF_9
0x4006faf	     0xf840b060000	                            je 0x40075c0	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4006fb5	      0xbe01000000	                              mov esi, 1	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4006fba	            0x31c9	                            xor ecx, ecx	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4006fbc	    0xc74424140000	               mov dword [rsp + 0x14], 0	     15342	i386-dis.c	FUNCTION_25	IF_9
0x4006fc4	    0xc74424480000	               mov dword [rsp + 0x48], 0	     15341	i386-dis.c	FUNCTION_25	IF_9
0x4006fcc	          0x4531f6	                          xor r14d, r14d	     15352	i386-dis.c	FUNCTION_25	IF_9
0x4006fcf	    0xc74424080000	                  mov dword [rsp + 8], 0	     15350	i386-dis.c	FUNCTION_25	IF_9
0x4006fd7	    0x8b0500000000	            mov eax, dword [0x04006fdd] 	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4006fdd	          0x83f801	                              cmp eax, 1	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4006fe0	     0xf847a060000	                            je 0x4007660	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4006fe6	          0x83f802	                              cmp eax, 2	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4006fe9	     0xf84d9060000	                            je 0x40076c8	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4006fef	          0x4531c9	                            xor r9d, r9d	     15212	i386-dis.c	FUNCTION_25
0x4006ff2	            0x85c0	                           test eax, eax	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4006ff4	     0xf8456030000	                            je 0x4007350	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4006ffa	          0x4584ff	                         test r15b, r15b	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4006ffd	            0x7519	                           jne 0x4007018	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4006fff	    0x448b1d000000	           mov r11d, dword [0x04007006] 	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4007006	          0x4585db	                         test r11d, r11d	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4007009	     0xf85cf100000	                           jne 0x40080de	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x400700f	          0x83fd05	                              cmp ebp, 5	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4007012	     0xf84c6100000	                            je 0x40080de	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4007018	          0x4531d2	                          xor r10d, r10d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400701b	    0xc74424180000	               mov dword [rsp + 0x18], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007023	    0x41bc01000000	                             mov r12d, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007029	      0xb901000000	                              mov ecx, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400702e	          0x8d43db	                   lea eax, [rbx - 0x25]	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4007031	          0x83f801	                              cmp eax, 1	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4007034	            0x760f	                           jbe 0x4007045	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4007036	          0x83fb22	                           cmp ebx, 0x22	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4007039	            0x740a	                            je 0x4007045	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x400703b	    0x810d00000000	            or dword [0x04007045], 0x400	     15465	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4007045	          0x4585e4	                         test r12d, r12d	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4007048	            0x754e	                           jne 0x4007098	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400704a	          0x4584ff	                         test r15b, r15b	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400704d	     0xf8425feffff	                            je 0x4006e78	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4007053	          0x4585d2	                         test r10d, r10d	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4007056	     0xf84d4060000	                            je 0x4007730	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400705c	     0xfb63d000000	           movzx edi, byte [0x04007063] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4007063	    0x488b35000000	            mov rsi, qword [0x0400706a] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400706a	        0x488d4601	                      lea rax, [rsi + 1]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400706e	          0x40883e	                     mov byte [rsi], dil	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4007071	            0xeb4b	                           jmp 0x40070be	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4007073	       0xf1f440000	                   nop dword [rax + rax]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4007078	          0x8d43db	                   lea eax, [rbx - 0x25]	     15343	i386-dis.c	FUNCTION_25	IF_9
0x400707b	          0x83f801	                              cmp eax, 1	     15343	i386-dis.c	FUNCTION_25	IF_9
0x400707e	           0xf97c0	                                 seta al	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4007081	            0x31c9	                            xor ecx, ecx	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4007083	          0x83fb22	                           cmp ebx, 0x22	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4007086	           0xf95c1	                                setne cl	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4007089	            0x21c1	                            and ecx, eax	     15343	i386-dis.c	FUNCTION_25	IF_9
0x400708b	        0x894c2410	             mov dword [rsp + 0x10], ecx	     15343	i386-dis.c	FUNCTION_25	IF_9
0x400708f	      0xe9fafeffff	                           jmp 0x4006f8e	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4007094	         0xf1f4000	                         nop dword [rax]	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4007098	    0x488b35000000	            mov rsi, qword [0x0400709f] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400709f	     0xfb63d000000	           movzx edi, byte [0x040070a6] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40070a6	          0x4584ff	                         test r15b, r15b	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x40070a9	        0x488d4601	                      lea rax, [rsi + 1]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40070ad	          0x40883e	                     mov byte [rsi], dil	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40070b0	    0x488905000000	            mov qword [0x040070b7], rax 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40070b7	            0x746c	                            je 0x4007125	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x40070b9	          0x4585d2	                         test r10d, r10d	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x40070bc	            0x7467	                            je 0x4007125	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x40070be	    0x833d00000000	               cmp dword [0x040070c5], 2	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x40070c5	    0x48633d000000	         movsxd rdi, dword [0x040070cc] 	     15836	i386-dis.c	FUNCTION_32
0x40070cc	          0x4489ce	                            mov esi, r9d	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x40070cf	      0x4c894c2430	              mov qword [rsp + 0x30], r9	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x40070d4	        0x894c2438	             mov dword [rsp + 0x38], ecx	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x40070d8	        0x490f44f1	                           cmove rsi, r9	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x40070dc	      0x448b4c2410	            mov r9d, dword [rsp + 0x10] 	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x40070e1	    0x893cbd000000	                  mov dword [rdi*4], edi	     15836	i386-dis.c	FUNCTION_32
0x40070e8	    0x488934fd0000	                  mov qword [rdi*8], rsi	     15836	i386-dis.c	FUNCTION_32
0x40070f0	    0x48c704fd0000	                    mov qword [rdi*8], 1	     15836	i386-dis.c	FUNCTION_32
0x40070fc	      0xbe00000000	                              mov esi, 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4007101	      0xbf00000000	                              mov edi, 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4007106	          0x4585c9	                           test r9d, r9d	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4007109	        0x480f44f7	                          cmove rsi, rdi	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x400710d	          0x4889c7	                            mov rdi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4007110	      0xe800000000	                          call 0x4007115	       117	string3.h	FUNCTION_108	CALL_3
0x4007115	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007119	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400711e	    0x488905000000	            mov qword [0x04007125], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007125	            0x85c9	                           test ecx, ecx	     15476	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x4007127	          0xc60000	                       mov byte [rax], 0	     15475	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400712a	            0x7455	                            je 0x4007181	     15476	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x400712c	          0x4101ed	                           add r13d, ebp	     15410	i386-dis.c	FUNCTION_25	IF_9
0x400712f	    0x833d00000000	               cmp dword [0x04007136], 2	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007136	          0x4d63ed	                        movsxd r13, r13d	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007139	     0xf8511050000	                           jne 0x4007650	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400713f	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007144	          0x4585c0	                           test r8d, r8d	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007147	     0xf8503050000	                           jne 0x4007650	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400714d	    0x488b35000000	            mov rsi, qword [0x04007154] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007154	        0x4a8b34ee	            mov rsi, qword [rsi + r13*8]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007158	     0xf1f84000000	                   nop dword [rax + rax]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007160	          0x4889c7	                            mov rdi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4007163	        0x894c2438	             mov dword [rsp + 0x38], ecx	       117	string3.h	FUNCTION_108	CALL_3
0x4007167	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       117	string3.h	FUNCTION_108	CALL_3
0x400716c	      0xe800000000	                          call 0x4007171	       117	string3.h	FUNCTION_108	CALL_3
0x4007171	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007175	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400717a	    0x488905000000	            mov qword [0x04007181], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007181	        0x8b7c2408	                mov edi, dword [rsp + 8]	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x4007185	            0x85ff	                           test edi, edi	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x4007187	     0xf84e9000000	                            je 0x4007276	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x400718d	        0x8b742414	            mov esi, dword [rsp + 0x14] 	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4007191	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4007195	          0x4409f6	                            or esi, r14d	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4007198	             0x9f7	                             or edi, esi	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400719a	            0x7511	                           jne 0x40071ad	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400719c	          0x83fd04	                              cmp ebp, 4	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400719f	     0xf84d1000000	                            je 0x4007276	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40071a5	            0x85c9	                           test ecx, ecx	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40071a7	     0xf84c9000000	                            je 0x4007276	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40071ad	          0x4584ff	                         test r15b, r15b	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40071b0	     0xf84ea050000	                            je 0x40077a0	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40071b6	            0x85c9	                           test ecx, ecx	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40071b8	     0xf85e2050000	                           jne 0x40077a0	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40071be	          0x4585f6	                         test r14d, r14d	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x40071c1	     0xf84c9060000	                            je 0x4007890	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x40071c7	    0x833d00000000	               cmp dword [0x040071ce], 2	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071ce	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071d3	            0x751b	                           jne 0x40071f0	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071d5	        0x8b742410	            mov esi, dword [rsp + 0x10] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071d9	            0x85f6	                           test esi, esi	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071db	            0x7513	                           jne 0x40071f0	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071dd	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071e2	        0x488b34d7	            mov rsi, qword [rdi + rdx*8]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071e6	            0xeb11	                           jmp 0x40071f9	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071e8	     0xf1f84000000	                   nop dword [rax + rax]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071f0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071f5	        0x488b34d7	            mov rsi, qword [rdi + rdx*8]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40071f9	          0x4889c7	                            mov rdi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x40071fc	      0x4c894c2408	                 mov qword [rsp + 8], r9	       117	string3.h	FUNCTION_108	CALL_3
0x4007201	      0xe800000000	                          call 0x4007206	       117	string3.h	FUNCTION_108	CALL_3
0x4007206	        0x488d5001	                      lea rdx, [rax + 1]	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400720a	       0xfb64c2414	           movzx ecx, byte [rsp + 0x14] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x400720f	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       117	string3.h	FUNCTION_108	CALL_3
0x4007214	    0x41b801000000	                              mov r8d, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400721a	        0xc6400100	                   mov byte [rax + 1], 0	     15501	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400721e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007223	    0x488915000000	            mov qword [0x0400722a], rdx 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400722a	     0xfb615000000	           movzx edx, byte [0x04007231] 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4007231	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007236	      0x4c894c2408	                 mov qword [rsp + 8], r9	        33	stdio2.h	FUNCTION_113	CALL_1
0x400723b	          0x41d3e0	                             shl r8d, cl	        33	stdio2.h	FUNCTION_113	CALL_1
0x400723e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007243	            0x8810	                      mov byte [rax], dl	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4007245	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x400724a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400724c	      0xe800000000	                          call 0x4007251	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007251	    0x488b3d000000	            mov rdi, qword [0x04007258] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007258	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x400725d	      0xe800000000	                          call 0x4007262	       117	string3.h	FUNCTION_108	CALL_3
0x4007262	    0x440fb63d0000	          movzx r15d, byte [0x0400726a] 	       117	string3.h	FUNCTION_108	CALL_3
0x400726a	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       117	string3.h	FUNCTION_108	CALL_3
0x400726f	    0x488905000000	            mov qword [0x04007276], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007276	          0x4584ff	                         test r15b, r15b	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4007279	            0x7425	                            je 0x40072a0	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400727b	          0x4d85c9	                             test r9, r9	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400727e	     0xf855c040000	                           jne 0x40076e0	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4007284	    0x8b1500000000	            mov edx, dword [0x0400728a] 	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400728a	            0x85d2	                           test edx, edx	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400728c	     0xf858e020000	                           jne 0x4007520	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4007292	          0x83fd05	                              cmp ebp, 5	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4007295	     0xf8485020000	                            je 0x4007520	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400729b	       0xf1f440000	                   nop dword [rax + rax]	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x40072a0	        0x488d5001	                      lea rdx, [rax + 1]	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40072a4	        0xc6400100	                   mov byte [rax + 1], 0	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40072a8	    0x488915000000	            mov qword [0x040072af], rdx 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40072af	     0xfb615000000	           movzx edx, byte [0x040072b6] 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40072b6	            0x8810	                      mov byte [rax], dl	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40072b8	      0xe9bbfbffff	                           jmp 0x4006e78	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40072bd	           0xf1f00	                         nop dword [rax]	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40072c0	    0x448b05000000	            mov r8d, dword [0x040072c7] 	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40072c7	          0x4585c0	                           test r8d, r8d	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40072ca	            0x742c	                            je 0x40072f8	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40072cc	    0x8b0500000000	            mov eax, dword [0x040072d2] 	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40072d2	      0x3d00010000	                          cmp eax, 0x100	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40072d7	            0x7445	                            je 0x400731e	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40072d9	      0x3d00020000	                          cmp eax, 0x200	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40072de	     0xf84dc050000	                            je 0x40078c0	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40072e4	          0x83c080	             add eax, 0xffffffffffffff80	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40072e7	     0xf8433070000	                            je 0x4007a20	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x40072ed	      0xe800000000	                          call 0x40072f2	     15657	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_46
0x40072f2	    0x660f1f440000	                    nop word [rax + rax]	     15657	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_46
0x40072f8	          0x83f801	                              cmp eax, 1	     15626	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40072fb	            0x76cf	                           jbe 0x40072cc	     15626	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x40072fd	    0x8b0500000000	            mov eax, dword [0x04007303] 	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4007303	      0x3d00010000	                          cmp eax, 0x100	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4007308	     0xf84b2050000	                            je 0x40078c0	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400730e	      0x3d00020000	                          cmp eax, 0x200	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4007313	     0xf8437070000	                            je 0x4007a50	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4007319	          0x83c080	             add eax, 0xffffffffffffff80	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400731c	            0x75cf	                           jne 0x40072ed	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400731e	    0x488b05000000	            mov rax, qword [0x04007325] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007325	      0xbe347d0000	                         mov esi, 0x7d34	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400732a	    0xc7007b31746f	            mov dword [rax], 0x6f74317b 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007330	        0x66897004	                  mov word [rax + 4], si	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007334	        0x4883c006	                              add rax, 6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007338	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400733b	    0x488905000000	            mov qword [0x04007342], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007342	      0xe95efbffff	                           jmp 0x4006ea5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007347	    0x660f1f840000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007350	          0x83fd05	                              cmp ebp, 5	     15415	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4007353	     0xf85a1fcffff	                           jne 0x4006ffa	     15415	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4007359	          0x4531d2	                          xor r10d, r10d	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x400735c	    0x833d00000000	               cmp dword [0x04007363], 2	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4007363	        0x884c2430	               mov byte [rsp + 0x30], cl	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4007367	        0x410f94c2	                               sete r10b	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x400736b	          0x4121f2	                           and r10d, esi	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x400736e	      0x4489542418	            mov dword [rsp + 0x18], r10d	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4007373	      0xe888caffff	                         call sym.get32s	     15420	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	CALL_8
0x4007378	       0xfb64c2430	           movzx ecx, byte [rsp + 0x30] 	     15441	i386-dis.c	FUNCTION_25	IF_9
0x400737d	          0x4989c1	                             mov r9, rax	     15420	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	CALL_8
0x4007380	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4007385	            0x84c9	                             test cl, cl	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4007387	            0x7412	                            je 0x400739b	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4007389	          0x4585f6	                         test r14d, r14d	     15440	i386-dis.c	FUNCTION_25	IF_9
0x400738c	            0x750d	                           jne 0x400739b	     15440	i386-dis.c	FUNCTION_25	IF_9
0x400738e	    0x833d00000000	               cmp dword [0x04007395], 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4007395	     0xf84150a0000	                            je 0x4007db0	     15441	i386-dis.c	FUNCTION_25	IF_9
0x400739b	      0x448b642408	               mov r12d, dword [rsp + 8]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40073a0	          0x4585e4	                         test r12d, r12d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40073a3	     0xf85ef080000	                           jne 0x4007c98	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40073a9	    0x440fb63d0000	          movzx r15d, byte [0x040073b1] 	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40073b1	          0x4531e4	                          xor r12d, r12d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40073b4	          0x4584ff	                         test r15b, r15b	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x40073b7	     0xf84eb070000	                            je 0x4007ba8	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x40073bd	          0x4589d0	                           mov r8d, r10d	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x40073c0	            0x31c9	                            xor ecx, ecx	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x40073c2	    0xc74424180000	               mov dword [rsp + 0x18], 0	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x40073ca	          0x4509f0	                            or r8d, r14d	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40073cd	     0xf8472fcffff	                            je 0x4007045	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40073d3	      0xe956fcffff	                           jmp 0x400702e	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40073d8	     0xf1f84000000	                   nop dword [rax + rax]	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x40073e0	    0x448b25000000	           mov r12d, dword [0x040073e7] 	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40073e7	          0x4531ed	                          xor r13d, r13d	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40073ea	        0x4183fc06	                             cmp r12d, 6	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40073ee	     0xf850cfaffff	                           jne 0x4006e00	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40073f4	         0xf1f4000	                         nop dword [rax]	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40073f8	      0xe843c9ffff	                          call sym.get16	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_29
0x40073fd	          0xf6c480	                           test ah, 0x80	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4007400	          0x4c63e8	                         movsxd r13, eax	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_29
0x4007403	            0x7407	                            je 0x400740c	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4007405	    0x4981ed000001	                        sub r13, 0x10000	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x400740c	    0x440fb63d0000	          movzx r15d, byte [0x04007414] 	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4007414	    0x8b2d00000000	            mov ebp, dword [0x0400741a] 	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x400741a	      0xe9b1f9ffff	                           jmp 0x4006dd0	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x400741f	              0x90	                                     nop	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4007420	          0x8d53f8	                      lea edx, [rbx - 8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007423	          0x83fa37	                           cmp edx, 0x37	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007426	     0xf87c1feffff	                            ja 0x40072ed	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x400742c	    0xff24d5000000	                       jmp qword [rdx*8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007433	       0xf1f440000	                   nop dword [rax + rax]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007438	          0x4c89ef	                            mov rdi, r13	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_30
0x400743b	      0xe880c1ffff	call sym.print_displacement.constprop.17	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_30
0x4007440	    0x488b3d000000	            mov rdi, qword [0x04007447] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007447	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x400744c	      0xe800000000	                          call 0x4007451	       117	string3.h	FUNCTION_108	CALL_3
0x4007451	    0x440fb63d0000	          movzx r15d, byte [0x04007459] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007459	    0x8b2d00000000	            mov ebp, dword [0x0400745f] 	       117	string3.h	FUNCTION_108	CALL_3
0x400745f	    0x448b25000000	           mov r12d, dword [0x04007466] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007466	    0x488905000000	            mov qword [0x0400746d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400746d	            0x85ed	                           test ebp, ebp	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400746f	     0xf858bf9ffff	                           jne 0x4006e00	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4007475	        0x4183fc06	                             cmp r12d, 6	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4007479	     0xf8581f9ffff	                           jne 0x4006e00	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400747f	          0x4584ff	                         test r15b, r15b	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x4007482	     0xf84f0f9ffff	                            je 0x4006e78	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x4007488	    0x8b2d00000000	            mov ebp, dword [0x0400748e] 	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x400748e	            0x85ed	                           test ebp, ebp	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x4007490	     0xf84aa0b0000	                            je 0x4008040	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x4007496	    0x833d00000000	               cmp dword [0x0400749d], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x400749d	        0x450fb7c5	                         movzx r8d, r13w	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x40074a1	     0xf85ba020000	                           jne 0x4007761	     14624	i386-dis.c	FUNCTION_21	IF_1
0x40074a7	      0x4c8d642450	                   lea r12, [rsp + 0x50]	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074ac	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074b1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074b6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074bb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074bd	    0xc60500000000	            mov byte [0x040074c4], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x40074c4	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074c7	    0xc60500000000	            mov byte [0x040074ce], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x40074ce	      0xe800000000	                          call 0x40074d3	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074d3	       0xfb6542450	           movzx edx, byte [rsp + 0x50] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074d8	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40074da	      0x498d742401	                      lea rsi, [r12 + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074df	            0xeb13	                           jmp 0x40074f4	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074e1	     0xf1f80000000	                         nop dword [rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074e8	         0xfb61406	             movzx edx, byte [rsi + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074ec	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074f0	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074f2	            0x740c	                            je 0x4007500	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074f4	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074f7	          0x4863c8	                         movsxd rcx, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074fa	            0x74ec	                            je 0x40074e8	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40074fc	         0xf1f4000	                         nop dword [rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007500	        0x498d340c	                    lea rsi, [r12 + rcx]	       110	string3.h	FUNCTION_107	CALL_3
0x4007504	      0xba62000000	                           mov edx, 0x62	       110	string3.h	FUNCTION_107	CALL_3
0x4007509	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x400750e	      0xe800000000	                          call 0x4007513	       110	string3.h	FUNCTION_107	CALL_3
0x4007513	      0xe964020000	                           jmp 0x400777c	       110	string3.h	FUNCTION_107	CALL_3
0x4007518	     0xf1f84000000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_107	CALL_3
0x4007520	        0x488d5001	                      lea rdx, [rax + 1]	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4007524	          0x4585e4	                         test r12d, r12d	     15521	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_36
0x4007527	          0xc6002b	                    mov byte [rax], 0x2b	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400752a	        0xc6400100	                   mov byte [rax + 1], 0	     15512	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400752e	    0x488915000000	            mov qword [0x04007535], rdx 	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4007535	     0xf85e4010000	                           jne 0x400771f	     15521	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_36
0x400753b	    0x833d00000000	               cmp dword [0x04007542], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4007542	     0xf84c8090000	                            je 0x4007f10	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4007548	          0x4589c8	                            mov r8d, r9d	        33	stdio2.h	FUNCTION_113	CALL_1
0x400754b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007550	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007555	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400755a	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x400755f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007561	      0xe800000000	                          call 0x4007566	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007566	    0x488b3d000000	            mov rdi, qword [0x0400756d] 	       117	string3.h	FUNCTION_108	CALL_3
0x400756d	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4007572	      0xe800000000	                          call 0x4007577	       117	string3.h	FUNCTION_108	CALL_3
0x4007577	      0xe924fdffff	                           jmp 0x40072a0	       117	string3.h	FUNCTION_108	CALL_3
0x400757c	         0xf1f4000	                         nop dword [rax]	       117	string3.h	FUNCTION_108	CALL_3
0x4007580	          0x4d85ed	                           test r13, r13	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4007583	     0xf8857080000	                            js 0x4007de0	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4007589	        0x488d5001	                      lea rdx, [rax + 1]	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400758d	          0xc6002b	                    mov byte [rax], 0x2b	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4007590	        0xc6400100	                   mov byte [rax + 1], 0	     15592	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4007594	    0x488915000000	            mov qword [0x0400759b], rdx 	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400759b	          0x4c89ef	                            mov rdi, r13	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_33
0x400759e	      0xe81dc0ffff	call sym.print_displacement.constprop.17	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_33
0x40075a3	    0x488b3d000000	            mov rdi, qword [0x040075aa] 	       117	string3.h	FUNCTION_108	CALL_3
0x40075aa	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40075af	      0xe800000000	                          call 0x40075b4	       117	string3.h	FUNCTION_108	CALL_3
0x40075b4	          0x4889c1	                            mov rcx, rax	       117	string3.h	FUNCTION_108	CALL_3
0x40075b7	      0xe9a4f8ffff	                           jmp 0x4006e60	       117	string3.h	FUNCTION_108	CALL_3
0x40075bc	         0xf1f4000	                         nop dword [rax]	       117	string3.h	FUNCTION_108	CALL_3
0x40075c0	    0x8b0500000000	            mov eax, dword [0x040075c6] 	     15358	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40075c6	        0x4183e602	                             and r14d, 2	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40075ca	        0x89442448	             mov dword [rsp + 0x48], eax	     15358	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40075ce	            0x740e	                            je 0x40075de	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40075d0	    0x830d00000000	            or dword [0x040075d7], 0x42 	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x40075d7	          0x83c008	                              add eax, 8	     15361	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x40075da	        0x89442448	             mov dword [rsp + 0x48], eax	     15361	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x40075de	          0x8d43cb	                   lea eax, [rbx - 0x35]	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x40075e1	          0x83f803	                              cmp eax, 3	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x40075e4	     0xf8756020000	                            ja 0x4007840	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x40075ea	    0x803d00000000	                cmp byte [0x040075f1], 0	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x40075f1	     0xf84f6fcffff	                            je 0x40072ed	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x40075f7	    0x8b0d00000000	            mov ecx, dword [0x040075fd] 	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x40075fd	            0x85c9	                           test ecx, ecx	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x40075ff	     0xf85fb020000	                           jne 0x4007900	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x4007605	    0x8b0500000000	            mov eax, dword [0x0400760b] 	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x400760b	      0x3d00010000	                          cmp eax, 0x100	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4007610	     0xf84d2080000	                            je 0x4007ee8	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4007616	      0x3d00020000	                          cmp eax, 0x200	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x400761b	     0xf8457040000	                            je 0x4007a78	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4007621	          0x83c080	             add eax, 0xffffffffffffff80	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4007624	     0xf85c3fcffff	                           jne 0x40072ed	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x400762a	    0x488b05000000	            mov rax, qword [0x04007631] 	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4007631	    0x41be01000000	                             mov r14d, 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4007637	      0x4889442428	             mov qword [rsp + 0x28], rax	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x400763c	      0x4889442420	             mov qword [rsp + 0x20], rax	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4007641	      0xe906020000	                           jmp 0x400784c	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4007646	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4007650	    0x488b35000000	            mov rsi, qword [0x04007657] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007657	        0x4a8b34ee	            mov rsi, qword [rsi + r13*8]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400765b	      0xe900fbffff	                           jmp 0x4007160	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4007660	    0x4c8b15000000	            mov r10, qword [0x04007667] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4007667	    0x488b05000000	            mov rax, qword [0x0400766e] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x400766e	        0x4d8b4a68	              mov r9, qword [r10 + 0x68]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4007672	        0x4c8d4001	                       lea r8, [rax + 1]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4007676	          0x498b31	                     mov rsi, qword [r9]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4007679	          0x4939f0	                             cmp r8, rsi	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x400767c	     0xf87de060000	                            ja 0x4007d60	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4007682	        0x440fb608	                   movzx r9d, byte [rax]	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4007686	    0x8b0500000000	            mov eax, dword [0x0400768c] 	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x400768c	    0x4c8905000000	              mov qword [0x04007693], r8	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4007693	    0x498d8900ffff	                   lea rcx, [r9 - 0x100]	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x400769a	          0x4584c9	                           test r9b, r9b	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x400769d	        0x4c0f48c9	                           cmovs r9, rcx	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x40076a1	            0x85c0	                           test eax, eax	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076a3	     0xf8451f9ffff	                            je 0x4006ffa	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076a9	          0x4585e4	                         test r12d, r12d	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076ac	          0x4c89c8	                             mov rax, r9	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076af	          0x4489e1	                           mov ecx, r12d	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076b2	        0x400f9fc6	                                setg sil	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076b6	          0x48d3e0	                             shl rax, cl	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076b9	          0x4084f6	                           test sil, sil	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076bc	        0x4c0f45c8	                          cmovne r9, rax	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076c0	      0xe935f9ffff	                           jmp 0x4006ffa	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076c5	           0xf1f00	                         nop dword [rax]	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x40076c8	      0xe833c7ffff	                         call sym.get32s	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x40076cd	    0x440fb63d0000	          movzx r15d, byte [0x040076d5] 	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x40076d5	          0x4989c1	                             mov r9, rax	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x40076d8	      0xe91df9ffff	                           jmp 0x4006ffa	     15433	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40076dd	           0xf1f00	                         nop dword [rax]	     15433	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x40076e0	          0x4585e4	                         test r12d, r12d	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x40076e3	     0xf8437feffff	                            je 0x4007520	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x40076e9	          0x4d85c9	                             test r9, r9	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x40076ec	     0xf892efeffff	                           jns 0x4007520	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x40076f2	    0x833d00000000	               cmp dword [0x040076f9], 1	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40076f9	            0x7424	                            je 0x400771f	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40076fb	          0x4c89ca	                             mov rdx, r9	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40076fe	          0x48f7da	                                 neg rdx	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4007701	          0x4c39ca	                             cmp rdx, r9	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4007704	     0xf8446040000	                            je 0x4007b50	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400770a	        0x488d4801	                      lea rcx, [rax + 1]	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400770e	          0xc6002d	                    mov byte [rax], 0x2d	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4007711	        0xc6400100	                   mov byte [rax + 1], 0	     15517	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4007715	          0x4989d1	                             mov r9, rdx	     15518	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4007718	    0x48890d000000	            mov qword [0x0400771f], rcx 	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400771f	          0x4c89cf	                             mov rdi, r9	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x4007722	      0xe899beffff	call sym.print_displacement.constprop.17	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x4007727	      0xe93afeffff	                           jmp 0x4007566	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x400772c	         0xf1f4000	                         nop dword [rax]	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x4007730	    0x8b0500000000	            mov eax, dword [0x04007736] 	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4007736	            0x85c0	                           test eax, eax	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4007738	            0x7509	                           jne 0x4007743	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x400773a	          0x83fd05	                              cmp ebp, 5	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x400773d	     0xf8535f7ffff	                           jne 0x4006e78	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4007743	    0x8b0500000000	            mov eax, dword [0x04007749] 	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x4007749	            0x85c0	                           test eax, eax	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x400774b	     0xf845f030000	                            je 0x4007ab0	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x4007751	    0x833d00000000	               cmp dword [0x04007758], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4007758	          0x4589c8	                            mov r8d, r9d	        33	stdio2.h	FUNCTION_113	CALL_1
0x400775b	     0xf848f030000	                            je 0x4007af0	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4007761	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007766	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x400776b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007770	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007775	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007777	      0xe800000000	                          call 0x400777c	        33	stdio2.h	FUNCTION_113	CALL_1
0x400777c	    0x488b3d000000	            mov rdi, qword [0x04007783] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007783	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4007788	      0xe800000000	                          call 0x400778d	       117	string3.h	FUNCTION_108	CALL_3
0x400778d	    0x488905000000	            mov qword [0x04007794], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007794	      0xe9dff6ffff	                           jmp 0x4006e78	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007799	     0xf1f80000000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40077a0	     0xfb60d000000	           movzx ecx, byte [0x040077a7] 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40077a7	        0x488d5001	                      lea rdx, [rax + 1]	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40077ab	        0xc6400100	                   mov byte [rax + 1], 0	     15491	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40077af	    0x488915000000	            mov qword [0x040077b6], rdx 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40077b6	            0x8808	                      mov byte [rax], cl	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40077b8	          0x4889d0	                            mov rax, rdx	     15491	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40077bb	      0xe9fef9ffff	                           jmp 0x40071be	     15491	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x40077c0	        0x4183ec02	                             sub r12d, 2	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x40077c4	      0xe986f7ffff	                           jmp 0x4006f4f	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x40077c9	     0xf1f80000000	                         nop dword [rax]	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x40077d0	    0x4c8b05000000	              mov r8, qword [0x040077d7]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077d7	    0x488b05000000	            mov rax, qword [0x040077de] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077de	        0x4d8b7068	              mov r14, qword [r8 + 0x68]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077e2	        0x4c8d6801	                      lea r13, [rax + 1]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077e6	          0x498b36	                    mov rsi, qword [r14]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077e9	          0x4939f5	                            cmp r13, rsi	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077ec	     0xf87ae060000	                            ja 0x4007ea0	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077f2	    0x4c892d000000	            mov qword [0x040077f9], r13 	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077f9	        0x440fb628	                  movzx r13d, byte [rax]	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40077fd	    0x448b35000000	           mov r14d, dword [0x04007804] 	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4007804	    0x498d8d00ffff	                  lea rcx, [r13 - 0x100]	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x400780b	          0x4584ed	                         test r13b, r13b	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x400780e	        0x4c0f48e9	                          cmovs r13, rcx	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4007812	          0x4585f6	                         test r14d, r14d	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4007815	     0xf84b5f5ffff	                            je 0x4006dd0	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400781b	          0x4585e4	                         test r12d, r12d	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400781e	          0x4c89e8	                            mov rax, r13	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4007821	          0x4489e1	                           mov ecx, r12d	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4007824	        0x400f9fc6	                                setg sil	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4007828	          0x48d3e0	                             shl rax, cl	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400782b	          0x4084f6	                           test sil, sil	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400782e	        0x4c0f45e8	                         cmovne r13, rax	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4007832	      0xe999f5ffff	                           jmp 0x4006dd0	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4007837	    0x660f1f840000	                    nop word [rax + rax]	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4007840	          0x4531f6	                          xor r14d, r14d	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4007843	      0x837c244804	               cmp dword [rsp + 0x48], 4	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4007848	        0x410f95c6	                              setne r14b	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x400784c	    0x8b0500000000	            mov eax, dword [0x04007852] 	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4007852	    0x8b2d00000000	            mov ebp, dword [0x04007858] 	     15407	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4007858	            0x31f6	                            xor esi, esi	     15408	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x400785a	    0x488305000000	               add qword [0x04007862], 1	     15408	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4007862	      0xb901000000	                              mov ecx, 1	     15408	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4007867	    0xc74424080100	                  mov dword [rsp + 8], 1	     15357	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x400786f	        0x89442414	             mov dword [rsp + 0x14], eax	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4007873	      0xe95ff7ffff	                           jmp 0x4006fd7	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4007878	     0xf1f84000000	                   nop dword [rax + rax]	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4007880	        0x4183ec03	                             sub r12d, 3	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4007884	      0xe9c6f6ffff	                           jmp 0x4006f4f	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4007889	     0xf1f80000000	                         nop dword [rax]	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4007890	    0x833d00000000	               cmp dword [0x04007897], 2	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4007897	            0x7513	                           jne 0x40078ac	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x4007899	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x400789d	    0x488b35000000	            mov rsi, qword [0x040078a4] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40078a4	            0x85c9	                           test ecx, ecx	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40078a6	     0xf844df9ffff	                            je 0x40071f9	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40078ac	    0x488b35000000	            mov rsi, qword [0x040078b3] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40078b3	      0xe941f9ffff	                           jmp 0x40071f9	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40078b8	     0xf1f84000000	                   nop dword [rax + rax]	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40078c0	    0x488b05000000	            mov rax, qword [0x040078c7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078c7	      0xb9387d0000	                         mov ecx, 0x7d38	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078cc	    0xc7007b31746f	            mov dword [rax], 0x6f74317b 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078d2	        0x66894804	                  mov word [rax + 4], cx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078d6	        0x4883c006	                              add rax, 6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078da	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078dd	    0x488905000000	            mov qword [0x040078e4], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078e4	      0xe9bcf5ffff	                           jmp 0x4006ea5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078e9	     0xf1f80000000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40078f0	          0x4189c4	                           mov r12d, eax	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x40078f3	      0xe957f6ffff	                           jmp 0x4006f4f	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x40078f8	     0xf1f84000000	                   nop dword [rax + rax]	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4007900	        0x8b7c2448	            mov edi, dword [rsp + 0x48] 	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4007904	    0x8b1500000000	            mov edx, dword [0x0400790a] 	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x400790a	            0x89f8	                            mov eax, edi	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x400790c	          0x83c010	                           add eax, 0x10	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x400790f	            0x85d2	                           test edx, edx	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4007911	           0xf45c7	                         cmovne eax, edi	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4007914	        0x89442448	             mov dword [rsp + 0x48], eax	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4007918	      0xe9e8fcffff	                           jmp 0x4007605	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x400791d	           0xf1f00	                         nop dword [rax]	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4007920	    0x41bc05000000	                             mov r12d, 5	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007926	      0xe909f6ffff	                           jmp 0x4006f34	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x400792b	       0xf1f440000	                   nop dword [rax + rax]	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007930	    0x833d00000000	               cmp dword [0x04007937], 1	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007937	            0x19d2	                            sbb edx, edx	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007939	          0x83c202	                              add edx, 2	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x400793c	    0x833d00000000	               cmp dword [0x04007943], 1	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007943	          0x4519e4	                          sbb r12d, r12d	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007946	        0x4183c403	                             add r12d, 3	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x400794a	            0x85c0	                           test eax, eax	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x400794c	     0xf85e2f5ffff	                           jne 0x4006f34	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4007952	            0x89d0	                            mov eax, edx	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4007954	      0xe9cff5ffff	                           jmp 0x4006f28	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4007959	     0xf1f80000000	                         nop dword [rax]	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4007960	    0x8b1500000000	            mov edx, dword [0x04007966] 	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007966	    0x81fa00010000	                          cmp edx, 0x100	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400796c	     0xf84be060000	                            je 0x4008030	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007972	    0x81fa00020000	                          cmp edx, 0x200	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007978	     0xf849a060000	                            je 0x4008018	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400797e	          0x83c280	             add edx, 0xffffffffffffff80	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007981	     0xf8566f9ffff	                           jne 0x40072ed	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007987	      0xba03000000	                              mov edx, 3	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400798c	    0x41bc04000000	                             mov r12d, 4	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007992	            0xebb6	                           jmp 0x400794a	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007994	         0xf1f4000	                         nop dword [rax]	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007998	    0x41bc04000000	                             mov r12d, 4	     15279	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x400799e	      0xe991f5ffff	                           jmp 0x4006f34	     15279	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079a3	       0xf1f440000	                   nop dword [rax + rax]	     15279	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079a8	    0x41bc01000000	                             mov r12d, 1	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079ae	      0xe975f5ffff	                           jmp 0x4006f28	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079b3	       0xf1f440000	                   nop dword [rax + rax]	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079b8	      0xb801000000	                              mov eax, 1	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079bd	    0x41bc02000000	                             mov r12d, 2	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079c3	      0xe960f5ffff	                           jmp 0x4006f28	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079c8	     0xf1f84000000	                   nop dword [rax + rax]	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079d0	      0xb802000000	                              mov eax, 2	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079d5	    0x41bc03000000	                             mov r12d, 3	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079db	      0xe948f5ffff	                           jmp 0x4006f28	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40079e0	    0x8b0500000000	            mov eax, dword [0x040079e6] 	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40079e6	      0x3d00010000	                          cmp eax, 0x100	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40079eb	     0xf84d0060000	                            je 0x40080c1	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40079f1	      0x3d00020000	                          cmp eax, 0x200	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40079f6	     0xf84b5060000	                            je 0x40080b1	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40079fc	          0x83c080	             add eax, 0xffffffffffffff80	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40079ff	     0xf85e8f8ffff	                           jne 0x40072ed	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007a05	      0xb803000000	                              mov eax, 3	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007a0a	    0x41bc04000000	                             mov r12d, 4	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007a10	      0xe913f5ffff	                           jmp 0x4006f28	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007a15	           0xf1f00	                         nop dword [rax]	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4007a18	          0x4531e4	                          xor r12d, r12d	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007a1b	      0xe914f5ffff	                           jmp 0x4006f34	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007a20	    0x488b05000000	            mov rax, qword [0x04007a27] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a27	      0xbf327d0000	                         mov edi, 0x7d32	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a2c	    0xc7007b31746f	            mov dword [rax], 0x6f74317b 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a32	        0x66897804	                  mov word [rax + 4], di	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a36	        0x4883c006	                              add rax, 6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a3a	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a3d	    0x488905000000	            mov qword [0x04007a44], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a44	      0xe95cf4ffff	                           jmp 0x4006ea5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a49	     0xf1f80000000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a50	    0x488b05000000	            mov rax, qword [0x04007a57] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a57	    0x48bb7b31746f	            movabs rbx, 0x7d36316f74317b	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a61	          0x488918	                    mov qword [rax], rbx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a64	        0x4883c007	                              add rax, 7	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a68	    0x488905000000	            mov qword [0x04007a6f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a6f	      0xe931f4ffff	                           jmp 0x4006ea5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a74	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007a78	    0x8b0500000000	            mov eax, dword [0x04007a7e] 	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007a7e	            0x85c0	                           test eax, eax	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007a80	     0xf8412050000	                            je 0x4007f98	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007a86	          0x8d43c9	                   lea eax, [rbx - 0x37]	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007a89	          0x83f801	                              cmp eax, 1	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007a8c	     0xf8606050000	                           jbe 0x4007f98	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007a92	    0x488b05000000	            mov rax, qword [0x04007a99] 	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4007a99	    0x41be01000000	                             mov r14d, 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4007a9f	      0x4889442428	             mov qword [rsp + 0x28], rax	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4007aa4	      0x4889442420	             mov qword [rsp + 0x20], rax	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4007aa9	      0xe99efdffff	                           jmp 0x400784c	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4007aae	            0x6690	                                     nop	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4007ab0	    0x488b05000000	            mov rax, qword [0x04007ab7] 	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_24
0x4007ab7	    0x488b3d000000	            mov rdi, qword [0x04007abe] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007abe	    0x41bf3a000000	                          mov r15d, 0x3a	       117	string3.h	FUNCTION_108	CALL_3
0x4007ac4	      0x4c894c2408	                 mov qword [rsp + 8], r9	       117	string3.h	FUNCTION_108	CALL_3
0x4007ac9	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007acd	      0xe800000000	                          call 0x4007ad2	       117	string3.h	FUNCTION_108	CALL_3
0x4007ad2	        0x66448938	                    mov word [rax], r15w	       117	string3.h	FUNCTION_108	CALL_3
0x4007ad6	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007ada	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007adf	    0x488905000000	            mov qword [0x04007ae6], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007ae6	      0xe966fcffff	                           jmp 0x4007751	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007aeb	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007af0	      0x4c8d642450	                   lea r12, [rsp + 0x50]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007af5	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007afa	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007aff	          0x4d89c8	                              mov r8, r9	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007b02	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007b07	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007b09	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007b0c	    0xc60500000000	            mov byte [0x04007b13], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4007b13	    0xc60500000000	            mov byte [0x04007b1a], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4007b1a	      0xe800000000	                          call 0x4007b1f	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007b1f	       0xfb6542450	           movzx edx, byte [rsp + 0x50] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007b24	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007b26	      0x498d742401	                      lea rsi, [r12 + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b2b	            0xeb13	                           jmp 0x4007b40	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b2d	           0xf1f00	                         nop dword [rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b30	         0xfb61406	             movzx edx, byte [rsi + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b34	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b38	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b3a	     0xf84c0f9ffff	                            je 0x4007500	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b40	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b43	          0x4863c8	                         movsxd rcx, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b46	            0x74e8	                            je 0x4007b30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b48	      0xe9b3f9ffff	                           jmp 0x4007500	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b4d	           0xf1f00	                         nop dword [rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b50	    0x49b900000000	           movabs r9, 0x8000000000000000	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b5a	      0xe9c0fbffff	                           jmp 0x400771f	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b5f	              0x90	                                     nop	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007b60	    0x833d00000000	               cmp dword [0x04007b67], 1	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4007b67	          0x4519e4	                          sbb r12d, r12d	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4007b6a	        0x4183c403	                             add r12d, 3	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4007b6e	      0xe9c1f3ffff	                           jmp 0x4006f34	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4007b73	       0xf1f440000	                   nop dword [rax + rax]	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4007b78	    0x41bc03000000	                             mov r12d, 3	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007b7e	      0xe9b1f3ffff	                           jmp 0x4006f34	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007b83	       0xf1f440000	                   nop dword [rax + rax]	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007b88	    0x41bc01000000	                             mov r12d, 1	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007b8e	      0xe9a1f3ffff	                           jmp 0x4006f34	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007b93	       0xf1f440000	                   nop dword [rax + rax]	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007b98	    0x41bc02000000	                             mov r12d, 2	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007b9e	      0xe991f3ffff	                           jmp 0x4006f34	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007ba3	       0xf1f440000	                   nop dword [rax + rax]	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4007ba8	          0x4489d0	                           mov eax, r10d	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4007bab	          0x4409e0	                            or eax, r12d	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4007bae	     0xf8404010000	                            je 0x4007cb8	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4007bb4	          0x4589d0	                           mov r8d, r10d	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4007bb7	    0xc74424180000	               mov dword [rsp + 0x18], 0	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4007bbf	            0x31c9	                            xor ecx, ecx	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4007bc1	          0x4c89cf	                             mov rdi, r9	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4007bc4	      0x448944244c	             mov dword [rsp + 0x4c], r8d	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4007bc9	      0x4489542440	            mov dword [rsp + 0x40], r10d	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4007bce	        0x894c2438	             mov dword [rsp + 0x38], ecx	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4007bd2	      0x4c894c2430	              mov qword [rsp + 0x30], r9	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4007bd7	      0xe8e4b9ffff	call sym.print_displacement.constprop.17	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4007bdc	    0x488b3d000000	            mov rdi, qword [0x04007be3] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007be3	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4007be8	      0xe800000000	                          call 0x4007bed	       117	string3.h	FUNCTION_108	CALL_3
0x4007bed	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4007bf2	    0x488905000000	            mov qword [0x04007bf9], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007bf9	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4007bfe	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4007c02	      0x448b44244c	            mov r8d, dword [rsp + 0x4c] 	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4007c07	          0x4585d2	                         test r10d, r10d	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4007c0a	     0xf84ef040000	                            je 0x40080ff	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4007c10	    0x833d00000000	               cmp dword [0x04007c17], 2	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4007c17	    0x486335000000	         movsxd rsi, dword [0x04007c1e] 	     15836	i386-dis.c	FUNCTION_32
0x4007c1e	          0x4489ca	                            mov edx, r9d	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4007c21	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4007c26	          0x4889c7	                            mov rdi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4007c29	      0x4489442440	             mov dword [rsp + 0x40], r8d	       117	string3.h	FUNCTION_108	CALL_3
0x4007c2e	        0x894c2438	             mov dword [rsp + 0x38], ecx	       117	string3.h	FUNCTION_108	CALL_3
0x4007c32	      0x4c894c2430	              mov qword [rsp + 0x30], r9	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4007c37	        0x490f44d1	                           cmove rdx, r9	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4007c3b	    0x8934b5000000	                  mov dword [rsi*4], esi	     15836	i386-dis.c	FUNCTION_32
0x4007c42	          0x4585d2	                         test r10d, r10d	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4007c45	    0x488914f50000	                  mov qword [rsi*8], rdx	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4007c4d	    0x48c704f50000	                    mov qword [rsi*8], 1	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4007c59	      0xba00000000	                              mov edx, 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4007c5e	      0xbe00000000	                              mov esi, 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4007c63	        0x480f45f2	                         cmovne rsi, rdx	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4007c67	      0xe800000000	                          call 0x4007c6c	       117	string3.h	FUNCTION_108	CALL_3
0x4007c6c	    0x440fb63d0000	          movzx r15d, byte [0x04007c74] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007c74	    0x488905000000	            mov qword [0x04007c7b], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007c7b	    0x41ba01000000	                             mov r10d, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007c81	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007c86	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007c8a	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007c8f	      0xe936f7ffff	                           jmp 0x40073ca	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007c94	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007c98	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007c9c	          0x4531e4	                          xor r12d, r12d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007c9f	    0x440fb63d0000	          movzx r15d, byte [0x04007ca7] 	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007ca7	          0x4409f0	                            or eax, r14d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007caa	        0x410f95c4	                              setne r12b	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007cae	      0xe901f7ffff	                           jmp 0x40073b4	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007cb3	       0xf1f440000	                   nop dword [rax + rax]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007cb8	    0x833d00000000	               cmp dword [0x04007cbf], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4007cbf	      0x4489542430	            mov dword [rsp + 0x30], r10d	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4007cc4	     0xf843e010000	                            je 0x4007e08	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4007cca	          0x4589c8	                            mov r8d, r9d	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007ccd	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007cd2	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007cd7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007cdc	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007ce1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007ce3	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007ce8	      0xe800000000	                          call 0x4007ced	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007ced	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007cf2	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007cf7	    0x488b3d000000	            mov rdi, qword [0x04007cfe] 	       117	string3.h	FUNCTION_108	CALL_3
0x4007cfe	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4007d03	      0x4489542418	            mov dword [rsp + 0x18], r10d	       117	string3.h	FUNCTION_108	CALL_3
0x4007d08	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       117	string3.h	FUNCTION_108	CALL_3
0x4007d0d	          0x4531e4	                          xor r12d, r12d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d10	      0xe800000000	                          call 0x4007d15	       117	string3.h	FUNCTION_108	CALL_3
0x4007d15	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d1a	    0x488905000000	            mov qword [0x04007d21], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d21	            0x31c9	                            xor ecx, ecx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d23	    0x440fb63d0000	          movzx r15d, byte [0x04007d2b] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d2b	    0xc74424180000	               mov dword [rsp + 0x18], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d33	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d38	          0x4589d0	                           mov r8d, r10d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d3b	          0x4531d2	                          xor r10d, r10d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d3e	      0xe987f6ffff	                           jmp 0x40073ca	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d43	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4007d48	            0x31c0	                            xor eax, eax	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4007d4a	    0x813d00000000	           cmp dword [0x04007d54], 0x80 	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4007d54	           0xf94c0	                                 sete al	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4007d57	          0x4129c4	                           sub r12d, eax	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4007d5a	      0xe9f0f1ffff	                           jmp 0x4006f4f	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4007d5f	              0x90	                                     nop	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4007d60	        0x4d8d5908	                       lea r11, [r9 + 8]	       203	i386-dis.c	FUNCTION_1
0x4007d64	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x4007d67	        0x498d511c	                    lea rdx, [r9 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4007d6b	          0x4c29d8	                            sub rax, r11	       203	i386-dis.c	FUNCTION_1
0x4007d6e	        0x49034120	              add rax, qword [r9 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4007d72	          0x4939d0	                             cmp r8, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4007d75	          0x4989c7	                            mov r15, rax	       203	i386-dis.c	FUNCTION_1
0x4007d78	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4007d7d	     0xf8635020000	                           jbe 0x4007fb8	       205	i386-dis.c	FUNCTION_1	IF_1
0x4007d83	          0x4939f3	                            cmp r11, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007d86	            0x7516	                           jne 0x4007d9e	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007d88	      0x4c894c2408	                 mov qword [rsp + 8], r9	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007d8d	          0x4c89d2	                            mov rdx, r10	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007d90	          0x4c89fe	                            mov rsi, r15	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007d93	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007d95	        0x41ff5278	                 call qword [r10 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007d99	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007d9e	        0x498d7930	                    lea rdi, [r9 + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4007da2	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4007da7	      0xe800000000	                          call 0x4007dac	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4007dac	         0xf1f4000	                         nop dword [rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4007db0	    0x440fb63d0000	          movzx r15d, byte [0x04007db8] 	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4007db8	          0x4589d0	                           mov r8d, r10d	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4007dbb	          0x4584ff	                         test r15b, r15b	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4007dbe	     0xf84bc010000	                            je 0x4007f80	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4007dc4	            0x31c9	                            xor ecx, ecx	     15417	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4007dc6	    0xc74424180100	               mov dword [rsp + 0x18], 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4007dce	    0x41bc01000000	                             mov r12d, 1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007dd4	      0xe9f1f5ffff	                           jmp 0x40073ca	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007dd9	     0xf1f80000000	                         nop dword [rax]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007de0	          0x83fd01	                              cmp ebp, 1	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007de3	     0xf84b2f7ffff	                            je 0x400759b	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007de9	        0x488d5001	                      lea rdx, [rax + 1]	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007ded	          0xc6002d	                    mov byte [rax], 0x2d	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007df0	        0xc6400100	                   mov byte [rax + 1], 0	     15597	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007df4	          0x49f7dd	                                 neg r13	     15598	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007df7	    0x488915000000	            mov qword [0x04007dfe], rdx 	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007dfe	      0xe998f7ffff	                           jmp 0x400759b	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007e03	       0xf1f440000	                   nop dword [rax + rax]	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4007e08	      0x4c8d642450	                   lea r12, [rsp + 0x50]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e0d	          0x4d89c8	                              mov r8, r9	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e10	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e15	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e1a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e1f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e21	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e24	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e29	    0xc60500000000	            mov byte [0x04007e30], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4007e30	    0xc60500000000	            mov byte [0x04007e37], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4007e37	      0xe800000000	                          call 0x4007e3c	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e3c	       0xfb6542450	           movzx edx, byte [rsp + 0x50] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e41	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007e43	      0x498d742401	                      lea rsi, [r12 + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e48	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e4d	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e52	            0xeb10	                           jmp 0x4007e64	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e54	         0xf1f4000	                         nop dword [rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e58	         0xfb61406	             movzx edx, byte [rsi + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e5c	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e60	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e62	            0x7408	                            je 0x4007e6c	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e64	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e67	          0x4863c8	                         movsxd rcx, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e6a	            0x74ec	                            je 0x4007e58	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007e6c	        0x498d340c	                    lea rsi, [r12 + rcx]	       110	string3.h	FUNCTION_107	CALL_3
0x4007e70	      0xba62000000	                           mov edx, 0x62	       110	string3.h	FUNCTION_107	CALL_3
0x4007e75	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4007e7a	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       110	string3.h	FUNCTION_107	CALL_3
0x4007e7f	      0x4489542418	            mov dword [rsp + 0x18], r10d	       110	string3.h	FUNCTION_107	CALL_3
0x4007e84	      0xe800000000	                          call 0x4007e89	       110	string3.h	FUNCTION_107	CALL_3
0x4007e89	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	       110	string3.h	FUNCTION_107	CALL_3
0x4007e8e	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	       110	string3.h	FUNCTION_107	CALL_3
0x4007e93	      0xe95ffeffff	                           jmp 0x4007cf7	       110	string3.h	FUNCTION_107	CALL_3
0x4007e98	     0xf1f84000000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_107	CALL_3
0x4007ea0	        0x4d8d7e08	                      lea r15, [r14 + 8]	       203	i386-dis.c	FUNCTION_1
0x4007ea4	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x4007ea7	        0x498d561c	                   lea rdx, [r14 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4007eab	          0x4c29f8	                            sub rax, r15	       203	i386-dis.c	FUNCTION_1
0x4007eae	        0x49034620	             add rax, qword [r14 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4007eb2	          0x4939d5	                            cmp r13, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4007eb5	          0x4889c5	                            mov rbp, rax	       203	i386-dis.c	FUNCTION_1
0x4007eb8	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4007ebd	     0xf86af010000	                           jbe 0x4008072	       205	i386-dis.c	FUNCTION_1	IF_1
0x4007ec3	          0x4939f7	                            cmp r15, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007ec6	            0x750c	                           jne 0x4007ed4	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007ec8	          0x4c89c2	                             mov rdx, r8	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007ecb	          0x4889ee	                            mov rsi, rbp	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007ece	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007ed0	        0x41ff5078	                  call qword [r8 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4007ed4	        0x498d7e30	                   lea rdi, [r14 + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4007ed8	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4007edd	      0xe800000000	                          call 0x4007ee2	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4007ee2	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4007ee8	    0x8b0500000000	            mov eax, dword [0x04007eee] 	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4007eee	            0x85c0	                           test eax, eax	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4007ef0	     0xf849cfbffff	                            je 0x4007a92	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4007ef6	          0x8d43c9	                   lea eax, [rbx - 0x37]	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4007ef9	          0x83f801	                              cmp eax, 1	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4007efc	     0xf8728f7ffff	                            ja 0x400762a	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4007f02	      0xe98bfbffff	                           jmp 0x4007a92	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4007f07	    0x660f1f840000	                    nop word [rax + rax]	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4007f10	      0x4c8d642450	                   lea r12, [rsp + 0x50]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f15	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f1a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f1f	          0x4d89c8	                              mov r8, r9	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f22	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f27	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f29	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f2c	    0xc60500000000	            mov byte [0x04007f33], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4007f33	    0xc60500000000	            mov byte [0x04007f3a], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4007f3a	      0xe800000000	                          call 0x4007f3f	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f3f	       0xfb6542450	           movzx edx, byte [rsp + 0x50] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f44	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4007f46	      0x498d742401	                      lea rsi, [r12 + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f4b	            0xeb0f	                           jmp 0x4007f5c	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f4d	           0xf1f00	                         nop dword [rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f50	         0xfb61406	             movzx edx, byte [rsi + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f54	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f58	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f5a	            0x7408	                            je 0x4007f64	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f5c	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f5f	          0x4863c8	                         movsxd rcx, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f62	            0x74ec	                            je 0x4007f50	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4007f64	        0x498d340c	                    lea rsi, [r12 + rcx]	       110	string3.h	FUNCTION_107	CALL_3
0x4007f68	      0xba62000000	                           mov edx, 0x62	       110	string3.h	FUNCTION_107	CALL_3
0x4007f6d	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4007f72	      0xe800000000	                          call 0x4007f77	       110	string3.h	FUNCTION_107	CALL_3
0x4007f77	      0xe9eaf5ffff	                           jmp 0x4007566	       110	string3.h	FUNCTION_107	CALL_3
0x4007f7c	         0xf1f4000	                         nop dword [rax]	       110	string3.h	FUNCTION_107	CALL_3
0x4007f80	    0xc74424180100	               mov dword [rsp + 0x18], 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4007f88	            0x31c9	                            xor ecx, ecx	     15417	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4007f8a	    0x41bc01000000	                             mov r12d, 1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007f90	      0xe92cfcffff	                           jmp 0x4007bc1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007f95	           0xf1f00	                         nop dword [rax]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4007f98	    0x488b05000000	            mov rax, qword [0x04007f9f] 	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007f9f	    0x41be01000000	                             mov r14d, 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4007fa5	      0x4889442428	             mov qword [rsp + 0x28], rax	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007faa	      0x4889442420	             mov qword [rsp + 0x20], rax	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007faf	      0xe998f8ffff	                           jmp 0x400784c	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007fb4	         0xf1f4000	                         nop dword [rax]	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4007fb8	          0x4c89c2	                             mov rdx, r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fbb	      0x4c895c2440	             mov qword [rsp + 0x40], r11	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fc0	      0x4c894c2438	              mov qword [rsp + 0x38], r9	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fc5	      0x4c89442430	              mov qword [rsp + 0x30], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fca	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fcd	          0x4c89d1	                            mov rcx, r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fd0	      0x4c89542418	             mov qword [rsp + 0x18], r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fd5	          0x4c89ff	                            mov rdi, r15	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fd8	        0x41ff5270	                 call qword [r10 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4007fdc	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4007fde	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4007fe3	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4007fe8	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4007fed	      0x4c8b5c2440	            mov r11, qword [rsp + 0x40] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4007ff2	     0xf8514010000	                           jne 0x400810c	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4007ff8	    0x488b05000000	            mov rax, qword [0x04007fff] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4007fff	          0x4d8901	                      mov qword [r9], r8	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008002	    0x440fb63d0000	          movzx r15d, byte [0x0400800a] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400800a	        0x4c8d4001	                       lea r8, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400800e	      0xe96ff6ffff	                           jmp 0x4007682	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008013	       0xf1f440000	                   nop dword [rax + rax]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008018	      0xba05000000	                              mov edx, 5	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400801d	    0x41bc06000000	                             mov r12d, 6	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4008023	      0xe922f9ffff	                           jmp 0x400794a	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4008028	     0xf1f84000000	                   nop dword [rax + rax]	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4008030	      0xba04000000	                              mov edx, 4	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4008035	    0x41bc05000000	                             mov r12d, 5	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400803b	      0xe90af9ffff	                           jmp 0x400794a	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4008040	    0x488b05000000	            mov rax, qword [0x04008047] 	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_35
0x4008047	    0x488b3d000000	            mov rdi, qword [0x0400804e] 	       117	string3.h	FUNCTION_108	CALL_3
0x400804e	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008052	      0xe800000000	                          call 0x4008057	       117	string3.h	FUNCTION_108	CALL_3
0x4008057	    0x41bb3a000000	                          mov r11d, 0x3a	       117	string3.h	FUNCTION_108	CALL_3
0x400805d	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008061	      0x66448958ff	                mov word [rax - 1], r11w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008066	    0x488905000000	            mov qword [0x0400806d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400806d	      0xe924f4ffff	                           jmp 0x4007496	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008072	          0x4c89ea	                            mov rdx, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008075	          0x4c89c1	                             mov rcx, r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008078	      0x4c89442408	                 mov qword [rsp + 8], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400807d	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008080	          0x4889ef	                            mov rdi, rbp	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008083	        0x41ff5070	                  call qword [r8 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008087	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4008089	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400808e	            0x7546	                           jne 0x40080d6	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4008090	    0x488b05000000	            mov rax, qword [0x04008097] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4008097	          0x4d892e	                    mov qword [r14], r13	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400809a	    0x440fb63d0000	          movzx r15d, byte [0x040080a2] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40080a2	    0x8b2d00000000	            mov ebp, dword [0x040080a8] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40080a8	        0x4c8d6801	                      lea r13, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40080ac	      0xe941f7ffff	                           jmp 0x40077f2	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40080b1	      0xb805000000	                              mov eax, 5	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40080b6	    0x41bc06000000	                             mov r12d, 6	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40080bc	      0xe967eeffff	                           jmp 0x4006f28	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40080c1	      0xb804000000	                              mov eax, 4	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40080c6	    0x41bc05000000	                             mov r12d, 5	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40080cc	      0xe957eeffff	                           jmp 0x4006f28	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40080d1	      0xe800000000	                          call 0x40080d6	     15661	i386-dis.c	FUNCTION_25
0x40080d6	          0x498b36	                    mov rsi, qword [r14]	     15661	i386-dis.c	FUNCTION_25
0x40080d9	      0xe9e5fdffff	                           jmp 0x4007ec3	     15661	i386-dis.c	FUNCTION_25
0x40080de	    0x41b801000000	                              mov r8d, 1	     15661	i386-dis.c	FUNCTION_25
0x40080e4	    0xc74424180000	               mov dword [rsp + 0x18], 0	     15661	i386-dis.c	FUNCTION_25
0x40080ec	      0xb901000000	                              mov ecx, 1	     15661	i386-dis.c	FUNCTION_25
0x40080f1	    0x41bc01000000	                             mov r12d, 1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40080f7	          0x4531d2	                          xor r10d, r10d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40080fa	      0xe9c2faffff	                           jmp 0x4007bc1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40080ff	    0x440fb63d0000	          movzx r15d, byte [0x04008107] 	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4008107	      0xe9bef2ffff	                           jmp 0x40073ca	     15444	i386-dis.c	FUNCTION_25	IF_9
0x400810c	          0x498b31	                     mov rsi, qword [r9]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x400810f	      0xe96ffcffff	                           jmp 0x4007d83	     15444	i386-dis.c	FUNCTION_25	IF_9
putop	CALL,8:IF,111:FOR,1:ELSE,41:WHILE,2:SWITCH,3:functions,0:DO,0	1444
0x4000200	            0x4157	                                push r15	     13983	i386-dis.c	FUNCTION_17
0x4000202	            0x4156	                                push r14	     13983	i386-dis.c	FUNCTION_17
0x4000204	            0x4155	                                push r13	     13983	i386-dis.c	FUNCTION_17
0x4000206	            0x4154	                                push r12	     13983	i386-dis.c	FUNCTION_17
0x4000208	              0x55	                                push rbp	     13983	i386-dis.c	FUNCTION_17
0x4000209	              0x53	                                push rbx	     13983	i386-dis.c	FUNCTION_17
0x400020a	        0x4883ec58	                           sub rsp, 0x58	     13983	i386-dis.c	FUNCTION_17
0x400020e	           0xfb617	                   movzx edx, byte [rdi]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000211	    0x64488b042528	                mov rax, qword fs:[0x28]	     13983	i386-dis.c	FUNCTION_17
0x400021a	      0x4889442448	             mov qword [rsp + 0x48], rax	     13983	i386-dis.c	FUNCTION_17
0x400021f	            0x31c0	                            xor eax, eax	     13983	i386-dis.c	FUNCTION_17
0x4000221	            0x84d2	                             test dl, dl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000223	     0xf8494160000	                            je 0x40018bd	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000229	    0x8b1d00000000	            mov ebx, dword [0x0400022f] 	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400022f	    0x8b0500000000	            mov eax, dword [0x04000235] 	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000235	          0x4189f7	                           mov r15d, esi	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4000238	    0x440fb6150000	          movzx r10d, byte [0x04000240] 	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x4000240	    0x8b2d00000000	            mov ebp, dword [0x04000246] 	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4000246	        0x4183e701	                             and r15d, 1	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x400024a	    0x448b35000000	           mov r14d, dword [0x04000251] 	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4000251	      0xc644241e00	                mov byte [rsp + 0x1e], 0	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000256	        0x895c243c	             mov dword [rsp + 0x3c], ebx	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400025a	            0x89f3	                            mov ebx, esi	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400025c	          0x4189c4	                           mov r12d, eax	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x400025f	          0x83e304	                              and ebx, 4	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000262	    0x4181e4000200	                         and r12d, 0x200	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000269	          0x83e508	                              and ebp, 8	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400026c	        0x895c2408	                mov dword [rsp + 8], ebx	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000270	     0xfb61d000000	           movzx ebx, byte [0x04000277] 	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4000277	            0x89c1	                            mov ecx, eax	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000279	    0xc744240c0100	                mov dword [rsp + 0xc], 1	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000281	        0x885c2438	               mov byte [rsp + 0x38], bl	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4000285	    0x8b1d00000000	            mov ebx, dword [0x0400028b] 	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400028b	        0x895c2414	             mov dword [rsp + 0x14], ebx	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400028f	            0x89c3	                            mov ebx, eax	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4000291	    0x81e300040000	                          and ebx, 0x400	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4000297	          0x4584d2	                         test r10b, r10b	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400029a	       0xf9544241f	                 setne byte [rsp + 0x1f]	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400029f	        0x4180fa01	                             cmp r10b, 1	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40002a3	        0x895c2410	             mov dword [rsp + 0x10], ebx	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40002a7	            0x19db	                            sbb ebx, ebx	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40002a9	    0x81e100080000	                          and ecx, 0x800	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40002af	        0x894c2424	             mov dword [rsp + 0x24], ecx	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x40002b3	     0xfbe0d000000	           movsx ecx, byte [0x040002ba] 	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40002ba	          0x83e308	                              and ebx, 8	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40002bd	          0x83c364	                           add ebx, 0x64	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40002c0	        0x885c243a	               mov byte [rsp + 0x3a], bl	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40002c4	    0x488b1d000000	            mov rbx, qword [0x040002cb] 	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40002cb	        0x894c2420	             mov dword [rsp + 0x20], ecx	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40002cf	            0x89c1	                            mov ecx, eax	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002d1	          0x83e128	                           and ecx, 0x28	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002d4	      0x48895c2428	             mov qword [rsp + 0x28], rbx	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002d9	          0x4989d8	                             mov r8, rbx	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002dc	          0x83f908	                              cmp ecx, 8	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002df	        0x894c2430	             mov dword [rsp + 0x30], ecx	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002e3	    0x8b1d00000000	            mov ebx, dword [0x040002e9] 	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002e9	        0x410f94c1	                                sete r9b	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002ed	          0x83f920	                           cmp ecx, 0x20	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002f0	           0xf94c1	                                 sete cl	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002f3	          0x83e020	                           and eax, 0x20	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40002f6	          0x83e602	                              and esi, 2	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40002f9	          0x4109c9	                             or r9d, ecx	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40002fc	        0x4180fa01	                             cmp r10b, 1	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000300	        0x89442434	             mov dword [rsp + 0x34], eax	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000304	            0x19c0	                            sbb eax, eax	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000306	      0x44884c2439	              mov byte [rsp + 0x39], r9b	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400030b	        0x89742418	             mov dword [rsp + 0x18], esi	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x400030f	          0x83e0fc	                     and eax, 0xfffffffc	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000312	          0x4531ed	                          xor r13d, r13d	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000315	          0x4531db	                          xor r11d, r11d	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000318	          0x83c077	                           add eax, 0x77	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x400031b	    0x41b901000000	                              mov r9d, 1	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000321	            0x31c9	                            xor ecx, ecx	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000323	        0x8844243b	               mov byte [rsp + 0x3b], al	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000327	            0x31f6	                            xor esi, esi	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000329	          0x8d42df	                   lea eax, [rdx - 0x21]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400032c	            0x3c5c	                            cmp al, 0x5c	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400032e	     0xf87e3000000	                            ja 0x4000417	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000334	         0xf1f4000	                         nop dword [rax]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000338	           0xfb6c0	                           movzx eax, al	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400033b	    0xff24c5000000	                       jmp qword [rax*8]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000342	    0x660f1f440000	                    nop word [rax + rax]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000348	            0x84d2	                             test dl, dl	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x400034a	          0x4889c7	                            mov rdi, rax	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x400034d	     0xf84ae0f0000	                            je 0x4001301	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x4000353	         0xfb65701	               movzx edx, byte [rdi + 1]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4000357	        0x488d4701	                      lea rax, [rdi + 1]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x400035b	          0x80fa7d	                            cmp dl, 0x7d	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x400035e	            0x75e8	                           jne 0x4000348	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4000360	         0xfb65702	               movzx edx, byte [rdi + 2]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4000364	          0x4889c7	                            mov rdi, rax	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x4000367	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000369	        0x4883c701	                              add rdi, 1	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400036d	            0x84d2	                             test dl, dl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400036f	            0x75b8	                           jne 0x4000329	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000371	     0xf1f80000000	                         nop dword [rax]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000378	          0x4584db	                         test r11b, r11b	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400037b	     0xf8506160000	                           jne 0x4001987	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000381	          0x4584ed	                         test r13b, r13b	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000384	            0x7406	                            je 0x400038c	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000386	    0x891d00000000	            mov dword [0x0400038c], ebx 	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400038c	      0x807c241e00	                cmp byte [rsp + 0x1e], 0	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000391	     0xf8432150000	                            je 0x40018c9	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000397	    0x448935000000	           mov dword [0x0400039e], r14d 	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400039e	      0xe926150000	                           jmp 0x40018c9	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x40003a3	       0xf1f440000	                   nop dword [rax + rax]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x40003a8	          0x4584d2	                         test r10b, r10b	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003ab	     0xf853f030000	                           jne 0x40006f0	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003b1	    0x833d00000000	               cmp dword [0x040003b8], 2	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003b8	     0xf8578020000	                           jne 0x4000636	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003be	          0x4585ff	                         test r15d, r15d	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003c1	            0x7508	                           jne 0x40003cb	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003c3	            0x85ed	                           test ebp, ebp	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003c5	     0xf84400d0000	                            je 0x400110b	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003cb	        0x41c60071	                     mov byte [r8], 0x71	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003cf	    0x41bb01000000	                             mov r11d, 1	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003d5	         0xfb65701	               movzx edx, byte [rdi + 1]	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003d9	        0x4983c001	                               add r8, 1	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003dd	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40003df	            0xeb1f	                           jmp 0x4000400	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003e1	     0xf1f80000000	                         nop dword [rax]	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x40003e8	          0x4584d2	                         test r10b, r10b	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40003eb	     0xf85c7090000	                           jne 0x4000db8	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40003f1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40003f5	      0xbe01000000	                              mov esi, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40003fa	    0x660f1f440000	                    nop word [rax + rax]	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000400	        0x4883c701	                              add rdi, 1	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000404	            0x84d2	                             test dl, dl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4000406	     0xf846cffffff	                            je 0x4000378	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400040c	          0x8d42df	                   lea eax, [rdx - 0x21]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400040f	            0x3c5c	                            cmp al, 0x5c	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000411	     0xf8621ffffff	                           jbe 0x4000338	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000417	          0x418810	                       mov byte [r8], dl	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400041a	    0x41bb01000000	                             mov r11d, 1	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000420	         0xfb65701	               movzx edx, byte [rdi + 1]	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000424	        0x4983c001	                               add r8, 1	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000428	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400042a	            0xebd4	                           jmp 0x4000400	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400042c	         0xf1f4000	                         nop dword [rax]	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000430	          0x4584d2	                         test r10b, r10b	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4000433	     0xf84270a0000	                            je 0x4000e60	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4000439	         0xfb65701	               movzx edx, byte [rdi + 1]	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x400043d	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400043f	            0xebbf	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000441	     0xf1f80000000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000448	          0x4584d2	                         test r10b, r10b	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x400044b	     0xf846f0a0000	                            je 0x4000ec0	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x4000451	         0xfb65701	               movzx edx, byte [rdi + 1]	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x4000455	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000457	            0xeba7	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000459	     0xf1f80000000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000460	            0x85ed	                           test ebp, ebp	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000462	     0xf8400070000	                            je 0x4000b68	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000468	        0x4183ce48	                           or r14d, 0x48	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400046c	          0x4584d2	                         test r10b, r10b	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400046f	        0x41c60071	                     mov byte [r8], 0x71	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4000473	        0x498d4001	                       lea rax, [r8 + 1]	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4000477	         0xfb65701	               movzx edx, byte [rdi + 1]	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400047b	     0xf84c0110000	                            je 0x4001641	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000481	            0x84d2	                             test dl, dl	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000483	     0xf840b0f0000	                            je 0x4001394	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000489	          0x4989c0	                             mov r8, rax	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400048c	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000491	    0x41bb01000000	                             mov r11d, 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000497	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000499	      0xe962ffffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400049e	            0x6690	                                     nop	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004a0	            0x85c9	                           test ecx, ecx	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x40004a2	     0xf85880a0000	                           jne 0x4000f30	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x40004a8	        0x4183f901	                              cmp r9d, 1	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x40004ac	     0xf857e0a0000	                           jne 0x4000f30	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x40004b2	          0x4584d2	                         test r10b, r10b	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x40004b5	     0xf853f0b0000	                           jne 0x4000ffa	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x40004bb	        0x8b442408	                mov eax, dword [rsp + 8]	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40004bf	            0x85c0	                           test eax, eax	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40004c1	     0xf85680d0000	                           jne 0x400122f	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40004c7	         0xfb65701	               movzx edx, byte [rdi + 1]	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x40004cb	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004cd	      0xe92effffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004d2	    0x660f1f440000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004d8	            0x85c9	                           test ecx, ecx	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x40004da	           0xf95c2	                                setne dl	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x40004dd	        0x4183f901	                              cmp r9d, 1	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x40004e1	           0xf95c0	                                setne al	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x40004e4	             0x8d0	                               or al, dl	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x40004e6	     0xf84bc050000	                            je 0x4000aa8	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x40004ec	          0x83f901	                              cmp ecx, 1	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40004ef	            0x7511	                           jne 0x4000502	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40004f1	        0x4183f902	                              cmp r9d, 2	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40004f5	            0x750b	                           jne 0x4000502	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40004f7	      0x807c244058	            cmp byte [rsp + 0x40], 0x58 	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40004fc	     0xf84db0f0000	                            je 0x40014dd	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000502	          0x4139c9	                            cmp r9d, ecx	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000505	     0xf86f60d0000	                           jbe 0x4001301	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400050b	          0x83f903	                              cmp ecx, 3	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400050e	     0xf87ed0d0000	                            ja 0x4001301	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000514	            0x89c8	                            mov eax, ecx	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000516	         0xfb65701	               movzx edx, byte [rdi + 1]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400051a	          0x83c101	                              add ecx, 1	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x400051d	      0xc64404405a	      mov byte [rsp + rax + 0x40], 0x5a 	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000522	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000524	      0xe9d7feffff	                           jmp 0x4000400	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000529	     0xf1f80000000	                         nop dword [rax]	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000530	          0x4584d2	                         test r10b, r10b	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x4000533	     0xf84bf080000	                            je 0x4000df8	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x4000539	         0xfb65701	               movzx edx, byte [rdi + 1]	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x400053d	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400053f	      0xe9bcfeffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000544	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000548	    0x833d00000000	               cmp dword [0x0400054f], 2	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x400054f	     0xf846e0c0000	                            je 0x40011c3	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x4000555	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000559	            0x85c0	                           test eax, eax	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x400055b	            0x740e	                            je 0x400056b	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x400055d	        0x41c60065	                     mov byte [r8], 0x65	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000561	    0x41bb01000000	                             mov r11d, 1	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000567	        0x4983c001	                               add r8, 1	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x400056b	         0xb5c2410	              or ebx, dword [rsp + 0x10]	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400056f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000573	    0x41bd01000000	                             mov r13d, 1	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000579	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400057b	      0xe980feffff	                           jmp 0x4000400	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000580	        0x8b442424	            mov eax, dword [rsp + 0x24] 	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000584	            0x85c0	                           test eax, eax	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000586	     0xf85bc080000	                           jne 0x4000e48	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x400058c	        0x41c6006e	                     mov byte [r8], 0x6e	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000590	    0x41bb01000000	                             mov r11d, 1	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000596	         0xfb65701	               movzx edx, byte [rdi + 1]	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x400059a	        0x4983c001	                               add r8, 1	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x400059e	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005a0	      0xe95bfeffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005a5	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005a8	        0x8b742420	            mov esi, dword [rsp + 0x20] 	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005ac	        0x3974240c	              cmp dword [rsp + 0xc], esi	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005b0	     0xf84020c0000	                            je 0x40011b8	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005b6	        0x41c60072	                     mov byte [r8], 0x72	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005ba	    0x41bb01000000	                             mov r11d, 1	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005c0	         0xfb65701	               movzx edx, byte [rdi + 1]	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005c4	        0x4983c001	                               add r8, 1	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x40005c8	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005ca	      0xe931feffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005cf	              0x90	                                     nop	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005d0	        0x4183c101	                              add r9d, 1	     14004	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005d4	         0xfb65701	               movzx edx, byte [rdi + 1]	     14004	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005d8	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005da	      0xe921feffff	                           jmp 0x4000400	     14005	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005df	              0x90	                                     nop	     14005	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005e0	         0xfb65701	               movzx edx, byte [rdi + 1]	     14005	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005e4	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     14007	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005ec	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005ee	      0xe90dfeffff	                           jmp 0x4000400	     14008	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005f3	       0xf1f440000	                   nop dword [rax + rax]	     14008	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005f8	         0xfb65701	               movzx edx, byte [rdi + 1]	     14008	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40005fc	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40005fe	      0xe9fdfdffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000603	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000608	          0x4584d2	                         test r10b, r10b	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x400060b	     0xf84d7040000	                            je 0x4000ae8	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x4000611	         0xfb65701	               movzx edx, byte [rdi + 1]	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x4000615	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000617	      0xe9e4fdffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400061c	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000620	          0x4584d2	                         test r10b, r10b	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000623	     0xf85c7000000	                           jne 0x40006f0	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000629	    0x833d00000000	               cmp dword [0x04000630], 2	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000630	     0xf84590c0000	                            je 0x400128f	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000636	          0x4585e4	                         test r12d, r12d	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000639	     0xf8531040000	                           jne 0x4000a70	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x400063f	            0x85ed	                           test ebp, ebp	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000641	     0xf84c90a0000	                            je 0x4001110	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000647	        0x41c60071	                     mov byte [r8], 0x71	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x400064b	        0x4183ce48	                           or r14d, 0x48	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x400064f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000653	        0x4983c001	                               add r8, 1	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4000657	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x400065c	    0x41bb01000000	                             mov r11d, 1	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4000662	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000664	      0xe997fdffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000669	     0xf1f80000000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000670	            0x85c9	                           test ecx, ecx	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000672	           0xf94c2	                                 sete dl	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000675	        0x4183f901	                              cmp r9d, 1	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000679	           0xf94c0	                                 sete al	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x400067c	            0x20d0	                              and al, dl	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x400067e	     0xf84ac060000	                            je 0x4000d30	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000684	          0x4584d2	                         test r10b, r10b	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000687	     0xf84e0080000	                            je 0x4000f6d	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x400068d	         0xfb65701	               movzx edx, byte [rdi + 1]	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000691	    0x41b901000000	                              mov r9d, 1	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000697	            0x31c9	                            xor ecx, ecx	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000699	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400069b	      0xe960fdffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006a0	          0x4584d2	                         test r10b, r10b	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x40006a3	     0xf8447030000	                            je 0x40009f0	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x40006a9	         0xfb65701	               movzx edx, byte [rdi + 1]	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x40006ad	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006af	      0xe94cfdffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006b4	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006b8	          0x4584d2	                         test r10b, r10b	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40006bb	     0xf84af060000	                            je 0x4000d70	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40006c1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40006c5	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006c7	      0xe934fdffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006cc	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006d0	            0x85c9	                           test ecx, ecx	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x40006d2	     0xf85c8040000	                           jne 0x4000ba0	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x40006d8	        0x4183f901	                              cmp r9d, 1	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x40006dc	     0xf85be040000	                           jne 0x4000ba0	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x40006e2	          0x4584d2	                         test r10b, r10b	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x40006e5	     0xf844bffffff	                            je 0x4000636	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x40006eb	       0xf1f440000	                   nop dword [rax + rax]	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x40006f0	            0x85ed	                           test ebp, ebp	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x40006f2	     0xf8440030000	                            je 0x4000a38	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x40006f8	         0xfb65701	               movzx edx, byte [rdi + 1]	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x40006fc	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006fe	      0xe9fdfcffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000703	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000708	          0x4584d2	                         test r10b, r10b	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x400070b	     0xf840f040000	                            je 0x4000b20	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x4000711	         0xfb65701	               movzx edx, byte [rdi + 1]	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x4000715	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000717	      0xe9e4fcffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400071c	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000720	          0x4584d2	                         test r10b, r10b	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000723	     0xf8487050000	                            je 0x4000cb0	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000729	         0xfb65701	               movzx edx, byte [rdi + 1]	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x400072d	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400072f	      0xe9ccfcffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000734	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000738	            0x85c9	                           test ecx, ecx	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x400073a	     0xf85c0050000	                           jne 0x4000d00	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000740	        0x4183f901	                              cmp r9d, 1	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000744	     0xf85b6050000	                           jne 0x4000d00	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x400074a	      0x807c243800	                cmp byte [rsp + 0x38], 0	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x400074f	     0xf841b020000	                            je 0x4000970	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x4000755	    0x8b0500000000	            mov eax, dword [0x0400075b] 	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x400075b	            0x85c0	                           test eax, eax	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x400075d	     0xf840d020000	                            je 0x4000970	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x4000763	          0x83f866	                           cmp eax, 0x66	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4000766	     0xf84730f0000	                            je 0x40016df	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x400076c	        0x41c60073	                     mov byte [r8], 0x73	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4000770	    0x41bb01000000	                             mov r11d, 1	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4000776	         0xfb65701	               movzx edx, byte [rdi + 1]	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x400077a	        0x4983c001	                               add r8, 1	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x400077e	    0x41b901000000	                              mov r9d, 1	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4000784	            0x31c9	                            xor ecx, ecx	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4000786	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000788	      0xe973fcffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400078d	           0xf1f00	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000790	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000794	      0xbe01000000	                              mov esi, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000799	      0xe962fcffff	                           jmp 0x4000400	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400079e	            0x6690	                                     nop	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40007a0	            0x85c9	                           test ecx, ecx	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x40007a2	     0xf85f0060000	                           jne 0x4000e98	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x40007a8	        0x4183f901	                              cmp r9d, 1	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x40007ac	     0xf85e6060000	                           jne 0x4000e98	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x40007b2	          0x4584d2	                         test r10b, r10b	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x40007b5	     0xf8403030000	                            je 0x4000abe	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x40007bb	         0xfb65701	               movzx edx, byte [rdi + 1]	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x40007bf	    0x41b901000000	                              mov r9d, 1	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x40007c5	            0x31c9	                            xor ecx, ecx	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x40007c7	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007c9	      0xe932fcffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007ce	            0x6690	                                     nop	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007d0	            0x85ed	                           test ebp, ebp	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40007d2	     0xf8470030000	                            je 0x4000b48	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40007d8	        0x41c60071	                     mov byte [r8], 0x71	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40007dc	        0x4183ce48	                           or r14d, 0x48	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40007e0	         0xfb65701	               movzx edx, byte [rdi + 1]	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40007e4	        0x4983c001	                               add r8, 1	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40007e8	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40007ed	    0x41bb01000000	                             mov r11d, 1	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x40007f3	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007f5	      0xe906fcffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007fa	    0x660f1f440000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000800	            0x85f6	                           test esi, esi	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000802	     0xf85a0010000	                           jne 0x40009a8	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000808	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x400080d	     0xf8495010000	                            je 0x40009a8	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000813	         0xfb65701	               movzx edx, byte [rdi + 1]	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000817	      0xe9e4fbffff	                           jmp 0x4000400	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x400081c	         0xf1f4000	                         nop dword [rax]	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x4000820	            0x85c9	                           test ecx, ecx	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x4000822	     0xf85b8030000	                           jne 0x4000be0	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x4000828	        0x4183f901	                              cmp r9d, 1	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x400082c	     0xf85ae030000	                           jne 0x4000be0	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x4000832	          0x4584d2	                         test r10b, r10b	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x4000835	     0xf843f070000	                            je 0x4000f7a	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x400083b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x400083f	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000841	      0xe9bafbffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000846	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000850	          0x4584d2	                         test r10b, r10b	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000853	     0xf8487060000	                            je 0x4000ee0	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000859	         0xfb65701	               movzx edx, byte [rdi + 1]	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x400085d	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400085f	      0xe99cfbffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000864	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000868	            0x85c9	                           test ecx, ecx	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400086a	     0xf8500040000	                           jne 0x4000c70	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000870	        0x4183f901	                              cmp r9d, 1	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000874	     0xf85f6030000	                           jne 0x4000c70	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x400087a	            0x85f6	                           test esi, esi	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400087c	     0xf857b010000	                           jne 0x40009fd	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000882	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000887	     0xf8470010000	                            je 0x40009fd	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400088d	         0xfb65701	               movzx edx, byte [rdi + 1]	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000891	      0xe96afbffff	                           jmp 0x4000400	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x40008a0	            0x85c9	                           test ecx, ecx	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x40008a2	            0x750a	                           jne 0x40008ae	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x40008a4	        0x4183f901	                              cmp r9d, 1	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x40008a8	     0xf84530a0000	                            je 0x4001301	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x40008ae	          0x83f901	                              cmp ecx, 1	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008b1	            0x7511	                           jne 0x40008c4	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008b3	        0x4183f902	                              cmp r9d, 2	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008b7	            0x750b	                           jne 0x40008c4	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008b9	      0x807c244058	            cmp byte [rsp + 0x40], 0x58 	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008be	     0xf84ef090000	                            je 0x40012b3	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008c4	          0x4139c9	                            cmp r9d, ecx	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008c7	     0xf86340a0000	                           jbe 0x4001301	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008cd	          0x83f903	                              cmp ecx, 3	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008d0	     0xf872b0a0000	                            ja 0x4001301	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008d6	            0x89c8	                            mov eax, ecx	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008d8	         0xfb65701	               movzx edx, byte [rdi + 1]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008dc	          0x83c101	                              add ecx, 1	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008df	      0xc644044059	      mov byte [rsp + rax + 0x40], 0x59 	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008e4	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40008e6	      0xe915fbffff	                           jmp 0x4000400	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008eb	       0xf1f440000	                   nop dword [rax + rax]	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40008f0	            0x85ed	                           test ebp, ebp	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40008f2	     0xf84d8030000	                            je 0x4000cd0	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40008f8	        0x41c6006f	                     mov byte [r8], 0x6f	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x40008fc	        0x4183ce48	                           or r14d, 0x48	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000900	         0xfb65701	               movzx edx, byte [rdi + 1]	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000904	        0x4983c001	                               add r8, 1	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4000908	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x400090d	    0x41bb01000000	                             mov r11d, 1	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4000913	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000915	      0xe9e6faffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400091a	    0x660f1f440000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000920	            0x85c9	                           test ecx, ecx	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000922	           0xf94c2	                                 sete dl	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000925	        0x4183f901	                              cmp r9d, 1	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000929	           0xf94c0	                                 sete al	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400092c	            0x20d0	                              and al, dl	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400092e	     0xf84ec020000	                            je 0x4000c20	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000934	            0x85ed	                           test ebp, ebp	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000936	     0xf84e6060000	                            je 0x4001022	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400093c	        0x4183ce48	                           or r14d, 0x48	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4000940	          0x4584d2	                         test r10b, r10b	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x4000943	     0xf85310a0000	                           jne 0x400137a	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x4000949	        0x41c6006c	                     mov byte [r8], 0x6c	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x400094d	        0x4983c001	                               add r8, 1	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x4000951	         0xfb65701	               movzx edx, byte [rdi + 1]	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x4000955	        0x8844241e	               mov byte [rsp + 0x1e], al	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000959	          0x4189c3	                           mov r11d, eax	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400095c	    0x41b901000000	                              mov r9d, 1	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000962	            0x31c9	                            xor ecx, ecx	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000964	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000966	      0xe995faffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400096b	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000970	          0x4585e4	                         test r12d, r12d	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4000973	     0xf851c080000	                           jne 0x4001195	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4000979	        0x41c60073	                     mov byte [r8], 0x73	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x400097d	        0x4983c001	                               add r8, 1	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x4000981	          0x4409e3	                            or ebx, r12d	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4000984	         0xfb65701	               movzx edx, byte [rdi + 1]	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4000988	    0x41bd01000000	                             mov r13d, 1	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x400098e	    0x41bb01000000	                             mov r11d, 1	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4000994	    0x41b901000000	                              mov r9d, 1	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x400099a	            0x31c9	                            xor ecx, ecx	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x400099c	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400099e	      0xe95dfaffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009a3	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009a8	          0x4585e4	                         test r12d, r12d	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009ab	            0x750c	                           jne 0x40009b9	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009ad	        0x8b742408	                mov esi, dword [rsp + 8]	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009b1	            0x85f6	                           test esi, esi	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009b3	     0xf84a3070000	                            je 0x400115c	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009b9	          0x4585ff	                         test r15d, r15d	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40009bc	     0xf8543060000	                           jne 0x4001005	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x40009c2	       0xfb644243b	           movzx eax, byte [rsp + 0x3b] 	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40009c7	        0x4983c001	                               add r8, 1	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40009cb	        0x418840ff	                   mov byte [r8 - 1], al	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x40009cf	          0x4409e3	                            or ebx, r12d	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009d2	         0xfb65701	               movzx edx, byte [rdi + 1]	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009d6	    0x41bd01000000	                             mov r13d, 1	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009dc	    0x41bb01000000	                             mov r11d, 1	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40009e2	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009e4	      0xe917faffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009e9	     0xf1f80000000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009f0	    0x833d00000000	               cmp dword [0x040009f7], 2	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x40009f7	     0xf84aa050000	                            je 0x4000fa7	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x40009fd	            0x85ed	                           test ebp, ebp	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x40009ff	     0xf84b3050000	                            je 0x4000fb8	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000a05	        0x4183ce48	                           or r14d, 0x48	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000a09	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000a0e	     0xf84f2070000	                            je 0x4001206	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000a14	        0x41c60071	                     mov byte [r8], 0x71	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a18	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a1d	        0x4983c001	                               add r8, 1	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a21	         0xfb65701	               movzx edx, byte [rdi + 1]	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a25	    0x41bb01000000	                             mov r11d, 1	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000a2b	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a2d	      0xe9cef9ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a32	    0x660f1f440000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a38	          0x4585e4	                         test r12d, r12d	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a3b	     0xf84d6050000	                            je 0x4001017	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a41	          0x4585ff	                         test r15d, r15d	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a44	            0x750e	                           jne 0x4000a54	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a46	        0x41c60077	                     mov byte [r8], 0x77	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a4a	    0x41bb01000000	                             mov r11d, 1	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a50	        0x4983c001	                               add r8, 1	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000a54	          0x4409e3	                            or ebx, r12d	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a57	         0xfb65701	               movzx edx, byte [rdi + 1]	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a5b	    0x41bd01000000	                             mov r13d, 1	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000a61	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a63	      0xe998f9ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a68	     0xf1f84000000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a70	            0x85ed	                           test ebp, ebp	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000a72	     0xf85cffbffff	                           jne 0x4000647	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000a78	          0x4585ff	                         test r15d, r15d	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000a7b	     0xf84a6060000	                            je 0x4001127	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000a81	        0x41c6006c	                     mov byte [r8], 0x6c	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000a85	        0x4983c001	                               add r8, 1	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000a89	          0x4409e3	                            or ebx, r12d	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000a8c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000a90	    0x41bd01000000	                             mov r13d, 1	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000a96	    0x41bb01000000	                             mov r11d, 1	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000a9c	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a9e	      0xe95df9ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000aa3	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000aa8	          0x4584d2	                         test r10b, r10b	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4000aab	     0xf859e050000	                           jne 0x400104f	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4000ab1	    0x833d00000000	               cmp dword [0x04000ab8], 2	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000ab8	     0xf84980b0000	                            je 0x4001656	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000abe	        0x8b442408	                mov eax, dword [rsp + 8]	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000ac2	            0x85c0	                           test eax, eax	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000ac4	     0xf8418070000	                            je 0x40011e2	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000aca	        0x41c6006c	                     mov byte [r8], 0x6c	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000ace	    0x41bb01000000	                             mov r11d, 1	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000ad4	         0xfb65701	               movzx edx, byte [rdi + 1]	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000ad8	        0x4983c001	                               add r8, 1	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000adc	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ade	      0xe91df9ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ae3	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ae8	    0x833d00000000	               cmp dword [0x04000aef], 2	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4000aef	     0xf8453070000	                            je 0x4001248	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4000af5	          0x4585e4	                         test r12d, r12d	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000af8	     0xf84af060000	                            je 0x40011ad	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000afe	          0x4585ff	                         test r15d, r15d	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4000b01	     0xf84dd080000	                            je 0x40013e4	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4000b07	          0x4409e3	                            or ebx, r12d	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000b0a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000b0e	    0x41bd01000000	                             mov r13d, 1	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4000b14	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b16	      0xe9e5f8ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b1b	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b20	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000b25	     0xf844d070000	                            je 0x4001278	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000b2b	        0x41c60062	                     mov byte [r8], 0x62	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000b2f	    0x41bb01000000	                             mov r11d, 1	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000b35	         0xfb65701	               movzx edx, byte [rdi + 1]	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000b39	        0x4983c001	                               add r8, 1	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000b3d	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b3f	      0xe9bcf8ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b44	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b48	        0x41c60064	                     mov byte [r8], 0x64	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4000b4c	    0x41bb01000000	                             mov r11d, 1	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4000b52	         0xfb65701	               movzx edx, byte [rdi + 1]	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4000b56	        0x4983c001	                               add r8, 1	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4000b5a	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b5c	      0xe99ff8ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b61	     0xf1f80000000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b68	          0x4585ff	                         test r15d, r15d	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x4000b6b	     0xf8575050000	                           jne 0x40010e6	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x4000b71	        0x498d4001	                       lea rax, [r8 + 1]	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4000b75	          0x4584d2	                         test r10b, r10b	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000b78	        0x41c60077	                     mov byte [r8], 0x77	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4000b7c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000b80	          0x4989c0	                             mov r8, rax	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000b83	     0xf850f0e0000	                           jne 0x4001998	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000b89	          0x4409e3	                            or ebx, r12d	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000b8c	    0x41bd01000000	                             mov r13d, 1	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000b92	    0x41bb01000000	                             mov r11d, 1	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000b98	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b9a	      0xe961f8ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b9f	              0x90	                                     nop	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ba0	          0x83f901	                              cmp ecx, 1	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000ba3	            0x7511	                           jne 0x4000bb6	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000ba5	        0x4183f902	                              cmp r9d, 2	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000ba9	            0x750b	                           jne 0x4000bb6	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bab	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bb0	     0xf84a6080000	                            je 0x400145c	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bb6	          0x4139c9	                            cmp r9d, ecx	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bb9	     0xf8642070000	                           jbe 0x4001301	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bbf	          0x83f903	                              cmp ecx, 3	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bc2	     0xf8739070000	                            ja 0x4001301	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bc8	            0x89c8	                            mov eax, ecx	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bca	         0xfb65701	               movzx edx, byte [rdi + 1]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bce	          0x83c101	                              add ecx, 1	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bd1	      0xc644044050	      mov byte [rsp + rax + 0x40], 0x50 	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bd6	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000bd8	      0xe923f8ffff	                           jmp 0x4000400	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000bdd	           0xf1f00	                         nop dword [rax]	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000be0	          0x83f901	                              cmp ecx, 1	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000be3	            0x7511	                           jne 0x4000bf6	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000be5	        0x4183f902	                              cmp r9d, 2	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000be9	            0x750b	                           jne 0x4000bf6	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000beb	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bf0	     0xf84ad080000	                            je 0x40014a3	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bf6	          0x4139c9	                            cmp r9d, ecx	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bf9	     0xf8602070000	                           jbe 0x4001301	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000bff	          0x83f903	                              cmp ecx, 3	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000c02	     0xf87f9060000	                            ja 0x4001301	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000c08	            0x89c8	                            mov eax, ecx	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000c0a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000c0e	          0x83c101	                              add ecx, 1	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000c11	      0xc644044053	      mov byte [rsp + rax + 0x40], 0x53 	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000c16	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c18	      0xe9e3f7ffff	                           jmp 0x4000400	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000c1d	           0xf1f00	                         nop dword [rax]	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4000c20	          0x83f901	                              cmp ecx, 1	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c23	            0x751b	                           jne 0x4000c40	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c25	        0x4183f902	                              cmp r9d, 2	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c29	            0x7515	                           jne 0x4000c40	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c2b	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c30	            0x3c58	                            cmp al, 0x58	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c32	     0xf8429090000	                            je 0x4001561	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c38	            0x3c4c	                            cmp al, 0x4c	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c3a	     0xf8421090000	                            je 0x4001561	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c40	          0x4139c9	                            cmp r9d, ecx	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c43	     0xf86b8060000	                           jbe 0x4001301	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c49	          0x83f903	                              cmp ecx, 3	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c4c	     0xf87af060000	                            ja 0x4001301	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c52	            0x89c8	                            mov eax, ecx	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c54	         0xfb65701	               movzx edx, byte [rdi + 1]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c58	          0x83c101	                              add ecx, 1	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c5b	      0xc644044057	      mov byte [rsp + rax + 0x40], 0x57 	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c60	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c62	      0xe999f7ffff	                           jmp 0x4000400	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c67	    0x660f1f840000	                    nop word [rax + rax]	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4000c70	          0x83f901	                              cmp ecx, 1	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c73	            0x7511	                           jne 0x4000c86	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c75	        0x4183f902	                              cmp r9d, 2	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c79	            0x750b	                           jne 0x4000c86	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c7b	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c80	     0xf8438080000	                            je 0x40014be	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c86	          0x4139c9	                            cmp r9d, ecx	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c89	     0xf8672060000	                           jbe 0x4001301	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c8f	          0x83f903	                              cmp ecx, 3	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c92	     0xf8769060000	                            ja 0x4001301	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c98	            0x89c8	                            mov eax, ecx	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c9a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000c9e	          0x83c101	                              add ecx, 1	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ca1	      0xc644044051	      mov byte [rsp + rax + 0x40], 0x51 	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ca6	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ca8	      0xe953f7ffff	                           jmp 0x4000400	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000cad	           0xf1f00	                         nop dword [rax]	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000cb0	        0x8b542408	                mov edx, dword [rsp + 8]	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000cb4	            0x85d2	                           test edx, edx	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000cb6	     0xf85f5030000	                           jne 0x40010b1	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000cbc	         0xfb65701	               movzx edx, byte [rdi + 1]	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000cc0	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cc2	      0xe939f7ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cc7	    0x660f1f840000	                    nop word [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cd0	          0x4584d2	                         test r10b, r10b	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000cd3	     0xf85c2030000	                           jne 0x400109b	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000cd9	        0x41c60064	                     mov byte [r8], 0x64	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4000cdd	        0x4983c001	                               add r8, 1	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4000ce1	          0x4409e3	                            or ebx, r12d	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4000ce4	         0xfb65701	               movzx edx, byte [rdi + 1]	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4000ce8	    0x41bd01000000	                             mov r13d, 1	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4000cee	    0x41bb01000000	                             mov r11d, 1	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x4000cf4	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cf6	      0xe905f7ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cfb	       0xf1f440000	                   nop dword [rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d00	          0x4139c9	                            cmp r9d, ecx	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d03	     0xf86f8050000	                           jbe 0x4001301	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d09	          0x83f903	                              cmp ecx, 3	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d0c	     0xf87ef050000	                            ja 0x4001301	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d12	            0x89c8	                            mov eax, ecx	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d14	         0xfb65701	               movzx edx, byte [rdi + 1]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d18	          0x83c101	                              add ecx, 1	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d1b	      0xc644044058	      mov byte [rsp + rax + 0x40], 0x58 	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d20	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d22	      0xe9d9f6ffff	                           jmp 0x4000400	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d27	    0x660f1f840000	                    nop word [rax + rax]	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4000d30	          0x83f901	                              cmp ecx, 1	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d33	            0x7511	                           jne 0x4000d46	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d35	        0x4183f902	                              cmp r9d, 2	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d39	            0x750b	                           jne 0x4000d46	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d3b	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d40	     0xf84f1060000	                            je 0x4001437	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d46	          0x4139c9	                            cmp r9d, ecx	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d49	     0xf86b2050000	                           jbe 0x4001301	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d4f	          0x83f903	                              cmp ecx, 3	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d52	     0xf87a9050000	                            ja 0x4001301	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d58	            0x89c8	                            mov eax, ecx	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d5a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d5e	          0x83c101	                              add ecx, 1	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d61	      0xc644044056	      mov byte [rsp + rax + 0x40], 0x56 	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d66	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d68	      0xe993f6ffff	                           jmp 0x4000400	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d6d	           0xf1f00	                         nop dword [rax]	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4000d70	      0x807c243900	                cmp byte [rsp + 0x39], 0	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000d75	     0xf8415030000	                            je 0x4001090	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000d7b	      0x448b5c2434	           mov r11d, dword [rsp + 0x34] 	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000d80	         0xb5c2430	              or ebx, dword [rsp + 0x30]	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000d84	        0x41c6002c	                     mov byte [r8], 0x2c	     14139	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000d88	      0x41c6400170	                 mov byte [r8 + 1], 0x70	     14140	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000d8d	          0x4585db	                         test r11d, r11d	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000d90	     0xf84c7050000	                            je 0x400135d	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000d96	    0x440fb65c2439	          movzx r11d, byte [rsp + 0x39] 	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000d9c	      0x41c6400274	                 mov byte [r8 + 2], 0x74	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000da1	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000da3	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000da7	        0x4983c003	                               add r8, 3	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000dab	          0x4589dd	                          mov r13d, r11d	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000dae	      0xe94df6ffff	                           jmp 0x4000400	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000db3	       0xf1f440000	                   nop dword [rax + rax]	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000db8	          0x4889fa	                            mov rdx, rdi	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000dbb	        0x4883c701	                              add rdi, 1	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000dbf	           0xfb607	                   movzx eax, byte [rdi]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000dc2	            0x3c7c	                            cmp al, 0x7c	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000dc4	            0x741e	                            je 0x4000de4	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000dc6	            0x3c7d	                            cmp al, 0x7d	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000dc8	          0x4889fa	                            mov rdx, rdi	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000dcb	     0xf8430050000	                            je 0x4001301	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000dd1	            0x84c0	                             test al, al	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000dd3	     0xf8428050000	                            je 0x4001301	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000dd9	        0x4883c701	                              add rdi, 1	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000ddd	           0xfb607	                   movzx eax, byte [rdi]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000de0	            0x3c7c	                            cmp al, 0x7c	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000de2	            0x75e2	                           jne 0x4000dc6	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000de4	         0xfb65202	               movzx edx, byte [rdx + 2]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000de8	      0xbe01000000	                              mov esi, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000ded	      0xe90ef6ffff	                           jmp 0x4000400	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000df2	    0x660f1f440000	                    nop word [rax + rax]	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000df8	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000dfc	            0x85c0	                           test eax, eax	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000dfe	     0xf8475020000	                            je 0x4001079	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000e04	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000e08	            0x85c0	                           test eax, eax	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000e0a	     0xf8457030000	                            je 0x4001167	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000e10	    0x833d00000000	               cmp dword [0x04000e17], 2	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000e17	           0xf94c0	                                 sete al	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000e1a	        0x4983c001	                               add r8, 1	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000e1e	        0x8d44806c	          lea eax, [rax + rax*4 + 0x6c] 	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000e22	        0x418840ff	                   mov byte [r8 - 1], al	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000e26	         0xb5c2410	              or ebx, dword [rsp + 0x10]	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000e2a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000e2e	    0x41bd01000000	                             mov r13d, 1	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000e34	    0x41bb01000000	                             mov r11d, 1	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000e3a	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e3c	      0xe9bff5ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e41	     0xf1f80000000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e48	          0x80cf08	                                or bh, 8	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000e4b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000e4f	    0x41bd01000000	                             mov r13d, 1	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000e55	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e57	      0xe9a4f5ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e5c	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e60	          0x4585e4	                         test r12d, r12d	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000e63	     0xf84f9010000	                            je 0x4001062	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000e69	          0x4585ff	                         test r15d, r15d	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4000e6c	     0xf8516030000	                           jne 0x4001188	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4000e72	        0x41c60077	                     mov byte [r8], 0x77	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x4000e76	        0x4983c001	                               add r8, 1	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x4000e7a	          0x4409e3	                            or ebx, r12d	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000e7d	         0xfb65701	               movzx edx, byte [rdi + 1]	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000e81	    0x41bd01000000	                             mov r13d, 1	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000e87	    0x41bb01000000	                             mov r11d, 1	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4000e8d	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e8f	      0xe96cf5ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e94	         0xf1f4000	                         nop dword [rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e98	          0x4139c9	                            cmp r9d, ecx	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000e9b	     0xf8660040000	                           jbe 0x4001301	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000ea1	          0x83f903	                              cmp ecx, 3	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000ea4	     0xf8757040000	                            ja 0x4001301	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000eaa	            0x89c8	                            mov eax, ecx	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000eac	         0xfb65701	               movzx edx, byte [rdi + 1]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000eb0	          0x83c101	                              add ecx, 1	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000eb3	      0xc64404404c	      mov byte [rsp + rax + 0x40], 0x4c 	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000eb8	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000eba	      0xe941f5ffff	                           jmp 0x4000400	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000ebf	              0x90	                                     nop	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000ec0	        0x41c6006c	                     mov byte [r8], 0x6c	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000ec4	    0x41bb01000000	                             mov r11d, 1	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000eca	         0xfb65701	               movzx edx, byte [rdi + 1]	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000ece	        0x4983c001	                               add r8, 1	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000ed2	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ed4	      0xe927f5ffff	                           jmp 0x4000400	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000ed9	     0xf1f80000000	                         nop dword [rax]	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000ee0	      0x418078ff73	                 cmp byte [r8 - 1], 0x73	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000ee5	            0x740c	                            je 0x4000ef3	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000ee7	        0x8b442408	                mov eax, dword [rsp + 8]	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000eeb	            0x85c0	                           test eax, eax	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000eed	     0xf84af020000	                            je 0x40011a2	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000ef3	            0x85ed	                           test ebp, ebp	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000ef5	     0xf85f2020000	                           jne 0x40011ed	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000efb	          0x4585ff	                         test r15d, r15d	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000efe	     0xf8402050000	                            je 0x4001406	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000f04	        0x41c6006c	                     mov byte [r8], 0x6c	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000f08	        0x4983c001	                               add r8, 1	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4000f0c	          0x4409e3	                            or ebx, r12d	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x4000f0f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x4000f13	    0x41bd01000000	                             mov r13d, 1	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x4000f19	    0x41bb01000000	                             mov r11d, 1	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x4000f1f	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f21	      0xe9daf4ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f30	          0x83f901	                              cmp ecx, 1	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f33	            0x7511	                           jne 0x4000f46	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f35	        0x4183f902	                              cmp r9d, 2	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f39	            0x750b	                           jne 0x4000f46	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f3b	      0x807c24404c	            cmp byte [rsp + 0x40], 0x4c 	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f40	     0xf84cf050000	                            je 0x4001515	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f46	          0x4139c9	                            cmp r9d, ecx	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f49	     0xf86b2030000	                           jbe 0x4001301	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f4f	          0x83f903	                              cmp ecx, 3	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f52	     0xf87a9030000	                            ja 0x4001301	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f58	            0x89c8	                            mov eax, ecx	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f5a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f5e	          0x83c101	                              add ecx, 1	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f61	      0xc644044042	      mov byte [rsp + rax + 0x40], 0x42 	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f66	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f68	      0xe993f4ffff	                           jmp 0x4000400	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000f6d	    0x833d00000000	               cmp dword [0x04000f74], 2	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4000f74	     0xf84ba010000	                            je 0x4001134	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4000f7a	        0x8b742408	                mov esi, dword [rsp + 8]	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4000f7e	            0x85f6	                           test esi, esi	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4000f80	     0xf84cb010000	                            je 0x4001151	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4000f86	            0x85ed	                           test ebp, ebp	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000f88	     0xf842b040000	                            je 0x40013b9	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000f8e	        0x41c60071	                     mov byte [r8], 0x71	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000f92	    0x41bb01000000	                             mov r11d, 1	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000f98	         0xfb65701	               movzx edx, byte [rdi + 1]	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000f9c	        0x4983c001	                               add r8, 1	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x4000fa0	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000fa2	      0xe959f4ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000fa7	          0x4585ff	                         test r15d, r15d	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000faa	     0xf8563040000	                           jne 0x4001413	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000fb0	            0x85ed	                           test ebp, ebp	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000fb2	     0xf855b040000	                           jne 0x4001413	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000fb8	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000fbd	     0xf84cd060000	                            je 0x4001690	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000fc3	          0x4585ff	                         test r15d, r15d	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000fc6	     0xf8456020000	                            je 0x4001222	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000fcc	        0x4180fa01	                             cmp r10b, 1	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000fd0	            0x19c0	                            sbb eax, eax	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000fd2	        0x4983c001	                               add r8, 1	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000fd6	          0x83e008	                              and eax, 8	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000fd9	          0x83c064	                           add eax, 0x64	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000fdc	        0x418840ff	                   mov byte [r8 - 1], al	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000fe0	          0x4409e3	                            or ebx, r12d	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4000fe3	         0xfb65701	               movzx edx, byte [rdi + 1]	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4000fe7	    0x41bd01000000	                             mov r13d, 1	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4000fed	    0x41bb01000000	                             mov r11d, 1	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4000ff3	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ff5	      0xe906f4ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ffa	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ffe	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001000	      0xe9fbf3ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001005	       0xfb644243a	           movzx eax, byte [rsp + 0x3a] 	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x400100a	        0x4983c001	                               add r8, 1	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x400100e	        0x418840ff	                   mov byte [r8 - 1], al	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4001012	      0xe9b8f9ffff	                           jmp 0x40009cf	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4001017	         0xfb65701	               movzx edx, byte [rdi + 1]	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x400101b	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400101d	      0xe9def3ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001022	          0x4585ff	                         test r15d, r15d	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x4001025	     0xf855c030000	                           jne 0x4001387	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x400102b	        0x41c60062	                     mov byte [r8], 0x62	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x400102f	        0x4983c001	                               add r8, 1	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x4001033	          0x4409e3	                            or ebx, r12d	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001036	         0xfb65701	               movzx edx, byte [rdi + 1]	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400103a	          0x4189c5	                           mov r13d, eax	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400103d	          0x4189c3	                           mov r11d, eax	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001040	    0x41b901000000	                              mov r9d, 1	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001046	            0x31c9	                            xor ecx, ecx	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001048	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400104a	      0xe9b1f3ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400104f	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001053	    0x41b901000000	                              mov r9d, 1	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4001059	            0x31c9	                            xor ecx, ecx	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x400105b	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400105d	      0xe99ef3ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001062	        0x8b442408	                mov eax, dword [rsp + 8]	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001066	            0x85c0	                           test eax, eax	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001068	     0xf85fbfdffff	                           jne 0x4000e69	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400106e	         0xfb65701	               movzx edx, byte [rdi + 1]	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001072	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001074	      0xe987f3ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001079	        0x8b442408	                mov eax, dword [rsp + 8]	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400107d	            0x85c0	                           test eax, eax	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400107f	     0xf857ffdffff	                           jne 0x4000e04	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4001085	         0xfb65701	               movzx edx, byte [rdi + 1]	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4001089	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400108b	      0xe970f3ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001090	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001094	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001096	      0xe965f3ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400109b	          0x4585ff	                         test r15d, r15d	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x400109e	     0xf8435fcffff	                            je 0x4000cd9	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x40010a4	        0x41c60071	                     mov byte [r8], 0x71	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x40010a8	        0x4983c001	                               add r8, 1	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x40010ac	      0xe930fcffff	                           jmp 0x4000ce1	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x40010b1	            0x85ed	                           test ebp, ebp	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40010b3	     0xf8480020000	                            je 0x4001339	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40010b9	        0x4183ce48	                           or r14d, 0x48	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40010bd	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x40010c2	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x40010c7	     0xf8577020000	                           jne 0x4001344	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x40010cd	        0x41c60071	                     mov byte [r8], 0x71	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x40010d1	    0x41bb01000000	                             mov r11d, 1	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x40010d7	         0xfb65701	               movzx edx, byte [rdi + 1]	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x40010db	        0x4983c001	                               add r8, 1	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x40010df	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010e1	      0xe91af3ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010e6	          0x4584d2	                         test r10b, r10b	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x40010e9	     0xf8439020000	                            je 0x4001328	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x40010ef	        0x41c60064	                     mov byte [r8], 0x64	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x40010f3	         0xfb65701	               movzx edx, byte [rdi + 1]	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40010f7	        0x498d4001	                       lea rax, [r8 + 1]	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x40010fb	            0x84d2	                             test dl, dl	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40010fd	     0xf8496020000	                            je 0x4001399	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001103	          0x4989c0	                             mov r8, rax	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001106	      0xe97efaffff	                           jmp 0x4000b89	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400110b	          0x4585e4	                         test r12d, r12d	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x400110e	            0x7517	                           jne 0x4001127	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001110	        0x8b442408	                mov eax, dword [rsp + 8]	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001114	            0x85c0	                           test eax, eax	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001116	     0xf855cf9ffff	                           jne 0x4000a78	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x400111c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001120	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001122	      0xe9d9f2ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001127	        0x41c60077	                     mov byte [r8], 0x77	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x400112b	        0x4983c001	                               add r8, 1	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x400112f	      0xe955f9ffff	                           jmp 0x4000a89	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4001134	          0x4585ff	                         test r15d, r15d	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4001137	     0xf85a5040000	                           jne 0x40015e2	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x400113d	            0x85ed	                           test ebp, ebp	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x400113f	     0xf859d040000	                           jne 0x40015e2	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4001145	        0x8b442408	                mov eax, dword [rsp + 8]	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4001149	            0x85c0	                           test eax, eax	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x400114b	     0xf8532050000	                           jne 0x4001683	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4001151	         0xfb65701	               movzx edx, byte [rdi + 1]	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x4001155	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001157	      0xe9a4f2ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400115c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001160	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001162	      0xe999f2ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001167	    0x833d00000000	               cmp dword [0x0400116e], 2	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x400116e	      0xb86c000000	                           mov eax, 0x6c	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4001173	      0xbe77000000	                           mov esi, 0x77	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4001178	           0xf45c6	                         cmovne eax, esi	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x400117b	        0x4983c001	                               add r8, 1	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x400117f	        0x418840ff	                   mov byte [r8 - 1], al	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4001183	      0xe99efcffff	                           jmp 0x4000e26	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4001188	        0x41c6006c	                     mov byte [r8], 0x6c	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x400118c	        0x4983c001	                               add r8, 1	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4001190	      0xe9e5fcffff	                           jmp 0x4000e7a	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4001195	        0x41c60064	                     mov byte [r8], 0x64	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4001199	        0x4983c001	                               add r8, 1	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x400119d	      0xe9dff7ffff	                           jmp 0x4000981	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x40011a2	         0xfb65701	               movzx edx, byte [rdi + 1]	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x40011a6	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011a8	      0xe953f2ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011ad	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011b1	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011b3	      0xe948f2ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011b8	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011bc	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011be	      0xe93df2ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011c3	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40011c7	            0x85c0	                           test eax, eax	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40011c9	     0xf848ef3ffff	                            je 0x400055d	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40011cf	        0x41c60072	                     mov byte [r8], 0x72	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40011d3	    0x41bb01000000	                             mov r11d, 1	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40011d9	        0x4983c001	                               add r8, 1	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40011dd	      0xe989f3ffff	                           jmp 0x400056b	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40011e2	         0xfb65701	               movzx edx, byte [rdi + 1]	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40011e6	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011e8	      0xe913f2ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011ed	        0x41c6006c	                     mov byte [r8], 0x6c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011f1	    0x41bb01000000	                             mov r11d, 1	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40011f7	         0xfb65701	               movzx edx, byte [rdi + 1]	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40011fb	        0x4983c001	                               add r8, 1	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40011ff	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001201	      0xe9faf1ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001206	        0x8b542408	                mov edx, dword [rsp + 8]	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400120a	            0x85d2	                           test edx, edx	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400120c	     0xf8502f8ffff	                           jne 0x4000a14	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001212	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001217	         0xfb65701	               movzx edx, byte [rdi + 1]	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400121b	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400121d	      0xe9def1ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001222	        0x41c60077	                     mov byte [r8], 0x77	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x4001226	        0x4983c001	                               add r8, 1	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x400122a	      0xe9b1fdffff	                           jmp 0x4000fe0	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x400122f	        0x41c60062	                     mov byte [r8], 0x62	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4001233	    0x41bb01000000	                             mov r11d, 1	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4001239	         0xfb65701	               movzx edx, byte [rdi + 1]	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x400123d	        0x4983c001	                               add r8, 1	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4001241	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001243	      0xe9b8f1ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001248	      0x837c243c01	               cmp dword [rsp + 0x3c], 1	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400124d	     0xf8454030000	                            je 0x40015a7	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4001253	          0x4585ff	                         test r15d, r15d	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4001256	     0xf854b030000	                           jne 0x40015a7	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400125c	            0x85ed	                           test ebp, ebp	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x400125e	     0xf8543030000	                           jne 0x40015a7	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x4001264	          0x4585e4	                         test r12d, r12d	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4001267	     0xf8577010000	                           jne 0x40013e4	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x400126d	         0xfb65701	               movzx edx, byte [rdi + 1]	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4001271	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001273	      0xe988f1ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001278	        0x8b442408	                mov eax, dword [rsp + 8]	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x400127c	            0x85c0	                           test eax, eax	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x400127e	     0xf85a7f8ffff	                           jne 0x4000b2b	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4001284	         0xfb65701	               movzx edx, byte [rdi + 1]	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4001288	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400128a	      0xe971f1ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400128f	      0x837c243c01	               cmp dword [rsp + 0x3c], 1	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4001294	     0xf8524f1ffff	                           jne 0x40003be	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x400129a	        0x41c60071	                     mov byte [r8], 0x71	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x400129e	    0x41bb01000000	                             mov r11d, 1	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x40012a4	         0xfb65701	               movzx edx, byte [rdi + 1]	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x40012a8	        0x4983c001	                               add r8, 1	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x40012ac	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40012ae	      0xe94df1ffff	                           jmp 0x4000400	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x40012b3	      0x807c243800	                cmp byte [rsp + 0x38], 0	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x40012b8	            0x7447	                            je 0x4001301	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x40012ba	          0x4584d2	                         test r10b, r10b	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40012bd	     0xf8588020000	                           jne 0x400154b	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40012c3	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40012c8	     0xf84f2020000	                            je 0x40015c0	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40012ce	    0x8b0500000000	            mov eax, dword [0x040012d4] 	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40012d4	            0x85c0	                           test eax, eax	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40012d6	     0xf85e4020000	                           jne 0x40015c0	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40012dc	    0x8b0500000000	            mov eax, dword [0x040012e2] 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40012e2	      0x3d00010000	                          cmp eax, 0x100	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40012e7	     0xf8410060000	                            je 0x40018fd	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40012ed	      0x3d00020000	                          cmp eax, 0x200	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40012f2	     0xf84f1040000	                            je 0x40017e9	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40012f8	          0x83c080	             add eax, 0xffffffffffffff80	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40012fb	     0xf8420060000	                            je 0x4001921	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001301	          0x4584db	                         test r11b, r11b	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001304	     0xf85a0060000	                           jne 0x40019aa	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400130a	          0x4584ed	                         test r13b, r13b	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400130d	            0x7406	                            je 0x4001315	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400130f	    0x891d00000000	            mov dword [0x04001315], ebx 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001315	      0x807c241e00	                cmp byte [rsp + 0x1e], 0	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400131a	            0x7407	                            je 0x4001323	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400131c	    0x448935000000	           mov dword [0x04001323], r14d 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001323	      0xe800000000	                          call 0x4001328	     14499	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	CALL_7
0x4001328	        0x41c6006c	                     mov byte [r8], 0x6c	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x400132c	        0x4983c001	                               add r8, 1	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4001330	         0xfb65701	               movzx edx, byte [rdi + 1]	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4001334	      0xe950f8ffff	                           jmp 0x4000b89	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4001339	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x400133e	     0xf84bc030000	                            je 0x4001700	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x4001344	        0x41c60077	                     mov byte [r8], 0x77	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4001348	    0x41bb01000000	                             mov r11d, 1	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x400134e	         0xfb65701	               movzx edx, byte [rdi + 1]	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4001352	        0x4983c001	                               add r8, 1	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x4001356	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001358	      0xe9a3f0ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400135d	    0x440fb65c2439	          movzx r11d, byte [rsp + 0x39] 	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4001363	      0x41c640026e	                 mov byte [r8 + 2], 0x6e	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4001368	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400136a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400136e	        0x4983c003	                               add r8, 3	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4001372	          0x4589dd	                          mov r13d, r11d	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4001375	      0xe986f0ffff	                           jmp 0x4000400	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x400137a	        0x41c60064	                     mov byte [r8], 0x64	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x400137e	        0x4983c001	                               add r8, 1	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x4001382	      0xe9caf5ffff	                           jmp 0x4000951	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x4001387	        0x41c60077	                     mov byte [r8], 0x77	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x400138b	        0x4983c001	                               add r8, 1	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x400138f	      0xe99ffcffff	                           jmp 0x4001033	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x4001394	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001399	            0x85ed	                           test ebp, ebp	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x400139b	          0xc60065	                    mov byte [rax], 0x65	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400139e	        0x4c8d4001	                       lea r8, [rax + 1]	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40013a2	         0xfb65701	               movzx edx, byte [rdi + 1]	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40013a6	     0xf84ddf7ffff	                            je 0x4000b89	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40013ac	    0x41bb01000000	                             mov r11d, 1	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x40013b2	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013b4	      0xe947f0ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013b9	          0x4585ff	                         test r15d, r15d	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40013bc	     0xf84c1020000	                            je 0x4001683	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40013c2	        0x41c6006c	                     mov byte [r8], 0x6c	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40013c6	        0x4983c001	                               add r8, 1	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40013ca	          0x4409e3	                            or ebx, r12d	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40013cd	         0xfb65701	               movzx edx, byte [rdi + 1]	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40013d1	    0x41bd01000000	                             mov r13d, 1	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40013d7	    0x41bb01000000	                             mov r11d, 1	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x40013dd	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013df	      0xe91cf0ffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013e4	        0x41c60077	                     mov byte [r8], 0x77	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40013e8	    0x41bb01000000	                             mov r11d, 1	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40013ee	        0x4983c001	                               add r8, 1	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40013f2	          0x4409e3	                            or ebx, r12d	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40013f5	         0xfb65701	               movzx edx, byte [rdi + 1]	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40013f9	    0x41bd01000000	                             mov r13d, 1	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40013ff	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001401	      0xe9faefffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001406	        0x41c60077	                     mov byte [r8], 0x77	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400140a	        0x4983c001	                               add r8, 1	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x400140e	      0xe9f9faffff	                           jmp 0x4000f0c	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x4001413	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001418	     0xf8440040000	                            je 0x400185e	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400141e	        0x41c60071	                     mov byte [r8], 0x71	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001422	    0x41bb01000000	                             mov r11d, 1	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001428	         0xfb65701	               movzx edx, byte [rdi + 1]	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400142c	        0x4983c001	                               add r8, 1	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001430	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001432	      0xe9c9efffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001437	            0x85ed	                           test ebp, ebp	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x4001439	     0xf84f3f3ffff	                            je 0x4000832	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x400143f	        0x41c60061	                     mov byte [r8], 0x61	     14443	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001443	      0x41c6400162	                 mov byte [r8 + 1], 0x62	     14444	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001448	    0x41bb01000000	                             mov r11d, 1	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400144e	      0x41c6400273	                 mov byte [r8 + 2], 0x73	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001453	        0x4983c003	                               add r8, 3	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001457	      0xe9d6f3ffff	                           jmp 0x4000832	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400145c	          0x4585e4	                         test r12d, r12d	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x400145f	     0xf84a7010000	                            je 0x400160c	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4001465	            0x85ed	                           test ebp, ebp	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4001467	     0xf85a7010000	                           jne 0x4001614	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x400146d	          0x4585ff	                         test r15d, r15d	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4001470	     0xf8561030000	                           jne 0x40017d7	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4001476	        0x41c60077	                     mov byte [r8], 0x77	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x400147a	        0x4983c001	                               add r8, 1	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x400147e	          0x4409e3	                            or ebx, r12d	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4001481	         0xfb65701	               movzx edx, byte [rdi + 1]	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4001485	    0x41bd01000000	                             mov r13d, 1	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x400148b	    0x41bb01000000	                             mov r11d, 1	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4001491	    0x41b902000000	                              mov r9d, 2	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4001497	      0xb901000000	                              mov ecx, 1	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x400149c	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400149e	      0xe95defffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40014a3	    0x833d00000000	               cmp dword [0x040014aa], 2	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014aa	     0xf8582f3ffff	                           jne 0x4000832	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014b0	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014b4	            0x85c0	                           test eax, eax	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014b6	     0xf8576f3ffff	                           jne 0x4000832	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014bc	            0xeb81	                           jmp 0x400143f	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40014be	          0x4584d2	                         test r10b, r10b	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x40014c1	     0xf8497020000	                            je 0x400175e	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x40014c7	         0xfb65701	               movzx edx, byte [rdi + 1]	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x40014cb	    0x41b902000000	                              mov r9d, 2	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x40014d1	      0xb901000000	                              mov ecx, 1	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x40014d6	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40014d8	      0xe923efffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40014dd	      0x807c243800	                cmp byte [rsp + 0x38], 0	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x40014e2	     0xf8419feffff	                            je 0x4001301	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x40014e8	    0x8b3500000000	            mov esi, dword [0x040014ee] 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x40014ee	            0x85f6	                           test esi, esi	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x40014f0	     0xf840bfeffff	                            je 0x4001301	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x40014f6	          0x4584d2	                         test r10b, r10b	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40014f9	     0xf84a9010000	                            je 0x40016a8	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40014ff	         0xfb65701	               movzx edx, byte [rdi + 1]	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4001503	    0x41b902000000	                              mov r9d, 2	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4001509	      0xb901000000	                              mov ecx, 1	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x400150e	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001510	      0xe9ebeeffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001515	    0x833d00000000	               cmp dword [0x0400151c], 2	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400151c	     0xf8590efffff	                           jne 0x40004b2	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001522	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001526	            0x85c0	                           test eax, eax	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001528	     0xf8584efffff	                           jne 0x40004b2	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400152e	        0x41c60061	                     mov byte [r8], 0x61	     14057	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001532	      0x41c6400162	                 mov byte [r8 + 1], 0x62	     14058	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001537	    0x41bb01000000	                             mov r11d, 1	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400153d	      0x41c6400273	                 mov byte [r8 + 2], 0x73	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001542	        0x4983c003	                               add r8, 3	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x4001546	      0xe967efffff	                           jmp 0x40004b2	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400154b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x400154f	    0x41b902000000	                              mov r9d, 2	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001555	      0xb901000000	                              mov ecx, 1	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400155a	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400155c	      0xe99feeffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001561	      0x807c243800	                cmp byte [rsp + 0x38], 0	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4001566	     0xf8495fdffff	                            je 0x4001301	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x400156c	            0x3c58	                            cmp al, 0x58	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400156e	     0xf84b7010000	                            je 0x400172b	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001574	    0x833d00000000	               cmp dword [0x0400157b], 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x400157b	    0x41bb01000000	                             mov r11d, 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001581	    0x41b902000000	                              mov r9d, 2	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001587	      0xb901000000	                              mov ecx, 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x400158c	            0x19c0	                            sbb eax, eax	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x400158e	        0x4983c001	                               add r8, 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001592	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001594	          0x83e0f3	                     and eax, 0xfffffff3	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001597	          0x83c071	                           add eax, 0x71	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x400159a	        0x418840ff	                   mov byte [r8 - 1], al	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x400159e	         0xfb65701	               movzx edx, byte [rdi + 1]	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015a2	      0xe959eeffff	                           jmp 0x4000400	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x40015a7	        0x41c60071	                     mov byte [r8], 0x71	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015ab	    0x41bb01000000	                             mov r11d, 1	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015b1	         0xfb65701	               movzx edx, byte [rdi + 1]	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015b5	        0x4983c001	                               add r8, 1	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015b9	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40015bb	      0xe940eeffff	                           jmp 0x4000400	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015c0	        0x8b442408	                mov eax, dword [rsp + 8]	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015c4	            0x85c0	                           test eax, eax	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015c6	     0xf8510fdffff	                           jne 0x40012dc	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015cc	         0xfb65701	               movzx edx, byte [rdi + 1]	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015d0	    0x41b902000000	                              mov r9d, 2	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015d6	      0xb901000000	                              mov ecx, 1	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x40015db	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40015dd	      0xe91eeeffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40015e2	        0x8b542408	                mov edx, dword [rsp + 8]	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40015e6	            0x85d2	                           test edx, edx	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40015e8	     0xf84a7010000	                            je 0x4001795	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40015ee	        0x41c60071	                     mov byte [r8], 0x71	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40015f2	          0x4189c3	                           mov r11d, eax	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40015f5	         0xfb65701	               movzx edx, byte [rdi + 1]	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40015f9	        0x4983c001	                               add r8, 1	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40015fd	    0x41b901000000	                              mov r9d, 1	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001603	            0x31c9	                            xor ecx, ecx	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001605	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001607	      0xe9f4edffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400160c	            0x85ed	                           test ebp, ebp	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x400160e	     0xf8494010000	                            je 0x40017a8	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4001614	        0x41c60071	                     mov byte [r8], 0x71	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4001618	        0x4183ce48	                           or r14d, 0x48	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x400161c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4001620	        0x4983c001	                               add r8, 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4001624	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4001629	    0x41bb01000000	                             mov r11d, 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x400162f	    0x41b902000000	                              mov r9d, 2	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4001635	      0xb901000000	                              mov ecx, 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x400163a	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400163c	      0xe9bfedffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001641	          0x4989c0	                             mov r8, rax	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4001644	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4001649	    0x41bb01000000	                             mov r11d, 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400164f	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001651	      0xe9aaedffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001656	        0x8b442408	                mov eax, dword [rsp + 8]	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x400165a	            0x85c0	                           test eax, eax	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x400165c	     0xf8480fbffff	                            je 0x40011e2	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001662	        0x41c60071	                     mov byte [r8], 0x71	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001666	    0x41bb01000000	                             mov r11d, 1	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x400166c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001670	        0x4983c001	                               add r8, 1	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001674	    0x41b901000000	                              mov r9d, 1	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x400167a	            0x31c9	                            xor ecx, ecx	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x400167c	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400167e	      0xe97dedffff	                           jmp 0x4000400	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4001683	        0x41c60077	                     mov byte [r8], 0x77	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x4001687	        0x4983c001	                               add r8, 1	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x400168b	      0xe93afdffff	                           jmp 0x40013ca	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x4001690	        0x8b742408	                mov esi, dword [rsp + 8]	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001694	            0x85f6	                           test esi, esi	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001696	     0xf847bfbffff	                            je 0x4001217	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400169c	      0xe922f9ffff	                           jmp 0x4000fc3	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40016a1	     0xf1f80000000	                         nop dword [rax]	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40016a8	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016ad	            0x740e	                            je 0x40016bd	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016af	    0x8b0d00000000	            mov ecx, dword [0x040016b5] 	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016b5	            0x85c9	                           test ecx, ecx	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016b7	     0xf84b8010000	                            je 0x4001875	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016bd	        0x8b542408	                mov edx, dword [rsp + 8]	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016c1	            0x85d2	                           test edx, edx	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016c3	     0xf85ac010000	                           jne 0x4001875	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016c9	         0xfb65701	               movzx edx, byte [rdi + 1]	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016cd	    0x41b902000000	                              mov r9d, 2	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016d3	      0xb901000000	                              mov ecx, 1	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x40016d8	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016da	      0xe921edffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016df	        0x41c60064	                     mov byte [r8], 0x64	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40016e3	    0x41bb01000000	                             mov r11d, 1	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40016e9	         0xfb65701	               movzx edx, byte [rdi + 1]	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40016ed	        0x4983c001	                               add r8, 1	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40016f1	    0x41b901000000	                              mov r9d, 1	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40016f7	            0x31c9	                            xor ecx, ecx	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x40016f9	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016fb	      0xe900edffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001700	          0x4585ff	                         test r15d, r15d	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4001703	     0xf85c1000000	                           jne 0x40017ca	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4001709	        0x41c60077	                     mov byte [r8], 0x77	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x400170d	        0x4983c001	                               add r8, 1	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x4001711	          0x4409e3	                            or ebx, r12d	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x4001714	         0xfb65701	               movzx edx, byte [rdi + 1]	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x4001718	    0x41bd01000000	                             mov r13d, 1	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x400171e	    0x41bb01000000	                             mov r11d, 1	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x4001724	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001726	      0xe9d5ecffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400172b	    0x833d00000000	               cmp dword [0x04001732], 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001732	    0x41bb01000000	                             mov r11d, 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001738	    0x41b902000000	                              mov r9d, 2	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400173e	      0xb901000000	                              mov ecx, 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001743	            0x19c0	                            sbb eax, eax	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001745	        0x4983c001	                               add r8, 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001749	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400174b	          0x83e00f	                            and eax, 0xf	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400174e	          0x83c064	                           add eax, 0x64	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001751	        0x418840ff	                   mov byte [r8 - 1], al	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001755	         0xfb65701	               movzx edx, byte [rdi + 1]	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001759	      0xe9a2ecffff	                           jmp 0x4000400	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400175e	      0x837c241403	               cmp dword [rsp + 0x14], 3	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001763	     0xf84a4000000	                            je 0x400180d	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001769	            0x85ed	                           test ebp, ebp	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x400176b	     0xf85c0000000	                           jne 0x4001831	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001771	        0x41c6006c	                     mov byte [r8], 0x6c	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4001775	    0x41bb01000000	                             mov r11d, 1	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x400177b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x400177f	        0x4983c001	                               add r8, 1	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4001783	    0x41b902000000	                              mov r9d, 2	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4001789	      0xb901000000	                              mov ecx, 1	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x400178e	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001790	      0xe96becffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001795	         0xfb65701	               movzx edx, byte [rdi + 1]	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001799	    0x41b901000000	                              mov r9d, 1	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400179f	            0x31c9	                            xor ecx, ecx	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x40017a1	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017a3	      0xe958ecffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017a8	        0x8b442408	                mov eax, dword [rsp + 8]	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017ac	            0x85c0	                           test eax, eax	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017ae	     0xf85b9fcffff	                           jne 0x400146d	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017b4	         0xfb65701	               movzx edx, byte [rdi + 1]	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017b8	    0x41b902000000	                              mov r9d, 2	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017be	      0xb901000000	                              mov ecx, 1	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x40017c3	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017c5	      0xe936ecffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017ca	        0x41c6006c	                     mov byte [r8], 0x6c	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40017ce	        0x4983c001	                               add r8, 1	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40017d2	      0xe93affffff	                           jmp 0x4001711	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x40017d7	       0xfb644243a	           movzx eax, byte [rsp + 0x3a] 	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x40017dc	        0x4983c001	                               add r8, 1	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x40017e0	        0x418840ff	                   mov byte [r8 - 1], al	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x40017e4	      0xe995fcffff	                           jmp 0x400147e	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x40017e9	    0x8b0500000000	            mov eax, dword [0x040017ef] 	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40017ef	            0x85c0	                           test eax, eax	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40017f1	     0xf840afbffff	                            je 0x4001301	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40017f7	         0xfb65701	               movzx edx, byte [rdi + 1]	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40017fb	    0x41b902000000	                              mov r9d, 2	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001801	      0xb901000000	                              mov ecx, 1	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001806	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001808	      0xe9f3ebffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400180d	      0x448b4c2408	                mov r9d, dword [rsp + 8]	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001812	          0x4585c9	                           test r9d, r9d	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001815	     0xf854effffff	                           jne 0x4001769	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400181b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400181f	    0x41b902000000	                              mov r9d, 2	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4001825	      0xb901000000	                              mov ecx, 1	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x400182a	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400182c	      0xe9cfebffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001831	        0x41c60071	                     mov byte [r8], 0x71	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001835	        0x4183ce48	                           or r14d, 0x48	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001839	         0xfb65701	               movzx edx, byte [rdi + 1]	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x400183d	        0x4983c001	                               add r8, 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001841	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001846	    0x41bb01000000	                             mov r11d, 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x400184c	    0x41b902000000	                              mov r9d, 2	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001852	      0xb901000000	                              mov ecx, 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4001857	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001859	      0xe9a2ebffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400185e	        0x8b442408	                mov eax, dword [rsp + 8]	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001862	            0x85c0	                           test eax, eax	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4001864	     0xf85b4fbffff	                           jne 0x400141e	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400186a	         0xfb65701	               movzx edx, byte [rdi + 1]	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x400186e	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001870	      0xe98bebffff	                           jmp 0x4000400	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001875	    0x8b1500000000	            mov edx, dword [0x0400187b] 	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400187b	    0x81fa00010000	                          cmp edx, 0x100	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001881	     0xf84df000000	                            je 0x4001966	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001887	    0x81fa00020000	                          cmp edx, 0x200	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400188d	     0xf84b2000000	                            je 0x4001945	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001893	          0x83c280	             add edx, 0xffffffffffffff80	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001896	     0xf8565faffff	                           jne 0x4001301	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400189c	        0x41c60078	                     mov byte [r8], 0x78	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018a0	          0x4189c3	                           mov r11d, eax	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018a3	         0xfb65701	               movzx edx, byte [rdi + 1]	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018a7	        0x4983c001	                               add r8, 1	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018ab	    0x41b902000000	                              mov r9d, 2	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018b1	      0xb901000000	                              mov ecx, 1	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018b6	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40018b8	      0xe943ebffff	                           jmp 0x4000400	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018bd	    0x488b05000000	            mov rax, qword [0x040018c4] 	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018c4	      0x4889442428	             mov qword [rsp + 0x28], rax	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40018c9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     14569	i386-dis.c	FUNCTION_17
0x40018ce	          0xc60000	                       mov byte [rax], 0	     14569	i386-dis.c	FUNCTION_17
0x40018d1	    0x488905000000	            mov qword [0x040018d8], rax 	     14570	i386-dis.c	FUNCTION_17
0x40018d8	            0x31c0	                            xor eax, eax	     14572	i386-dis.c	FUNCTION_17
0x40018da	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	     14572	i386-dis.c	FUNCTION_17
0x40018df	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     14572	i386-dis.c	FUNCTION_17
0x40018e8	     0xf85b7000000	                           jne 0x40019a5	     14572	i386-dis.c	FUNCTION_17
0x40018ee	        0x4883c458	                           add rsp, 0x58	     14572	i386-dis.c	FUNCTION_17
0x40018f2	              0x5b	                                 pop rbx	     14572	i386-dis.c	FUNCTION_17
0x40018f3	              0x5d	                                 pop rbp	     14572	i386-dis.c	FUNCTION_17
0x40018f4	            0x415c	                                 pop r12	     14572	i386-dis.c	FUNCTION_17
0x40018f6	            0x415d	                                 pop r13	     14572	i386-dis.c	FUNCTION_17
0x40018f8	            0x415e	                                 pop r14	     14572	i386-dis.c	FUNCTION_17
0x40018fa	            0x415f	                                 pop r15	     14572	i386-dis.c	FUNCTION_17
0x40018fc	              0xc3	                                     ret	     14572	i386-dis.c	FUNCTION_17
0x40018fd	        0x41c60079	                     mov byte [r8], 0x79	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001901	    0x41bb01000000	                             mov r11d, 1	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001907	         0xfb65701	               movzx edx, byte [rdi + 1]	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400190b	        0x4983c001	                               add r8, 1	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400190f	    0x41b902000000	                              mov r9d, 2	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001915	      0xb901000000	                              mov ecx, 1	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400191a	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400191c	      0xe9dfeaffff	                           jmp 0x4000400	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001921	        0x41c60078	                     mov byte [r8], 0x78	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001925	    0x41bb01000000	                             mov r11d, 1	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400192b	         0xfb65701	               movzx edx, byte [rdi + 1]	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400192f	        0x4983c001	                               add r8, 1	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001933	    0x41b902000000	                              mov r9d, 2	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001939	      0xb901000000	                              mov ecx, 1	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400193e	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001940	      0xe9bbeaffff	                           jmp 0x4000400	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001945	        0x41c6007a	                     mov byte [r8], 0x7a	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001949	          0x4189c3	                           mov r11d, eax	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400194c	         0xfb65701	               movzx edx, byte [rdi + 1]	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001950	        0x4983c001	                               add r8, 1	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001954	    0x41b902000000	                              mov r9d, 2	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400195a	      0xb901000000	                              mov ecx, 1	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400195f	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001961	      0xe99aeaffff	                           jmp 0x4000400	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001966	        0x41c60079	                     mov byte [r8], 0x79	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400196a	          0x4189c3	                           mov r11d, eax	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400196d	         0xfb65701	               movzx edx, byte [rdi + 1]	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001971	        0x4983c001	                               add r8, 1	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001975	    0x41b902000000	                              mov r9d, 2	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400197b	      0xb901000000	                              mov ecx, 1	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001980	            0x31f6	                            xor esi, esi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001982	      0xe979eaffff	                           jmp 0x4000400	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001987	    0x4c8905000000	              mov qword [0x0400198e], r8	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400198e	      0x4c89442428	              mov qword [rsp + 0x28], r8	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001993	      0xe9e9e9ffff	                           jmp 0x4000381	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4001998	            0x84d2	                             test dl, dl	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x400199a	     0xf84e9f1ffff	                            je 0x4000b89	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019a0	      0xe95ef7ffff	                           jmp 0x4001103	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019a5	      0xe800000000	                          call 0x40019aa	     14572	i386-dis.c	FUNCTION_17
0x40019aa	    0x4c8905000000	              mov qword [0x040019b1], r8	     14572	i386-dis.c	FUNCTION_17
0x40019b1	      0xe954f9ffff	                           jmp 0x400130a	     14572	i386-dis.c	FUNCTION_17
OP_Mwait	CALL,2:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	21
0x4001a40	    0x803d00000000	                cmp byte [0x04001a47], 0	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4001a47	              0x53	                                push rbx	     16866	i386-dis.c	FUNCTION_65
0x4001a48	            0x7545	                           jne 0x4001a8f	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4001a4a	    0x833d00000000	               cmp dword [0x04001a51], 2	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001a51	    0x488b1d000000	            mov rbx, qword [0x04001a58] 	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001a58	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_107	CALL_3
0x4001a5d	    0x480f451d0000	          cmovne rbx, qword [0x04001a65]	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001a65	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001a6a	          0x488b33	                    mov rsi, qword [rbx]	       110	string3.h	FUNCTION_107	CALL_3
0x4001a6d	      0xe800000000	                          call 0x4001a72	       110	string3.h	FUNCTION_107	CALL_3
0x4001a72	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x4001a76	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_107	CALL_3
0x4001a7b	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001a80	      0xe800000000	                          call 0x4001a85	       110	string3.h	FUNCTION_107	CALL_3
0x4001a85	    0xc70500000000	               mov dword [0x04001a8f], 1	     16874	i386-dis.c	FUNCTION_65	IF_1
0x4001a8f	    0x803d00000000	                cmp byte [0x04001a96], 0	     16877	i386-dis.c	FUNCTION_65
0x4001a96	            0x740a	                            je 0x4001aa2	     16877	i386-dis.c	FUNCTION_65
0x4001a98	    0x488305000000	               add qword [0x04001aa0], 1	     16878	i386-dis.c	FUNCTION_65
0x4001aa0	              0x5b	                                 pop rbx	     16879	i386-dis.c	FUNCTION_65
0x4001aa1	              0xc3	                                     ret	     16879	i386-dis.c	FUNCTION_65
0x4001aa2	      0xe800000000	                          call 0x4001aa7	     16877	i386-dis.c	FUNCTION_65
OP_G	CALL,16:IF,9:FOR,0:ELSE,5:WHILE,0:SWITCH,1:functions,0:DO,0	168
0x4002f40	        0x4883ec08	                              sub rsp, 8	     15678	i386-dis.c	FUNCTION_27
0x4002f44	    0x8b1500000000	            mov edx, dword [0x04002f4a] 	     15681	i386-dis.c	FUNCTION_27
0x4002f4a	            0x31c0	                            xor eax, eax	     15681	i386-dis.c	FUNCTION_27
0x4002f4c	          0xf6c204	                              test dl, 4	     15681	i386-dis.c	FUNCTION_27
0x4002f4f	            0x740c	                            je 0x4002f5d	     15681	i386-dis.c	FUNCTION_27
0x4002f51	    0x830d00000000	            or dword [0x04002f58], 0x44 	     15681	i386-dis.c	FUNCTION_27
0x4002f58	      0xb808000000	                              mov eax, 8	     15683	i386-dis.c	FUNCTION_27	IF_1
0x4002f5d	          0x83ff45	                           cmp edi, 0x45	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4002f60	     0xf87ea010000	                            ja 0x4003150	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4002f66	            0x89f9	                            mov ecx, edi	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4002f68	    0xff24cd000000	                       jmp qword [rcx*8]	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4002f6f	              0x90	                                     nop	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x4002f70	          0x83e208	                              and edx, 8	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4002f73	     0xf8437020000	                            je 0x40031b0	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4002f79	    0x830d00000000	            or dword [0x04002f80], 0x48 	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4002f80	     0x30500000000	             add eax, dword [0x04002f86]	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4002f86	            0x4898	                                    cdqe	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4002f88	    0x488b15000000	            mov rdx, qword [0x04002f8f] 	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x4002f8f	    0x488b3d000000	            mov rdi, qword [0x04002f96] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002f96	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4002f9a	      0xe800000000	                          call 0x4002f9f	       117	string3.h	FUNCTION_108	CALL_3
0x4002f9f	    0x488905000000	            mov qword [0x04002fa6], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002fa6	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x4002faa	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x4002fab	       0xf1f440000	                   nop dword [rax + rax]	     15766	i386-dis.c	FUNCTION_27
0x4002fb0	     0x30500000000	             add eax, dword [0x04002fb6]	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4002fb6	    0x833d00000000	               cmp dword [0x04002fbd], 2	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x4002fbd	            0x4898	                                    cdqe	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4002fbf	            0x74c7	                            je 0x4002f88	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x4002fc1	    0x488b15000000	            mov rdx, qword [0x04002fc8] 	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x4002fc8	    0x488b3d000000	            mov rdi, qword [0x04002fcf] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002fcf	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4002fd3	      0xe800000000	                          call 0x4002fd8	       117	string3.h	FUNCTION_108	CALL_3
0x4002fd8	    0x488905000000	            mov qword [0x04002fdf], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002fdf	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x4002fe3	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x4002fe4	         0xf1f4000	                         nop dword [rax]	     15766	i386-dis.c	FUNCTION_27
0x4002fe8	    0x486305000000	         movsxd rax, dword [0x04002fef] 	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x4002fef	          0x83f803	                              cmp eax, 3	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x4002ff2	     0xf8f88010000	                            jg 0x4003180	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x4002ff8	    0x488b15000000	            mov rdx, qword [0x04002fff] 	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x4002fff	    0x488b3d000000	            mov rdi, qword [0x04003006] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003006	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400300a	      0xe800000000	                          call 0x400300f	       117	string3.h	FUNCTION_108	CALL_3
0x400300f	    0x488905000000	            mov qword [0x04003016], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003016	            0xeb8e	                           jmp 0x4002fa6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003018	     0xf1f84000000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003020	     0x30500000000	             add eax, dword [0x04003026]	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x4003026	          0x83f807	                              cmp eax, 7	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x4003029	     0xf8f51010000	                            jg 0x4003180	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x400302f	    0x488b15000000	            mov rdx, qword [0x04003036] 	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4003036	            0x4898	                                    cdqe	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x4003038	    0x488b3d000000	            mov rdi, qword [0x0400303f] 	       117	string3.h	FUNCTION_108	CALL_3
0x400303f	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003043	      0xe800000000	                          call 0x4003048	       117	string3.h	FUNCTION_108	CALL_3
0x4003048	    0x488905000000	            mov qword [0x0400304f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400304f	      0xe952ffffff	                           jmp 0x4002fa6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003054	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003058	     0x30500000000	             add eax, dword [0x0400305e]	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x400305e	    0x830d00000000	            or dword [0x04003065], 0x40 	     15687	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003065	            0x85d2	                           test edx, edx	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x4003067	            0x4898	                                    cdqe	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4003069	     0xf84b9010000	                            je 0x4003228	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x400306f	    0x488b15000000	            mov rdx, qword [0x04003076] 	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x4003076	    0x488b3d000000	            mov rdi, qword [0x0400307d] 	       117	string3.h	FUNCTION_108	CALL_3
0x400307d	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003081	      0xe800000000	                          call 0x4003086	       117	string3.h	FUNCTION_108	CALL_3
0x4003086	    0x488905000000	            mov qword [0x0400308d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400308d	      0xe914ffffff	                           jmp 0x4002fa6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003092	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003098	     0x30500000000	             add eax, dword [0x0400309e]	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400309e	    0x488b15000000	            mov rdx, qword [0x040030a5] 	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x40030a5	    0x488b3d000000	            mov rdi, qword [0x040030ac] 	       117	string3.h	FUNCTION_108	CALL_3
0x40030ac	            0x4898	                                    cdqe	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x40030ae	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40030b2	      0xe800000000	                          call 0x40030b7	       117	string3.h	FUNCTION_108	CALL_3
0x40030b7	    0x488905000000	            mov qword [0x040030be], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40030be	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x40030c2	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x40030c3	       0xf1f440000	                   nop dword [rax + rax]	     15766	i386-dis.c	FUNCTION_27
0x40030c8	    0x8b0d00000000	            mov ecx, dword [0x040030ce] 	     15730	i386-dis.c	FUNCTION_27	SWITCH_1
0x40030ce	          0x83f902	                              cmp ecx, 2	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x40030d1	     0xf8499010000	                            je 0x4003270	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x40030d7	    0xf60500000000	               test byte [0x040030de], 4	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x40030de	     0xf846c010000	                            je 0x4003250	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x40030e4	    0x486315000000	         movsxd rdx, dword [0x040030eb] 	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x40030eb	          0x83f901	                              cmp ecx, 1	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x40030ee	    0xc70495000000	                    mov dword [rdx*4], 0	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x40030f9	    0x488b15000000	            mov rdx, qword [0x04003100] 	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4003100	            0x7407	                            je 0x4003109	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4003102	    0x488b15000000	            mov rdx, qword [0x04003109] 	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4003109	    0x810d00000000	            or dword [0x04003113], 0x400	     15743	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4003113	     0x30500000000	             add eax, dword [0x04003119]	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4003119	    0x488b3d000000	            mov rdi, qword [0x04003120] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003120	            0x4898	                                    cdqe	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4003122	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003126	      0xe800000000	                          call 0x400312b	       117	string3.h	FUNCTION_108	CALL_3
0x400312b	    0x488905000000	            mov qword [0x04003132], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003132	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x4003136	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x4003137	    0x660f1f840000	                    nop word [rax + rax]	     15766	i386-dis.c	FUNCTION_27
0x4003140	     0x30500000000	             add eax, dword [0x04003146]	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4003146	            0x4898	                                    cdqe	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4003148	      0xe974feffff	                           jmp 0x4002fc1	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x400314d	           0xf1f00	                         nop dword [rax]	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4003150	      0xba05000000	                              mov edx, 5	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4003155	      0xbe00000000	                              mov esi, 0	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x400315a	      0xbf00000000	                              mov edi, 0	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x400315f	      0xe800000000	                          call 0x4003164	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4003164	    0x488b3d000000	            mov rdi, qword [0x0400316b] 	       117	string3.h	FUNCTION_108	CALL_3
0x400316b	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x400316e	      0xe800000000	                          call 0x4003173	       117	string3.h	FUNCTION_108	CALL_3
0x4003173	    0x488905000000	            mov qword [0x0400317a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400317a	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x400317e	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x400317f	              0x90	                                     nop	     15766	i386-dis.c	FUNCTION_27
0x4003180	    0x488b05000000	            mov rax, qword [0x04003187] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003187	      0xba29000000	                           mov edx, 0x29	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400318c	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003192	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003196	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400319a	    0x488905000000	            mov qword [0x040031a1], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40031a1	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x40031a5	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
0x40031a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15766	i386-dis.c	FUNCTION_27
0x40031b0	          0x83ff04	                              cmp edi, 4	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x40031b3	            0x7533	                           jne 0x40031e8	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x40031b5	          0x83e601	                              and esi, 1	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x40031b8	            0x752e	                           jne 0x40031e8	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x40031ba	     0x30500000000	             add eax, dword [0x040031c0]	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40031c0	    0x488b15000000	            mov rdx, qword [0x040031c7] 	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40031c7	    0x488b3d000000	            mov rdi, qword [0x040031ce] 	       117	string3.h	FUNCTION_108	CALL_3
0x40031ce	            0x4898	                                    cdqe	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40031d0	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40031d4	      0xe800000000	                          call 0x40031d9	       117	string3.h	FUNCTION_108	CALL_3
0x40031d9	    0x488905000000	            mov qword [0x040031e0], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40031e0	            0xeb2c	                           jmp 0x400320e	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40031e2	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40031e8	     0x30500000000	             add eax, dword [0x040031ee]	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40031ee	    0x488b15000000	            mov rdx, qword [0x040031f5] 	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40031f5	    0x488b3d000000	            mov rdi, qword [0x040031fc] 	       117	string3.h	FUNCTION_108	CALL_3
0x40031fc	            0x4898	                                    cdqe	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40031fe	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003202	      0xe800000000	                          call 0x4003207	       117	string3.h	FUNCTION_108	CALL_3
0x4003207	    0x488905000000	            mov qword [0x0400320e], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400320e	    0x8b0500000000	            mov eax, dword [0x04003214] 	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x4003214	      0x2500020000	                          and eax, 0x200	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x4003219	     0x90500000000	              or dword [0x0400321f], eax	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x400321f	      0xe982fdffff	                           jmp 0x4002fa6	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x4003224	         0xf1f4000	                         nop dword [rax]	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x4003228	    0x488b15000000	            mov rdx, qword [0x0400322f] 	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x400322f	    0x488b3d000000	            mov rdi, qword [0x04003236] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003236	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400323a	      0xe800000000	                          call 0x400323f	       117	string3.h	FUNCTION_108	CALL_3
0x400323f	    0x488905000000	            mov qword [0x04003246], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003246	      0xe95bfdffff	                           jmp 0x4002fa6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400324b	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003250	            0x85c9	                           test ecx, ecx	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003252	    0x488b15000000	            mov rdx, qword [0x04003259] 	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003259	    0x480f44150000	           cmove rdx, qword [0x04003261]	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003261	      0xe9adfeffff	                           jmp 0x4003113	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003266	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4003270	    0xf60500000000	               test byte [0x04003277], 4	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4003277	    0x488b15000000	            mov rdx, qword [0x0400327e] 	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x400327e	     0xf848ffeffff	                            je 0x4003113	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4003284	    0x486315000000	         movsxd rdx, dword [0x0400328b] 	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x400328b	    0xc70495000000	                    mov dword [rdx*4], 0	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4003296	      0xe967feffff	                           jmp 0x4003102	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
OP_indirE	CALL,2:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	17
0x40089d0	    0x803d00000000	                cmp byte [0x040089d7], 0	     14616	i386-dis.c	FUNCTION_20	IF_1
0x40089d7	            0x751a	                           jne 0x40089f3	     14616	i386-dis.c	FUNCTION_20	IF_1
0x40089d9	    0x488b05000000	            mov rax, qword [0x040089e0] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40089e0	      0xba2a000000	                           mov edx, 0x2a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40089e5	          0x668910	                      mov word [rax], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40089e8	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40089ec	    0x488905000000	            mov qword [0x040089f3], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40089f3	    0x803d00000000	                cmp byte [0x040089fa], 0	     15667	i386-dis.c	FUNCTION_26
0x40089fa	            0x7421	                            je 0x4008a1d	     15667	i386-dis.c	FUNCTION_26
0x40089fc	    0x488305000000	               add qword [0x04008a04], 1	     15668	i386-dis.c	FUNCTION_26
0x4008a04	    0x833d00000000	               cmp dword [0x04008a0b], 3	     15670	i386-dis.c	FUNCTION_26	IF_1
0x4008a0b	            0x740b	                            je 0x4008a18	     15670	i386-dis.c	FUNCTION_26	IF_1
0x4008a0d	      0xe9dee2ffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4008a12	    0x660f1f440000	                    nop word [rax + rax]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4008a18	      0xe9339fffff	                   jmp sym.OP_E_register	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4008a1d	              0x50	                                push rax	     14615	i386-dis.c	FUNCTION_20
0x4008a1e	      0xe800000000	                          call 0x4008a23	     15667	i386-dis.c	FUNCTION_26
OP_Monitor	CALL,3:IF,2:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	50
0x4001ab0	    0x803d00000000	                cmp byte [0x04001ab7], 0	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4001ab7	              0x53	                                push rbx	     16884	i386-dis.c	FUNCTION_66
0x4001ab8	     0xf8593000000	                           jne 0x4001b51	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4001abe	    0x8b0500000000	            mov eax, dword [0x04001ac4] 	     16889	i386-dis.c	FUNCTION_66	IF_1
0x4001ac4	          0x83f802	                              cmp eax, 2	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001ac7	     0xf84b3000000	                            je 0x4001b80	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001acd	    0xf60500000000	               test byte [0x04001ad4], 4	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001ad4	    0x488b1d000000	            mov rbx, qword [0x04001adb] 	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001adb	          0x4889da	                            mov rdx, rbx	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001ade	     0xf8484000000	                            je 0x4001b68	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001ae4	    0x48630d000000	         movsxd rcx, dword [0x04001aeb] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001aeb	          0x83f801	                              cmp eax, 1	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001aee	    0xc7048d000000	                    mov dword [rcx*4], 0	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001af9	    0x488b0d000000	            mov rcx, qword [0x04001b00] 	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b00	            0x7403	                            je 0x4001b05	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b02	          0x4889d1	                            mov rcx, rdx	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b05	    0x810d00000000	            or dword [0x04001b0f], 0x400	     16901	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b0f	          0x488b31	                    mov rsi, qword [rcx]	       110	string3.h	FUNCTION_107	CALL_3
0x4001b12	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_107	CALL_3
0x4001b17	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001b1c	      0xe800000000	                          call 0x4001b21	       110	string3.h	FUNCTION_107	CALL_3
0x4001b21	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x4001b25	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_107	CALL_3
0x4001b2a	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001b2f	      0xe800000000	                          call 0x4001b34	       110	string3.h	FUNCTION_107	CALL_3
0x4001b34	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       110	string3.h	FUNCTION_107	CALL_3
0x4001b38	      0xba2c010000	                          mov edx, 0x12c	       110	string3.h	FUNCTION_107	CALL_3
0x4001b3d	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4001b42	      0xe800000000	                          call 0x4001b47	       110	string3.h	FUNCTION_107	CALL_3
0x4001b47	    0xc70500000000	               mov dword [0x04001b51], 1	     16906	i386-dis.c	FUNCTION_66	IF_1
0x4001b51	    0x803d00000000	                cmp byte [0x04001b58], 0	     16909	i386-dis.c	FUNCTION_66
0x4001b58	            0x745b	                            je 0x4001bb5	     16909	i386-dis.c	FUNCTION_66
0x4001b5a	    0x488305000000	               add qword [0x04001b62], 1	     16910	i386-dis.c	FUNCTION_66
0x4001b62	              0x5b	                                 pop rbx	     16911	i386-dis.c	FUNCTION_66
0x4001b63	              0xc3	                                     ret	     16911	i386-dis.c	FUNCTION_66
0x4001b64	         0xf1f4000	                         nop dword [rax]	     16911	i386-dis.c	FUNCTION_66
0x4001b68	            0x85c0	                           test eax, eax	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b6a	          0x4889d9	                            mov rcx, rbx	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b6d	    0x480f440d0000	           cmove rcx, qword [0x04001b75]	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b75	            0xeb98	                           jmp 0x4001b0f	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b77	    0x660f1f840000	                    nop word [rax + rax]	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b80	    0xf60500000000	               test byte [0x04001b87], 4	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b87	    0x488b0d000000	            mov rcx, qword [0x04001b8e] 	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001b8e	          0x4889cb	                            mov rbx, rcx	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001b91	     0xf8478ffffff	                            je 0x4001b0f	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001b97	    0x486305000000	         movsxd rax, dword [0x04001b9e] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001b9e	    0x488b15000000	            mov rdx, qword [0x04001ba5] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001ba5	    0xc70485000000	                    mov dword [rax*4], 0	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001bb0	      0xe94dffffff	                           jmp 0x4001b02	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001bb5	      0xe800000000	                          call 0x4001bba	     16909	i386-dis.c	FUNCTION_66
OP_Vex_2src_1	CALL,2:IF,3:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	51
0x4009ac0	        0x4883ec08	                              sub rsp, 8	     17468	i386-dis.c	FUNCTION_84
0x4009ac4	    0x833d00000000	               cmp dword [0x04009acb], 3	     17469	i386-dis.c	FUNCTION_84	IF_1
0x4009acb	            0x7443	                            je 0x4009b10	     17469	i386-dis.c	FUNCTION_84	IF_1
0x4009acd	    0x8b0500000000	            mov eax, dword [0x04009ad3] 	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009ad3	            0x85c0	                           test eax, eax	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009ad5	            0x7479	                            je 0x4009b50	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009ad7	    0x8b0500000000	            mov eax, dword [0x04009add] 	     17478	i386-dis.c	FUNCTION_84	IF_2
0x4009add	            0x89c2	                            mov edx, eax	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4009adf	          0x83e207	                              and edx, 7	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4009ae2	    0x833d00000000	               cmp dword [0x04009ae9], 2	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4009ae9	        0x480f45c2	                         cmovne rax, rdx	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4009aed	    0x488b15000000	            mov rdx, qword [0x04009af4] 	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009af4	    0x488b3d000000	            mov rdi, qword [0x04009afb] 	       117	string3.h	FUNCTION_108	CALL_3
0x4009afb	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4009aff	      0xe800000000	                          call 0x4009b04	       117	string3.h	FUNCTION_108	CALL_3
0x4009b04	    0x488905000000	            mov qword [0x04009b0b], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009b0b	        0x4883c408	                              add rsp, 8	     17486	i386-dis.c	FUNCTION_84
0x4009b0f	              0xc3	                                     ret	     17486	i386-dis.c	FUNCTION_84
0x4009b10	    0x803d00000000	                cmp byte [0x04009b17], 0	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4009b17	            0x7462	                            je 0x4009b7b	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4009b19	    0x8b1500000000	            mov edx, dword [0x04009b1f] 	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009b1f	    0x488305000000	               add qword [0x04009b27], 1	     17473	i386-dis.c	FUNCTION_84	IF_1
0x4009b27	            0x85d2	                           test edx, edx	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009b29	            0x75ac	                           jne 0x4009ad7	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4009b2b	    0xf60500000000	               test byte [0x04009b32], 1	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b32	    0x8b0500000000	            mov eax, dword [0x04009b38] 	     17448	i386-dis.c	FUNCTION_83	IF_1
0x4009b38	            0x740a	                            je 0x4009b44	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b3a	    0x830d00000000	            or dword [0x04009b41], 0x41 	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009b41	          0x83c008	                              add eax, 8	     17451	i386-dis.c	FUNCTION_83	IF_1	IF_2
0x4009b44	            0x4898	                                    cdqe	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b46	            0xeba5	                           jmp 0x4009aed	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b48	     0xf1f84000000	                   nop dword [rax + rax]	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009b50	    0x803d00000000	                cmp byte [0x04009b57], 0	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b57	            0x7408	                            je 0x4009b61	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b59	          0x8d47fc	                      lea eax, [rdi - 4]	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b5c	          0x83f801	                              cmp eax, 1	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b5f	            0x761f	                           jbe 0x4009b80	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b61	    0x803d00000000	                cmp byte [0x04009b68], 0	     15667	i386-dis.c	FUNCTION_26
0x4009b68	            0x7411	                            je 0x4009b7b	     15667	i386-dis.c	FUNCTION_26
0x4009b6a	    0x488305000000	               add qword [0x04009b72], 1	     15668	i386-dis.c	FUNCTION_26
0x4009b72	        0x4883c408	                              add rsp, 8	     17486	i386-dis.c	FUNCTION_84
0x4009b76	      0xe975d1ffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009b7b	      0xe800000000	                          call 0x4009b80	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4009b80	    0x8b0500000000	            mov eax, dword [0x04009b86] 	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b86	      0x2500020000	                          and eax, 0x200	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b8b	          0x83f801	                              cmp eax, 1	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b8e	            0x19ff	                            sbb edi, edi	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b90	     0x90500000000	              or dword [0x04009b96], eax	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b96	          0x83e7fd	                     and edi, 0xfffffffd	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b99	          0x83c70d	                            add edi, 0xd	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009b9c	            0xebc3	                           jmp 0x4009b61	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
PCMPESTR_Fixup	CALL,1:IF,3:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	106
0x4008510	        0x4883ec08	                              sub rsp, 8	     17161	i386-dis.c	FUNCTION_78
0x4008514	    0x803d00000000	                cmp byte [0x0400851b], 0	     17163	i386-dis.c	FUNCTION_78	IF_1
0x400851b	            0x752c	                           jne 0x4008549	     17163	i386-dis.c	FUNCTION_78	IF_1
0x400851d	    0xf60500000000	               test byte [0x04008524], 8	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4008524	    0x488b05000000	            mov rax, qword [0x0400852b] 	     17165	i386-dis.c	FUNCTION_78	IF_1
0x400852b	     0xf8447010000	                            je 0x4008678	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4008531	    0x830d00000000	            or dword [0x04008538], 0x48 	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4008538	          0xc60071	                    mov byte [rax], 0x71	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x400853b	        0x4883c001	                              add rax, 1	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x400853f	          0xc60000	                       mov byte [rax], 0	     17173	i386-dis.c	FUNCTION_78	IF_1
0x4008542	    0x488905000000	            mov qword [0x04008549], rax 	     17174	i386-dis.c	FUNCTION_78	IF_1
0x4008549	    0x803d00000000	                cmp byte [0x04008550], 0	     16566	i386-dis.c	FUNCTION_55
0x4008550	     0xf8465010000	                            je 0x40086bb	     16566	i386-dis.c	FUNCTION_55
0x4008556	    0x488305000000	               add qword [0x0400855e], 1	     16567	i386-dis.c	FUNCTION_55
0x400855e	    0x833d00000000	               cmp dword [0x04008565], 3	     16569	i386-dis.c	FUNCTION_55	IF_1
0x4008565	     0xf8525010000	                           jne 0x4008690	     16569	i386-dis.c	FUNCTION_55	IF_1
0x400856b	    0x8b1500000000	            mov edx, dword [0x04008571] 	     16576	i386-dis.c	FUNCTION_55
0x4008571	    0x8b0500000000	            mov eax, dword [0x04008577] 	     16575	i386-dis.c	FUNCTION_55
0x4008577	          0xf6c201	                              test dl, 1	     16576	i386-dis.c	FUNCTION_55
0x400857a	            0x740a	                            je 0x4008586	     16576	i386-dis.c	FUNCTION_55
0x400857c	    0x830d00000000	            or dword [0x04008583], 0x41 	     16576	i386-dis.c	FUNCTION_55
0x4008583	          0x83c008	                              add eax, 8	     16578	i386-dis.c	FUNCTION_55	IF_2
0x4008586	    0x8b0d00000000	            mov ecx, dword [0x0400858c] 	     16579	i386-dis.c	FUNCTION_55	IF_3
0x400858c	            0x85c9	                           test ecx, ecx	     16579	i386-dis.c	FUNCTION_55	IF_3
0x400858e	            0x740f	                            je 0x400859f	     16579	i386-dis.c	FUNCTION_55	IF_3
0x4008590	          0x83e202	                              and edx, 2	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008593	            0x740a	                            je 0x400859f	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008595	    0x830d00000000	            or dword [0x0400859c], 0x42 	     16581	i386-dis.c	FUNCTION_55	IF_3
0x400859c	          0x83c010	                           add eax, 0x10	     16583	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x400859f	          0x83e604	                              and esi, 4	     16586	i386-dis.c	FUNCTION_55	IF_5
0x40085a2	            0x742e	                            je 0x40085d2	     16586	i386-dis.c	FUNCTION_55	IF_5
0x40085a4	          0x83ff3f	                           cmp edi, 0x3f	     16588	i386-dis.c	FUNCTION_55	IF_5
0x40085a7	            0x7729	                            ja 0x40085d2	     16588	i386-dis.c	FUNCTION_55	IF_5
0x40085a9	    0x48ba000a0100	          movabs rdx, 0xa000000000010a00	     16587	i386-dis.c	FUNCTION_55	IF_5
0x40085b3	        0x480fa3fa	                             bt rdx, rdi	     16587	i386-dis.c	FUNCTION_55	IF_5
0x40085b7	            0x7319	                           jae 0x40085d2	     16587	i386-dis.c	FUNCTION_55	IF_5
0x40085b9	    0x488b15000000	            mov rdx, qword [0x040085c0] 	     13898	i386-dis.c	FUNCTION_11
0x40085c0	          0xc6022e	                    mov byte [rdx], 0x2e	     13898	i386-dis.c	FUNCTION_11
0x40085c3	        0xc6420173	                mov byte [rdx + 1], 0x73	     13899	i386-dis.c	FUNCTION_11
0x40085c7	        0x4883c202	                              add rdx, 2	     13900	i386-dis.c	FUNCTION_11
0x40085cb	    0x488915000000	            mov qword [0x040085d2], rdx 	     13900	i386-dis.c	FUNCTION_11
0x40085d2	    0x803d00000000	                cmp byte [0x040085d9], 0	     16594	i386-dis.c	FUNCTION_55	IF_6
0x40085d9	            0x7460	                            je 0x400863b	     16594	i386-dis.c	FUNCTION_55	IF_6
0x40085db	          0x83ff1a	                           cmp edi, 0x1a	     16595	i386-dis.c	FUNCTION_55	IF_6
0x40085de	            0x7650	                           jbe 0x4008630	     16595	i386-dis.c	FUNCTION_55	IF_6
0x40085e0	          0x8d57eb	                   lea edx, [rdi - 0x15]	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40085e3	          0x83fa03	                              cmp edx, 3	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40085e6	            0x7653	                           jbe 0x400863b	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40085e8	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40085eb	          0x83fa01	                              cmp edx, 1	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40085ee	     0xf86ac000000	                           jbe 0x40086a0	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40085f4	          0x8d57e5	                   lea edx, [rdi - 0x1b]	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40085f7	          0x83fa26	                           cmp edx, 0x26	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40085fa	     0xf86e0000000	                           jbe 0x40086e0	     16605	i386-dis.c	FUNCTION_55	IF_6
0x4008600	    0x8b1500000000	            mov edx, dword [0x04008606] 	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008606	    0x81fa00010000	                          cmp edx, 0x100	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x400860c	     0xf84ae000000	                            je 0x40086c0	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008612	    0x81fa00020000	                          cmp edx, 0x200	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008618	     0xf8598000000	                           jne 0x40086b6	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x400861e	    0x488b15000000	            mov rdx, qword [0x04008625] 	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008625	            0xeb2e	                           jmp 0x4008655	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008627	    0x660f1f840000	                    nop word [rax + rax]	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008630	      0xba00001206	                      mov edx, 0x6120000	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4008635	        0x480fa3fa	                             bt rdx, rdi	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4008639	            0x73a5	                           jae 0x40085e0	     16596	i386-dis.c	FUNCTION_55	IF_6
0x400863b	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x400863e	          0x83fa01	                              cmp edx, 1	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008641	            0x765d	                           jbe 0x40086a0	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008643	          0x83ff1b	                           cmp edi, 0x1b	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4008646	    0x488b15000000	            mov rdx, qword [0x0400864d] 	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x400864d	    0x480f45150000	          cmovne rdx, qword [0x04008655]	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4008655	            0x4898	                                    cdqe	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x4008657	    0x488b3d000000	            mov rdi, qword [0x0400865e] 	       117	string3.h	FUNCTION_108	CALL_3
0x400865e	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4008662	      0xe800000000	                          call 0x4008667	       117	string3.h	FUNCTION_108	CALL_3
0x4008667	    0x488905000000	            mov qword [0x0400866e], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400866e	        0x4883c408	                              add rsp, 8	     17178	i386-dis.c	FUNCTION_78
0x4008672	              0xc3	                                     ret	     17178	i386-dis.c	FUNCTION_78
0x4008673	       0xf1f440000	                   nop dword [rax + rax]	     17178	i386-dis.c	FUNCTION_78
0x4008678	        0x40f6c604	                             test sil, 4	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x400867c	     0xf84bdfeffff	                            je 0x400853f	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4008682	          0xc6006c	                    mov byte [rax], 0x6c	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4008685	        0x4883c001	                              add rax, 1	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4008689	      0xe9b1feffff	                           jmp 0x400853f	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x400868e	            0x6690	                                     nop	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4008690	        0x4883c408	                              add rsp, 8	     17178	i386-dis.c	FUNCTION_78
0x4008694	      0xe957e6ffff	                     jmp sym.OP_E_memory	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x4008699	     0xf1f80000000	                         nop dword [rax]	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x40086a0	    0x8b1500000000	            mov edx, dword [0x040086a6] 	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086a6	    0x81fa00010000	                          cmp edx, 0x100	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086ac	            0x7422	                            je 0x40086d0	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086ae	    0x81fa00020000	                          cmp edx, 0x200	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086b4	            0x740a	                            je 0x40086c0	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086b6	          0x83c280	             add edx, 0xffffffffffffff80	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086b9	            0x7415	                            je 0x40086d0	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086bb	      0xe800000000	                          call 0x40086c0	     16640	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2	CALL_4
0x40086c0	    0x488b15000000	            mov rdx, qword [0x040086c7] 	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086c7	            0xeb8c	                           jmp 0x4008655	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086c9	     0xf1f80000000	                         nop dword [rax]	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086d0	    0x488b15000000	            mov rdx, qword [0x040086d7] 	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086d7	      0xe979ffffff	                           jmp 0x4008655	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086dc	         0xf1f4000	                         nop dword [rax]	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40086e0	    0x48b901000000	                movabs rcx, 0x5e00000001	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40086ea	        0x480fa3d1	                             bt rcx, rdx	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40086ee	     0xf824fffffff	                            jb 0x4008643	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40086f4	      0xe907ffffff	                           jmp 0x4008600	     16606	i386-dis.c	FUNCTION_55	IF_6
VCMP_Fixup	CALL,3:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	127
0x40044b0	            0x4156	                                push r14	     17647	i386-dis.c	FUNCTION_92
0x40044b2	            0x4155	                                push r13	     17647	i386-dis.c	FUNCTION_92
0x40044b4	            0x4154	                                push r12	     17647	i386-dis.c	FUNCTION_92
0x40044b6	              0x55	                                push rbp	     17647	i386-dis.c	FUNCTION_92
0x40044b7	              0x53	                                push rbx	     17647	i386-dis.c	FUNCTION_92
0x40044b8	        0x4883ec30	                           sub rsp, 0x30	     17647	i386-dis.c	FUNCTION_92
0x40044bc	    0x4c8b25000000	            mov r12, qword [0x040044c3] 	     17650	i386-dis.c	FUNCTION_92
0x40044c3	    0x64488b042528	                mov rax, qword fs:[0x28]	     17647	i386-dis.c	FUNCTION_92
0x40044cc	      0x4889442428	             mov qword [rsp + 0x28], rax	     17647	i386-dis.c	FUNCTION_92
0x40044d1	            0x31c0	                            xor eax, eax	     17647	i386-dis.c	FUNCTION_92
0x40044d3	    0x488b05000000	            mov rax, qword [0x040044da] 	     17650	i386-dis.c	FUNCTION_92
0x40044da	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     17650	i386-dis.c	FUNCTION_92
0x40044df	        0x488d5801	                      lea rbx, [rax + 1]	     17650	i386-dis.c	FUNCTION_92
0x40044e3	        0x488b7500	                    mov rsi, qword [rbp]	     17650	i386-dis.c	FUNCTION_92
0x40044e7	          0x4839f3	                            cmp rbx, rsi	     17650	i386-dis.c	FUNCTION_92
0x40044ea	     0xf87f0000000	                            ja 0x40045e0	     17650	i386-dis.c	FUNCTION_92
0x40044f0	        0x440fb600	                   movzx r8d, byte [rax]	     17651	i386-dis.c	FUNCTION_92
0x40044f4	    0x48891d000000	            mov qword [0x040044fb], rbx 	     17651	i386-dis.c	FUNCTION_92
0x40044fb	        0x4183f81f	                           cmp r8d, 0x1f	     17652	i386-dis.c	FUNCTION_92	IF_1	CALL_1
0x40044ff	            0x767f	                           jbe 0x4004580	     17652	i386-dis.c	FUNCTION_92	IF_1	CALL_1
0x4004501	    0x833d00000000	               cmp dword [0x04004508], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004508	    0xc60500000000	            mov byte [0x0400450f], 0x24 	     17665	i386-dis.c	FUNCTION_92	ELSE_1
0x400450f	     0xf840b010000	                            je 0x4004620	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004515	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x400451a	      0xba63000000	                           mov edx, 0x63	        33	stdio2.h	FUNCTION_113	CALL_1
0x400451f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004524	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004529	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400452b	      0xe800000000	                          call 0x4004530	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004530	    0x480fbe350000	           movsx rsi, byte [0x04004538] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004538	    0x488b3d000000	            mov rdi, qword [0x0400453f] 	       117	string3.h	FUNCTION_108	CALL_3
0x400453f	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004546	      0xe800000000	                          call 0x400454b	       117	string3.h	FUNCTION_108	CALL_3
0x400454b	    0xc60500000000	                mov byte [0x04004552], 0	     17668	i386-dis.c	FUNCTION_92	ELSE_1
0x4004552	    0x488905000000	            mov qword [0x04004559], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004559	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     17670	i386-dis.c	FUNCTION_92
0x400455e	    0x644833042528	                xor rax, qword fs:[0x28]	     17670	i386-dis.c	FUNCTION_92
0x4004567	     0xf8549010000	                           jne 0x40046b6	     17670	i386-dis.c	FUNCTION_92
0x400456d	        0x4883c430	                           add rsp, 0x30	     17670	i386-dis.c	FUNCTION_92
0x4004571	              0x5b	                                 pop rbx	     17670	i386-dis.c	FUNCTION_92
0x4004572	              0x5d	                                 pop rbp	     17670	i386-dis.c	FUNCTION_92
0x4004573	            0x415c	                                 pop r12	     17670	i386-dis.c	FUNCTION_92
0x4004575	            0x415d	                                 pop r13	     17670	i386-dis.c	FUNCTION_92
0x4004577	            0x415e	                                 pop r14	     17670	i386-dis.c	FUNCTION_92
0x4004579	              0xc3	                                     ret	     17670	i386-dis.c	FUNCTION_92
0x400457a	    0x660f1f440000	                    nop word [rax + rax]	     17670	i386-dis.c	FUNCTION_92
0x4004580	    0x488b3d000000	            mov rdi, qword [0x04004587] 	     17655	i386-dis.c	FUNCTION_92	IF_1
0x4004587	          0x4589c0	                            mov r8d, r8d	     17659	i386-dis.c	FUNCTION_92	IF_1
0x400458a	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x400458d	        0x49c1e004	                               shl r8, 4	     17659	i386-dis.c	FUNCTION_92	IF_1
0x4004591	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004596	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x400459d	    0x498d98000000	                           lea rbx, [r8]	     17659	i386-dis.c	FUNCTION_92	IF_1
0x40045a4	    0x4d8b80000000	                      mov r8, qword [r8]	        33	stdio2.h	FUNCTION_113	CALL_1
0x40045ab	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40045b0	         0xfb647fe	               movzx eax, byte [rdi - 2]	     17656	i386-dis.c	FUNCTION_92	IF_1
0x40045b4	        0x4883ef02	                              sub rdi, 2	        33	stdio2.h	FUNCTION_113	CALL_1
0x40045b8	          0x880424	                      mov byte [rsp], al	     17656	i386-dis.c	FUNCTION_92	IF_1
0x40045bb	         0xfb64701	               movzx eax, byte [rdi + 1]	     17657	i386-dis.c	FUNCTION_92	IF_1
0x40045bf	      0xc644240200	                   mov byte [rsp + 2], 0	     17658	i386-dis.c	FUNCTION_92	IF_1
0x40045c4	        0x88442401	                  mov byte [rsp + 1], al	     17657	i386-dis.c	FUNCTION_92	IF_1
0x40045c8	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40045ca	      0xe800000000	                          call 0x40045cf	        33	stdio2.h	FUNCTION_113	CALL_1
0x40045cf	          0x8b4308	                mov eax, dword [rbx + 8]	     17660	i386-dis.c	FUNCTION_92	IF_1
0x40045d2	    0x480105000000	            add qword [0x040045d9], rax 	     17660	i386-dis.c	FUNCTION_92	IF_1
0x40045d9	      0xe97bffffff	                           jmp 0x4004559	     17660	i386-dis.c	FUNCTION_92	IF_1
0x40045de	            0x6690	                                     nop	     17660	i386-dis.c	FUNCTION_92	IF_1
0x40045e0	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x40045e4	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x40045e7	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x40045eb	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x40045f0	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x40045f3	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x40045f7	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x40045fa	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x40045fd	     0xf868d000000	                           jbe 0x4004690	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004603	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004606	     0xf84af000000	                            je 0x40046bb	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400460c	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004610	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004615	      0xe800000000	                          call 0x400461a	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400461a	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004620	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004625	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x400462a	        0x450fb6c0	                          movzx r8d, r8b	        33	stdio2.h	FUNCTION_113	CALL_1
0x400462e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004633	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004636	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004638	    0xc60500000000	            mov byte [0x0400463f], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x400463f	    0xc60500000000	            mov byte [0x04004646], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004646	      0xe800000000	                          call 0x400464b	        33	stdio2.h	FUNCTION_113	CALL_1
0x400464b	         0xfb61424	                   movzx edx, byte [rsp]	        33	stdio2.h	FUNCTION_113	CALL_1
0x400464f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004651	      0x488d4c2401	                      lea rcx, [rsp + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004656	            0xeb14	                           jmp 0x400466c	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004658	     0xf1f84000000	                   nop dword [rax + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004660	         0xfb61401	             movzx edx, byte [rcx + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004664	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004668	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400466a	            0x7408	                            je 0x4004674	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400466c	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400466f	          0x4863f0	                         movsxd rsi, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004672	            0x74ec	                            je 0x4004660	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004674	          0x4801e6	                            add rsi, rsp	       110	string3.h	FUNCTION_107	CALL_3
0x4004677	      0xba61000000	                           mov edx, 0x61	       110	string3.h	FUNCTION_107	CALL_3
0x400467c	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4004681	      0xe800000000	                          call 0x4004686	       110	string3.h	FUNCTION_107	CALL_3
0x4004686	      0xe9a5feffff	                           jmp 0x4004530	       110	string3.h	FUNCTION_107	CALL_3
0x400468b	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_107	CALL_3
0x4004690	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004693	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004696	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004699	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400469e	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40046a0	            0x752b	                           jne 0x40046cd	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40046a2	    0x488b05000000	            mov rax, qword [0x040046a9] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40046a9	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40046ad	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40046b1	      0xe93afeffff	                           jmp 0x40044f0	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40046b6	      0xe800000000	                          call 0x40046bb	     17670	i386-dis.c	FUNCTION_92
0x40046bb	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40046be	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40046c1	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40046c3	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40046c8	      0xe93fffffff	                           jmp 0x400460c	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40046cd	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40046d1	      0xe92dffffff	                           jmp 0x4004603	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
HLE_Fixup1	CALL,1:IF,3:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	26
0x4008b20	        0x4883ec08	                              sub rsp, 8	     16981	i386-dis.c	FUNCTION_71
0x4008b24	    0x833d00000000	               cmp dword [0x04008b2b], 3	     16982	i386-dis.c	FUNCTION_71	IF_1
0x4008b2b	            0x7453	                            je 0x4008b80	     16982	i386-dis.c	FUNCTION_71	IF_1
0x4008b2d	    0x8b0500000000	            mov eax, dword [0x04008b33] 	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4008b33	            0xa804	                              test al, 4	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4008b35	            0x742c	                            je 0x4008b63	     16983	i386-dis.c	FUNCTION_71	IF_1
0x4008b37	            0xa801	                              test al, 1	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008b39	            0x7412	                            je 0x4008b4d	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008b3b	    0x486315000000	         movsxd rdx, dword [0x04008b42] 	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008b42	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x4008b4d	            0xa802	                              test al, 2	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008b4f	            0x7412	                            je 0x4008b63	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008b51	    0x486305000000	         movsxd rax, dword [0x04008b58] 	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008b58	    0xc70485000000	                mov dword [rax*4], 0x2f2	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x4008b63	    0x803d00000000	                cmp byte [0x04008b6a], 0	     15667	i386-dis.c	FUNCTION_26
0x4008b6a	            0x742e	                            je 0x4008b9a	     15667	i386-dis.c	FUNCTION_26
0x4008b6c	    0x488305000000	               add qword [0x04008b74], 1	     15668	i386-dis.c	FUNCTION_26
0x4008b74	        0x4883c408	                              add rsp, 8	     16992	i386-dis.c	FUNCTION_71
0x4008b78	      0xe973e1ffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4008b7d	           0xf1f00	                         nop dword [rax]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4008b80	    0x803d00000000	                cmp byte [0x04008b87], 0	     15667	i386-dis.c	FUNCTION_26
0x4008b87	            0x7411	                            je 0x4008b9a	     15667	i386-dis.c	FUNCTION_26
0x4008b89	    0x488305000000	               add qword [0x04008b91], 1	     15668	i386-dis.c	FUNCTION_26
0x4008b91	        0x4883c408	                              add rsp, 8	     16992	i386-dis.c	FUNCTION_71
0x4008b95	      0xe9b69dffff	                   jmp sym.OP_E_register	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4008b9a	      0xe800000000	                          call 0x4008b9f	     15667	i386-dis.c	FUNCTION_26
PCLMUL_Fixup	CALL,3:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,1:functions,0:DO,0	139
0x4004b60	            0x4156	                                push r14	     17782	i386-dis.c	FUNCTION_95
0x4004b62	            0x4155	                                push r13	     17782	i386-dis.c	FUNCTION_95
0x4004b64	            0x4154	                                push r12	     17782	i386-dis.c	FUNCTION_95
0x4004b66	              0x55	                                push rbp	     17782	i386-dis.c	FUNCTION_95
0x4004b67	              0x53	                                push rbx	     17782	i386-dis.c	FUNCTION_95
0x4004b68	        0x4883ec30	                           sub rsp, 0x30	     17782	i386-dis.c	FUNCTION_95
0x4004b6c	    0x4c8b25000000	            mov r12, qword [0x04004b73] 	     17785	i386-dis.c	FUNCTION_95
0x4004b73	    0x64488b042528	                mov rax, qword fs:[0x28]	     17782	i386-dis.c	FUNCTION_95
0x4004b7c	      0x4889442428	             mov qword [rsp + 0x28], rax	     17782	i386-dis.c	FUNCTION_95
0x4004b81	            0x31c0	                            xor eax, eax	     17782	i386-dis.c	FUNCTION_95
0x4004b83	    0x488b05000000	            mov rax, qword [0x04004b8a] 	     17785	i386-dis.c	FUNCTION_95
0x4004b8a	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     17785	i386-dis.c	FUNCTION_95
0x4004b8f	        0x488d5801	                      lea rbx, [rax + 1]	     17785	i386-dis.c	FUNCTION_95
0x4004b93	        0x488b7500	                    mov rsi, qword [rbp]	     17785	i386-dis.c	FUNCTION_95
0x4004b97	          0x4839f3	                            cmp rbx, rsi	     17785	i386-dis.c	FUNCTION_95
0x4004b9a	     0xf8710010000	                            ja 0x4004cb0	     17785	i386-dis.c	FUNCTION_95
0x4004ba0	           0xfb600	                   movzx eax, byte [rax]	     17786	i386-dis.c	FUNCTION_95
0x4004ba3	    0x48891d000000	            mov qword [0x04004baa], rbx 	     17786	i386-dis.c	FUNCTION_95
0x4004baa	            0x3c10	                            cmp al, 0x10	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004bac	     0xf84ee000000	                            je 0x4004ca0	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004bb2	            0x3c11	                            cmp al, 0x11	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004bb4	     0xf848e000000	                            je 0x4004c48	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004bba	        0x440fb6c0	                           movzx r8d, al	     17786	i386-dis.c	FUNCTION_95
0x4004bbe	        0x4183f803	                              cmp r8d, 3	     17798	i386-dis.c	FUNCTION_95	IF_1	CALL_1
0x4004bc2	     0xf86cc010000	                           jbe 0x4004d94	     17798	i386-dis.c	FUNCTION_95	IF_1	CALL_1
0x4004bc8	    0x833d00000000	               cmp dword [0x04004bcf], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004bcf	    0xc60500000000	            mov byte [0x04004bd6], 0x24 	     17812	i386-dis.c	FUNCTION_95	ELSE_1
0x4004bd6	     0xf8414010000	                            je 0x4004cf0	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004bdc	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004be1	      0xba63000000	                           mov edx, 0x63	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004be6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004beb	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004bf0	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004bf2	      0xe800000000	                          call 0x4004bf7	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004bf7	    0x480fbe350000	           movsx rsi, byte [0x04004bff] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004bff	    0x488b3d000000	            mov rdi, qword [0x04004c06] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004c06	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004c0d	      0xe800000000	                          call 0x4004c12	       117	string3.h	FUNCTION_108	CALL_3
0x4004c12	    0xc60500000000	                mov byte [0x04004c19], 0	     17815	i386-dis.c	FUNCTION_95	ELSE_1
0x4004c19	    0x488905000000	            mov qword [0x04004c20], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004c20	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     17817	i386-dis.c	FUNCTION_95
0x4004c25	    0x644833042528	                xor rax, qword fs:[0x28]	     17817	i386-dis.c	FUNCTION_95
0x4004c2e	     0xf8552010000	                           jne 0x4004d86	     17817	i386-dis.c	FUNCTION_95
0x4004c34	        0x4883c430	                           add rsp, 0x30	     17817	i386-dis.c	FUNCTION_95
0x4004c38	              0x5b	                                 pop rbx	     17817	i386-dis.c	FUNCTION_95
0x4004c39	              0x5d	                                 pop rbp	     17817	i386-dis.c	FUNCTION_95
0x4004c3a	            0x415c	                                 pop r12	     17817	i386-dis.c	FUNCTION_95
0x4004c3c	            0x415d	                                 pop r13	     17817	i386-dis.c	FUNCTION_95
0x4004c3e	            0x415e	                                 pop r14	     17817	i386-dis.c	FUNCTION_95
0x4004c40	              0xc3	                                     ret	     17817	i386-dis.c	FUNCTION_95
0x4004c41	     0xf1f80000000	                         nop dword [rax]	     17817	i386-dis.c	FUNCTION_95
0x4004c48	    0x41b800000000	                              mov r8d, 0	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004c4e	      0xbb03000000	                              mov ebx, 3	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4004c53	    0x488b3d000000	            mov rdi, qword [0x04004c5a] 	     17801	i386-dis.c	FUNCTION_95	IF_1
0x4004c5a	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004c5d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004c62	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004c69	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004c6e	         0xfb647fd	               movzx eax, byte [rdi - 3]	     17802	i386-dis.c	FUNCTION_95	IF_1
0x4004c72	        0x4883ef03	                              sub rdi, 3	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004c76	          0x880424	                      mov byte [rsp], al	     17802	i386-dis.c	FUNCTION_95	IF_1
0x4004c79	         0xfb64701	               movzx eax, byte [rdi + 1]	     17803	i386-dis.c	FUNCTION_95	IF_1
0x4004c7d	        0x88442401	                  mov byte [rsp + 1], al	     17803	i386-dis.c	FUNCTION_95	IF_1
0x4004c81	         0xfb64702	               movzx eax, byte [rdi + 2]	     17804	i386-dis.c	FUNCTION_95	IF_1
0x4004c85	      0xc644240300	                   mov byte [rsp + 3], 0	     17805	i386-dis.c	FUNCTION_95	IF_1
0x4004c8a	        0x88442402	                  mov byte [rsp + 2], al	     17804	i386-dis.c	FUNCTION_95	IF_1
0x4004c8e	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004c90	      0xe800000000	                          call 0x4004c95	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004c95	    0x48011d000000	            add qword [0x04004c9c], rbx 	     17807	i386-dis.c	FUNCTION_95	IF_1
0x4004c9c	            0xeb82	                           jmp 0x4004c20	     17807	i386-dis.c	FUNCTION_95	IF_1
0x4004c9e	            0x6690	                                     nop	     17807	i386-dis.c	FUNCTION_95	IF_1
0x4004ca0	    0x41b800000000	                              mov r8d, 0	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004ca6	            0xeba6	                           jmp 0x4004c4e	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004ca8	     0xf1f84000000	                   nop dword [rax + rax]	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x4004cb0	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4004cb4	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4004cb7	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004cbb	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4004cc0	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4004cc3	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4004cc7	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004cca	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x4004ccd	     0xf868d000000	                           jbe 0x4004d60	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004cd3	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004cd6	     0xf84d1000000	                            je 0x4004dad	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004cdc	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004ce0	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004ce5	      0xe800000000	                          call 0x4004cea	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004cea	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004cf0	        0x440fb6c0	                           movzx r8d, al	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004cf4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004cf9	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004cfe	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004d03	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004d06	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004d08	    0xc60500000000	            mov byte [0x04004d0f], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004d0f	    0xc60500000000	            mov byte [0x04004d16], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004d16	      0xe800000000	                          call 0x4004d1b	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004d1b	         0xfb61424	                   movzx edx, byte [rsp]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004d1f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004d21	      0x488d4c2401	                      lea rcx, [rsp + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d26	            0xeb14	                           jmp 0x4004d3c	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d28	     0xf1f84000000	                   nop dword [rax + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d30	         0xfb61401	             movzx edx, byte [rcx + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d34	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d38	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d3a	            0x7408	                            je 0x4004d44	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d3c	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d3f	          0x4863f0	                         movsxd rsi, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d42	            0x74ec	                            je 0x4004d30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004d44	          0x4801e6	                            add rsi, rsp	       110	string3.h	FUNCTION_107	CALL_3
0x4004d47	      0xba61000000	                           mov edx, 0x61	       110	string3.h	FUNCTION_107	CALL_3
0x4004d4c	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4004d51	      0xe800000000	                          call 0x4004d56	       110	string3.h	FUNCTION_107	CALL_3
0x4004d56	      0xe99cfeffff	                           jmp 0x4004bf7	       110	string3.h	FUNCTION_107	CALL_3
0x4004d5b	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_107	CALL_3
0x4004d60	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004d63	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004d66	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004d69	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004d6e	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004d70	            0x7519	                           jne 0x4004d8b	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004d72	    0x488b05000000	            mov rax, qword [0x04004d79] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004d79	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004d7d	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004d81	      0xe91afeffff	                           jmp 0x4004ba0	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004d86	      0xe800000000	                          call 0x4004d8b	     17817	i386-dis.c	FUNCTION_95
0x4004d8b	        0x488b7500	                    mov rsi, qword [rbp]	     17817	i386-dis.c	FUNCTION_95
0x4004d8f	      0xe93fffffff	                           jmp 0x4004cd3	     17817	i386-dis.c	FUNCTION_95
0x4004d94	          0x4489c0	                            mov eax, r8d	     17817	i386-dis.c	FUNCTION_95
0x4004d97	        0x48c1e004	                              shl rax, 4	     17817	i386-dis.c	FUNCTION_95
0x4004d9b	    0x4c8b80000000	                     mov r8, qword [rax]	     17817	i386-dis.c	FUNCTION_95
0x4004da2	    0x8b9800000000	                    mov ebx, dword [rax]	     17817	i386-dis.c	FUNCTION_95
0x4004da8	      0xe9a6feffff	                           jmp 0x4004c53	     17817	i386-dis.c	FUNCTION_95
0x4004dad	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004db0	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004db3	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004db5	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004dba	      0xe91dffffff	                           jmp 0x4004cdc	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
CMPXCHG8B_Fixup	CALL,2:IF,4:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	40
0x40091e0	    0xf60500000000	               test byte [0x040091e7], 8	     17029	i386-dis.c	FUNCTION_74
0x40091e7	            0x744f	                            je 0x4009238	     17029	i386-dis.c	FUNCTION_74
0x40091e9	    0x488b05000000	            mov rax, qword [0x040091f0] 	     17033	i386-dis.c	FUNCTION_74	IF_1
0x40091f0	    0x830d00000000	            or dword [0x040091f7], 0x48 	     17029	i386-dis.c	FUNCTION_74
0x40091f7	      0xbf2c000000	                           mov edi, 0x2c	     17035	i386-dis.c	FUNCTION_74	IF_1
0x40091fc	    0xc740fe313662	          mov dword [rax - 2], 0x623631 	     17035	i386-dis.c	FUNCTION_74	IF_1
0x4009203	        0x4883c001	                              add rax, 1	       117	string3.h	FUNCTION_108	CALL_3
0x4009207	    0x488905000000	            mov qword [0x0400920e], rax 	       117	string3.h	FUNCTION_108	CALL_3
0x400920e	    0x833d00000000	               cmp dword [0x04009215], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4009215	            0x7460	                            je 0x4009277	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4009217	    0x803d00000000	                cmp byte [0x0400921e], 0	     15667	i386-dis.c	FUNCTION_26
0x400921e	     0xf8487000000	                            je 0x40092ab	     15667	i386-dis.c	FUNCTION_26
0x4009224	    0x488305000000	               add qword [0x0400922c], 1	     15668	i386-dis.c	FUNCTION_26
0x400922c	      0xe9bfdaffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009231	     0xf1f80000000	                         nop dword [rax]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009238	    0x8b0500000000	            mov eax, dword [0x0400923e] 	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x400923e	            0xa804	                              test al, 4	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x4009240	            0x74cc	                            je 0x400920e	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x4009242	            0xa801	                              test al, 1	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4009244	            0x7412	                            je 0x4009258	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4009246	    0x486315000000	         movsxd rdx, dword [0x0400924d] 	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x400924d	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4009258	            0xa802	                              test al, 2	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400925a	            0x74b2	                            je 0x400920e	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400925c	    0x486305000000	         movsxd rax, dword [0x04009263] 	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x4009263	    0x833d00000000	               cmp dword [0x0400926a], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x400926a	    0xc70485000000	                mov dword [rax*4], 0x2f2	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x4009275	            0x75a0	                           jne 0x4009217	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4009277	    0x488b05000000	            mov rax, qword [0x0400927e] 	     16917	i386-dis.c	FUNCTION_67
0x400927e	      0xba29000000	                           mov edx, 0x29	     16917	i386-dis.c	FUNCTION_67
0x4009283	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4009287	    0x488905000000	            mov qword [0x0400928e], rax 	     16917	i386-dis.c	FUNCTION_67
0x400928e	    0x488b05000000	            mov rax, qword [0x04009295] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009295	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400929b	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400929f	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40092a3	    0x488905000000	            mov qword [0x040092aa], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40092aa	              0xc3	                                     ret	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40092ab	              0x50	                                push rax	     17028	i386-dis.c	FUNCTION_74
0x40092ac	      0xe800000000	                          call 0x40092b1	     15667	i386-dis.c	FUNCTION_26
OP_MXC	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	12
0x4001ff0	        0x4883ec08	                              sub rsp, 8	     16554	i386-dis.c	FUNCTION_54
0x4001ff4	    0x8b0500000000	            mov eax, dword [0x04001ffa] 	     16555	i386-dis.c	FUNCTION_54
0x4001ffa	    0x486315000000	         movsxd rdx, dword [0x04002001] 	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4002001	    0x488b3d000000	            mov rdi, qword [0x04002008] 	       117	string3.h	FUNCTION_108	CALL_3
0x4002008	      0x2500020000	                          and eax, 0x200	     16555	i386-dis.c	FUNCTION_54
0x400200d	     0x90500000000	              or dword [0x04002013], eax	     16555	i386-dis.c	FUNCTION_54
0x4002013	    0x488b05000000	            mov rax, qword [0x0400201a] 	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x400201a	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400201e	      0xe800000000	                          call 0x4002023	       117	string3.h	FUNCTION_108	CALL_3
0x4002023	    0x488905000000	            mov qword [0x0400202a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400202a	        0x4883c408	                              add rsp, 8	     16557	i386-dis.c	FUNCTION_54
0x400202e	              0xc3	                                     ret	     16557	i386-dis.c	FUNCTION_54
OP_XS	CALL,2:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	103
0x4008700	    0x833d00000000	               cmp dword [0x04008707], 3	     16662	i386-dis.c	FUNCTION_57	IF_1
0x4008707	            0x7437	                            je 0x4008740	     16662	i386-dis.c	FUNCTION_57	IF_1
0x4008709	    0x488b05000000	            mov rax, qword [0x04008710] 	     16917	i386-dis.c	FUNCTION_67
0x4008710	      0xba29000000	                           mov edx, 0x29	     16917	i386-dis.c	FUNCTION_67
0x4008715	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4008719	    0x488905000000	            mov qword [0x04008720], rax 	     16917	i386-dis.c	FUNCTION_67
0x4008720	    0x488b05000000	            mov rax, qword [0x04008727] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008727	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400872d	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008731	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008735	    0x488905000000	            mov qword [0x0400873c], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400873c	              0xc3	                                     ret	     16666	i386-dis.c	FUNCTION_57
0x400873d	           0xf1f00	                         nop dword [rax]	     16666	i386-dis.c	FUNCTION_57
0x4008740	        0x4883ec08	                              sub rsp, 8	     16661	i386-dis.c	FUNCTION_57
0x4008744	    0x803d00000000	                cmp byte [0x0400874b], 0	     16566	i386-dis.c	FUNCTION_55
0x400874b	     0xf847d010000	                            je 0x40088ce	     16566	i386-dis.c	FUNCTION_55
0x4008751	    0x8b1500000000	            mov edx, dword [0x04008757] 	     16576	i386-dis.c	FUNCTION_55
0x4008757	    0x488305000000	               add qword [0x0400875f], 1	     16567	i386-dis.c	FUNCTION_55
0x400875f	    0x8b0500000000	            mov eax, dword [0x04008765] 	     16575	i386-dis.c	FUNCTION_55
0x4008765	          0xf6c201	                              test dl, 1	     16576	i386-dis.c	FUNCTION_55
0x4008768	            0x740a	                            je 0x4008774	     16576	i386-dis.c	FUNCTION_55
0x400876a	    0x830d00000000	            or dword [0x04008771], 0x41 	     16576	i386-dis.c	FUNCTION_55
0x4008771	          0x83c008	                              add eax, 8	     16578	i386-dis.c	FUNCTION_55	IF_2
0x4008774	    0x8b0d00000000	            mov ecx, dword [0x0400877a] 	     16579	i386-dis.c	FUNCTION_55	IF_3
0x400877a	            0x85c9	                           test ecx, ecx	     16579	i386-dis.c	FUNCTION_55	IF_3
0x400877c	            0x7409	                            je 0x4008787	     16579	i386-dis.c	FUNCTION_55	IF_3
0x400877e	          0x83e202	                              and edx, 2	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008781	     0xf85d9000000	                           jne 0x4008860	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008787	          0x83e604	                              and esi, 4	     16586	i386-dis.c	FUNCTION_55	IF_5
0x400878a	            0x742e	                            je 0x40087ba	     16586	i386-dis.c	FUNCTION_55	IF_5
0x400878c	          0x83ff3f	                           cmp edi, 0x3f	     16588	i386-dis.c	FUNCTION_55	IF_5
0x400878f	            0x7729	                            ja 0x40087ba	     16588	i386-dis.c	FUNCTION_55	IF_5
0x4008791	    0x48ba000a0100	          movabs rdx, 0xa000000000010a00	     16587	i386-dis.c	FUNCTION_55	IF_5
0x400879b	        0x480fa3fa	                             bt rdx, rdi	     16587	i386-dis.c	FUNCTION_55	IF_5
0x400879f	            0x7319	                           jae 0x40087ba	     16587	i386-dis.c	FUNCTION_55	IF_5
0x40087a1	    0x488b15000000	            mov rdx, qword [0x040087a8] 	     13898	i386-dis.c	FUNCTION_11
0x40087a8	          0xc6022e	                    mov byte [rdx], 0x2e	     13898	i386-dis.c	FUNCTION_11
0x40087ab	        0xc6420173	                mov byte [rdx + 1], 0x73	     13899	i386-dis.c	FUNCTION_11
0x40087af	        0x4883c202	                              add rdx, 2	     13900	i386-dis.c	FUNCTION_11
0x40087b3	    0x488915000000	            mov qword [0x040087ba], rdx 	     13900	i386-dis.c	FUNCTION_11
0x40087ba	    0x803d00000000	                cmp byte [0x040087c1], 0	     16594	i386-dis.c	FUNCTION_55	IF_6
0x40087c1	            0x7460	                            je 0x4008823	     16594	i386-dis.c	FUNCTION_55	IF_6
0x40087c3	          0x83ff1a	                           cmp edi, 0x1a	     16595	i386-dis.c	FUNCTION_55	IF_6
0x40087c6	            0x7650	                           jbe 0x4008818	     16595	i386-dis.c	FUNCTION_55	IF_6
0x40087c8	          0x8d57eb	                   lea edx, [rdi - 0x15]	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40087cb	          0x83fa03	                              cmp edx, 3	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40087ce	            0x7653	                           jbe 0x4008823	     16600	i386-dis.c	FUNCTION_55	IF_6
0x40087d0	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40087d3	          0x83fa01	                              cmp edx, 1	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40087d6	     0xf8694000000	                           jbe 0x4008870	     16604	i386-dis.c	FUNCTION_55	IF_6
0x40087dc	          0x8d57e5	                   lea edx, [rdi - 0x1b]	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40087df	          0x83fa26	                           cmp edx, 0x26	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40087e2	     0xf86c1000000	                           jbe 0x40088a9	     16605	i386-dis.c	FUNCTION_55	IF_6
0x40087e8	    0x8b1500000000	            mov edx, dword [0x040087ee] 	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087ee	    0x81fa00010000	                          cmp edx, 0x100	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087f4	     0xf84a6000000	                            je 0x40088a0	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40087fa	    0x81fa00020000	                          cmp edx, 0x200	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008800	     0xf84bc000000	                            je 0x40088c2	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008806	          0x83c280	             add edx, 0xffffffffffffff80	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4008809	     0xf8481000000	                            je 0x4008890	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x400880f	      0xe800000000	                          call 0x4008814	     16624	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1	CALL_3
0x4008814	         0xf1f4000	                         nop dword [rax]	     16624	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1	CALL_3
0x4008818	      0xba00001206	                      mov edx, 0x6120000	     16596	i386-dis.c	FUNCTION_55	IF_6
0x400881d	        0x480fa3fa	                             bt rdx, rdi	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4008821	            0x73a5	                           jae 0x40087c8	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4008823	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008826	          0x83fa01	                              cmp edx, 1	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4008829	            0x7645	                           jbe 0x4008870	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x400882b	          0x83ff1b	                           cmp edi, 0x1b	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x400882e	    0x488b15000000	            mov rdx, qword [0x04008835] 	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4008835	    0x480f45150000	          cmovne rdx, qword [0x0400883d]	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x400883d	            0x4898	                                    cdqe	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x400883f	    0x488b3d000000	            mov rdi, qword [0x04008846] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008846	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400884a	      0xe800000000	                          call 0x400884f	       117	string3.h	FUNCTION_108	CALL_3
0x400884f	    0x488905000000	            mov qword [0x04008856], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008856	        0x4883c408	                              add rsp, 8	     16666	i386-dis.c	FUNCTION_57
0x400885a	              0xc3	                                     ret	     16666	i386-dis.c	FUNCTION_57
0x400885b	       0xf1f440000	                   nop dword [rax + rax]	     16666	i386-dis.c	FUNCTION_57
0x4008860	    0x830d00000000	            or dword [0x04008867], 0x42 	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4008867	          0x83c010	                           add eax, 0x10	     16583	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x400886a	      0xe918ffffff	                           jmp 0x4008787	     16583	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x400886f	              0x90	                                     nop	     16583	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x4008870	    0x8b1500000000	            mov edx, dword [0x04008876] 	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008876	    0x81fa00010000	                          cmp edx, 0x100	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400887c	            0x7412	                            je 0x4008890	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400887e	    0x81fa00020000	                          cmp edx, 0x200	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008884	            0x741a	                            je 0x40088a0	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008886	          0x83c280	             add edx, 0xffffffffffffff80	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008889	            0x7405	                            je 0x4008890	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x400888b	      0xe800000000	                          call 0x4008890	     16640	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2	CALL_4
0x4008890	    0x488b15000000	            mov rdx, qword [0x04008897] 	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008897	            0xeba4	                           jmp 0x400883d	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4008899	     0xf1f80000000	                         nop dword [rax]	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40088a0	    0x488b15000000	            mov rdx, qword [0x040088a7] 	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40088a7	            0xeb94	                           jmp 0x400883d	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x40088a9	    0x48b901000000	                movabs rcx, 0x5e00000001	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40088b3	        0x480fa3d1	                             bt rcx, rdx	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40088b7	     0xf826effffff	                            jb 0x400882b	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40088bd	      0xe926ffffff	                           jmp 0x40087e8	     16606	i386-dis.c	FUNCTION_55	IF_6
0x40088c2	    0x488b15000000	            mov rdx, qword [0x040088c9] 	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40088c9	      0xe96fffffff	                           jmp 0x400883d	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x40088ce	      0xe800000000	                          call 0x40088d3	     16566	i386-dis.c	FUNCTION_55
print_i386_disassembler_options	CALL,16:IF,0:FOR,1:ELSE,0:WHILE,0:SWITCH,1:functions,0:DO,0	147
0x400c700	              0x53	                                push rbx	     12699	i386-dis.c	FUNCTION_7
0x400c701	      0xba05000000	                              mov edx, 5	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x400c706	          0x4889fb	                            mov rbx, rdi	     12699	i386-dis.c	FUNCTION_7
0x400c709	      0xbe00000000	                              mov esi, 0	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x400c70e	      0xbf00000000	                              mov edi, 0	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x400c713	      0xe800000000	                          call 0x400c718	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x400c718	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c71b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c71e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c723	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c725	      0xe800000000	                          call 0x400c72a	        97	stdio2.h	CALL_149
0x400c72a	      0xba05000000	                              mov edx, 5	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x400c72f	      0xbe00000000	                              mov esi, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x400c734	      0xbf00000000	                              mov edi, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x400c739	      0xe800000000	                          call 0x400c73e	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x400c73e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c741	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c744	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c749	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c74b	      0xe800000000	                          call 0x400c750	        97	stdio2.h	CALL_149
0x400c750	      0xba05000000	                              mov edx, 5	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x400c755	      0xbe00000000	                              mov esi, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x400c75a	      0xbf00000000	                              mov edi, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x400c75f	      0xe800000000	                          call 0x400c764	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x400c764	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c767	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c76a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c76f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c771	      0xe800000000	                          call 0x400c776	        97	stdio2.h	CALL_149
0x400c776	      0xba05000000	                              mov edx, 5	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400c77b	      0xbe00000000	                              mov esi, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400c780	      0xbf00000000	                              mov edi, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400c785	      0xe800000000	                          call 0x400c78a	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x400c78a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c78d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c790	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c795	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c797	      0xe800000000	                          call 0x400c79c	        97	stdio2.h	CALL_149
0x400c79c	      0xba05000000	                              mov edx, 5	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x400c7a1	      0xbe00000000	                              mov esi, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x400c7a6	      0xbf00000000	                              mov edi, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x400c7ab	      0xe800000000	                          call 0x400c7b0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x400c7b0	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c7b3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c7b6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c7bb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c7bd	      0xe800000000	                          call 0x400c7c2	        97	stdio2.h	CALL_149
0x400c7c2	      0xba05000000	                              mov edx, 5	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400c7c7	      0xbe00000000	                              mov esi, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400c7cc	      0xbf00000000	                              mov edi, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400c7d1	      0xe800000000	                          call 0x400c7d6	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x400c7d6	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c7d9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c7dc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c7e1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c7e3	      0xe800000000	                          call 0x400c7e8	        97	stdio2.h	CALL_149
0x400c7e8	      0xba05000000	                              mov edx, 5	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x400c7ed	      0xbe00000000	                              mov esi, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x400c7f2	      0xbf00000000	                              mov edi, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x400c7f7	      0xe800000000	                          call 0x400c7fc	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x400c7fc	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c7ff	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c802	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c807	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c809	      0xe800000000	                          call 0x400c80e	        97	stdio2.h	CALL_149
0x400c80e	      0xba05000000	                              mov edx, 5	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x400c813	      0xbe00000000	                              mov esi, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x400c818	      0xbf00000000	                              mov edi, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x400c81d	      0xe800000000	                          call 0x400c822	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x400c822	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c825	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c828	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c82d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c82f	      0xe800000000	                          call 0x400c834	        97	stdio2.h	CALL_149
0x400c834	      0xba05000000	                              mov edx, 5	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x400c839	      0xbe00000000	                              mov esi, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x400c83e	      0xbf00000000	                              mov edi, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x400c843	      0xe800000000	                          call 0x400c848	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x400c848	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c84b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c84e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c853	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c855	      0xe800000000	                          call 0x400c85a	        97	stdio2.h	CALL_149
0x400c85a	      0xba05000000	                              mov edx, 5	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x400c85f	      0xbe00000000	                              mov esi, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x400c864	      0xbf00000000	                              mov edi, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x400c869	      0xe800000000	                          call 0x400c86e	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x400c86e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c871	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c874	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c879	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c87b	      0xe800000000	                          call 0x400c880	        97	stdio2.h	CALL_149
0x400c880	      0xba05000000	                              mov edx, 5	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x400c885	      0xbe00000000	                              mov esi, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x400c88a	      0xbf00000000	                              mov edi, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x400c88f	      0xe800000000	                          call 0x400c894	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x400c894	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c897	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c89a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c89f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c8a1	      0xe800000000	                          call 0x400c8a6	        97	stdio2.h	CALL_149
0x400c8a6	      0xba05000000	                              mov edx, 5	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x400c8ab	      0xbe00000000	                              mov esi, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x400c8b0	      0xbf00000000	                              mov edi, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x400c8b5	      0xe800000000	                          call 0x400c8ba	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x400c8ba	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c8bd	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c8c0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c8c5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c8c7	      0xe800000000	                          call 0x400c8cc	        97	stdio2.h	CALL_149
0x400c8cc	      0xba05000000	                              mov edx, 5	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x400c8d1	      0xbe00000000	                              mov esi, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x400c8d6	      0xbf00000000	                              mov edi, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x400c8db	      0xe800000000	                          call 0x400c8e0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x400c8e0	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c8e3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c8e6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c8eb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c8ed	      0xe800000000	                          call 0x400c8f2	        97	stdio2.h	CALL_149
0x400c8f2	      0xba05000000	                              mov edx, 5	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x400c8f7	      0xbe00000000	                              mov esi, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x400c8fc	      0xbf00000000	                              mov edi, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x400c901	      0xe800000000	                          call 0x400c906	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x400c906	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c909	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c90c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c911	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c913	      0xe800000000	                          call 0x400c918	        97	stdio2.h	CALL_149
0x400c918	      0xba05000000	                              mov edx, 5	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x400c91d	      0xbe00000000	                              mov esi, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x400c922	      0xbf00000000	                              mov edi, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x400c927	      0xe800000000	                          call 0x400c92c	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x400c92c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c92f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c932	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c937	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c939	      0xe800000000	                          call 0x400c93e	        97	stdio2.h	CALL_149
0x400c93e	      0xba05000000	                              mov edx, 5	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x400c943	      0xbe00000000	                              mov esi, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x400c948	      0xbf00000000	                              mov edi, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x400c94d	      0xe800000000	                          call 0x400c952	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x400c952	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_149
0x400c955	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_149
0x400c958	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_149
0x400c95d	              0x5b	                                 pop rbx	     12721	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1
0x400c95e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_149
0x400c960	      0xe900000000	                   jmp section_end..text	        97	stdio2.h	CALL_149
HLE_Fixup2	CALL,1:IF,3:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	24
0x4008aa0	        0x4883ec08	                              sub rsp, 8	     17000	i386-dis.c	FUNCTION_72
0x4008aa4	    0x833d00000000	               cmp dword [0x04008aab], 3	     17001	i386-dis.c	FUNCTION_72	IF_1
0x4008aab	            0x7453	                            je 0x4008b00	     17001	i386-dis.c	FUNCTION_72	IF_1
0x4008aad	    0x8b0500000000	            mov eax, dword [0x04008ab3] 	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4008ab3	            0xa801	                              test al, 1	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4008ab5	            0x7412	                            je 0x4008ac9	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4008ab7	    0x486315000000	         movsxd rdx, dword [0x04008abe] 	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4008abe	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4008ac9	            0xa802	                              test al, 2	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4008acb	            0x7412	                            je 0x4008adf	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4008acd	    0x486305000000	         movsxd rax, dword [0x04008ad4] 	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4008ad4	    0xc70485000000	                mov dword [rax*4], 0x2f2	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4008adf	    0x803d00000000	                cmp byte [0x04008ae6], 0	     15667	i386-dis.c	FUNCTION_26
0x4008ae6	            0x7432	                            je 0x4008b1a	     15667	i386-dis.c	FUNCTION_26
0x4008ae8	    0x488305000000	               add qword [0x04008af0], 1	     15668	i386-dis.c	FUNCTION_26
0x4008af0	        0x4883c408	                              add rsp, 8	     17010	i386-dis.c	FUNCTION_72
0x4008af4	      0xe9f7e1ffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4008af9	     0xf1f80000000	                         nop dword [rax]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4008b00	    0x803d00000000	                cmp byte [0x04008b07], 0	     15667	i386-dis.c	FUNCTION_26
0x4008b07	            0x7411	                            je 0x4008b1a	     15667	i386-dis.c	FUNCTION_26
0x4008b09	    0x488305000000	               add qword [0x04008b11], 1	     15668	i386-dis.c	FUNCTION_26
0x4008b11	        0x4883c408	                              add rsp, 8	     17010	i386-dis.c	FUNCTION_72
0x4008b15	      0xe9369effff	                   jmp sym.OP_E_register	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4008b1a	      0xe800000000	                          call 0x4008b1f	     15667	i386-dis.c	FUNCTION_26
OP_XMM_Vex	CALL,2:IF,2:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	78
0x4003bd0	        0x4883ec08	                              sub rsp, 8	     17583	i386-dis.c	FUNCTION_90
0x4003bd4	    0x833d00000000	               cmp dword [0x04003bdb], 3	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4003bdb	            0x7417	                            je 0x4003bf4	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4003bdd	    0x448b0d000000	            mov r9d, dword [0x04003be4] 	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4003be4	          0x4585c9	                           test r9d, r9d	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4003be7	     0xf85e3000000	                           jne 0x4003cd0	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4003bed	    0xc60500000000	                mov byte [0x04003bf4], 0	     17588	i386-dis.c	FUNCTION_90	IF_1
0x4003bf4	    0xf60500000000	               test byte [0x04003bfb], 4	     16429	i386-dis.c	FUNCTION_51
0x4003bfb	    0x8b0500000000	            mov eax, dword [0x04003c01] 	     16426	i386-dis.c	FUNCTION_51
0x4003c01	            0x740a	                            je 0x4003c0d	     16429	i386-dis.c	FUNCTION_51
0x4003c03	    0x830d00000000	            or dword [0x04003c0a], 0x44 	     16429	i386-dis.c	FUNCTION_51
0x4003c0a	          0x83c008	                              add eax, 8	     16431	i386-dis.c	FUNCTION_51	IF_1
0x4003c0d	    0x8b3500000000	            mov esi, dword [0x04003c13] 	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4003c13	            0x85f6	                           test esi, esi	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4003c15	            0x740e	                            je 0x4003c25	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4003c17	    0x8b0d00000000	            mov ecx, dword [0x04003c1d] 	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003c1d	          0x8d5010	                   lea edx, [rax + 0x10]	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003c20	            0x85c9	                           test ecx, ecx	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003c22	           0xf44c2	                          cmove eax, edx	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003c25	    0x803d00000000	                cmp byte [0x04003c2c], 0	     16438	i386-dis.c	FUNCTION_51	IF_4
0x4003c2c	            0x7442	                            je 0x4003c70	     16438	i386-dis.c	FUNCTION_51	IF_4
0x4003c2e	          0x83ff39	                           cmp edi, 0x39	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003c31	            0x762d	                           jbe 0x4003c60	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003c33	    0x8b1500000000	            mov edx, dword [0x04003c39] 	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003c39	    0x81fa00010000	                          cmp edx, 0x100	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003c3f	     0xf84db000000	                            je 0x4003d20	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003c45	    0x81fa00020000	                          cmp edx, 0x200	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003c4b	     0xf84bf000000	                            je 0x4003d10	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003c51	          0x83c280	             add edx, 0xffffffffffffff80	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003c54	            0x7427	                            je 0x4003c7d	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003c56	      0xe800000000	                          call 0x4003c5b	     16478	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2	CALL_2
0x4003c5b	       0xf1f440000	                   nop dword [rax + rax]	     16478	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2	CALL_2
0x4003c60	    0x48ba00000e08	           movabs rdx, 0x2000000080e0000	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003c6a	        0x480fa3fa	                             bt rdx, rdi	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003c6e	            0x73c3	                           jae 0x4003c33	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003c70	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003c73	          0x83fa01	                              cmp edx, 1	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003c76	            0x7630	                           jbe 0x4003ca8	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003c78	          0x83ff1b	                           cmp edi, 0x1b	     16481	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4003c7b	            0x7441	                            je 0x4003cbe	     16481	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4003c7d	    0x488b15000000	            mov rdx, qword [0x04003c84] 	     16472	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003c84	            0x4898	                                    cdqe	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x4003c86	    0x488b3d000000	            mov rdi, qword [0x04003c8d] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003c8d	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003c91	      0xe800000000	                          call 0x4003c96	       117	string3.h	FUNCTION_108	CALL_3
0x4003c96	    0x488905000000	            mov qword [0x04003c9d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003c9d	        0x4883c408	                              add rsp, 8	     17591	i386-dis.c	FUNCTION_90
0x4003ca1	              0xc3	                                     ret	     17591	i386-dis.c	FUNCTION_90
0x4003ca2	    0x660f1f440000	                    nop word [rax + rax]	     17591	i386-dis.c	FUNCTION_90
0x4003ca8	    0x8b1500000000	            mov edx, dword [0x04003cae] 	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003cae	    0x81fa00010000	                          cmp edx, 0x100	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003cb4	            0x74c7	                            je 0x4003c7d	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003cb6	    0x81fa00020000	                          cmp edx, 0x200	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003cbc	            0x7593	                           jne 0x4003c51	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003cbe	    0x488b15000000	            mov rdx, qword [0x04003cc5] 	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003cc5	            0xebbd	                           jmp 0x4003c84	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003cc7	    0x660f1f840000	                    nop word [rax + rax]	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003cd0	    0x488b05000000	            mov rax, qword [0x04003cd7] 	     16917	i386-dis.c	FUNCTION_67
0x4003cd7	    0x41b829000000	                           mov r8d, 0x29	     16917	i386-dis.c	FUNCTION_67
0x4003cdd	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4003ce1	    0x488905000000	            mov qword [0x04003ce8], rax 	     16917	i386-dis.c	FUNCTION_67
0x4003ce8	    0x488b05000000	            mov rax, qword [0x04003cef] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003cef	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003cf5	      0x6644894004	                 mov word [rax + 4], r8w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003cfa	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003cfe	    0x488905000000	            mov qword [0x04003d05], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003d05	      0xe9e3feffff	                           jmp 0x4003bed	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003d0a	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003d10	    0x488b15000000	            mov rdx, qword [0x04003d17] 	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003d17	      0xe968ffffff	                           jmp 0x4003c84	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003d1c	         0xf1f4000	                         nop dword [rax]	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003d20	    0x8b1500000000	            mov edx, dword [0x04003d26] 	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003d26	            0x85d2	                           test edx, edx	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003d28	            0x7594	                           jne 0x4003cbe	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003d2a	          0x83ef37	                           sub edi, 0x37	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003d2d	          0x83ff01	                              cmp edi, 1	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003d30	            0x778c	                            ja 0x4003cbe	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003d32	      0xe946ffffff	                           jmp 0x4003c7d	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
prefix_name	CALL,0:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,1:functions,0:DO,0	98
0x4000040	          0x83ff67	                           cmp edi, 0x67	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000043	     0xf8437010000	                            je 0x4000180	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000049	            0x7e45	                           jle 0x4000090	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400004b	    0x81ff3e010000	                          cmp edi, 0x13e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000051	     0xf84a1000000	                            je 0x40000f8	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000057	            0x7f6f	                            jg 0x40000c8	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000059	    0x81fff0000000	                           cmp edi, 0xf0	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400005f	      0xb800000000	                              mov eax, 0	     12602	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000064	            0x7420	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000066	     0xf8ec4000000	                           jle 0x4000130	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400006c	    0x81fff2000000	                           cmp edi, 0xf2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000072	      0xb800000000	                              mov eax, 0	     12600	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000077	            0x740d	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000079	    0x81fff3000000	                           cmp edi, 0xf3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400007f	      0xb800000000	                              mov eax, 0	     12598	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000084	            0x7538	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000086	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x4000088	     0xf1f84000000	                   nop dword [rax + rax]	     12637	i386-dis.c	FUNCTION_3
0x4000090	          0x83ff4f	                           cmp edi, 0x4f	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000093	            0x7f6b	                            jg 0x4000100	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000095	          0x83ff40	                           cmp edi, 0x40	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000098	     0xf8dd2000000	                           jge 0x4000170	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400009e	          0x83ff2e	                           cmp edi, 0x2e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000a1	      0xb800000000	                              mov eax, 0	     12604	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000a6	            0x74de	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000a8	            0x7e76	                           jle 0x4000120	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000aa	          0x83ff36	                           cmp edi, 0x36	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ad	      0xb800000000	                              mov eax, 0	     12606	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000b2	            0x74d2	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000b4	          0x83ff3e	                           cmp edi, 0x3e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000b7	      0xb800000000	                              mov eax, 0	     12608	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000bc	            0x74c8	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000be	            0x31c0	                            xor eax, eax	     12635	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000c0	              0xc3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x40000c1	     0xf1f80000000	                         nop dword [rax]	     12637	i386-dis.c	FUNCTION_3
0x40000c8	    0x81fff2020000	                          cmp edi, 0x2f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ce	      0xb800000000	                              mov eax, 0	     12627	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000d3	            0x74b1	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000d5	            0x7e69	                           jle 0x4000140	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000d7	    0x81fff2040000	                          cmp edi, 0x4f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000dd	      0xb800000000	                              mov eax, 0	     12631	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000e2	            0x74a2	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000e4	    0x81fff3040000	                          cmp edi, 0x4f3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ea	      0xb800000000	                              mov eax, 0	     12629	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ef	            0x75cd	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000f1	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x40000f3	       0xf1f440000	                   nop dword [rax + rax]	     12637	i386-dis.c	FUNCTION_3
0x40000f8	      0xb800000000	                              mov eax, 0	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000fd	              0xc3	                                     ret	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000fe	            0x6690	                                     nop	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000100	          0x83ff65	                           cmp edi, 0x65	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000103	      0xb800000000	                              mov eax, 0	     12614	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000108	     0xf8478ffffff	                            je 0x4000086	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400010e	            0x7f48	                            jg 0x4000158	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000110	          0x83ff64	                           cmp edi, 0x64	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000113	      0xb800000000	                              mov eax, 0	     12612	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000118	            0x75a4	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400011a	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x400011c	         0xf1f4000	                         nop dword [rax]	     12637	i386-dis.c	FUNCTION_3
0x4000120	          0x83ff26	                           cmp edi, 0x26	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000123	      0xb800000000	                              mov eax, 0	     12610	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000128	            0x7594	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400012a	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x400012c	         0xf1f4000	                         nop dword [rax]	     12637	i386-dis.c	FUNCTION_3
0x4000130	    0x81ff9b000000	                           cmp edi, 0x9b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000136	      0xb800000000	                              mov eax, 0	     12623	i386-dis.c	FUNCTION_3	SWITCH_1
0x400013b	            0x7581	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400013d	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x400013f	              0x90	                                     nop	     12637	i386-dis.c	FUNCTION_3
0x4000140	    0x81fff3010000	                          cmp edi, 0x1f3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000146	      0xb800000000	                              mov eax, 0	     12625	i386-dis.c	FUNCTION_3	SWITCH_1
0x400014b	     0xf856dffffff	                           jne 0x40000be	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000151	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
0x4000153	       0xf1f440000	                   nop dword [rax + rax]	     12637	i386-dis.c	FUNCTION_3
0x4000158	          0x83e601	                              and esi, 1	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x400015b	      0xba00000000	                              mov edx, 0	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000160	      0xb800000000	                              mov eax, 0	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000165	        0x480f44c2	                          cmove rax, rdx	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000169	              0xc3	                                     ret	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x400016a	    0x660f1f440000	                    nop word [rax + rax]	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000170	          0x83ef40	                           sub edi, 0x40	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000173	          0x4863ff	                         movsxd rdi, edi	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000176	    0x488b04fd0000	                  mov rax, qword [rdi*8]	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x400017e	              0xc3	                                     ret	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x400017f	              0x90	                                     nop	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000180	    0x833d00000000	               cmp dword [0x04000187], 2	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000187	            0x7417	                            je 0x40001a0	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x4000189	          0x83e602	                              and esi, 2	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400018c	      0xba00000000	                              mov edx, 0	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4000191	      0xb800000000	                              mov eax, 0	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x4000196	        0x480f45c2	                         cmovne rax, rdx	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400019a	              0xc3	                                     ret	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x400019b	       0xf1f440000	                   nop dword [rax + rax]	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x40001a0	          0x83e602	                              and esi, 2	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a3	      0xba00000000	                              mov edx, 0	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a8	      0xb800000000	                              mov eax, 0	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001ad	        0x480f44c2	                          cmove rax, rdx	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001b1	              0xc3	                                     ret	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
get64	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	66
0x4003ef0	            0x4156	                                push r14	     15770	i386-dis.c	FUNCTION_28
0x4003ef2	            0x4155	                                push r13	     15770	i386-dis.c	FUNCTION_28
0x4003ef4	            0x4154	                                push r12	     15770	i386-dis.c	FUNCTION_28
0x4003ef6	    0x4c8b25000000	            mov r12, qword [0x04003efd] 	     15776	i386-dis.c	FUNCTION_28
0x4003efd	              0x55	                                push rbp	     15770	i386-dis.c	FUNCTION_28
0x4003efe	              0x53	                                push rbx	     15770	i386-dis.c	FUNCTION_28
0x4003eff	    0x488b0d000000	            mov rcx, qword [0x04003f06] 	     15776	i386-dis.c	FUNCTION_28
0x4003f06	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     15776	i386-dis.c	FUNCTION_28
0x4003f0b	        0x488d5908	                      lea rbx, [rcx + 8]	     15776	i386-dis.c	FUNCTION_28
0x4003f0f	        0x488b7500	                    mov rsi, qword [rbp]	     15776	i386-dis.c	FUNCTION_28
0x4003f13	          0x4839f3	                            cmp rbx, rsi	     15776	i386-dis.c	FUNCTION_28
0x4003f16	            0x7740	                            ja 0x4003f58	     15776	i386-dis.c	FUNCTION_28
0x4003f18	         0xfb64107	               movzx eax, byte [rcx + 7]	     15776	i386-dis.c	FUNCTION_28
0x4003f1c	      0x440fb64104	               movzx r8d, byte [rcx + 4]	     15781	i386-dis.c	FUNCTION_28
0x4003f21	         0xfb67905	               movzx edi, byte [rcx + 5]	     15782	i386-dis.c	FUNCTION_28
0x4003f25	         0xfb65106	               movzx edx, byte [rcx + 6]	     15783	i386-dis.c	FUNCTION_28
0x4003f29	            0x8b31	                    mov esi, dword [rcx]	     15780	i386-dis.c	FUNCTION_28
0x4003f2b	    0x48891d000000	            mov qword [0x04003f32], rbx 	     15784	i386-dis.c	FUNCTION_28
0x4003f32	              0x5b	                                 pop rbx	     15791	i386-dis.c	FUNCTION_28
0x4003f33	          0xc1e018	                           shl eax, 0x18	     15791	i386-dis.c	FUNCTION_28
0x4003f36	          0xc1e708	                              shl edi, 8	     15782	i386-dis.c	FUNCTION_28
0x4003f39	          0x4409c0	                             or eax, r8d	     15782	i386-dis.c	FUNCTION_28
0x4003f3c	          0xc1e210	                           shl edx, 0x10	     15783	i386-dis.c	FUNCTION_28
0x4003f3f	             0x9f8	                             or eax, edi	     15783	i386-dis.c	FUNCTION_28
0x4003f41	             0x9d0	                             or eax, edx	     15790	i386-dis.c	FUNCTION_28
0x4003f43	            0x89f2	                            mov edx, esi	     15790	i386-dis.c	FUNCTION_28
0x4003f45	        0x48c1e020	                           shl rax, 0x20	     15790	i386-dis.c	FUNCTION_28
0x4003f49	              0x5d	                                 pop rbp	     15791	i386-dis.c	FUNCTION_28
0x4003f4a	          0x4801d0	                            add rax, rdx	     15790	i386-dis.c	FUNCTION_28
0x4003f4d	            0x415c	                                 pop r12	     15791	i386-dis.c	FUNCTION_28
0x4003f4f	            0x415d	                                 pop r13	     15791	i386-dis.c	FUNCTION_28
0x4003f51	            0x415e	                                 pop r14	     15791	i386-dis.c	FUNCTION_28
0x4003f53	              0xc3	                                     ret	     15791	i386-dis.c	FUNCTION_28
0x4003f54	         0xf1f4000	                         nop dword [rax]	     15791	i386-dis.c	FUNCTION_28
0x4003f58	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4003f5c	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4003f5f	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4003f63	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4003f68	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4003f6b	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4003f6f	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4003f72	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x4003f75	            0x7619	                           jbe 0x4003f90	       205	i386-dis.c	FUNCTION_1	IF_1
0x4003f77	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4003f7a	            0x743a	                            je 0x4003fb6	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4003f7c	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4003f80	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4003f85	      0xe800000000	                          call 0x4003f8a	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4003f8a	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4003f90	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4003f93	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4003f96	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4003f99	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4003f9e	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4003fa0	            0x7523	                           jne 0x4003fc5	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4003fa2	    0x488b0d000000	            mov rcx, qword [0x04003fa9] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4003fa9	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4003fad	        0x488d5908	                      lea rbx, [rcx + 8]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4003fb1	      0xe962ffffff	                           jmp 0x4003f18	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4003fb6	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4003fb9	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4003fbc	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4003fbe	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4003fc3	            0xebb7	                           jmp 0x4003f7c	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4003fc5	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4003fc9	            0xebac	                           jmp 0x4003f77	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
print_insn_i386	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	2
0x400c6f0	    0xc60500000000	            mov byte [0x0400c6f7], 0xff 	     12692	i386-dis.c	FUNCTION_6
0x400c6f7	      0xe9f4d7ffff	                      jmp sym.print_insn	     12694	i386-dis.c	FUNCTION_6	CALL_1
OP_C	CALL,1:IF,2:FOR,0:ELSE,2:WHILE,0:SWITCH,0:functions,0:DO,0	30
0x4001e20	        0x4883ec08	                              sub rsp, 8	     16353	i386-dis.c	FUNCTION_46
0x4001e24	    0xf60500000000	               test byte [0x04001e2b], 4	     16355	i386-dis.c	FUNCTION_46	IF_1
0x4001e2b	            0x745b	                            je 0x4001e88	     16355	i386-dis.c	FUNCTION_46	IF_1
0x4001e2d	    0x830d00000000	            or dword [0x04001e34], 0x44 	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4001e34	    0x41b808000000	                              mov r8d, 8	     16358	i386-dis.c	FUNCTION_46	IF_1
0x4001e3a	    0x440305000000	             add r8d, dword [0x04001e41]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001e41	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001e46	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001e4b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001e50	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001e55	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001e57	      0xe800000000	                          call 0x4001e5c	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001e5c	    0x480fbe350000	           movsx rsi, byte [0x04001e64] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001e64	    0x488b3d000000	            mov rdi, qword [0x04001e6b] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001e6b	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4001e72	      0xe800000000	                          call 0x4001e77	       117	string3.h	FUNCTION_108	CALL_3
0x4001e77	    0x488905000000	            mov qword [0x04001e7e], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4001e7e	        0x4883c408	                              add rsp, 8	     16370	i386-dis.c	FUNCTION_46
0x4001e82	              0xc3	                                     ret	     16370	i386-dis.c	FUNCTION_46
0x4001e83	       0xf1f440000	                   nop dword [rax + rax]	     16370	i386-dis.c	FUNCTION_46
0x4001e88	          0x4531c0	                            xor r8d, r8d	     16367	i386-dis.c	FUNCTION_46	ELSE_2
0x4001e8b	    0x833d00000000	               cmp dword [0x04001e92], 2	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4001e92	            0x74a6	                            je 0x4001e3a	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4001e94	    0xf60500000000	               test byte [0x04001e9b], 4	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4001e9b	            0x749d	                            je 0x4001e3a	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4001e9d	    0x486305000000	         movsxd rax, dword [0x04001ea4] 	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4001ea4	    0x830d00000000	                or dword [0x04001eab], 4	     16363	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4001eab	    0x41b808000000	                              mov r8d, 8	     16364	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4001eb1	    0xc70485000000	                    mov dword [rax*4], 0	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4001ebc	      0xe979ffffff	                           jmp 0x4001e3a	     16364	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
HLE_Fixup3	CALL,1:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	21
0x4008a30	        0x4883ec08	                              sub rsp, 8	     17017	i386-dis.c	FUNCTION_73
0x4008a34	    0x833d00000000	               cmp dword [0x04008a3b], 3	     17018	i386-dis.c	FUNCTION_73	IF_1
0x4008a3b	            0x7443	                            je 0x4008a80	     17018	i386-dis.c	FUNCTION_73	IF_1
0x4008a3d	    0x486305000000	         movsxd rax, dword [0x04008a44] 	     17019	i386-dis.c	FUNCTION_73	IF_1
0x4008a44	    0x3b0500000000	            cmp eax, dword [0x04008a4a] 	     17019	i386-dis.c	FUNCTION_73	IF_1
0x4008a4a	            0x7e14	                           jle 0x4008a60	     17019	i386-dis.c	FUNCTION_73	IF_1
0x4008a4c	    0xf60500000000	               test byte [0x04008a53], 1	     17020	i386-dis.c	FUNCTION_73	IF_1
0x4008a53	            0x740b	                            je 0x4008a60	     17020	i386-dis.c	FUNCTION_73	IF_1
0x4008a55	    0xc70485000000	                mov dword [rax*4], 0x4f3	     17021	i386-dis.c	FUNCTION_73	IF_1
0x4008a60	    0x803d00000000	                cmp byte [0x04008a67], 0	     15667	i386-dis.c	FUNCTION_26
0x4008a67	            0x7431	                            je 0x4008a9a	     15667	i386-dis.c	FUNCTION_26
0x4008a69	    0x488305000000	               add qword [0x04008a71], 1	     15668	i386-dis.c	FUNCTION_26
0x4008a71	        0x4883c408	                              add rsp, 8	     17024	i386-dis.c	FUNCTION_73
0x4008a75	      0xe976e2ffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4008a7a	    0x660f1f440000	                    nop word [rax + rax]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4008a80	    0x803d00000000	                cmp byte [0x04008a87], 0	     15667	i386-dis.c	FUNCTION_26
0x4008a87	            0x7411	                            je 0x4008a9a	     15667	i386-dis.c	FUNCTION_26
0x4008a89	    0x488305000000	               add qword [0x04008a91], 1	     15668	i386-dis.c	FUNCTION_26
0x4008a91	        0x4883c408	                              add rsp, 8	     17024	i386-dis.c	FUNCTION_73
0x4008a95	      0xe9b69effff	                   jmp sym.OP_E_register	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4008a9a	      0xe800000000	                          call 0x4008a9f	     15667	i386-dis.c	FUNCTION_26
OP_Skip_MODRM	CALL,0:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	6
0x40001e0	    0x803d00000000	                cmp byte [0x040001e7], 0	     13908	i386-dis.c	FUNCTION_12
0x40001e7	            0x7409	                            je 0x40001f2	     13908	i386-dis.c	FUNCTION_12
0x40001e9	    0x488305000000	               add qword [0x040001f1], 1	     13909	i386-dis.c	FUNCTION_12
0x40001f1	              0xc3	                                     ret	     13909	i386-dis.c	FUNCTION_12
0x40001f2	              0x50	                                push rax	     13906	i386-dis.c	FUNCTION_12
0x40001f3	      0xe800000000	                          call 0x40001f8	     13908	i386-dis.c	FUNCTION_12
VPCOM_Fixup	CALL,3:IF,2:FOR,0:ELSE,2:WHILE,0:SWITCH,0:functions,0:DO,0	134
0x4004910	            0x4156	                                push r14	     17734	i386-dis.c	FUNCTION_94
0x4004912	            0x4155	                                push r13	     17734	i386-dis.c	FUNCTION_94
0x4004914	            0x4154	                                push r12	     17734	i386-dis.c	FUNCTION_94
0x4004916	              0x55	                                push rbp	     17734	i386-dis.c	FUNCTION_94
0x4004917	              0x53	                                push rbx	     17734	i386-dis.c	FUNCTION_94
0x4004918	        0x4883ec30	                           sub rsp, 0x30	     17734	i386-dis.c	FUNCTION_94
0x400491c	    0x4c8b25000000	            mov r12, qword [0x04004923] 	     17737	i386-dis.c	FUNCTION_94
0x4004923	    0x64488b042528	                mov rax, qword fs:[0x28]	     17734	i386-dis.c	FUNCTION_94
0x400492c	      0x4889442428	             mov qword [rsp + 0x28], rax	     17734	i386-dis.c	FUNCTION_94
0x4004931	            0x31c0	                            xor eax, eax	     17734	i386-dis.c	FUNCTION_94
0x4004933	    0x488b05000000	            mov rax, qword [0x0400493a] 	     17737	i386-dis.c	FUNCTION_94
0x400493a	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     17737	i386-dis.c	FUNCTION_94
0x400493f	        0x488d5801	                      lea rbx, [rax + 1]	     17737	i386-dis.c	FUNCTION_94
0x4004943	        0x488b7500	                    mov rsi, qword [rbp]	     17737	i386-dis.c	FUNCTION_94
0x4004947	          0x4839f3	                            cmp rbx, rsi	     17737	i386-dis.c	FUNCTION_94
0x400494a	     0xf87a0000000	                            ja 0x40049f0	     17737	i386-dis.c	FUNCTION_94
0x4004950	        0x440fb600	                   movzx r8d, byte [rax]	     17738	i386-dis.c	FUNCTION_94
0x4004954	    0x48891d000000	            mov qword [0x0400495b], rbx 	     17738	i386-dis.c	FUNCTION_94
0x400495b	        0x4183f807	                              cmp r8d, 7	     17739	i386-dis.c	FUNCTION_94	IF_1	CALL_1
0x400495f	     0xf87cb000000	                            ja 0x4004a30	     17739	i386-dis.c	FUNCTION_94	IF_1	CALL_1
0x4004965	    0x488b05000000	            mov rax, qword [0x0400496c] 	     17742	i386-dis.c	FUNCTION_94	IF_1
0x400496c	         0xfb650fe	               movzx edx, byte [rax - 2]	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004970	          0x80fa6d	                            cmp dl, 0x6d	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004973	     0xf8417010000	                            je 0x4004a90	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004979	        0x488d78fe	                      lea rdi, [rax - 2]	     17742	i386-dis.c	FUNCTION_94	IF_1
0x400497d	          0x881424	                      mov byte [rsp], dl	     17753	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x4004980	         0xfb640ff	               movzx eax, byte [rax - 1]	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x4004984	      0xc644240200	                   mov byte [rsp + 2], 0	     17755	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x4004989	        0x88442401	                  mov byte [rsp + 1], al	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400498d	          0x4589c0	                            mov r8d, r8d	     17758	i386-dis.c	FUNCTION_94	IF_1
0x4004990	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004993	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004998	        0x49c1e004	                               shl r8, 4	     17758	i386-dis.c	FUNCTION_94	IF_1
0x400499c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x40049a3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40049a8	    0x498d98000000	                           lea rbx, [r8]	     17758	i386-dis.c	FUNCTION_94	IF_1
0x40049af	    0x4d8b80000000	                      mov r8, qword [r8]	        33	stdio2.h	FUNCTION_113	CALL_1
0x40049b6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40049b8	      0xe800000000	                          call 0x40049bd	        33	stdio2.h	FUNCTION_113	CALL_1
0x40049bd	          0x8b4308	                mov eax, dword [rbx + 8]	     17759	i386-dis.c	FUNCTION_94	IF_1
0x40049c0	    0x480105000000	            add qword [0x040049c7], rax 	     17759	i386-dis.c	FUNCTION_94	IF_1
0x40049c7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     17769	i386-dis.c	FUNCTION_94
0x40049cc	    0x644833042528	                xor rax, qword fs:[0x28]	     17769	i386-dis.c	FUNCTION_94
0x40049d5	     0xf8560010000	                           jne 0x4004b3b	     17769	i386-dis.c	FUNCTION_94
0x40049db	        0x4883c430	                           add rsp, 0x30	     17769	i386-dis.c	FUNCTION_94
0x40049df	              0x5b	                                 pop rbx	     17769	i386-dis.c	FUNCTION_94
0x40049e0	              0x5d	                                 pop rbp	     17769	i386-dis.c	FUNCTION_94
0x40049e1	            0x415c	                                 pop r12	     17769	i386-dis.c	FUNCTION_94
0x40049e3	            0x415d	                                 pop r13	     17769	i386-dis.c	FUNCTION_94
0x40049e5	            0x415e	                                 pop r14	     17769	i386-dis.c	FUNCTION_94
0x40049e7	              0xc3	                                     ret	     17769	i386-dis.c	FUNCTION_94
0x40049e8	     0xf1f84000000	                   nop dword [rax + rax]	     17769	i386-dis.c	FUNCTION_94
0x40049f0	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x40049f4	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x40049f7	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x40049fb	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4004a00	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4004a03	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4004a07	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004a0a	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x4004a0d	     0xf8695000000	                           jbe 0x4004aa8	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004a13	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004a16	     0xf8424010000	                            je 0x4004b40	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004a1c	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004a20	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004a25	      0xe800000000	                          call 0x4004a2a	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004a2a	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004a30	    0x833d00000000	               cmp dword [0x04004a37], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004a37	    0xc60500000000	            mov byte [0x04004a3e], 0x24 	     17764	i386-dis.c	FUNCTION_94	ELSE_2
0x4004a3e	     0xf8494000000	                            je 0x4004ad8	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004a44	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004a49	      0xba63000000	                           mov edx, 0x63	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004a4e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004a53	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004a58	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004a5a	      0xe800000000	                          call 0x4004a5f	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004a5f	    0x480fbe350000	           movsx rsi, byte [0x04004a67] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004a67	    0x488b3d000000	            mov rdi, qword [0x04004a6e] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004a6e	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004a75	      0xe800000000	                          call 0x4004a7a	       117	string3.h	FUNCTION_108	CALL_3
0x4004a7a	    0xc60500000000	                mov byte [0x04004a81], 0	     17767	i386-dis.c	FUNCTION_94	ELSE_2
0x4004a81	    0x488905000000	            mov qword [0x04004a88], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004a88	      0xe93affffff	                           jmp 0x40049c7	     17769	i386-dis.c	FUNCTION_94
0x4004a8d	           0xf1f00	                         nop dword [rax]	     17769	i386-dis.c	FUNCTION_94
0x4004a90	        0x488d78ff	                      lea rdi, [rax - 1]	     17747	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004a94	         0xfb640ff	               movzx eax, byte [rax - 1]	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004a98	      0xc644240100	                   mov byte [rsp + 1], 0	     17749	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004a9d	          0x880424	                      mov byte [rsp], al	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004aa0	      0xe9e8feffff	                           jmp 0x400498d	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004aa5	           0xf1f00	                         nop dword [rax]	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x4004aa8	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004aab	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004aae	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004ab1	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004ab6	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004ab8	     0xf8594000000	                           jne 0x4004b52	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004abe	    0x488b05000000	            mov rax, qword [0x04004ac5] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004ac5	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004ac9	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004acd	      0xe97efeffff	                           jmp 0x4004950	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004ad2	    0x660f1f440000	                    nop word [rax + rax]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004ad8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004add	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004ae2	        0x450fb6c0	                          movzx r8d, r8b	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004ae6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004aeb	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004aee	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004af0	    0xc60500000000	            mov byte [0x04004af7], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004af7	    0xc60500000000	            mov byte [0x04004afe], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004afe	      0xe800000000	                          call 0x4004b03	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004b03	         0xfb61424	                   movzx edx, byte [rsp]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004b07	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004b09	      0x488d4c2401	                      lea rcx, [rsp + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b0e	            0xeb0c	                           jmp 0x4004b1c	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b10	         0xfb61401	             movzx edx, byte [rcx + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b14	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b18	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b1a	            0x7408	                            je 0x4004b24	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b1c	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b1f	          0x4863f0	                         movsxd rsi, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b22	            0x74ec	                            je 0x4004b10	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004b24	          0x4801e6	                            add rsi, rsp	       110	string3.h	FUNCTION_107	CALL_3
0x4004b27	      0xba61000000	                           mov edx, 0x61	       110	string3.h	FUNCTION_107	CALL_3
0x4004b2c	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4004b31	      0xe800000000	                          call 0x4004b36	       110	string3.h	FUNCTION_107	CALL_3
0x4004b36	      0xe924ffffff	                           jmp 0x4004a5f	       110	string3.h	FUNCTION_107	CALL_3
0x4004b3b	      0xe800000000	                          call 0x4004b40	     17769	i386-dis.c	FUNCTION_94
0x4004b40	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004b43	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004b46	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004b48	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004b4d	      0xe9cafeffff	                           jmp 0x4004a1c	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004b52	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004b56	      0xe9b8feffff	                           jmp 0x4004a13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
MOVBE_Fixup	CALL,2:IF,4:FOR,0:ELSE,2:WHILE,0:SWITCH,1:functions,0:DO,0	71
0x4009910	          0x83ff04	                              cmp edi, 4	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x4009913	            0x4154	                                push r12	     17821	i386-dis.c	FUNCTION_96
0x4009915	          0x4189f4	                           mov r12d, esi	     17821	i386-dis.c	FUNCTION_96
0x4009918	              0x55	                                push rbp	     17821	i386-dis.c	FUNCTION_96
0x4009919	            0x89fd	                            mov ebp, edi	     17821	i386-dis.c	FUNCTION_96
0x400991b	              0x53	                                push rbx	     17821	i386-dis.c	FUNCTION_96
0x400991c	    0x488b1d000000	            mov rbx, qword [0x04009923] 	     17823	i386-dis.c	FUNCTION_96
0x4009923	            0x7563	                           jne 0x4009988	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x4009925	    0x803d00000000	                cmp byte [0x0400992c], 0	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x400992c	            0x7432	                            je 0x4009960	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x400992e	    0x833d00000000	               cmp dword [0x04009935], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4009935	     0xf848e000000	                            je 0x40099c9	     16671	i386-dis.c	FUNCTION_58	IF_1
0x400993b	    0x803d00000000	                cmp byte [0x04009942], 0	     15667	i386-dis.c	FUNCTION_26
0x4009942	     0xf84f5000000	                            je 0x4009a3d	     15667	i386-dis.c	FUNCTION_26
0x4009948	              0x5b	                                 pop rbx	     17855	i386-dis.c	FUNCTION_96
0x4009949	          0x4489e6	                           mov esi, r12d	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x400994c	            0x89ef	                            mov edi, ebp	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x400994e	    0x488305000000	               add qword [0x04009956], 1	     15668	i386-dis.c	FUNCTION_26
0x4009956	              0x5d	                                 pop rbp	     17855	i386-dis.c	FUNCTION_96
0x4009957	            0x415c	                                 pop r12	     17855	i386-dis.c	FUNCTION_96
0x4009959	      0xe992d3ffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x400995e	            0x6690	                                     nop	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009960	    0xf60500000000	               test byte [0x04009967], 8	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x4009967	     0xf849b000000	                            je 0x4009a08	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x400996d	    0x830d00000000	            or dword [0x04009974], 0x48 	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x4009974	        0x40f6c604	                             test sil, 4	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x4009978	            0x7438	                            je 0x40099b2	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x400997a	          0xc60371	                    mov byte [rbx], 0x71	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x400997d	        0x4883c301	                              add rbx, 1	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x4009981	            0xeb2f	                           jmp 0x40099b2	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x4009983	       0xf1f440000	                   nop dword [rax + rax]	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x4009988	      0xba05000000	                              mov edx, 5	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x400998d	      0xbe00000000	                              mov esi, 0	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x4009992	      0xbf00000000	                              mov edi, 0	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x4009997	      0xe800000000	                          call 0x400999c	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x400999c	    0x488b3d000000	            mov rdi, qword [0x040099a3] 	       117	string3.h	FUNCTION_108	CALL_3
0x40099a3	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x40099a6	      0xe800000000	                          call 0x40099ab	       117	string3.h	FUNCTION_108	CALL_3
0x40099ab	    0x488905000000	            mov qword [0x040099b2], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40099b2	    0x833d00000000	               cmp dword [0x040099b9], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x40099b9	    0x48891d000000	            mov qword [0x040099c0], rbx 	     17850	i386-dis.c	FUNCTION_96
0x40099c0	          0xc60300	                       mov byte [rbx], 0	     17851	i386-dis.c	FUNCTION_96
0x40099c3	     0xf8572ffffff	                           jne 0x400993b	     16671	i386-dis.c	FUNCTION_58	IF_1
0x40099c9	    0x488b05000000	            mov rax, qword [0x040099d0] 	     16917	i386-dis.c	FUNCTION_67
0x40099d0	      0xba29000000	                           mov edx, 0x29	     16917	i386-dis.c	FUNCTION_67
0x40099d5	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x40099d9	    0x488905000000	            mov qword [0x040099e0], rax 	     16917	i386-dis.c	FUNCTION_67
0x40099e0	    0x488b05000000	            mov rax, qword [0x040099e7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40099e7	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40099ed	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40099f1	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40099f5	              0x5b	                                 pop rbx	     17855	i386-dis.c	FUNCTION_96
0x40099f6	    0x488905000000	            mov qword [0x040099fd], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40099fd	              0x5d	                                 pop rbp	     17855	i386-dis.c	FUNCTION_96
0x40099fe	            0x415c	                                 pop r12	     17855	i386-dis.c	FUNCTION_96
0x4009a00	              0xc3	                                     ret	     17855	i386-dis.c	FUNCTION_96
0x4009a01	     0xf1f80000000	                         nop dword [rax]	     17855	i386-dis.c	FUNCTION_96
0x4009a08	        0x40f6c604	                             test sil, 4	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x4009a0c	            0x74a4	                            je 0x40099b2	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x4009a0e	        0x41f6c401	                            test r12b, 1	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x4009a12	        0x488d5301	                      lea rdx, [rbx + 1]	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x4009a16	      0xb86c000000	                           mov eax, 0x6c	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x4009a1b	            0x7505	                           jne 0x4009a22	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x4009a1d	      0xb877000000	                           mov eax, 0x77	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x4009a22	            0x8803	                      mov byte [rbx], al	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x4009a24	    0x8b0500000000	            mov eax, dword [0x04009a2a] 	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4009a2a	          0x4889d3	                            mov rbx, rdx	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4009a2d	      0x2500020000	                          and eax, 0x200	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4009a32	     0x90500000000	              or dword [0x04009a38], eax	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4009a38	      0xe975ffffff	                           jmp 0x40099b2	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x4009a3d	      0xe800000000	                          call 0x4009a42	     15667	i386-dis.c	FUNCTION_26
OP_T	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	15
0x4001f40	        0x4883ec08	                              sub rsp, 8	     16390	i386-dis.c	FUNCTION_48
0x4001f44	    0x448b05000000	            mov r8d, dword [0x04001f4b] 	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f4b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f50	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f55	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f5a	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f5f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f61	      0xe800000000	                          call 0x4001f66	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f66	    0x480fbe350000	           movsx rsi, byte [0x04001f6e] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001f6e	    0x488b3d000000	            mov rdi, qword [0x04001f75] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001f75	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4001f7c	      0xe800000000	                          call 0x4001f81	       117	string3.h	FUNCTION_108	CALL_3
0x4001f81	    0x488905000000	            mov qword [0x04001f88], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4001f88	        0x4883c408	                              add rsp, 8	     16393	i386-dis.c	FUNCTION_48
0x4001f8c	              0xc3	                                     ret	     16393	i386-dis.c	FUNCTION_48
OP_R	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	138
0x4005530	        0x4883ec08	                              sub rsp, 8	     16397	i386-dis.c	FUNCTION_49
0x4005534	    0x803d00000000	                cmp byte [0x0400553b], 0	     16399	i386-dis.c	FUNCTION_49
0x400553b	     0xf84d2020000	                            je 0x4005813	     16399	i386-dis.c	FUNCTION_49
0x4005541	    0x8b1500000000	            mov edx, dword [0x04005547] 	     15097	i386-dis.c	FUNCTION_24
0x4005547	    0x488305000000	               add qword [0x0400554f], 1	     16400	i386-dis.c	FUNCTION_49
0x400554f	    0x8b0500000000	            mov eax, dword [0x04005555] 	     15094	i386-dis.c	FUNCTION_24
0x4005555	          0xf6c201	                              test dl, 1	     15097	i386-dis.c	FUNCTION_24
0x4005558	            0x740a	                            je 0x4005564	     15097	i386-dis.c	FUNCTION_24
0x400555a	    0x830d00000000	            or dword [0x04005561], 0x41 	     15097	i386-dis.c	FUNCTION_24
0x4005561	          0x83c008	                              add eax, 8	     15099	i386-dis.c	FUNCTION_24	IF_1
0x4005564	        0x40f6c604	                             test sil, 4	     15101	i386-dis.c	FUNCTION_24	IF_2
0x4005568	            0x742e	                            je 0x4005598	     15101	i386-dis.c	FUNCTION_24	IF_2
0x400556a	          0x83ff26	                           cmp edi, 0x26	     15102	i386-dis.c	FUNCTION_24	IF_2
0x400556d	            0x7729	                            ja 0x4005598	     15102	i386-dis.c	FUNCTION_24	IF_2
0x400556f	    0x48b924000000	                movabs rcx, 0x4000000024	     15104	i386-dis.c	FUNCTION_24	IF_2
0x4005579	        0x480fa3f9	                             bt rcx, rdi	     15104	i386-dis.c	FUNCTION_24	IF_2
0x400557d	            0x7319	                           jae 0x4005598	     15104	i386-dis.c	FUNCTION_24	IF_2
0x400557f	    0x488b0d000000	            mov rcx, qword [0x04005586] 	     13898	i386-dis.c	FUNCTION_11
0x4005586	          0xc6012e	                    mov byte [rcx], 0x2e	     13898	i386-dis.c	FUNCTION_11
0x4005589	        0xc6410173	                mov byte [rcx + 1], 0x73	     13899	i386-dis.c	FUNCTION_11
0x400558d	        0x4883c102	                              add rcx, 2	     13900	i386-dis.c	FUNCTION_11
0x4005591	    0x48890d000000	            mov qword [0x04005598], rcx 	     13900	i386-dis.c	FUNCTION_11
0x4005598	          0x83ff45	                           cmp edi, 0x45	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x400559b	     0xf879f010000	                            ja 0x4005740	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x40055a1	            0x89f9	                            mov ecx, edi	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x40055a3	    0xff24cd000000	                       jmp qword [rcx*8]	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x40055aa	    0x660f1f440000	                    nop word [rax + rax]	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x40055b0	    0x833d00000000	               cmp dword [0x040055b7], 2	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40055b7	      0xbf04000000	                              mov edi, 4	     15154	i386-dis.c	FUNCTION_24	SWITCH_1
0x40055bc	     0xf840e020000	                            je 0x40057d0	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40055c2	          0x83e208	                              and edx, 8	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40055c5	     0xf84a5010000	                            je 0x4005770	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40055cb	    0x830d00000000	            or dword [0x040055d2], 0x48 	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x40055d2	    0x488b15000000	            mov rdx, qword [0x040055d9] 	     15164	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x40055d9	            0x4898	                                    cdqe	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x40055db	    0x488b3d000000	            mov rdi, qword [0x040055e2] 	       117	string3.h	FUNCTION_108	CALL_3
0x40055e2	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x40055e6	      0xe800000000	                          call 0x40055eb	       117	string3.h	FUNCTION_108	CALL_3
0x40055eb	    0x488905000000	            mov qword [0x040055f2], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40055f2	        0x4883c408	                              add rsp, 8	     16402	i386-dis.c	FUNCTION_49
0x40055f6	              0xc3	                                     ret	     16402	i386-dis.c	FUNCTION_49
0x40055f7	    0x660f1f840000	                    nop word [rax + rax]	     16402	i386-dis.c	FUNCTION_49
0x4005600	    0x488b15000000	            mov rdx, qword [0x04005607] 	     15118	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005607	            0xebd0	                           jmp 0x40055d9	     15118	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005609	     0xf1f80000000	                         nop dword [rax]	     15118	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005610	          0x83f807	                              cmp eax, 7	     15193	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x4005613	     0xf8fb7000000	                            jg 0x40056d0	     15193	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x4005619	    0x488b15000000	            mov rdx, qword [0x04005620] 	     15198	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005620	            0xebb7	                           jmp 0x40055d9	     15198	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005622	    0x660f1f440000	                    nop word [rax + rax]	     15198	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005628	    0x830d00000000	            or dword [0x0400562f], 0x40 	     15111	i386-dis.c	FUNCTION_24	SWITCH_1
0x400562f	            0x85d2	                           test edx, edx	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4005631	    0x488b15000000	            mov rdx, qword [0x04005638] 	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4005638	    0x480f44150000	           cmove rdx, qword [0x04005640]	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4005640	            0xeb97	                           jmp 0x40055d9	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4005642	    0x660f1f440000	                    nop word [rax + rax]	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4005648	    0x8b0d00000000	            mov ecx, dword [0x0400564e] 	     15177	i386-dis.c	FUNCTION_24	SWITCH_1
0x400564e	          0x83f902	                              cmp ecx, 2	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005651	     0xf8491010000	                            je 0x40057e8	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4005657	    0xf60500000000	               test byte [0x0400565e], 4	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400565e	     0xf844c010000	                            je 0x40057b0	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4005664	    0x486315000000	         movsxd rdx, dword [0x0400566b] 	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x400566b	          0x83f901	                              cmp ecx, 1	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x400566e	    0xc70495000000	                    mov dword [rdx*4], 0	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005679	    0x488b15000000	            mov rdx, qword [0x04005680] 	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005680	            0x7407	                            je 0x4005689	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005682	    0x488b15000000	            mov rdx, qword [0x04005689] 	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005689	    0x810d00000000	            or dword [0x04005693], 0x400	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005693	      0xe941ffffff	                           jmp 0x40055d9	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005698	     0xf1f84000000	                   nop dword [rax + rax]	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40056a0	    0x833d00000000	               cmp dword [0x040056a7], 2	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40056a7	    0x488b15000000	            mov rdx, qword [0x040056ae] 	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40056ae	     0xf8525ffffff	                           jne 0x40055d9	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40056b4	      0xe919ffffff	                           jmp 0x40055d2	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40056b9	     0xf1f80000000	                         nop dword [rax]	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x40056c0	          0x83f803	                              cmp eax, 3	     15134	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x40056c3	    0x488b15000000	            mov rdx, qword [0x040056ca] 	     15139	i386-dis.c	FUNCTION_24	SWITCH_1
0x40056ca	     0xf8e09ffffff	                           jle 0x40055d9	     15134	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x40056d0	    0x488b05000000	            mov rax, qword [0x040056d7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40056d7	      0xba29000000	                           mov edx, 0x29	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40056dc	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40056e2	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40056e6	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40056ea	    0x488905000000	            mov qword [0x040056f1], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40056f1	      0xe9fcfeffff	                           jmp 0x40055f2	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40056f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005700	    0x488b15000000	            mov rdx, qword [0x04005707] 	     15123	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005707	      0xe9cdfeffff	                           jmp 0x40055d9	     15123	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x400570c	         0xf1f4000	                         nop dword [rax]	     15123	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4005710	    0x833d00000000	               cmp dword [0x04005717], 2	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005717	      0xbf04000000	                              mov edi, 4	     15154	i386-dis.c	FUNCTION_24	SWITCH_1
0x400571c	     0xf85a0feffff	                           jne 0x40055c2	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005722	          0x83e601	                              and esi, 1	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005725	     0xf85a7feffff	                           jne 0x40055d2	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x400572b	          0x83e208	                              and edx, 8	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x400572e	     0xf859efeffff	                           jne 0x40055d2	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005734	            0xeb6a	                           jmp 0x40057a0	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005736	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x4005740	      0xba05000000	                              mov edx, 5	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x4005745	      0xbe00000000	                              mov esi, 0	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x400574a	      0xbf00000000	                              mov edi, 0	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x400574f	      0xe800000000	                          call 0x4005754	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x4005754	    0x488b3d000000	            mov rdi, qword [0x0400575b] 	       117	string3.h	FUNCTION_108	CALL_3
0x400575b	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x400575e	      0xe800000000	                          call 0x4005763	       117	string3.h	FUNCTION_108	CALL_3
0x4005763	    0x488905000000	            mov qword [0x0400576a], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400576a	      0xe983feffff	                           jmp 0x40055f2	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400576f	              0x90	                                     nop	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005770	          0x83e601	                              and esi, 1	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4005773	            0x7423	                            je 0x4005798	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4005775	    0x488b15000000	            mov rdx, qword [0x0400577c] 	     15170	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400577c	    0x8b0d00000000	            mov ecx, dword [0x04005782] 	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4005782	    0x81e100020000	                          and ecx, 0x200	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4005788	     0x90d00000000	              or dword [0x0400578e], ecx	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x400578e	      0xe946feffff	                           jmp 0x40055d9	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4005793	       0xf1f440000	                   nop dword [rax + rax]	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4005798	          0x83ef04	                              sub edi, 4	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400579b	          0x83ff01	                              cmp edi, 1	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400579e	            0x77d5	                            ja 0x4005775	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x40057a0	    0x488b15000000	            mov rdx, qword [0x040057a7] 	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x40057a7	            0xebd3	                           jmp 0x400577c	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x40057a9	     0xf1f80000000	                         nop dword [rax]	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x40057b0	            0x85c9	                           test ecx, ecx	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x40057b2	    0x488b15000000	            mov rdx, qword [0x040057b9] 	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x40057b9	    0x480f44150000	           cmove rdx, qword [0x040057c1]	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x40057c1	      0xe913feffff	                           jmp 0x40055d9	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x40057c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x40057d0	    0x833d00000000	               cmp dword [0x040057d7], 1	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40057d7	     0xf8545ffffff	                           jne 0x4005722	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40057dd	      0xe9f0fdffff	                           jmp 0x40055d2	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40057e2	    0x660f1f440000	                    nop word [rax + rax]	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40057e8	    0xf60500000000	               test byte [0x040057ef], 4	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x40057ef	    0x488b15000000	            mov rdx, qword [0x040057f6] 	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x40057f6	     0xf84ddfdffff	                            je 0x40055d9	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x40057fc	    0x486315000000	         movsxd rdx, dword [0x04005803] 	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005803	    0xc70495000000	                    mov dword [rdx*4], 0	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x400580e	      0xe96ffeffff	                           jmp 0x4005682	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4005813	      0xe800000000	                          call 0x4005818	     16399	i386-dis.c	FUNCTION_49
OP_XMM_VexW	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	65
0x4003ac0	        0x4883ec08	                              sub rsp, 8	     17562	i386-dis.c	FUNCTION_88
0x4003ac4	    0x8b1500000000	            mov edx, dword [0x04003aca] 	     17565	i386-dis.c	FUNCTION_88
0x4003aca	            0x89d0	                            mov eax, edx	     17565	i386-dis.c	FUNCTION_88
0x4003acc	          0x83e0f7	                     and eax, 0xfffffff7	     17565	i386-dis.c	FUNCTION_88
0x4003acf	          0x83e204	                              and edx, 4	     16429	i386-dis.c	FUNCTION_51
0x4003ad2	    0x890500000000	            mov dword [0x04003ad8], eax 	     17565	i386-dis.c	FUNCTION_88
0x4003ad8	    0x8b0500000000	            mov eax, dword [0x04003ade] 	     16426	i386-dis.c	FUNCTION_51
0x4003ade	            0x740a	                            je 0x4003aea	     16429	i386-dis.c	FUNCTION_51
0x4003ae0	    0x830d00000000	            or dword [0x04003ae7], 0x44 	     16429	i386-dis.c	FUNCTION_51
0x4003ae7	          0x83c008	                              add eax, 8	     16431	i386-dis.c	FUNCTION_51	IF_1
0x4003aea	    0x8b3500000000	            mov esi, dword [0x04003af0] 	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4003af0	            0x85f6	                           test esi, esi	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4003af2	            0x740e	                            je 0x4003b02	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4003af4	    0x8b0d00000000	            mov ecx, dword [0x04003afa] 	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003afa	          0x8d5010	                   lea edx, [rax + 0x10]	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003afd	            0x85c9	                           test ecx, ecx	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003aff	           0xf44c2	                          cmove eax, edx	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003b02	    0x803d00000000	                cmp byte [0x04003b09], 0	     16438	i386-dis.c	FUNCTION_51	IF_4
0x4003b09	            0x743d	                            je 0x4003b48	     16438	i386-dis.c	FUNCTION_51	IF_4
0x4003b0b	          0x83ff39	                           cmp edi, 0x39	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003b0e	            0x7628	                           jbe 0x4003b38	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003b10	    0x8b1500000000	            mov edx, dword [0x04003b16] 	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003b16	    0x81fa00010000	                          cmp edx, 0x100	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003b1c	     0xf848e000000	                            je 0x4003bb0	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003b22	    0x81fa00020000	                          cmp edx, 0x200	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003b28	            0x7476	                            je 0x4003ba0	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003b2a	          0x83c280	             add edx, 0xffffffffffffff80	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b2d	            0x7426	                            je 0x4003b55	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b2f	      0xe800000000	                          call 0x4003b34	     16478	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2	CALL_2
0x4003b34	         0xf1f4000	                         nop dword [rax]	     16478	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2	CALL_2
0x4003b38	    0x48ba00000e08	           movabs rdx, 0x2000000080e0000	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003b42	        0x480fa3fa	                             bt rdx, rdi	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003b46	            0x73c8	                           jae 0x4003b10	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003b48	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003b4b	          0x83fa01	                              cmp edx, 1	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003b4e	            0x7630	                           jbe 0x4003b80	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003b50	          0x83ff1b	                           cmp edi, 0x1b	     16481	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4003b53	            0x7441	                            je 0x4003b96	     16481	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4003b55	    0x488b15000000	            mov rdx, qword [0x04003b5c] 	     16472	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b5c	            0x4898	                                    cdqe	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x4003b5e	    0x488b3d000000	            mov rdi, qword [0x04003b65] 	       117	string3.h	FUNCTION_108	CALL_3
0x4003b65	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4003b69	      0xe800000000	                          call 0x4003b6e	       117	string3.h	FUNCTION_108	CALL_3
0x4003b6e	    0x488905000000	            mov qword [0x04003b75], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4003b75	        0x4883c408	                              add rsp, 8	     17567	i386-dis.c	FUNCTION_88
0x4003b79	              0xc3	                                     ret	     17567	i386-dis.c	FUNCTION_88
0x4003b7a	    0x660f1f440000	                    nop word [rax + rax]	     17567	i386-dis.c	FUNCTION_88
0x4003b80	    0x8b1500000000	            mov edx, dword [0x04003b86] 	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b86	    0x81fa00010000	                          cmp edx, 0x100	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b8c	            0x74c7	                            je 0x4003b55	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b8e	    0x81fa00020000	                          cmp edx, 0x200	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b94	            0x7594	                           jne 0x4003b2a	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b96	    0x488b15000000	            mov rdx, qword [0x04003b9d] 	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b9d	            0xebbd	                           jmp 0x4003b5c	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003b9f	              0x90	                                     nop	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003ba0	    0x488b15000000	            mov rdx, qword [0x04003ba7] 	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003ba7	            0xebb3	                           jmp 0x4003b5c	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003ba9	     0xf1f80000000	                         nop dword [rax]	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003bb0	    0x8b1500000000	            mov edx, dword [0x04003bb6] 	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003bb6	            0x85d2	                           test edx, edx	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003bb8	            0x75dc	                           jne 0x4003b96	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003bba	          0x83ef37	                           sub edi, 0x37	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003bbd	          0x83ff01	                              cmp edi, 1	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003bc0	            0x77d4	                            ja 0x4003b96	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003bc2	            0xeb91	                           jmp 0x4003b55	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
intel_operand_size	CALL,83:IF,31:FOR,0:ELSE,12:WHILE,0:SWITCH,13:functions,0:DO,0	321
0x4002080	        0x4883ec08	                              sub rsp, 8	     14724	i386-dis.c	FUNCTION_23
0x4002084	    0x8b0500000000	            mov eax, dword [0x0400208a] 	     14725	i386-dis.c	FUNCTION_23	IF_1
0x400208a	            0x85c0	                           test eax, eax	     14725	i386-dis.c	FUNCTION_23	IF_1
0x400208c	            0x7410	                            je 0x400209e	     14725	i386-dis.c	FUNCTION_23	IF_1
0x400208e	    0x448b05000000	            mov r8d, dword [0x04002095] 	     14726	i386-dis.c	FUNCTION_23	IF_1
0x4002095	          0x4585c0	                           test r8d, r8d	     14726	i386-dis.c	FUNCTION_23	IF_1
0x4002098	     0xf8582000000	                           jne 0x4002120	     14726	i386-dis.c	FUNCTION_23	IF_1
0x400209e	          0x83ff45	                           cmp edi, 0x45	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x40020a1	            0x7775	                            ja 0x4002118	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x40020a3	            0x89fa	                            mov edx, edi	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x40020a5	    0xff24d5000000	                       jmp qword [rdx*8]	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x40020ac	         0xf1f4000	                         nop dword [rax]	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x40020b0	    0x803d00000000	                cmp byte [0x040020b7], 0	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x40020b7	     0xf84fb020000	                            je 0x40023b8	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x40020bd	            0x85c0	                           test eax, eax	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x40020bf	            0x746d	                            je 0x400212e	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x40020c1	    0x8b0500000000	            mov eax, dword [0x040020c7] 	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40020c7	      0x3d00010000	                          cmp eax, 0x100	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40020cc	     0xf841e060000	                            je 0x40026f0	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40020d2	      0x3d00020000	                          cmp eax, 0x200	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40020d7	     0xf84e8050000	                            je 0x40026c5	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40020dd	          0x83c080	             add eax, 0xffffffffffffff80	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40020e0	    0x48ba584d4d57	          movabs rdx, 0x2044524f574d4d58	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40020ea	    0x488b05000000	            mov rax, qword [0x040020f1] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40020f1	     0xf85c1020000	                           jne 0x40023b8	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x40020f7	    0x660f1f840000	                    nop word [rax + rax]	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002100	          0x488910	                    mov qword [rax], rdx	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4002103	    0xc74008505452	        mov dword [rax + 8], 0x20525450 	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x400210a	        0x4883c00c	                            add rax, 0xc	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400210e	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002111	    0x488905000000	            mov qword [0x04002118], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002118	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x400211c	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
0x400211d	           0xf1f00	                         nop dword [rax]	     15089	i386-dis.c	FUNCTION_23
0x4002120	          0x83ff0d	                            cmp edi, 0xd	     14727	i386-dis.c	FUNCTION_23	IF_1
0x4002123	            0x7409	                            je 0x400212e	     14727	i386-dis.c	FUNCTION_23	IF_1
0x4002125	          0x83ff13	                           cmp edi, 0x13	     14727	i386-dis.c	FUNCTION_23	IF_1
0x4002128	     0xf8570ffffff	                           jne 0x400209e	     14727	i386-dis.c	FUNCTION_23	IF_1
0x400212e	    0x8b3500000000	            mov esi, dword [0x04002134] 	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x4002134	            0x85f6	                           test esi, esi	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x4002136	            0x753c	                           jne 0x4002174	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x4002138	    0x488b05000000	            mov rax, qword [0x0400213f] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400213f	    0x48b944574f52	          movabs rcx, 0x54502044524f5744	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002149	            0xeb3a	                           jmp 0x4002185	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400214b	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002150	    0x833d00000000	               cmp dword [0x04002157], 2	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4002157	     0xf847d010000	                            je 0x40022da	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400215d	          0x83e601	                              and esi, 1	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4002160	    0xf60500000000	               test byte [0x04002167], 8	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x4002167	     0xf8485010000	                            je 0x40022f2	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x400216d	    0x830d00000000	            or dword [0x04002174], 0x48 	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x4002174	    0x488b05000000	            mov rax, qword [0x0400217b] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400217b	    0x48b951574f52	          movabs rcx, 0x54502044524f5751	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002185	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002188	      0xb952200000	                         mov ecx, 0x2052	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400218d	        0xc6400a00	                 mov byte [rax + 0xa], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002191	        0x66894808	                  mov word [rax + 8], cx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002195	        0x4883c00a	                            add rax, 0xa	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002199	    0x488905000000	            mov qword [0x040021a0], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40021a0	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x40021a4	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
0x40021a5	           0xf1f00	                         nop dword [rax]	     15089	i386-dis.c	FUNCTION_23
0x40021a8	    0x803d00000000	                cmp byte [0x040021af], 0	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x40021af	            0x742f	                            je 0x40021e0	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x40021b1	    0x8b0500000000	            mov eax, dword [0x040021b7] 	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40021b7	      0x3d00010000	                          cmp eax, 0x100	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40021bc	     0xf84ae010000	                            je 0x4002370	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40021c2	      0x3d00020000	                          cmp eax, 0x200	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40021c7	     0xf8474050000	                            je 0x4002741	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40021cd	          0x83c080	             add eax, 0xffffffffffffff80	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40021d0	     0xf85e2010000	                           jne 0x40023b8	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40021d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40021e0	    0x488b05000000	            mov rax, qword [0x040021e7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40021e7	    0x48b9584d4d57	          movabs rcx, 0x2044524f574d4d58	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40021f1	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40021f4	    0xc74008505452	        mov dword [rax + 8], 0x20525450 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40021fb	        0x4883c00c	                            add rax, 0xc	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40021ff	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002202	    0x488905000000	            mov qword [0x04002209], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002209	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x400220d	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
0x400220e	            0x6690	                                     nop	     15089	i386-dis.c	FUNCTION_23
0x4002210	    0x803d00000000	                cmp byte [0x04002217], 0	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x4002217	     0xf849b010000	                            je 0x40023b8	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x400221d	    0x448b05000000	            mov r8d, dword [0x04002224] 	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x4002224	          0x4585c0	                           test r8d, r8d	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x4002227	     0xf8547ffffff	                           jne 0x4002174	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x400222d	    0x488b05000000	            mov rax, qword [0x04002234] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002234	    0x48b9574f5244	          movabs rcx, 0x5254502044524f57	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400223e	      0xbf20000000	                           mov edi, 0x20	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002243	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002246	        0x66897808	                  mov word [rax + 8], di	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400224a	        0x4883c009	                              add rax, 9	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400224e	    0x488905000000	            mov qword [0x04002255], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002255	      0xe9befeffff	                           jmp 0x4002118	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400225a	    0x660f1f440000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002260	    0x803d00000000	                cmp byte [0x04002267], 0	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x4002267	     0xf844b010000	                            je 0x40023b8	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x400226d	    0x813d00000000	           cmp dword [0x04002277], 0x80 	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x4002277	     0xf853b010000	                           jne 0x40023b8	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x400227d	    0x448b15000000	           mov r10d, dword [0x04002284] 	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x4002284	          0x4585d2	                         test r10d, r10d	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x4002287	     0xf85abfeffff	                           jne 0x4002138	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x400228d	    0x488b05000000	            mov rax, qword [0x04002294] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002294	    0x48b942595445	          movabs rcx, 0x5254502045545942	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400229e	    0x41b920000000	                           mov r9d, 0x20	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40022a4	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40022a7	      0x6644894808	                 mov word [rax + 8], r9w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40022ac	        0x4883c009	                              add rax, 9	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40022b0	    0x488905000000	            mov qword [0x040022b7], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40022b7	      0xe95cfeffff	                           jmp 0x4002118	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40022bc	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40022c0	    0x833d00000000	               cmp dword [0x040022c7], 2	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x40022c7	     0xf8590feffff	                           jne 0x400215d	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x40022cd	    0x833d00000000	               cmp dword [0x040022d4], 1	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x40022d4	     0xf849afeffff	                            je 0x4002174	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x40022da	          0x83e601	                              and esi, 1	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x40022dd	     0xf8591feffff	                           jne 0x4002174	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x40022e3	    0x8b3500000000	            mov esi, dword [0x040022e9] 	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x40022e9	          0x83e608	                              and esi, 8	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x40022ec	     0xf8582feffff	                           jne 0x4002174	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x40022f2	          0x83ff23	                           cmp edi, 0x23	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40022f5	     0xf84e5030000	                            je 0x40026e0	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40022fb	          0x83e601	                              and esi, 1	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40022fe	     0xf85dc030000	                           jne 0x40026e0	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x4002304	    0x488b05000000	            mov rax, qword [0x0400230b] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400230b	    0x48b9574f5244	          movabs rcx, 0x5254502044524f57	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002315	      0xbe20000000	                           mov esi, 0x20	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400231a	          0x488908	                    mov qword [rax], rcx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400231d	        0x66897008	                  mov word [rax + 8], si	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002321	        0x4883c009	                              add rax, 9	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002325	    0x488905000000	            mov qword [0x0400232c], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400232c	    0x8b0500000000	            mov eax, dword [0x04002332] 	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x4002332	      0x2500020000	                          and eax, 0x200	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x4002337	     0x90500000000	              or dword [0x0400233d], eax	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x400233d	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x4002341	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
0x4002342	    0x660f1f440000	                    nop word [rax + rax]	     15089	i386-dis.c	FUNCTION_23
0x4002348	    0x803d00000000	                cmp byte [0x0400234f], 0	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x400234f	            0x7467	                            je 0x40023b8	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x4002351	    0x8b0500000000	            mov eax, dword [0x04002357] 	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4002357	      0x3d00010000	                          cmp eax, 0x100	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x400235c	     0xf847efeffff	                            je 0x40021e0	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4002362	      0x3d00020000	                          cmp eax, 0x200	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4002367	     0xf8584020000	                           jne 0x40025f1	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x400236d	           0xf1f00	                         nop dword [rax]	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4002370	    0x488b05000000	            mov rax, qword [0x04002377] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002377	    0x48b9594d4d57	          movabs rcx, 0x2044524f574d4d59	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002381	      0xe96bfeffff	                           jmp 0x40021f1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002386	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002390	    0x803d00000000	                cmp byte [0x04002397], 0	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4002397	            0x741f	                            je 0x40023b8	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4002399	    0x8b0500000000	            mov eax, dword [0x0400239f] 	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x400239f	      0x3d80000000	                           cmp eax, 0x80	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x40023a4	     0xf8436feffff	                            je 0x40021e0	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x40023aa	      0x3d00010000	                          cmp eax, 0x100	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x40023af	     0xf842bfeffff	                            je 0x40021e0	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x40023b5	           0xf1f00	                         nop dword [rax]	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x40023b8	      0xe800000000	                          call 0x40023bd	     15065	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_77
0x40023bd	           0xf1f00	                         nop dword [rax]	     15065	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_77
0x40023c0	          0x83e601	                              and esi, 1	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40023c3	    0x488b05000000	            mov rax, qword [0x040023ca] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40023ca	    0x48b946574f52	          movabs rcx, 0x54502044524f5746	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40023d4	            0x750a	                           jne 0x40023e0	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40023d6	    0x48b944574f52	          movabs rcx, 0x54502044524f5744	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40023e0	      0xba52200000	                         mov edx, 0x2052	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40023e5	          0x488908	                    mov qword [rax], rcx	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40023e8	        0xc6400a00	                 mov byte [rax + 0xa], 0	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40023ec	        0x66895008	                  mov word [rax + 8], dx	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x40023f0	        0x4883c00a	                            add rax, 0xa	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40023f4	    0x488905000000	            mov qword [0x040023fb], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40023fb	      0xe92cffffff	                           jmp 0x400232c	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002400	          0x83e601	                              and esi, 1	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4002403	    0x488b05000000	            mov rax, qword [0x0400240a] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400240a	    0x48b951574f52	          movabs rcx, 0x54502044524f5751	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002414	            0x75ca	                           jne 0x40023e0	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4002416	            0xebbe	                           jmp 0x40023d6	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4002418	     0xf1f84000000	                   nop dword [rax + rax]	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4002420	    0x833d00000000	               cmp dword [0x04002427], 2	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x4002427	     0xf850bfdffff	                           jne 0x4002138	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x400242d	      0xe942fdffff	                           jmp 0x4002174	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x4002432	    0x660f1f440000	                    nop word [rax + rax]	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x4002438	    0x488b05000000	            mov rax, qword [0x0400243f] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400243f	    0x48b954425954	          movabs rcx, 0x5450204554594254	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002449	      0xe937fdffff	                           jmp 0x4002185	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400244e	            0x6690	                                     nop	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002450	    0x803d00000000	                cmp byte [0x04002457], 0	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4002457	     0xf845bffffff	                            je 0x40023b8	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x400245d	            0x85c0	                           test eax, eax	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x400245f	     0xf8453ffffff	                            je 0x40023b8	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4002465	    0x8b0500000000	            mov eax, dword [0x0400246b] 	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x400246b	      0x3d00010000	                          cmp eax, 0x100	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4002470	     0xf846afdffff	                            je 0x40021e0	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4002476	      0x3d00020000	                          cmp eax, 0x200	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x400247b	     0xf846f020000	                            je 0x40026f0	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4002481	          0x83c080	             add eax, 0xffffffffffffff80	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4002484	     0xf852effffff	                           jne 0x40023b8	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x400248a	    0x488b05000000	            mov rax, qword [0x04002491] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002491	    0x48ba51574f52	          movabs rdx, 0x54502044524f5751	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400249b	    0x41bb52200000	                        mov r11d, 0x2052	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024a1	          0x488910	                    mov qword [rax], rdx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024a4	      0x6644895808	                mov word [rax + 8], r11w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024a9	        0x4883c00a	                            add rax, 0xa	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024ad	          0xc60000	                       mov byte [rax], 0	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024b0	    0x488905000000	            mov qword [0x040024b7], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024b7	      0xe95cfcffff	                           jmp 0x4002118	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024bc	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024c0	    0x488b05000000	            mov rax, qword [0x040024c7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024c7	    0x48b94f574f52	          movabs rcx, 0x54502044524f574f	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024d1	      0xe9affcffff	                           jmp 0x4002185	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40024e0	    0xf60500000000	               test byte [0x040024e7], 8	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40024e7	     0xf8523020000	                           jne 0x4002710	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40024ed	          0x83e601	                              and esi, 1	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40024f0	     0xf840efeffff	                            je 0x4002304	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40024f6	    0x488b05000000	            mov rax, qword [0x040024fd] 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40024fd	    0x48ba574f5244	          movabs rdx, 0x5254502044524f57	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002507	      0xb920000000	                           mov ecx, 0x20	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400250c	          0xc60044	                    mov byte [rax], 0x44	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400250f	        0x48895001	                mov qword [rax + 1], rdx	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002513	        0x4883c00a	                            add rax, 0xa	       117	string3.h	FUNCTION_108	CALL_3
0x4002517	        0x668948ff	                  mov word [rax - 1], cx	       117	string3.h	FUNCTION_108	CALL_3
0x400251b	    0x488905000000	            mov qword [0x04002522], rax 	       117	string3.h	FUNCTION_108	CALL_3
0x4002522	      0xe905feffff	                           jmp 0x400232c	       117	string3.h	FUNCTION_108	CALL_3
0x4002527	    0x660f1f840000	                    nop word [rax + rax]	       117	string3.h	FUNCTION_108	CALL_3
0x4002530	    0x803d00000000	                cmp byte [0x04002537], 0	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x4002537	     0xf847bfeffff	                            je 0x40023b8	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x400253d	    0x8b0500000000	            mov eax, dword [0x04002543] 	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4002543	      0x3d00010000	                          cmp eax, 0x100	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4002548	     0xf8426fcffff	                            je 0x4002174	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x400254e	      0x3d00020000	                          cmp eax, 0x200	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4002553	     0xf8487fcffff	                            je 0x40021e0	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4002559	          0x83c080	             add eax, 0xffffffffffffff80	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x400255c	     0xf8556feffff	                           jne 0x40023b8	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4002562	      0xe9d1fbffff	                           jmp 0x4002138	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4002567	    0x660f1f840000	                    nop word [rax + rax]	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4002570	    0x803d00000000	                cmp byte [0x04002577], 0	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x4002577	     0xf843bfeffff	                            je 0x40023b8	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x400257d	    0x8b0500000000	            mov eax, dword [0x04002583] 	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002583	      0x3d00010000	                          cmp eax, 0x100	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002588	     0xf84aafbffff	                            je 0x4002138	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x400258e	      0x3d00020000	                          cmp eax, 0x200	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002593	     0xf84dbfbffff	                            je 0x4002174	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x4002599	          0x83c080	             add eax, 0xffffffffffffff80	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x400259c	     0xf8516feffff	                           jne 0x40023b8	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40025a2	      0xe986fcffff	                           jmp 0x400222d	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40025a7	    0x660f1f840000	                    nop word [rax + rax]	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40025b0	    0x803d00000000	                cmp byte [0x040025b7], 0	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x40025b7	     0xf8571fbffff	                           jne 0x400212e	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x40025bd	      0xe9f6fdffff	                           jmp 0x40023b8	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x40025c2	    0x660f1f440000	                    nop word [rax + rax]	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x40025c8	    0x803d00000000	                cmp byte [0x040025cf], 0	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x40025cf	     0xf84e3fdffff	                            je 0x40023b8	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x40025d5	    0x8b0500000000	            mov eax, dword [0x040025db] 	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x40025db	      0x3d00010000	                          cmp eax, 0x100	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x40025e0	     0xf848efbffff	                            je 0x4002174	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x40025e6	      0x3d00020000	                          cmp eax, 0x200	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x40025eb	     0xf8483fbffff	                            je 0x4002174	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x40025f1	          0x83c080	             add eax, 0xffffffffffffff80	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40025f4	     0xf85befdffff	                           jne 0x40023b8	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40025fa	      0xe975fbffff	                           jmp 0x4002174	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40025ff	              0x90	                                     nop	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4002600	    0x803d00000000	                cmp byte [0x04002607], 0	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x4002607	     0xf84abfdffff	                            je 0x40023b8	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x400260d	    0x8b0500000000	            mov eax, dword [0x04002613] 	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002613	      0x3d00010000	                          cmp eax, 0x100	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002618	     0xf841afbffff	                            je 0x4002138	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x400261e	      0x3d00020000	                          cmp eax, 0x200	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002623	     0xf8530ffffff	                           jne 0x4002559	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002629	      0xe90afbffff	                           jmp 0x4002138	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x400262e	            0x6690	                                     nop	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4002630	    0x803d00000000	                cmp byte [0x04002637], 0	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x4002637	     0xf847bfdffff	                            je 0x40023b8	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x400263d	    0x8b0500000000	            mov eax, dword [0x04002643] 	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002643	      0x3d00010000	                          cmp eax, 0x100	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002648	     0xf84dffbffff	                            je 0x400222d	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x400264e	      0x3d00020000	                          cmp eax, 0x200	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002653	     0xf8540ffffff	                           jne 0x4002599	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002659	      0xe9cffbffff	                           jmp 0x400222d	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x400265e	            0x6690	                                     nop	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4002660	    0x803d00000000	                cmp byte [0x04002667], 0	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x4002667	     0xf844bfdffff	                            je 0x40023b8	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x400266d	    0x8b0500000000	            mov eax, dword [0x04002673] 	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002673	      0x3d00010000	                          cmp eax, 0x100	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002678	     0xf840ffcffff	                            je 0x400228d	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x400267e	      0x3d00020000	                          cmp eax, 0x200	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002683	     0xf8404fcffff	                            je 0x400228d	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002689	          0x83c080	             add eax, 0xffffffffffffff80	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x400268c	     0xf8526fdffff	                           jne 0x40023b8	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002692	      0xe9f6fbffff	                           jmp 0x400228d	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x4002697	    0x660f1f840000	                    nop word [rax + rax]	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x40026a0	    0x803d00000000	                cmp byte [0x040026a7], 0	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x40026a7	     0xf840bfdffff	                            je 0x40023b8	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x40026ad	    0x8b0500000000	            mov eax, dword [0x040026b3] 	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40026b3	      0x3d00010000	                          cmp eax, 0x100	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40026b8	            0x7436	                            je 0x40026f0	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40026ba	      0x3d00020000	                          cmp eax, 0x200	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40026bf	     0xf852cffffff	                           jne 0x40025f1	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x40026c5	    0x488b05000000	            mov rax, qword [0x040026cc] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026cc	    0x48b95a4d4d57	          movabs rcx, 0x2044524f574d4d5a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026d6	      0xe916fbffff	                           jmp 0x40021f1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026db	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026e0	    0x488b05000000	            mov rax, qword [0x040026e7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026e7	      0xe9eafcffff	                           jmp 0x40023d6	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026ec	         0xf1f4000	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026f0	    0x488b05000000	            mov rax, qword [0x040026f7] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40026f7	    0x48ba594d4d57	          movabs rdx, 0x2044524f574d4d59	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002701	      0xe9faf9ffff	                           jmp 0x4002100	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002710	    0x488b05000000	            mov rax, qword [0x04002717] 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002717	    0x48b9574f5244	          movabs rcx, 0x5254502044524f57	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002721	      0xba20000000	                           mov edx, 0x20	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002726	          0xc60044	                    mov byte [rax], 0x44	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4002729	        0x48894801	                mov qword [rax + 1], rcx	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x400272d	        0x4883c00a	                            add rax, 0xa	       117	string3.h	FUNCTION_108	CALL_3
0x4002731	        0x668950ff	                  mov word [rax - 1], dx	       117	string3.h	FUNCTION_108	CALL_3
0x4002735	    0x488905000000	            mov qword [0x0400273c], rax 	       117	string3.h	FUNCTION_108	CALL_3
0x400273c	      0xe9d7f9ffff	                           jmp 0x4002118	       117	string3.h	FUNCTION_108	CALL_3
0x4002741	    0x488b05000000	            mov rax, qword [0x04002748] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002748	    0x48ba5a4d4d57	          movabs rdx, 0x2044524f574d4d5a	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002752	      0xe9a9f9ffff	                           jmp 0x4002100	     14577	i386-dis.c	FUNCTION_18	CALL_1
CRC32_Fixup	CALL,7:IF,9:FOR,0:ELSE,7:WHILE,0:SWITCH,1:functions,0:DO,0	133
0x4009c80	          0x83ff01	                              cmp edi, 1	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009c83	            0x4154	                                push r12	     17074	i386-dis.c	FUNCTION_76
0x4009c85	          0x4189f4	                           mov r12d, esi	     17074	i386-dis.c	FUNCTION_76
0x4009c88	              0x55	                                push rbp	     17074	i386-dis.c	FUNCTION_76
0x4009c89	    0x488b2d000000	            mov rbp, qword [0x04009c90] 	     17076	i386-dis.c	FUNCTION_76
0x4009c90	              0x53	                                push rbx	     17074	i386-dis.c	FUNCTION_76
0x4009c91	            0x89fb	                            mov ebx, edi	     17074	i386-dis.c	FUNCTION_76
0x4009c93	     0xf8457010000	                            je 0x4009df0	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009c99	          0x83ff04	                              cmp edi, 4	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009c9c	     0xf84b6000000	                            je 0x4009d58	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009ca2	      0xba05000000	                              mov edx, 5	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4009ca7	      0xbe00000000	                              mov esi, 0	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4009cac	      0xbf00000000	                              mov edi, 0	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4009cb1	      0xe800000000	                          call 0x4009cb6	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4009cb6	    0x488b3d000000	            mov rdi, qword [0x04009cbd] 	       117	string3.h	FUNCTION_108	CALL_3
0x4009cbd	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4009cc0	      0xe800000000	                          call 0x4009cc5	       117	string3.h	FUNCTION_108	CALL_3
0x4009cc5	    0x488905000000	            mov qword [0x04009ccc], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009ccc	    0x48892d000000	            mov qword [0x04009cd3], rbp 	     17106	i386-dis.c	FUNCTION_76
0x4009cd3	        0xc6450000	                       mov byte [rbp], 0	     17107	i386-dis.c	FUNCTION_76
0x4009cd7	    0x833d00000000	               cmp dword [0x04009cde], 3	     17110	i386-dis.c	FUNCTION_76	IF_5
0x4009cde	     0xf85e4000000	                           jne 0x4009dc8	     17110	i386-dis.c	FUNCTION_76	IF_5
0x4009ce4	    0x803d00000000	                cmp byte [0x04009ceb], 0	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4009ceb	     0xf84f2010000	                            je 0x4009ee3	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4009cf1	    0x8b1500000000	            mov edx, dword [0x04009cf7] 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009cf7	    0x488305000000	               add qword [0x04009cff], 1	     17116	i386-dis.c	FUNCTION_76	IF_5
0x4009cff	            0x31c0	                            xor eax, eax	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4009d01	          0xf6c201	                              test dl, 1	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009d04	            0x740c	                            je 0x4009d12	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009d06	    0x830d00000000	            or dword [0x04009d0d], 0x41 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4009d0d	      0xb808000000	                              mov eax, 8	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4009d12	          0x83fb01	                              cmp ebx, 1	     17120	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4009d15	     0xf8425010000	                            je 0x4009e40	     17120	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4009d1b	          0x83e208	                              and edx, 8	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009d1e	            0x7470	                            je 0x4009d90	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009d20	     0x30500000000	             add eax, dword [0x04009d26]	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009d26	    0x488b15000000	            mov rdx, qword [0x04009d2d] 	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009d2d	    0x488b3d000000	            mov rdi, qword [0x04009d34] 	       117	string3.h	FUNCTION_108	CALL_3
0x4009d34	    0x830d00000000	            or dword [0x04009d3b], 0x48 	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4009d3b	            0x4898	                                    cdqe	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4009d3d	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4009d41	      0xe800000000	                          call 0x4009d46	       117	string3.h	FUNCTION_108	CALL_3
0x4009d46	    0x488905000000	            mov qword [0x04009d4d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009d4d	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x4009d4e	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x4009d4f	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x4009d51	              0xc3	                                     ret	     17141	i386-dis.c	FUNCTION_76
0x4009d52	    0x660f1f440000	                    nop word [rax + rax]	     17141	i386-dis.c	FUNCTION_76
0x4009d58	    0x803d00000000	                cmp byte [0x04009d5f], 0	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x4009d5f	     0xf8572ffffff	                           jne 0x4009cd7	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x4009d65	    0xf60500000000	               test byte [0x04009d6c], 8	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009d6c	     0xf840e010000	                            je 0x4009e80	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009d72	        0xc6450071	                    mov byte [rbp], 0x71	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4009d76	    0x830d00000000	            or dword [0x04009d7d], 0x48 	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009d7d	        0x4883c501	                              add rbp, 1	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4009d81	      0xe946ffffff	                           jmp 0x4009ccc	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4009d86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4009d90	    0xf60500000000	               test byte [0x04009d97], 2	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009d97	            0x7477	                            je 0x4009e10	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009d99	     0x30500000000	             add eax, dword [0x04009d9f]	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009d9f	    0x488b15000000	            mov rdx, qword [0x04009da6] 	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009da6	    0x488b3d000000	            mov rdi, qword [0x04009dad] 	       117	string3.h	FUNCTION_108	CALL_3
0x4009dad	            0x4898	                                    cdqe	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4009daf	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4009db3	      0xe800000000	                          call 0x4009db8	       117	string3.h	FUNCTION_108	CALL_3
0x4009db8	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x4009db9	    0x488905000000	            mov qword [0x04009dc0], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009dc0	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x4009dc1	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x4009dc3	              0xc3	                                     ret	     17141	i386-dis.c	FUNCTION_76
0x4009dc4	         0xf1f4000	                         nop dword [rax]	     17141	i386-dis.c	FUNCTION_76
0x4009dc8	    0x803d00000000	                cmp byte [0x04009dcf], 0	     15667	i386-dis.c	FUNCTION_26
0x4009dcf	     0xf840e010000	                            je 0x4009ee3	     15667	i386-dis.c	FUNCTION_26
0x4009dd5	          0x4489e6	                           mov esi, r12d	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009dd8	            0x89df	                            mov edi, ebx	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009dda	    0x488305000000	               add qword [0x04009de2], 1	     15668	i386-dis.c	FUNCTION_26
0x4009de2	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x4009de3	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x4009de4	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x4009de6	      0xe905cfffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009deb	       0xf1f440000	                   nop dword [rax + rax]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009df0	    0x803d00000000	                cmp byte [0x04009df7], 0	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4009df7	     0xf85dafeffff	                           jne 0x4009cd7	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4009dfd	        0xc6450062	                    mov byte [rbp], 0x62	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009e01	        0x4883c501	                              add rbp, 1	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009e05	      0xe9c2feffff	                           jmp 0x4009ccc	     17085	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009e0a	    0x660f1f440000	                    nop word [rax + rax]	     17085	i386-dis.c	FUNCTION_76	SWITCH_1
0x4009e10	     0x30500000000	             add eax, dword [0x04009e16]	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4009e16	    0x488b15000000	            mov rdx, qword [0x04009e1d] 	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4009e1d	    0x488b3d000000	            mov rdi, qword [0x04009e24] 	       117	string3.h	FUNCTION_108	CALL_3
0x4009e24	            0x4898	                                    cdqe	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4009e26	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4009e2a	      0xe800000000	                          call 0x4009e2f	       117	string3.h	FUNCTION_108	CALL_3
0x4009e2f	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x4009e30	    0x488905000000	            mov qword [0x04009e37], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009e37	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x4009e38	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x4009e3a	              0xc3	                                     ret	     17141	i386-dis.c	FUNCTION_76
0x4009e3b	       0xf1f440000	                   nop dword [rax + rax]	     17141	i386-dis.c	FUNCTION_76
0x4009e40	     0x30500000000	             add eax, dword [0x04009e46]	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4009e46	    0x830d00000000	            or dword [0x04009e4d], 0x40 	     17122	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4009e4d	            0x85d2	                           test edx, edx	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x4009e4f	            0x4898	                                    cdqe	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4009e51	            0x745d	                            je 0x4009eb0	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x4009e53	    0x488b15000000	            mov rdx, qword [0x04009e5a] 	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4009e5a	    0x488b3d000000	            mov rdi, qword [0x04009e61] 	       117	string3.h	FUNCTION_108	CALL_3
0x4009e61	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4009e65	      0xe800000000	                          call 0x4009e6a	       117	string3.h	FUNCTION_108	CALL_3
0x4009e6a	    0x488905000000	            mov qword [0x04009e71], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009e71	      0xe9d7feffff	                           jmp 0x4009d4d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009e76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009e80	        0x40f6c601	                             test sil, 1	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4009e84	            0x7552	                           jne 0x4009ed8	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4009e86	        0x488d5501	                      lea rdx, [rbp + 1]	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x4009e8a	      0xb877000000	                           mov eax, 0x77	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x4009e8f	          0x884500	                      mov byte [rbp], al	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x4009e92	    0x8b0500000000	            mov eax, dword [0x04009e98] 	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4009e98	          0x4889d5	                            mov rbp, rdx	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4009e9b	      0x2500020000	                          and eax, 0x200	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4009ea0	     0x90500000000	              or dword [0x04009ea6], eax	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4009ea6	      0xe921feffff	                           jmp 0x4009ccc	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4009eab	       0xf1f440000	                   nop dword [rax + rax]	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4009eb0	    0x488b15000000	            mov rdx, qword [0x04009eb7] 	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x4009eb7	    0x488b3d000000	            mov rdi, qword [0x04009ebe] 	       117	string3.h	FUNCTION_108	CALL_3
0x4009ebe	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4009ec2	      0xe800000000	                          call 0x4009ec7	       117	string3.h	FUNCTION_108	CALL_3
0x4009ec7	    0x488905000000	            mov qword [0x04009ece], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009ece	      0xe97afeffff	                           jmp 0x4009d4d	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009ed3	       0xf1f440000	                   nop dword [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009ed8	        0x488d5501	                      lea rdx, [rbp + 1]	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4009edc	      0xb86c000000	                           mov eax, 0x6c	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4009ee1	            0xebac	                           jmp 0x4009e8f	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4009ee3	      0xe800000000	                          call 0x4009ee8	     17115	i386-dis.c	FUNCTION_76	IF_5
OP_MMX	CALL,1:IF,2:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	20
0x4001f90	        0x4883ec08	                              sub rsp, 8	     16406	i386-dis.c	FUNCTION_50
0x4001f94	    0x8b0500000000	            mov eax, dword [0x04001f9a] 	     16410	i386-dis.c	FUNCTION_50
0x4001f9a	    0x8b1500000000	            mov edx, dword [0x04001fa0] 	     16407	i386-dis.c	FUNCTION_50
0x4001fa0	    0x488b0d000000	            mov rcx, qword [0x04001fa7] 	     16419	i386-dis.c	FUNCTION_50	ELSE_1
0x4001fa7	      0x2500020000	                          and eax, 0x200	     16410	i386-dis.c	FUNCTION_50
0x4001fac	     0x90500000000	              or dword [0x04001fb2], eax	     16410	i386-dis.c	FUNCTION_50
0x4001fb2	            0x85c0	                           test eax, eax	     16411	i386-dis.c	FUNCTION_50	IF_1
0x4001fb4	            0x741a	                            je 0x4001fd0	     16411	i386-dis.c	FUNCTION_50	IF_1
0x4001fb6	    0xf60500000000	               test byte [0x04001fbd], 4	     16414	i386-dis.c	FUNCTION_50	IF_1
0x4001fbd	    0x488b0d000000	            mov rcx, qword [0x04001fc4] 	     16413	i386-dis.c	FUNCTION_50	IF_1
0x4001fc4	            0x740a	                            je 0x4001fd0	     16414	i386-dis.c	FUNCTION_50	IF_1
0x4001fc6	    0x830d00000000	            or dword [0x04001fcd], 0x44 	     16414	i386-dis.c	FUNCTION_50	IF_1
0x4001fcd	          0x83c208	                              add edx, 8	     16416	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x4001fd0	          0x4863d2	                         movsxd rdx, edx	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4001fd3	    0x488b3d000000	            mov rdi, qword [0x04001fda] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001fda	        0x488b34d1	            mov rsi, qword [rcx + rdx*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4001fde	      0xe800000000	                          call 0x4001fe3	       117	string3.h	FUNCTION_108	CALL_3
0x4001fe3	    0x488905000000	            mov qword [0x04001fea], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4001fea	        0x4883c408	                              add rsp, 8	     16421	i386-dis.c	FUNCTION_50
0x4001fee	              0xc3	                                     ret	     16421	i386-dis.c	FUNCTION_50
print_insn	CALL,37:IF,55:FOR,12:ELSE,22:WHILE,0:SWITCH,0:functions,0:DO,0	2080
0x4009ef0	            0x4157	                                push r15	     13168	i386-dis.c	FUNCTION_10
0x4009ef2	            0x4156	                                push r14	     13168	i386-dis.c	FUNCTION_10
0x4009ef4	            0x4155	                                push r13	     13168	i386-dis.c	FUNCTION_10
0x4009ef6	            0x4154	                                push r12	     13168	i386-dis.c	FUNCTION_10
0x4009ef8	              0x55	                                push rbp	     13168	i386-dis.c	FUNCTION_10
0x4009ef9	              0x53	                                push rbx	     13168	i386-dis.c	FUNCTION_10
0x4009efa	          0x4889fd	                            mov rbp, rdi	     13168	i386-dis.c	FUNCTION_10
0x4009efd	    0x4881ec380200	                          sub rsp, 0x238	     13168	i386-dis.c	FUNCTION_10
0x4009f04	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	     13168	i386-dis.c	FUNCTION_10
0x4009f0d	    0x48899c242802	            mov qword [rsp + 0x228], rbx	     13168	i386-dis.c	FUNCTION_10
0x4009f15	            0x31db	                            xor ebx, ebx	     13168	i386-dis.c	FUNCTION_10
0x4009f17	        0x488b5e20	            mov rbx, qword [rsi + 0x20] 	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4009f1b	      0x4889742408	                mov qword [rsp + 8], rsi	     13168	i386-dis.c	FUNCTION_10
0x4009f20	    0xc78424580100	              mov dword [rsp + 0x158], 3	     13178	i386-dis.c	FUNCTION_10
0x4009f2b	          0xf6c304	                              test bl, 4	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4009f2e	     0xf841c030000	                            je 0x400a250	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4009f34	    0xc70500000000	               mov dword [0x04009f3e], 1	     13180	i386-dis.c	FUNCTION_10	IF_1
0x4009f3e	     0xfb615000000	           movzx edx, byte [0x04009f45] 	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4009f45	          0x80faff	                            cmp dl, 0xff	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4009f48	     0xf8426030000	                            je 0x400a274	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4009f4e	      0x488b442408	                mov rax, qword [rsp + 8]	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4009f53	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4009f5a	          0x4885c0	                           test rax, rax	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4009f5d	            0x752b	                           jne 0x4009f8a	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4009f5f	      0xe993000000	                           jmp 0x4009ff7	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4009f64	         0xf1f4000	                         nop dword [rax]	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4009f68	    0xc70500000000	               mov dword [0x04009f72], 0	     13195	i386-dis.c	FUNCTION_10	FOR_1	IF_4
0x4009f72	      0xbe2c000000	                           mov esi, 0x2c	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4009f77	          0x4889c7	                            mov rdi, rax	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4009f7a	      0xe800000000	                          call 0x4009f7f	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4009f7f	          0x4885c0	                           test rax, rax	     13253	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4009f82	            0x746c	                            je 0x4009ff0	     13253	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4009f84	        0x4883c001	                              add rax, 1	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4009f88	            0x7466	                            je 0x4009ff0	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4009f8a	      0xbf00000000	                              mov edi, 0	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4009f8f	      0xb905000000	                              mov ecx, 5	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4009f94	          0x4889c6	                            mov rsi, rax	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4009f97	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4009f99	            0x74cd	                            je 0x4009f68	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4009f9b	      0xbf00000000	                              mov edi, 0	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4009fa0	      0xb907000000	                              mov ecx, 7	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4009fa5	          0x4889c6	                            mov rsi, rax	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4009fa8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4009faa	            0x7514	                           jne 0x4009fc0	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4009fac	    0xc70500000000	               mov dword [0x04009fb6], 1	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4009fb6	            0xebba	                           jmp 0x4009f72	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4009fb8	     0xf1f84000000	                   nop dword [rax + rax]	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4009fc0	      0xbf00000000	                              mov edi, 0	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4009fc5	      0xb906000000	                              mov ecx, 6	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4009fca	          0x4889c6	                            mov rsi, rax	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4009fcd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4009fcf	     0xf851b020000	                           jne 0x400a1f0	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4009fd5	    0xc70500000000	               mov dword [0x04009fdf], 2	     13200	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4009fdf	    0xc78424580100	              mov dword [rsp + 0x158], 3	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4009fea	            0xeb86	                           jmp 0x4009f72	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4009fec	         0xf1f4000	                         nop dword [rax]	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4009ff0	     0xfb615000000	           movzx edx, byte [0x04009ff7] 	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4009ff7	            0x84d2	                             test dl, dl	     13264	i386-dis.c	FUNCTION_10	IF_25
0x4009ff9	     0xf8489020000	                            je 0x400a288	     13264	i386-dis.c	FUNCTION_10	IF_25
0x4009fff	    0x48c705000000	               mov qword [0x0400a00a], 0	     13266	i386-dis.c	FUNCTION_10	IF_25
0x400a00a	    0x48c705000000	               mov qword [0x0400a015], 0	     13267	i386-dis.c	FUNCTION_10	IF_25
0x400a015	    0x48c705000000	               mov qword [0x0400a020], 0	     13268	i386-dis.c	FUNCTION_10	IF_25
0x400a020	    0x48c705000000	               mov qword [0x0400a02b], 0	     13269	i386-dis.c	FUNCTION_10	IF_25
0x400a02b	    0x48c705000000	               mov qword [0x0400a036], 0	     13270	i386-dis.c	FUNCTION_10	IF_25
0x400a036	    0x48c705000000	               mov qword [0x0400a041], 0	     13271	i386-dis.c	FUNCTION_10	IF_25
0x400a041	    0x48c705000000	               mov qword [0x0400a04c], 0	     13272	i386-dis.c	FUNCTION_10	IF_25
0x400a04c	    0x48c705000000	               mov qword [0x0400a057], 0	     13273	i386-dis.c	FUNCTION_10	IF_25
0x400a057	    0x48c705000000	               mov qword [0x0400a062], 0	     13274	i386-dis.c	FUNCTION_10	IF_25
0x400a062	    0x48c705000000	               mov qword [0x0400a06d], 0	     13275	i386-dis.c	FUNCTION_10	IF_25
0x400a06d	    0x48c705000000	               mov qword [0x0400a078], 0	     13276	i386-dis.c	FUNCTION_10	IF_25
0x400a078	    0x48c705000000	               mov qword [0x0400a083], 0	     13277	i386-dis.c	FUNCTION_10	IF_25
0x400a083	    0x48c705000000	               mov qword [0x0400a08e], 0	     13278	i386-dis.c	FUNCTION_10	IF_25
0x400a08e	    0x48c705000000	               mov qword [0x0400a099], 0	     13279	i386-dis.c	FUNCTION_10	IF_25
0x400a099	    0x48c705000000	               mov qword [0x0400a0a4], 0	     13280	i386-dis.c	FUNCTION_10	IF_25
0x400a0a4	    0xc60500000000	            mov byte [0x0400a0ab], 0x5b 	     13281	i386-dis.c	FUNCTION_10	IF_25
0x400a0ab	    0xc60500000000	            mov byte [0x0400a0b2], 0x5d 	     13282	i386-dis.c	FUNCTION_10	IF_25
0x400a0b2	    0xc60500000000	            mov byte [0x0400a0b9], 0x2b 	     13283	i386-dis.c	FUNCTION_10	IF_25
0x400a0b9	    0xc60500000000	            mov byte [0x0400a0c0], 0x2a 	     13284	i386-dis.c	FUNCTION_10	IF_25
0x400a0c0	          0x83e320	                           and ebx, 0x20	     13312	i386-dis.c	FUNCTION_10	IF_26
0x400a0c3	    0x488dbc243001	                  lea rdi, [rsp + 0x130]	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x400a0cb	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x400a0d2	        0x4883fb01	                              cmp rbx, 1	     13313	i386-dis.c	FUNCTION_10	IF_26
0x400a0d6	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13313	i386-dis.c	FUNCTION_10	IF_26
0x400a0db	    0x4889ac245001	            mov qword [rsp + 0x150], rbp	     13319	i386-dis.c	FUNCTION_10	ELSE_17
0x400a0e3	            0x19c0	                            sbb eax, eax	     13313	i386-dis.c	FUNCTION_10	IF_26
0x400a0e5	            0x31f6	                            xor esi, esi	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x400a0e7	    0xc60500000000	                mov byte [0x0400a0ee], 0	     13321	i386-dis.c	FUNCTION_10	ELSE_17
0x400a0ee	          0x83c008	                              add eax, 8	     13313	i386-dis.c	FUNCTION_10	IF_26
0x400a0f1	    0x488915000000	            mov qword [0x0400a0f8], rdx 	     13313	i386-dis.c	FUNCTION_10	IF_26
0x400a0f8	    0x488915000000	            mov qword [0x0400a0ff], rdx 	     13313	i386-dis.c	FUNCTION_10	IF_26
0x400a0ff	    0x8983b0000000	             mov dword [rbx + 0xb0], eax	     13313	i386-dis.c	FUNCTION_10	IF_26
0x400a105	        0x48897b68	             mov qword [rbx + 0x68], rdi	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x400a109	    0x488d84243801	                  lea rax, [rsp + 0x138]	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x400a111	    0x488dbc246001	                  lea rdi, [rsp + 0x160]	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x400a119	    0xc60500000000	                mov byte [0x0400a120], 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x400a120	    0xc60500000000	                mov byte [0x0400a127], 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x400a127	    0x488984243001	            mov qword [rsp + 0x130], rax	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x400a12f	    0xc60500000000	                mov byte [0x0400a136], 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x400a136	    0xc60500000000	                mov byte [0x0400a13d], 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x400a13d	    0xc60500000000	                mov byte [0x0400a144], 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x400a144	    0x891500000000	            mov dword [0x0400a14a], edx 	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x400a14a	    0x48891d000000	            mov qword [0x0400a151], rbx 	     13328	i386-dis.c	FUNCTION_10
0x400a151	    0x48892d000000	            mov qword [0x0400a158], rbp 	     13329	i386-dis.c	FUNCTION_10
0x400a158	    0x488905000000	            mov qword [0x0400a15f], rax 	     13330	i386-dis.c	FUNCTION_10
0x400a15f	    0x488905000000	            mov qword [0x0400a166], rax 	     13331	i386-dis.c	FUNCTION_10
0x400a166	      0xe800000000	                          call 0x400a16b	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x400a16b	            0x85c0	                           test eax, eax	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x400a16d	     0xf841d020000	                            je 0x400a390	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x400a173	    0x488d84243801	                  lea rax, [rsp + 0x138]	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400a17b	    0x483905000000	            cmp qword [0x0400a182], rax 	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400a182	     0xf86730a0000	                           jbe 0x400abfb	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400a188	    0x440fb6bc2438	         movzx r15d, byte [rsp + 0x138] 	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x400a191	    0x8bb424580100	           mov esi, dword [rsp + 0x158] 	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x400a198	          0x4489ff	                           mov edi, r15d	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x400a19b	      0xe8a05effff	                    call sym.prefix_name	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x400a1a0	          0x4885c0	                           test rax, rax	     13343	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400a1a3	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400a1a8	     0xf8412090000	                            je 0x400aac0	     13343	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400a1ae	          0x4889c2	                            mov rdx, rax	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400a1b1	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400a1b5	      0xbe00000000	                              mov esi, 0	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400a1ba	            0x31c0	                            xor eax, eax	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400a1bc	            0xff13	                        call qword [rbx]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400a1be	      0xb801000000	                              mov eax, 1	     13352	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400a1c3	    0x488b9c242802	           mov rbx, qword [rsp + 0x228] 	     13586	i386-dis.c	FUNCTION_10
0x400a1cb	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     13586	i386-dis.c	FUNCTION_10
0x400a1d4	     0xf857e230000	                           jne 0x400c558	     13586	i386-dis.c	FUNCTION_10
0x400a1da	    0x4881c4380200	                          add rsp, 0x238	     13586	i386-dis.c	FUNCTION_10
0x400a1e1	              0x5b	                                 pop rbx	     13586	i386-dis.c	FUNCTION_10
0x400a1e2	              0x5d	                                 pop rbp	     13586	i386-dis.c	FUNCTION_10
0x400a1e3	            0x415c	                                 pop r12	     13586	i386-dis.c	FUNCTION_10
0x400a1e5	            0x415d	                                 pop r13	     13586	i386-dis.c	FUNCTION_10
0x400a1e7	            0x415e	                                 pop r14	     13586	i386-dis.c	FUNCTION_10
0x400a1e9	            0x415f	                                 pop r15	     13586	i386-dis.c	FUNCTION_10
0x400a1eb	              0xc3	                                     ret	     13586	i386-dis.c	FUNCTION_10
0x400a1ec	         0xf1f4000	                         nop dword [rax]	     13586	i386-dis.c	FUNCTION_10
0x400a1f0	      0xbf00000000	                              mov edi, 0	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x400a1f5	      0xb904000000	                              mov ecx, 4	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x400a1fa	          0x4889c6	                            mov rsi, rax	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x400a1fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x400a1ff	            0x751f	                           jne 0x400a220	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x400a201	    0xc70500000000	               mov dword [0x0400a20b], 1	     13205	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x400a20b	    0xc78424580100	              mov dword [rsp + 0x158], 3	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x400a216	      0xe957fdffff	                           jmp 0x4009f72	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x400a21b	       0xf1f440000	                   nop dword [rax + rax]	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x400a220	      0xbf00000000	                              mov edi, 0	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x400a225	      0xb905000000	                              mov ecx, 5	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x400a22a	          0x4889c6	                            mov rsi, rax	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x400a22d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x400a22f	     0xf851b010000	                           jne 0x400a350	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x400a235	    0xc70500000000	               mov dword [0x0400a23f], 0	     13210	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x400a23f	    0xc78424580100	              mov dword [rsp + 0x158], 0	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x400a24a	      0xe923fdffff	                           jmp 0x4009f72	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x400a24f	              0x90	                                     nop	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x400a250	        0x4883fb02	                              cmp rbx, 2	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x400a254	     0xf84c6060000	                            je 0x400a920	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x400a25a	     0xfb615000000	           movzx edx, byte [0x0400a261] 	     13189	i386-dis.c	FUNCTION_10	IF_3
0x400a261	    0xc70500000000	               mov dword [0x0400a26b], 2	     13187	i386-dis.c	FUNCTION_10	ELSE_2
0x400a26b	          0x80faff	                            cmp dl, 0xff	     13189	i386-dis.c	FUNCTION_10	IF_3
0x400a26e	     0xf85dafcffff	                           jne 0x4009f4e	     13189	i386-dis.c	FUNCTION_10	IF_3
0x400a274	            0x89da	                            mov edx, ebx	     13190	i386-dis.c	FUNCTION_10	IF_3
0x400a276	          0x83e201	                              and edx, 1	     13190	i386-dis.c	FUNCTION_10	IF_3
0x400a279	    0x881500000000	               mov byte [0x0400a27f], dl	     13190	i386-dis.c	FUNCTION_10	IF_3
0x400a27f	      0xe9cafcffff	                           jmp 0x4009f4e	     13190	i386-dis.c	FUNCTION_10	IF_3
0x400a284	         0xf1f4000	                         nop dword [rax]	     13190	i386-dis.c	FUNCTION_10	IF_3
0x400a288	    0x48c705000000	               mov qword [0x0400a293], 0	     13288	i386-dis.c	FUNCTION_10	ELSE_16
0x400a293	    0x48c705000000	               mov qword [0x0400a29e], 0	     13289	i386-dis.c	FUNCTION_10	ELSE_16
0x400a29e	    0x48c705000000	               mov qword [0x0400a2a9], 0	     13290	i386-dis.c	FUNCTION_10	ELSE_16
0x400a2a9	    0x48c705000000	               mov qword [0x0400a2b4], 0	     13291	i386-dis.c	FUNCTION_10	ELSE_16
0x400a2b4	    0x48c705000000	               mov qword [0x0400a2bf], 0	     13292	i386-dis.c	FUNCTION_10	ELSE_16
0x400a2bf	    0x48c705000000	               mov qword [0x0400a2ca], 0	     13293	i386-dis.c	FUNCTION_10	ELSE_16
0x400a2ca	    0x48c705000000	               mov qword [0x0400a2d5], 0	     13294	i386-dis.c	FUNCTION_10	ELSE_16
0x400a2d5	    0x48c705000000	               mov qword [0x0400a2e0], 0	     13295	i386-dis.c	FUNCTION_10	ELSE_16
0x400a2e0	    0x48c705000000	               mov qword [0x0400a2eb], 0	     13296	i386-dis.c	FUNCTION_10	ELSE_16
0x400a2eb	    0x48c705000000	               mov qword [0x0400a2f6], 0	     13297	i386-dis.c	FUNCTION_10	ELSE_16
0x400a2f6	    0x48c705000000	               mov qword [0x0400a301], 0	     13298	i386-dis.c	FUNCTION_10	ELSE_16
0x400a301	    0x48c705000000	               mov qword [0x0400a30c], 0	     13299	i386-dis.c	FUNCTION_10	ELSE_16
0x400a30c	    0x48c705000000	               mov qword [0x0400a317], 0	     13300	i386-dis.c	FUNCTION_10	ELSE_16
0x400a317	    0x48c705000000	               mov qword [0x0400a322], 0	     13301	i386-dis.c	FUNCTION_10	ELSE_16
0x400a322	    0x48c705000000	               mov qword [0x0400a32d], 0	     13302	i386-dis.c	FUNCTION_10	ELSE_16
0x400a32d	    0xc60500000000	            mov byte [0x0400a334], 0x28 	     13303	i386-dis.c	FUNCTION_10	ELSE_16
0x400a334	    0xc60500000000	            mov byte [0x0400a33b], 0x29 	     13304	i386-dis.c	FUNCTION_10	ELSE_16
0x400a33b	    0xc60500000000	            mov byte [0x0400a342], 0x2c 	     13305	i386-dis.c	FUNCTION_10	ELSE_16
0x400a342	    0xc60500000000	            mov byte [0x0400a349], 0x2c 	     13306	i386-dis.c	FUNCTION_10	ELSE_16
0x400a349	      0xe972fdffff	                           jmp 0x400a0c0	     13306	i386-dis.c	FUNCTION_10	ELSE_16
0x400a34e	            0x6690	                                     nop	     13306	i386-dis.c	FUNCTION_10	ELSE_16
0x400a350	      0xbf00000000	                              mov edi, 0	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x400a355	      0xb905000000	                              mov ecx, 5	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x400a35a	          0x4889c6	                            mov rsi, rax	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x400a35d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x400a35f	     0xf8573050000	                           jne 0x400a8d8	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x400a365	        0x488d7005	                      lea rsi, [rax + 5]	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x400a369	    0xc60500000000	                mov byte [0x0400a370], 1	     13215	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9
0x400a370	      0xbf00000000	                              mov edi, 0	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x400a375	      0xb909000000	                              mov ecx, 9	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x400a37a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x400a37c	     0xf85f0fbffff	                           jne 0x4009f72	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x400a382	    0xc60500000000	                mov byte [0x0400a389], 1	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x400a389	      0xe9e4fbffff	                           jmp 0x4009f72	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x400a38e	            0x6690	                                     nop	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x400a390	      0xba00000000	                              mov edx, 0	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x400a395	      0xb907000000	                              mov ecx, 7	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x400a39a	            0x31c0	                            xor eax, eax	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x400a39c	          0x4889d7	                            mov rdi, rdx	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x400a39f	    0x8b9c24580100	           mov ebx, dword [rsp + 0x158] 	     13359	i386-dis.c	FUNCTION_10
0x400a3a6	    0x488b15000000	            mov rdx, qword [0x0400a3ad] 	     13359	i386-dis.c	FUNCTION_10
0x400a3ad	          0xf348ab	              rep stosq qword [rdi], rax	     13359	i386-dis.c	FUNCTION_10
0x400a3b0	    0x48c705000000	               mov qword [0x0400a3bb], 0	     13358	i386-dis.c	FUNCTION_10
0x400a3bb	    0xc70500000000	               mov dword [0x0400a3c5], 0	     12419	i386-dis.c	FUNCTION_2
0x400a3c5	    0x41be0e000000	                           mov r14d, 0xe	     12432	i386-dis.c	FUNCTION_2
0x400a3cb	    0xc70500000000	               mov dword [0x0400a3d5], 0	     12420	i386-dis.c	FUNCTION_2
0x400a3d5	    0xc70500000000	               mov dword [0x0400a3df], 0	     12421	i386-dis.c	FUNCTION_2
0x400a3df	          0x4531ed	                          xor r13d, r13d	     12432	i386-dis.c	FUNCTION_2
0x400a3e2	    0xc70500000000	               mov dword [0x0400a3ec], 0	     12422	i386-dis.c	FUNCTION_2
0x400a3ec	    0xc70500000000	               mov dword [0x0400a3f6], 0	     12423	i386-dis.c	FUNCTION_2
0x400a3f6	    0xc70500000000	     mov dword [0x0400a400], 0xffffffff 	     12424	i386-dis.c	FUNCTION_2
0x400a400	    0xc70500000000	     mov dword [0x0400a40a], 0xffffffff 	     12425	i386-dis.c	FUNCTION_2
0x400a40a	    0xc70500000000	     mov dword [0x0400a414], 0xffffffff 	     12426	i386-dis.c	FUNCTION_2
0x400a414	    0xc70500000000	     mov dword [0x0400a41e], 0xffffffff 	     12427	i386-dis.c	FUNCTION_2
0x400a41e	    0xc70500000000	     mov dword [0x0400a428], 0xffffffff 	     12428	i386-dis.c	FUNCTION_2
0x400a428	    0xc70500000000	     mov dword [0x0400a432], 0xffffffff 	     12429	i386-dis.c	FUNCTION_2
0x400a432	    0xc70500000000	     mov dword [0x0400a43c], 0xffffffff 	     12430	i386-dis.c	FUNCTION_2
0x400a43c	    0xc70500000000	     mov dword [0x0400a446], 0xffffffff 	     12431	i386-dis.c	FUNCTION_2
0x400a446	    0xc70500000000	               mov dword [0x0400a450], 0	     12432	i386-dis.c	FUNCTION_2
0x400a450	    0x4c8b3d000000	            mov r15, qword [0x0400a457] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400a457	        0x4c8d6201	                      lea r12, [rdx + 1]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400a45b	        0x498b6f68	            mov rbp, qword [r15 + 0x68] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400a45f	        0x488b7500	                    mov rsi, qword [rbp]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400a463	          0x4939f4	                            cmp r12, rsi	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400a466	     0xf8744010000	                            ja 0x400a5b0	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400a46c	           0xfb602	                   movzx eax, byte [rdx]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a46f	            0x3c64	                            cmp al, 0x64	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a471	     0xf8483050000	                            je 0x400a9fa	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a477	     0xf86b3000000	                           jbe 0x400a530	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a47d	            0x3c9b	                            cmp al, 0x9b	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a47f	     0xf84cb050000	                            je 0x400aa50	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a485	     0xf8765010000	                            ja 0x400a5f0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a48b	            0x3c66	                            cmp al, 0x66	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a48d	     0xf84a5050000	                            je 0x400aa38	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a493	     0xf82c7040000	                            jb 0x400a960	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a499	            0x3c67	                            cmp al, 0x67	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a49b	     0xf8567010000	                           jne 0x400a608	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a4a1	    0x8b0d00000000	            mov ecx, dword [0x0400a4a7] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a4a7	    0x810d00000000	            or dword [0x0400a4b1], 0x400	     12514	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a4b1	    0x44892d000000	           mov dword [0x0400a4b8], r13d 	     12515	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a4b8	            0x85c9	                           test ecx, ecx	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a4ba	     0xf84be000000	                            je 0x400a57e	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a4c0	    0x890d00000000	            mov dword [0x0400a4c6], ecx 	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a4c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a4d0	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a4d5	            0x31ed	                            xor ebp, ebp	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a4d7	    0x41bc00000000	                             mov r12d, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a4dd	           0xf1f00	                         nop dword [rax]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a4e0	    0x8b3cad000000	                  mov edi, dword [rbp*4]	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x400a4e7	            0x85ff	                           test edi, edi	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x400a4e9	     0xf8431060000	                            je 0x400ab20	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x400a4ef	            0x89de	                            mov esi, ebx	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a4f1	        0x4d8b7500	                    mov r14, qword [r13]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a4f5	      0xe8465bffff	                    call sym.prefix_name	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a4fa	          0x4885ed	                           test rbp, rbp	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a4fd	      0xba00000000	                              mov edx, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a502	          0x4889c1	                            mov rcx, rax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a505	        0x490f44d4	                          cmove rdx, r12	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a509	        0x4883c501	                              add rbp, 1	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a50d	            0x31c0	                            xor eax, eax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a50f	        0x498b7d08	                mov rdi, qword [r13 + 8]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a513	      0xbe00000000	                              mov esi, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a518	          0x41ffd6	                                call r14	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a51b	        0x4883fd0e	                            cmp rbp, 0xe	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a51f	            0x75bf	                           jne 0x400a4e0	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a521	      0xb80e000000	                            mov eax, 0xe	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a526	      0xe998fcffff	                           jmp 0x400a1c3	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a52b	       0xf1f440000	                   nop dword [rax + rax]	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400a530	            0x3c36	                            cmp al, 0x36	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a532	     0xf8458050000	                            je 0x400aa90	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a538	     0xf8752030000	                            ja 0x400a890	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a53e	            0x3c26	                            cmp al, 0x26	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a540	     0xf84fa030000	                            je 0x400a940	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a546	            0x3c2e	                            cmp al, 0x2e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a548	     0xf85ba000000	                           jne 0x400a608	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a54e	    0x830d00000000	                or dword [0x0400a555], 8	     12480	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a555	    0x44892d000000	           mov dword [0x0400a55c], r13d 	     12481	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a55c	    0xc70500000000	               mov dword [0x0400a566], 8	     12482	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a566	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12482	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a570	    0x8b0d00000000	            mov ecx, dword [0x0400a576] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a576	            0x85c9	                           test ecx, ecx	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a578	     0xf8542ffffff	                           jne 0x400a4c0	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a57e	            0x31f6	                            xor esi, esi	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a580	          0x4963cd	                        movsxd rcx, r13d	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400a583	        0x4183c501	                             add r13d, 1	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400a587	    0x89048d000000	                  mov dword [rcx*4], eax	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400a58e	        0x4883c201	                              add rdx, 1	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x400a592	        0x4183ee01	                             sub r14d, 1	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x400a596	    0x893500000000	            mov dword [0x0400a59c], esi 	     12544	i386-dis.c	FUNCTION_2	WHILE_1
0x400a59c	    0x488915000000	            mov qword [0x0400a5a3], rdx 	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x400a5a3	     0xf85a7feffff	                           jne 0x400a450	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x400a5a9	      0xe922ffffff	                           jmp 0x400a4d0	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x400a5ae	            0x6690	                                     nop	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x400a5b0	        0x4c8d4508	                       lea r8, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x400a5b4	        0x488d451c	                   lea rax, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400a5b8	          0x4989f1	                             mov r9, rsi	       203	i386-dis.c	FUNCTION_1
0x400a5bb	          0x4d29c1	                              sub r9, r8	       203	i386-dis.c	FUNCTION_1
0x400a5be	        0x4c034d20	              add r9, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400a5c2	          0x4939c4	                            cmp r12, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400a5c5	     0xf86ed030000	                           jbe 0x400a9b8	       205	i386-dis.c	FUNCTION_1	IF_1
0x400a5cb	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400a5d0	          0x4939f0	                             cmp r8, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400a5d3	     0xf858d080000	                           jne 0x400ae66	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400a5d9	          0x4c89fa	                            mov rdx, r15	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400a5dc	          0x4c89ce	                             mov rsi, r9	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400a5df	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400a5e1	        0x41ff5778	                 call qword [r15 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400a5e5	      0xe97c080000	                           jmp 0x400ae66	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400a5ea	    0x660f1f440000	                    nop word [rax + rax]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400a5f0	            0x3cf2	                            cmp al, 0xf2	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a5f2	     0xf8428040000	                            je 0x400aa20	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a5f8	            0x3cf3	                            cmp al, 0xf3	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a5fa	     0xf84a0030000	                            je 0x400a9a0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a600	            0x3cf0	                            cmp al, 0xf0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a602	     0xf84a5040000	                            je 0x400aaad	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a608	    0x448b25000000	           mov r12d, dword [0x0400a60f] 	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a60f	          0x4585e4	                         test r12d, r12d	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x400a612	     0xf85b8feffff	                           jne 0x400a4d0	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x400a618	      0x488b442408	                mov rax, qword [rsp + 8]	     13375	i386-dis.c	FUNCTION_10
0x400a61d	        0x4c8d7a01	                      lea r15, [rdx + 1]	     13375	i386-dis.c	FUNCTION_10
0x400a621	    0x488915000000	            mov qword [0x0400a628], rdx 	     13373	i386-dis.c	FUNCTION_10
0x400a628	        0x488b6868	            mov rbp, qword [rax + 0x68] 	     13375	i386-dis.c	FUNCTION_10
0x400a62c	        0x488b7500	                    mov rsi, qword [rbp]	     13375	i386-dis.c	FUNCTION_10
0x400a630	          0x4939f7	                            cmp r15, rsi	     13375	i386-dis.c	FUNCTION_10
0x400a633	     0xf87f8070000	                            ja 0x400ae31	     13375	i386-dis.c	FUNCTION_10
0x400a639	           0xfb602	                   movzx eax, byte [rdx]	     13376	i386-dis.c	FUNCTION_10
0x400a63c	            0x3c62	                            cmp al, 0x62	     13376	i386-dis.c	FUNCTION_10
0x400a63e	        0x400f94c6	                                sete sil	     13376	i386-dis.c	FUNCTION_10
0x400a642	            0x3cc8	                            cmp al, 0xc8	     13376	i386-dis.c	FUNCTION_10
0x400a644	           0xf94c1	                                 sete cl	     13376	i386-dis.c	FUNCTION_10
0x400a647	             0x9f1	                             or ecx, esi	     13376	i386-dis.c	FUNCTION_10
0x400a649	           0xfb6c9	                           movzx ecx, cl	     13376	i386-dis.c	FUNCTION_10
0x400a64c	    0x890d00000000	            mov dword [0x0400a652], ecx 	     13376	i386-dis.c	FUNCTION_10
0x400a652	    0x8b0d00000000	            mov ecx, dword [0x0400a658] 	     13378	i386-dis.c	FUNCTION_10	IF_31
0x400a658	          0xf6c508	                              test ch, 8	     13378	i386-dis.c	FUNCTION_10	IF_31
0x400a65b	     0xf850f050000	                           jne 0x400ab70	     13378	i386-dis.c	FUNCTION_10	IF_31
0x400a661	            0x3c0f	                             cmp al, 0xf	     13390	i386-dis.c	FUNCTION_10	IF_32
0x400a663	     0xf8448110000	                            je 0x400b7b1	     13390	i386-dis.c	FUNCTION_10	IF_32
0x400a669	        0x488d2c40	                  lea rbp, [rax + rax*2]	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400a66d	     0xfb680000000	                   movzx eax, byte [rax]	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x400a674	        0x4c8d7201	                      lea r14, [rdx + 1]	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x400a678	        0x48c1e505	                              shl rbp, 5	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400a67c	    0x4c8935000000	            mov qword [0x0400a683], r14 	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x400a683	    0x4881c5000000	                              add rbp, 0	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400a68a	    0x880500000000	               mov byte [0x0400a690], al	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x400a690	          0x4189dd	                           mov r13d, ebx	     13413	i386-dis.c	FUNCTION_10	IF_33
0x400a693	    0x4c8935000000	            mov qword [0x0400a69a], r14 	     13417	i386-dis.c	FUNCTION_10
0x400a69a	        0x4183f502	                             xor r13d, 2	     13413	i386-dis.c	FUNCTION_10	IF_33
0x400a69e	          0xf6c504	                              test ch, 4	     13413	i386-dis.c	FUNCTION_10	IF_33
0x400a6a1	        0x440f44eb	                         cmove r13d, ebx	     13413	i386-dis.c	FUNCTION_10	IF_33
0x400a6a5	          0x4489ea	                           mov edx, r13d	     13415	i386-dis.c	FUNCTION_10	IF_34
0x400a6a8	          0x83f201	                              xor edx, 1	     13415	i386-dis.c	FUNCTION_10	IF_34
0x400a6ab	          0x80e502	                               and ch, 2	     13415	i386-dis.c	FUNCTION_10	IF_34
0x400a6ae	        0x440f45ea	                        cmovne r13d, edx	     13415	i386-dis.c	FUNCTION_10	IF_34
0x400a6b2	            0x84c0	                             test al, al	     13418	i386-dis.c	FUNCTION_10	IF_35
0x400a6b4	            0x7442	                            je 0x400a6f8	     13418	i386-dis.c	FUNCTION_10	IF_35
0x400a6b6	      0x488b442408	                mov rax, qword [rsp + 8]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x400a6bb	        0x4d8d4601	                       lea r8, [r14 + 1]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x400a6bf	        0x4c8b7868	            mov r15, qword [rax + 0x68] 	     13420	i386-dis.c	FUNCTION_10	IF_35
0x400a6c3	          0x498b37	                    mov rsi, qword [r15]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x400a6c6	          0x4939f0	                             cmp r8, rsi	     13420	i386-dis.c	FUNCTION_10	IF_35
0x400a6c9	     0xf876c110000	                            ja 0x400b83b	     13420	i386-dis.c	FUNCTION_10	IF_35
0x400a6cf	        0x410fb606	                   movzx eax, byte [r14]	     13421	i386-dis.c	FUNCTION_10	IF_35
0x400a6d3	            0x89c2	                            mov edx, eax	     13421	i386-dis.c	FUNCTION_10	IF_35
0x400a6d5	          0xc0ea06	                               shr dl, 6	     13421	i386-dis.c	FUNCTION_10	IF_35
0x400a6d8	           0xfb6d2	                           movzx edx, dl	     13421	i386-dis.c	FUNCTION_10	IF_35
0x400a6db	    0x891500000000	            mov dword [0x0400a6e1], edx 	     13421	i386-dis.c	FUNCTION_10	IF_35
0x400a6e1	            0x89c2	                            mov edx, eax	     13422	i386-dis.c	FUNCTION_10	IF_35
0x400a6e3	          0x83e007	                              and eax, 7	     13423	i386-dis.c	FUNCTION_10	IF_35
0x400a6e6	          0xc0ea03	                               shr dl, 3	     13422	i386-dis.c	FUNCTION_10	IF_35
0x400a6e9	    0x890500000000	            mov dword [0x0400a6ef], eax 	     13423	i386-dis.c	FUNCTION_10	IF_35
0x400a6ef	          0x83e207	                              and edx, 7	     13422	i386-dis.c	FUNCTION_10	IF_35
0x400a6f2	    0x891500000000	            mov dword [0x0400a6f8], edx 	     13422	i386-dis.c	FUNCTION_10	IF_35
0x400a6f8	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_104	CALL_6
0x400a6fd	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_104	CALL_6
0x400a6ff	      0xb905000000	                              mov ecx, 5	        90	string3.h	FUNCTION_104	CALL_6
0x400a704	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_104	CALL_6
0x400a707	    0xc60500000000	                mov byte [0x0400a70e], 0	     13426	i386-dis.c	FUNCTION_10
0x400a70e	    0xc60500000000	                mov byte [0x0400a715], 0	     13427	i386-dis.c	FUNCTION_10
0x400a715	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_104	CALL_6
0x400a718	    0xc60500000000	                mov byte [0x0400a71f], 0	     13428	i386-dis.c	FUNCTION_10
0x400a71f	    0xc70700000000	                      mov dword [rdi], 0	        90	string3.h	FUNCTION_104	CALL_6
0x400a725	        0x488b7d00	                    mov rdi, qword [rbp]	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400a729	          0x4885ff	                           test rdi, rdi	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400a72c	     0xf8468070000	                            je 0x400ae9a	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400a732	          0x4489ee	                           mov esi, r13d	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x400a735	      0xe8c65affff	                          call sym.putop	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x400a73a	            0x85c0	                           test eax, eax	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x400a73c	     0xf8430150000	                            je 0x400bc72	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x400a742	    0x8b3d00000000	            mov edi, dword [0x0400a748] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400a748	            0x85ff	                           test edi, edi	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400a74a	            0x7512	                           jne 0x400a75e	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400a74c	    0x8b0500000000	            mov eax, dword [0x0400a752] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400a752	    0x390500000000	            cmp dword [0x0400a758], eax 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400a758	     0xf8495150000	                            je 0x400bcf3	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400a75e	    0x8b0500000000	            mov eax, dword [0x0400a764] 	     13471	i386-dis.c	FUNCTION_10	IF_43
0x400a764	      0xa9f8010000	                         test eax, 0x1f8	     13471	i386-dis.c	FUNCTION_10	IF_43
0x400a769	            0x7420	                            je 0x400a78b	     13471	i386-dis.c	FUNCTION_10	IF_43
0x400a76b	    0x8b1500000000	            mov edx, dword [0x0400a771] 	     13473	i386-dis.c	FUNCTION_10	IF_43
0x400a771	    0x851500000000	           test dword [0x0400a777], edx 	     13473	i386-dis.c	FUNCTION_10	IF_43
0x400a777	            0x7412	                            je 0x400a78b	     13473	i386-dis.c	FUNCTION_10	IF_43
0x400a779	    0x486315000000	         movsxd rdx, dword [0x0400a780] 	     13474	i386-dis.c	FUNCTION_10	IF_43
0x400a780	    0xc70495000000	                    mov dword [rdx*4], 0	     13474	i386-dis.c	FUNCTION_10	IF_43
0x400a78b	          0xf6c404	                              test ah, 4	     13477	i386-dis.c	FUNCTION_10	IF_44
0x400a78e	            0x741b	                            je 0x400a7ab	     13477	i386-dis.c	FUNCTION_10	IF_44
0x400a790	    0xf60500000000	               test byte [0x0400a797], 4	     13478	i386-dis.c	FUNCTION_10	IF_44
0x400a797	            0x7412	                            je 0x400a7ab	     13478	i386-dis.c	FUNCTION_10	IF_44
0x400a799	    0x486315000000	         movsxd rdx, dword [0x0400a7a0] 	     13479	i386-dis.c	FUNCTION_10	IF_44
0x400a7a0	    0xc70495000000	                    mov dword [rdx*4], 0	     13479	i386-dis.c	FUNCTION_10	IF_44
0x400a7ab	          0xf6c402	                              test ah, 2	     13482	i386-dis.c	FUNCTION_10	IF_45
0x400a7ae	            0x741b	                            je 0x400a7cb	     13482	i386-dis.c	FUNCTION_10	IF_45
0x400a7b0	    0xf60500000000	               test byte [0x0400a7b7], 2	     13483	i386-dis.c	FUNCTION_10	IF_45
0x400a7b7	            0x7412	                            je 0x400a7cb	     13483	i386-dis.c	FUNCTION_10	IF_45
0x400a7b9	    0x486305000000	         movsxd rax, dword [0x0400a7c0] 	     13484	i386-dis.c	FUNCTION_10	IF_45
0x400a7c0	    0xc70485000000	                    mov dword [rax*4], 0	     13484	i386-dis.c	FUNCTION_10	IF_45
0x400a7cb	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400a7d0	    0x41bc00000000	                             mov r12d, 0	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400a7d6	    0x41be00000000	                             mov r14d, 0	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400a7dc	          0x4531ed	                          xor r13d, r13d	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400a7df	      0x48896c2420	             mov qword [rsp + 0x20], rbp	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400a7e4	         0xf1f4000	                         nop dword [rax]	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400a7e8	        0x418b3c24	                    mov edi, dword [r12]	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a7ec	            0x85ff	                           test edi, edi	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a7ee	            0x7431	                            je 0x400a821	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a7f0	            0x89de	                            mov esi, ebx	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x400a7f2	      0xe84958ffff	                    call sym.prefix_name	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x400a7f7	          0x4885c0	                           test rax, rax	     13493	i386-dis.c	FUNCTION_10	FOR_6	IF_46	IF_47
0x400a7fa	          0x4889c5	                            mov rbp, rax	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x400a7fd	     0xf8414040000	                            je 0x400ac17	     13493	i386-dis.c	FUNCTION_10	FOR_6	IF_46	IF_47
0x400a803	          0x4889c7	                            mov rdi, rax	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x400a806	      0xe800000000	                          call 0x400a80b	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x400a80b	        0x498b7f08	                mov rdi, qword [r15 + 8]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a80f	      0x458d6c0501	               lea r13d, [r13 + rax + 1]	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x400a814	          0x4889ea	                            mov rdx, rbp	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a817	      0xbe00000000	                              mov esi, 0	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a81c	            0x31c0	                            xor eax, eax	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a81e	          0x41ff17	                        call qword [r15]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a821	        0x4983c404	                              add r12, 4	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x400a825	          0x4d39e6	                            cmp r14, r12	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x400a828	            0x75be	                           jne 0x400a7e8	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x400a82a	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x400a82f	    0x817d58030200	          cmp dword [rbp + 0x58], 0x203 	     13505	i386-dis.c	FUNCTION_10	IF_48
0x400a836	     0xf85f9030000	                           jne 0x400ac35	     13505	i386-dis.c	FUNCTION_10	IF_48
0x400a83c	    0x4881fd000000	                              cmp rbp, 0	     13505	i386-dis.c	FUNCTION_10	IF_48
0x400a843	     0xf84ec030000	                            je 0x400ac35	     13505	i386-dis.c	FUNCTION_10	IF_48
0x400a849	    0x8b0500000000	            mov eax, dword [0x0400a84f] 	     13507	i386-dis.c	FUNCTION_10	IF_48
0x400a84f	            0xa803	                              test al, 3	     13506	i386-dis.c	FUNCTION_10	IF_48
0x400a851	     0xf84c5030000	                            je 0x400ac1c	     13506	i386-dis.c	FUNCTION_10	IF_48
0x400a857	    0xf60500000000	               test byte [0x0400a85e], 3	     13508	i386-dis.c	FUNCTION_10	IF_48
0x400a85e	     0xf85b8030000	                           jne 0x400ac1c	     13508	i386-dis.c	FUNCTION_10	IF_48
0x400a864	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x400a869	      0xbe00000000	                              mov esi, 0	     13515	i386-dis.c	FUNCTION_10	IF_48
0x400a86e	            0x31c0	                            xor eax, eax	     13515	i386-dis.c	FUNCTION_10	IF_48
0x400a870	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x400a874	            0xff13	                        call qword [rbx]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x400a876	    0x8b1d00000000	            mov ebx, dword [0x0400a87c] 	     13516	i386-dis.c	FUNCTION_10	IF_48
0x400a87c	    0x488d84243801	                  lea rax, [rsp + 0x138]	     13516	i386-dis.c	FUNCTION_10	IF_48
0x400a884	            0x29c3	                            sub ebx, eax	     13516	i386-dis.c	FUNCTION_10	IF_48
0x400a886	            0x89d8	                            mov eax, ebx	     13516	i386-dis.c	FUNCTION_10	IF_48
0x400a888	      0xe936f9ffff	                           jmp 0x400a1c3	     13516	i386-dis.c	FUNCTION_10	IF_48
0x400a88d	           0xf1f00	                         nop dword [rax]	     13516	i386-dis.c	FUNCTION_10	IF_48
0x400a890	            0x3c3e	                            cmp al, 0x3e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a892	     0xf84e8000000	                            je 0x400a980	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a898	     0xf826afdffff	                            jb 0x400a608	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a89e	          0x8d48c0	                   lea ecx, [rax - 0x40]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a8a1	          0x80f90f	                             cmp cl, 0xf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a8a4	     0xf875efdffff	                            ja 0x400a608	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a8aa	    0x833d00000000	               cmp dword [0x0400a8b1], 2	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x400a8b1	     0xf8551fdffff	                           jne 0x400a608	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x400a8b7	    0x8b0d00000000	            mov ecx, dword [0x0400a8bd] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a8bd	           0xfb6f0	                           movzx esi, al	     12462	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x400a8c0	    0x44892d000000	           mov dword [0x0400a8c7], r13d 	     12465	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a8c7	            0x85c9	                           test ecx, ecx	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a8c9	     0xf84b1fcffff	                            je 0x400a580	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a8cf	      0xe9ecfbffff	                           jmp 0x400a4c0	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a8d4	         0xf1f4000	                         nop dword [rax]	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400a8d8	      0xbf00000000	                              mov edi, 0	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x400a8dd	      0xb903000000	                              mov ecx, 3	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x400a8e2	          0x4889c6	                            mov rsi, rax	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x400a8e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x400a8e7	     0xf85e8010000	                           jne 0x400aad5	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x400a8ed	        0x488d7003	                      lea rsi, [rax + 3]	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x400a8f1	    0xc60500000000	                mov byte [0x0400a8f8], 0	     13221	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11
0x400a8f8	      0xbf00000000	                              mov edi, 0	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x400a8fd	      0xb909000000	                              mov ecx, 9	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x400a902	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x400a904	     0xf8568f6ffff	                           jne 0x4009f72	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x400a90a	    0xc60500000000	                mov byte [0x0400a911], 0	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x400a911	      0xe95cf6ffff	                           jmp 0x4009f72	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x400a916	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x400a920	    0xc70500000000	               mov dword [0x0400a92a], 0	     13183	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x400a92a	    0xc78424580100	              mov dword [rsp + 0x158], 0	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x400a935	      0xe904f6ffff	                           jmp 0x4009f3e	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x400a93a	    0x660f1f440000	                    nop word [rax + rax]	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x400a940	    0x830d00000000	            or dword [0x0400a947], 0x40 	     12495	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a947	    0x44892d000000	           mov dword [0x0400a94e], r13d 	     12496	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a94e	    0xc70500000000	           mov dword [0x0400a958], 0x40 	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a958	      0xe913fcffff	                           jmp 0x400a570	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a95d	           0xf1f00	                         nop dword [rax]	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a960	    0x810d00000000	            or dword [0x0400a96a], 0x100	     12505	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a96a	    0x44892d000000	           mov dword [0x0400a971], r13d 	     12506	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a971	    0xc70500000000	          mov dword [0x0400a97b], 0x100 	     12507	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a97b	      0xe9f0fbffff	                           jmp 0x400a570	     12507	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a980	    0x830d00000000	             or dword [0x0400a987], 0x20	     12490	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a987	    0x44892d000000	           mov dword [0x0400a98e], r13d 	     12491	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a98e	    0xc70500000000	           mov dword [0x0400a998], 0x20 	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a998	      0xe9d3fbffff	                           jmp 0x400a570	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a99d	           0xf1f00	                         nop dword [rax]	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a9a0	    0x830d00000000	                or dword [0x0400a9a7], 1	     12468	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a9a7	    0x44892d000000	           mov dword [0x0400a9ae], r13d 	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a9ae	      0xe9bdfbffff	                           jmp 0x400a570	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a9b3	       0xf1f440000	                   nop dword [rax + rax]	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400a9b8	          0x4c89e2	                            mov rdx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400a9bb	      0x4c89442418	              mov qword [rsp + 0x18], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400a9c0	          0x4c89cf	                             mov rdi, r9	       206	i386-dis.c	FUNCTION_1	IF_1
0x400a9c3	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400a9c6	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       206	i386-dis.c	FUNCTION_1	IF_1
0x400a9cb	          0x4c89f9	                            mov rcx, r15	       206	i386-dis.c	FUNCTION_1	IF_1
0x400a9ce	        0x41ff5770	                 call qword [r15 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400a9d2	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400a9d4	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400a9d9	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400a9de	     0xf856b1b0000	                           jne 0x400c54f	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400a9e4	    0x488b15000000	            mov rdx, qword [0x0400a9eb] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400a9eb	        0x4c896500	                    mov qword [rbp], r12	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400a9ef	           0xfb602	                   movzx eax, byte [rdx]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a9f2	            0x3c64	                            cmp al, 0x64	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a9f4	     0xf857dfaffff	                           jne 0x400a477	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400a9fa	    0x810d00000000	             or dword [0x0400aa04], 0x80	     12500	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa04	    0x44892d000000	           mov dword [0x0400aa0b], r13d 	     12501	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa0b	    0xc70500000000	           mov dword [0x0400aa15], 0x80 	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa15	      0xe956fbffff	                           jmp 0x400a570	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa1a	    0x660f1f440000	                    nop word [rax + rax]	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa20	    0x830d00000000	                or dword [0x0400aa27], 2	     12472	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa27	    0x44892d000000	           mov dword [0x0400aa2e], r13d 	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa2e	      0xe93dfbffff	                           jmp 0x400a570	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa33	       0xf1f440000	                   nop dword [rax + rax]	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa38	    0x810d00000000	            or dword [0x0400aa42], 0x200	     12510	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa42	    0x44892d000000	           mov dword [0x0400aa49], r13d 	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa49	      0xe922fbffff	                           jmp 0x400a570	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa4e	            0x6690	                                     nop	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa50	    0x8b0500000000	            mov eax, dword [0x0400aa56] 	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400aa56	    0x44892d000000	           mov dword [0x0400aa5d], r13d 	     12521	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa5d	            0x85c0	                           test eax, eax	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400aa5f	     0xf8592170000	                           jne 0x400c1f7	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400aa65	    0x448b25000000	           mov r12d, dword [0x0400aa6c] 	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400aa6c	          0x4585e4	                         test r12d, r12d	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400aa6f	     0xf8560170000	                           jne 0x400c1d5	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400aa75	    0xc70500000000	          mov dword [0x0400aa7f], 0x800 	     12531	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400aa7f	            0x31f6	                            xor esi, esi	     12441	i386-dis.c	FUNCTION_2	WHILE_1
0x400aa81	      0xe908fbffff	                           jmp 0x400a58e	     12441	i386-dis.c	FUNCTION_2	WHILE_1
0x400aa86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12441	i386-dis.c	FUNCTION_2	WHILE_1
0x400aa90	    0x830d00000000	             or dword [0x0400aa97], 0x10	     12485	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa97	    0x44892d000000	           mov dword [0x0400aa9e], r13d 	     12486	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aa9e	    0xc70500000000	           mov dword [0x0400aaa8], 0x10 	     12487	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aaa8	      0xe9c3faffff	                           jmp 0x400a570	     12487	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aaad	    0x830d00000000	                or dword [0x0400aab4], 4	     12476	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aab4	    0x44892d000000	           mov dword [0x0400aabb], r13d 	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aabb	      0xe9b0faffff	                           jmp 0x400a570	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400aac0	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400aac4	          0x4489fa	                           mov edx, r15d	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400aac7	      0xbe00000000	                              mov esi, 0	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400aacc	            0x31c0	                            xor eax, eax	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400aace	            0xff13	                        call qword [rbx]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400aad0	      0xe9e9f6ffff	                           jmp 0x400a1be	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400aad5	      0xbf00000000	                              mov edi, 0	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x400aada	      0xb904000000	                              mov ecx, 4	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x400aadf	          0x4889c6	                            mov rsi, rax	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x400aae2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x400aae4	            0x7541	                           jne 0x400ab27	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x400aae6	    0x833d00000000	               cmp dword [0x0400aaed], 2	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x400aaed	         0xfb65004	               movzx edx, byte [rax + 4]	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400aaf1	     0xf84890d0000	                            je 0x400b880	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x400aaf7	          0x80fa31	                            cmp dl, 0x31	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x400aafa	     0xf84f30e0000	                            je 0x400b9f3	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x400ab00	          0x80fa33	                            cmp dl, 0x33	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x400ab03	     0xf8569f4ffff	                           jne 0x4009f72	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x400ab09	        0x80780532	                cmp byte [rax + 5], 0x32	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x400ab0d	     0xf855ff4ffff	                           jne 0x4009f72	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x400ab13	    0x838c24580100	               or dword [rsp + 0x158], 2	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400ab1b	      0xe952f4ffff	                           jmp 0x4009f72	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400ab20	            0x89e8	                            mov eax, ebp	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400ab22	      0xe99cf6ffff	                           jmp 0x400a1c3	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400ab27	      0xbf00000000	                              mov edi, 0	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x400ab2c	      0xb904000000	                              mov ecx, 4	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x400ab31	          0x4889c6	                            mov rsi, rax	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x400ab34	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x400ab36	     0xf853c030000	                           jne 0x400ae78	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x400ab3c	         0xfb65004	               movzx edx, byte [rax + 4]	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x400ab40	          0x80fa31	                            cmp dl, 0x31	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x400ab43	     0xf8412110000	                            je 0x400bc5b	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x400ab49	          0x80fa33	                            cmp dl, 0x33	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x400ab4c	     0xf8520f4ffff	                           jne 0x4009f72	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x400ab52	        0x80780532	                cmp byte [rax + 5], 0x32	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x400ab56	     0xf8516f4ffff	                           jne 0x4009f72	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x400ab5c	    0x838c24580100	               or dword [rsp + 0x158], 1	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x400ab64	      0xe909f4ffff	                           jmp 0x4009f72	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x400ab69	     0xf1f80000000	                         nop dword [rax]	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x400ab70	          0x8d7028	                   lea esi, [rax + 0x28]	     13379	i386-dis.c	FUNCTION_10	IF_31
0x400ab73	        0x4080fe07	                              cmp sil, 7	     13379	i386-dis.c	FUNCTION_10	IF_31
0x400ab77	     0xf86ecfaffff	                           jbe 0x400a669	     13379	i386-dis.c	FUNCTION_10	IF_31
0x400ab7d	    0x8b0d00000000	            mov ecx, dword [0x0400ab83] 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400ab83	            0x85c9	                           test ecx, ecx	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400ab85	     0xf8ecf150000	                           jle 0x400c15a	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400ab8b	    0x8b3d00000000	            mov edi, dword [0x0400ab91] 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400ab91	            0x85ff	                           test edi, edi	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400ab93	     0xf84c1150000	                            je 0x400c15a	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400ab99	    0x41bc00000000	                             mov r12d, 0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400ab9f	            0x31ed	                            xor ebp, ebp	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400aba1	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400aba6	            0xeb15	                           jmp 0x400abbd	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400aba8	     0xf1f84000000	                   nop dword [rax + rax]	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abb0	        0x4983c404	                              add r12, 4	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abb4	      0x418b7c24fc	                mov edi, dword [r12 - 4]	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abb9	            0x85ff	                           test edi, edi	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abbb	            0x7424	                            je 0x400abe1	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abbd	            0x89de	                            mov esi, ebx	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abbf	          0x83c501	                              add ebp, 1	     13383	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abc2	      0xe87954ffff	                    call sym.prefix_name	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abc7	        0x498b7d08	                mov rdi, qword [r13 + 8]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abcb	          0x4889c2	                            mov rdx, rax	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abce	      0xbe00000000	                              mov esi, 0	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abd3	            0x31c0	                            xor eax, eax	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abd5	        0x41ff5500	                        call qword [r13]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abd9	    0x392d00000000	            cmp dword [0x0400abdf], ebp 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abdf	            0x7fcf	                            jg 0x400abb0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400abe1	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x400abe6	      0xbe00000000	                              mov esi, 0	     13386	i386-dis.c	FUNCTION_10	IF_31
0x400abeb	            0x31c0	                            xor eax, eax	     13386	i386-dis.c	FUNCTION_10	IF_31
0x400abed	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x400abf1	            0xff13	                        call qword [rbx]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x400abf3	          0x8d4501	                      lea eax, [rbp + 1]	     13387	i386-dis.c	FUNCTION_10	IF_31
0x400abf6	      0xe9c8f5ffff	                           jmp 0x400a1c3	     13387	i386-dis.c	FUNCTION_10	IF_31
0x400abfb	      0xb8ffffffff	                     mov eax, 0xffffffff	     13355	i386-dis.c	FUNCTION_10	IF_27
0x400ac00	      0xe9bef5ffff	                           jmp 0x400a1c3	     13355	i386-dis.c	FUNCTION_10	IF_27
0x400ac05	    0x833d00000000	               cmp dword [0x0400ac0c], 3	     13920	i386-dis.c	FUNCTION_13	IF_1
0x400ac0c	      0x410fb656ff	               movzx edx, byte [r14 - 1]	     13918	i386-dis.c	FUNCTION_13
0x400ac11	     0xf853c160000	                           jne 0x400c253	     13920	i386-dis.c	FUNCTION_13	IF_1
0x400ac17	      0xe800000000	                          call 0x400ac1c	     13141	i386-dis.c	FOR_1	FUNCTION_8	CALL_5
0x400ac1c	      0x2503020000	                          and eax, 0x203	     13510	i386-dis.c	FUNCTION_10	IF_48
0x400ac21	      0x3d00020000	                          cmp eax, 0x200	     13510	i386-dis.c	FUNCTION_10	IF_48
0x400ac26	            0x750d	                           jne 0x400ac35	     13510	i386-dis.c	FUNCTION_10	IF_48
0x400ac28	    0xf60500000000	               test byte [0x0400ac2f], 2	     13513	i386-dis.c	FUNCTION_10	IF_48
0x400ac2f	     0xf842ffcffff	                            je 0x400a864	     13513	i386-dis.c	FUNCTION_10	IF_48
0x400ac35	    0x488b05000000	            mov rax, qword [0x0400ac3c] 	     13520	i386-dis.c	FUNCTION_10	IF_49
0x400ac3c	    0x482b05000000	             sub rax, qword [0x0400ac43]	     13520	i386-dis.c	FUNCTION_10	IF_49
0x400ac43	        0x4883f80f	                            cmp rax, 0xf	     13520	i386-dis.c	FUNCTION_10	IF_49
0x400ac47	     0xf8fbd0d0000	                            jg 0x400ba0a	     13520	i386-dis.c	FUNCTION_10	IF_49
0x400ac4d	    0x488b05000000	            mov rax, qword [0x0400ac54] 	     13526	i386-dis.c	FUNCTION_10
0x400ac54	      0xba00000000	                              mov edx, 0	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac59	    0x488905000000	            mov qword [0x0400ac60], rax 	     13526	i386-dis.c	FUNCTION_10
0x400ac60	            0x8b32	                    mov esi, dword [rdx]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac62	        0x4883c204	                              add rdx, 4	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac66	    0x8d8efffefefe	              lea ecx, [rsi - 0x1010101]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac6c	            0xf7d6	                                 not esi	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac6e	            0x21f1	                            and ecx, esi	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac70	    0x81e180808080	                     and ecx, 0x80808080	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac76	            0x74e8	                            je 0x400ac60	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac78	            0x89ce	                            mov esi, ecx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac7a	          0xc1ee10	                           shr esi, 0x10	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac7d	    0xf7c180800000	                        test ecx, 0x8080	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac83	           0xf44ce	                          cmove ecx, esi	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac86	        0x488d7202	                      lea rsi, [rdx + 2]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac8a	            0x89cb	                            mov ebx, ecx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac8c	        0x480f44d6	                          cmove rdx, rsi	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac90	              0xcb	                              add bl, cl	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac92	    0x4881da000000	                              sbb rdx, 0	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac99	          0x4401ea	                           add edx, r13d	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac9c	          0x83fa05	                              cmp edx, 5	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ac9f	     0xf8ffa150000	                            jg 0x400c29f	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400aca5	      0xb905000000	                              mov ecx, 5	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400acaa	            0x89cb	                            mov ebx, ecx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400acac	            0x29d3	                            sub ebx, edx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400acae	      0x488d541801	                lea rdx, [rax + rbx + 1]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400acb3	       0xf1f440000	                   nop dword [rax + rax]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400acb8	      0xbe20000000	                           mov esi, 0x20	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400acbd	        0x4883c001	                              add rax, 1	       117	string3.h	FUNCTION_108	CALL_3
0x400acc1	        0x668970ff	                  mov word [rax - 1], si	       117	string3.h	FUNCTION_108	CALL_3
0x400acc5	          0x4839c2	                            cmp rdx, rax	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400acc8	            0x75ee	                           jne 0x400acb8	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400acca	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13530	i386-dis.c	FUNCTION_10
0x400accf	      0xb920000000	                           mov ecx, 0x20	     13530	i386-dis.c	FUNCTION_10
0x400acd4	        0x4883c201	                              add rdx, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400acd8	        0x66894aff	                  mov word [rdx - 1], cx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400acdc	            0x31c0	                            xor eax, eax	     13530	i386-dis.c	FUNCTION_10
0x400acde	    0x488915000000	            mov qword [0x0400ace5], rdx 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400ace5	      0xbe00000000	                              mov esi, 0	     13530	i386-dis.c	FUNCTION_10
0x400acea	      0xba00000000	                              mov edx, 0	     13530	i386-dis.c	FUNCTION_10
0x400acef	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13530	i386-dis.c	FUNCTION_10
0x400acf3	            0xff13	                        call qword [rbx]	     13530	i386-dis.c	FUNCTION_10
0x400acf5	    0x803d00000000	                cmp byte [0x0400acfc], 0	     13534	i386-dis.c	FUNCTION_10	IF_50
0x400acfc	     0xf859f0b0000	                           jne 0x400b8a1	     13534	i386-dis.c	FUNCTION_10	IF_50
0x400ad02	    0x8b0500000000	            mov eax, dword [0x0400ad08] 	     13534	i386-dis.c	FUNCTION_10	IF_50
0x400ad08	            0x85c0	                           test eax, eax	     13534	i386-dis.c	FUNCTION_10	IF_50
0x400ad0a	     0xf8573100000	                           jne 0x400bd83	     13534	i386-dis.c	FUNCTION_10	IF_50
0x400ad10	    0x48c784242001	              mov qword [rsp + 0x120], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x400ad1c	    0x48c784241801	              mov qword [rsp + 0x118], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x400ad28	    0x48c784241001	              mov qword [rsp + 0x110], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x400ad34	    0x48c784240801	              mov qword [rsp + 0x108], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x400ad40	    0x48c784240001	              mov qword [rsp + 0x100], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x400ad4c	      0x488b6c2408	                mov rbp, qword [rsp + 8]	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x400ad51	            0x31db	                            xor ebx, ebx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ad53	            0x31c0	                            xor eax, eax	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400ad55	    0x488b945c0001	   mov rdx, qword [rsp + rbx*2 + 0x100] 	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x400ad5d	          0x803a00	                       cmp byte [rdx], 0	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x400ad60	            0x7436	                            je 0x400ad98	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x400ad62	            0x85c0	                           test eax, eax	     13568	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x400ad64	     0xf85980a0000	                           jne 0x400b802	     13568	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x400ad6a	    0x486383000000	                 movsxd rax, dword [rbx]	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400ad71	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400ad74	            0x740f	                            je 0x400ad85	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400ad76	    0x4883bc1b0000	                cmp qword [rbx + rbx], 0	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400ad7f	     0xf84a00a0000	                            je 0x400b825	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400ad85	        0x488b7d08	                mov rdi, qword [rbp + 8]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x400ad89	      0xbe00000000	                              mov esi, 0	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x400ad8e	            0x31c0	                            xor eax, eax	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x400ad90	          0xff5500	                        call qword [rbp]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x400ad93	      0xb801000000	                              mov eax, 1	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x400ad98	        0x4883c304	                              add rbx, 4	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x400ad9c	        0x4883fb14	                           cmp rbx, 0x14	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x400ada0	            0x75b3	                           jne 0x400ad55	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x400ada2	    0x833d00000000	cmp dword [0x0400ada9], 0xffffffffffffffff	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400ada9	            0x740e	                            je 0x400adb9	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adab	    0x48833d000000	               cmp qword [0x0400adb3], 0	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adb3	     0xf8587160000	                           jne 0x400c440	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adb9	    0x833d00000000	cmp dword [0x0400adc0], 0xffffffffffffffff	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adc0	            0x740e	                            je 0x400add0	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adc2	    0x48833d000000	               cmp qword [0x0400adca], 0	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adca	     0xf8597170000	                           jne 0x400c567	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400add0	    0x833d00000000	cmp dword [0x0400add7], 0xffffffffffffffff	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400add7	            0x740e	                            je 0x400ade7	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400add9	    0x48833d000000	               cmp qword [0x0400ade1], 0	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400ade1	     0xf8576170000	                           jne 0x400c55d	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400ade7	    0x833d00000000	cmp dword [0x0400adee], 0xffffffffffffffff	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adee	            0x740e	                            je 0x400adfe	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adf0	    0x48833d000000	               cmp qword [0x0400adf8], 0	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adf8	     0xf858b130000	                           jne 0x400c189	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400adfe	    0x833d00000000	cmp dword [0x0400ae05], 0xffffffffffffffff	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400ae05	            0x7413	                            je 0x400ae1a	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400ae07	    0x48833d000000	               cmp qword [0x0400ae0f], 0	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400ae0f	      0xbb04000000	                              mov ebx, 4	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400ae14	     0xf8574130000	                           jne 0x400c18e	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400ae1a	    0x8b1d00000000	            mov ebx, dword [0x0400ae20] 	     13585	i386-dis.c	FUNCTION_10
0x400ae20	    0x488d84243801	                  lea rax, [rsp + 0x138]	     13585	i386-dis.c	FUNCTION_10
0x400ae28	            0x29c3	                            sub ebx, eax	     13585	i386-dis.c	FUNCTION_10
0x400ae2a	            0x89d8	                            mov eax, ebx	     13585	i386-dis.c	FUNCTION_10
0x400ae2c	      0xe992f3ffff	                           jmp 0x400a1c3	     13585	i386-dis.c	FUNCTION_10
0x400ae31	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x400ae35	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400ae39	          0x4989f5	                            mov r13, rsi	       203	i386-dis.c	FUNCTION_1
0x400ae3c	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400ae41	          0x4d29f5	                            sub r13, r14	       203	i386-dis.c	FUNCTION_1
0x400ae44	        0x4c036d20	             add r13, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400ae48	          0x4939d7	                            cmp r15, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x400ae4b	     0xf86aa0c0000	                           jbe 0x400bafb	       205	i386-dis.c	FUNCTION_1	IF_1
0x400ae51	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400ae54	            0x7510	                           jne 0x400ae66	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400ae56	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400ae5b	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400ae5e	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400ae60	          0x4889da	                            mov rdx, rbx	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400ae63	          0xff5378	                 call qword [rbx + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400ae66	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400ae6a	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400ae6f	      0xe800000000	                          call 0x400ae74	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400ae74	         0xf1f4000	                         nop dword [rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400ae78	      0xbf00000000	                              mov edi, 0	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x400ae7d	      0xb906000000	                              mov ecx, 6	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x400ae82	          0x4889c6	                            mov rsi, rax	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x400ae85	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x400ae87	     0xf85e5f0ffff	                           jne 0x4009f72	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x400ae8d	    0x838c24580100	               or dword [rsp + 0x158], 4	     13250	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22
0x400ae95	      0xe9d8f0ffff	                           jmp 0x4009f72	     13250	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22
0x400ae9a	        0x837d1001	               cmp dword [rbp + 0x10], 1	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400ae9e	     0xf84b1110000	                            je 0x400c055	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400aea4	      0x4489642438	            mov dword [rsp + 0x38], r12d	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400aea9	      0x4c8b642408	                mov r12, qword [rsp + 8]	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400aeae	            0x6690	                                     nop	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400aeb0	        0x837d100d	            cmp dword [rbp + 0x10], 0xd 	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x400aeb4	     0xf875dfdffff	                            ja 0x400ac17	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x400aeba	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x400aebd	    0xff24c5000000	                       jmp qword [rax*8]	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x400aec4	      0xbf00000000	                              mov edi, 0	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400aec9	      0xbd00000000	                              mov ebp, 0	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400aece	      0xe95ff8ffff	                           jmp 0x400a732	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400aed3	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400aed8	    0x4c8b35000000	            mov r14, qword [0x0400aedf] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400aedf	    0xc70500000000	               mov dword [0x0400aee9], 0	     13033	i386-dis.c	FOR_1	FUNCTION_8
0x400aee9	    0xc70500000000	               mov dword [0x0400aef3], 1	     13035	i386-dis.c	FOR_1	FUNCTION_8
0x400aef3	        0x488b7500	                    mov rsi, qword [rbp]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400aef7	        0x4d8d7e04	                      lea r15, [r14 + 4]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400aefb	          0x4939f7	                            cmp r15, rsi	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400aefe	     0xf87e60c0000	                            ja 0x400bbea	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400af04	        0x410fb616	                   movzx edx, byte [r14]	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400af08	    0x8b0500000000	            mov eax, dword [0x0400af0e] 	     13038	i386-dis.c	FOR_1	FUNCTION_8
0x400af0e	    0x890500000000	            mov dword [0x0400af14], eax 	     13038	i386-dis.c	FOR_1	FUNCTION_8
0x400af14	            0x89d0	                            mov eax, edx	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400af16	          0x83e210	                           and edx, 0x10	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x400af19	           0xfb6d2	                           movzx edx, dl	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x400af1c	          0xc0e805	                               shr al, 5	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400af1f	    0x891500000000	            mov dword [0x0400af25], edx 	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x400af25	        0x410fb616	                   movzx edx, byte [r14]	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af29	            0xf7d0	                                 not eax	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400af2b	          0x83e007	                              and eax, 7	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400af2e	    0x890500000000	            mov dword [0x0400af34], eax 	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400af34	          0x83e20f	                            and edx, 0xf	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af37	          0x80fa02	                               cmp dl, 2	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af3a	     0xf84180e0000	                            je 0x400bd58	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af40	          0x80fa03	                               cmp dl, 3	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af43	     0xf84b90e0000	                            je 0x400be02	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af49	          0x80fa01	                               cmp dl, 1	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af4c	     0xf8572ffffff	                           jne 0x400aec4	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af52	          0x4531ff	                          xor r15d, r15d	     13047	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400af55	        0x498d5601	                      lea rdx, [r14 + 1]	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x400af59	    0x488915000000	            mov qword [0x0400af60], rdx 	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x400af60	      0x410fb65601	               movzx edx, byte [r14 + 1]	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x400af65	          0x83e280	                     and edx, 0xffffff80	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x400af68	           0xfb6ca	                           movzx ecx, dl	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x400af6b	            0x84d2	                             test dl, dl	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400af6d	    0x890d00000000	            mov dword [0x0400af73], ecx 	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x400af73	            0x7412	                            je 0x400af87	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400af75	    0x833d00000000	               cmp dword [0x0400af7c], 2	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400af7c	            0x7509	                           jne 0x400af87	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400af7e	          0x83c808	                               or eax, 8	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400af81	    0x890500000000	            mov dword [0x0400af87], eax 	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400af87	      0x410fb65601	               movzx edx, byte [r14 + 1]	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400af8c	          0xc0ea03	                               shr dl, 3	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400af8f	            0xf7d2	                                 not edx	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400af91	          0x83e20f	                            and edx, 0xf	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400af94	    0x891500000000	            mov dword [0x0400af9a], edx 	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400af9a	      0x410fb65601	               movzx edx, byte [r14 + 1]	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x400af9f	          0xf6c204	                              test dl, 4	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x400afa2	     0xf841cffffff	                            je 0x400aec4	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x400afa8	          0x83e203	                              and edx, 3	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400afab	          0x80fa02	                               cmp dl, 2	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400afae	     0xf84770e0000	                            je 0x400be2b	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400afb4	          0x80fa03	                               cmp dl, 3	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400afb7	     0xf842d0f0000	                            je 0x400beea	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400afbd	          0x80fa01	                               cmp dl, 1	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400afc0	            0x750a	                           jne 0x400afcc	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400afc2	    0xc70500000000	           mov dword [0x0400afcc], 0x66 	     13074	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400afcc	        0x498d5602	                      lea rdx, [r14 + 2]	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x400afd0	    0x488915000000	            mov qword [0x0400afd7], rdx 	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x400afd7	      0x410fb65602	               movzx edx, byte [r14 + 2]	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x400afdc	          0xc0ea05	                               shr dl, 5	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x400afdf	          0x83e203	                              and edx, 3	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x400afe2	    0x891500000000	            mov dword [0x0400afe8], edx 	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x400afe8	      0x410fb65602	               movzx edx, byte [r14 + 2]	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x400afed	          0xc0ea04	                               shr dl, 4	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x400aff0	          0x83e201	                              and edx, 1	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x400aff3	    0x891500000000	            mov dword [0x0400aff9], edx 	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x400aff9	      0x410fb65602	               movzx edx, byte [r14 + 2]	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x400affe	          0x83e208	                              and edx, 8	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x400b001	           0xfb6d2	                           movzx edx, dl	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x400b004	    0x891500000000	            mov dword [0x0400b00a], edx 	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x400b00a	      0x410fb65602	               movzx edx, byte [r14 + 2]	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x400b00f	          0x83e207	                              and edx, 7	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x400b012	    0x891500000000	            mov dword [0x0400b018], edx 	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x400b018	      0x410fb65602	               movzx edx, byte [r14 + 2]	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x400b01d	          0x83e280	                     and edx, 0xffffff80	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x400b020	    0x833d00000000	               cmp dword [0x0400b027], 2	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x400b027	           0xfb6d2	                           movzx edx, dl	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x400b02a	    0x891500000000	            mov dword [0x0400b030], edx 	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x400b030	            0x741d	                            je 0x400b04f	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x400b032	          0x83e0fe	                     and eax, 0xfffffffe	     13098	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x400b035	    0xc70500000000	               mov dword [0x0400b03f], 1	     13099	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x400b03f	    0xc70500000000	               mov dword [0x0400b049], 1	     13100	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x400b049	    0x890500000000	            mov dword [0x0400b04f], eax 	     13098	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x400b04f	      0x410fb65603	               movzx edx, byte [r14 + 3]	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x400b054	      0x4d8b4c2468	              mov r9, qword [r12 + 0x68]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400b059	        0x498d4604	                      lea rax, [r14 + 4]	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x400b05d	        0x4983c605	                              add r14, 5	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400b061	    0xc60500000000	                mov byte [0x0400b068], 1	     13103	i386-dis.c	FOR_1	FUNCTION_8
0x400b068	    0xc60500000000	                mov byte [0x0400b06f], 1	     13104	i386-dis.c	FOR_1	FUNCTION_8
0x400b06f	    0x488905000000	            mov qword [0x0400b076], rax 	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x400b076	    0x488905000000	            mov qword [0x0400b07d], rax 	     13108	i386-dis.c	FOR_1	FUNCTION_8
0x400b07d	          0x498b31	                     mov rsi, qword [r9]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400b080	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400b084	          0x4989d0	                             mov r8, rdx	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x400b087	          0x4963d7	                        movsxd rdx, r15d	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400b08a	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400b08e	        0x48c1e105	                              shl rcx, 5	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400b092	        0x48c1e20d	                            shl rdx, 0xd	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400b096	          0x4939f6	                            cmp r14, rsi	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400b099	    0x488dac110000	                    lea rbp, [rcx + rdx]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x400b0a1	     0xf87c50e0000	                            ja 0x400bf6c	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x400b0a7	           0xfb600	                   movzx eax, byte [rax]	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x400b0aa	            0x89c1	                            mov ecx, eax	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x400b0ac	          0xc0e906	                               shr cl, 6	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x400b0af	           0xfb6d1	                           movzx edx, cl	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x400b0b2	    0x891500000000	            mov dword [0x0400b0b8], edx 	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x400b0b8	            0x89c2	                            mov edx, eax	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x400b0ba	          0x83e007	                              and eax, 7	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x400b0bd	          0xc0ea03	                               shr dl, 3	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x400b0c0	    0x890500000000	            mov dword [0x0400b0c6], eax 	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x400b0c6	          0x83e207	                              and edx, 7	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x400b0c9	          0x80f903	                               cmp cl, 3	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x400b0cc	    0x891500000000	            mov dword [0x0400b0d2], edx 	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x400b0d2	     0xf84660b0000	                            je 0x400bc3e	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x400b0d8	    0x8b0500000000	            mov eax, dword [0x0400b0de] 	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b0de	          0x83f801	                              cmp eax, 1	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b0e1	     0xf84d90e0000	                            je 0x400bfc0	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b0e7	          0x83f802	                              cmp eax, 2	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b0ea	     0xf845c0b0000	                            je 0x400bc4c	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b0f0	            0x85c0	                           test eax, eax	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b0f2	     0xf85ccfdffff	                           jne 0x400aec4	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b0f8	    0xc70500000000	           mov dword [0x0400b102], 0x80 	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b102	        0x4b8d1440	                    lea rdx, [r8 + r8*2]	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b106	        0x4b8d047f	                  lea rax, [r15 + r15*2]	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b10a	        0x48c1e205	                              shl rdx, 5	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b10e	        0x48c1e00d	                            shl rax, 0xd	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b112	    0x488bbc020000	              mov rdi, qword [rdx + rax]	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b11a	    0x660f1f440000	                    nop word [rax + rax]	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400b120	          0x4885ff	                           test rdi, rdi	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x400b123	     0xf8487fdffff	                            je 0x400aeb0	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x400b129	      0xe904f6ffff	                           jmp 0x400a732	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x400b12e	            0x6690	                                     nop	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x400b130	    0x803d00000000	                cmp byte [0x0400b137], 0	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x400b137	     0xf84dafaffff	                            je 0x400ac17	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x400b13d	    0x8b1500000000	            mov edx, dword [0x0400b143] 	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b143	            0x31c0	                            xor eax, eax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b145	            0x85d2	                           test edx, edx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b147	           0xf95c0	                                setne al	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b14a	        0x488d1400	                    lea rdx, [rax + rax]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b14e	          0x4801d0	                            add rax, rdx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b151	        0x48c1e005	                              shl rax, 5	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b155	          0x4889c2	                            mov rdx, rax	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b158	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b15c	        0x488d0440	                  lea rax, [rax + rax*2]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b160	        0x48c1e006	                              shl rax, 6	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b164	          0x4801d0	                            add rax, rdx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b167	    0x488da8000000	                          lea rbp, [rax]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b16e	    0x488bb8000000	                    mov rdi, qword [rax]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b175	            0xeba9	                           jmp 0x400b120	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400b177	    0x803d00000000	                cmp byte [0x0400b17e], 0	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x400b17e	     0xf8493faffff	                            je 0x400ac17	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x400b184	    0x8b0500000000	            mov eax, dword [0x0400b18a] 	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400b18a	      0x3d80000000	                           cmp eax, 0x80	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400b18f	     0xf84000a0000	                            je 0x400bb95	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400b195	      0x3d00010000	                          cmp eax, 0x100	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400b19a	     0xf8577faffff	                           jne 0x400ac17	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400b1a0	      0xb801000000	                              mov eax, 1	     12845	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400b1a5	        0x488d1400	                    lea rdx, [rax + rax]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1a9	          0x4801d0	                            add rax, rdx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1ac	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1b0	        0x48c1e005	                              shl rax, 5	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1b4	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1b8	        0x48c1e206	                              shl rdx, 6	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1bc	          0x4801d0	                            add rax, rdx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1bf	    0x488da8000000	                          lea rbp, [rax]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1c6	    0x488bb8000000	                    mov rdi, qword [rax]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1cd	      0xe94effffff	                           jmp 0x400b120	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400b1d2	      0x4d8b7c2468	            mov r15, qword [r12 + 0x68] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400b1d7	    0x4c8b35000000	            mov r14, qword [0x0400b1de] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400b1de	          0x498b37	                    mov rsi, qword [r15]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400b1e1	        0x4d8d4602	                       lea r8, [r14 + 2]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400b1e5	          0x4939f0	                             cmp r8, rsi	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400b1e8	     0xf8782090000	                            ja 0x400bb70	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x400b1ee	    0x8b0500000000	            mov eax, dword [0x0400b1f4] 	     12988	i386-dis.c	FOR_1	FUNCTION_8
0x400b1f4	      0xba04000000	                              mov edx, 4	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400b1f9	    0x890500000000	            mov dword [0x0400b1ff], eax 	     12988	i386-dis.c	FOR_1	FUNCTION_8
0x400b1ff	        0x410fb606	                   movzx eax, byte [r14]	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400b203	            0x84c0	                             test al, al	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400b205	       0xf48542438	           cmovs edx, dword [rsp + 0x38]	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400b20a	          0xc0e803	                               shr al, 3	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400b20d	            0xf7d0	                                 not eax	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400b20f	          0x83e00f	                            and eax, 0xf	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400b212	    0x890500000000	            mov dword [0x0400b218], eax 	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400b218	        0x410fb606	                   movzx eax, byte [r14]	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400b21c	    0x891500000000	            mov dword [0x0400b222], edx 	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400b222	          0x83e004	                              and eax, 4	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400b225	            0x3c01	                               cmp al, 1	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400b227	            0x19c0	                            sbb eax, eax	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400b229	          0x83e080	                     and eax, 0xffffff80	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400b22c	       0x500010000	                          add eax, 0x100	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400b231	    0x890500000000	            mov dword [0x0400b237], eax 	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400b237	        0x410fb606	                   movzx eax, byte [r14]	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b23b	          0x83e003	                              and eax, 3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b23e	            0x3c02	                               cmp al, 2	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b240	     0xf84d60b0000	                            je 0x400be1c	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b246	            0x3c03	                               cmp al, 3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b248	     0xf84bf0b0000	                            je 0x400be0d	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b24e	            0x3c01	                               cmp al, 1	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b250	            0x750a	                           jne 0x400b25c	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b252	    0xc70500000000	           mov dword [0x0400b25c], 0x66 	     13000	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400b25c	      0x410fb65601	               movzx edx, byte [r14 + 1]	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400b261	        0x4c634d20	          movsxd r9, dword [rbp + 0x20] 	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400b265	        0x498d4602	                      lea rax, [r14 + 2]	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400b269	    0xc60500000000	                mov byte [0x0400b270], 1	     13009	i386-dis.c	FOR_1	FUNCTION_8
0x400b270	    0xc60500000000	                mov byte [0x0400b277], 1	     13010	i386-dis.c	FOR_1	FUNCTION_8
0x400b277	    0x488905000000	            mov qword [0x0400b27e], rax 	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400b27e	    0x488905000000	            mov qword [0x0400b285], rax 	     13014	i386-dis.c	FOR_1	FUNCTION_8
0x400b285	          0x4989d7	                            mov r15, rdx	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400b288	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400b28c	          0x4963d1	                         movsxd rdx, r9d	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400b28f	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400b293	        0x48c1e105	                              shl rcx, 5	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400b297	        0x48c1e20d	                            shl rdx, 0xd	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400b29b	        0x4183ff77	                          cmp r15d, 0x77	     13016	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b29f	    0x488dac110000	                    lea rbp, [rcx + rdx]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400b2a7	     0xf84330b0000	                            je 0x400bde0	     13016	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2ad	      0x4d8b442468	              mov r8, qword [r12 + 0x68]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2b2	        0x4983c603	                              add r14, 3	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2b6	          0x498b30	                     mov rsi, qword [r8]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2b9	          0x4939f6	                            cmp r14, rsi	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2bc	     0xf87870b0000	                            ja 0x400be49	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2c2	           0xfb600	                   movzx eax, byte [rax]	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2c5	            0x89c2	                            mov edx, eax	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2c7	          0xc0ea06	                               shr dl, 6	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2ca	           0xfb6d2	                           movzx edx, dl	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2cd	    0x891500000000	            mov dword [0x0400b2d3], edx 	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2d3	            0x89c2	                            mov edx, eax	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2d5	          0x83e007	                              and eax, 7	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2d8	          0xc0ea03	                               shr dl, 3	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2db	    0x890500000000	            mov dword [0x0400b2e1], eax 	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2e1	        0x4b8d0449	                    lea rax, [r9 + r9*2]	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2e5	          0x83e207	                              and edx, 7	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2e8	    0x891500000000	            mov dword [0x0400b2ee], edx 	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2ee	        0x4b8d147f	                  lea rdx, [r15 + r15*2]	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2f2	        0x48c1e00d	                            shl rax, 0xd	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2f6	        0x48c1e205	                              shl rdx, 5	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b2fa	    0x488bbc020000	              mov rdi, qword [rdx + rax]	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b302	      0xe919feffff	                           jmp 0x400b120	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400b307	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400b30c	    0x4c8b35000000	            mov r14, qword [0x0400b313] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400b313	        0x488b7500	                    mov rsi, qword [rbp]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400b317	        0x4d8d7e03	                      lea r15, [r14 + 3]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400b31b	          0x4939f7	                            cmp r15, rsi	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400b31e	     0xf8781070000	                            ja 0x400baa5	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400b324	        0x410fb616	                   movzx edx, byte [r14]	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400b328	    0x8b0500000000	            mov eax, dword [0x0400b32e] 	     12921	i386-dis.c	FOR_1	FUNCTION_8
0x400b32e	    0x890500000000	            mov dword [0x0400b334], eax 	     12921	i386-dis.c	FOR_1	FUNCTION_8
0x400b334	            0x89d0	                            mov eax, edx	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400b336	          0x83e21f	                           and edx, 0x1f	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b339	          0xc0e805	                               shr al, 5	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400b33c	            0xf7d0	                                 not eax	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400b33e	          0x83e007	                              and eax, 7	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400b341	          0x80fa02	                               cmp dl, 2	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b344	    0x890500000000	            mov dword [0x0400b34a], eax 	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400b34a	     0xf84230a0000	                            je 0x400bd73	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b350	          0x80fa03	                               cmp dl, 3	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b353	     0xf840a0a0000	                            je 0x400bd63	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b359	          0x80fa01	                               cmp dl, 1	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b35c	     0xf8562fbffff	                           jne 0x400aec4	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b362	            0x31d2	                            xor edx, edx	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b364	          0x4531ff	                          xor r15d, r15d	     12929	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400b367	        0x498d4e01	                      lea rcx, [r14 + 1]	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x400b36b	    0x48890d000000	            mov qword [0x0400b372], rcx 	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x400b372	      0x410fb64e01	               movzx ecx, byte [r14 + 1]	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x400b377	          0x83e180	                     and ecx, 0xffffff80	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x400b37a	    0x833d00000000	               cmp dword [0x0400b381], 2	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x400b381	           0xfb6f1	                           movzx esi, cl	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x400b384	    0x893500000000	            mov dword [0x0400b38a], esi 	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x400b38a	     0xf84c60b0000	                            je 0x400bf56	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x400b390	    0xc70500000000	               mov dword [0x0400b39a], 0	     12950	i386-dis.c	FOR_1	FUNCTION_8	ELSE_3
0x400b39a	      0x410fb64601	               movzx eax, byte [r14 + 1]	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x400b39f	          0xc0e803	                               shr al, 3	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x400b3a2	            0xf7d0	                                 not eax	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x400b3a4	          0x83e00f	                            and eax, 0xf	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x400b3a7	    0x890500000000	            mov dword [0x0400b3ad], eax 	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x400b3ad	      0x410fb64601	               movzx eax, byte [r14 + 1]	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400b3b2	          0x83e004	                              and eax, 4	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400b3b5	            0x3c01	                               cmp al, 1	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400b3b7	            0x19c0	                            sbb eax, eax	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400b3b9	          0x83e080	                     and eax, 0xffffff80	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400b3bc	       0x500010000	                          add eax, 0x100	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400b3c1	    0x890500000000	            mov dword [0x0400b3c7], eax 	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x400b3c7	      0x410fb64601	               movzx eax, byte [r14 + 1]	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3cc	          0x83e003	                              and eax, 3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3cf	            0x3c02	                               cmp al, 2	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3d1	     0xf84700b0000	                            je 0x400bf47	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3d7	            0x3c03	                               cmp al, 3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3d9	     0xf84590b0000	                            je 0x400bf38	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3df	            0x3c01	                               cmp al, 1	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3e1	            0x750a	                           jne 0x400b3ed	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3e3	    0xc70500000000	           mov dword [0x0400b3ed], 0x66 	     12959	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400b3ed	      0x410fb64602	               movzx eax, byte [r14 + 2]	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400b3f2	        0x498d4e03	                      lea rcx, [r14 + 3]	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400b3f6	    0xc60500000000	                mov byte [0x0400b3fd], 1	     12968	i386-dis.c	FOR_1	FUNCTION_8
0x400b3fd	    0xc60500000000	                mov byte [0x0400b404], 1	     12969	i386-dis.c	FOR_1	FUNCTION_8
0x400b404	    0x48890d000000	            mov qword [0x0400b40b], rcx 	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400b40b	    0x48890d000000	            mov qword [0x0400b412], rcx 	     12973	i386-dis.c	FOR_1	FUNCTION_8
0x400b412	          0x4989c0	                             mov r8, rax	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400b415	        0x488d0440	                  lea rax, [rax + rax*2]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400b419	        0x48c1e005	                              shl rax, 5	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400b41d	          0x4889c6	                            mov rsi, rax	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400b420	          0x4963c7	                        movsxd rax, r15d	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400b423	        0x488d0440	                  lea rax, [rax + rax*2]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400b427	        0x48c1e00d	                            shl rax, 0xd	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400b42b	          0x4801f0	                            add rax, rsi	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400b42e	        0x4183f877	                           cmp r8d, 0x77	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400b432	    0x488da8000000	                          lea rbp, [rax]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400b439	     0xf85e7050000	                           jne 0x400ba26	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400b43f	            0x84d2	                             test dl, dl	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400b441	     0xf85df050000	                           jne 0x400ba26	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400b447	    0x488bb8000000	                    mov rdi, qword [rax]	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400b44e	      0xe9cdfcffff	                           jmp 0x400b120	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400b453	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400b458	    0x4c8b35000000	            mov r14, qword [0x0400b45f] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400b45f	        0x488b7500	                    mov rsi, qword [rbp]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400b463	        0x4d8d7e03	                      lea r15, [r14 + 3]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400b467	          0x4939f7	                            cmp r15, rsi	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400b46a	     0xf872c070000	                            ja 0x400bb9c	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400b470	        0x410fb616	                   movzx edx, byte [r14]	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400b474	    0x8b0500000000	            mov eax, dword [0x0400b47a] 	     12858	i386-dis.c	FOR_1	FUNCTION_8
0x400b47a	    0x890500000000	            mov dword [0x0400b480], eax 	     12858	i386-dis.c	FOR_1	FUNCTION_8
0x400b480	            0x89d0	                            mov eax, edx	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400b482	          0x83e21f	                           and edx, 0x1f	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400b485	          0xc0e805	                               shr al, 5	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400b488	           0xfb6c0	                           movzx eax, al	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400b48b	            0xf7d0	                                 not eax	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400b48d	            0x89c1	                            mov ecx, eax	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400b48f	          0x83e107	                              and ecx, 7	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400b492	          0x80fa09	                               cmp dl, 9	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400b495	    0x890d00000000	            mov dword [0x0400b49b], ecx 	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x400b49b	     0xf8456090000	                            je 0x400bdf7	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400b4a1	          0x80fa0a	                             cmp dl, 0xa	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400b4a4	     0xf8442090000	                            je 0x400bdec	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400b4aa	          0x80fa08	                               cmp dl, 8	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400b4ad	     0xf8511faffff	                           jne 0x400aec4	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400b4b3	          0x4531ff	                          xor r15d, r15d	     12868	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400b4b6	        0x498d5601	                      lea rdx, [r14 + 1]	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x400b4ba	    0x488915000000	            mov qword [0x0400b4c1], rdx 	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x400b4c1	      0x410fb65601	               movzx edx, byte [r14 + 1]	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x400b4c6	          0x83e280	                     and edx, 0xffffff80	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x400b4c9	           0xfb6f2	                           movzx esi, dl	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x400b4cc	            0x84d2	                             test dl, dl	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x400b4ce	    0x893500000000	            mov dword [0x0400b4d4], esi 	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x400b4d4	     0xf84a6050000	                            je 0x400ba80	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x400b4da	    0x833d00000000	               cmp dword [0x0400b4e1], 2	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x400b4e1	     0xf844d0b0000	                            je 0x400c034	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x400b4e7	      0x410fb65601	               movzx edx, byte [r14 + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400b4ec	          0xc0ea03	                               shr dl, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400b4ef	            0xf7d2	                                 not edx	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400b4f1	          0x83e20f	                            and edx, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400b4f4	    0x891500000000	            mov dword [0x0400b4fa], edx 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400b4fa	          0x83e006	                              and eax, 6	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x400b4fd	    0x890500000000	            mov dword [0x0400b503], eax 	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x400b503	      0x410fb64601	               movzx eax, byte [r14 + 1]	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400b508	          0x83e004	                              and eax, 4	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400b50b	            0x3c01	                               cmp al, 1	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400b50d	            0x19c0	                            sbb eax, eax	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400b50f	          0x83e080	                     and eax, 0xffffff80	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400b512	       0x500010000	                          add eax, 0x100	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400b517	    0x890500000000	            mov dword [0x0400b51d], eax 	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400b51d	      0x410fb64601	               movzx eax, byte [r14 + 1]	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b522	          0x83e003	                              and eax, 3	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b525	            0x3c02	                               cmp al, 2	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b527	     0xf84ae090000	                            je 0x400bedb	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b52d	            0x3c03	                               cmp al, 3	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b52f	     0xf8497090000	                            je 0x400becc	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b535	            0x3c01	                               cmp al, 1	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b537	            0x750a	                           jne 0x400b543	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b539	    0xc70500000000	           mov dword [0x0400b543], 0x66 	     12895	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400b543	      0x410fb65602	               movzx edx, byte [r14 + 2]	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x400b548	      0x4d8b442468	              mov r8, qword [r12 + 0x68]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400b54d	        0x498d4603	                      lea rax, [r14 + 3]	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x400b551	        0x4983c604	                              add r14, 4	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400b555	    0xc60500000000	                mov byte [0x0400b55c], 1	     12904	i386-dis.c	FOR_1	FUNCTION_8
0x400b55c	    0xc60500000000	                mov byte [0x0400b563], 1	     12905	i386-dis.c	FOR_1	FUNCTION_8
0x400b563	    0x488905000000	            mov qword [0x0400b56a], rax 	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x400b56a	    0x488905000000	            mov qword [0x0400b571], rax 	     12910	i386-dis.c	FOR_1	FUNCTION_8
0x400b571	          0x498b30	                     mov rsi, qword [r8]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400b574	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x400b578	          0x4989d1	                             mov r9, rdx	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x400b57b	          0x4963d7	                        movsxd rdx, r15d	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x400b57e	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x400b582	        0x48c1e105	                              shl rcx, 5	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x400b586	        0x48c1e20d	                            shl rdx, 0xd	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x400b58a	          0x4939f6	                            cmp r14, rsi	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400b58d	    0x488dac110000	                    lea rbp, [rcx + rdx]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x400b595	     0xf8777070000	                            ja 0x400bd12	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x400b59b	           0xfb600	                   movzx eax, byte [rax]	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400b59e	            0x89c2	                            mov edx, eax	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400b5a0	          0xc0ea06	                               shr dl, 6	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400b5a3	           0xfb6d2	                           movzx edx, dl	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400b5a6	    0x891500000000	            mov dword [0x0400b5ac], edx 	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400b5ac	            0x89c2	                            mov edx, eax	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5ae	          0x83e007	                              and eax, 7	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x400b5b1	          0xc0ea03	                               shr dl, 3	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5b4	    0x890500000000	            mov dword [0x0400b5ba], eax 	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x400b5ba	        0x4b8d047f	                  lea rax, [r15 + r15*2]	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x400b5be	          0x83e207	                              and edx, 7	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5c1	    0x891500000000	            mov dword [0x0400b5c7], edx 	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5c7	        0x4b8d1449	                    lea rdx, [r9 + r9*2]	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5cb	        0x48c1e00d	                            shl rax, 0xd	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5cf	        0x48c1e205	                              shl rdx, 5	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5d3	    0x488bbc020000	              mov rdi, qword [rdx + rax]	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5db	      0xe940fbffff	                           jmp 0x400b120	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400b5e0	    0x803d00000000	                cmp byte [0x0400b5e7], 0	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x400b5e7	     0xf8471030000	                            je 0x400b95e	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x400b5ed	    0x8b0500000000	            mov eax, dword [0x0400b5f3] 	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b5f3	          0x83f866	                           cmp eax, 0x66	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b5f6	     0xf84150c0000	                            je 0x400c211	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b5fc	     0xf8ee6040000	                           jle 0x400bae8	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b602	      0x3df2000000	                           cmp eax, 0xf2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b607	     0xf84f60b0000	                            je 0x400c203	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b60d	      0x3df3000000	                           cmp eax, 0xf3	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b612	     0xf85fff5ffff	                           jne 0x400ac17	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b618	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b61c	      0xb801000000	                              mov eax, 1	     12761	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400b621	        0x488d0440	                  lea rax, [rax + rax*2]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b625	        0x48c1e005	                              shl rax, 5	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b629	          0x4889c1	                            mov rcx, rax	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b62c	        0x488d0452	                  lea rax, [rdx + rdx*2]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b630	        0x48c1e007	                              shl rax, 7	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b634	          0x4801c8	                            add rax, rcx	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b637	    0x488da8000000	                          lea rbp, [rax]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b63e	    0x488bb8000000	                    mov rdi, qword [rax]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b645	      0xe9d6faffff	                           jmp 0x400b120	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400b64a	      0x4d8b742468	            mov r14, qword [r12 + 0x68] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x400b64f	    0x488b15000000	            mov rdx, qword [0x0400b656] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x400b656	          0x498b36	                    mov rsi, qword [r14]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x400b659	        0x4c8d7a02	                      lea r15, [rdx + 2]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x400b65d	          0x4939f7	                            cmp r15, rsi	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x400b660	     0xf87c1040000	                            ja 0x400bb27	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x400b666	           0xfb602	                   movzx eax, byte [rdx]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b669	        0x488d7201	                      lea rsi, [rdx + 1]	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x400b66d	         0xfb65201	               movzx edx, byte [rdx + 1]	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x400b671	    0x488935000000	            mov qword [0x0400b678], rsi 	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x400b678	    0x488935000000	            mov qword [0x0400b67f], rsi 	     12829	i386-dis.c	FOR_1	FUNCTION_8
0x400b67f	        0x488d0440	                  lea rax, [rax + rax*2]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b683	        0x48c1e005	                              shl rax, 5	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b687	          0x4889c1	                            mov rcx, rax	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b68a	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b68e	        0x488d0440	                  lea rax, [rax + rax*2]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b692	        0x48c1e00d	                            shl rax, 0xd	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b696	          0x4801c8	                            add rax, rcx	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b699	            0x89d1	                            mov ecx, edx	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x400b69b	          0xc0e906	                               shr cl, 6	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x400b69e	    0x488da8000000	                          lea rbp, [rax]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b6a5	    0x488bb8000000	                    mov rdi, qword [rax]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x400b6ac	           0xfb6c9	                           movzx ecx, cl	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x400b6af	    0x890d00000000	            mov dword [0x0400b6b5], ecx 	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x400b6b5	            0x89d1	                            mov ecx, edx	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x400b6b7	          0x83e207	                              and edx, 7	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x400b6ba	          0xc0e903	                               shr cl, 3	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x400b6bd	    0x891500000000	            mov dword [0x0400b6c3], edx 	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x400b6c3	          0x83e107	                              and ecx, 7	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x400b6c6	    0x890d00000000	            mov dword [0x0400b6cc], ecx 	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x400b6cc	      0xe94ffaffff	                           jmp 0x400b120	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x400b6d1	            0x31c0	                            xor eax, eax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6d3	    0x833d00000000	               cmp dword [0x0400b6da], 2	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6da	           0xf94c0	                                 sete al	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6dd	        0x488d1400	                    lea rdx, [rax + rax]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6e1	          0x4801d0	                            add rax, rdx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6e4	        0x48c1e005	                              shl rax, 5	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6e8	          0x4889c2	                            mov rdx, rax	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6eb	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6ef	        0x488d0440	                  lea rax, [rax + rax*2]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6f3	        0x48c1e006	                              shl rax, 6	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6f7	          0x4801d0	                            add rax, rdx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b6fa	    0x488da8000000	                          lea rbp, [rax]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b701	    0x488bb8000000	                    mov rdi, qword [rax]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b708	      0xe913faffff	                           jmp 0x400b120	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400b70d	            0x31c0	                            xor eax, eax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b70f	    0x833d00000000	               cmp dword [0x0400b716], 3	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b716	           0xf94c0	                                 sete al	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b719	        0x488d1400	                    lea rdx, [rax + rax]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b71d	          0x4801d0	                            add rax, rdx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b720	        0x48c1e005	                              shl rax, 5	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b724	          0x4889c2	                            mov rdx, rax	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b727	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b72b	        0x488d0440	                  lea rax, [rax + rax*2]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b72f	        0x48c1e006	                              shl rax, 6	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b733	          0x4801d0	                            add rax, rdx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b736	    0x488da8000000	                          lea rbp, [rax]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b73d	    0x488bb8000000	                    mov rdi, qword [rax]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b744	      0xe9d7f9ffff	                           jmp 0x400b120	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400b749	    0x486305000000	         movsxd rax, dword [0x0400b750] 	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b750	        0x488d0440	                  lea rax, [rax + rax*2]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b754	        0x48c1e005	                              shl rax, 5	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b758	          0x4889c2	                            mov rdx, rax	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b75b	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b75f	        0x488d0440	                  lea rax, [rax + rax*2]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b763	        0x48c1e008	                              shl rax, 8	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b767	          0x4801d0	                            add rax, rdx	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b76a	    0x488da8000000	                          lea rbp, [rax]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b771	    0x488bb8000000	                    mov rdi, qword [rax]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b778	      0xe9a3f9ffff	                           jmp 0x400b120	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400b77d	    0x486305000000	         movsxd rax, dword [0x0400b784] 	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b784	        0x488d0440	                  lea rax, [rax + rax*2]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b788	        0x48c1e005	                              shl rax, 5	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b78c	          0x4889c2	                            mov rdx, rax	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b78f	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b793	        0x488d0440	                  lea rax, [rax + rax*2]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b797	        0x48c1e008	                              shl rax, 8	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b79b	          0x4801d0	                            add rax, rdx	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b79e	    0x488da8000000	                          lea rbp, [rax]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b7a5	    0x488bb8000000	                    mov rdi, qword [rax]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b7ac	      0xe96ff9ffff	                           jmp 0x400b120	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400b7b1	      0x488b442408	                mov rax, qword [rsp + 8]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400b7b6	        0x488d7202	                      lea rsi, [rdx + 2]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400b7ba	        0x4c8d7201	                      lea r14, [rdx + 1]	     13394	i386-dis.c	FUNCTION_10	IF_32
0x400b7be	    0x4c8935000000	            mov qword [0x0400b7c5], r14 	     13394	i386-dis.c	FUNCTION_10	IF_32
0x400b7c5	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400b7c9	          0x483b30	                    cmp rsi, qword [rax]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400b7cc	     0xf87f2050000	                            ja 0x400bdc4	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400b7d2	        0x410fb606	                   movzx eax, byte [r14]	     13397	i386-dis.c	FUNCTION_10	IF_32
0x400b7d6	        0x4983c601	                              add r14, 1	     13399	i386-dis.c	FUNCTION_10	IF_32
0x400b7da	    0x4c8935000000	            mov qword [0x0400b7e1], r14 	     13399	i386-dis.c	FUNCTION_10	IF_32
0x400b7e1	        0x488d2c40	                  lea rbp, [rax + rax*2]	     13397	i386-dis.c	FUNCTION_10	IF_32
0x400b7e5	     0xfb680000000	                   movzx eax, byte [rax]	     13398	i386-dis.c	FUNCTION_10	IF_32
0x400b7ec	        0x48c1e505	                              shl rbp, 5	     13397	i386-dis.c	FUNCTION_10	IF_32
0x400b7f0	    0x4881c5000000	                              add rbp, 0	     13397	i386-dis.c	FUNCTION_10	IF_32
0x400b7f7	    0x880500000000	               mov byte [0x0400b7fd], al	     13398	i386-dis.c	FUNCTION_10	IF_32
0x400b7fd	      0xe98eeeffff	                           jmp 0x400a690	     13398	i386-dis.c	FUNCTION_10	IF_32
0x400b802	    0x48899424f800	             mov qword [rsp + 0xf8], rdx	     13398	i386-dis.c	FUNCTION_10	IF_32
0x400b80a	        0x488b7d08	                mov rdi, qword [rbp + 8]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x400b80e	      0xbe00000000	                              mov esi, 0	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x400b813	            0x31c0	                            xor eax, eax	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x400b815	          0xff5500	                        call qword [rbp]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x400b818	    0x488b9424f800	            mov rdx, qword [rsp + 0xf8] 	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x400b820	      0xe945f5ffff	                           jmp 0x400ad6a	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x400b825	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400b82d	          0x4889ee	                            mov rsi, rbp	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400b830	    0xff9580000000	                 call qword [rbp + 0x80]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400b836	      0xe958f5ffff	                           jmp 0x400ad93	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x400b83b	        0x4d8d4f08	                       lea r9, [r15 + 8]	       203	i386-dis.c	FUNCTION_1
0x400b83f	        0x498d571c	                   lea rdx, [r15 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400b843	          0x4989f6	                            mov r14, rsi	       203	i386-dis.c	FUNCTION_1
0x400b846	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400b84b	          0x4d29ce	                             sub r14, r9	       203	i386-dis.c	FUNCTION_1
0x400b84e	        0x4d037720	             add r14, qword [r15 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400b852	          0x4939d0	                             cmp r8, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x400b855	     0xf869e060000	                           jbe 0x400bef9	       205	i386-dis.c	FUNCTION_1	IF_1
0x400b85b	          0x4939f1	                             cmp r9, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400b85e	            0x7510	                           jne 0x400b870	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400b860	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400b865	          0x4c89f6	                            mov rsi, r14	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400b868	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400b86a	          0x4889da	                            mov rdx, rbx	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400b86d	          0xff5378	                 call qword [rbx + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400b870	        0x498d7f30	                   lea rdi, [r15 + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400b874	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400b879	      0xe800000000	                          call 0x400b87e	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400b87e	            0x6690	                                     nop	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400b880	          0x80fa33	                            cmp dl, 0x33	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400b883	     0xf84b1050000	                            je 0x400be3a	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400b889	          0x80fa36	                            cmp dl, 0x36	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400b88c	     0xf85e0e6ffff	                           jne 0x4009f72	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400b892	        0x80780534	                cmp byte [rax + 5], 0x34	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400b896	     0xf85d6e6ffff	                           jne 0x4009f72	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400b89c	      0xe972f2ffff	                           jmp 0x400ab13	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x400b8a1	    0x48817d280000	               cmp qword [rbp + 0x28], 0	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400b8a9	    0x48c784240001	              mov qword [rsp + 0x100], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400b8b5	    0x48c784240801	              mov qword [rsp + 0x108], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400b8c1	    0x48c784241001	              mov qword [rsp + 0x110], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400b8cd	    0x48c784241801	              mov qword [rsp + 0x118], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400b8d9	    0x48c784242001	              mov qword [rsp + 0x120], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400b8e5	     0xf84450a0000	                            je 0x400c330	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400b8eb	    0x8b0500000000	            mov eax, dword [0x0400b8f1] 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b8f1	    0x8b1500000000	            mov edx, dword [0x0400b8f7] 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b8f7	    0x890500000000	            mov dword [0x0400b8fd], eax 	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b8fd	    0x891500000000	            mov dword [0x0400b903], edx 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b903	    0x488b05000000	            mov rax, qword [0x0400b90a] 	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b90a	    0x488b15000000	            mov rdx, qword [0x0400b911] 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b911	    0x488905000000	            mov qword [0x0400b918], rax 	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b918	    0x488915000000	            mov qword [0x0400b91f], rdx 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b91f	    0x8b0500000000	            mov eax, dword [0x0400b925] 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b925	    0x8b1500000000	            mov edx, dword [0x0400b92b] 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b92b	    0x890500000000	            mov dword [0x0400b931], eax 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b931	    0x891500000000	            mov dword [0x0400b937], edx 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b937	    0x890500000000	            mov dword [0x0400b93d], eax 	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b93d	    0x488b15000000	            mov rdx, qword [0x0400b944] 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b944	    0x488b05000000	            mov rax, qword [0x0400b94b] 	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b94b	    0x488915000000	            mov qword [0x0400b952], rdx 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b952	    0x488905000000	            mov qword [0x0400b959], rax 	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b959	      0xe9eef3ffff	                           jmp 0x400ad4c	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x400b95e	    0x448b05000000	            mov r8d, dword [0x0400b965] 	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x400b965	        0x41f6c003	                             test r8b, 3	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x400b969	     0xf847b030000	                            je 0x400bcea	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x400b96f	    0x48630d000000	         movsxd rcx, dword [0x0400b976] 	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400b976	    0x8b0500000000	            mov eax, dword [0x0400b97c] 	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400b97c	            0x39c8	                            cmp eax, ecx	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400b97e	     0xf8e9b080000	                           jle 0x400c21f	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400b984	          0x4863c8	                         movsxd rcx, eax	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400b987	    0x41b901000000	                              mov r9d, 1	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400b98d	      0xbf01000000	                              mov edi, 1	     12787	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400b992	      0xb801000000	                              mov eax, 1	     12786	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400b997	        0x4c635d20	         movsxd r11, dword [rbp + 0x20] 	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b99b	          0x4863f0	                         movsxd rsi, eax	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b99e	        0x4c8d1476	                  lea r10, [rsi + rsi*2]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b9a2	        0x49c1e205	                              shl r10, 5	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b9a6	        0x4b8d345b	                  lea rsi, [r11 + r11*2]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b9aa	          0x4c89da	                            mov rdx, r11	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b9ad	        0x48c1e607	                              shl rsi, 7	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b9b1	    0x410fb7b43200	             movzx esi, word [r10 + rsi]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b9ba	          0x4485ce	                           test esi, r9d	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b9bd	            0x741e	                            je 0x400b9dd	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400b9bf	    0x4181e0000200	                          and r8d, 0x200	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400b9c6	     0xf8428010000	                            je 0x400baf4	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400b9cc	    0x48630d000000	         movsxd rcx, dword [0x0400b9d3] 	     12808	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400b9d3	      0xbf00020000	                          mov edi, 0x200	     12807	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400b9d8	      0xb802000000	                              mov eax, 2	     12806	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400b9dd	     0x93d00000000	              or dword [0x0400b9e3], edi	     12813	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x400b9e3	    0xc7048d000000	                    mov dword [rcx*4], 0	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x400b9ee	      0xe92efcffff	                           jmp 0x400b621	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x400b9f3	        0x80780536	                cmp byte [rax + 5], 0x36	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x400b9f7	     0xf8575e5ffff	                           jne 0x4009f72	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x400b9fd	    0x83a424580100	     and dword [rsp + 0x158], 0xfffffffd	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400ba05	      0xe968e5ffff	                           jmp 0x4009f72	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400ba0a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x400ba0f	      0xbe00000000	                              mov esi, 0	     13522	i386-dis.c	FUNCTION_10	IF_49
0x400ba14	            0x31c0	                            xor eax, eax	     13522	i386-dis.c	FUNCTION_10	IF_49
0x400ba16	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x400ba1a	            0xff13	                        call qword [rbx]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x400ba1c	      0xb80f000000	                            mov eax, 0xf	     13523	i386-dis.c	FUNCTION_10	IF_49
0x400ba21	      0xe99de7ffff	                           jmp 0x400a1c3	     13523	i386-dis.c	FUNCTION_10	IF_49
0x400ba26	      0x4d8b4c2468	              mov r9, qword [r12 + 0x68]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba2b	        0x4983c604	                              add r14, 4	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba2f	          0x498b31	                     mov rsi, qword [r9]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba32	          0x4939f6	                            cmp r14, rsi	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba35	     0xf8726070000	                            ja 0x400c161	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba3b	           0xfb601	                   movzx eax, byte [rcx]	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba3e	            0x89c2	                            mov edx, eax	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba40	          0xc0ea06	                               shr dl, 6	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba43	           0xfb6d2	                           movzx edx, dl	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba46	    0x891500000000	            mov dword [0x0400ba4c], edx 	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba4c	            0x89c2	                            mov edx, eax	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba4e	          0x83e007	                              and eax, 7	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba51	          0xc0ea03	                               shr dl, 3	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba54	    0x890500000000	            mov dword [0x0400ba5a], eax 	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba5a	        0x4b8d047f	                  lea rax, [r15 + r15*2]	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba5e	          0x83e207	                              and edx, 7	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba61	    0x891500000000	            mov dword [0x0400ba67], edx 	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba67	        0x4b8d1440	                    lea rdx, [r8 + r8*2]	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba6b	        0x48c1e00d	                            shl rax, 0xd	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba6f	        0x48c1e205	                              shl rdx, 5	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba73	    0x488bbc020000	              mov rdi, qword [rdx + rax]	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba7b	      0xe9a0f6ffff	                           jmp 0x400b120	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400ba80	      0x410fb65601	               movzx edx, byte [r14 + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400ba85	          0xc0ea03	                               shr dl, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400ba88	            0xf7d2	                                 not edx	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400ba8a	          0x83e20f	                            and edx, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400ba8d	    0x833d00000000	               cmp dword [0x0400ba94], 2	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x400ba94	    0x891500000000	            mov dword [0x0400ba9a], edx 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400ba9a	     0xf855afaffff	                           jne 0x400b4fa	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x400baa0	      0xe95efaffff	                           jmp 0x400b503	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x400baa5	        0x4c8d4508	                       lea r8, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x400baa9	        0x488d451c	                   lea rax, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400baad	          0x4989f6	                            mov r14, rsi	       203	i386-dis.c	FUNCTION_1
0x400bab0	          0x4d29c6	                             sub r14, r8	       203	i386-dis.c	FUNCTION_1
0x400bab3	        0x4c037520	             add r14, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400bab7	          0x4939c7	                            cmp r15, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400baba	     0xf86e7070000	                           jbe 0x400c2a7	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bac0	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400bac5	          0x4939f0	                             cmp r8, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bac8	     0xf8598f3ffff	                           jne 0x400ae66	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bace	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bad3	          0x4c89f6	                            mov rsi, r14	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bad6	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bad8	          0x4889da	                            mov rdx, rbx	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400badb	          0xff5378	                 call qword [rbx + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bade	      0xe983f3ffff	                           jmp 0x400ae66	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bae3	       0xf1f440000	                   nop dword [rax + rax]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bae8	            0x85c0	                           test eax, eax	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400baea	     0xf8527f1ffff	                           jne 0x400ac17	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400baf0	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400baf4	            0x31c0	                            xor eax, eax	     12758	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400baf6	      0xe926fbffff	                           jmp 0x400b621	     12758	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400bafb	      0x488b442408	                mov rax, qword [rsp + 8]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bb00	          0x4c89fa	                            mov rdx, r15	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bb03	          0x4c89ef	                            mov rdi, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bb06	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bb09	          0x4889c1	                            mov rcx, rax	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bb0c	          0xff5070	                 call qword [rax + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bb0f	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bb11	     0xf852f0a0000	                           jne 0x400c546	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bb17	        0x4c897d00	                    mov qword [rbp], r15	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bb1b	    0x488b15000000	            mov rdx, qword [0x0400bb22] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bb22	      0xe912ebffff	                           jmp 0x400a639	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bb27	        0x4d8d4e08	                       lea r9, [r14 + 8]	       203	i386-dis.c	FUNCTION_1
0x400bb2b	        0x498d461c	                   lea rax, [r14 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bb2f	          0x4989f0	                             mov r8, rsi	       203	i386-dis.c	FUNCTION_1
0x400bb32	          0x4d29c8	                              sub r8, r9	       203	i386-dis.c	FUNCTION_1
0x400bb35	        0x4d034620	              add r8, qword [r14 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400bb39	          0x4939c7	                            cmp r15, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bb3c	     0xf8605090000	                           jbe 0x400c447	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bb42	          0x4d89c7	                             mov r15, r8	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bb45	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400bb4a	          0x4939f1	                             cmp r9, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bb4d	            0x7510	                           jne 0x400bb5f	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bb4f	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bb54	          0x4c89fe	                            mov rsi, r15	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bb57	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bb59	          0x4889da	                            mov rdx, rbx	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bb5c	          0xff5378	                 call qword [rbx + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bb5f	        0x498d7e30	                   lea rdi, [r14 + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400bb63	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400bb68	      0xe800000000	                          call 0x400bb6d	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400bb6d	           0xf1f00	                         nop dword [rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400bb70	        0x4d8d4f08	                       lea r9, [r15 + 8]	       203	i386-dis.c	FUNCTION_1
0x400bb74	        0x498d471c	                   lea rax, [r15 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bb78	          0x4989f6	                            mov r14, rsi	       203	i386-dis.c	FUNCTION_1
0x400bb7b	          0x4d29ce	                             sub r14, r9	       203	i386-dis.c	FUNCTION_1
0x400bb7e	        0x4d037720	             add r14, qword [r15 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400bb82	          0x4939c0	                             cmp r8, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bb85	     0xf86f8080000	                           jbe 0x400c483	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bb8b	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400bb90	      0xe9c6fcffff	                           jmp 0x400b85b	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400bb95	            0x31c0	                            xor eax, eax	     12842	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400bb97	      0xe909f6ffff	                           jmp 0x400b1a5	     12842	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400bb9c	        0x4c8d4508	                       lea r8, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x400bba0	        0x488d451c	                   lea rax, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bba4	          0x4989f6	                            mov r14, rsi	       203	i386-dis.c	FUNCTION_1
0x400bba7	          0x4d29c6	                             sub r14, r8	       203	i386-dis.c	FUNCTION_1
0x400bbaa	        0x4c037520	             add r14, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400bbae	          0x4939c7	                            cmp r15, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bbb1	     0xf8709ffffff	                            ja 0x400bac0	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bbb7	          0x4c89fa	                            mov rdx, r15	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bbba	      0x4c89442458	              mov qword [rsp + 0x58], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bbbf	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bbc2	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bbc5	          0x4c89f7	                            mov rdi, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bbc8	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bbcd	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bbcf	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bbd4	     0xf85f1080000	                           jne 0x400c4cb	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bbda	        0x4c897d00	                    mov qword [rbp], r15	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bbde	    0x4c8b35000000	            mov r14, qword [0x0400bbe5] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bbe5	      0xe986f8ffff	                           jmp 0x400b470	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bbea	        0x4c8d4508	                       lea r8, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x400bbee	        0x488d451c	                   lea rax, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bbf2	          0x4989f6	                            mov r14, rsi	       203	i386-dis.c	FUNCTION_1
0x400bbf5	          0x4d29c6	                             sub r14, r8	       203	i386-dis.c	FUNCTION_1
0x400bbf8	        0x4c037520	             add r14, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400bbfc	          0x4939c7	                            cmp r15, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bbff	     0xf87bbfeffff	                            ja 0x400bac0	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bc05	          0x4c89fa	                            mov rdx, r15	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bc08	    0x4c898424c800	              mov qword [rsp + 0xc8], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bc10	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bc13	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bc16	          0x4c89f7	                            mov rdi, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bc19	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bc1e	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bc20	    0x4c8b8424c800	              mov r8, qword [rsp + 0xc8]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bc28	     0xf859d080000	                           jne 0x400c4cb	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bc2e	        0x4c897d00	                    mov qword [rbp], r15	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bc32	    0x4c8b35000000	            mov r14, qword [0x0400bc39] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bc39	      0xe9c6f2ffff	                           jmp 0x400af04	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bc3e	    0x8b0500000000	            mov eax, dword [0x0400bc44] 	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x400bc44	            0x85c0	                           test eax, eax	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x400bc46	     0xf848cf4ffff	                            je 0x400b0d8	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x400bc4c	    0xc70500000000	          mov dword [0x0400bc56], 0x200 	     13128	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400bc56	      0xe9a7f4ffff	                           jmp 0x400b102	     13128	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400bc5b	        0x80780536	                cmp byte [rax + 5], 0x36	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x400bc5f	     0xf850de3ffff	                           jne 0x4009f72	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x400bc65	    0x83a424580100	     and dword [rsp + 0x158], 0xfffffffe	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x400bc6d	      0xe900e3ffff	                           jmp 0x4009f72	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x400bc72	    0x803d00000000	                cmp byte [0x0400bc79], 0	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400bc79	            0x7417	                            je 0x400bc92	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400bc7b	        0x41f6c502	                            test r13b, 2	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400bc7f	     0xf854a030000	                           jne 0x400bfcf	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400bc85	    0x833d00000000	               cmp dword [0x0400bc8c], 2	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400bc8c	     0xf843d030000	                            je 0x400bfcf	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400bc92	        0x4c8d7508	                      lea r14, [rbp + 8]	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400bc96	    0x41bf00000000	                             mov r15d, 0	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400bc9c	    0x41bc01000000	                             mov r12d, 1	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400bca2	      0xb805000000	                              mov eax, 5	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bca7	    0x4c893d000000	            mov qword [0x0400bcae], r15 	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bcae	          0x4429e0	                           sub eax, r12d	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bcb1	    0x890500000000	            mov dword [0x0400bcb7], eax 	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bcb7	          0x498b06	                    mov rax, qword [r14]	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400bcba	          0x4885c0	                           test rax, rax	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400bcbd	            0x7409	                            je 0x400bcc8	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400bcbf	        0x418b7e08	                mov edi, dword [r14 + 8]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400bcc3	          0x4489ee	                           mov esi, r13d	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400bcc6	            0xffd0	                                call rax	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x400bcc8	        0x4183fc01	                             cmp r12d, 1	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x400bccc	     0xf84a7080000	                            je 0x400c579	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x400bcd2	        0x4183fc05	                             cmp r12d, 5	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bcd6	     0xf8466eaffff	                            je 0x400a742	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bcdc	        0x4983c764	                           add r15, 0x64	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bce0	        0x4983c610	                           add r14, 0x10	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bce4	        0x4183c401	                             add r12d, 1	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bce8	            0xebb8	                           jmp 0x400bca2	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bcea	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bcee	      0xe9ccfcffff	                           jmp 0x400b9bf	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x400bcf3	    0x486305000000	         movsxd rax, dword [0x0400bcfa] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400bcfa	            0x85c0	                           test eax, eax	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400bcfc	     0xf885ceaffff	                            js 0x400a75e	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400bd02	    0xc70485000000	                    mov dword [rax*4], 0	     13468	i386-dis.c	FUNCTION_10	IF_42
0x400bd0d	      0xe94ceaffff	                           jmp 0x400a75e	     13468	i386-dis.c	FUNCTION_10	IF_42
0x400bd12	        0x4d8d5808	                       lea r11, [r8 + 8]	       203	i386-dis.c	FUNCTION_1
0x400bd16	        0x498d401c	                    lea rax, [r8 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bd1a	          0x4989f2	                            mov r10, rsi	       203	i386-dis.c	FUNCTION_1
0x400bd1d	          0x4d29da	                            sub r10, r11	       203	i386-dis.c	FUNCTION_1
0x400bd20	        0x4d035020	              add r10, qword [r8 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400bd24	          0x4939c6	                            cmp r14, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bd27	     0xf86ad050000	                           jbe 0x400c2da	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bd2d	          0x4d89c7	                             mov r15, r8	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bd30	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400bd35	          0x4939f3	                            cmp r11, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd38	     0xf8532fbffff	                           jne 0x400b870	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd3e	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd43	          0x4c89d6	                            mov rsi, r10	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd46	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd48	          0x4889da	                            mov rdx, rbx	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd4b	          0xff5378	                 call qword [rbx + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd4e	      0xe91dfbffff	                           jmp 0x400b870	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd53	       0xf1f440000	                   nop dword [rax + rax]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bd58	    0x41bf01000000	                             mov r15d, 1	     13050	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400bd5e	      0xe9f2f1ffff	                           jmp 0x400af55	     13050	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400bd63	      0xba01000000	                              mov edx, 1	     13050	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400bd68	    0x41bf02000000	                             mov r15d, 2	     12935	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400bd6e	      0xe9f4f5ffff	                           jmp 0x400b367	     12935	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400bd73	      0xba01000000	                              mov edx, 1	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400bd78	    0x41bf01000000	                             mov r15d, 1	     12932	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400bd7e	      0xe9e4f5ffff	                           jmp 0x400b367	     12932	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400bd83	    0x48c784240001	              mov qword [rsp + 0x100], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400bd8f	    0x48c784240801	              mov qword [rsp + 0x108], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400bd9b	    0x48c784241001	              mov qword [rsp + 0x110], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400bda7	    0x48c784241801	              mov qword [rsp + 0x118], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400bdb3	    0x48c784242001	              mov qword [rsp + 0x120], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400bdbf	      0xe927fbffff	                           jmp 0x400b8eb	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x400bdc4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400bdc9	      0xe8f25dffff	                     call sym.fetch_data	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400bdce	    0x4c8b35000000	            mov r14, qword [0x0400bdd5] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400bdd5	    0x8b0d00000000	            mov ecx, dword [0x0400bddb] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400bddb	      0xe9f2f9ffff	                           jmp 0x400b7d2	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400bde0	    0x488bba000000	                    mov rdi, qword [rdx]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400bde7	      0xe934f3ffff	                           jmp 0x400b120	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400bdec	    0x41bf02000000	                             mov r15d, 2	     12874	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400bdf2	      0xe9bff6ffff	                           jmp 0x400b4b6	     12874	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400bdf7	    0x41bf01000000	                             mov r15d, 1	     12871	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400bdfd	      0xe9b4f6ffff	                           jmp 0x400b4b6	     12871	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x400be02	    0x41bf02000000	                             mov r15d, 2	     13053	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400be08	      0xe948f1ffff	                           jmp 0x400af55	     13053	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x400be0d	    0xc70500000000	           mov dword [0x0400be17], 0xf2 	     13006	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400be17	      0xe940f4ffff	                           jmp 0x400b25c	     13006	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400be1c	    0xc70500000000	           mov dword [0x0400be26], 0xf3 	     13003	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400be26	      0xe931f4ffff	                           jmp 0x400b25c	     13003	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400be2b	    0xc70500000000	           mov dword [0x0400be35], 0xf3 	     13077	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400be35	      0xe992f1ffff	                           jmp 0x400afcc	     13077	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400be3a	        0x80780532	                cmp byte [rax + 5], 0x32	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400be3e	     0xf852ee1ffff	                           jne 0x4009f72	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400be44	      0xe9b4fbffff	                           jmp 0x400b9fd	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x400be49	        0x4d8d5808	                       lea r11, [r8 + 8]	       203	i386-dis.c	FUNCTION_1
0x400be4d	        0x498d401c	                    lea rax, [r8 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400be51	          0x4989f2	                            mov r10, rsi	       203	i386-dis.c	FUNCTION_1
0x400be54	          0x4d29da	                            sub r10, r11	       203	i386-dis.c	FUNCTION_1
0x400be57	        0x4d035020	              add r10, qword [r8 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400be5b	          0x4939c6	                            cmp r14, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400be5e	     0xf87c9feffff	                            ja 0x400bd2d	       205	i386-dis.c	FUNCTION_1	IF_1
0x400be64	          0x4c89f2	                            mov rdx, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be67	    0x4c899c24c000	             mov qword [rsp + 0xc0], r11	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be6f	    0x4c898424b800	              mov qword [rsp + 0xb8], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be77	    0x44898c24d800	             mov dword [rsp + 0xd8], r9d	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be7f	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be82	          0x4c89d7	                            mov rdi, r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be85	    0x4c899424b000	             mov qword [rsp + 0xb0], r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be8d	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be90	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400be95	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400be97	    0x4c8b9424b000	            mov r10, qword [rsp + 0xb0] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400be9f	    0x4c638c24d800	          movsxd r9, dword [rsp + 0xd8] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bea7	    0x4c8b8424b800	              mov r8, qword [rsp + 0xb8]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400beaf	    0x4c8b9c24c000	            mov r11, qword [rsp + 0xc0] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400beb7	     0xf853a070000	                           jne 0x400c5f7	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bebd	          0x4d8930	                     mov qword [r8], r14	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bec0	    0x488b05000000	            mov rax, qword [0x0400bec7] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bec7	      0xe9f6f3ffff	                           jmp 0x400b2c2	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400becc	    0xc70500000000	           mov dword [0x0400bed6], 0xf2 	     12901	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400bed6	      0xe968f6ffff	                           jmp 0x400b543	     12901	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400bedb	    0xc70500000000	           mov dword [0x0400bee5], 0xf3 	     12898	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400bee5	      0xe959f6ffff	                           jmp 0x400b543	     12898	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400beea	    0xc70500000000	           mov dword [0x0400bef4], 0xf2 	     13080	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400bef4	      0xe9d3f0ffff	                           jmp 0x400afcc	     13080	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400bef9	      0x488b442408	                mov rax, qword [rsp + 8]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400befe	          0x4c89c2	                             mov rdx, r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bf01	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bf06	      0x4c89442428	              mov qword [rsp + 0x28], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bf0b	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bf0e	          0x4c89f7	                            mov rdi, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bf11	          0x4889c1	                            mov rcx, rax	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bf14	          0xff5070	                 call qword [rax + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400bf17	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bf19	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bf1e	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bf23	     0xf8583070000	                           jne 0x400c6ac	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400bf29	          0x4d8907	                     mov qword [r15], r8	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bf2c	    0x4c8b35000000	            mov r14, qword [0x0400bf33] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bf33	      0xe997e7ffff	                           jmp 0x400a6cf	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400bf38	    0xc70500000000	           mov dword [0x0400bf42], 0xf2 	     12965	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400bf42	      0xe9a6f4ffff	                           jmp 0x400b3ed	     12965	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400bf47	    0xc70500000000	           mov dword [0x0400bf51], 0xf3 	     12962	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400bf51	      0xe997f4ffff	                           jmp 0x400b3ed	     12962	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400bf56	            0x84c9	                             test cl, cl	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400bf58	     0xf843cf4ffff	                            je 0x400b39a	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400bf5e	          0x83c808	                               or eax, 8	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400bf61	    0x890500000000	            mov dword [0x0400bf67], eax 	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400bf67	      0xe92ef4ffff	                           jmp 0x400b39a	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x400bf6c	        0x4d8d5908	                       lea r11, [r9 + 8]	       203	i386-dis.c	FUNCTION_1
0x400bf70	        0x498d411c	                    lea rax, [r9 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bf74	          0x4989f2	                            mov r10, rsi	       203	i386-dis.c	FUNCTION_1
0x400bf77	          0x4d29da	                            sub r10, r11	       203	i386-dis.c	FUNCTION_1
0x400bf7a	        0x4d035120	              add r10, qword [r9 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400bf7e	          0x4939c6	                            cmp r14, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bf81	     0xf8651040000	                           jbe 0x400c3d8	       205	i386-dis.c	FUNCTION_1	IF_1
0x400bf87	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400bf8c	          0x4939f3	                            cmp r11, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bf8f	            0x7520	                           jne 0x400bfb1	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bf91	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bf96	    0x4c898c24f000	              mov qword [rsp + 0xf0], r9	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bf9e	          0x4c89d6	                            mov rsi, r10	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bfa1	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bfa3	          0x4889da	                            mov rdx, rbx	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bfa6	          0xff5378	                 call qword [rbx + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bfa9	    0x4c8b8c24f000	              mov r9, qword [rsp + 0xf0]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400bfb1	        0x498d7930	                    lea rdi, [r9 + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400bfb5	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400bfba	      0xe800000000	                          call 0x400bfbf	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400bfbf	              0x90	                                     nop	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400bfc0	    0xc70500000000	          mov dword [0x0400bfca], 0x100 	     13125	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400bfca	      0xe933f1ffff	                           jmp 0x400b102	     13125	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x400bfcf	    0x833d00000000	               cmp dword [0x0400bfd6], 3	     13156	i386-dis.c	FUNCTION_9	IF_1
0x400bfd6	     0xf84b6fcffff	                            je 0x400bc92	     13156	i386-dis.c	FUNCTION_9	IF_1
0x400bfdc	    0x833d00000000	               cmp dword [0x0400bfe3], 4	     13157	i386-dis.c	FUNCTION_9	IF_1
0x400bfe3	     0xf85a9fcffff	                           jne 0x400bc92	     13157	i386-dis.c	FUNCTION_9	IF_1
0x400bfe9	      0x488b542408	                mov rdx, qword [rsp + 8]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400bfee	    0x488b05000000	            mov rax, qword [0x0400bff5] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400bff5	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400bff9	        0x488d7002	                      lea rsi, [rax + 2]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400bffd	          0x483b32	                    cmp rsi, qword [rdx]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c000	     0xf87ce040000	                            ja 0x400c4d4	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c006	         0xfb64001	               movzx eax, byte [rax + 1]	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c00a	            0x89c2	                            mov edx, eax	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c00c	          0xc0ea03	                               shr dl, 3	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c00f	          0x83e207	                              and edx, 7	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c012	    0x891500000000	            mov dword [0x0400c018], edx 	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c018	            0x89c2	                            mov edx, eax	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c01a	          0x83e007	                              and eax, 7	     13162	i386-dis.c	FUNCTION_9	IF_1
0x400c01d	          0xc0ea06	                               shr dl, 6	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c020	    0x890500000000	            mov dword [0x0400c026], eax 	     13162	i386-dis.c	FUNCTION_9	IF_1
0x400c026	           0xfb6d2	                           movzx edx, dl	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c029	    0x891500000000	            mov dword [0x0400c02f], edx 	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c02f	      0xe95efcffff	                           jmp 0x400bc92	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c034	      0x410fb64601	               movzx eax, byte [r14 + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400c039	          0x83c908	                               or ecx, 8	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x400c03c	    0x890d00000000	            mov dword [0x0400c042], ecx 	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x400c042	          0xc0e803	                               shr al, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400c045	            0xf7d0	                                 not eax	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400c047	          0x83e00f	                            and eax, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400c04a	    0x890500000000	            mov dword [0x0400c050], eax 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400c050	      0xe9aef4ffff	                           jmp 0x400b503	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400c055	    0x803d00000000	                cmp byte [0x0400c05c], 0	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400c05c	     0xf84a3ebffff	                            je 0x400ac05	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400c062	        0x41f6c502	                            test r13b, 2	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400c066	     0xf85c8010000	                           jne 0x400c234	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400c06c	    0x833d00000000	               cmp dword [0x0400c073], 2	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400c073	     0xf84bb010000	                            je 0x400c234	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x400c079	    0x833d00000000	               cmp dword [0x0400c080], 3	     13920	i386-dis.c	FUNCTION_13	IF_1
0x400c080	      0x410fb656ff	               movzx edx, byte [r14 - 1]	     13918	i386-dis.c	FUNCTION_13
0x400c085	     0xf85c8010000	                           jne 0x400c253	     13920	i386-dis.c	FUNCTION_13	IF_1
0x400c08b	    0x48630d000000	         movsxd rcx, dword [0x0400c092] 	     13934	i386-dis.c	FUNCTION_13
0x400c092	        0x498d4601	                      lea rax, [r14 + 1]	     13932	i386-dis.c	FUNCTION_13
0x400c096	        0x440fb6e2	                          movzx r12d, dl	     13934	i386-dis.c	FUNCTION_13
0x400c09a	    0x4181ecd80000	                          sub r12d, 0xd8	     13934	i386-dis.c	FUNCTION_13
0x400c0a1	    0x488905000000	            mov qword [0x0400c0a8], rax 	     13932	i386-dis.c	FUNCTION_13
0x400c0a8	          0x4963c4	                        movsxd rax, r12d	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0ab	        0x488d0440	                  lea rax, [rax + rax*2]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0af	          0x4989cf	                            mov r15, rcx	     13934	i386-dis.c	FUNCTION_13
0x400c0b2	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0b6	        0x48c1e008	                              shl rax, 8	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0ba	        0x48c1e105	                              shl rcx, 5	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0be	          0x4801c1	                            add rcx, rax	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0c1	    0x488bb9000000	                    mov rdi, qword [rcx]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0c8	          0x4885ff	                           test rdi, rdi	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0cb	     0xf8419040000	                            je 0x400c4ea	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400c0d1	          0x4489ee	                           mov esi, r13d	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x400c0d4	      0x48894c2440	             mov qword [rsp + 0x40], rcx	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x400c0d9	      0xe82241ffff	                          call sym.putop	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x400c0de	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400c0e3	    0x48c705000000	               mov qword [0x0400c0ee], 0	     13947	i386-dis.c	FUNCTION_13	ELSE_1
0x400c0ee	    0xc70500000000	               mov dword [0x0400c0f8], 2	     13948	i386-dis.c	FUNCTION_13	ELSE_1
0x400c0f8	    0x4881c1000000	                              add rcx, 0	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400c0ff	        0x488b4108	                mov rax, qword [rcx + 8]	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400c103	          0x4885c0	                           test rax, rax	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400c106	            0x7408	                            je 0x400c110	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400c108	          0x4489ee	                           mov esi, r13d	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400c10b	          0x8b7910	            mov edi, dword [rcx + 0x10] 	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400c10e	            0xffd0	                                call rax	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x400c110	          0x4d63e4	                        movsxd r12, r12d	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c113	        0x4b8d147f	                  lea rdx, [r15 + r15*2]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c117	    0x48c705000000	               mov qword [0x0400c122], 0	     13952	i386-dis.c	FUNCTION_13	ELSE_1
0x400c122	        0x4b8d0464	                  lea rax, [r12 + r12*2]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c126	    0xc70500000000	               mov dword [0x0400c130], 1	     13953	i386-dis.c	FUNCTION_13	ELSE_1
0x400c130	        0x48c1e205	                              shl rdx, 5	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c134	        0x48c1e008	                              shl rax, 8	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c138	    0x488d94020000	                    lea rdx, [rdx + rax]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c140	        0x488b4218	            mov rax, qword [rdx + 0x18] 	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c144	          0x4885c0	                           test rax, rax	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c147	     0xf84f5e5ffff	                            je 0x400a742	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c14d	          0x4489ee	                           mov esi, r13d	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c150	          0x8b7a20	            mov edi, dword [rdx + 0x20] 	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c153	            0xffd0	                                call rax	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c155	      0xe9e8e5ffff	                           jmp 0x400a742	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400c15a	            0x31ed	                            xor ebp, ebp	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400c15c	      0xe980eaffff	                           jmp 0x400abe1	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400c161	        0x4d8d5908	                       lea r11, [r9 + 8]	       203	i386-dis.c	FUNCTION_1
0x400c165	        0x498d411c	                    lea rax, [r9 + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400c169	          0x4989f2	                            mov r10, rsi	       203	i386-dis.c	FUNCTION_1
0x400c16c	          0x4d29da	                            sub r10, r11	       203	i386-dis.c	FUNCTION_1
0x400c16f	        0x4d035120	              add r10, qword [r9 + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400c173	          0x4939c6	                            cmp r14, rax	       205	i386-dis.c	FUNCTION_1	IF_1
0x400c176	     0xf86f4010000	                           jbe 0x400c370	       205	i386-dis.c	FUNCTION_1	IF_1
0x400c17c	          0x4d89cf	                             mov r15, r9	       205	i386-dis.c	FUNCTION_1	IF_1
0x400c17f	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400c184	      0xe9acfbffff	                           jmp 0x400bd35	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400c189	      0xbb03000000	                              mov ebx, 3	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400c18e	      0x4c8b742408	                mov r14, qword [rsp + 8]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c193	      0xbe00000000	                              mov esi, 0	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c198	            0x31c0	                            xor eax, eax	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c19a	        0x498b7e08	                mov rdi, qword [r14 + 8]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c19e	          0x41ff16	                        call qword [r14]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1a1	    0x4863049d0000	               movsxd rax, dword [rbx*4]	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1a9	    0x488b3d000000	            mov rdi, qword [0x0400c1b0] 	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1b0	          0x4c89f6	                            mov rsi, r14	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1b3	    0x482b3d000000	             sub rdi, qword [0x0400c1ba]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1ba	    0x48033d000000	             add rdi, qword [0x0400c1c1]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1c1	    0x48033cc50000	                  add rdi, qword [rax*8]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1c9	    0x41ff96800000	                 call qword [r14 + 0x80]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1d0	      0xe945ecffff	                           jmp 0x400ae1a	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c1d5	      0xb800080000	                          mov eax, 0x800	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c1da	        0x4883c201	                              add rdx, 1	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c1de	    0x890500000000	            mov dword [0x0400c1e4], eax 	     12524	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c1e4	    0x448925000000	           mov dword [0x0400c1eb], r12d 	     12528	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c1eb	    0x488915000000	            mov qword [0x0400c1f2], rdx 	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c1f2	      0xe918e4ffff	                           jmp 0x400a60f	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c1f7	          0x80cc08	                                or ah, 8	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c1fa	    0x448b25000000	           mov r12d, dword [0x0400c201] 	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c201	            0xebd7	                           jmp 0x400c1da	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c203	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400c207	      0xb803000000	                              mov eax, 3	     12767	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400c20c	      0xe910f4ffff	                           jmp 0x400b621	     12767	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400c211	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	     12767	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400c215	      0xb802000000	                              mov eax, 2	     12764	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400c21a	      0xe902f4ffff	                           jmp 0x400b621	     12764	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400c21f	    0x41b902000000	                              mov r9d, 2	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400c225	      0xbf02000000	                              mov edi, 2	     12793	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x400c22a	      0xb803000000	                              mov eax, 3	     12792	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x400c22f	      0xe963f7ffff	                           jmp 0x400b997	     12792	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x400c234	    0x833d00000000	               cmp dword [0x0400c23b], 3	     13156	i386-dis.c	FUNCTION_9	IF_1
0x400c23b	     0xf8402040000	                            je 0x400c643	     13156	i386-dis.c	FUNCTION_9	IF_1
0x400c241	    0x833d00000000	               cmp dword [0x0400c248], 4	     13157	i386-dis.c	FUNCTION_9	IF_1
0x400c248	     0xf84b4030000	                            je 0x400c602	     13157	i386-dis.c	FUNCTION_9	IF_1
0x400c24e	      0x410fb656ff	               movzx edx, byte [r14 - 1]	     13918	i386-dis.c	FUNCTION_13
0x400c253	    0x8b0500000000	            mov eax, dword [0x0400c259] 	     13922	i386-dis.c	FUNCTION_13	IF_1
0x400c259	          0x4489ee	                           mov esi, r13d	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400c25c	    0x448da4d040f9	         lea r12d, [rax + rdx*8 - 0x6c0]	     13922	i386-dis.c	FUNCTION_13	IF_1
0x400c264	          0x4d63e4	                        movsxd r12, r12d	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400c267	    0x4a8b3ce50000	                  mov rdi, qword [r12*8]	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400c26f	      0xe88c3fffff	                          call sym.putop	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400c274	    0x410fb6bc2400	                   movzx edi, byte [r12]	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400c27d	          0x4489ee	                           mov esi, r13d	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400c280	    0x48c705000000	               mov qword [0x0400c28b], 0	     13925	i386-dis.c	FUNCTION_13	IF_1
0x400c28b	    0xc70500000000	               mov dword [0x0400c295], 2	     13926	i386-dis.c	FUNCTION_13	IF_1
0x400c295	      0xe886beffff	                           call sym.OP_E	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400c29a	      0xe9a3e4ffff	                           jmp 0x400a742	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x400c29f	          0x4889c2	                            mov rdx, rax	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400c2a2	      0xe923eaffff	                           jmp 0x400acca	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x400c2a7	          0x4c89fa	                            mov rdx, r15	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2aa	      0x4c89442478	              mov qword [rsp + 0x78], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2af	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2b2	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2b5	          0x4c89f7	                            mov rdi, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2b8	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2bd	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c2bf	      0x4c8b442478	              mov r8, qword [rsp + 0x78]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c2c4	     0xf8501020000	                           jne 0x400c4cb	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c2ca	        0x4c897d00	                    mov qword [rbp], r15	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c2ce	    0x4c8b35000000	            mov r14, qword [0x0400c2d5] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c2d5	      0xe94af0ffff	                           jmp 0x400b324	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c2da	          0x4c89f2	                            mov rdx, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2dd	      0x4c895c2470	             mov qword [rsp + 0x70], r11	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2e2	      0x4c89442468	              mov qword [rsp + 0x68], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2e7	    0x44898c248800	             mov dword [rsp + 0x88], r9d	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2ef	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2f2	          0x4c89d7	                            mov rdi, r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2f5	      0x4c89542460	             mov qword [rsp + 0x60], r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2fa	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c2fd	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c302	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c304	      0x4c8b542460	            mov r10, qword [rsp + 0x60] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c309	    0x4c638c248800	          movsxd r9, dword [rsp + 0x88] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c311	      0x4c8b442468	              mov r8, qword [rsp + 0x68]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c316	      0x4c8b5c2470	            mov r11, qword [rsp + 0x70] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c31b	     0xf85d6020000	                           jne 0x400c5f7	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c321	          0x4d8930	                     mov qword [r8], r14	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c324	    0x488b05000000	            mov rax, qword [0x0400c32b] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c32b	      0xe96bf2ffff	                           jmp 0x400b59b	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c330	    0x48817d380000	               cmp qword [rbp + 0x38], 0	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400c338	     0xf85adf5ffff	                           jne 0x400b8eb	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400c33e	      0x48837d4800	               cmp qword [rbp + 0x48], 0	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400c343	     0xf85a2f5ffff	                           jne 0x400b8eb	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400c349	    0x48c784241001	              mov qword [rsp + 0x110], 0	     13544	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400c355	    0x48c784241801	              mov qword [rsp + 0x118], 0	     13545	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400c361	      0xe985f5ffff	                           jmp 0x400b8eb	     13545	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400c366	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     13545	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x400c370	          0x4c89f2	                            mov rdx, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c373	    0x4c899c249800	             mov qword [rsp + 0x98], r11	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c37b	    0x4c898c249000	              mov qword [rsp + 0x90], r9	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c383	    0x448984248c00	             mov dword [rsp + 0x8c], r8d	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c38b	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c38e	          0x4c89d7	                            mov rdi, r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c391	    0x4c8994248000	             mov qword [rsp + 0x80], r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c399	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c39c	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c3a1	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c3a3	    0x4c8b94248000	            mov r10, qword [rsp + 0x80] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c3ab	    0x4c6384248c00	          movsxd r8, dword [rsp + 0x8c] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c3b3	    0x4c8b8c249000	              mov r9, qword [rsp + 0x90]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c3bb	    0x4c8b9c249800	            mov r11, qword [rsp + 0x98] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c3c3	     0xf85eb020000	                           jne 0x400c6b4	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c3c9	          0x4d8931	                     mov qword [r9], r14	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c3cc	    0x488b0d000000	            mov rcx, qword [0x0400c3d3] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c3d3	      0xe963f6ffff	                           jmp 0x400ba3b	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c3d8	          0x4c89f2	                            mov rdx, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c3db	    0x4c899c24e800	             mov qword [rsp + 0xe8], r11	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c3e3	    0x4c898c24e000	              mov qword [rsp + 0xe0], r9	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c3eb	    0x44898424dc00	             mov dword [rsp + 0xdc], r8d	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c3f3	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c3f6	          0x4c89d7	                            mov rdi, r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c3f9	    0x4c899424d000	             mov qword [rsp + 0xd0], r10	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c401	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c404	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c409	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c40b	    0x4c8b9424d000	            mov r10, qword [rsp + 0xd0] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c413	    0x4c638424dc00	          movsxd r8, dword [rsp + 0xdc] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c41b	    0x4c8b8c24e000	              mov r9, qword [rsp + 0xe0]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c423	    0x4c8b9c24e800	            mov r11, qword [rsp + 0xe8] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c42b	     0xf8540010000	                           jne 0x400c571	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c431	          0x4d8931	                     mov qword [r9], r14	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c434	    0x488b05000000	            mov rax, qword [0x0400c43b] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c43b	      0xe967ecffff	                           jmp 0x400b0a7	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c440	            0x31db	                            xor ebx, ebx	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c442	      0xe947fdffff	                           jmp 0x400c18e	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x400c447	          0x4c89fa	                            mov rdx, r15	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c44a	      0x4c894c2450	              mov qword [rsp + 0x50], r9	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c44f	          0x4c89c7	                             mov rdi, r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c452	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c455	      0x4c89442448	              mov qword [rsp + 0x48], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c45a	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c45d	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c462	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c464	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c469	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c46e	     0xf854b020000	                           jne 0x400c6bf	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c474	          0x4d893e	                    mov qword [r14], r15	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c477	    0x488b15000000	            mov rdx, qword [0x0400c47e] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c47e	      0xe9e3f1ffff	                           jmp 0x400b666	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c483	          0x4c89c2	                             mov rdx, r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c486	    0x4c898c24a800	              mov qword [rsp + 0xa8], r9	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c48e	    0x4c898424a000	              mov qword [rsp + 0xa0], r8	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c496	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c499	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c49c	          0x4c89f7	                            mov rdi, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c49f	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400c4a4	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c4a6	    0x4c8b8424a000	              mov r8, qword [rsp + 0xa0]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c4ae	    0x4c8b8c24a800	              mov r9, qword [rsp + 0xa8]	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c4b6	     0xf85f0010000	                           jne 0x400c6ac	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400c4bc	          0x4d8907	                     mov qword [r15], r8	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c4bf	    0x4c8b35000000	            mov r14, qword [0x0400c4c6] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c4c6	      0xe923edffff	                           jmp 0x400b1ee	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c4cb	        0x488b7500	                    mov rsi, qword [rbp]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c4cf	      0xe9f1f5ffff	                           jmp 0x400bac5	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400c4d4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c4d9	      0xe8e256ffff	                     call sym.fetch_data	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c4de	    0x488b05000000	            mov rax, qword [0x0400c4e5] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c4e5	      0xe91cfbffff	                           jmp 0x400c006	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c4ea	    0x486305000000	         movsxd rax, dword [0x0400c4f1] 	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400c4f1	    0x486389000000	                 movsxd rcx, dword [rcx]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400c4f8	          0x4489ee	                           mov esi, r13d	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400c4fb	        0x8854243f	               mov byte [rsp + 0x3f], dl	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400c4ff	        0x488d04c8	                  lea rax, [rax + rcx*8]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400c503	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400c50b	      0xe8f03cffff	                          call sym.putop	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400c510	       0xfb654243f	           movzx edx, byte [rsp + 0x3f] 	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400c515	          0x80fadf	                            cmp dl, 0xdf	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400c518	     0xf8524e2ffff	                           jne 0x400a742	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400c51e	        0x41803ee0	                    cmp byte [r14], 0xe0	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400c522	     0xf851ae2ffff	                           jne 0x400a742	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400c528	    0x488b05000000	            mov rax, qword [0x0400c52f] 	       110	string3.h	FUNCTION_107	CALL_3
0x400c52f	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_107	CALL_3
0x400c534	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x400c539	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_107	CALL_3
0x400c53c	      0xe800000000	                          call 0x400c541	       110	string3.h	FUNCTION_107	CALL_3
0x400c541	      0xe9fce1ffff	                           jmp 0x400a742	       110	string3.h	FUNCTION_107	CALL_3
0x400c546	        0x488b7500	                    mov rsi, qword [rbp]	       110	string3.h	FUNCTION_107	CALL_3
0x400c54a	      0xe902e9ffff	                           jmp 0x400ae51	       110	string3.h	FUNCTION_107	CALL_3
0x400c54f	        0x488b7500	                    mov rsi, qword [rbp]	       110	string3.h	FUNCTION_107	CALL_3
0x400c553	      0xe978e0ffff	                           jmp 0x400a5d0	       110	string3.h	FUNCTION_107	CALL_3
0x400c558	      0xe800000000	                          call 0x400c55d	     13586	i386-dis.c	FUNCTION_10
0x400c55d	      0xbb02000000	                              mov ebx, 2	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400c562	      0xe927fcffff	                           jmp 0x400c18e	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400c567	      0xbb01000000	                              mov ebx, 1	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400c56c	      0xe91dfcffff	                           jmp 0x400c18e	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400c571	          0x498b31	                     mov rsi, qword [r9]	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400c574	      0xe913faffff	                           jmp 0x400bf8c	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x400c579	    0x8b0500000000	            mov eax, dword [0x0400c57f] 	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x400c57f	            0x85c0	                           test eax, eax	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x400c581	     0xf8455f7ffff	                            je 0x400bcdc	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x400c587	    0x448b1d000000	           mov r11d, dword [0x0400c58e] 	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x400c58e	          0x4585db	                         test r11d, r11d	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x400c591	            0x7442	                            je 0x400c5d5	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x400c593	    0x488b05000000	            mov rax, qword [0x0400c59a] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c59a	    0x41b97b000000	                           mov r9d, 0x7b	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5a0	    0x488b15000000	            mov rdx, qword [0x0400c5a7] 	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400c5a7	        0x66448908	                     mov word [rax], r9w	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400c5ab	    0x48630d000000	         movsxd rcx, dword [0x0400c5b2] 	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400c5b2	        0x488d7801	                      lea rdi, [rax + 1]	       117	string3.h	FUNCTION_108	CALL_3
0x400c5b6	        0x488b34ca	            mov rsi, qword [rdx + rcx*8]	       117	string3.h	FUNCTION_108	CALL_3
0x400c5ba	      0xe800000000	                          call 0x400c5bf	       117	string3.h	FUNCTION_108	CALL_3
0x400c5bf	    0x41ba7d000000	                          mov r10d, 0x7d	       117	string3.h	FUNCTION_108	CALL_3
0x400c5c5	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5c9	      0x66448950ff	                mov word [rax - 1], r10w	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5ce	    0x488905000000	            mov qword [0x0400c5d5], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5d5	    0x448b05000000	            mov r8d, dword [0x0400c5dc] 	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x400c5dc	          0x4585c0	                           test r8d, r8d	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x400c5df	     0xf84f7f6ffff	                            je 0x400bcdc	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x400c5e5	    0x488b05000000	            mov rax, qword [0x0400c5ec] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5ec	    0xc7007b7a7d00	               mov dword [rax], 0x7d7a7b	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5f2	      0xe9e5f6ffff	                           jmp 0x400bcdc	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5f7	          0x4d89c7	                             mov r15, r8	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5fa	          0x498b30	                     mov rsi, qword [r8]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c5fd	      0xe933f7ffff	                           jmp 0x400bd35	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400c602	      0x488b442408	                mov rax, qword [rsp + 8]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c607	        0x498d7602	                      lea rsi, [r14 + 2]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c60b	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c60f	          0x483b30	                    cmp rsi, qword [rax]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c612	            0x7739	                            ja 0x400c64d	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c614	      0x410fb64601	               movzx eax, byte [r14 + 1]	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c619	            0x89c2	                            mov edx, eax	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c61b	          0xc0ea03	                               shr dl, 3	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c61e	          0x83e207	                              and edx, 7	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c621	    0x891500000000	            mov dword [0x0400c627], edx 	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c627	            0x89c2	                            mov edx, eax	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c629	          0x83e007	                              and eax, 7	     13162	i386-dis.c	FUNCTION_9	IF_1
0x400c62c	          0xc0ea06	                               shr dl, 6	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c62f	    0x890500000000	            mov dword [0x0400c635], eax 	     13162	i386-dis.c	FUNCTION_9	IF_1
0x400c635	           0xfb6d2	                           movzx edx, dl	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c638	    0x891500000000	            mov dword [0x0400c63e], edx 	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c63e	      0xe90bfcffff	                           jmp 0x400c24e	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c643	      0x410fb656ff	               movzx edx, byte [r14 - 1]	     13918	i386-dis.c	FUNCTION_13
0x400c648	      0xe93efaffff	                           jmp 0x400c08b	     13918	i386-dis.c	FUNCTION_13
0x400c64d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c652	      0xe86955ffff	                     call sym.fetch_data	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c657	    0x4c8b35000000	            mov r14, qword [0x0400c65e] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x400c65e	      0x410fb64601	               movzx eax, byte [r14 + 1]	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c663	            0x89c2	                            mov edx, eax	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c665	          0xc0ea03	                               shr dl, 3	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c668	          0x83e207	                              and edx, 7	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c66b	    0x891500000000	            mov dword [0x0400c671], edx 	     13160	i386-dis.c	FUNCTION_9	IF_1
0x400c671	            0x89c2	                            mov edx, eax	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c673	          0x83e007	                              and eax, 7	     13162	i386-dis.c	FUNCTION_9	IF_1
0x400c676	          0xc0ea06	                               shr dl, 6	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c679	    0x833d00000000	               cmp dword [0x0400c680], 3	     13920	i386-dis.c	FUNCTION_13	IF_1
0x400c680	    0x890500000000	            mov dword [0x0400c686], eax 	     13162	i386-dis.c	FUNCTION_9	IF_1
0x400c686	           0xfb6d2	                           movzx edx, dl	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c689	    0x891500000000	            mov dword [0x0400c68f], edx 	     13161	i386-dis.c	FUNCTION_9	IF_1
0x400c68f	      0x410fb656ff	               movzx edx, byte [r14 - 1]	     13918	i386-dis.c	FUNCTION_13
0x400c694	     0xf85b9fbffff	                           jne 0x400c253	     13920	i386-dis.c	FUNCTION_13	IF_1
0x400c69a	    0x803d00000000	                cmp byte [0x0400c6a1], 0	     13931	i386-dis.c	FUNCTION_13
0x400c6a1	     0xf85e4f9ffff	                           jne 0x400c08b	     13931	i386-dis.c	FUNCTION_13
0x400c6a7	      0xe96be5ffff	                           jmp 0x400ac17	     13931	i386-dis.c	FUNCTION_13
0x400c6ac	          0x498b37	                    mov rsi, qword [r15]	     13931	i386-dis.c	FUNCTION_13
0x400c6af	      0xe9a7f1ffff	                           jmp 0x400b85b	     13931	i386-dis.c	FUNCTION_13
0x400c6b4	          0x4d89cf	                             mov r15, r9	     13931	i386-dis.c	FUNCTION_13
0x400c6b7	          0x498b31	                     mov rsi, qword [r9]	     13931	i386-dis.c	FUNCTION_13
0x400c6ba	      0xe976f6ffff	                           jmp 0x400bd35	     13931	i386-dis.c	FUNCTION_13
0x400c6bf	          0x4d89c7	                             mov r15, r8	     13931	i386-dis.c	FUNCTION_13
0x400c6c2	          0x498b36	                    mov rsi, qword [r14]	     13931	i386-dis.c	FUNCTION_13
0x400c6c5	      0xe980f4ffff	                           jmp 0x400bb4a	     13931	i386-dis.c	FUNCTION_13
NOP_Fixup2	CALL,1:IF,1:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	95
0x4005c50	        0x4883ec08	                              sub rsp, 8	     16704	i386-dis.c	FUNCTION_61
0x4005c54	    0x8b1500000000	            mov edx, dword [0x04005c5a] 	     16705	i386-dis.c	FUNCTION_61	IF_1
0x4005c5a	    0x81e200020000	                          and edx, 0x200	     16705	i386-dis.c	FUNCTION_61	IF_1
0x4005c60	            0x751e	                           jne 0x4005c80	     16705	i386-dis.c	FUNCTION_61	IF_1
0x4005c62	    0x8b0500000000	            mov eax, dword [0x04005c68] 	     16707	i386-dis.c	FUNCTION_61	IF_1
0x4005c68	            0x85c0	                           test eax, eax	     16706	i386-dis.c	FUNCTION_61	IF_1
0x4005c6a	            0x740e	                            je 0x4005c7a	     16706	i386-dis.c	FUNCTION_61	IF_1
0x4005c6c	          0x83f848	                           cmp eax, 0x48	     16706	i386-dis.c	FUNCTION_61	IF_1
0x4005c6f	            0x7409	                            je 0x4005c7a	     16706	i386-dis.c	FUNCTION_61	IF_1
0x4005c71	    0x833d00000000	               cmp dword [0x04005c78], 2	     16708	i386-dis.c	FUNCTION_61	IF_1
0x4005c78	            0x7406	                            je 0x4005c80	     16708	i386-dis.c	FUNCTION_61	IF_1
0x4005c7a	        0x4883c408	                              add rsp, 8	     16710	i386-dis.c	FUNCTION_61
0x4005c7e	              0xc3	                                     ret	     16710	i386-dis.c	FUNCTION_61
0x4005c7f	              0x90	                                     nop	     16710	i386-dis.c	FUNCTION_61
0x4005c80	          0x8d47ba	                   lea eax, [rdi - 0x46]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005c83	          0x83f827	                           cmp eax, 0x27	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005c86	     0xf8704010000	                            ja 0x4005d90	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005c8c	    0xff24c5000000	                       jmp qword [rax*8]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005c93	       0xf1f440000	                   nop dword [rax + rax]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005c98	    0x803d00000000	                cmp byte [0x04005c9f], 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x4005c9f	      0xbe00000000	                              mov esi, 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x4005ca4	      0xb800000000	                              mov eax, 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x4005ca9	        0x480f45f0	                         cmovne rsi, rax	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x4005cad	    0x488b3d000000	            mov rdi, qword [0x04005cb4] 	       117	string3.h	FUNCTION_108	CALL_3
0x4005cb4	      0xe800000000	                          call 0x4005cb9	       117	string3.h	FUNCTION_108	CALL_3
0x4005cb9	    0x488905000000	            mov qword [0x04005cc0], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4005cc0	        0x4883c408	                              add rsp, 8	     16710	i386-dis.c	FUNCTION_61
0x4005cc4	              0xc3	                                     ret	     16710	i386-dis.c	FUNCTION_61
0x4005cc5	           0xf1f00	                         nop dword [rax]	     16710	i386-dis.c	FUNCTION_61
0x4005cc8	    0xf60500000000	               test byte [0x04005ccf], 8	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005ccf	     0xf8513010000	                           jne 0x4005de8	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005cd5	          0x83e601	                              and esi, 1	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005cd8	     0xf8542010000	                           jne 0x4005e20	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005cde	    0x488b05000000	            mov rax, qword [0x04005ce5] 	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x4005ce5	          0x488b30	                    mov rsi, qword [rax]	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x4005ce8	            0xeb72	                           jmp 0x4005d5c	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x4005cea	    0x660f1f440000	                    nop word [rax + rax]	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x4005cf0	    0x488b05000000	            mov rax, qword [0x04005cf7] 	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005cf7	          0x4863ff	                         movsxd rdi, edi	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005cfa	    0x488bb4f820fd	    mov rsi, qword [rax + rdi*8 - 0x2e0]	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d02	            0xeba9	                           jmp 0x4005cad	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d04	         0xf1f4000	                         nop dword [rax]	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d08	    0x8b0500000000	            mov eax, dword [0x04005d0e] 	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4005d0e	    0x830d00000000	            or dword [0x04005d15], 0x40 	     15938	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d15	          0x4863ff	                         movsxd rdi, edi	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4005d18	            0x85c0	                           test eax, eax	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4005d1a	     0xf84b0000000	                            je 0x4005dd0	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4005d20	    0x488b05000000	            mov rax, qword [0x04005d27] 	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4005d27	    0x488bb4f860fd	    mov rsi, qword [rax + rdi*8 - 0x2a0]	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4005d2f	      0xe979ffffff	                           jmp 0x4005cad	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4005d34	         0xf1f4000	                         nop dword [rax]	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4005d38	    0xf60500000000	               test byte [0x04005d3f], 8	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d3f	            0x756f	                           jne 0x4005db0	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d41	          0x83e601	                              and esi, 1	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4005d44	     0xf84b6000000	                            je 0x4005e00	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4005d4a	    0x488b05000000	            mov rax, qword [0x04005d51] 	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4005d51	          0x4863ff	                         movsxd rdi, edi	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4005d54	    0x488bb4f8a0fd	    mov rsi, qword [rax + rdi*8 - 0x260]	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4005d5c	     0x91500000000	              or dword [0x04005d62], edx	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x4005d62	      0xe946ffffff	                           jmp 0x4005cad	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x4005d67	    0x660f1f840000	                    nop word [rax + rax]	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x4005d70	    0x488b05000000	            mov rax, qword [0x04005d77] 	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d77	          0x4863ff	                         movsxd rdi, edi	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d7a	    0x488bb4f8d0fd	    mov rsi, qword [rax + rdi*8 - 0x230]	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d82	      0xe926ffffff	                           jmp 0x4005cad	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d87	    0x660f1f840000	                    nop word [rax + rax]	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d90	      0xbe00000000	                              mov esi, 0	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d95	      0xba05000000	                              mov edx, 5	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d9a	      0xbf00000000	                              mov edi, 0	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005d9f	      0xe800000000	                          call 0x4005da4	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005da4	          0x4889c6	                            mov rsi, rax	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005da7	      0xe901ffffff	                           jmp 0x4005cad	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005dac	         0xf1f4000	                         nop dword [rax]	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005db0	    0x488b05000000	            mov rax, qword [0x04005db7] 	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4005db7	          0x4863ff	                         movsxd rdi, edi	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4005dba	    0x830d00000000	            or dword [0x04005dc1], 0x48 	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x4005dc1	    0x488bb4f8a0fd	    mov rsi, qword [rax + rdi*8 - 0x260]	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4005dc9	      0xe9dffeffff	                           jmp 0x4005cad	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4005dce	            0x6690	                                     nop	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4005dd0	    0x488b05000000	            mov rax, qword [0x04005dd7] 	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4005dd7	    0x488bb4f860fd	    mov rsi, qword [rax + rdi*8 - 0x2a0]	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4005ddf	      0xe9c9feffff	                           jmp 0x4005cad	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4005de4	         0xf1f4000	                         nop dword [rax]	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4005de8	    0x488b05000000	            mov rax, qword [0x04005def] 	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005def	          0x488b30	                    mov rsi, qword [rax]	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005df2	      0xe9b6feffff	                           jmp 0x4005cad	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005df7	    0x660f1f840000	                    nop word [rax + rax]	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005e00	    0x488b05000000	            mov rax, qword [0x04005e07] 	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4005e07	          0x4863ff	                         movsxd rdi, edi	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4005e0a	    0x488bb4f8a0fd	    mov rsi, qword [rax + rdi*8 - 0x260]	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4005e12	      0xe945ffffff	                           jmp 0x4005d5c	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4005e17	    0x660f1f840000	                    nop word [rax + rax]	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4005e20	    0x488b05000000	            mov rax, qword [0x04005e27] 	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005e27	          0x488b30	                    mov rsi, qword [rax]	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4005e2a	      0xe92dffffff	                           jmp 0x4005d5c	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
print_insn_i386_att	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	2
0x400c6d0	    0xc60500000000	                mov byte [0x0400c6d7], 0	     12676	i386-dis.c	FUNCTION_4
0x400c6d7	      0xe914d8ffff	                      jmp sym.print_insn	     12678	i386-dis.c	FUNCTION_4	CALL_1
print_insn_i386_intel	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	2
0x400c6e0	    0xc60500000000	                mov byte [0x0400c6e7], 1	     12684	i386-dis.c	FUNCTION_5
0x400c6e7	      0xe904d8ffff	                      jmp sym.print_insn	     12686	i386-dis.c	FUNCTION_5	CALL_1
OP_ST	CALL,1:IF,0:FOR,0:ELSE,0:WHILE,0:SWITCH,0:functions,0:DO,0	8
0x4001ca0	        0x4883ec08	                              sub rsp, 8	     13969	i386-dis.c	FUNCTION_15
0x4001ca4	    0x480fbe350000	           movsx rsi, byte [0x04001cac] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001cac	    0x488b3d000000	            mov rdi, qword [0x04001cb3] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001cb3	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4001cba	      0xe800000000	                          call 0x4001cbf	       117	string3.h	FUNCTION_108	CALL_3
0x4001cbf	    0x488905000000	            mov qword [0x04001cc6], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4001cc6	        0x4883c408	                              add rsp, 8	     13971	i386-dis.c	FUNCTION_15
0x4001cca	              0xc3	                                     ret	     13971	i386-dis.c	FUNCTION_15
OP_J	CALL,6:IF,6:FOR,0:ELSE,1:WHILE,0:SWITCH,1:functions,0:DO,0	198
0x4006210	            0x4156	                                push r14	     16141	i386-dis.c	FUNCTION_38
0x4006212	            0x4155	                                push r13	     16141	i386-dis.c	FUNCTION_38
0x4006214	            0x4154	                                push r12	     16141	i386-dis.c	FUNCTION_38
0x4006216	              0x55	                                push rbp	     16141	i386-dis.c	FUNCTION_38
0x4006217	              0x53	                                push rbx	     16141	i386-dis.c	FUNCTION_38
0x4006218	        0x4883ec30	                           sub rsp, 0x30	     16141	i386-dis.c	FUNCTION_38
0x400621c	    0x64488b042528	                mov rax, qword fs:[0x28]	     16141	i386-dis.c	FUNCTION_38
0x4006225	      0x4889442428	             mov qword [rsp + 0x28], rax	     16141	i386-dis.c	FUNCTION_38
0x400622a	            0x31c0	                            xor eax, eax	     16141	i386-dis.c	FUNCTION_38
0x400622c	          0x83ff01	                              cmp edi, 1	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x400622f	     0xf84fb000000	                            je 0x4006330	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006235	          0x83ff04	                              cmp edi, 4	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006238	            0x744e	                            je 0x4006288	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x400623a	      0xba05000000	                              mov edx, 5	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x400623f	      0xbe00000000	                              mov esi, 0	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4006244	      0xbf00000000	                              mov edi, 0	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4006249	      0xe800000000	                          call 0x400624e	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x400624e	    0x488b3d000000	            mov rdi, qword [0x04006255] 	       117	string3.h	FUNCTION_108	CALL_3
0x4006255	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x4006258	      0xe800000000	                          call 0x400625d	       117	string3.h	FUNCTION_108	CALL_3
0x400625d	    0x488905000000	            mov qword [0x04006264], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006264	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     16187	i386-dis.c	FUNCTION_38
0x4006269	    0x644833042528	                xor rax, qword fs:[0x28]	     16187	i386-dis.c	FUNCTION_38
0x4006272	     0xf8509030000	                           jne 0x4006581	     16187	i386-dis.c	FUNCTION_38
0x4006278	        0x4883c430	                           add rsp, 0x30	     16187	i386-dis.c	FUNCTION_38
0x400627c	              0x5b	                                 pop rbx	     16187	i386-dis.c	FUNCTION_38
0x400627d	              0x5d	                                 pop rbp	     16187	i386-dis.c	FUNCTION_38
0x400627e	            0x415c	                                 pop r12	     16187	i386-dis.c	FUNCTION_38
0x4006280	            0x415d	                                 pop r13	     16187	i386-dis.c	FUNCTION_38
0x4006282	            0x415e	                                 pop r14	     16187	i386-dis.c	FUNCTION_38
0x4006284	              0xc3	                                     ret	     16187	i386-dis.c	FUNCTION_38
0x4006285	           0xf1f00	                         nop dword [rax]	     16187	i386-dis.c	FUNCTION_38
0x4006288	    0x8b0500000000	            mov eax, dword [0x0400628e] 	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x400628e	            0x85c0	                           test eax, eax	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4006290	            0x7510	                           jne 0x40062a2	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4006292	    0xf60500000000	               test byte [0x04006299], 8	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4006299	            0x7407	                            je 0x40062a2	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x400629b	    0x830d00000000	            or dword [0x040062a2], 0x48 	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x40062a2	          0x83e601	                              and esi, 1	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40062a5	     0xf8595010000	                           jne 0x4006440	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40062ab	    0x833d00000000	               cmp dword [0x040062b2], 2	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40062b2	     0xf8470010000	                            je 0x4006428	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40062b8	      0xe883daffff	                          call sym.get16	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x40062bd	          0x4863f0	                         movsxd rsi, eax	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x40062c0	          0xf6c480	                           test ah, 0x80	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40062c3	    0x488d960000ff	                lea rdx, [rsi - 0x10000]	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40062ca	        0x480f45f2	                         cmovne rsi, rdx	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40062ce	    0xf60500000000	               test byte [0x040062d5], 2	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40062d5	     0xf855d020000	                           jne 0x4006538	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40062db	    0x488b1d000000	            mov rbx, qword [0x040062e2] 	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40062e2	    0x488b0d000000	            mov rcx, qword [0x040062e9] 	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40062e9	      0xbaffff0000	                         mov edx, 0xffff	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40062ee	          0x4889d8	                            mov rax, rbx	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40062f1	    0x482b05000000	             sub rax, qword [0x040062f8]	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40062f8	        0x4c8d0408	                     lea r8, [rax + rcx]	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40062fc	          0x4c89c0	                             mov rax, r8	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40062ff	          0x6631c0	                              xor ax, ax	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4006302	    0x8b3d00000000	            mov edi, dword [0x04006308] 	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006308	          0x83ff02	                              cmp edi, 2	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400630b	     0xf84ff010000	                            je 0x4006510	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006311	    0x448b0d000000	            mov r9d, dword [0x04006318] 	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006318	    0x4181e1000200	                          and r9d, 0x200	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400631f	    0x44090d000000	              or dword [0x04006326], r9d	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006326	            0xeb55	                           jmp 0x400637d	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006328	     0xf1f84000000	                   nop dword [rax + rax]	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006330	    0x4c8b25000000	            mov r12, qword [0x04006337] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006337	    0x488b05000000	            mov rax, qword [0x0400633e] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400633e	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006343	        0x488d5801	                      lea rbx, [rax + 1]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006347	        0x488b7500	                    mov rsi, qword [rbp]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400634b	          0x4839f3	                            cmp rbx, rsi	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400634e	     0xf8784010000	                            ja 0x40064d8	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006354	           0xfb630	                   movzx esi, byte [rax]	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006357	    0x48891d000000	            mov qword [0x0400635e], rbx 	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x400635e	          0x4084f6	                           test sil, sil	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4006361	     0xf8899000000	                            js 0x4006400	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4006367	    0x8b3d00000000	            mov edi, dword [0x0400636d] 	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x400636d	    0x488b0d000000	            mov rcx, qword [0x04006374] 	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4006374	            0x31c0	                            xor eax, eax	     16144	i386-dis.c	FUNCTION_38
0x4006376	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x400637d	    0x482b1d000000	             sub rbx, qword [0x04006384]	     16183	i386-dis.c	FUNCTION_38
0x4006384	          0x4801f1	                            add rcx, rsi	     16183	i386-dis.c	FUNCTION_38
0x4006387	        0x4c8d040b	                     lea r8, [rbx + rcx]	     16183	i386-dis.c	FUNCTION_38
0x400638b	          0x4921d0	                             and r8, rdx	     16183	i386-dis.c	FUNCTION_38
0x400638e	          0x4909c0	                              or r8, rax	     16183	i386-dis.c	FUNCTION_38
0x4006391	    0x486305000000	         movsxd rax, dword [0x04006398] 	     15836	i386-dis.c	FUNCTION_32
0x4006398	          0x83ff02	                              cmp edi, 2	     15837	i386-dis.c	FUNCTION_32	IF_1
0x400639b	    0x890485000000	                  mov dword [rax*4], eax	     15836	i386-dis.c	FUNCTION_32
0x40063a2	    0x48c704c50000	                    mov qword [rax*8], 0	     15836	i386-dis.c	FUNCTION_32
0x40063ae	     0xf84b4000000	                            je 0x4006468	     15837	i386-dis.c	FUNCTION_32	IF_1
0x40063b4	          0x4489c2	                            mov edx, r8d	     15837	i386-dis.c	FUNCTION_32	IF_1
0x40063b7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40063bc	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40063c1	    0x488914c50000	                  mov qword [rax*8], rdx	        33	stdio2.h	FUNCTION_113	CALL_1
0x40063c9	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40063ce	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x40063d3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40063d5	      0xe800000000	                          call 0x40063da	        33	stdio2.h	FUNCTION_113	CALL_1
0x40063da	    0x488b3d000000	            mov rdi, qword [0x040063e1] 	       117	string3.h	FUNCTION_108	CALL_3
0x40063e1	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40063e6	      0xe800000000	                          call 0x40063eb	       117	string3.h	FUNCTION_108	CALL_3
0x40063eb	    0x488905000000	            mov qword [0x040063f2], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40063f2	      0xe96dfeffff	                           jmp 0x4006264	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40063f7	    0x660f1f840000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006400	    0x4881ee000100	                          sub rsi, 0x100	     16152	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4006407	    0x8b3d00000000	            mov edi, dword [0x0400640d] 	     16152	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x400640d	            0x31c0	                            xor eax, eax	     16144	i386-dis.c	FUNCTION_38
0x400640f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x4006416	    0x488b0d000000	            mov rcx, qword [0x0400641d] 	     16143	i386-dis.c	FUNCTION_38
0x400641d	      0xe95bffffff	                           jmp 0x400637d	     16143	i386-dis.c	FUNCTION_38
0x4006422	    0x660f1f440000	                    nop word [rax + rax]	     16143	i386-dis.c	FUNCTION_38
0x4006428	            0x85c0	                           test eax, eax	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x400642a	            0x7514	                           jne 0x4006440	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x400642c	    0xf60500000000	               test byte [0x04006433], 8	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4006433	     0xf847ffeffff	                            je 0x40062b8	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4006439	     0xf1f80000000	                         nop dword [rax]	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x4006440	      0xe8bbd9ffff	                         call sym.get32s	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4006445	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x400644c	          0x4889c6	                            mov rsi, rax	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x400644f	    0x488b1d000000	            mov rbx, qword [0x04006456] 	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4006456	            0x31c0	                            xor eax, eax	     16144	i386-dis.c	FUNCTION_38
0x4006458	    0x488b0d000000	            mov rcx, qword [0x0400645f] 	     16144	i386-dis.c	FUNCTION_38
0x400645f	      0xe99efeffff	                           jmp 0x4006302	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4006464	         0xf1f4000	                         nop dword [rax]	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4006468	    0x4c8904c50000	                   mov qword [rax*8], r8	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x4006470	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4006475	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x400647a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x400647f	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4006482	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4006484	    0xc60500000000	            mov byte [0x0400648b], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x400648b	    0xc60500000000	            mov byte [0x04006492], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4006492	      0xe800000000	                          call 0x4006497	        33	stdio2.h	FUNCTION_113	CALL_1
0x4006497	         0xfb61424	                   movzx edx, byte [rsp]	        33	stdio2.h	FUNCTION_113	CALL_1
0x400649b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x400649d	      0x488d4c2401	                      lea rcx, [rsp + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064a2	            0xeb10	                           jmp 0x40064b4	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064a4	         0xf1f4000	                         nop dword [rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064a8	         0xfb61401	             movzx edx, byte [rcx + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064ac	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064b0	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064b2	            0x7408	                            je 0x40064bc	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064b4	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064b7	          0x4863f0	                         movsxd rsi, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064ba	            0x74ec	                            je 0x40064a8	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x40064bc	          0x4801e6	                            add rsi, rsp	       110	string3.h	FUNCTION_107	CALL_3
0x40064bf	      0xba62000000	                           mov edx, 0x62	       110	string3.h	FUNCTION_107	CALL_3
0x40064c4	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x40064c9	      0xe800000000	                          call 0x40064ce	       110	string3.h	FUNCTION_107	CALL_3
0x40064ce	      0xe907ffffff	                           jmp 0x40063da	       110	string3.h	FUNCTION_107	CALL_3
0x40064d3	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_107	CALL_3
0x40064d8	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x40064dc	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x40064df	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x40064e3	          0x4c29f0	                            sub rax, r14	       203	i386-dis.c	FUNCTION_1
0x40064e6	        0x48034520	             add rax, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x40064ea	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x40064ed	          0x4989c5	                            mov r13, rax	       203	i386-dis.c	FUNCTION_1
0x40064f0	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x40064f5	            0x7661	                           jbe 0x4006558	       205	i386-dis.c	FUNCTION_1	IF_1
0x40064f7	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40064fa	     0xf848f000000	                            je 0x400658f	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006500	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006504	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006509	      0xe800000000	                          call 0x400650e	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400650e	            0x6690	                                     nop	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006510	    0x448b05000000	            mov r8d, dword [0x04006517] 	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006517	          0x4585c0	                           test r8d, r8d	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400651a	     0xf855dfeffff	                           jne 0x400637d	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006520	    0xf60500000000	               test byte [0x04006527], 8	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006527	     0xf8550feffff	                           jne 0x400637d	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400652d	      0xe9dffdffff	                           jmp 0x4006311	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006532	    0x660f1f440000	                    nop word [rax + rax]	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006538	            0x31c0	                            xor eax, eax	     16144	i386-dis.c	FUNCTION_38
0x400653a	      0xbaffff0000	                         mov edx, 0xffff	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x400653f	    0x488b1d000000	            mov rbx, qword [0x04006546] 	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4006546	    0x488b0d000000	            mov rcx, qword [0x0400654d] 	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x400654d	      0xe9b0fdffff	                           jmp 0x4006302	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4006552	    0x660f1f440000	                    nop word [rax + rax]	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4006558	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x400655b	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400655e	          0x4c89ef	                            mov rdi, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x4006561	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4006564	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4006569	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400656b	            0x7519	                           jne 0x4006586	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400656d	    0x488b05000000	            mov rax, qword [0x04006574] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4006574	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4006578	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400657c	      0xe9d3fdffff	                           jmp 0x4006354	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4006581	      0xe800000000	                          call 0x4006586	     16187	i386-dis.c	FUNCTION_38
0x4006586	        0x488b7500	                    mov rsi, qword [rbp]	     16187	i386-dis.c	FUNCTION_38
0x400658a	      0xe968ffffff	                           jmp 0x40064f7	     16187	i386-dis.c	FUNCTION_38
0x400658f	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006592	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006595	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006597	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400659c	      0xe95fffffff	                           jmp 0x4006500	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
OP_EX_VexW	CALL,3:IF,4:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	301
0x4008ba0	            0x4157	                                push r15	     17505	i386-dis.c	FUNCTION_86
0x4008ba2	            0x4156	                                push r14	     17505	i386-dis.c	FUNCTION_86
0x4008ba4	            0x4155	                                push r13	     17505	i386-dis.c	FUNCTION_86
0x4008ba6	            0x4154	                                push r12	     17505	i386-dis.c	FUNCTION_86
0x4008ba8	              0x55	                                push rbp	     17505	i386-dis.c	FUNCTION_86
0x4008ba9	              0x53	                                push rbx	     17505	i386-dis.c	FUNCTION_86
0x4008baa	        0x4883ec08	                              sub rsp, 8	     17505	i386-dis.c	FUNCTION_86
0x4008bae	    0x803d00000000	                cmp byte [0x04008bb5], 0	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4008bb5	     0xf85c5000000	                           jne 0x4008c80	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4008bbb	    0x803d00000000	                cmp byte [0x04008bc2], 0	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4008bc2	     0xf8418010000	                            je 0x4008ce0	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4008bc8	    0x488b15000000	            mov rdx, qword [0x04008bcf] 	     17512	i386-dis.c	FUNCTION_86	IF_1
0x4008bcf	    0x8b0d00000000	            mov ecx, dword [0x04008bd5] 	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4008bd5	        0x488d4201	                      lea rax, [rdx + 1]	     17512	i386-dis.c	FUNCTION_86	IF_1
0x4008bd9	            0x85c9	                           test ecx, ecx	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4008bdb	    0x488905000000	            mov qword [0x04008be2], rax 	     17512	i386-dis.c	FUNCTION_86	IF_1
0x4008be2	     0xf8520010000	                           jne 0x4008d08	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4008be8	    0x833d00000000	               cmp dword [0x04008bef], 3	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4008bef	     0xf8503010000	                           jne 0x4008cf8	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4008bf5	    0xf60500000000	               test byte [0x04008bfc], 1	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4008bfc	    0x8b0500000000	            mov eax, dword [0x04008c02] 	     17379	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4008c02	     0xf8568010000	                           jne 0x4008d70	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4008c08	            0x89c2	                            mov edx, eax	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4008c0a	          0x83e207	                              and edx, 7	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4008c0d	    0x833d00000000	               cmp dword [0x04008c14], 2	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4008c14	           0xf45c2	                         cmovne eax, edx	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4008c17	    0x8b1500000000	            mov edx, dword [0x04008c1d] 	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008c1d	    0x81fa80000000	                           cmp edx, 0x80	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008c23	     0xf84bf000000	                            je 0x4008ce8	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008c29	    0x81fa00010000	                          cmp edx, 0x100	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008c2f	     0xf85ab000000	                           jne 0x4008ce0	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008c35	    0x488b15000000	            mov rdx, qword [0x04008c3c] 	     17394	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008c3c	            0x4898	                                    cdqe	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x4008c3e	    0x488b3d000000	            mov rdi, qword [0x04008c45] 	       117	string3.h	FUNCTION_108	CALL_3
0x4008c45	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4008c49	      0xe800000000	                          call 0x4008c4e	       117	string3.h	FUNCTION_108	CALL_3
0x4008c4e	    0x488905000000	            mov qword [0x04008c55], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4008c55	    0x803d00000000	                cmp byte [0x04008c5c], 0	     17525	i386-dis.c	FUNCTION_86	IF_4
0x4008c5c	            0x7408	                            je 0x4008c66	     17525	i386-dis.c	FUNCTION_86	IF_4
0x4008c5e	    0x488305000000	               add qword [0x04008c66], 1	     17526	i386-dis.c	FUNCTION_86	IF_4
0x4008c66	    0xc60500000000	                mov byte [0x04008c6d], 1	     17527	i386-dis.c	FUNCTION_86
0x4008c6d	        0x4883c408	                              add rsp, 8	     17528	i386-dis.c	FUNCTION_86
0x4008c71	              0x5b	                                 pop rbx	     17528	i386-dis.c	FUNCTION_86
0x4008c72	              0x5d	                                 pop rbp	     17528	i386-dis.c	FUNCTION_86
0x4008c73	            0x415c	                                 pop r12	     17528	i386-dis.c	FUNCTION_86
0x4008c75	            0x415d	                                 pop r13	     17528	i386-dis.c	FUNCTION_86
0x4008c77	            0x415e	                                 pop r14	     17528	i386-dis.c	FUNCTION_86
0x4008c79	            0x415f	                                 pop r15	     17528	i386-dis.c	FUNCTION_86
0x4008c7b	              0xc3	                                     ret	     17528	i386-dis.c	FUNCTION_86
0x4008c7c	         0xf1f4000	                         nop dword [rax]	     17528	i386-dis.c	FUNCTION_86
0x4008c80	    0x8b0500000000	            mov eax, dword [0x04008c86] 	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4008c86	            0x85c0	                           test eax, eax	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4008c88	     0xf855affffff	                           jne 0x4008be8	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4008c8e	    0x833d00000000	               cmp dword [0x04008c95], 3	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4008c95	            0x7416	                            je 0x4008cad	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4008c97	          0x83e602	                              and esi, 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008c9a	     0xf85e0000000	                           jne 0x4008d80	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008ca0	    0x833d00000000	               cmp dword [0x04008ca7], 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008ca7	     0xf84d3000000	                            je 0x4008d80	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008cad	    0x4c8b25000000	            mov r12, qword [0x04008cb4] 	     17361	i386-dis.c	FUNCTION_80
0x4008cb4	    0x488b05000000	            mov rax, qword [0x04008cbb] 	     17361	i386-dis.c	FUNCTION_80
0x4008cbb	      0x498b5c2468	            mov rbx, qword [r12 + 0x68] 	     17361	i386-dis.c	FUNCTION_80
0x4008cc0	        0x488d6801	                      lea rbp, [rax + 1]	     17361	i386-dis.c	FUNCTION_80
0x4008cc4	          0x488b33	                    mov rsi, qword [rbx]	     17361	i386-dis.c	FUNCTION_80
0x4008cc7	          0x4839f5	                            cmp rbp, rsi	     17361	i386-dis.c	FUNCTION_80
0x4008cca	     0xf87b0010000	                            ja 0x4008e80	     17361	i386-dis.c	FUNCTION_80
0x4008cd0	           0xfb600	                   movzx eax, byte [rax]	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008cd3	          0xc0e804	                               shr al, 4	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008cd6	           0xfb6c0	                           movzx eax, al	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008cd9	      0xe92affffff	                           jmp 0x4008c08	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008cde	            0x6690	                                     nop	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4008ce0	      0xe800000000	                          call 0x4008ce5	     17397	i386-dis.c	FUNCTION_81	SWITCH_1	CALL_2
0x4008ce5	           0xf1f00	                         nop dword [rax]	     17397	i386-dis.c	FUNCTION_81	SWITCH_1	CALL_2
0x4008ce8	    0x488b15000000	            mov rdx, qword [0x04008cef] 	     17391	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008cef	      0xe948ffffff	                           jmp 0x4008c3c	     17391	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008cf4	         0xf1f4000	                         nop dword [rax]	     17391	i386-dis.c	FUNCTION_81	SWITCH_1
0x4008cf8	      0xe8f3dfffff	                    call sym.OP_E_memory	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x4008cfd	      0xe953ffffff	                           jmp 0x4008c55	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x4008d02	    0x660f1f440000	                    nop word [rax + rax]	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x4008d08	    0x8b0d00000000	            mov ecx, dword [0x04008d0e] 	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4008d0e	          0x83f903	                              cmp ecx, 3	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4008d11	     0xf8439010000	                            je 0x4008e50	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4008d17	          0x83e602	                              and esi, 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008d1a	     0xf85d0000000	                           jne 0x4008df0	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008d20	    0x833d00000000	               cmp dword [0x04008d27], 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008d27	     0xf84c3000000	                            je 0x4008df0	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008d2d	          0x83f901	                              cmp ecx, 1	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008d30	     0xf8495020000	                            je 0x4008fcb	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008d36	          0x83f902	                              cmp ecx, 2	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008d39	            0x7415	                            je 0x4008d50	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008d3b	            0x85c9	                           test ecx, ecx	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008d3d	     0xf850d010000	                           jne 0x4008e50	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008d43	    0x833d00000000	               cmp dword [0x04008d4a], 6	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d4a	     0xf8500010000	                           jne 0x4008e50	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d50	    0x4c8b2d000000	            mov r13, qword [0x04008d57] 	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d57	      0xbb03000000	                              mov ebx, 3	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d5c	    0x41bc02000000	                             mov r12d, 2	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d62	        0x498b6d68	            mov rbp, qword [r13 + 0x68] 	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d66	        0x488b7500	                    mov rsi, qword [rbp]	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d6a	      0xe9f8000000	                           jmp 0x4008e67	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d6f	              0x90	                                     nop	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008d70	    0x830d00000000	            or dword [0x04008d77], 0x41 	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4008d77	          0x83c008	                              add eax, 8	     17382	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4008d7a	      0xe989feffff	                           jmp 0x4008c08	     17382	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4008d7f	              0x90	                                     nop	     17382	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4008d80	    0x833d00000000	               cmp dword [0x04008d87], 4	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008d87	     0xf8520ffffff	                           jne 0x4008cad	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008d8d	    0x4c8b35000000	            mov r14, qword [0x04008d94] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008d94	    0x488b05000000	            mov rax, qword [0x04008d9b] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008d9b	        0x498b5e68	            mov rbx, qword [r14 + 0x68] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008d9f	        0x4c8d6801	                      lea r13, [rax + 1]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008da3	          0x488b33	                    mov rsi, qword [rbx]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008da6	          0x4939f5	                            cmp r13, rsi	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008da9	     0xf8621ffffff	                           jbe 0x4008cd0	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008daf	        0x4c8d6308	                      lea r12, [rbx + 8]	       203	i386-dis.c	FUNCTION_1
0x4008db3	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x4008db6	        0x488d531c	                   lea rdx, [rbx + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008dba	          0x4c29e0	                            sub rax, r12	       203	i386-dis.c	FUNCTION_1
0x4008dbd	        0x48034320	             add rax, qword [rbx + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4008dc1	          0x4939d5	                            cmp r13, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008dc4	          0x4889c5	                            mov rbp, rax	       203	i386-dis.c	FUNCTION_1
0x4008dc7	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4008dcc	     0xf8656020000	                           jbe 0x4009028	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008dd2	          0x4939f4	                            cmp r12, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008dd5	     0xf85da000000	                           jne 0x4008eb5	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008ddb	          0x4c89f2	                            mov rdx, r14	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008dde	          0x4889ee	                            mov rsi, rbp	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008de1	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008de3	        0x41ff5678	                 call qword [r14 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008de7	      0xe9c9000000	                           jmp 0x4008eb5	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008dec	         0xf1f4000	                         nop dword [rax]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008df0	    0x8b3d00000000	            mov edi, dword [0x04008df6] 	     17287	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4008df6	          0x83ff04	                              cmp edi, 4	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008df9	     0xf8411010000	                            je 0x4008f10	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008dff	    0x4c8b2d000000	            mov r13, qword [0x04008e06] 	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008e06	          0x4531e4	                          xor r12d, r12d	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008e09	    0x41b805000000	                              mov r8d, 5	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008e0f	      0xba04000000	                              mov edx, 4	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008e14	    0x41b902000000	                              mov r9d, 2	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008e1a	      0xbb01000000	                              mov ebx, 1	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008e1f	        0x498b6d68	            mov rbp, qword [r13 + 0x68] 	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008e23	        0x488b7500	                    mov rsi, qword [rbp]	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008e27	          0x83f901	                              cmp ecx, 1	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008e2a	     0xf8490010000	                            je 0x4008fc0	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008e30	          0x83f902	                              cmp ecx, 2	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008e33	     0xf8477010000	                            je 0x4008fb0	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008e39	            0x85c9	                           test ecx, ecx	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008e3b	            0x752a	                           jne 0x4008e67	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008e3d	          0x83ff05	                              cmp edi, 5	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4008e40	        0x490f44d8	                           cmove rbx, r8	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4008e44	        0x4c0f44e2	                          cmove r12, rdx	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4008e48	            0xeb1d	                           jmp 0x4008e67	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4008e4a	    0x660f1f440000	                    nop word [rax + rax]	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4008e50	    0x4c8b2d000000	            mov r13, qword [0x04008e57] 	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4008e57	      0xbb01000000	                              mov ebx, 1	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008e5c	          0x4531e4	                          xor r12d, r12d	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008e5f	        0x498b6d68	            mov rbp, qword [r13 + 0x68] 	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008e63	        0x488b7500	                    mov rsi, qword [rbp]	     17339	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2	IF_8
0x4008e67	          0x4801c3	                            add rbx, rax	     17361	i386-dis.c	FUNCTION_80
0x4008e6a	          0x4839f3	                            cmp rbx, rsi	     17361	i386-dis.c	FUNCTION_80
0x4008e6d	            0x7759	                            ja 0x4008ec8	     17361	i386-dis.c	FUNCTION_80
0x4008e6f	      0x420fb60420	             movzx eax, byte [rax + r12]	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008e74	          0xc0e804	                               shr al, 4	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008e77	           0xfb6c0	                           movzx eax, al	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008e7a	      0xe989fdffff	                           jmp 0x4008c08	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008e7f	              0x90	                                     nop	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4008e80	        0x4c8d7308	                      lea r14, [rbx + 8]	       203	i386-dis.c	FUNCTION_1
0x4008e84	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x4008e87	        0x488d531c	                   lea rdx, [rbx + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008e8b	          0x4c29f0	                            sub rax, r14	       203	i386-dis.c	FUNCTION_1
0x4008e8e	        0x48034320	             add rax, qword [rbx + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4008e92	          0x4839d5	                            cmp rbp, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008e95	          0x4989c5	                            mov r13, rax	       203	i386-dis.c	FUNCTION_1
0x4008e98	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4008e9d	     0xf86b5000000	                           jbe 0x4008f58	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008ea3	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008ea6	            0x750d	                           jne 0x4008eb5	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008ea8	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008eab	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008eae	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008eb0	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008eb5	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4008eb9	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4008ebe	      0xe800000000	                          call 0x4008ec3	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4008ec3	       0xf1f440000	                   nop dword [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4008ec8	        0x4c8d7d08	                      lea r15, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4008ecc	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x4008ecf	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008ed3	          0x4c29f8	                            sub rax, r15	       203	i386-dis.c	FUNCTION_1
0x4008ed6	        0x48034520	             add rax, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4008eda	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008edd	          0x4989c6	                            mov r14, rax	       203	i386-dis.c	FUNCTION_1
0x4008ee0	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4008ee5	     0xf8695000000	                           jbe 0x4008f80	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008eeb	          0x4939f7	                            cmp r15, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008eee	            0x750c	                           jne 0x4008efc	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008ef0	          0x4c89ea	                            mov rdx, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008ef3	          0x4c89f6	                            mov rsi, r14	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008ef6	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008ef8	        0x41ff5578	                 call qword [r13 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4008efc	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4008f00	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4008f05	      0xe800000000	                          call 0x4008f0a	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4008f0a	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4008f10	    0x4c8b2d000000	            mov r13, qword [0x04008f17] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f17	        0x488d5a02	                      lea rbx, [rdx + 2]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f1b	        0x498b6d68	            mov rbp, qword [r13 + 0x68] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f1f	        0x488b7500	                    mov rsi, qword [rbp]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f23	          0x4839f3	                            cmp rbx, rsi	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f26	     0xf87be000000	                            ja 0x4008fea	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f2c	           0xfb638	                   movzx edi, byte [rax]	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f2f	    0x41bc01000000	                             mov r12d, 1	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f35	    0x41b806000000	                              mov r8d, 6	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f3b	      0xba05000000	                              mov edx, 5	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f40	    0x41b903000000	                              mov r9d, 3	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f46	      0xbb02000000	                              mov ebx, 2	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f4b	          0x83e707	                              and edi, 7	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f4e	      0xe9d4feffff	                           jmp 0x4008e27	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f53	       0xf1f440000	                   nop dword [rax + rax]	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4008f58	          0x4889ea	                            mov rdx, rbp	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f5b	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f5e	          0x4c89ef	                            mov rdi, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f61	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f64	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f69	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4008f6b	     0xf851e010000	                           jne 0x400908f	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4008f71	          0x48892b	                    mov qword [rbx], rbp	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008f74	    0x488b05000000	            mov rax, qword [0x04008f7b] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008f7b	      0xe950fdffff	                           jmp 0x4008cd0	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008f80	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f83	          0x4c89e9	                            mov rcx, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f86	          0x4c89f7	                            mov rdi, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f89	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f8c	        0x41ff5570	                 call qword [r13 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4008f90	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4008f92	     0xf85e5000000	                           jne 0x400907d	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4008f98	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008f9c	    0x488b05000000	            mov rax, qword [0x04008fa3] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008fa3	      0xe9c7feffff	                           jmp 0x4008e6f	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008fa8	     0xf1f84000000	                   nop dword [rax + rax]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4008fb0	          0x4c89c3	                             mov rbx, r8	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008fb3	          0x4989d4	                            mov r12, rdx	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008fb6	      0xe9acfeffff	                           jmp 0x4008e67	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008fbb	       0xf1f440000	                   nop dword [rax + rax]	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008fc0	          0x4989dc	                            mov r12, rbx	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008fc3	          0x4c89cb	                             mov rbx, r9	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008fc6	      0xe99cfeffff	                           jmp 0x4008e67	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008fcb	    0x4c8b2d000000	            mov r13, qword [0x04008fd2] 	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4008fd2	      0xbb02000000	                              mov ebx, 2	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008fd7	    0x41bc01000000	                             mov r12d, 1	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008fdd	        0x498b6d68	            mov rbp, qword [r13 + 0x68] 	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008fe1	        0x488b7500	                    mov rsi, qword [rbp]	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008fe5	      0xe97dfeffff	                           jmp 0x4008e67	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4008fea	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4008fee	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x4008ff1	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008ff5	          0x4c29f0	                            sub rax, r14	       203	i386-dis.c	FUNCTION_1
0x4008ff8	        0x48034520	             add rax, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4008ffc	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4008fff	          0x4989c4	                            mov r12, rax	       203	i386-dis.c	FUNCTION_1
0x4009002	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4009007	            0x763b	                           jbe 0x4009044	       205	i386-dis.c	FUNCTION_1	IF_1
0x4009009	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400900c	     0xf85eafeffff	                           jne 0x4008efc	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4009012	          0x4c89ea	                            mov rdx, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4009015	          0x4c89e6	                            mov rsi, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4009018	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400901a	        0x41ff5578	                 call qword [r13 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400901e	      0xe9d9feffff	                           jmp 0x4008efc	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4009023	       0xf1f440000	                   nop dword [rax + rax]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4009028	          0x4c89ea	                            mov rdx, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x400902b	          0x4c89f1	                            mov rcx, r14	       206	i386-dis.c	FUNCTION_1	IF_1
0x400902e	          0x4889ef	                            mov rdi, rbp	       206	i386-dis.c	FUNCTION_1	IF_1
0x4009031	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4009034	        0x41ff5670	                 call qword [r14 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4009038	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400903a	            0x755b	                           jne 0x4009097	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400903c	          0x4c892b	                    mov qword [rbx], r13	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400903f	      0xe969fcffff	                           jmp 0x4008cad	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009044	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4009047	          0x4c89e9	                            mov rcx, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x400904a	          0x4c89e7	                            mov rdi, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x400904d	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4009050	        0x41ff5570	                 call qword [r13 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4009054	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4009056	            0x752e	                           jne 0x4009086	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4009058	    0x4c8b2d000000	            mov r13, qword [0x0400905f] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x400905f	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009063	    0x488b05000000	            mov rax, qword [0x0400906a] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400906a	    0x8b0d00000000	            mov ecx, dword [0x04009070] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009070	        0x498b6d68	            mov rbp, qword [r13 + 0x68] 	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009074	        0x488b7500	                    mov rsi, qword [rbp]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009078	      0xe9affeffff	                           jmp 0x4008f2c	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400907d	        0x488b7500	                    mov rsi, qword [rbp]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009081	      0xe965feffff	                           jmp 0x4008eeb	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009086	        0x488b7500	                    mov rsi, qword [rbp]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400908a	      0xe97affffff	                           jmp 0x4009009	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400908f	          0x488b33	                    mov rsi, qword [rbx]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009092	      0xe90cfeffff	                           jmp 0x4008ea3	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4009097	          0x488b33	                    mov rsi, qword [rbx]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400909a	      0xe933fdffff	                           jmp 0x4008dd2	       223	i386-dis.c	FUNCTION_1	ELSE_2
OP_0f07	CALL,2:IF,1:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	22
0x4009a50	    0x833d00000000	               cmp dword [0x04009a57], 3	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4009a57	            0x750a	                           jne 0x4009a63	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4009a59	    0x8b0d00000000	            mov ecx, dword [0x04009a5f] 	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4009a5f	            0x85c9	                           test ecx, ecx	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4009a61	            0x743d	                            je 0x4009aa0	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4009a63	    0x488b05000000	            mov rax, qword [0x04009a6a] 	     16917	i386-dis.c	FUNCTION_67
0x4009a6a	      0xba29000000	                           mov edx, 0x29	     16917	i386-dis.c	FUNCTION_67
0x4009a6f	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x4009a73	    0x488905000000	            mov qword [0x04009a7a], rax 	     16917	i386-dis.c	FUNCTION_67
0x4009a7a	    0x488b05000000	            mov rax, qword [0x04009a81] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009a81	    0xc70028626164	            mov dword [rax], 0x64616228 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009a87	        0x66895004	                  mov word [rax + 4], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009a8b	        0x4883c005	                              add rax, 5	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009a8f	    0x488905000000	            mov qword [0x04009a96], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009a96	              0xc3	                                     ret	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009a97	    0x660f1f840000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009aa0	    0x803d00000000	                cmp byte [0x04009aa7], 0	     15667	i386-dis.c	FUNCTION_26
0x4009aa7	            0x740d	                            je 0x4009ab6	     15667	i386-dis.c	FUNCTION_26
0x4009aa9	    0x488305000000	               add qword [0x04009ab1], 1	     15668	i386-dis.c	FUNCTION_26
0x4009ab1	      0xe99a8effff	                   jmp sym.OP_E_register	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x4009ab6	              0x50	                                push rax	     16680	i386-dis.c	FUNCTION_59
0x4009ab7	      0xe800000000	                          call 0x4009abc	     15667	i386-dis.c	FUNCTION_26
OP_I	CALL,9:IF,4:FOR,0:ELSE,2:WHILE,0:SWITCH,1:functions,0:DO,0	195
0x40065b0	            0x4156	                                push r14	     15975	i386-dis.c	FUNCTION_35
0x40065b2	            0x4155	                                push r13	     15975	i386-dis.c	FUNCTION_35
0x40065b4	            0x4154	                                push r12	     15975	i386-dis.c	FUNCTION_35
0x40065b6	              0x55	                                push rbp	     15975	i386-dis.c	FUNCTION_35
0x40065b7	              0x53	                                push rbx	     15975	i386-dis.c	FUNCTION_35
0x40065b8	        0x4883ec30	                           sub rsp, 0x30	     15975	i386-dis.c	FUNCTION_35
0x40065bc	    0x64488b042528	                mov rax, qword fs:[0x28]	     15975	i386-dis.c	FUNCTION_35
0x40065c5	      0x4889442428	             mov qword [rsp + 0x28], rax	     15975	i386-dis.c	FUNCTION_35
0x40065ca	            0x31c0	                            xor eax, eax	     15975	i386-dis.c	FUNCTION_35
0x40065cc	          0x83ff28	                           cmp edi, 0x28	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065cf	     0xf87c3010000	                            ja 0x4006798	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065d5	            0x89ff	                            mov edi, edi	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065d7	    0xff24fd000000	                       jmp qword [rdi*8]	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065de	            0x6690	                                     nop	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065e0	    0x833d00000000	               cmp dword [0x040065e7], 2	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x40065e7	            0x7410	                            je 0x40065f9	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x40065e9	    0xf60500000000	               test byte [0x040065f0], 8	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065f0	            0x741e	                            je 0x4006610	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065f2	    0x830d00000000	            or dword [0x040065f9], 0x48 	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065f9	      0xe802d8ffff	                         call sym.get32s	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x40065fe	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     15977	i386-dis.c	FUNCTION_35
0x4006605	          0x4989c0	                             mov r8, rax	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x4006608	      0xe9a7000000	                           jmp 0x40066b4	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x400660d	           0xf1f00	                         nop dword [rax]	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x4006610	          0x83e601	                              and esi, 1	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x4006613	     0xf8457010000	                            je 0x4006770	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x4006619	    0x4c8b25000000	            mov r12, qword [0x04006620] 	     15798	i386-dis.c	FUNCTION_29
0x4006620	    0x488b3d000000	            mov rdi, qword [0x04006627] 	     15798	i386-dis.c	FUNCTION_29
0x4006627	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     15798	i386-dis.c	FUNCTION_29
0x400662c	        0x488d5f04	                      lea rbx, [rdi + 4]	     15798	i386-dis.c	FUNCTION_29
0x4006630	        0x488b7500	                    mov rsi, qword [rbp]	     15798	i386-dis.c	FUNCTION_29
0x4006634	          0x4839f3	                            cmp rbx, rsi	     15798	i386-dis.c	FUNCTION_29
0x4006637	     0xf8743020000	                            ja 0x4006880	     15798	i386-dis.c	FUNCTION_29
0x400663d	      0x440fb64701	               movzx r8d, byte [rdi + 1]	     15801	i386-dis.c	FUNCTION_29
0x4006642	         0xfb64702	               movzx eax, byte [rdi + 2]	     15801	i386-dis.c	FUNCTION_29
0x4006646	      0xbaffffffff	                     mov edx, 0xffffffff	     16002	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x400664b	           0xfb637	                   movzx esi, byte [rdi]	     15799	i386-dis.c	FUNCTION_29
0x400664e	    0x48891d000000	            mov qword [0x04006655], rbx 	     15802	i386-dis.c	FUNCTION_29
0x4006655	        0x49c1e008	                               shl r8, 8	     15801	i386-dis.c	FUNCTION_29
0x4006659	        0x48c1e010	                           shl rax, 0x10	     15801	i386-dis.c	FUNCTION_29
0x400665d	          0x4909c0	                              or r8, rax	     15801	i386-dis.c	FUNCTION_29
0x4006660	          0x4c89c1	                             mov rcx, r8	     15801	i386-dis.c	FUNCTION_29
0x4006663	      0x440fb64703	               movzx r8d, byte [rdi + 3]	     15802	i386-dis.c	FUNCTION_29
0x4006668	          0x4809f1	                             or rcx, rsi	     15801	i386-dis.c	FUNCTION_29
0x400666b	        0x49c1e018	                            shl r8, 0x18	     15802	i386-dis.c	FUNCTION_29
0x400666f	          0x4909c8	                              or r8, rcx	     15802	i386-dis.c	FUNCTION_29
0x4006672	      0xe906010000	                           jmp 0x400677d	     15802	i386-dis.c	FUNCTION_29
0x4006677	    0x660f1f840000	                    nop word [rax + rax]	     15802	i386-dis.c	FUNCTION_29
0x4006680	    0x4c8b25000000	            mov r12, qword [0x04006687] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006687	    0x488b05000000	            mov rax, qword [0x0400668e] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400668e	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006693	        0x488d5801	                      lea rbx, [rax + 1]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006697	        0x488b7500	                    mov rsi, qword [rbp]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400669b	          0x4839f3	                            cmp rbx, rsi	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400669e	     0xf8794010000	                            ja 0x4006838	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x40066a4	        0x440fb600	                   movzx r8d, byte [rax]	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x40066a8	    0x48891d000000	            mov qword [0x040066af], rbx 	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x40066af	      0xbaff000000	                           mov edx, 0xff	     15984	i386-dis.c	FUNCTION_35	SWITCH_1
0x40066b4	          0x4921d0	                             and r8, rdx	     16025	i386-dis.c	FUNCTION_35
0x40066b7	    0x833d00000000	               cmp dword [0x040066be], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x40066be	    0xc60500000000	            mov byte [0x040066c5], 0x24 	     16026	i386-dis.c	FUNCTION_35
0x40066c5	     0xf8405010000	                            je 0x40067d0	     14624	i386-dis.c	FUNCTION_21	IF_1
0x40066cb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40066d0	      0xba63000000	                           mov edx, 0x63	        33	stdio2.h	FUNCTION_113	CALL_1
0x40066d5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40066da	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40066df	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40066e1	      0xe800000000	                          call 0x40066e6	        33	stdio2.h	FUNCTION_113	CALL_1
0x40066e6	    0x480fbe350000	           movsx rsi, byte [0x040066ee] 	       117	string3.h	FUNCTION_108	CALL_3
0x40066ee	    0x488b3d000000	            mov rdi, qword [0x040066f5] 	       117	string3.h	FUNCTION_108	CALL_3
0x40066f5	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x40066fc	      0xe800000000	                          call 0x4006701	       117	string3.h	FUNCTION_108	CALL_3
0x4006701	    0xc60500000000	                mov byte [0x04006708], 0	     16029	i386-dis.c	FUNCTION_35
0x4006708	    0x488905000000	            mov qword [0x0400670f], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400670f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     16030	i386-dis.c	FUNCTION_35
0x4006714	    0x644833042528	                xor rax, qword fs:[0x28]	     16030	i386-dis.c	FUNCTION_35
0x400671d	     0xf85ce010000	                           jne 0x40068f1	     16030	i386-dis.c	FUNCTION_35
0x4006723	        0x4883c430	                           add rsp, 0x30	     16030	i386-dis.c	FUNCTION_35
0x4006727	              0x5b	                                 pop rbx	     16030	i386-dis.c	FUNCTION_35
0x4006728	              0x5d	                                 pop rbp	     16030	i386-dis.c	FUNCTION_35
0x4006729	            0x415c	                                 pop r12	     16030	i386-dis.c	FUNCTION_35
0x400672b	            0x415d	                                 pop r13	     16030	i386-dis.c	FUNCTION_35
0x400672d	            0x415e	                                 pop r14	     16030	i386-dis.c	FUNCTION_35
0x400672f	              0xc3	                                     ret	     16030	i386-dis.c	FUNCTION_35
0x4006730	      0xe80bd6ffff	                          call sym.get16	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x4006735	      0xbaffff0f00	                        mov edx, 0xfffff	     16013	i386-dis.c	FUNCTION_35	SWITCH_1
0x400673a	          0x4c63c0	                          movsxd r8, eax	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x400673d	      0xe972ffffff	                           jmp 0x40066b4	     16015	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006742	    0x660f1f440000	                    nop word [rax + rax]	     16015	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006748	    0x803d00000000	                cmp byte [0x0400674f], 0	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x400674f	            0x74be	                            je 0x400670f	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x4006751	    0x488b05000000	            mov rax, qword [0x04006758] 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006758	      0xba31000000	                           mov edx, 0x31	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400675d	          0x668910	                      mov word [rax], dx	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006760	        0x4883c001	                              add rax, 1	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006764	    0x488905000000	            mov qword [0x0400676b], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400676b	            0xeba2	                           jmp 0x400670f	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400676d	           0xf1f00	                         nop dword [rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4006770	      0xe8cbd5ffff	                          call sym.get16	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x4006775	      0xbaffff0f00	                        mov edx, 0xfffff	     16007	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2
0x400677a	          0x4c63c0	                          movsxd r8, eax	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x400677d	    0x8b0500000000	            mov eax, dword [0x04006783] 	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4006783	      0x2500020000	                          and eax, 0x200	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4006788	     0x90500000000	              or dword [0x0400678e], eax	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x400678e	      0xe921ffffff	                           jmp 0x40066b4	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4006793	       0xf1f440000	                   nop dword [rax + rax]	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4006798	      0xba05000000	                              mov edx, 5	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x400679d	      0xbe00000000	                              mov esi, 0	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40067a2	      0xbf00000000	                              mov edi, 0	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40067a7	      0xe800000000	                          call 0x40067ac	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40067ac	    0x488b3d000000	            mov rdi, qword [0x040067b3] 	       117	string3.h	FUNCTION_108	CALL_3
0x40067b3	          0x4889c6	                            mov rsi, rax	       117	string3.h	FUNCTION_108	CALL_3
0x40067b6	      0xe800000000	                          call 0x40067bb	       117	string3.h	FUNCTION_108	CALL_3
0x40067bb	    0x488905000000	            mov qword [0x040067c2], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40067c2	      0xe948ffffff	                           jmp 0x400670f	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40067c7	    0x660f1f840000	                    nop word [rax + rax]	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x40067d0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x40067d5	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x40067da	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x40067df	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x40067e2	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40067e4	    0xc60500000000	            mov byte [0x040067eb], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x40067eb	    0xc60500000000	            mov byte [0x040067f2], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x40067f2	      0xe800000000	                          call 0x40067f7	        33	stdio2.h	FUNCTION_113	CALL_1
0x40067f7	         0xfb61424	                   movzx edx, byte [rsp]	        33	stdio2.h	FUNCTION_113	CALL_1
0x40067fb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x40067fd	      0x488d4c2401	                      lea rcx, [rsp + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4006802	            0xeb10	                           jmp 0x4006814	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4006804	         0xf1f4000	                         nop dword [rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4006808	         0xfb61401	             movzx edx, byte [rcx + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400680c	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4006810	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4006812	            0x7408	                            je 0x400681c	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4006814	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4006817	          0x4863f0	                         movsxd rsi, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400681a	            0x74ec	                            je 0x4006808	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x400681c	          0x4801e6	                            add rsi, rsp	       110	string3.h	FUNCTION_107	CALL_3
0x400681f	      0xba61000000	                           mov edx, 0x61	       110	string3.h	FUNCTION_107	CALL_3
0x4006824	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4006829	      0xe800000000	                          call 0x400682e	       110	string3.h	FUNCTION_107	CALL_3
0x400682e	      0xe9b3feffff	                           jmp 0x40066e6	       110	string3.h	FUNCTION_107	CALL_3
0x4006833	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_107	CALL_3
0x4006838	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x400683c	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x400683f	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4006843	          0x4c29f0	                            sub rax, r14	       203	i386-dis.c	FUNCTION_1
0x4006846	        0x48034520	             add rax, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400684a	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x400684d	          0x4989c5	                            mov r13, rax	       203	i386-dis.c	FUNCTION_1
0x4006850	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4006855	            0x7671	                           jbe 0x40068c8	       205	i386-dis.c	FUNCTION_1	IF_1
0x4006857	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400685a	            0x750d	                           jne 0x4006869	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400685c	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400685f	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006862	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006864	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4006869	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400686d	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006872	      0xe800000000	                          call 0x4006877	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006877	    0x660f1f840000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4006880	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4006884	          0x4889f0	                            mov rax, rsi	       203	i386-dis.c	FUNCTION_1
0x4006887	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x400688b	          0x4c29f0	                            sub rax, r14	       203	i386-dis.c	FUNCTION_1
0x400688e	        0x48034520	             add rax, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4006892	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4006895	          0x4989c5	                            mov r13, rax	       203	i386-dis.c	FUNCTION_1
0x4006898	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x400689d	            0x77b8	                            ja 0x4006857	       205	i386-dis.c	FUNCTION_1	IF_1
0x400689f	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068a2	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068a5	          0x4c89ef	                            mov rdi, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068a8	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068ab	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068b0	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40068b2	            0x7542	                           jne 0x40068f6	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40068b4	    0x488b3d000000	            mov rdi, qword [0x040068bb] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40068bb	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40068bf	        0x488d5f04	                      lea rbx, [rdi + 4]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40068c3	      0xe975fdffff	                           jmp 0x400663d	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40068c8	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068cb	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068ce	          0x4c89ef	                            mov rdi, r13	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068d1	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068d4	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x40068d9	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40068db	            0x7519	                           jne 0x40068f6	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40068dd	    0x488b05000000	            mov rax, qword [0x040068e4] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x40068e4	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40068e8	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40068ec	      0xe9b3fdffff	                           jmp 0x40066a4	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x40068f1	      0xe800000000	                          call 0x40068f6	     16030	i386-dis.c	FUNCTION_35
0x40068f6	        0x488b7500	                    mov rsi, qword [rbp]	     16030	i386-dis.c	FUNCTION_35
0x40068fa	      0xe958ffffff	                           jmp 0x4006857	     16030	i386-dis.c	FUNCTION_35
OP_Vex_2src_2	CALL,2:IF,2:FOR,0:ELSE,1:WHILE,0:SWITCH,0:functions,0:DO,0	47
0x4009ba0	        0x4883ec08	                              sub rsp, 8	     17490	i386-dis.c	FUNCTION_85
0x4009ba4	    0x8b0500000000	            mov eax, dword [0x04009baa] 	     17491	i386-dis.c	FUNCTION_85	IF_1
0x4009baa	            0x85c0	                           test eax, eax	     17491	i386-dis.c	FUNCTION_85	IF_1
0x4009bac	            0x7542	                           jne 0x4009bf0	     17491	i386-dis.c	FUNCTION_85	IF_1
0x4009bae	    0x8b0500000000	            mov eax, dword [0x04009bb4] 	     17495	i386-dis.c	FUNCTION_85	ELSE_1
0x4009bb4	            0x89c2	                            mov edx, eax	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4009bb6	          0x83e207	                              and edx, 7	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4009bb9	    0x833d00000000	               cmp dword [0x04009bc0], 2	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4009bc0	        0x480f45c2	                         cmovne rax, rdx	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4009bc4	    0x488b15000000	            mov rdx, qword [0x04009bcb] 	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4009bcb	    0x488b3d000000	            mov rdi, qword [0x04009bd2] 	       117	string3.h	FUNCTION_108	CALL_3
0x4009bd2	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4009bd6	      0xe800000000	                          call 0x4009bdb	       117	string3.h	FUNCTION_108	CALL_3
0x4009bdb	    0x488905000000	            mov qword [0x04009be2], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4009be2	        0x4883c408	                              add rsp, 8	     17501	i386-dis.c	FUNCTION_85
0x4009be6	              0xc3	                                     ret	     17501	i386-dis.c	FUNCTION_85
0x4009be7	    0x660f1f840000	                    nop word [rax + rax]	     17501	i386-dis.c	FUNCTION_85
0x4009bf0	    0x833d00000000	               cmp dword [0x04009bf7], 3	     17446	i386-dis.c	FUNCTION_83	IF_1
0x4009bf7	            0x742f	                            je 0x4009c28	     17446	i386-dis.c	FUNCTION_83	IF_1
0x4009bf9	    0x803d00000000	                cmp byte [0x04009c00], 0	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c00	            0x7408	                            je 0x4009c0a	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c02	          0x8d47fc	                      lea eax, [rdi - 4]	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c05	          0x83f801	                              cmp eax, 1	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c08	            0x7646	                           jbe 0x4009c50	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c0a	    0x803d00000000	                cmp byte [0x04009c11], 0	     15667	i386-dis.c	FUNCTION_26
0x4009c11	            0x745b	                            je 0x4009c6e	     15667	i386-dis.c	FUNCTION_26
0x4009c13	    0x488305000000	               add qword [0x04009c1b], 1	     15668	i386-dis.c	FUNCTION_26
0x4009c1b	        0x4883c408	                              add rsp, 8	     17501	i386-dis.c	FUNCTION_85
0x4009c1f	      0xe9ccd0ffff	                     jmp sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009c24	         0xf1f4000	                         nop dword [rax]	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4009c28	    0xf60500000000	               test byte [0x04009c2f], 1	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009c2f	    0x8b0500000000	            mov eax, dword [0x04009c35] 	     17448	i386-dis.c	FUNCTION_83	IF_1
0x4009c35	            0x740a	                            je 0x4009c41	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009c37	    0x830d00000000	            or dword [0x04009c3e], 0x41 	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4009c3e	          0x83c008	                              add eax, 8	     17451	i386-dis.c	FUNCTION_83	IF_1	IF_2
0x4009c41	            0x4898	                                    cdqe	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009c43	      0xe97cffffff	                           jmp 0x4009bc4	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009c48	     0xf1f84000000	                   nop dword [rax + rax]	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4009c50	    0x8b0500000000	            mov eax, dword [0x04009c56] 	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c56	      0x2500020000	                          and eax, 0x200	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c5b	          0x83f801	                              cmp eax, 1	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c5e	            0x19ff	                            sbb edi, edi	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c60	     0x90500000000	              or dword [0x04009c66], eax	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c66	          0x83e7fd	                     and edi, 0xfffffffd	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c69	          0x83c70d	                            add edi, 0xd	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c6c	            0xeb9c	                           jmp 0x4009c0a	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4009c6e	      0xe800000000	                          call 0x4009c73	     15667	i386-dis.c	FUNCTION_26
OP_REG_VexI4	CALL,3:IF,2:FOR,0:ELSE,0:WHILE,0:SWITCH,1:functions,0:DO,0	81
0x4004380	            0x4157	                                push r15	     17532	i386-dis.c	FUNCTION_87
0x4004382	            0x4156	                                push r14	     17532	i386-dis.c	FUNCTION_87
0x4004384	            0x4155	                                push r13	     17532	i386-dis.c	FUNCTION_87
0x4004386	            0x4154	                                push r12	     17532	i386-dis.c	FUNCTION_87
0x4004388	          0x4189fd	                           mov r13d, edi	     17532	i386-dis.c	FUNCTION_87
0x400438b	              0x55	                                push rbp	     17532	i386-dis.c	FUNCTION_87
0x400438c	              0x53	                                push rbx	     17532	i386-dis.c	FUNCTION_87
0x400438d	        0x4883ec08	                              sub rsp, 8	     17532	i386-dis.c	FUNCTION_87
0x4004391	    0x4c8b25000000	            mov r12, qword [0x04004398] 	     17536	i386-dis.c	FUNCTION_87
0x4004398	    0x488b05000000	            mov rax, qword [0x0400439f] 	     17536	i386-dis.c	FUNCTION_87
0x400439f	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     17536	i386-dis.c	FUNCTION_87
0x40043a4	        0x488d5801	                      lea rbx, [rax + 1]	     17536	i386-dis.c	FUNCTION_87
0x40043a8	        0x488b7500	                    mov rsi, qword [rbp]	     17536	i386-dis.c	FUNCTION_87
0x40043ac	          0x4839f3	                            cmp rbx, rsi	     17536	i386-dis.c	FUNCTION_87
0x40043af	     0xf8783000000	                            ja 0x4004438	     17536	i386-dis.c	FUNCTION_87
0x40043b5	        0x4183fd0d	                           cmp r13d, 0xd	     17539	i386-dis.c	FUNCTION_87	IF_1
0x40043b9	    0x48891d000000	            mov qword [0x040043c0], rbx 	     17537	i386-dis.c	FUNCTION_87
0x40043c0	           0xfb600	                   movzx eax, byte [rax]	     17537	i386-dis.c	FUNCTION_87
0x40043c3	            0x755b	                           jne 0x4004420	     17539	i386-dis.c	FUNCTION_87	IF_1
0x40043c5	          0xc1f804	                              sar eax, 4	     17542	i386-dis.c	FUNCTION_87
0x40043c8	            0x89c2	                            mov edx, eax	     17544	i386-dis.c	FUNCTION_87	IF_2
0x40043ca	          0x83e207	                              and edx, 7	     17544	i386-dis.c	FUNCTION_87	IF_2
0x40043cd	    0x833d00000000	               cmp dword [0x040043d4], 2	     17544	i386-dis.c	FUNCTION_87	IF_2
0x40043d4	           0xf45c2	                         cmovne eax, edx	     17544	i386-dis.c	FUNCTION_87	IF_2
0x40043d7	    0x8b1500000000	            mov edx, dword [0x040043dd] 	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x40043dd	    0x81fa80000000	                           cmp edx, 0x80	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x40043e3	            0x7443	                            je 0x4004428	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x40043e5	    0x81fa00010000	                          cmp edx, 0x100	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x40043eb	            0x7533	                           jne 0x4004420	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x40043ed	    0x488b15000000	            mov rdx, qword [0x040043f4] 	     17552	i386-dis.c	FUNCTION_87	SWITCH_1
0x40043f4	            0x4898	                                    cdqe	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x40043f6	    0x488b3d000000	            mov rdi, qword [0x040043fd] 	       117	string3.h	FUNCTION_108	CALL_3
0x40043fd	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       117	string3.h	FUNCTION_108	CALL_3
0x4004401	      0xe800000000	                          call 0x4004406	       117	string3.h	FUNCTION_108	CALL_3
0x4004406	    0x488905000000	            mov qword [0x0400440d], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x400440d	        0x4883c408	                              add rsp, 8	     17558	i386-dis.c	FUNCTION_87
0x4004411	              0x5b	                                 pop rbx	     17558	i386-dis.c	FUNCTION_87
0x4004412	              0x5d	                                 pop rbp	     17558	i386-dis.c	FUNCTION_87
0x4004413	            0x415c	                                 pop r12	     17558	i386-dis.c	FUNCTION_87
0x4004415	            0x415d	                                 pop r13	     17558	i386-dis.c	FUNCTION_87
0x4004417	            0x415e	                                 pop r14	     17558	i386-dis.c	FUNCTION_87
0x4004419	            0x415f	                                 pop r15	     17558	i386-dis.c	FUNCTION_87
0x400441b	              0xc3	                                     ret	     17558	i386-dis.c	FUNCTION_87
0x400441c	         0xf1f4000	                         nop dword [rax]	     17558	i386-dis.c	FUNCTION_87
0x4004420	      0xe800000000	                          call 0x4004425	     17555	i386-dis.c	FUNCTION_87	SWITCH_1	CALL_2
0x4004425	           0xf1f00	                         nop dword [rax]	     17555	i386-dis.c	FUNCTION_87	SWITCH_1	CALL_2
0x4004428	    0x488b15000000	            mov rdx, qword [0x0400442f] 	     17549	i386-dis.c	FUNCTION_87	SWITCH_1
0x400442f	            0xebc3	                           jmp 0x40043f4	     17550	i386-dis.c	FUNCTION_87	SWITCH_1
0x4004431	     0xf1f80000000	                         nop dword [rax]	     17550	i386-dis.c	FUNCTION_87	SWITCH_1
0x4004438	        0x4c8d7d08	                      lea r15, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x400443c	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x400443f	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004443	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4004448	          0x4c29ff	                            sub rdi, r15	       203	i386-dis.c	FUNCTION_1
0x400444b	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x400444f	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004452	          0x4989fe	                            mov r14, rdi	       203	i386-dis.c	FUNCTION_1
0x4004455	            0x7619	                           jbe 0x4004470	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004457	          0x4939f7	                            cmp r15, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400445a	            0x743a	                            je 0x4004496	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400445c	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004460	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004465	      0xe800000000	                          call 0x400446a	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x400446a	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004470	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004473	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004476	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004479	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x400447e	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004480	            0x7523	                           jne 0x40044a5	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004482	    0x488b05000000	            mov rax, qword [0x04004489] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004489	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x400448d	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004491	      0xe91fffffff	                           jmp 0x40043b5	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004496	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004499	          0x4c89f6	                            mov rsi, r14	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400449c	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400449e	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40044a3	            0xebb7	                           jmp 0x400445c	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40044a5	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x40044a9	            0xebac	                           jmp 0x4004457	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
VPCMP_Fixup	CALL,4:IF,3:FOR,0:ELSE,2:WHILE,0:SWITCH,0:functions,0:DO,0	142
0x4004dc0	            0x4156	                                push r14	     17675	i386-dis.c	FUNCTION_93
0x4004dc2	            0x4155	                                push r13	     17675	i386-dis.c	FUNCTION_93
0x4004dc4	            0x4154	                                push r12	     17675	i386-dis.c	FUNCTION_93
0x4004dc6	              0x55	                                push rbp	     17675	i386-dis.c	FUNCTION_93
0x4004dc7	              0x53	                                push rbx	     17675	i386-dis.c	FUNCTION_93
0x4004dc8	        0x4883ec30	                           sub rsp, 0x30	     17675	i386-dis.c	FUNCTION_93
0x4004dcc	    0x64488b042528	                mov rax, qword fs:[0x28]	     17675	i386-dis.c	FUNCTION_93
0x4004dd5	      0x4889442428	             mov qword [rsp + 0x28], rax	     17675	i386-dis.c	FUNCTION_93
0x4004dda	            0x31c0	                            xor eax, eax	     17675	i386-dis.c	FUNCTION_93
0x4004ddc	    0x8b0500000000	            mov eax, dword [0x04004de2] 	     17678	i386-dis.c	FUNCTION_93	IF_1
0x4004de2	            0x85c0	                           test eax, eax	     17678	i386-dis.c	FUNCTION_93	IF_1
0x4004de4	     0xf841c020000	                            je 0x4005006	     17678	i386-dis.c	FUNCTION_93	IF_1
0x4004dea	    0x4c8b25000000	            mov r12, qword [0x04004df1] 	     17681	i386-dis.c	FUNCTION_93
0x4004df1	    0x488b05000000	            mov rax, qword [0x04004df8] 	     17681	i386-dis.c	FUNCTION_93
0x4004df8	      0x498b6c2468	            mov rbp, qword [r12 + 0x68] 	     17681	i386-dis.c	FUNCTION_93
0x4004dfd	        0x488d5801	                      lea rbx, [rax + 1]	     17681	i386-dis.c	FUNCTION_93
0x4004e01	        0x488b7500	                    mov rsi, qword [rbp]	     17681	i386-dis.c	FUNCTION_93
0x4004e05	          0x4839f3	                            cmp rbx, rsi	     17681	i386-dis.c	FUNCTION_93
0x4004e08	     0xf870a010000	                            ja 0x4004f18	     17681	i386-dis.c	FUNCTION_93
0x4004e0e	        0x440fb600	                   movzx r8d, byte [rax]	     17682	i386-dis.c	FUNCTION_93
0x4004e12	    0x48891d000000	            mov qword [0x04004e19], rbx 	     17682	i386-dis.c	FUNCTION_93
0x4004e19	        0x4183f803	                              cmp r8d, 3	     17687	i386-dis.c	FUNCTION_93	IF_2
0x4004e1d	          0x4489c0	                            mov eax, r8d	     17682	i386-dis.c	FUNCTION_93
0x4004e20	     0xf8492000000	                            je 0x4004eb8	     17687	i386-dis.c	FUNCTION_93	IF_2
0x4004e26	        0x4183f806	                              cmp r8d, 6	     17687	i386-dis.c	FUNCTION_93	IF_2
0x4004e2a	     0xf8788000000	                            ja 0x4004eb8	     17687	i386-dis.c	FUNCTION_93	IF_2
0x4004e30	    0x488b05000000	            mov rax, qword [0x04004e37] 	     17690	i386-dis.c	FUNCTION_93	IF_2
0x4004e37	         0xfb650fe	               movzx edx, byte [rax - 2]	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004e3b	          0x80fa70	                            cmp dl, 0x70	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004e3e	     0xf8414010000	                            je 0x4004f58	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004e44	        0x488d78fe	                      lea rdi, [rax - 2]	     17690	i386-dis.c	FUNCTION_93	IF_2
0x4004e48	          0x881424	                      mov byte [rsp], dl	     17701	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4004e4b	         0xfb640ff	               movzx eax, byte [rax - 1]	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4004e4f	      0xc644240200	                   mov byte [rsp + 2], 0	     17703	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4004e54	        0x88442401	                  mov byte [rsp + 1], al	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4004e58	          0x4589c0	                            mov r8d, r8d	     17706	i386-dis.c	FUNCTION_93	IF_2
0x4004e5b	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004e5e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004e63	        0x49c1e004	                               shl r8, 4	     17706	i386-dis.c	FUNCTION_93	IF_2
0x4004e67	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004e6e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004e73	    0x498d98000000	                           lea rbx, [r8]	     17706	i386-dis.c	FUNCTION_93	IF_2
0x4004e7a	    0x4d8b80000000	                      mov r8, qword [r8]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004e81	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004e83	      0xe800000000	                          call 0x4004e88	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004e88	          0x8b4308	                mov eax, dword [rbx + 8]	     17707	i386-dis.c	FUNCTION_93	IF_2
0x4004e8b	    0x480105000000	            add qword [0x04004e92], rax 	     17707	i386-dis.c	FUNCTION_93	IF_2
0x4004e92	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     17717	i386-dis.c	FUNCTION_93
0x4004e97	    0x644833042528	                xor rax, qword fs:[0x28]	     17717	i386-dis.c	FUNCTION_93
0x4004ea0	     0xf8565010000	                           jne 0x400500b	     17717	i386-dis.c	FUNCTION_93
0x4004ea6	        0x4883c430	                           add rsp, 0x30	     17717	i386-dis.c	FUNCTION_93
0x4004eaa	              0x5b	                                 pop rbx	     17717	i386-dis.c	FUNCTION_93
0x4004eab	              0x5d	                                 pop rbp	     17717	i386-dis.c	FUNCTION_93
0x4004eac	            0x415c	                                 pop r12	     17717	i386-dis.c	FUNCTION_93
0x4004eae	            0x415d	                                 pop r13	     17717	i386-dis.c	FUNCTION_93
0x4004eb0	            0x415e	                                 pop r14	     17717	i386-dis.c	FUNCTION_93
0x4004eb2	              0xc3	                                     ret	     17717	i386-dis.c	FUNCTION_93
0x4004eb3	       0xf1f440000	                   nop dword [rax + rax]	     17717	i386-dis.c	FUNCTION_93
0x4004eb8	    0x833d00000000	               cmp dword [0x04004ebf], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004ebf	    0xc60500000000	            mov byte [0x04004ec6], 0x24 	     17712	i386-dis.c	FUNCTION_93	ELSE_2
0x4004ec6	     0xf84a4000000	                            je 0x4004f70	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4004ecc	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004ed1	      0xba63000000	                           mov edx, 0x63	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004ed6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004edb	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004ee0	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004ee2	      0xe800000000	                          call 0x4004ee7	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004ee7	    0x480fbe350000	           movsx rsi, byte [0x04004eef] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004eef	    0x488b3d000000	            mov rdi, qword [0x04004ef6] 	       117	string3.h	FUNCTION_108	CALL_3
0x4004ef6	    0x4881c6000000	                              add rsi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4004efd	      0xe800000000	                          call 0x4004f02	       117	string3.h	FUNCTION_108	CALL_3
0x4004f02	    0xc60500000000	                mov byte [0x04004f09], 0	     17715	i386-dis.c	FUNCTION_93	ELSE_2
0x4004f09	    0x488905000000	            mov qword [0x04004f10], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4004f10	            0xeb80	                           jmp 0x4004e92	     17717	i386-dis.c	FUNCTION_93
0x4004f12	    0x660f1f440000	                    nop word [rax + rax]	     17717	i386-dis.c	FUNCTION_93
0x4004f18	        0x4c8d7508	                      lea r14, [rbp + 8]	       203	i386-dis.c	FUNCTION_1
0x4004f1c	          0x4889f7	                            mov rdi, rsi	       203	i386-dis.c	FUNCTION_1
0x4004f1f	        0x488d551c	                   lea rdx, [rbp + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004f23	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4004f28	          0x4c29f7	                            sub rdi, r14	       203	i386-dis.c	FUNCTION_1
0x4004f2b	        0x48037d20	             add rdi, qword [rbp + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4004f2f	          0x4839d3	                            cmp rbx, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004f32	          0x4989fd	                            mov r13, rdi	       203	i386-dis.c	FUNCTION_1
0x4004f35	     0xf86a5000000	                           jbe 0x4004fe0	       205	i386-dis.c	FUNCTION_1	IF_1
0x4004f3b	          0x4939f6	                            cmp r14, rsi	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004f3e	     0xf84cc000000	                            je 0x4005010	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4004f44	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004f48	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004f4d	      0xe800000000	                          call 0x4004f52	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004f52	    0x660f1f440000	                    nop word [rax + rax]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4004f58	        0x488d78ff	                      lea rdi, [rax - 1]	     17695	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004f5c	         0xfb640ff	               movzx eax, byte [rax - 1]	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004f60	      0xc644240100	                   mov byte [rsp + 1], 0	     17697	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004f65	          0x880424	                      mov byte [rsp], al	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004f68	      0xe9ebfeffff	                           jmp 0x4004e58	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004f6d	           0xf1f00	                         nop dword [rax]	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4004f70	        0x440fb6c0	                           movzx r8d, al	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004f74	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004f79	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004f7e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004f83	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004f86	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004f88	    0xc60500000000	            mov byte [0x04004f8f], 0x30 	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004f8f	    0xc60500000000	            mov byte [0x04004f96], 0x78 	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4004f96	      0xe800000000	                          call 0x4004f9b	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004f9b	         0xfb61424	                   movzx edx, byte [rsp]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004f9f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4004fa1	      0x488d4c2401	                      lea rcx, [rsp + 1]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fa6	            0xeb14	                           jmp 0x4004fbc	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fa8	     0xf1f84000000	                   nop dword [rax + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fb0	         0xfb61401	             movzx edx, byte [rcx + rax]	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fb4	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fb8	            0x84d2	                             test dl, dl	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fba	            0x7408	                            je 0x4004fc4	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fbc	          0x80fa30	                            cmp dl, 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fbf	          0x4863f0	                         movsxd rsi, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fc2	            0x74ec	                            je 0x4004fb0	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4004fc4	          0x4801e6	                            add rsi, rsp	       110	string3.h	FUNCTION_107	CALL_3
0x4004fc7	      0xba61000000	                           mov edx, 0x61	       110	string3.h	FUNCTION_107	CALL_3
0x4004fcc	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_107	CALL_3
0x4004fd1	      0xe800000000	                          call 0x4004fd6	       110	string3.h	FUNCTION_107	CALL_3
0x4004fd6	      0xe90cffffff	                           jmp 0x4004ee7	       110	string3.h	FUNCTION_107	CALL_3
0x4004fdb	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_107	CALL_3
0x4004fe0	          0x4889da	                            mov rdx, rbx	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004fe3	          0x4c89e1	                            mov rcx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004fe6	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004fe9	      0x41ff542470	                 call qword [r12 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4004fee	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004ff0	            0x7530	                           jne 0x4005022	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004ff2	    0x488b05000000	            mov rax, qword [0x04004ff9] 	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4004ff9	        0x48895d00	                    mov qword [rbp], rbx	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4004ffd	        0x488d5801	                      lea rbx, [rax + 1]	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005001	      0xe908feffff	                           jmp 0x4004e0e	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4005006	      0xe800000000	                          call 0x400500b	     17679	i386-dis.c	FUNCTION_93	CALL_1
0x400500b	      0xe800000000	                          call 0x4005010	     17717	i386-dis.c	FUNCTION_93
0x4005010	          0x4c89e2	                            mov rdx, r12	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005013	          0x4c89ee	                            mov rsi, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005016	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005018	      0x41ff542478	                 call qword [r12 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400501d	      0xe922ffffff	                           jmp 0x4004f44	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005022	        0x488b7500	                    mov rsi, qword [rbp]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4005026	      0xe910ffffff	                           jmp 0x4004f3b	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
OP_D	CALL,1:IF,2:FOR,0:ELSE,2:WHILE,0:SWITCH,0:functions,0:DO,0	22
0x4001ed0	        0x4883ec08	                              sub rsp, 8	     16374	i386-dis.c	FUNCTION_47
0x4001ed4	          0x4531c0	                            xor r8d, r8d	     16374	i386-dis.c	FUNCTION_47
0x4001ed7	    0xf60500000000	               test byte [0x04001ede], 4	     16376	i386-dis.c	FUNCTION_47
0x4001ede	            0x740d	                            je 0x4001eed	     16376	i386-dis.c	FUNCTION_47
0x4001ee0	    0x830d00000000	            or dword [0x04001ee7], 0x44 	     16376	i386-dis.c	FUNCTION_47
0x4001ee7	    0x41b808000000	                              mov r8d, 8	     16378	i386-dis.c	FUNCTION_47	IF_1
0x4001eed	    0x440305000000	             add r8d, dword [0x04001ef4]	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001ef4	    0x803d00000000	                cmp byte [0x04001efb], 0	     16381	i386-dis.c	FUNCTION_47	IF_2
0x4001efb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f00	            0x7505	                           jne 0x4001f07	     16381	i386-dis.c	FUNCTION_47	IF_2
0x4001f02	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f07	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f0c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f11	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f16	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f18	      0xe800000000	                          call 0x4001f1d	        33	stdio2.h	FUNCTION_113	CALL_1
0x4001f1d	    0x488b3d000000	            mov rdi, qword [0x04001f24] 	       117	string3.h	FUNCTION_108	CALL_3
0x4001f24	      0xbe00000000	                              mov esi, 0	       117	string3.h	FUNCTION_108	CALL_3
0x4001f29	      0xe800000000	                          call 0x4001f2e	       117	string3.h	FUNCTION_108	CALL_3
0x4001f2e	    0x488905000000	            mov qword [0x04001f35], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4001f35	        0x4883c408	                              add rsp, 8	     16386	i386-dis.c	FUNCTION_47
0x4001f39	              0xc3	                                     ret	     16386	i386-dis.c	FUNCTION_47
