bfd_zalloc2	WHILE,0:IF,2:DO,0:functions,0:CALL,3:ELSE,0:FOR,0:SWITCH,0	59
0x4001bf0	              0x55	                                push rbp	      1018	opncls.c	FUNCTION_28
0x4001bf1	          0x4889d1	                            mov rcx, rdx	      1018	opncls.c	FUNCTION_28
0x4001bf4	              0x53	                                push rbx	      1018	opncls.c	FUNCTION_28
0x4001bf5	          0x4889f2	                            mov rdx, rsi	      1022	opncls.c	FUNCTION_28	IF_1
0x4001bf8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1022	opncls.c	FUNCTION_28	IF_1
0x4001bfd	          0x4809ca	                             or rdx, rcx	      1022	opncls.c	FUNCTION_28	IF_1
0x4001c00	        0x4883ec08	                              sub rsp, 8	      1018	opncls.c	FUNCTION_28
0x4001c04	          0x4839c2	                            cmp rdx, rax	      1022	opncls.c	FUNCTION_28	IF_1
0x4001c07	            0x7616	                           jbe 0x4001c1f	      1022	opncls.c	FUNCTION_28	IF_1
0x4001c09	          0x4885c9	                           test rcx, rcx	      1022	opncls.c	FUNCTION_28	IF_1
0x4001c0c	            0x7411	                            je 0x4001c1f	      1022	opncls.c	FUNCTION_28	IF_1
0x4001c0e	            0x31d2	                            xor edx, edx	      1023	opncls.c	FUNCTION_28	IF_1
0x4001c10	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1023	opncls.c	FUNCTION_28	IF_1
0x4001c17	          0x48f7f1	                                 div rcx	      1023	opncls.c	FUNCTION_28	IF_1
0x4001c1a	          0x4839c6	                            cmp rsi, rax	      1023	opncls.c	FUNCTION_28	IF_1
0x4001c1d	            0x7771	                            ja 0x4001c90	      1023	opncls.c	FUNCTION_28	IF_1
0x4001c1f	          0x4889f3	                            mov rbx, rsi	      1029	opncls.c	FUNCTION_28
0x4001c22	        0x480fafd9	                           imul rbx, rcx	      1029	opncls.c	FUNCTION_28
0x4001c26	          0x4885db	                           test rbx, rbx	       935	opncls.c	FUNCTION_25	IF_1
0x4001c29	            0x7865	                            js 0x4001c90	       935	opncls.c	FUNCTION_25	IF_1
0x4001c2b	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c32	            0x7434	                            je 0x4001c68	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c34	        0x488d7307	                      lea rsi, [rbx + 7]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c38	        0x4883e6f8	             and rsi, 0xfffffffffffffff8	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c3c	            0x752f	                           jne 0x4001c6d	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c3e	      0xe800000000	                          call 0x4001c43	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c43	          0x4889c5	                            mov rbp, rax	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c46	          0x4885ed	                           test rbp, rbp	       950	opncls.c	FUNCTION_25	IF_2
0x4001c49	            0x7445	                            je 0x4001c90	       950	opncls.c	FUNCTION_25	IF_2
0x4001c4b	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_49	CALL_6
0x4001c4e	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_49	CALL_6
0x4001c51	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_49	CALL_6
0x4001c53	      0xe800000000	                          call 0x4001c58	        90	string3.h	FUNCTION_49	CALL_6
0x4001c58	        0x4883c408	                              add rsp, 8	      1035	opncls.c	FUNCTION_28
0x4001c5c	          0x4889e8	                            mov rax, rbp	      1035	opncls.c	FUNCTION_28
0x4001c5f	              0x5b	                                 pop rbx	      1035	opncls.c	FUNCTION_28
0x4001c60	              0x5d	                                 pop rbp	      1035	opncls.c	FUNCTION_28
0x4001c61	              0xc3	                                     ret	      1035	opncls.c	FUNCTION_28
0x4001c62	    0x660f1f440000	                    nop word [rax + rax]	      1035	opncls.c	FUNCTION_28
0x4001c68	      0xbe08000000	                              mov esi, 8	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c6d	          0x8b5708	                mov edx, dword [rdi + 8]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c70	          0x4839f2	                            cmp rdx, rsi	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c73	          0x4889d0	                            mov rax, rdx	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c76	            0x72c6	                            jb 0x4001c3e	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c78	          0x488b2f	                    mov rbp, qword [rdi]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c7b	            0x29f0	                            sub eax, esi	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c7d	          0x894708	                mov dword [rdi + 8], eax	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c80	      0x488d543500	                    lea rdx, [rbp + rsi]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c85	          0x488917	                    mov qword [rdi], rdx	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c88	            0xebbc	                           jmp 0x4001c46	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c8a	    0x660f1f440000	                    nop word [rax + rax]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001c90	      0xbf06000000	                              mov edi, 6	       945	opncls.c	FUNCTION_25	IF_1	CALL_1
0x4001c95	            0x31ed	                            xor ebp, ebp	       945	opncls.c	FUNCTION_25	IF_1	CALL_1
0x4001c97	      0xe800000000	                          call 0x4001c9c	       945	opncls.c	FUNCTION_25	IF_1	CALL_1
0x4001c9c	        0x4883c408	                              add rsp, 8	      1035	opncls.c	FUNCTION_28
0x4001ca0	          0x4889e8	                            mov rax, rbp	      1035	opncls.c	FUNCTION_28
0x4001ca3	              0x5b	                                 pop rbx	      1035	opncls.c	FUNCTION_28
0x4001ca4	              0x5d	                                 pop rbp	      1035	opncls.c	FUNCTION_28
0x4001ca5	              0xc3	                                     ret	      1035	opncls.c	FUNCTION_28
bfd_follow_gnu_debugaltlink	WHILE,0:IF,0:DO,0:functions,0:CALL,1:ELSE,0:FOR,0:SWITCH,0	260
0x40025a0	            0x4157	                                push r15	      1640	opncls.c	FUNCTION_39
0x40025a2	            0x4156	                                push r14	      1640	opncls.c	FUNCTION_39
0x40025a4	          0x4989fe	                            mov r14, rdi	      1640	opncls.c	FUNCTION_39
0x40025a7	            0x4155	                                push r13	      1640	opncls.c	FUNCTION_39
0x40025a9	            0x4154	                                push r12	      1640	opncls.c	FUNCTION_39
0x40025ab	          0x4989f4	                            mov r12, rsi	      1640	opncls.c	FUNCTION_39
0x40025ae	              0x55	                                push rbp	      1640	opncls.c	FUNCTION_39
0x40025af	              0x53	                                push rbx	      1640	opncls.c	FUNCTION_39
0x40025b0	        0x4883ec28	                           sub rsp, 0x28	      1640	opncls.c	FUNCTION_39
0x40025b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1640	opncls.c	FUNCTION_39
0x40025bd	      0x4889442418	             mov qword [rsp + 0x18], rax	      1640	opncls.c	FUNCTION_39
0x40025c2	            0x31c0	                            xor eax, eax	      1640	opncls.c	FUNCTION_39
0x40025c4	          0x4885ff	                           test rdi, rdi	      1424	opncls.c	FUNCTION_36	CALL_1
0x40025c7	     0xf8463030000	                            je 0x4002930	      1424	opncls.c	FUNCTION_36	CALL_1
0x40025cd	          0x4d85e4	                           test r12, r12	      1426	opncls.c	FUNCTION_36	IF_1
0x40025d0	      0xb800000000	                              mov eax, 0	      1426	opncls.c	FUNCTION_36	IF_1
0x40025d5	        0x4c0f44e0	                          cmove r12, rax	      1426	opncls.c	FUNCTION_36	IF_1
0x40025d9	        0x49833e00	                      cmp qword [r14], 0	      1429	opncls.c	FUNCTION_36	IF_2
0x40025dd	     0xf849d030000	                            je 0x4002980	      1429	opncls.c	FUNCTION_36	IF_2
0x40025e3	      0xbe00000000	                              mov esi, 0	      1277	opncls.c	FUNCTION_33	CALL_4
0x40025e8	          0x4c89f7	                            mov rdi, r14	      1277	opncls.c	FUNCTION_33	CALL_4
0x40025eb	      0xe800000000	                          call 0x40025f0	      1277	opncls.c	FUNCTION_33	CALL_4
0x40025f0	          0x4885c0	                           test rax, rax	      1279	opncls.c	FUNCTION_33	IF_1
0x40025f3	          0x4889c3	                            mov rbx, rax	      1277	opncls.c	FUNCTION_33	CALL_4
0x40025f6	     0xf84c3010000	                            je 0x40027bf	      1279	opncls.c	FUNCTION_33	IF_1
0x40025fc	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1282	opncls.c	FUNCTION_33
0x4002600	        0x4883fd07	                              cmp rbp, 7	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x4002604	     0xf86b5010000	                           jbe 0x40027bf	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400260a	          0x4c89f7	                            mov rdi, r14	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400260d	      0xe800000000	                          call 0x4002612	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x4002612	          0x4839c5	                            cmp rbp, rax	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x4002615	     0xf83a4010000	                           jae 0x40027bf	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400261b	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x4002620	          0x4889de	                            mov rsi, rbx	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x4002623	          0x4c89f7	                            mov rdi, r14	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x4002626	      0xe800000000	                          call 0x400262b	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x400262b	            0x85c0	                           test eax, eax	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x400262d	     0xf847d010000	                            je 0x40027b0	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x4002633	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      1294	opncls.c	FUNCTION_33
0x4002638	          0x4889ee	                            mov rsi, rbp	      1295	opncls.c	FUNCTION_33	CALL_8
0x400263b	          0x4c89ef	                            mov rdi, r13	      1295	opncls.c	FUNCTION_33	CALL_8
0x400263e	      0xe800000000	                          call 0x4002643	      1295	opncls.c	FUNCTION_33	CALL_8
0x4002643	          0x83c001	                              add eax, 1	      1296	opncls.c	FUNCTION_33	IF_5
0x4002646	        0x483b4338	            cmp rax, qword [rbx + 0x38] 	      1296	opncls.c	FUNCTION_33	IF_5
0x400264a	     0xf836f010000	                           jae 0x40027bf	      1296	opncls.c	FUNCTION_33	IF_5
0x4002650	          0x4889ef	                            mov rdi, rbp	      1300	opncls.c	FUNCTION_33	CALL_9
0x4002653	          0x4829c7	                            sub rdi, rax	      1300	opncls.c	FUNCTION_33	CALL_9
0x4002656	      0xe800000000	                          call 0x400265b	      1300	opncls.c	FUNCTION_33	CALL_9
0x400265b	          0x4889c7	                            mov rdi, rax	      1609	opncls.c	FUNCTION_38	CALL_2
0x400265e	      0xe800000000	                          call 0x4002663	      1609	opncls.c	FUNCTION_38	CALL_2
0x4002663	      0x41807d0000	                       cmp byte [r13], 0	      1440	opncls.c	FUNCTION_36	IF_4
0x4002668	     0xf84dd020000	                            je 0x400294b	      1440	opncls.c	FUNCTION_36	IF_4
0x400266e	          0x498b2e	                    mov rbp, qword [r14]	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002671	          0x4889ef	                            mov rdi, rbp	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002674	      0xe800000000	                          call 0x4002679	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002679	          0x4885c0	                           test rax, rax	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400267c	     0xf84c2020000	                            je 0x4002944	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002682	      0x807c05ff2f	         cmp byte [rbp + rax - 1], 0x2f 	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002687	        0x488d58ff	                      lea rbx, [rax - 1]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400268b	            0x751d	                           jne 0x40026aa	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400268d	      0xe9da020000	                           jmp 0x400296c	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002692	    0x660f1f440000	                    nop word [rax + rax]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002698	      0x807c1dff2f	         cmp byte [rbp + rbx - 1], 0x2f 	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400269d	        0x488d43ff	                      lea rax, [rbx - 1]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x40026a1	     0xf8441010000	                            je 0x40027e8	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x40026a7	          0x4889c3	                            mov rbx, rax	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x40026aa	          0x4885db	                           test rbx, rbx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40026ad	            0x75e9	                           jne 0x4002698	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40026af	      0xbf01000000	                              mov edi, 1	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40026b4	      0xe800000000	                          call 0x40026b9	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x40026b9	          0x4885c0	                           test rax, rax	      1454	opncls.c	FUNCTION_36	IF_5	IF_7
0x40026bc	          0x4889c5	                            mov rbp, rax	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x40026bf	     0xf84cc020000	                            je 0x4002991	      1454	opncls.c	FUNCTION_36	IF_5	IF_7
0x40026c5	          0x498b36	                    mov rsi, qword [r14]	        53	string3.h	FUNCTION_46	CALL_3
0x40026c8	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_46	CALL_3
0x40026cb	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_46	CALL_3
0x40026ce	      0xe800000000	                          call 0x40026d3	        53	string3.h	FUNCTION_46	CALL_3
0x40026d3	      0xc6441d0000	                 mov byte [rbp + rbx], 0	      1460	opncls.c	FUNCTION_36	IF_5
0x40026d8	          0x498b3e	                    mov rdi, qword [r14]	      1471	opncls.c	FUNCTION_36	CALL_12
0x40026db	      0xe800000000	                          call 0x40026e0	      1471	opncls.c	FUNCTION_36	CALL_12
0x40026e0	          0x4889c7	                            mov rdi, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40026e3	          0x4989c7	                            mov r15, rax	      1471	opncls.c	FUNCTION_36	CALL_12
0x40026e6	      0xe800000000	                          call 0x40026eb	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40026eb	          0x4885c0	                           test rax, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40026ee	     0xf8470020000	                            je 0x4002964	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40026f4	    0x41807c07ff2f	         cmp byte [r15 + rax - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40026fa	        0x4c8d70ff	                      lea r14, [rax - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40026fe	            0x7517	                           jne 0x4002717	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002700	      0xe973020000	                           jmp 0x4002978	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002705	           0xf1f00	                         nop dword [rax]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002708	    0x43807c37ff2f	         cmp byte [r15 + r14 - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400270e	        0x498d46ff	                      lea rax, [r14 - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002712	            0x7408	                            je 0x400271c	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002714	          0x4989c6	                            mov r14, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002717	          0x4d85f6	                           test r14, r14	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400271a	            0x75ec	                           jne 0x4002708	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400271c	          0x4c89e7	                            mov rdi, r12	      1485	opncls.c	FUNCTION_36	CALL_16
0x400271f	      0x43c6043700	                 mov byte [r15 + r14], 0	      1475	opncls.c	FUNCTION_36
0x4002724	      0xe800000000	                          call 0x4002729	      1485	opncls.c	FUNCTION_36	CALL_16
0x4002729	          0x4c89ef	                            mov rdi, r13	      1494	opncls.c	FUNCTION_36	CALL_20
0x400272c	      0x4889442408	                mov qword [rsp + 8], rax	      1485	opncls.c	FUNCTION_36	CALL_16
0x4002731	      0xe800000000	                          call 0x4002736	      1494	opncls.c	FUNCTION_36	CALL_20
0x4002736	      0x488b542408	                mov rdx, qword [rsp + 8]	      1484	opncls.c	FUNCTION_36
0x400273b	          0x4c39f3	                            cmp rbx, r14	      1484	opncls.c	FUNCTION_36
0x400273e	        0x490f42de	                          cmovb rbx, r14	      1484	opncls.c	FUNCTION_36
0x4002742	      0x488d7c0229	            lea rdi, [rdx + rax + 0x29] 	      1484	opncls.c	FUNCTION_36
0x4002747	          0x4801df	                            add rdi, rbx	      1484	opncls.c	FUNCTION_36
0x400274a	      0xe800000000	                          call 0x400274f	      1484	opncls.c	FUNCTION_36
0x400274f	          0x4885c0	                           test rax, rax	      1496	opncls.c	FUNCTION_36	IF_9
0x4002752	          0x4889c3	                            mov rbx, rax	      1484	opncls.c	FUNCTION_36
0x4002755	            0x743b	                            je 0x4002792	      1496	opncls.c	FUNCTION_36	IF_9
0x4002757	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_58	CALL_1
0x400275a	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x400275d	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002760	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002765	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x400276c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002771	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002773	      0xe800000000	                          call 0x4002778	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002778	      0xbe00000000	                              mov esi, 0	      1368	opncls.c	FUNCTION_35	CALL_2
0x400277d	          0x4889df	                            mov rdi, rbx	      1368	opncls.c	FUNCTION_35	CALL_2
0x4002780	      0xe800000000	                          call 0x4002785	      1368	opncls.c	FUNCTION_35	CALL_2
0x4002785	          0x4885c0	                           test rax, rax	      1369	opncls.c	FUNCTION_35	IF_1
0x4002788	            0x746e	                            je 0x40027f8	      1369	opncls.c	FUNCTION_35	IF_1
0x400278a	          0x4889c7	                            mov rdi, rax	      1372	opncls.c	FUNCTION_35	CALL_3
0x400278d	      0xe800000000	                          call 0x4002792	      1372	opncls.c	FUNCTION_35	CALL_3
0x4002792	          0x4c89ef	                            mov rdi, r13	      1559	opncls.c	FUNCTION_36	CALL_33
0x4002795	      0xe800000000	                          call 0x400279a	      1559	opncls.c	FUNCTION_36	CALL_33
0x400279a	          0x4889ef	                            mov rdi, rbp	      1560	opncls.c	FUNCTION_36	CALL_34
0x400279d	      0xe800000000	                          call 0x40027a2	      1560	opncls.c	FUNCTION_36	CALL_34
0x40027a2	          0x4c89ff	                            mov rdi, r15	      1561	opncls.c	FUNCTION_36	CALL_35
0x40027a5	      0xe800000000	                          call 0x40027aa	      1561	opncls.c	FUNCTION_36	CALL_35
0x40027aa	          0x4889d8	                            mov rax, rbx	      1562	opncls.c	FUNCTION_36
0x40027ad	            0xeb12	                           jmp 0x40027c1	      1562	opncls.c	FUNCTION_36
0x40027af	              0x90	                                     nop	      1562	opncls.c	FUNCTION_36
0x40027b0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x40027b5	          0x4885ff	                           test rdi, rdi	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x40027b8	            0x7405	                            je 0x40027bf	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x40027ba	      0xe800000000	                          call 0x40027bf	      1289	opncls.c	FUNCTION_33	IF_3	CALL_7
0x40027bf	            0x31c0	                            xor eax, eax	      1438	opncls.c	FUNCTION_36	IF_3
0x40027c1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1645	opncls.c	FUNCTION_39
0x40027c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1645	opncls.c	FUNCTION_39
0x40027cf	     0xf85cb010000	                           jne 0x40029a0	      1645	opncls.c	FUNCTION_39
0x40027d5	        0x4883c428	                           add rsp, 0x28	      1645	opncls.c	FUNCTION_39
0x40027d9	              0x5b	                                 pop rbx	      1645	opncls.c	FUNCTION_39
0x40027da	              0x5d	                                 pop rbp	      1645	opncls.c	FUNCTION_39
0x40027db	            0x415c	                                 pop r12	      1645	opncls.c	FUNCTION_39
0x40027dd	            0x415d	                                 pop r13	      1645	opncls.c	FUNCTION_39
0x40027df	            0x415e	                                 pop r14	      1645	opncls.c	FUNCTION_39
0x40027e1	            0x415f	                                 pop r15	      1645	opncls.c	FUNCTION_39
0x40027e3	              0xc3	                                     ret	      1645	opncls.c	FUNCTION_39
0x40027e4	         0xf1f4000	                         nop dword [rax]	      1645	opncls.c	FUNCTION_39
0x40027e8	        0x488d7b01	                      lea rdi, [rbx + 1]	      1645	opncls.c	FUNCTION_39
0x40027ec	      0xe9c3feffff	                           jmp 0x40026b4	      1645	opncls.c	FUNCTION_39
0x40027f1	     0xf1f80000000	                         nop dword [rax]	      1645	opncls.c	FUNCTION_39
0x40027f8	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x40027fb	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_58	CALL_1
0x40027fe	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002803	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x400280a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x400280f	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002812	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002814	      0xe800000000	                          call 0x4002819	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002819	      0xbe00000000	                              mov esi, 0	      1368	opncls.c	FUNCTION_35	CALL_2
0x400281e	          0x4889df	                            mov rdi, rbx	      1368	opncls.c	FUNCTION_35	CALL_2
0x4002821	      0xe800000000	                          call 0x4002826	      1368	opncls.c	FUNCTION_35	CALL_2
0x4002826	          0x4885c0	                           test rax, rax	      1369	opncls.c	FUNCTION_35	IF_1
0x4002829	     0xf855bffffff	                           jne 0x400278a	      1369	opncls.c	FUNCTION_35	IF_1
0x400282f	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002833	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002836	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x400283c	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x400283e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002843	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x400284a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x400284f	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002852	      0xe800000000	                          call 0x4002857	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002857	      0xbe00000000	                              mov esi, 0	      1368	opncls.c	FUNCTION_35	CALL_2
0x400285c	          0x4889df	                            mov rdi, rbx	      1368	opncls.c	FUNCTION_35	CALL_2
0x400285f	      0xe800000000	                          call 0x4002864	      1368	opncls.c	FUNCTION_35	CALL_2
0x4002864	          0x4885c0	                           test rax, rax	      1369	opncls.c	FUNCTION_35	IF_1
0x4002867	              0x5e	                                 pop rsi	      1369	opncls.c	FUNCTION_35	IF_1
0x4002868	              0x5f	                                 pop rdi	      1369	opncls.c	FUNCTION_35	IF_1
0x4002869	     0xf851bffffff	                           jne 0x400278a	      1369	opncls.c	FUNCTION_35	IF_1
0x400286f	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002873	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002878	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x400287f	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002881	          0x4d89f9	                             mov r9, r15	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002884	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x400288a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x400288f	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002892	      0xe800000000	                          call 0x4002897	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002897	      0xbe00000000	                              mov esi, 0	      1368	opncls.c	FUNCTION_35	CALL_2
0x400289c	          0x4889df	                            mov rdi, rbx	      1368	opncls.c	FUNCTION_35	CALL_2
0x400289f	      0xe800000000	                          call 0x40028a4	      1368	opncls.c	FUNCTION_35	CALL_2
0x40028a4	          0x4885c0	                           test rax, rax	      1369	opncls.c	FUNCTION_35	IF_1
0x40028a7	              0x5a	                                 pop rdx	      1369	opncls.c	FUNCTION_35	IF_1
0x40028a8	              0x59	                                 pop rcx	      1369	opncls.c	FUNCTION_35	IF_1
0x40028a9	     0xf85dbfeffff	                           jne 0x400278a	      1369	opncls.c	FUNCTION_35	IF_1
0x40028af	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_52	CALL_3
0x40028b2	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_52	CALL_3
0x40028b5	      0xe800000000	                          call 0x40028ba	       110	string3.h	FUNCTION_52	CALL_3
0x40028ba	          0x4c89e7	                            mov rdi, r12	      1535	opncls.c	FUNCTION_36	CALL_26
0x40028bd	          0x4989c6	                            mov r14, rax	       110	string3.h	FUNCTION_52	CALL_3
0x40028c0	      0xe800000000	                          call 0x40028c5	      1535	opncls.c	FUNCTION_36	CALL_26
0x40028c5	        0x4883f801	                              cmp rax, 1	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x40028c9	            0x7418	                            je 0x40028e3	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x40028cb	    0x41807c04ff2f	         cmp byte [r12 + rax - 1], 0x2f 	      1539	opncls.c	FUNCTION_36	IF_14	IF_15
0x40028d1	            0x7410	                            je 0x40028e3	      1539	opncls.c	FUNCTION_36	IF_14	IF_15
0x40028d3	        0x41803f2f	                    cmp byte [r15], 0x2f	      1540	opncls.c	FUNCTION_36	IF_14	IF_15
0x40028d7	            0x740a	                            je 0x40028e3	      1540	opncls.c	FUNCTION_36	IF_14	IF_15
0x40028d9	    0x41b82f000000	                           mov r8d, 0x2f	       148	string3.h	FUNCTION_56	CALL_3
0x40028df	        0x66458906	                     mov word [r14], r8w	       148	string3.h	FUNCTION_56	CALL_3
0x40028e3	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_56	CALL_3
0x40028e6	      0xe800000000	                          call 0x40028eb	       148	string3.h	FUNCTION_56	CALL_3
0x40028eb	        0x488d3c03	                    lea rdi, [rbx + rax]	       148	string3.h	FUNCTION_56	CALL_3
0x40028ef	          0x4c89fe	                            mov rsi, r15	       148	string3.h	FUNCTION_56	CALL_3
0x40028f2	      0xe800000000	                          call 0x40028f7	       148	string3.h	FUNCTION_56	CALL_3
0x40028f7	          0x4c89ee	                            mov rsi, r13	       148	string3.h	FUNCTION_56	CALL_3
0x40028fa	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_56	CALL_3
0x40028fd	      0xe800000000	                          call 0x4002902	       148	string3.h	FUNCTION_56	CALL_3
0x4002902	      0xbe00000000	                              mov esi, 0	      1368	opncls.c	FUNCTION_35	CALL_2
0x4002907	          0x4889df	                            mov rdi, rbx	      1368	opncls.c	FUNCTION_35	CALL_2
0x400290a	      0xe800000000	                          call 0x400290f	      1368	opncls.c	FUNCTION_35	CALL_2
0x400290f	          0x4885c0	                           test rax, rax	      1369	opncls.c	FUNCTION_35	IF_1
0x4002912	     0xf8572feffff	                           jne 0x400278a	      1369	opncls.c	FUNCTION_35	IF_1
0x4002918	          0x4889df	                            mov rdi, rbx	      1555	opncls.c	FUNCTION_36	CALL_32
0x400291b	            0x31db	                            xor ebx, ebx	      1556	opncls.c	FUNCTION_36
0x400291d	      0xe800000000	                          call 0x4002922	      1555	opncls.c	FUNCTION_36	CALL_32
0x4002922	      0xe96bfeffff	                           jmp 0x4002792	      1555	opncls.c	FUNCTION_36	CALL_32
0x4002927	    0x660f1f840000	                    nop word [rax + rax]	      1555	opncls.c	FUNCTION_36	CALL_32
0x4002930	      0xbe90050000	                          mov esi, 0x590	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002935	      0xbf00000000	                              mov edi, 0	      1424	opncls.c	FUNCTION_36	CALL_1
0x400293a	      0xe800000000	                          call 0x400293f	      1424	opncls.c	FUNCTION_36	CALL_1
0x400293f	      0xe989fcffff	                           jmp 0x40025cd	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002944	            0x31db	                            xor ebx, ebx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002946	      0xe964fdffff	                           jmp 0x40026af	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400294b	          0x4c89ef	                            mov rdi, r13	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x400294e	      0xe800000000	                          call 0x4002953	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x4002953	      0xbf10000000	                           mov edi, 0x10	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x4002958	      0xe800000000	                          call 0x400295d	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x400295d	            0x31c0	                            xor eax, eax	      1444	opncls.c	FUNCTION_36	IF_4
0x400295f	      0xe95dfeffff	                           jmp 0x40027c1	      1444	opncls.c	FUNCTION_36	IF_4
0x4002964	          0x4531f6	                          xor r14d, r14d	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002967	      0xe9b0fdffff	                           jmp 0x400271c	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400296c	        0x488d7801	                      lea rdi, [rax + 1]	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002970	          0x4889c3	                            mov rbx, rax	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002973	      0xe93cfdffff	                           jmp 0x40026b4	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002978	          0x4989c6	                            mov r14, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400297b	      0xe99cfdffff	                           jmp 0x400271c	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002980	      0xbf05000000	                              mov edi, 5	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x4002985	      0xe800000000	                          call 0x400298a	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x400298a	            0x31c0	                            xor eax, eax	      1432	opncls.c	FUNCTION_36	IF_2
0x400298c	      0xe930feffff	                           jmp 0x40027c1	      1432	opncls.c	FUNCTION_36	IF_2
0x4002991	          0x4c89ef	                            mov rdi, r13	      1456	opncls.c	FUNCTION_36	IF_5	IF_7	CALL_9
0x4002994	      0xe800000000	                          call 0x4002999	      1456	opncls.c	FUNCTION_36	IF_5	IF_7	CALL_9
0x4002999	            0x31c0	                            xor eax, eax	      1457	opncls.c	FUNCTION_36	IF_5	IF_7
0x400299b	      0xe921feffff	                           jmp 0x40027c1	      1457	opncls.c	FUNCTION_36	IF_5	IF_7
0x40029a0	      0xe800000000	                          call 0x40029a5	      1645	opncls.c	FUNCTION_39
bfd_fill_in_gnu_debuglink_section	WHILE,1:IF,4:DO,0:functions,0:CALL,13:ELSE,0:FOR,0:SWITCH,0	125
0x4002a50	            0x4157	                                push r15	      1737	opncls.c	FUNCTION_41
0x4002a52	            0x4156	                                push r14	      1737	opncls.c	FUNCTION_41
0x4002a54	            0x4155	                                push r13	      1737	opncls.c	FUNCTION_41
0x4002a56	            0x4154	                                push r12	      1737	opncls.c	FUNCTION_41
0x4002a58	              0x55	                                push rbp	      1737	opncls.c	FUNCTION_41
0x4002a59	              0x53	                                push rbx	      1737	opncls.c	FUNCTION_41
0x4002a5a	          0x4889d5	                            mov rbp, rdx	      1737	opncls.c	FUNCTION_41
0x4002a5d	        0x4883ec18	                           sub rsp, 0x18	      1737	opncls.c	FUNCTION_41
0x4002a61	          0x4885f6	                           test rsi, rsi	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a64	           0xf94c2	                                 sete dl	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a67	          0x4885ed	                           test rbp, rbp	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a6a	           0xf94c0	                                 sete al	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a6d	             0x8c2	                               or dl, al	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a6f	     0xf8527010000	                           jne 0x4002b9c	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a75	          0x4885ff	                           test rdi, rdi	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a78	          0x4989fc	                            mov r12, rdi	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a7b	     0xf841b010000	                            je 0x4002b9c	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a81	          0x4989f5	                            mov r13, rsi	      1747	opncls.c	FUNCTION_41	IF_1
0x4002a84	          0x4889ef	                            mov rdi, rbp	      1759	opncls.c	FUNCTION_41	CALL_2
0x4002a87	      0xbe00000000	                              mov esi, 0	      1759	opncls.c	FUNCTION_41	CALL_2
0x4002a8c	      0xe800000000	                          call 0x4002a91	      1759	opncls.c	FUNCTION_41	CALL_2
0x4002a91	          0x4885c0	                           test rax, rax	      1760	opncls.c	FUNCTION_41	IF_2
0x4002a94	          0x4889c3	                            mov rbx, rax	      1759	opncls.c	FUNCTION_41	CALL_2
0x4002a97	     0xf8437010000	                            je 0x4002bd4	      1760	opncls.c	FUNCTION_41	IF_2
0x4002a9d	          0x4531f6	                          xor r14d, r14d	      1760	opncls.c	FUNCTION_41	IF_2
0x4002aa0	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002aa3	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002aa8	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002aad	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002ab2	      0xe800000000	                          call 0x4002ab7	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002ab7	          0x4885c0	                           test rax, rax	      1767	opncls.c	FUNCTION_41	WHILE_1	CALL_4
0x4002aba	            0x7440	                            je 0x4002afc	      1767	opncls.c	FUNCTION_41	WHILE_1	CALL_4
0x4002abc	    0x480500000000	                              add rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002ac2	          0x4489f7	                           mov edi, r14d	      1142	opncls.c	FUNCTION_30
0x4002ac5	    0x483d00000000	                              cmp rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002acb	            0xf7d7	                                 not edi	      1142	opncls.c	FUNCTION_30
0x4002acd	            0x7625	                           jbe 0x4002af4	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002acf	      0xba00000000	                              mov edx, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002ad4	         0xf1f4000	                         nop dword [rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002ad8	            0x89f9	                            mov ecx, edi	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002ada	            0x320a	                      xor cl, byte [rdx]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002adc	        0x4883c201	                              add rdx, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002ae0	        0x48c1ef08	                              shr rdi, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002ae4	           0xfb6c9	                           movzx ecx, cl	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002ae7	    0x48333ccd0000	                  xor rdi, qword [rcx*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002aef	          0x4839d0	                            cmp rax, rdx	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002af2	            0x75e4	                           jne 0x4002ad8	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002af4	          0x4189fe	                           mov r14d, edi	      1145	opncls.c	FUNCTION_30
0x4002af7	          0x41f7d6	                                not r14d	      1145	opncls.c	FUNCTION_30
0x4002afa	            0xeba4	                           jmp 0x4002aa0	      1145	opncls.c	FUNCTION_30
0x4002afc	          0x4889df	                            mov rdi, rbx	      1769	opncls.c	FUNCTION_41	CALL_6
0x4002aff	      0xe800000000	                          call 0x4002b04	      1769	opncls.c	FUNCTION_41	CALL_6
0x4002b04	          0x4889ef	                            mov rdi, rbp	      1773	opncls.c	FUNCTION_41	CALL_7
0x4002b07	      0xe800000000	                          call 0x4002b0c	      1773	opncls.c	FUNCTION_41	CALL_7
0x4002b0c	          0x4889c7	                            mov rdi, rax	      1775	opncls.c	FUNCTION_41	CALL_8
0x4002b0f	      0x4889442408	                mov qword [rsp + 8], rax	      1775	opncls.c	FUNCTION_41	CALL_8
0x4002b14	      0xe800000000	                          call 0x4002b19	      1775	opncls.c	FUNCTION_41	CALL_8
0x4002b19	        0x488d5804	                      lea rbx, [rax + 4]	      1777	opncls.c	FUNCTION_41
0x4002b1d	          0x4989c7	                            mov r15, rax	      1775	opncls.c	FUNCTION_41	CALL_8
0x4002b20	        0x4883e3fc	             and rbx, 0xfffffffffffffffc	      1778	opncls.c	FUNCTION_41
0x4002b24	        0x488d4304	                      lea rax, [rbx + 4]	      1779	opncls.c	FUNCTION_41
0x4002b28	          0x4889c7	                            mov rdi, rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x4002b2b	        0x48890424	                    mov qword [rsp], rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x4002b2f	      0xe800000000	                          call 0x4002b34	      1781	opncls.c	FUNCTION_41	CALL_9
0x4002b34	          0x4889c5	                            mov rbp, rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x4002b37	            0x31c0	                            xor eax, eax	      1785	opncls.c	FUNCTION_41	IF_3
0x4002b39	          0x4885ed	                           test rbp, rbp	      1782	opncls.c	FUNCTION_41	IF_3
0x4002b3c	            0x744f	                            je 0x4002b8d	      1782	opncls.c	FUNCTION_41	IF_3
0x4002b3e	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_46	CALL_3
0x4002b43	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_46	CALL_3
0x4002b46	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_46	CALL_3
0x4002b49	      0xe800000000	                          call 0x4002b4e	        53	string3.h	FUNCTION_46	CALL_3
0x4002b4e	      0x4a8d7c3d00	                    lea rdi, [rbp + r15]	        90	string3.h	FUNCTION_49	CALL_6
0x4002b53	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_49	CALL_6
0x4002b56	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_49	CALL_6
0x4002b58	          0x4c29fa	                            sub rdx, r15	        90	string3.h	FUNCTION_49	CALL_6
0x4002b5b	      0xe800000000	                          call 0x4002b60	        90	string3.h	FUNCTION_49	CALL_6
0x4002b60	      0x498b442408	                mov rax, qword [r12 + 8]	      1792	opncls.c	FUNCTION_41
0x4002b65	      0x488d741d00	                    lea rsi, [rbp + rbx]	      1792	opncls.c	FUNCTION_41
0x4002b6a	          0x4c89f7	                            mov rdi, r14	      1792	opncls.c	FUNCTION_41
0x4002b6d	          0xff5048	                 call qword [rax + 0x48]	      1792	opncls.c	FUNCTION_41
0x4002b70	        0x4c8b0424	                     mov r8, qword [rsp]	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4002b74	            0x31c9	                            xor ecx, ecx	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4002b76	          0x4889ea	                            mov rdx, rbp	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4002b79	          0x4c89ee	                            mov rsi, r13	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4002b7c	          0x4c89e7	                            mov rdi, r12	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4002b7f	      0xe800000000	                          call 0x4002b84	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4002b84	            0x85c0	                           test eax, eax	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4002b86	            0x742f	                            je 0x4002bb7	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x4002b88	      0xb801000000	                              mov eax, 1	      1801	opncls.c	FUNCTION_41
0x4002b8d	        0x4883c418	                           add rsp, 0x18	      1802	opncls.c	FUNCTION_41
0x4002b91	              0x5b	                                 pop rbx	      1802	opncls.c	FUNCTION_41
0x4002b92	              0x5d	                                 pop rbp	      1802	opncls.c	FUNCTION_41
0x4002b93	            0x415c	                                 pop r12	      1802	opncls.c	FUNCTION_41
0x4002b95	            0x415d	                                 pop r13	      1802	opncls.c	FUNCTION_41
0x4002b97	            0x415e	                                 pop r14	      1802	opncls.c	FUNCTION_41
0x4002b99	            0x415f	                                 pop r15	      1802	opncls.c	FUNCTION_41
0x4002b9b	              0xc3	                                     ret	      1802	opncls.c	FUNCTION_41
0x4002b9c	      0xbf05000000	                              mov edi, 5	      1749	opncls.c	FUNCTION_41	IF_1	CALL_1
0x4002ba1	      0xe800000000	                          call 0x4002ba6	      1749	opncls.c	FUNCTION_41	IF_1	CALL_1
0x4002ba6	        0x4883c418	                           add rsp, 0x18	      1802	opncls.c	FUNCTION_41
0x4002baa	            0x31c0	                            xor eax, eax	      1750	opncls.c	FUNCTION_41	IF_1
0x4002bac	              0x5b	                                 pop rbx	      1802	opncls.c	FUNCTION_41
0x4002bad	              0x5d	                                 pop rbp	      1802	opncls.c	FUNCTION_41
0x4002bae	            0x415c	                                 pop r12	      1802	opncls.c	FUNCTION_41
0x4002bb0	            0x415d	                                 pop r13	      1802	opncls.c	FUNCTION_41
0x4002bb2	            0x415e	                                 pop r14	      1802	opncls.c	FUNCTION_41
0x4002bb4	            0x415f	                                 pop r15	      1802	opncls.c	FUNCTION_41
0x4002bb6	              0xc3	                                     ret	      1802	opncls.c	FUNCTION_41
0x4002bb7	          0x4889ef	                            mov rdi, rbp	      1797	opncls.c	FUNCTION_41	IF_4	CALL_13
0x4002bba	          0x890424	                    mov dword [rsp], eax	      1797	opncls.c	FUNCTION_41	IF_4	CALL_13
0x4002bbd	      0xe800000000	                          call 0x4002bc2	      1797	opncls.c	FUNCTION_41	IF_4	CALL_13
0x4002bc2	          0x8b0424	                    mov eax, dword [rsp]	      1798	opncls.c	FUNCTION_41	IF_4
0x4002bc5	        0x4883c418	                           add rsp, 0x18	      1802	opncls.c	FUNCTION_41
0x4002bc9	              0x5b	                                 pop rbx	      1802	opncls.c	FUNCTION_41
0x4002bca	              0x5d	                                 pop rbp	      1802	opncls.c	FUNCTION_41
0x4002bcb	            0x415c	                                 pop r12	      1802	opncls.c	FUNCTION_41
0x4002bcd	            0x415d	                                 pop r13	      1802	opncls.c	FUNCTION_41
0x4002bcf	            0x415e	                                 pop r14	      1802	opncls.c	FUNCTION_41
0x4002bd1	            0x415f	                                 pop r15	      1802	opncls.c	FUNCTION_41
0x4002bd3	              0xc3	                                     ret	      1802	opncls.c	FUNCTION_41
0x4002bd4	      0xbf01000000	                              mov edi, 1	      1762	opncls.c	FUNCTION_41	IF_2	CALL_3
0x4002bd9	      0xe800000000	                          call 0x4002bde	      1762	opncls.c	FUNCTION_41	IF_2	CALL_3
0x4002bde	            0x31c0	                            xor eax, eax	      1763	opncls.c	FUNCTION_41	IF_2
0x4002be0	            0xebab	                           jmp 0x4002b8d	      1763	opncls.c	FUNCTION_41	IF_2
check_build_id_file	WHILE,0:IF,3:DO,0:functions,0:CALL,9:ELSE,0:FOR,0:SWITCH,0	155
0x4001400	            0x4155	                                push r13	      1988	opncls.c	FUNCTION_44
0x4001402	            0x4154	                                push r12	      1988	opncls.c	FUNCTION_44
0x4001404	          0x4989f4	                            mov r12, rsi	      1988	opncls.c	FUNCTION_44
0x4001407	              0x55	                                push rbp	      1988	opncls.c	FUNCTION_44
0x4001408	              0x53	                                push rbx	      1988	opncls.c	FUNCTION_44
0x4001409	          0x4889fd	                            mov rbp, rdi	      1988	opncls.c	FUNCTION_44
0x400140c	        0x4883ec08	                              sub rsp, 8	      1988	opncls.c	FUNCTION_44
0x4001410	          0x4885ff	                           test rdi, rdi	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001413	     0xf84df010000	                            je 0x40015f8	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001419	          0x4d85e4	                           test r12, r12	      1995	opncls.c	FUNCTION_44	CALL_2
0x400141c	     0xf84ee010000	                            je 0x4001610	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001422	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x4001427	      0xe800000000	                          call 0x400142c	        62	opncls.c	FUNCTION_1	CALL_1
0x400142c	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x400142f	          0x4889c3	                            mov rbx, rax	        62	opncls.c	FUNCTION_1	CALL_1
0x4001432	     0xf844a010000	                            je 0x4001582	        63	opncls.c	FUNCTION_1	IF_1
0x4001438	    0x8b1500000000	            mov edx, dword [0x0400143e] 	        66	opncls.c	FUNCTION_1	IF_2
0x400143e	            0x85d2	                           test edx, edx	        66	opncls.c	FUNCTION_1	IF_2
0x4001440	     0xf850a010000	                           jne 0x4001550	        66	opncls.c	FUNCTION_1	IF_2
0x4001446	    0x8b0500000000	            mov eax, dword [0x0400144c] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x400144c	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x400144f	    0x891500000000	            mov dword [0x04001455], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4001455	          0x894340	             mov dword [rbx + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x4001458	      0xe800000000	                          call 0x400145d	        74	opncls.c	FUNCTION_1	CALL_2
0x400145d	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x4001460	    0x488983080100	            mov qword [rbx + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x4001467	     0xf8403010000	                            je 0x4001570	        75	opncls.c	FUNCTION_1	IF_3
0x400146d	        0x4c8d6b68	                   lea r13, [rbx + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4001471	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x400147c	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4001481	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4001486	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x400148b	          0x4c89ef	                            mov rdi, r13	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x400148e	      0xe800000000	                          call 0x4001493	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4001493	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4001495	     0xf844c010000	                            je 0x40015e7	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x400149b	            0x31ff	                            xor edi, edi	       208	opncls.c	FUNCTION_5	CALL_3
0x400149d	          0x4889de	                            mov rsi, rbx	       208	opncls.c	FUNCTION_5	CALL_3
0x40014a0	      0xe800000000	                          call 0x40014a5	       208	opncls.c	FUNCTION_5	CALL_3
0x40014a5	          0x4885c0	                           test rax, rax	       209	opncls.c	FUNCTION_5	IF_3
0x40014a8	     0xf8402010000	                            je 0x40015b0	       209	opncls.c	FUNCTION_5	IF_3
0x40014ae	      0xbe00000000	                              mov esi, 0	       222	opncls.c	FUNCTION_5	CALL_7
0x40014b3	          0x4889ef	                            mov rdi, rbp	       222	opncls.c	FUNCTION_5	CALL_7
0x40014b6	      0xe800000000	                          call 0x40014bb	       222	opncls.c	FUNCTION_5	CALL_7
0x40014bb	          0x4885c0	                           test rax, rax	       223	opncls.c	FUNCTION_5	IF_6
0x40014be	        0x48894310	             mov qword [rbx + 0x10], rax	       222	opncls.c	FUNCTION_5	CALL_7
0x40014c2	     0xf8478010000	                            je 0x4001640	       223	opncls.c	FUNCTION_5	IF_6
0x40014c8	          0x4889ef	                            mov rdi, rbp	       234	opncls.c	FUNCTION_5	CALL_10
0x40014cb	      0xe800000000	                          call 0x40014d0	       234	opncls.c	FUNCTION_5	CALL_10
0x40014d0	          0x488903	                    mov qword [rbx], rax	       234	opncls.c	FUNCTION_5	CALL_10
0x40014d3	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40014d7	          0x4889df	                            mov rdi, rbx	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x40014da	          0x83e0e7	                     and eax, 0xffffffe7	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40014dd	          0x83c808	                               or eax, 8	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40014e0	          0x884344	               mov byte [rbx + 0x44], al	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40014e3	      0xe800000000	                          call 0x40014e8	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x40014e8	            0x85c0	                           test eax, eax	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x40014ea	     0xf84c0000000	                            je 0x40015b0	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x40014f0	        0x804b470a	               or byte [rbx + 0x47], 0xa	      7070	bfd.h	FUNCTION_78
0x40014f4	      0xbe01000000	                              mov esi, 1	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40014f9	          0x4889df	                            mov rdi, rbx	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40014fc	      0xe800000000	                          call 0x4001501	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x4001501	            0x85c0	                           test eax, eax	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x4001503	            0x89c5	                            mov ebp, eax	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x4001505	            0x7433	                            je 0x400153a	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x4001507	    0x488b83100100	           mov rax, qword [rbx + 0x110] 	      1835	opncls.c	FUNCTION_42	IF_1
0x400150e	          0x4885c0	                           test rax, rax	      1835	opncls.c	FUNCTION_42	IF_1
0x4001511	            0x7408	                            je 0x400151b	      1835	opncls.c	FUNCTION_42	IF_1
0x4001513	          0x488b10	                    mov rdx, qword [rax]	      1835	opncls.c	FUNCTION_42	IF_1
0x4001516	          0x4885d2	                           test rdx, rdx	      1835	opncls.c	FUNCTION_42	IF_1
0x4001519	            0x7514	                           jne 0x400152f	      1835	opncls.c	FUNCTION_42	IF_1
0x400151b	          0x4889df	                            mov rdi, rbx	      1835	opncls.c	FUNCTION_42	IF_1
0x400151e	      0xe84decffff	            call sym.get_build_id.part.2	      1835	opncls.c	FUNCTION_42	IF_1
0x4001523	          0x4885c0	                           test rax, rax	      2009	opncls.c	FUNCTION_44	IF_3
0x4001526	     0xf84fc000000	                            je 0x4001628	      2009	opncls.c	FUNCTION_44	IF_3
0x400152c	          0x488b10	                    mov rdx, qword [rax]	      2009	opncls.c	FUNCTION_44	IF_3
0x400152f	        0x498b3424	                    mov rsi, qword [r12]	      2015	opncls.c	FUNCTION_44
0x4001533	            0x31ed	                            xor ebp, ebp	      2018	opncls.c	FUNCTION_44	CALL_8
0x4001535	          0x483916	                    cmp qword [rsi], rdx	      2018	opncls.c	FUNCTION_44	CALL_8
0x4001538	            0x745e	                            je 0x4001598	      2018	opncls.c	FUNCTION_44	CALL_8
0x400153a	          0x4889df	                            mov rdi, rbx	      2020	opncls.c	FUNCTION_44	CALL_9
0x400153d	      0xe800000000	                          call 0x4001542	      2020	opncls.c	FUNCTION_44	CALL_9
0x4001542	        0x4883c408	                              add rsp, 8	      2023	opncls.c	FUNCTION_44
0x4001546	            0x89e8	                            mov eax, ebp	      2023	opncls.c	FUNCTION_44
0x4001548	              0x5b	                                 pop rbx	      2023	opncls.c	FUNCTION_44
0x4001549	              0x5d	                                 pop rbp	      2023	opncls.c	FUNCTION_44
0x400154a	            0x415c	                                 pop r12	      2023	opncls.c	FUNCTION_44
0x400154c	            0x415d	                                 pop r13	      2023	opncls.c	FUNCTION_44
0x400154e	              0xc3	                                     ret	      2023	opncls.c	FUNCTION_44
0x400154f	              0x90	                                     nop	      2023	opncls.c	FUNCTION_44
0x4001550	    0x8b0500000000	            mov eax, dword [0x04001556] 	        68	opncls.c	FUNCTION_1	IF_2
0x4001556	          0x83ea01	                              sub edx, 1	        69	opncls.c	FUNCTION_1	IF_2
0x4001559	    0x891500000000	            mov dword [0x0400155f], edx 	        69	opncls.c	FUNCTION_1	IF_2
0x400155f	          0x83e801	                              sub eax, 1	        68	opncls.c	FUNCTION_1	IF_2
0x4001562	    0x890500000000	            mov dword [0x04001568], eax 	        68	opncls.c	FUNCTION_1	IF_2
0x4001568	      0xe9e8feffff	                           jmp 0x4001455	        68	opncls.c	FUNCTION_1	IF_2
0x400156d	           0xf1f00	                         nop dword [rax]	        68	opncls.c	FUNCTION_1	IF_2
0x4001570	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x4001575	      0xe800000000	                          call 0x400157a	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x400157a	          0x4889df	                            mov rdi, rbx	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x400157d	      0xe800000000	                          call 0x4001582	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x4001582	            0x31ed	                            xor ebp, ebp	      1999	opncls.c	FUNCTION_44	IF_1
0x4001584	        0x4883c408	                              add rsp, 8	      2023	opncls.c	FUNCTION_44
0x4001588	            0x89e8	                            mov eax, ebp	      2023	opncls.c	FUNCTION_44
0x400158a	              0x5b	                                 pop rbx	      2023	opncls.c	FUNCTION_44
0x400158b	              0x5d	                                 pop rbp	      2023	opncls.c	FUNCTION_44
0x400158c	            0x415c	                                 pop r12	      2023	opncls.c	FUNCTION_44
0x400158e	            0x415d	                                 pop r13	      2023	opncls.c	FUNCTION_44
0x4001590	              0xc3	                                     ret	      2023	opncls.c	FUNCTION_44
0x4001591	     0xf1f80000000	                         nop dword [rax]	      2023	opncls.c	FUNCTION_44
0x4001598	        0x488d7808	                      lea rdi, [rax + 8]	      2018	opncls.c	FUNCTION_44	CALL_8
0x400159c	        0x4883c608	                              add rsi, 8	      2018	opncls.c	FUNCTION_44	CALL_8
0x40015a0	            0x31ed	                            xor ebp, ebp	      2018	opncls.c	FUNCTION_44	CALL_8
0x40015a2	      0xe800000000	                          call 0x40015a7	      2018	opncls.c	FUNCTION_44	CALL_8
0x40015a7	            0x85c0	                           test eax, eax	      2018	opncls.c	FUNCTION_44	CALL_8
0x40015a9	        0x400f94c5	                                sete bpl	      2018	opncls.c	FUNCTION_44	CALL_8
0x40015ad	            0xeb8b	                           jmp 0x400153a	      2018	opncls.c	FUNCTION_44	CALL_8
0x40015af	              0x90	                                     nop	      2018	opncls.c	FUNCTION_44	CALL_8
0x40015b0	    0x4883bb080100	              cmp qword [rbx + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x40015b8	            0x7414	                            je 0x40015ce	       123	opncls.c	FUNCTION_3	IF_1
0x40015ba	          0x4c89ef	                            mov rdi, r13	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x40015bd	      0xe800000000	                          call 0x40015c2	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x40015c2	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x40015c9	      0xe800000000	                          call 0x40015ce	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x40015ce	          0x488b3b	                    mov rdi, qword [rbx]	       129	opncls.c	FUNCTION_3	IF_2
0x40015d1	          0x4885ff	                           test rdi, rdi	       129	opncls.c	FUNCTION_3	IF_2
0x40015d4	            0x7405	                            je 0x40015db	       129	opncls.c	FUNCTION_3	IF_2
0x40015d6	      0xe800000000	                          call 0x40015db	       130	opncls.c	FUNCTION_3	CALL_3
0x40015db	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	       131	opncls.c	FUNCTION_3	CALL_4
0x40015e2	      0xe800000000	                          call 0x40015e7	       131	opncls.c	FUNCTION_3	CALL_4
0x40015e7	          0x4889df	                            mov rdi, rbx	       132	opncls.c	FUNCTION_3	CALL_5
0x40015ea	            0x31ed	                            xor ebp, ebp	      1999	opncls.c	FUNCTION_44	IF_1
0x40015ec	      0xe800000000	                          call 0x40015f1	       132	opncls.c	FUNCTION_3	CALL_5
0x40015f1	            0xeb91	                           jmp 0x4001584	       132	opncls.c	FUNCTION_3	CALL_5
0x40015f3	       0xf1f440000	                   nop dword [rax + rax]	       132	opncls.c	FUNCTION_3	CALL_5
0x40015f8	      0xbeca070000	                          mov esi, 0x7ca	      1994	opncls.c	FUNCTION_44	CALL_1
0x40015fd	      0xbf00000000	                              mov edi, 0	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001602	      0xe800000000	                          call 0x4001607	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001607	      0xe90dfeffff	                           jmp 0x4001419	      1994	opncls.c	FUNCTION_44	CALL_1
0x400160c	         0xf1f4000	                         nop dword [rax]	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001610	      0xbecb070000	                          mov esi, 0x7cb	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001615	      0xbf00000000	                              mov edi, 0	      1995	opncls.c	FUNCTION_44	CALL_2
0x400161a	      0xe800000000	                          call 0x400161f	      1995	opncls.c	FUNCTION_44	CALL_2
0x400161f	      0xe9fefdffff	                           jmp 0x4001422	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001624	         0xf1f4000	                         nop dword [rax]	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001628	          0x4889df	                            mov rdi, rbx	      2011	opncls.c	FUNCTION_44	IF_3	CALL_7
0x400162b	            0x31ed	                            xor ebp, ebp	      2012	opncls.c	FUNCTION_44	IF_3
0x400162d	      0xe800000000	                          call 0x4001632	      2011	opncls.c	FUNCTION_44	IF_3	CALL_7
0x4001632	      0xe90bffffff	                           jmp 0x4001542	      2012	opncls.c	FUNCTION_44	IF_3
0x4001637	    0x660f1f840000	                    nop word [rax + rax]	      2012	opncls.c	FUNCTION_44	IF_3
0x4001640	      0xbf01000000	                              mov edi, 1	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
0x4001645	      0xe800000000	                          call 0x400164a	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
0x400164a	    0x4883bb080100	              cmp qword [rbx + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x4001652	     0xf8562ffffff	                           jne 0x40015ba	       123	opncls.c	FUNCTION_3	IF_1
0x4001658	      0xe971ffffff	                           jmp 0x40015ce	       123	opncls.c	FUNCTION_3	IF_1
opncls_bmmap	WHILE,0:IF,0:DO,0:functions,0:CALL,0:ELSE,0:FOR,0:SWITCH,0	2
0x4000100	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       562	opncls.c	FUNCTION_16
0x4000107	              0xc3	                                     ret	       562	opncls.c	FUNCTION_16
bfd_openw	WHILE,0:IF,3:DO,0:functions,0:CALL,7:ELSE,0:FOR,0:SWITCH,0	91
0x4001140	            0x4155	                                push r13	       645	opncls.c	FUNCTION_18
0x4001142	            0x4154	                                push r12	       645	opncls.c	FUNCTION_18
0x4001144	          0x4989fc	                            mov r12, rdi	       645	opncls.c	FUNCTION_18
0x4001147	              0x55	                                push rbp	       645	opncls.c	FUNCTION_18
0x4001148	              0x53	                                push rbx	       645	opncls.c	FUNCTION_18
0x4001149	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x400114e	          0x4889f5	                            mov rbp, rsi	       645	opncls.c	FUNCTION_18
0x4001151	        0x4883ec08	                              sub rsp, 8	       645	opncls.c	FUNCTION_18
0x4001155	      0xe800000000	                          call 0x400115a	        62	opncls.c	FUNCTION_1	CALL_1
0x400115a	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x400115d	     0xf84df000000	                            je 0x4001242	        63	opncls.c	FUNCTION_1	IF_1
0x4001163	    0x8b1500000000	            mov edx, dword [0x04001169] 	        66	opncls.c	FUNCTION_1	IF_2
0x4001169	          0x4889c3	                            mov rbx, rax	        66	opncls.c	FUNCTION_1	IF_2
0x400116c	            0x85d2	                           test edx, edx	        66	opncls.c	FUNCTION_1	IF_2
0x400116e	     0xf859c000000	                           jne 0x4001210	        66	opncls.c	FUNCTION_1	IF_2
0x4001174	    0x8b0500000000	            mov eax, dword [0x0400117a] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x400117a	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x400117d	    0x891500000000	            mov dword [0x04001183], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4001183	          0x894340	             mov dword [rbx + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x4001186	      0xe800000000	                          call 0x400118b	        74	opncls.c	FUNCTION_1	CALL_2
0x400118b	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x400118e	    0x488983080100	            mov qword [rbx + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x4001195	     0xf8495000000	                            je 0x4001230	        75	opncls.c	FUNCTION_1	IF_3
0x400119b	        0x4c8d6b68	                   lea r13, [rbx + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x400119f	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x40011aa	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40011af	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40011b4	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40011b9	          0x4c89ef	                            mov rdi, r13	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40011bc	      0xe800000000	                          call 0x40011c1	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40011c1	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40011c3	     0xf8487000000	                            je 0x4001250	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40011c9	          0x4889de	                            mov rsi, rbx	       655	opncls.c	FUNCTION_18	CALL_2
0x40011cc	          0x4889ef	                            mov rdi, rbp	       655	opncls.c	FUNCTION_18	CALL_2
0x40011cf	      0xe800000000	                          call 0x40011d4	       655	opncls.c	FUNCTION_18	CALL_2
0x40011d4	          0x4885c0	                           test rax, rax	       656	opncls.c	FUNCTION_18	IF_2
0x40011d7	     0xf8489000000	                            je 0x4001266	       656	opncls.c	FUNCTION_18	IF_2
0x40011dd	          0x4c89e7	                            mov rdi, r12	       664	opncls.c	FUNCTION_18	CALL_4
0x40011e0	      0xe800000000	                          call 0x40011e5	       664	opncls.c	FUNCTION_18	CALL_4
0x40011e5	          0x488903	                    mov qword [rbx], rax	       664	opncls.c	FUNCTION_18	CALL_4
0x40011e8	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       665	opncls.c	FUNCTION_18
0x40011ec	          0x4889df	                            mov rdi, rbx	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x40011ef	          0x83e0e7	                     and eax, 0xffffffe7	       665	opncls.c	FUNCTION_18
0x40011f2	          0x83c810	                            or eax, 0x10	       665	opncls.c	FUNCTION_18
0x40011f5	          0x884344	               mov byte [rbx + 0x44], al	       665	opncls.c	FUNCTION_18
0x40011f8	      0xe800000000	                          call 0x40011fd	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x40011fd	          0x4885c0	                           test rax, rax	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4001200	            0x745a	                            je 0x400125c	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4001202	          0x4889d8	                            mov rax, rbx	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4001205	        0x4883c408	                              add rsp, 8	       676	opncls.c	FUNCTION_18
0x4001209	              0x5b	                                 pop rbx	       676	opncls.c	FUNCTION_18
0x400120a	              0x5d	                                 pop rbp	       676	opncls.c	FUNCTION_18
0x400120b	            0x415c	                                 pop r12	       676	opncls.c	FUNCTION_18
0x400120d	            0x415d	                                 pop r13	       676	opncls.c	FUNCTION_18
0x400120f	              0xc3	                                     ret	       676	opncls.c	FUNCTION_18
0x4001210	    0x8b0500000000	            mov eax, dword [0x04001216] 	        68	opncls.c	FUNCTION_1	IF_2
0x4001216	          0x83ea01	                              sub edx, 1	        69	opncls.c	FUNCTION_1	IF_2
0x4001219	    0x891500000000	            mov dword [0x0400121f], edx 	        69	opncls.c	FUNCTION_1	IF_2
0x400121f	          0x83e801	                              sub eax, 1	        68	opncls.c	FUNCTION_1	IF_2
0x4001222	    0x890500000000	            mov dword [0x04001228], eax 	        68	opncls.c	FUNCTION_1	IF_2
0x4001228	      0xe956ffffff	                           jmp 0x4001183	        68	opncls.c	FUNCTION_1	IF_2
0x400122d	           0xf1f00	                         nop dword [rax]	        68	opncls.c	FUNCTION_1	IF_2
0x4001230	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x4001235	      0xe800000000	                          call 0x400123a	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x400123a	          0x4889df	                            mov rdi, rbx	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x400123d	      0xe800000000	                          call 0x4001242	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x4001242	            0x31c0	                            xor eax, eax	       653	opncls.c	FUNCTION_18	IF_1
0x4001244	            0xebbf	                           jmp 0x4001205	       653	opncls.c	FUNCTION_18	IF_1
0x4001246	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       653	opncls.c	FUNCTION_18	IF_1
0x4001250	          0x4889df	                            mov rdi, rbx	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4001253	      0xe800000000	                          call 0x4001258	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4001258	            0x31c0	                            xor eax, eax	       653	opncls.c	FUNCTION_18	IF_1
0x400125a	            0xeba9	                           jmp 0x4001205	       653	opncls.c	FUNCTION_18	IF_1
0x400125c	      0xbf01000000	                              mov edi, 1	       670	opncls.c	FUNCTION_18	IF_3	CALL_6
0x4001261	      0xe800000000	                          call 0x4001266	       670	opncls.c	FUNCTION_18	IF_3	CALL_6
0x4001266	    0x4883bb080100	              cmp qword [rbx + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x400126e	            0x7414	                            je 0x4001284	       123	opncls.c	FUNCTION_3	IF_1
0x4001270	          0x4c89ef	                            mov rdi, r13	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4001273	      0xe800000000	                          call 0x4001278	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4001278	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x400127f	      0xe800000000	                          call 0x4001284	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x4001284	          0x488b3b	                    mov rdi, qword [rbx]	       129	opncls.c	FUNCTION_3	IF_2
0x4001287	          0x4885ff	                           test rdi, rdi	       129	opncls.c	FUNCTION_3	IF_2
0x400128a	            0x7405	                            je 0x4001291	       129	opncls.c	FUNCTION_3	IF_2
0x400128c	      0xe800000000	                          call 0x4001291	       130	opncls.c	FUNCTION_3	CALL_3
0x4001291	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	       131	opncls.c	FUNCTION_3	CALL_4
0x4001298	      0xe800000000	                          call 0x400129d	       131	opncls.c	FUNCTION_3	CALL_4
0x400129d	          0x4889df	                            mov rdi, rbx	       132	opncls.c	FUNCTION_3	CALL_5
0x40012a0	      0xe800000000	                          call 0x40012a5	       132	opncls.c	FUNCTION_3	CALL_5
0x40012a5	            0x31c0	                            xor eax, eax	       672	opncls.c	FUNCTION_18	IF_3
0x40012a7	      0xe959ffffff	                           jmp 0x4001205	       672	opncls.c	FUNCTION_18	IF_3
opncls_bclose	WHILE,0:IF,1:DO,0:functions,0:CALL,0:ELSE,0:FOR,0:SWITCH,0	12
0x40000c0	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       522	opncls.c	FUNCTION_13
0x40000c4	              0x53	                                push rbx	       521	opncls.c	FUNCTION_13
0x40000c5	            0x31c0	                            xor eax, eax	       521	opncls.c	FUNCTION_13
0x40000c7	          0x4889fb	                            mov rbx, rdi	       521	opncls.c	FUNCTION_13
0x40000ca	        0x488b5110	            mov rdx, qword [rcx + 0x10] 	       527	opncls.c	FUNCTION_13	IF_1
0x40000ce	          0x4885d2	                           test rdx, rdx	       527	opncls.c	FUNCTION_13	IF_1
0x40000d1	            0x7405	                            je 0x40000d8	       527	opncls.c	FUNCTION_13	IF_1
0x40000d3	          0x488b31	                    mov rsi, qword [rcx]	       528	opncls.c	FUNCTION_13	IF_1
0x40000d6	            0xffd2	                                call rdx	       528	opncls.c	FUNCTION_13	IF_1
0x40000d8	    0x48c743100000	               mov qword [rbx + 0x10], 0	       529	opncls.c	FUNCTION_13
0x40000e0	              0x5b	                                 pop rbx	       531	opncls.c	FUNCTION_13
0x40000e1	              0xc3	                                     ret	       531	opncls.c	FUNCTION_13
opncls_bwrite	WHILE,0:IF,0:DO,0:functions,0:CALL,0:ELSE,0:FOR,0:SWITCH,0	2
0x40000b0	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       517	opncls.c	FUNCTION_12
0x40000b7	              0xc3	                                     ret	       517	opncls.c	FUNCTION_12
bfd_make_writable	WHILE,0:IF,2:DO,0:functions,0:CALL,2:ELSE,0:FOR,0:SWITCH,0	32
0x4001880	              0x53	                                push rbx	       832	opncls.c	FUNCTION_23
0x4001881	        0xf6474418	           test byte [rdi + 0x44], 0x18 	       835	opncls.c	FUNCTION_23	IF_1
0x4001885	            0x7559	                           jne 0x40018e0	       835	opncls.c	FUNCTION_23	IF_1
0x4001887	          0x4889fb	                            mov rbx, rdi	       835	opncls.c	FUNCTION_23	IF_1
0x400188a	      0xbf10000000	                           mov edi, 0x10	       841	opncls.c	FUNCTION_23	CALL_2
0x400188f	      0xe800000000	                          call 0x4001894	       841	opncls.c	FUNCTION_23	CALL_2
0x4001894	          0x4885c0	                           test rax, rax	       842	opncls.c	FUNCTION_23	IF_2
0x4001897	            0x7457	                            je 0x40018f0	       842	opncls.c	FUNCTION_23	IF_2
0x4001899	        0x48894310	             mov qword [rbx + 0x10], rax	       844	opncls.c	FUNCTION_23
0x400189d	    0x48c700000000	                      mov qword [rax], 0	       846	opncls.c	FUNCTION_23
0x40018a4	    0x48c740080000	                  mov qword [rax + 8], 0	       847	opncls.c	FUNCTION_23
0x40018ac	    0x814b44000001	          or dword [rbx + 0x44], 0x10000	       849	opncls.c	FUNCTION_23
0x40018b3	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       852	opncls.c	FUNCTION_23
0x40018b7	    0x48c743180000	               mov qword [rbx + 0x18], 0	       850	opncls.c	FUNCTION_23
0x40018bf	    0x48c743580000	               mov qword [rbx + 0x58], 0	       851	opncls.c	FUNCTION_23
0x40018c7	    0x48c743300000	               mov qword [rbx + 0x30], 0	       853	opncls.c	FUNCTION_23
0x40018cf	          0x83e0e7	                     and eax, 0xffffffe7	       852	opncls.c	FUNCTION_23
0x40018d2	          0x83c810	                            or eax, 0x10	       852	opncls.c	FUNCTION_23
0x40018d5	          0x884344	               mov byte [rbx + 0x44], al	       852	opncls.c	FUNCTION_23
0x40018d8	      0xb801000000	                              mov eax, 1	       855	opncls.c	FUNCTION_23
0x40018dd	              0x5b	                                 pop rbx	       856	opncls.c	FUNCTION_23
0x40018de	              0xc3	                                     ret	       856	opncls.c	FUNCTION_23
0x40018df	              0x90	                                     nop	       856	opncls.c	FUNCTION_23
0x40018e0	      0xbf05000000	                              mov edi, 5	       837	opncls.c	FUNCTION_23	IF_1	CALL_1
0x40018e5	      0xe800000000	                          call 0x40018ea	       837	opncls.c	FUNCTION_23	IF_1	CALL_1
0x40018ea	            0x31c0	                            xor eax, eax	       838	opncls.c	FUNCTION_23	IF_1
0x40018ec	              0x5b	                                 pop rbx	       856	opncls.c	FUNCTION_23
0x40018ed	              0xc3	                                     ret	       856	opncls.c	FUNCTION_23
0x40018ee	            0x6690	                                     nop	       856	opncls.c	FUNCTION_23
0x40018f0	            0x31c0	                            xor eax, eax	       843	opncls.c	FUNCTION_23	IF_2
0x40018f2	              0x5b	                                 pop rbx	       856	opncls.c	FUNCTION_23
0x40018f3	              0xc3	                                     ret	       856	opncls.c	FUNCTION_23
opncls_bflush	WHILE,0:IF,0:DO,0:functions,0:CALL,0:ELSE,0:FOR,0:SWITCH,0	2
0x40000f0	            0x31c0	                            xor eax, eax	       537	opncls.c	FUNCTION_14
0x40000f2	              0xc3	                                     ret	       537	opncls.c	FUNCTION_14
_bfd_new_bfd_contained_in	WHILE,0:IF,2:DO,0:functions,0:CALL,1:ELSE,0:FOR,0:SWITCH,0	84
0x40004b0	              0x55	                                push rbp	       100	opncls.c	FUNCTION_2
0x40004b1	              0x53	                                push rbx	       100	opncls.c	FUNCTION_2
0x40004b2	          0x4889fd	                            mov rbp, rdi	       100	opncls.c	FUNCTION_2
0x40004b5	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x40004ba	        0x4883ec08	                              sub rsp, 8	       100	opncls.c	FUNCTION_2
0x40004be	      0xe800000000	                          call 0x40004c3	        62	opncls.c	FUNCTION_1	CALL_1
0x40004c3	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x40004c6	     0xf8416010000	                            je 0x40005e2	        63	opncls.c	FUNCTION_1	IF_1
0x40004cc	    0x8b1500000000	            mov edx, dword [0x040004d2] 	        66	opncls.c	FUNCTION_1	IF_2
0x40004d2	          0x4889c3	                            mov rbx, rax	        66	opncls.c	FUNCTION_1	IF_2
0x40004d5	            0x85d2	                           test edx, edx	        66	opncls.c	FUNCTION_1	IF_2
0x40004d7	     0xf85c3000000	                           jne 0x40005a0	        66	opncls.c	FUNCTION_1	IF_2
0x40004dd	    0x8b0500000000	            mov eax, dword [0x040004e3] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x40004e3	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x40004e6	    0x891500000000	            mov dword [0x040004ec], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x40004ec	          0x894340	             mov dword [rbx + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x40004ef	      0xe800000000	                          call 0x40004f4	        74	opncls.c	FUNCTION_1	CALL_2
0x40004f4	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x40004f7	    0x488983080100	            mov qword [rbx + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x40004fe	     0xf84cc000000	                            je 0x40005d0	        75	opncls.c	FUNCTION_1	IF_3
0x4000504	        0x488d7b68	                   lea rdi, [rbx + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000508	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x4000513	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000518	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x400051d	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000522	      0xe800000000	                          call 0x4000527	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000527	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000529	     0xf84c1000000	                            je 0x40005f0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x400052f	        0x488b4508	                mov rax, qword [rbp + 8]	       106	opncls.c	FUNCTION_2
0x4000533	        0x48894308	                mov qword [rbx + 8], rax	       106	opncls.c	FUNCTION_2
0x4000537	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       107	opncls.c	FUNCTION_2
0x400053b	        0x48894318	             mov qword [rbx + 0x18], rax	       107	opncls.c	FUNCTION_2
0x400053f	    0x48817d180000	               cmp qword [rbp + 0x18], 0	       108	opncls.c	FUNCTION_2	IF_2
0x4000547	            0x7477	                            je 0x40005c0	       108	opncls.c	FUNCTION_2	IF_2
0x4000549	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       111	opncls.c	FUNCTION_2
0x400054d	    0x4889abd00000	             mov qword [rbx + 0xd0], rbp	       110	opncls.c	FUNCTION_2
0x4000554	         0xfb65347	           movzx edx, byte [rbx + 0x47] 	       112	opncls.c	FUNCTION_2
0x4000558	         0xfb64b48	           movzx ecx, byte [rbx + 0x48] 	       113	opncls.c	FUNCTION_2
0x400055c	          0x83e0e7	                     and eax, 0xffffffe7	       111	opncls.c	FUNCTION_2
0x400055f	          0x83c808	                               or eax, 8	       111	opncls.c	FUNCTION_2
0x4000562	          0x83e2fb	                     and edx, 0xfffffffb	       112	opncls.c	FUNCTION_2
0x4000565	          0x83e1bf	                     and ecx, 0xffffffbf	       113	opncls.c	FUNCTION_2
0x4000568	          0x884344	               mov byte [rbx + 0x44], al	       111	opncls.c	FUNCTION_2
0x400056b	         0xfb64547	           movzx eax, byte [rbp + 0x47] 	       112	opncls.c	FUNCTION_2
0x400056f	          0x83e004	                              and eax, 4	       112	opncls.c	FUNCTION_2
0x4000572	             0x9d0	                             or eax, edx	       112	opncls.c	FUNCTION_2
0x4000574	          0x884347	               mov byte [rbx + 0x47], al	       112	opncls.c	FUNCTION_2
0x4000577	         0xfb65548	           movzx edx, byte [rbp + 0x48] 	       113	opncls.c	FUNCTION_2
0x400057b	          0x83e0df	                     and eax, 0xffffffdf	       114	opncls.c	FUNCTION_2
0x400057e	          0x83e240	                           and edx, 0x40	       113	opncls.c	FUNCTION_2
0x4000581	             0x9ca	                             or edx, ecx	       113	opncls.c	FUNCTION_2
0x4000583	          0x885348	               mov byte [rbx + 0x48], dl	       113	opncls.c	FUNCTION_2
0x4000586	         0xfb65547	           movzx edx, byte [rbp + 0x47] 	       114	opncls.c	FUNCTION_2
0x400058a	          0x83e220	                           and edx, 0x20	       114	opncls.c	FUNCTION_2
0x400058d	             0x9d0	                             or eax, edx	       114	opncls.c	FUNCTION_2
0x400058f	          0x884347	               mov byte [rbx + 0x47], al	       114	opncls.c	FUNCTION_2
0x4000592	          0x4889d8	                            mov rax, rbx	       115	opncls.c	FUNCTION_2
0x4000595	        0x4883c408	                              add rsp, 8	       116	opncls.c	FUNCTION_2
0x4000599	              0x5b	                                 pop rbx	       116	opncls.c	FUNCTION_2
0x400059a	              0x5d	                                 pop rbp	       116	opncls.c	FUNCTION_2
0x400059b	              0xc3	                                     ret	       116	opncls.c	FUNCTION_2
0x400059c	         0xf1f4000	                         nop dword [rax]	       116	opncls.c	FUNCTION_2
0x40005a0	    0x8b0500000000	            mov eax, dword [0x040005a6] 	        68	opncls.c	FUNCTION_1	IF_2
0x40005a6	          0x83ea01	                              sub edx, 1	        69	opncls.c	FUNCTION_1	IF_2
0x40005a9	    0x891500000000	            mov dword [0x040005af], edx 	        69	opncls.c	FUNCTION_1	IF_2
0x40005af	          0x83e801	                              sub eax, 1	        68	opncls.c	FUNCTION_1	IF_2
0x40005b2	    0x890500000000	            mov dword [0x040005b8], eax 	        68	opncls.c	FUNCTION_1	IF_2
0x40005b8	      0xe92fffffff	                           jmp 0x40004ec	        68	opncls.c	FUNCTION_1	IF_2
0x40005bd	           0xf1f00	                         nop dword [rax]	        68	opncls.c	FUNCTION_1	IF_2
0x40005c0	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       109	opncls.c	FUNCTION_2	IF_2
0x40005c4	        0x48894310	             mov qword [rbx + 0x10], rax	       109	opncls.c	FUNCTION_2	IF_2
0x40005c8	      0xe97cffffff	                           jmp 0x4000549	       109	opncls.c	FUNCTION_2	IF_2
0x40005cd	           0xf1f00	                         nop dword [rax]	       109	opncls.c	FUNCTION_2	IF_2
0x40005d0	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x40005d5	      0xe800000000	                          call 0x40005da	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x40005da	          0x4889df	                            mov rdi, rbx	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x40005dd	      0xe800000000	                          call 0x40005e2	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x40005e2	            0x31c0	                            xor eax, eax	       105	opncls.c	FUNCTION_2	IF_1
0x40005e4	            0xebaf	                           jmp 0x4000595	       105	opncls.c	FUNCTION_2	IF_1
0x40005e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       105	opncls.c	FUNCTION_2	IF_1
0x40005f0	          0x4889df	                            mov rdi, rbx	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x40005f3	      0xe800000000	                          call 0x40005f8	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x40005f8	            0x31c0	                            xor eax, eax	       105	opncls.c	FUNCTION_2	IF_1
0x40005fa	            0xeb99	                           jmp 0x4000595	       105	opncls.c	FUNCTION_2	IF_1
bfd_create_gnu_debuglink_section	WHILE,0:IF,4:DO,0:functions,0:CALL,8:ELSE,0:FOR,0:SWITCH,0	50
0x40029b0	          0x4885ff	                           test rdi, rdi	      1672	opncls.c	FUNCTION_40	IF_1
0x40029b3	            0x4154	                                push r12	      1667	opncls.c	FUNCTION_40
0x40029b5	              0x55	                                push rbp	      1667	opncls.c	FUNCTION_40
0x40029b6	              0x53	                                push rbx	      1667	opncls.c	FUNCTION_40
0x40029b7	            0x7477	                            je 0x4002a30	      1672	opncls.c	FUNCTION_40	IF_1
0x40029b9	          0x4885f6	                           test rsi, rsi	      1672	opncls.c	FUNCTION_40	IF_1
0x40029bc	            0x7472	                            je 0x4002a30	      1672	opncls.c	FUNCTION_40	IF_1
0x40029be	          0x4889fd	                            mov rbp, rdi	      1672	opncls.c	FUNCTION_40	IF_1
0x40029c1	          0x4889f7	                            mov rdi, rsi	      1679	opncls.c	FUNCTION_40	CALL_2
0x40029c4	      0xe800000000	                          call 0x40029c9	      1679	opncls.c	FUNCTION_40	CALL_2
0x40029c9	      0xbe00000000	                              mov esi, 0	      1681	opncls.c	FUNCTION_40	CALL_3
0x40029ce	          0x4889ef	                            mov rdi, rbp	      1681	opncls.c	FUNCTION_40	CALL_3
0x40029d1	          0x4989c4	                            mov r12, rax	      1679	opncls.c	FUNCTION_40	CALL_2
0x40029d4	      0xe800000000	                          call 0x40029d9	      1681	opncls.c	FUNCTION_40	CALL_3
0x40029d9	          0x4885c0	                           test rax, rax	      1682	opncls.c	FUNCTION_40	IF_2
0x40029dc	            0x7552	                           jne 0x4002a30	      1682	opncls.c	FUNCTION_40	IF_2
0x40029de	      0xba08210000	                         mov edx, 0x2108	      1690	opncls.c	FUNCTION_40	CALL_5
0x40029e3	      0xbe00000000	                              mov esi, 0	      1690	opncls.c	FUNCTION_40	CALL_5
0x40029e8	          0x4889ef	                            mov rdi, rbp	      1690	opncls.c	FUNCTION_40	CALL_5
0x40029eb	      0xe800000000	                          call 0x40029f0	      1690	opncls.c	FUNCTION_40	CALL_5
0x40029f0	          0x4885c0	                           test rax, rax	      1691	opncls.c	FUNCTION_40	IF_3
0x40029f3	          0x4889c3	                            mov rbx, rax	      1690	opncls.c	FUNCTION_40	CALL_5
0x40029f6	            0x7450	                            je 0x4002a48	      1691	opncls.c	FUNCTION_40	IF_3
0x40029f8	          0x4c89e7	                            mov rdi, r12	      1696	opncls.c	FUNCTION_40	CALL_6
0x40029fb	      0xe800000000	                          call 0x4002a00	      1696	opncls.c	FUNCTION_40	CALL_6
0x4002a00	        0x488d5004	                      lea rdx, [rax + 4]	      1697	opncls.c	FUNCTION_40
0x4002a04	          0x4889de	                            mov rsi, rbx	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4002a07	          0x4889ef	                            mov rdi, rbp	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4002a0a	        0x4883e2fc	             and rdx, 0xfffffffffffffffc	      1698	opncls.c	FUNCTION_40
0x4002a0e	        0x4883c204	                              add rdx, 4	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4002a12	      0xe800000000	                          call 0x4002a17	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4002a17	            0x85c0	                           test eax, eax	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4002a19	            0x742d	                            je 0x4002a48	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4002a1b	    0xc74370020000	               mov dword [rbx + 0x70], 2	      1696	bfd.h	FUNCTION_77
0x4002a22	          0x4889d8	                            mov rax, rbx	      1710	opncls.c	FUNCTION_40
0x4002a25	              0x5b	                                 pop rbx	      1711	opncls.c	FUNCTION_40
0x4002a26	              0x5d	                                 pop rbp	      1711	opncls.c	FUNCTION_40
0x4002a27	            0x415c	                                 pop r12	      1711	opncls.c	FUNCTION_40
0x4002a29	              0xc3	                                     ret	      1711	opncls.c	FUNCTION_40
0x4002a2a	    0x660f1f440000	                    nop word [rax + rax]	      1711	opncls.c	FUNCTION_40
0x4002a30	      0xbf05000000	                              mov edi, 5	      1674	opncls.c	FUNCTION_40	IF_1	CALL_1
0x4002a35	      0xe800000000	                          call 0x4002a3a	      1674	opncls.c	FUNCTION_40	IF_1	CALL_1
0x4002a3a	              0x5b	                                 pop rbx	      1711	opncls.c	FUNCTION_40
0x4002a3b	            0x31c0	                            xor eax, eax	      1675	opncls.c	FUNCTION_40	IF_1
0x4002a3d	              0x5d	                                 pop rbp	      1711	opncls.c	FUNCTION_40
0x4002a3e	            0x415c	                                 pop r12	      1711	opncls.c	FUNCTION_40
0x4002a40	              0xc3	                                     ret	      1711	opncls.c	FUNCTION_40
0x4002a41	     0xf1f80000000	                         nop dword [rax]	      1711	opncls.c	FUNCTION_40
0x4002a48	            0x31c0	                            xor eax, eax	      1692	opncls.c	FUNCTION_40	IF_3
0x4002a4a	            0xebd9	                           jmp 0x4002a25	      1692	opncls.c	FUNCTION_40	IF_3
bfd_follow_gnu_debuglink	WHILE,0:IF,0:DO,0:functions,0:CALL,1:ELSE,0:FOR,0:SWITCH,0	409
0x4001f50	            0x4157	                                push r15	      1591	opncls.c	FUNCTION_37
0x4001f52	            0x4156	                                push r14	      1591	opncls.c	FUNCTION_37
0x4001f54	          0x4989f7	                            mov r15, rsi	      1591	opncls.c	FUNCTION_37
0x4001f57	            0x4155	                                push r13	      1591	opncls.c	FUNCTION_37
0x4001f59	            0x4154	                                push r12	      1591	opncls.c	FUNCTION_37
0x4001f5b	              0x55	                                push rbp	      1591	opncls.c	FUNCTION_37
0x4001f5c	              0x53	                                push rbx	      1591	opncls.c	FUNCTION_37
0x4001f5d	          0x4889fd	                            mov rbp, rdi	      1591	opncls.c	FUNCTION_37
0x4001f60	        0x4883ec28	                           sub rsp, 0x28	      1591	opncls.c	FUNCTION_37
0x4001f64	    0x64488b042528	                mov rax, qword fs:[0x28]	      1591	opncls.c	FUNCTION_37
0x4001f6d	      0x4889442418	             mov qword [rsp + 0x18], rax	      1591	opncls.c	FUNCTION_37
0x4001f72	            0x31c0	                            xor eax, eax	      1591	opncls.c	FUNCTION_37
0x4001f74	          0x4885ff	                           test rdi, rdi	      1424	opncls.c	FUNCTION_36	CALL_1
0x4001f77	     0xf84c3040000	                            je 0x4002440	      1424	opncls.c	FUNCTION_36	CALL_1
0x4001f7d	          0x4d85ff	                           test r15, r15	      1426	opncls.c	FUNCTION_36	IF_1
0x4001f80	      0xb800000000	                              mov eax, 0	      1426	opncls.c	FUNCTION_36	IF_1
0x4001f85	        0x4c0f44f8	                          cmove r15, rax	      1426	opncls.c	FUNCTION_36	IF_1
0x4001f89	      0x48837d0000	                      cmp qword [rbp], 0	      1429	opncls.c	FUNCTION_36	IF_2
0x4001f8e	     0xf84e2050000	                            je 0x4002576	      1429	opncls.c	FUNCTION_36	IF_2
0x4001f94	      0xbe00000000	                              mov esi, 0	      1187	opncls.c	FUNCTION_31	CALL_3
0x4001f99	          0x4889ef	                            mov rdi, rbp	      1187	opncls.c	FUNCTION_31	CALL_3
0x4001f9c	      0xe800000000	                          call 0x4001fa1	      1187	opncls.c	FUNCTION_31	CALL_3
0x4001fa1	          0x4885c0	                           test rax, rax	      1189	opncls.c	FUNCTION_31	IF_1
0x4001fa4	          0x4989c4	                            mov r12, rax	      1187	opncls.c	FUNCTION_31	CALL_3
0x4001fa7	     0xf8412020000	                            je 0x40021bf	      1189	opncls.c	FUNCTION_31	IF_1
0x4001fad	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      1192	opncls.c	FUNCTION_31
0x4001fb1	        0x4883fb07	                              cmp rbx, 7	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001fb5	     0xf8604020000	                           jbe 0x40021bf	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001fbb	          0x4889ef	                            mov rdi, rbp	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001fbe	      0xe800000000	                          call 0x4001fc3	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001fc3	          0x4839c3	                            cmp rbx, rax	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001fc6	     0xf83f3010000	                           jae 0x40021bf	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001fcc	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001fd1	          0x4c89e6	                            mov rsi, r12	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001fd4	          0x4889ef	                            mov rdi, rbp	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001fd7	      0xe800000000	                          call 0x4001fdc	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001fdc	            0x85c0	                           test eax, eax	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001fde	     0xf84cc010000	                            je 0x40021b0	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001fe4	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      1206	opncls.c	FUNCTION_31
0x4001fe9	          0x4889de	                            mov rsi, rbx	      1208	opncls.c	FUNCTION_31	CALL_7
0x4001fec	          0x4c89ef	                            mov rdi, r13	      1208	opncls.c	FUNCTION_31	CALL_7
0x4001fef	      0xe800000000	                          call 0x4001ff4	      1208	opncls.c	FUNCTION_31	CALL_7
0x4001ff4	          0x8d7804	                      lea edi, [rax + 4]	      1209	opncls.c	FUNCTION_31
0x4001ff7	          0x83e7fc	                     and edi, 0xfffffffc	      1209	opncls.c	FUNCTION_31
0x4001ffa	          0x8d4704	                      lea eax, [rdi + 4]	      1210	opncls.c	FUNCTION_31	IF_5
0x4001ffd	          0x4839c3	                            cmp rbx, rax	      1210	opncls.c	FUNCTION_31	IF_5
0x4002000	     0xf82b9010000	                            jb 0x40021bf	      1210	opncls.c	FUNCTION_31	IF_5
0x4002006	        0x488b4508	                mov rax, qword [rbp + 8]	      1213	opncls.c	FUNCTION_31
0x400200a	          0x4c01ef	                            add rdi, r13	      1213	opncls.c	FUNCTION_31
0x400200d	          0xff5038	                 call qword [rax + 0x38]	      1213	opncls.c	FUNCTION_31
0x4002010	      0x41807d0000	                       cmp byte [r13], 0	      1440	opncls.c	FUNCTION_36	IF_4
0x4002015	      0x4889442408	                mov qword [rsp + 8], rax	      1213	opncls.c	FUNCTION_31
0x400201a	     0xf8434040000	                            je 0x4002454	      1440	opncls.c	FUNCTION_36	IF_4
0x4002020	        0x4c8b6500	                    mov r12, qword [rbp]	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002024	          0x4c89e7	                            mov rdi, r12	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002027	      0xe800000000	                          call 0x400202c	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400202c	          0x4885c0	                           test rax, rax	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400202f	     0xf8438040000	                            je 0x400246d	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002035	    0x41807c04ff2f	         cmp byte [r12 + rax - 1], 0x2f 	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400203b	        0x488d58ff	                      lea rbx, [rax - 1]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400203f	            0x7522	                           jne 0x4002063	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002041	      0xe91c050000	                           jmp 0x4002562	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002050	    0x41807c1cff2f	         cmp byte [r12 + rbx - 1], 0x2f 	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002056	        0x488d43ff	                      lea rax, [rbx - 1]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400205a	     0xf8468020000	                            je 0x40022c8	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002060	          0x4889c3	                            mov rbx, rax	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002063	          0x4885db	                           test rbx, rbx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002066	            0x75e8	                           jne 0x4002050	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002068	      0xbf01000000	                              mov edi, 1	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400206d	      0xe800000000	                          call 0x4002072	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x4002072	          0x4885c0	                           test rax, rax	      1454	opncls.c	FUNCTION_36	IF_5	IF_7
0x4002075	          0x4989c6	                            mov r14, rax	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x4002078	     0xf8409050000	                            je 0x4002587	      1454	opncls.c	FUNCTION_36	IF_5	IF_7
0x400207e	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_46	CALL_3
0x4002082	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_46	CALL_3
0x4002085	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_46	CALL_3
0x4002088	      0xe800000000	                          call 0x400208d	        53	string3.h	FUNCTION_46	CALL_3
0x400208d	      0x41c6041e00	                 mov byte [r14 + rbx], 0	      1460	opncls.c	FUNCTION_36	IF_5
0x4002092	        0x488b7d00	                    mov rdi, qword [rbp]	      1471	opncls.c	FUNCTION_36	CALL_12
0x4002096	      0xe800000000	                          call 0x400209b	      1471	opncls.c	FUNCTION_36	CALL_12
0x400209b	          0x4889c7	                            mov rdi, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400209e	          0x4889c5	                            mov rbp, rax	      1471	opncls.c	FUNCTION_36	CALL_12
0x40020a1	      0xe800000000	                          call 0x40020a6	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40020a6	          0x4885c0	                           test rax, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40020a9	     0xf84ab040000	                            je 0x400255a	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40020af	      0x807c05ff2f	         cmp byte [rbp + rax - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020b4	        0x4c8d60ff	                      lea r12, [rax - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020b8	            0x7516	                           jne 0x40020d0	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020ba	      0xe9af040000	                           jmp 0x400256e	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020bf	              0x90	                                     nop	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020c0	    0x42807c25ff2f	         cmp byte [rbp + r12 - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020c6	      0x498d4424ff	                      lea rax, [r12 - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020cb	            0x7408	                            je 0x40020d5	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020cd	          0x4989c4	                            mov r12, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x40020d0	          0x4d85e4	                           test r12, r12	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40020d3	            0x75eb	                           jne 0x40020c0	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x40020d5	          0x4c89ff	                            mov rdi, r15	      1485	opncls.c	FUNCTION_36	CALL_16
0x40020d8	    0x42c644250000	                 mov byte [rbp + r12], 0	      1475	opncls.c	FUNCTION_36
0x40020de	      0xe800000000	                          call 0x40020e3	      1485	opncls.c	FUNCTION_36	CALL_16
0x40020e3	          0x4c89ef	                            mov rdi, r13	      1494	opncls.c	FUNCTION_36	CALL_20
0x40020e6	        0x48890424	                    mov qword [rsp], rax	      1485	opncls.c	FUNCTION_36	CALL_16
0x40020ea	      0xe800000000	                          call 0x40020ef	      1494	opncls.c	FUNCTION_36	CALL_20
0x40020ef	        0x488b1424	                    mov rdx, qword [rsp]	      1484	opncls.c	FUNCTION_36
0x40020f3	          0x4c39e3	                            cmp rbx, r12	      1484	opncls.c	FUNCTION_36
0x40020f6	        0x490f42dc	                          cmovb rbx, r12	      1484	opncls.c	FUNCTION_36
0x40020fa	      0x488d7c0229	            lea rdi, [rdx + rax + 0x29] 	      1484	opncls.c	FUNCTION_36
0x40020ff	          0x4801df	                            add rdi, rbx	      1484	opncls.c	FUNCTION_36
0x4002102	      0xe800000000	                          call 0x4002107	      1484	opncls.c	FUNCTION_36
0x4002107	          0x4885c0	                           test rax, rax	      1496	opncls.c	FUNCTION_36	IF_9
0x400210a	        0x48890424	                    mov qword [rsp], rax	      1484	opncls.c	FUNCTION_36
0x400210e	          0x4889c3	                            mov rbx, rax	      1496	opncls.c	FUNCTION_36	IF_9
0x4002111	     0xf84f1000000	                            je 0x4002208	      1496	opncls.c	FUNCTION_36	IF_9
0x4002117	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_58	CALL_1
0x400211a	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x400211d	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002120	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002125	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x400212c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002131	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002133	      0xe800000000	                          call 0x4002138	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002138	      0xbe00000000	                              mov esi, 0	      1337	opncls.c	FUNCTION_34	CALL_3
0x400213d	          0x4889df	                            mov rdi, rbx	      1337	opncls.c	FUNCTION_34	CALL_3
0x4002140	      0xe800000000	                          call 0x4002145	      1337	opncls.c	FUNCTION_34	CALL_3
0x4002145	          0x4885c0	                           test rax, rax	      1338	opncls.c	FUNCTION_34	IF_1
0x4002148	          0x4989c4	                            mov r12, rax	      1337	opncls.c	FUNCTION_34	CALL_3
0x400214b	     0xf84e4000000	                            je 0x4002235	      1338	opncls.c	FUNCTION_34	IF_1
0x4002151	            0x31db	                            xor ebx, ebx	      1338	opncls.c	FUNCTION_34	IF_1
0x4002153	       0xf1f440000	                   nop dword [rax + rax]	      1338	opncls.c	FUNCTION_34	IF_1
0x4002158	          0x4c89e1	                            mov rcx, r12	       295	stdio2.h	FUNCTION_72	CALL_9
0x400215b	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002160	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002165	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_72	CALL_9
0x400216a	      0xe800000000	                          call 0x400216f	       295	stdio2.h	FUNCTION_72	CALL_9
0x400216f	          0x4885c0	                           test rax, rax	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x4002172	     0xf84ae000000	                            je 0x4002226	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x4002178	    0x480500000000	                              add rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x400217e	            0xf7d3	                                 not ebx	      1142	opncls.c	FUNCTION_30
0x4002180	    0x483d00000000	                              cmp rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002186	            0x7624	                           jbe 0x40021ac	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002188	      0xba00000000	                              mov edx, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x400218d	           0xf1f00	                         nop dword [rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002190	            0x89d9	                            mov ecx, ebx	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002192	            0x320a	                      xor cl, byte [rdx]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002194	        0x4883c201	                              add rdx, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002198	        0x48c1eb08	                              shr rbx, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x400219c	           0xfb6c9	                           movzx ecx, cl	      1144	opncls.c	FUNCTION_30	FOR_1
0x400219f	    0x48331ccd0000	                  xor rbx, qword [rcx*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x40021a7	          0x4839d0	                            cmp rax, rdx	      1143	opncls.c	FUNCTION_30	FOR_1
0x40021aa	            0x75e4	                           jne 0x4002190	      1143	opncls.c	FUNCTION_30	FOR_1
0x40021ac	            0xf7d3	                                 not ebx	      1145	opncls.c	FUNCTION_30
0x40021ae	            0xeba8	                           jmp 0x4002158	      1145	opncls.c	FUNCTION_30
0x40021b0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x40021b5	          0x4885ff	                           test rdi, rdi	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x40021b8	            0x7405	                            je 0x40021bf	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x40021ba	      0xe800000000	                          call 0x40021bf	      1201	opncls.c	FUNCTION_31	IF_3	CALL_6
0x40021bf	            0x31c0	                            xor eax, eax	      1438	opncls.c	FUNCTION_36	IF_3
0x40021c1	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1597	opncls.c	FUNCTION_37
0x40021c6	    0x644833342528	                xor rsi, qword fs:[0x28]	      1597	opncls.c	FUNCTION_37
0x40021cf	     0xf85c1030000	                           jne 0x4002596	      1597	opncls.c	FUNCTION_37
0x40021d5	        0x4883c428	                           add rsp, 0x28	      1597	opncls.c	FUNCTION_37
0x40021d9	              0x5b	                                 pop rbx	      1597	opncls.c	FUNCTION_37
0x40021da	              0x5d	                                 pop rbp	      1597	opncls.c	FUNCTION_37
0x40021db	            0x415c	                                 pop r12	      1597	opncls.c	FUNCTION_37
0x40021dd	            0x415d	                                 pop r13	      1597	opncls.c	FUNCTION_37
0x40021df	            0x415e	                                 pop r14	      1597	opncls.c	FUNCTION_37
0x40021e1	            0x415f	                                 pop r15	      1597	opncls.c	FUNCTION_37
0x40021e3	              0xc3	                                     ret	      1597	opncls.c	FUNCTION_37
0x40021e4	          0x4c89e7	                            mov rdi, r12	      1344	opncls.c	FUNCTION_34	CALL_6
0x40021e7	      0xe800000000	                          call 0x40021ec	      1344	opncls.c	FUNCTION_34	CALL_6
0x40021ec	      0x48395c2408	                cmp qword [rsp + 8], rbx	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x40021f1	            0x7415	                            je 0x4002208	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x40021f3	        0x488b3c24	                    mov rdi, qword [rsp]	      1555	opncls.c	FUNCTION_36	CALL_32
0x40021f7	      0xe800000000	                          call 0x40021fc	      1555	opncls.c	FUNCTION_36	CALL_32
0x40021fc	    0x48c704240000	                      mov qword [rsp], 0	      1556	opncls.c	FUNCTION_36
0x4002204	         0xf1f4000	                         nop dword [rax]	      1556	opncls.c	FUNCTION_36
0x4002208	          0x4c89ef	                            mov rdi, r13	      1559	opncls.c	FUNCTION_36	CALL_33
0x400220b	      0xe800000000	                          call 0x4002210	      1559	opncls.c	FUNCTION_36	CALL_33
0x4002210	          0x4c89f7	                            mov rdi, r14	      1560	opncls.c	FUNCTION_36	CALL_34
0x4002213	      0xe800000000	                          call 0x4002218	      1560	opncls.c	FUNCTION_36	CALL_34
0x4002218	          0x4889ef	                            mov rdi, rbp	      1561	opncls.c	FUNCTION_36	CALL_35
0x400221b	      0xe800000000	                          call 0x4002220	      1561	opncls.c	FUNCTION_36	CALL_35
0x4002220	        0x488b0424	                    mov rax, qword [rsp]	      1562	opncls.c	FUNCTION_36
0x4002224	            0xeb9b	                           jmp 0x40021c1	      1562	opncls.c	FUNCTION_36
0x4002226	          0x4c89e7	                            mov rdi, r12	      1344	opncls.c	FUNCTION_34	CALL_6
0x4002229	      0xe800000000	                          call 0x400222e	      1344	opncls.c	FUNCTION_34	CALL_6
0x400222e	      0x48395c2408	                cmp qword [rsp + 8], rbx	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4002233	            0x74d3	                            je 0x4002208	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4002235	        0x488b3c24	                    mov rdi, qword [rsp]	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002239	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x400223c	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_58	CALL_1
0x400223f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002244	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x400224b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002250	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002252	            0x31db	                            xor ebx, ebx	      1338	opncls.c	FUNCTION_34	IF_1
0x4002254	      0xe800000000	                          call 0x4002259	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002259	        0x488b3c24	                    mov rdi, qword [rsp]	      1337	opncls.c	FUNCTION_34	CALL_3
0x400225d	      0xbe00000000	                              mov esi, 0	      1337	opncls.c	FUNCTION_34	CALL_3
0x4002262	      0xe800000000	                          call 0x4002267	      1337	opncls.c	FUNCTION_34	CALL_3
0x4002267	          0x4885c0	                           test rax, rax	      1338	opncls.c	FUNCTION_34	IF_1
0x400226a	          0x4989c4	                            mov r12, rax	      1337	opncls.c	FUNCTION_34	CALL_3
0x400226d	            0x7475	                            je 0x40022e4	      1338	opncls.c	FUNCTION_34	IF_1
0x400226f	              0x90	                                     nop	      1338	opncls.c	FUNCTION_34	IF_1
0x4002270	          0x4c89e1	                            mov rcx, r12	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002273	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002278	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_72	CALL_9
0x400227d	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002282	      0xe800000000	                          call 0x4002287	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002287	          0x4885c0	                           test rax, rax	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x400228a	            0x7445	                            je 0x40022d1	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x400228c	    0x480500000000	                              add rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002292	            0xf7d3	                                 not ebx	      1142	opncls.c	FUNCTION_30
0x4002294	    0x483d00000000	                              cmp rax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x400229a	            0x7628	                           jbe 0x40022c4	      1143	opncls.c	FUNCTION_30	FOR_1
0x400229c	      0xba00000000	                              mov edx, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x40022a1	     0xf1f80000000	                         nop dword [rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x40022a8	            0x89d9	                            mov ecx, ebx	      1144	opncls.c	FUNCTION_30	FOR_1
0x40022aa	            0x320a	                      xor cl, byte [rdx]	      1144	opncls.c	FUNCTION_30	FOR_1
0x40022ac	        0x4883c201	                              add rdx, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x40022b0	        0x48c1eb08	                              shr rbx, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x40022b4	           0xfb6c9	                           movzx ecx, cl	      1144	opncls.c	FUNCTION_30	FOR_1
0x40022b7	    0x48331ccd0000	                  xor rbx, qword [rcx*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x40022bf	          0x4839d0	                            cmp rax, rdx	      1143	opncls.c	FUNCTION_30	FOR_1
0x40022c2	            0x75e4	                           jne 0x40022a8	      1143	opncls.c	FUNCTION_30	FOR_1
0x40022c4	            0xf7d3	                                 not ebx	      1145	opncls.c	FUNCTION_30
0x40022c6	            0xeba8	                           jmp 0x4002270	      1145	opncls.c	FUNCTION_30
0x40022c8	        0x488d7b01	                      lea rdi, [rbx + 1]	      1145	opncls.c	FUNCTION_30
0x40022cc	      0xe99cfdffff	                           jmp 0x400206d	      1145	opncls.c	FUNCTION_30
0x40022d1	          0x4c89e7	                            mov rdi, r12	      1344	opncls.c	FUNCTION_34	CALL_6
0x40022d4	      0xe800000000	                          call 0x40022d9	      1344	opncls.c	FUNCTION_34	CALL_6
0x40022d9	      0x48395c2408	                cmp qword [rsp + 8], rbx	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x40022de	     0xf8424ffffff	                            je 0x4002208	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x40022e4	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x40022e8	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_58	CALL_1
0x40022eb	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40022f1	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x40022f3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        33	stdio2.h	FUNCTION_58	CALL_1
0x40022f8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40022fd	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002304	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002309	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x400230b	            0x31db	                            xor ebx, ebx	      1338	opncls.c	FUNCTION_34	IF_1
0x400230d	      0xe800000000	                          call 0x4002312	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002312	              0x59	                                 pop rcx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002313	              0x5e	                                 pop rsi	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002314	        0x488b3c24	                    mov rdi, qword [rsp]	      1337	opncls.c	FUNCTION_34	CALL_3
0x4002318	      0xbe00000000	                              mov esi, 0	      1337	opncls.c	FUNCTION_34	CALL_3
0x400231d	      0xe800000000	                          call 0x4002322	      1337	opncls.c	FUNCTION_34	CALL_3
0x4002322	          0x4885c0	                           test rax, rax	      1338	opncls.c	FUNCTION_34	IF_1
0x4002325	          0x4989c4	                            mov r12, rax	      1337	opncls.c	FUNCTION_34	CALL_3
0x4002328	            0x7471	                            je 0x400239b	      1338	opncls.c	FUNCTION_34	IF_1
0x400232a	    0x660f1f440000	                    nop word [rax + rax]	      1338	opncls.c	FUNCTION_34	IF_1
0x4002330	          0x4c89e1	                            mov rcx, r12	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002333	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002338	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_72	CALL_9
0x400233d	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002342	      0xe800000000	                          call 0x4002347	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002347	          0x4885c0	                           test rax, rax	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x400234a	            0x743c	                            je 0x4002388	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x400234c	    0x488d88000000	                          lea rcx, [rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002353	            0xf7d3	                                 not ebx	      1142	opncls.c	FUNCTION_30
0x4002355	    0x4881f9000000	                              cmp rcx, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x400235c	            0x7626	                           jbe 0x4002384	      1143	opncls.c	FUNCTION_30	FOR_1
0x400235e	      0xb800000000	                              mov eax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002363	       0xf1f440000	                   nop dword [rax + rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002368	            0x89da	                            mov edx, ebx	      1144	opncls.c	FUNCTION_30	FOR_1
0x400236a	            0x3210	                      xor dl, byte [rax]	      1144	opncls.c	FUNCTION_30	FOR_1
0x400236c	        0x4883c001	                              add rax, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002370	        0x48c1eb08	                              shr rbx, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002374	           0xfb6d2	                           movzx edx, dl	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002377	    0x48331cd50000	                  xor rbx, qword [rdx*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x400237f	          0x4839c1	                            cmp rcx, rax	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002382	            0x75e4	                           jne 0x4002368	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002384	            0xf7d3	                                 not ebx	      1145	opncls.c	FUNCTION_30
0x4002386	            0xeba8	                           jmp 0x4002330	      1145	opncls.c	FUNCTION_30
0x4002388	          0x4c89e7	                            mov rdi, r12	      1344	opncls.c	FUNCTION_34	CALL_6
0x400238b	      0xe800000000	                          call 0x4002390	      1344	opncls.c	FUNCTION_34	CALL_6
0x4002390	      0x48395c2408	                cmp qword [rsp + 8], rbx	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4002395	     0xf846dfeffff	                            je 0x4002208	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400239b	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x400239f	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023a2	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023a8	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023aa	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023af	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023b4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023bb	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023c0	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023c2	            0x31db	                            xor ebx, ebx	      1338	opncls.c	FUNCTION_34	IF_1
0x40023c4	      0xe800000000	                          call 0x40023c9	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023c9	              0x58	                                 pop rax	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023ca	              0x5a	                                 pop rdx	        33	stdio2.h	FUNCTION_58	CALL_1
0x40023cb	        0x488b3c24	                    mov rdi, qword [rsp]	      1337	opncls.c	FUNCTION_34	CALL_3
0x40023cf	      0xbe00000000	                              mov esi, 0	      1337	opncls.c	FUNCTION_34	CALL_3
0x40023d4	      0xe800000000	                          call 0x40023d9	      1337	opncls.c	FUNCTION_34	CALL_3
0x40023d9	          0x4885c0	                           test rax, rax	      1338	opncls.c	FUNCTION_34	IF_1
0x40023dc	          0x4989c4	                            mov r12, rax	      1337	opncls.c	FUNCTION_34	CALL_3
0x40023df	     0xf84a2000000	                            je 0x4002487	      1338	opncls.c	FUNCTION_34	IF_1
0x40023e5	          0x4c89e1	                            mov rcx, r12	       295	stdio2.h	FUNCTION_72	CALL_9
0x40023e8	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_72	CALL_9
0x40023ed	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_72	CALL_9
0x40023f2	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_72	CALL_9
0x40023f7	      0xe800000000	                          call 0x40023fc	       295	stdio2.h	FUNCTION_72	CALL_9
0x40023fc	          0x4885c0	                           test rax, rax	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x40023ff	            0x7473	                            je 0x4002474	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x4002401	    0x488d88000000	                          lea rcx, [rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002408	            0xf7d3	                                 not ebx	      1142	opncls.c	FUNCTION_30
0x400240a	    0x4881f9000000	                              cmp rcx, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002411	            0x7629	                           jbe 0x400243c	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002413	      0xb800000000	                              mov eax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002418	     0xf1f84000000	                   nop dword [rax + rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002420	            0x89da	                            mov edx, ebx	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002422	            0x3210	                      xor dl, byte [rax]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002424	        0x4883c001	                              add rax, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002428	        0x48c1eb08	                              shr rbx, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x400242c	           0xfb6d2	                           movzx edx, dl	      1144	opncls.c	FUNCTION_30	FOR_1
0x400242f	    0x48331cd50000	                  xor rbx, qword [rdx*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002437	          0x4839c1	                            cmp rcx, rax	      1143	opncls.c	FUNCTION_30	FOR_1
0x400243a	            0x75e4	                           jne 0x4002420	      1143	opncls.c	FUNCTION_30	FOR_1
0x400243c	            0xf7d3	                                 not ebx	      1145	opncls.c	FUNCTION_30
0x400243e	            0xeba5	                           jmp 0x40023e5	      1145	opncls.c	FUNCTION_30
0x4002440	      0xbe90050000	                          mov esi, 0x590	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002445	      0xbf00000000	                              mov edi, 0	      1424	opncls.c	FUNCTION_36	CALL_1
0x400244a	      0xe800000000	                          call 0x400244f	      1424	opncls.c	FUNCTION_36	CALL_1
0x400244f	      0xe929fbffff	                           jmp 0x4001f7d	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002454	          0x4c89ef	                            mov rdi, r13	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x4002457	      0xe800000000	                          call 0x400245c	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x400245c	      0xbf10000000	                           mov edi, 0x10	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x4002461	      0xe800000000	                          call 0x4002466	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x4002466	            0x31c0	                            xor eax, eax	      1444	opncls.c	FUNCTION_36	IF_4
0x4002468	      0xe954fdffff	                           jmp 0x40021c1	      1444	opncls.c	FUNCTION_36	IF_4
0x400246d	            0x31db	                            xor ebx, ebx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400246f	      0xe9f4fbffff	                           jmp 0x4002068	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4002474	          0x4c89e7	                            mov rdi, r12	      1344	opncls.c	FUNCTION_34	CALL_6
0x4002477	      0xe800000000	                          call 0x400247c	      1344	opncls.c	FUNCTION_34	CALL_6
0x400247c	      0x48395c2408	                cmp qword [rsp + 8], rbx	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002481	     0xf8481fdffff	                            je 0x4002208	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002487	        0x488b3c24	                    mov rdi, qword [rsp]	       110	string3.h	FUNCTION_52	CALL_3
0x400248b	          0x4c89fe	                            mov rsi, r15	       110	string3.h	FUNCTION_52	CALL_3
0x400248e	      0xe800000000	                          call 0x4002493	       110	string3.h	FUNCTION_52	CALL_3
0x4002493	          0x4c89ff	                            mov rdi, r15	      1535	opncls.c	FUNCTION_36	CALL_26
0x4002496	          0x4889c3	                            mov rbx, rax	       110	string3.h	FUNCTION_52	CALL_3
0x4002499	      0xe800000000	                          call 0x400249e	      1535	opncls.c	FUNCTION_36	CALL_26
0x400249e	        0x4883f801	                              cmp rax, 1	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x40024a2	            0x7416	                            je 0x40024ba	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x40024a4	    0x41807c07ff2f	         cmp byte [r15 + rax - 1], 0x2f 	      1539	opncls.c	FUNCTION_36	IF_14	IF_15
0x40024aa	            0x740e	                            je 0x40024ba	      1539	opncls.c	FUNCTION_36	IF_14	IF_15
0x40024ac	        0x807d002f	                    cmp byte [rbp], 0x2f	      1540	opncls.c	FUNCTION_36	IF_14	IF_15
0x40024b0	            0x7408	                            je 0x40024ba	      1540	opncls.c	FUNCTION_36	IF_14	IF_15
0x40024b2	      0xbf2f000000	                           mov edi, 0x2f	       148	string3.h	FUNCTION_56	CALL_3
0x40024b7	          0x66893b	                      mov word [rbx], di	       148	string3.h	FUNCTION_56	CALL_3
0x40024ba	        0x488b1c24	                    mov rbx, qword [rsp]	       148	string3.h	FUNCTION_56	CALL_3
0x40024be	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_56	CALL_3
0x40024c1	      0xe800000000	                          call 0x40024c6	       148	string3.h	FUNCTION_56	CALL_3
0x40024c6	        0x488d3c03	                    lea rdi, [rbx + rax]	       148	string3.h	FUNCTION_56	CALL_3
0x40024ca	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_56	CALL_3
0x40024cd	      0xe800000000	                          call 0x40024d2	       148	string3.h	FUNCTION_56	CALL_3
0x40024d2	          0x4c89ee	                            mov rsi, r13	       148	string3.h	FUNCTION_56	CALL_3
0x40024d5	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_56	CALL_3
0x40024d8	      0xe800000000	                          call 0x40024dd	       148	string3.h	FUNCTION_56	CALL_3
0x40024dd	      0xbe00000000	                              mov esi, 0	      1337	opncls.c	FUNCTION_34	CALL_3
0x40024e2	          0x4889df	                            mov rdi, rbx	      1337	opncls.c	FUNCTION_34	CALL_3
0x40024e5	      0xe800000000	                          call 0x40024ea	      1337	opncls.c	FUNCTION_34	CALL_3
0x40024ea	          0x4885c0	                           test rax, rax	      1338	opncls.c	FUNCTION_34	IF_1
0x40024ed	          0x4989c4	                            mov r12, rax	      1337	opncls.c	FUNCTION_34	CALL_3
0x40024f0	     0xf84fdfcffff	                            je 0x40021f3	      1338	opncls.c	FUNCTION_34	IF_1
0x40024f6	            0x31db	                            xor ebx, ebx	      1338	opncls.c	FUNCTION_34	IF_1
0x40024f8	          0x4c89e1	                            mov rcx, r12	       295	stdio2.h	FUNCTION_72	CALL_9
0x40024fb	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002500	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_72	CALL_9
0x4002505	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_72	CALL_9
0x400250a	      0xe800000000	                          call 0x400250f	       295	stdio2.h	FUNCTION_72	CALL_9
0x400250f	          0x4885c0	                           test rax, rax	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x4002512	     0xf84ccfcffff	                            je 0x40021e4	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x4002518	    0x488db0000000	                          lea rsi, [rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x400251f	            0x89da	                            mov edx, ebx	      1142	opncls.c	FUNCTION_30
0x4002521	            0xf7d2	                                 not edx	      1142	opncls.c	FUNCTION_30
0x4002523	    0x4881fe000000	                              cmp rsi, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x400252a	            0x7628	                           jbe 0x4002554	      1143	opncls.c	FUNCTION_30	FOR_1
0x400252c	      0xb800000000	                              mov eax, 0	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002531	     0xf1f80000000	                         nop dword [rax]	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002538	            0x89d1	                            mov ecx, edx	      1144	opncls.c	FUNCTION_30	FOR_1
0x400253a	            0x3208	                      xor cl, byte [rax]	      1144	opncls.c	FUNCTION_30	FOR_1
0x400253c	        0x4883c001	                              add rax, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002540	        0x48c1ea08	                              shr rdx, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002544	           0xfb6c9	                           movzx ecx, cl	      1144	opncls.c	FUNCTION_30	FOR_1
0x4002547	    0x483314cd0000	                  xor rdx, qword [rcx*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x400254f	          0x4839c6	                            cmp rsi, rax	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002552	            0x75e4	                           jne 0x4002538	      1143	opncls.c	FUNCTION_30	FOR_1
0x4002554	            0x89d3	                            mov ebx, edx	      1145	opncls.c	FUNCTION_30
0x4002556	            0xf7d3	                                 not ebx	      1145	opncls.c	FUNCTION_30
0x4002558	            0xeb9e	                           jmp 0x40024f8	      1145	opncls.c	FUNCTION_30
0x400255a	          0x4531e4	                          xor r12d, r12d	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400255d	      0xe973fbffff	                           jmp 0x40020d5	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002562	        0x488d7801	                      lea rdi, [rax + 1]	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002566	          0x4889c3	                            mov rbx, rax	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4002569	      0xe9fffaffff	                           jmp 0x400206d	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400256e	          0x4989c4	                            mov r12, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002571	      0xe95ffbffff	                           jmp 0x40020d5	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002576	      0xbf05000000	                              mov edi, 5	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x400257b	      0xe800000000	                          call 0x4002580	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x4002580	            0x31c0	                            xor eax, eax	      1432	opncls.c	FUNCTION_36	IF_2
0x4002582	      0xe93afcffff	                           jmp 0x40021c1	      1432	opncls.c	FUNCTION_36	IF_2
0x4002587	          0x4c89ef	                            mov rdi, r13	      1456	opncls.c	FUNCTION_36	IF_5	IF_7	CALL_9
0x400258a	      0xe800000000	                          call 0x400258f	      1456	opncls.c	FUNCTION_36	IF_5	IF_7	CALL_9
0x400258f	            0x31c0	                            xor eax, eax	      1457	opncls.c	FUNCTION_36	IF_5	IF_7
0x4002591	      0xe92bfcffff	                           jmp 0x40021c1	      1457	opncls.c	FUNCTION_36	IF_5	IF_7
0x4002596	      0xe800000000	                          call 0x400259b	      1597	opncls.c	FUNCTION_37
bfd_follow_build_id_debuglink	WHILE,0:IF,0:DO,0:functions,0:CALL,1:ELSE,0:FOR,0:SWITCH,0	249
0x4002bf0	            0x4157	                                push r15	      2055	opncls.c	FUNCTION_45
0x4002bf2	            0x4156	                                push r14	      2055	opncls.c	FUNCTION_45
0x4002bf4	            0x4155	                                push r13	      2055	opncls.c	FUNCTION_45
0x4002bf6	            0x4154	                                push r12	      2055	opncls.c	FUNCTION_45
0x4002bf8	              0x55	                                push rbp	      2055	opncls.c	FUNCTION_45
0x4002bf9	              0x53	                                push rbx	      2055	opncls.c	FUNCTION_45
0x4002bfa	        0x4883ec28	                           sub rsp, 0x28	      2055	opncls.c	FUNCTION_45
0x4002bfe	      0x4889742408	                mov qword [rsp + 8], rsi	      2055	opncls.c	FUNCTION_45
0x4002c03	        0x48893c24	                    mov qword [rsp], rdi	      2055	opncls.c	FUNCTION_45
0x4002c07	    0x64488b342528	                mov rsi, qword fs:[0x28]	      2055	opncls.c	FUNCTION_45
0x4002c10	      0x4889742418	             mov qword [rsp + 0x18], rsi	      2055	opncls.c	FUNCTION_45
0x4002c15	            0x31f6	                            xor esi, esi	      2055	opncls.c	FUNCTION_45
0x4002c17	          0x4885ff	                           test rdi, rdi	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002c1a	     0xf846b030000	                            je 0x4002f8b	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002c20	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1426	opncls.c	FUNCTION_36	IF_1
0x4002c25	      0xb800000000	                              mov eax, 0	      1426	opncls.c	FUNCTION_36	IF_1
0x4002c2a	          0x4885c9	                           test rcx, rcx	      1426	opncls.c	FUNCTION_36	IF_1
0x4002c2d	        0x480f45c1	                         cmovne rax, rcx	      1426	opncls.c	FUNCTION_36	IF_1
0x4002c31	      0x4889442408	                mov qword [rsp + 8], rax	      1426	opncls.c	FUNCTION_36	IF_1
0x4002c36	        0x488b0424	                    mov rax, qword [rsp]	      1429	opncls.c	FUNCTION_36	IF_2
0x4002c3a	        0x48833800	                      cmp qword [rax], 0	      1429	opncls.c	FUNCTION_36	IF_2
0x4002c3e	     0xf848c030000	                            je 0x4002fd0	      1429	opncls.c	FUNCTION_36	IF_2
0x4002c44	    0x4c8ba8100100	           mov r13, qword [rax + 0x110] 	      1835	opncls.c	FUNCTION_42	IF_1
0x4002c4b	          0x4d85ed	                           test r13, r13	      1835	opncls.c	FUNCTION_42	IF_1
0x4002c4e	            0x7409	                            je 0x4002c59	      1835	opncls.c	FUNCTION_42	IF_1
0x4002c50	        0x498b4500	                    mov rax, qword [r13]	      1835	opncls.c	FUNCTION_42	IF_1
0x4002c54	          0x4885c0	                           test rax, rax	      1835	opncls.c	FUNCTION_42	IF_1
0x4002c57	            0x7518	                           jne 0x4002c71	      1835	opncls.c	FUNCTION_42	IF_1
0x4002c59	        0x488b3c24	                    mov rdi, qword [rsp]	      1835	opncls.c	FUNCTION_42	IF_1
0x4002c5d	      0xe80ed5ffff	            call sym.get_build_id.part.2	      1835	opncls.c	FUNCTION_42	IF_1
0x4002c62	          0x4885c0	                           test rax, rax	      1944	opncls.c	FUNCTION_43	IF_2
0x4002c65	          0x4989c5	                            mov r13, rax	      1944	opncls.c	FUNCTION_43	IF_2
0x4002c68	     0xf8416030000	                            je 0x4002f84	      1944	opncls.c	FUNCTION_43	IF_2
0x4002c6e	          0x488b00	                    mov rax, qword [rax]	      1944	opncls.c	FUNCTION_43	IF_2
0x4002c71	      0x488d7c0012	            lea rdi, [rax + rax + 0x12] 	      1948	opncls.c	FUNCTION_43	CALL_5
0x4002c76	      0xe800000000	                          call 0x4002c7b	      1948	opncls.c	FUNCTION_43	CALL_5
0x4002c7b	          0x4885c0	                           test rax, rax	      1949	opncls.c	FUNCTION_43	IF_3
0x4002c7e	          0x4989c4	                            mov r12, rax	      1948	opncls.c	FUNCTION_43	CALL_5
0x4002c81	     0xf84f3020000	                            je 0x4002f7a	      1949	opncls.c	FUNCTION_43	IF_3
0x4002c87	    0x41b9642f0000	                         mov r9d, 0x2f64	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002c8d	    0x48b82e627569	          movabs rax, 0x692d646c6975622e	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002c97	        0x498b6d00	                    mov rbp, qword [r13]	      1956	opncls.c	FUNCTION_43
0x4002c9b	        0x49890424	                    mov qword [r12], rax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002c9f	    0x6645894c2408	                 mov word [r12 + 8], r9w	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ca5	      0x4d8d74240a	                    lea r14, [r12 + 0xa]	      1958	opncls.c	FUNCTION_43
0x4002caa	    0x41c644240a00	                 mov byte [r12 + 0xa], 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002cb0	      0x450fb64508	               movzx r8d, byte [r13 + 8]	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002cb5	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002cb7	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002cba	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002cbf	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002cc6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ccb	        0x498d5d09	                      lea rbx, [r13 + 9]	      1959	opncls.c	FUNCTION_43
0x4002ccf	      0xe800000000	                          call 0x4002cd4	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002cd4	            0x4898	                                    cdqe	      1959	opncls.c	FUNCTION_43
0x4002cd6	    0x41ba2f000000	                          mov r10d, 0x2f	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002cdc	        0x4883fd01	                              cmp rbp, 1	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4002ce0	        0x4d8d0c06	                     lea r9, [r14 + rax]	      1959	opncls.c	FUNCTION_43
0x4002ce4	        0x66458911	                     mov word [r9], r10w	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ce8	        0x4d8d7101	                       lea r14, [r9 + 1]	      1960	opncls.c	FUNCTION_43
0x4002cec	            0x743e	                            je 0x4002d2c	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4002cee	          0x4989df	                            mov r15, rbx	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4002cf1	        0x4883ed01	                              sub rbp, 1	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4002cf5	           0xf1f00	                         nop dword [rax]	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4002cf8	        0x4983c701	                              add r15, 1	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4002cfc	      0x450fb647ff	               movzx r8d, byte [r15 - 1]	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d01	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d04	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d06	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d0b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d12	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d17	      0xe800000000	                          call 0x4002d1c	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d1c	            0x4898	                                    cdqe	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4002d1e	          0x4901c6	                            add r14, rax	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4002d21	          0x4889e8	                            mov rax, rbp	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4002d24	          0x4c29f8	                            sub rax, r15	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4002d27	          0x4801d8	                            add rax, rbx	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4002d2a	            0x75cc	                           jne 0x4002cf8	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4002d2c	    0x41b875670000	                         mov r8d, 0x6775	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d32	    0x41c7062e6465	            mov dword [r14], 0x6265642e 	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d39	      0x41c6460600	                   mov byte [r14 + 6], 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d3e	      0x6645894604	                 mov word [r14 + 4], r8w	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002d43	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      1965	opncls.c	FUNCTION_43
0x4002d48	      0x41803c2400	                       cmp byte [r12], 0	      1440	opncls.c	FUNCTION_36	IF_4
0x4002d4d	     0xf844c020000	                            je 0x4002f9f	      1440	opncls.c	FUNCTION_36	IF_4
0x4002d53	      0xbf01000000	                              mov edi, 1	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x4002d58	      0xe800000000	                          call 0x4002d5d	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x4002d5d	          0xc60000	                       mov byte [rax], 0	      1465	opncls.c	FUNCTION_36	ELSE_1
0x4002d60	          0x4889c3	                            mov rbx, rax	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x4002d63	        0x488b0424	                    mov rax, qword [rsp]	      1471	opncls.c	FUNCTION_36	CALL_12
0x4002d67	          0x488b38	                    mov rdi, qword [rax]	      1471	opncls.c	FUNCTION_36	CALL_12
0x4002d6a	      0xe800000000	                          call 0x4002d6f	      1471	opncls.c	FUNCTION_36	CALL_12
0x4002d6f	          0x4889c7	                            mov rdi, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002d72	          0x4889c5	                            mov rbp, rax	      1471	opncls.c	FUNCTION_36	CALL_12
0x4002d75	      0xe800000000	                          call 0x4002d7a	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002d7a	          0x4885c0	                           test rax, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002d7d	     0xf8435020000	                            je 0x4002fb8	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002d83	      0x807c05ff2f	         cmp byte [rbp + rax - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002d88	        0x488d50ff	                      lea rdx, [rax - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002d8c	            0x751c	                           jne 0x4002daa	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002d8e	      0xe92c020000	                           jmp 0x4002fbf	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002d93	       0xf1f440000	                   nop dword [rax + rax]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002d98	      0x807c15ff2f	         cmp byte [rbp + rdx - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002d9d	        0x488d42ff	                      lea rax, [rdx - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002da1	     0xf84b1000000	                            je 0x4002e58	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002da7	          0x4889c2	                            mov rdx, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002daa	          0x4885d2	                           test rdx, rdx	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002dad	            0x75e9	                           jne 0x4002d98	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002daf	          0x4531ed	                          xor r13d, r13d	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002db2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1485	opncls.c	FUNCTION_36	CALL_16
0x4002db7	      0xc644150000	                 mov byte [rbp + rdx], 0	      1475	opncls.c	FUNCTION_36
0x4002dbc	      0xe800000000	                          call 0x4002dc1	      1485	opncls.c	FUNCTION_36	CALL_16
0x4002dc1	          0x4c89e7	                            mov rdi, r12	      1494	opncls.c	FUNCTION_36	CALL_20
0x4002dc4	          0x4989c7	                            mov r15, rax	      1485	opncls.c	FUNCTION_36	CALL_16
0x4002dc7	      0xe800000000	                          call 0x4002dcc	      1494	opncls.c	FUNCTION_36	CALL_20
0x4002dcc	      0x4b8d7c3d29	            lea rdi, [r13 + r15 + 0x29] 	      1484	opncls.c	FUNCTION_36
0x4002dd1	          0x4801c7	                            add rdi, rax	      1484	opncls.c	FUNCTION_36
0x4002dd4	      0xe800000000	                          call 0x4002dd9	      1484	opncls.c	FUNCTION_36
0x4002dd9	          0x4885c0	                           test rax, rax	      1496	opncls.c	FUNCTION_36	IF_9
0x4002ddc	          0x4989c5	                            mov r13, rax	      1484	opncls.c	FUNCTION_36
0x4002ddf	            0x7432	                            je 0x4002e13	      1496	opncls.c	FUNCTION_36	IF_9
0x4002de1	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002de4	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002de7	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002dea	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002def	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002df6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002dfb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002dfd	      0xe800000000	                          call 0x4002e02	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e02	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4002e07	          0x4c89ef	                            mov rdi, r13	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4002e0a	      0xe8f1e5ffff	            call sym.check_build_id_file	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4002e0f	            0x85c0	                           test eax, eax	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4002e11	            0x744d	                            je 0x4002e60	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x4002e13	          0x4c89e7	                            mov rdi, r12	      1559	opncls.c	FUNCTION_36	CALL_33
0x4002e16	      0xe800000000	                          call 0x4002e1b	      1559	opncls.c	FUNCTION_36	CALL_33
0x4002e1b	          0x4889df	                            mov rdi, rbx	      1560	opncls.c	FUNCTION_36	CALL_34
0x4002e1e	      0xe800000000	                          call 0x4002e23	      1560	opncls.c	FUNCTION_36	CALL_34
0x4002e23	          0x4889ef	                            mov rdi, rbp	      1561	opncls.c	FUNCTION_36	CALL_35
0x4002e26	      0xe800000000	                          call 0x4002e2b	      1561	opncls.c	FUNCTION_36	CALL_35
0x4002e2b	          0x4c89e8	                            mov rax, r13	      1562	opncls.c	FUNCTION_36
0x4002e2e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2061	opncls.c	FUNCTION_45
0x4002e33	    0x644833342528	                xor rsi, qword fs:[0x28]	      2061	opncls.c	FUNCTION_45
0x4002e3c	     0xf859f010000	                           jne 0x4002fe1	      2061	opncls.c	FUNCTION_45
0x4002e42	        0x4883c428	                           add rsp, 0x28	      2061	opncls.c	FUNCTION_45
0x4002e46	              0x5b	                                 pop rbx	      2061	opncls.c	FUNCTION_45
0x4002e47	              0x5d	                                 pop rbp	      2061	opncls.c	FUNCTION_45
0x4002e48	            0x415c	                                 pop r12	      2061	opncls.c	FUNCTION_45
0x4002e4a	            0x415d	                                 pop r13	      2061	opncls.c	FUNCTION_45
0x4002e4c	            0x415e	                                 pop r14	      2061	opncls.c	FUNCTION_45
0x4002e4e	            0x415f	                                 pop r15	      2061	opncls.c	FUNCTION_45
0x4002e50	              0xc3	                                     ret	      2061	opncls.c	FUNCTION_45
0x4002e51	     0xf1f80000000	                         nop dword [rax]	      2061	opncls.c	FUNCTION_45
0x4002e58	          0x4989d5	                            mov r13, rdx	      2061	opncls.c	FUNCTION_45
0x4002e5b	      0xe952ffffff	                           jmp 0x4002db2	      2061	opncls.c	FUNCTION_45
0x4002e60	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e63	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e66	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e6b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e72	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e77	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e7a	      0xe800000000	                          call 0x4002e7f	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e7f	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x4002e84	          0x4c89ef	                            mov rdi, r13	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x4002e87	      0xe874e5ffff	            call sym.check_build_id_file	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x4002e8c	            0x85c0	                           test eax, eax	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x4002e8e	     0xf857fffffff	                           jne 0x4002e13	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x4002e94	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e98	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002e9e	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ea4	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ea6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002eab	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002eb2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002eb7	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002eba	      0xe800000000	                          call 0x4002ebf	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ebf	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4002ec4	          0x4c89ef	                            mov rdi, r13	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4002ec7	      0xe834e5ffff	            call sym.check_build_id_file	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4002ecc	            0x85c0	                           test eax, eax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4002ece	              0x5e	                                 pop rsi	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4002ecf	              0x5f	                                 pop rdi	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4002ed0	     0xf853dffffff	                           jne 0x4002e13	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4002ed6	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002eda	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002edf	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ee6	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ee8	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002eee	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ef4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002ef9	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002efc	      0xe800000000	                          call 0x4002f01	        33	stdio2.h	FUNCTION_58	CALL_1
0x4002f01	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002f06	          0x4c89ef	                            mov rdi, r13	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002f09	      0xe8f2e4ffff	            call sym.check_build_id_file	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002f0e	            0x85c0	                           test eax, eax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002f10	              0x5a	                                 pop rdx	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002f11	              0x59	                                 pop rcx	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002f12	     0xf85fbfeffff	                           jne 0x4002e13	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4002f18	      0x4c8b742408	                mov r14, qword [rsp + 8]	       110	string3.h	FUNCTION_52	CALL_3
0x4002f1d	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_52	CALL_3
0x4002f20	          0x4c89f6	                            mov rsi, r14	       110	string3.h	FUNCTION_52	CALL_3
0x4002f23	      0xe800000000	                          call 0x4002f28	       110	string3.h	FUNCTION_52	CALL_3
0x4002f28	          0x4c89f7	                            mov rdi, r14	      1535	opncls.c	FUNCTION_36	CALL_26
0x4002f2b	          0x4989c7	                            mov r15, rax	       110	string3.h	FUNCTION_52	CALL_3
0x4002f2e	      0xe800000000	                          call 0x4002f33	      1535	opncls.c	FUNCTION_36	CALL_26
0x4002f33	        0x4883f801	                              cmp rax, 1	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x4002f37	            0x7411	                            je 0x4002f4a	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x4002f39	    0x41807c06ff2f	         cmp byte [r14 + rax - 1], 0x2f 	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x4002f3f	            0x7409	                            je 0x4002f4a	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x4002f41	      0xb82f000000	                           mov eax, 0x2f	       148	string3.h	FUNCTION_56	CALL_3
0x4002f46	        0x66418907	                      mov word [r15], ax	       148	string3.h	FUNCTION_56	CALL_3
0x4002f4a	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_56	CALL_3
0x4002f4d	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_56	CALL_3
0x4002f50	      0xe800000000	                          call 0x4002f55	       148	string3.h	FUNCTION_56	CALL_3
0x4002f55	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4002f5a	          0x4c89ef	                            mov rdi, r13	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4002f5d	      0xe89ee4ffff	            call sym.check_build_id_file	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4002f62	            0x85c0	                           test eax, eax	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4002f64	     0xf85a9feffff	                           jne 0x4002e13	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4002f6a	          0x4c89ef	                            mov rdi, r13	      1555	opncls.c	FUNCTION_36	CALL_32
0x4002f6d	          0x4531ed	                          xor r13d, r13d	      1556	opncls.c	FUNCTION_36
0x4002f70	      0xe800000000	                          call 0x4002f75	      1555	opncls.c	FUNCTION_36	CALL_32
0x4002f75	      0xe999feffff	                           jmp 0x4002e13	      1555	opncls.c	FUNCTION_36	CALL_32
0x4002f7a	      0xbf06000000	                              mov edi, 6	      1951	opncls.c	FUNCTION_43	IF_3	CALL_6
0x4002f7f	      0xe800000000	                          call 0x4002f84	      1951	opncls.c	FUNCTION_43	IF_3	CALL_6
0x4002f84	            0x31c0	                            xor eax, eax	      1438	opncls.c	FUNCTION_36	IF_3
0x4002f86	      0xe9a3feffff	                           jmp 0x4002e2e	      1438	opncls.c	FUNCTION_36	IF_3
0x4002f8b	      0xbe90050000	                          mov esi, 0x590	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002f90	      0xbf00000000	                              mov edi, 0	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002f95	      0xe800000000	                          call 0x4002f9a	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002f9a	      0xe981fcffff	                           jmp 0x4002c20	      1424	opncls.c	FUNCTION_36	CALL_1
0x4002f9f	          0x4c89e7	                            mov rdi, r12	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x4002fa2	      0xe800000000	                          call 0x4002fa7	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x4002fa7	      0xbf10000000	                           mov edi, 0x10	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x4002fac	      0xe800000000	                          call 0x4002fb1	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x4002fb1	            0x31c0	                            xor eax, eax	      1444	opncls.c	FUNCTION_36	IF_4
0x4002fb3	      0xe976feffff	                           jmp 0x4002e2e	      1444	opncls.c	FUNCTION_36	IF_4
0x4002fb8	            0x31d2	                            xor edx, edx	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002fba	      0xe9f0fdffff	                           jmp 0x4002daf	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002fbf	          0x4989c5	                            mov r13, rax	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4002fc2	          0x4889c2	                            mov rdx, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002fc5	      0xe9e8fdffff	                           jmp 0x4002db2	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002fca	    0x660f1f440000	                    nop word [rax + rax]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4002fd0	      0xbf05000000	                              mov edi, 5	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x4002fd5	      0xe800000000	                          call 0x4002fda	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x4002fda	            0x31c0	                            xor eax, eax	      1432	opncls.c	FUNCTION_36	IF_2
0x4002fdc	      0xe94dfeffff	                           jmp 0x4002e2e	      1432	opncls.c	FUNCTION_36	IF_2
0x4002fe1	      0xe800000000	                  call section_end..data	      2061	opncls.c	FUNCTION_45
bfd_fdopenr	WHILE,0:IF,1:DO,0:functions,0:CALL,5:ELSE,0:FOR,0:SWITCH,1	188
0x4000aa0	            0x4157	                                push r15	       331	opncls.c	FUNCTION_7
0x4000aa2	            0x4156	                                push r14	       331	opncls.c	FUNCTION_7
0x4000aa4	            0x31c0	                            xor eax, eax	       340	opncls.c	FUNCTION_7	CALL_1
0x4000aa6	            0x4155	                                push r13	       331	opncls.c	FUNCTION_7
0x4000aa8	            0x4154	                                push r12	       331	opncls.c	FUNCTION_7
0x4000aaa	          0x4989fd	                            mov r13, rdi	       331	opncls.c	FUNCTION_7
0x4000aad	              0x55	                                push rbp	       331	opncls.c	FUNCTION_7
0x4000aae	              0x53	                                push rbx	       331	opncls.c	FUNCTION_7
0x4000aaf	            0x89d5	                            mov ebp, edx	       331	opncls.c	FUNCTION_7
0x4000ab1	          0x4989f4	                            mov r12, rsi	       331	opncls.c	FUNCTION_7
0x4000ab4	            0x31d2	                            xor edx, edx	       340	opncls.c	FUNCTION_7	CALL_1
0x4000ab6	      0xbe03000000	                              mov esi, 3	       340	opncls.c	FUNCTION_7	CALL_1
0x4000abb	        0x4883ec08	                              sub rsp, 8	       331	opncls.c	FUNCTION_7
0x4000abf	            0x89ef	                            mov edi, ebp	       340	opncls.c	FUNCTION_7	CALL_1
0x4000ac1	      0xe800000000	                          call 0x4000ac6	       340	opncls.c	FUNCTION_7	CALL_1
0x4000ac6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       341	opncls.c	FUNCTION_7	IF_1
0x4000ac9	     0xf8471020000	                            je 0x4000d40	       341	opncls.c	FUNCTION_7	IF_1
0x4000acf	          0x83e003	                              and eax, 3	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000ad2	     0xf8488010000	                            je 0x4000c60	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000ad8	          0x83f802	                              cmp eax, 2	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000adb	    0x41be00000000	                             mov r14d, 0	       355	opncls.c	FUNCTION_7	SWITCH_1
0x4000ae1	     0xf8f61010000	                            jg 0x4000c48	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000ae7	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x4000aec	      0xe800000000	                          call 0x4000af1	        62	opncls.c	FUNCTION_1	CALL_1
0x4000af1	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x4000af4	          0x4889c3	                            mov rbx, rax	        62	opncls.c	FUNCTION_1	CALL_1
0x4000af7	     0xf8485010000	                            je 0x4000c82	        63	opncls.c	FUNCTION_1	IF_1
0x4000afd	    0x8b1500000000	            mov edx, dword [0x04000b03] 	        66	opncls.c	FUNCTION_1	IF_2
0x4000b03	            0x85d2	                           test edx, edx	        66	opncls.c	FUNCTION_1	IF_2
0x4000b05	     0xf85e5000000	                           jne 0x4000bf0	        66	opncls.c	FUNCTION_1	IF_2
0x4000b0b	    0x8b0500000000	            mov eax, dword [0x04000b11] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000b11	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000b14	    0x891500000000	            mov dword [0x04000b1a], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000b1a	          0x894340	             mov dword [rbx + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000b1d	      0xe800000000	                          call 0x4000b22	        74	opncls.c	FUNCTION_1	CALL_2
0x4000b22	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x4000b25	    0x488983080100	            mov qword [rbx + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x4000b2c	     0xf843e010000	                            je 0x4000c70	        75	opncls.c	FUNCTION_1	IF_3
0x4000b32	        0x4c8d7b68	                   lea r15, [rbx + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000b36	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x4000b41	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000b46	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000b4b	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000b50	          0x4c89ff	                            mov rdi, r15	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000b53	      0xe800000000	                          call 0x4000b58	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000b58	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000b5a	     0xf84d0010000	                            je 0x4000d30	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000b60	          0x4889de	                            mov rsi, rbx	       208	opncls.c	FUNCTION_5	CALL_3
0x4000b63	          0x4c89e7	                            mov rdi, r12	       208	opncls.c	FUNCTION_5	CALL_3
0x4000b66	      0xe800000000	                          call 0x4000b6b	       208	opncls.c	FUNCTION_5	CALL_3
0x4000b6b	          0x4885c0	                           test rax, rax	       209	opncls.c	FUNCTION_5	IF_3
0x4000b6e	     0xf845c010000	                            je 0x4000cd0	       209	opncls.c	FUNCTION_5	IF_3
0x4000b74	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       218	opncls.c	FUNCTION_5	IF_5
0x4000b77	          0x4c89f6	                            mov rsi, r14	       219	opncls.c	FUNCTION_5	CALL_6
0x4000b7a	     0xf8428010000	                            je 0x4000ca8	       218	opncls.c	FUNCTION_5	IF_5
0x4000b80	            0x89ef	                            mov edi, ebp	       219	opncls.c	FUNCTION_5	CALL_6
0x4000b82	      0xe800000000	                          call 0x4000b87	       219	opncls.c	FUNCTION_5	CALL_6
0x4000b87	        0x48894310	             mov qword [rbx + 0x10], rax	       219	opncls.c	FUNCTION_5	CALL_6
0x4000b8b	          0x4885c0	                           test rax, rax	       223	opncls.c	FUNCTION_5	IF_6
0x4000b8e	     0xf84d2010000	                            je 0x4000d66	       223	opncls.c	FUNCTION_5	IF_6
0x4000b94	          0x4c89ef	                            mov rdi, r13	       234	opncls.c	FUNCTION_5	CALL_10
0x4000b97	      0xe800000000	                          call 0x4000b9c	       234	opncls.c	FUNCTION_5	CALL_10
0x4000b9c	        0x410fb616	                   movzx edx, byte [r14]	       238	opncls.c	FUNCTION_5	IF_7
0x4000ba0	          0x488903	                    mov qword [rbx], rax	       234	opncls.c	FUNCTION_5	CALL_10
0x4000ba3	          0x8d429f	                   lea eax, [rdx - 0x61]	       238	opncls.c	FUNCTION_5	IF_7
0x4000ba6	            0x3c16	                            cmp al, 0x16	       238	opncls.c	FUNCTION_5	IF_7
0x4000ba8	            0x7666	                           jbe 0x4000c10	       238	opncls.c	FUNCTION_5	IF_7
0x4000baa	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000bae	          0x83e0e7	                     and eax, 0xffffffe7	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000bb1	          0x83c810	                            or eax, 0x10	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000bb4	          0x884344	               mov byte [rbx + 0x44], al	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000bb7	          0x4889df	                            mov rdi, rbx	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000bba	      0xe800000000	                          call 0x4000bbf	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000bbf	            0x85c0	                           test eax, eax	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000bc1	     0xf8419010000	                            je 0x4000ce0	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000bc7	         0xfb65347	           movzx edx, byte [rbx + 0x47] 	       251	opncls.c	FUNCTION_5
0x4000bcb	            0x89d0	                            mov eax, edx	       251	opncls.c	FUNCTION_5
0x4000bcd	          0x83c808	                               or eax, 8	       251	opncls.c	FUNCTION_5
0x4000bd0	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       257	opncls.c	FUNCTION_5	IF_10
0x4000bd3	          0x884347	               mov byte [rbx + 0x47], al	       251	opncls.c	FUNCTION_5
0x4000bd6	          0x4889d8	                            mov rax, rbx	       257	opncls.c	FUNCTION_5	IF_10
0x4000bd9	            0x7506	                           jne 0x4000be1	       257	opncls.c	FUNCTION_5	IF_10
0x4000bdb	          0x83ca0a	                             or edx, 0xa	      7070	bfd.h	FUNCTION_78
0x4000bde	          0x885347	               mov byte [rbx + 0x47], dl	      7070	bfd.h	FUNCTION_78
0x4000be1	        0x4883c408	                              add rsp, 8	       362	opncls.c	FUNCTION_7
0x4000be5	              0x5b	                                 pop rbx	       362	opncls.c	FUNCTION_7
0x4000be6	              0x5d	                                 pop rbp	       362	opncls.c	FUNCTION_7
0x4000be7	            0x415c	                                 pop r12	       362	opncls.c	FUNCTION_7
0x4000be9	            0x415d	                                 pop r13	       362	opncls.c	FUNCTION_7
0x4000beb	            0x415e	                                 pop r14	       362	opncls.c	FUNCTION_7
0x4000bed	            0x415f	                                 pop r15	       362	opncls.c	FUNCTION_7
0x4000bef	              0xc3	                                     ret	       362	opncls.c	FUNCTION_7
0x4000bf0	    0x8b0500000000	            mov eax, dword [0x04000bf6] 	        68	opncls.c	FUNCTION_1	IF_2
0x4000bf6	          0x83ea01	                              sub edx, 1	        69	opncls.c	FUNCTION_1	IF_2
0x4000bf9	    0x891500000000	            mov dword [0x04000bff], edx 	        69	opncls.c	FUNCTION_1	IF_2
0x4000bff	          0x83e801	                              sub eax, 1	        68	opncls.c	FUNCTION_1	IF_2
0x4000c02	    0x890500000000	            mov dword [0x04000c08], eax 	        68	opncls.c	FUNCTION_1	IF_2
0x4000c08	      0xe90dffffff	                           jmp 0x4000b1a	        68	opncls.c	FUNCTION_1	IF_2
0x4000c0d	           0xf1f00	                         nop dword [rax]	        68	opncls.c	FUNCTION_1	IF_2
0x4000c10	      0xb901004200	                       mov ecx, 0x420001	       238	opncls.c	FUNCTION_5	IF_7
0x4000c15	        0x480fa3c1	                             bt rcx, rax	       238	opncls.c	FUNCTION_5	IF_7
0x4000c19	            0x738f	                           jae 0x4000baa	       238	opncls.c	FUNCTION_5	IF_7
0x4000c1b	      0x41807e012b	                cmp byte [r14 + 1], 0x2b	       239	opncls.c	FUNCTION_5	IF_7
0x4000c20	     0xf849a000000	                            je 0x4000cc0	       239	opncls.c	FUNCTION_5	IF_7
0x4000c26	          0x80fa72	                            cmp dl, 0x72	       241	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000c29	     0xf857bffffff	                           jne 0x4000baa	       241	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000c2f	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000c33	          0x83e0e7	                     and eax, 0xffffffe7	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000c36	          0x83c808	                               or eax, 8	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000c39	          0x884344	               mov byte [rbx + 0x44], al	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000c3c	      0xe976ffffff	                           jmp 0x4000bb7	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000c41	     0xf1f80000000	                         nop dword [rax]	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000c48	      0xba00000000	                              mov edx, 0	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c4d	      0xbe65010000	                          mov esi, 0x165	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c52	      0xbf00000000	                              mov edi, 0	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c57	      0xe800000000	                          call 0x4000c5c	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c5c	         0xf1f4000	                         nop dword [rax]	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000c60	    0x41be00000000	                             mov r14d, 0	       354	opncls.c	FUNCTION_7	SWITCH_1
0x4000c66	      0xe97cfeffff	                           jmp 0x4000ae7	       354	opncls.c	FUNCTION_7	SWITCH_1
0x4000c6b	       0xf1f440000	                   nop dword [rax + rax]	       354	opncls.c	FUNCTION_7	SWITCH_1
0x4000c70	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x4000c75	      0xe800000000	                          call 0x4000c7a	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x4000c7a	          0x4889df	                            mov rdi, rbx	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x4000c7d	      0xe800000000	                          call 0x4000c82	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x4000c82	            0x31c0	                            xor eax, eax	       205	opncls.c	FUNCTION_5	IF_1
0x4000c84	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       203	opncls.c	FUNCTION_5	IF_1	IF_2
0x4000c87	     0xf8454ffffff	                            je 0x4000be1	       203	opncls.c	FUNCTION_5	IF_1	IF_2
0x4000c8d	            0x89ef	                            mov edi, ebp	       204	opncls.c	FUNCTION_5	IF_1	CALL_2
0x4000c8f	      0xe800000000	                          call 0x4000c94	       204	opncls.c	FUNCTION_5	IF_1	CALL_2
0x4000c94	        0x4883c408	                              add rsp, 8	       362	opncls.c	FUNCTION_7
0x4000c98	            0x31c0	                            xor eax, eax	       205	opncls.c	FUNCTION_5	IF_1
0x4000c9a	              0x5b	                                 pop rbx	       362	opncls.c	FUNCTION_7
0x4000c9b	              0x5d	                                 pop rbp	       362	opncls.c	FUNCTION_7
0x4000c9c	            0x415c	                                 pop r12	       362	opncls.c	FUNCTION_7
0x4000c9e	            0x415d	                                 pop r13	       362	opncls.c	FUNCTION_7
0x4000ca0	            0x415e	                                 pop r14	       362	opncls.c	FUNCTION_7
0x4000ca2	            0x415f	                                 pop r15	       362	opncls.c	FUNCTION_7
0x4000ca4	              0xc3	                                     ret	       362	opncls.c	FUNCTION_7
0x4000ca5	           0xf1f00	                         nop dword [rax]	       362	opncls.c	FUNCTION_7
0x4000ca8	          0x4c89ef	                            mov rdi, r13	       222	opncls.c	FUNCTION_5	CALL_7
0x4000cab	      0xe800000000	                          call 0x4000cb0	       222	opncls.c	FUNCTION_5	CALL_7
0x4000cb0	        0x48894310	             mov qword [rbx + 0x10], rax	       222	opncls.c	FUNCTION_5	CALL_7
0x4000cb4	      0xe9d2feffff	                           jmp 0x4000b8b	       222	opncls.c	FUNCTION_5	CALL_7
0x4000cb9	     0xf1f80000000	                         nop dword [rax]	       222	opncls.c	FUNCTION_5	CALL_7
0x4000cc0	        0x804b4418	              or byte [rbx + 0x44], 0x18	       240	opncls.c	FUNCTION_5	IF_7
0x4000cc4	      0xe9eefeffff	                           jmp 0x4000bb7	       240	opncls.c	FUNCTION_5	IF_7
0x4000cc9	     0xf1f80000000	                         nop dword [rax]	       240	opncls.c	FUNCTION_5	IF_7
0x4000cd0	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       211	opncls.c	FUNCTION_5	IF_3	IF_4
0x4000cd3	            0x740b	                            je 0x4000ce0	       211	opncls.c	FUNCTION_5	IF_3	IF_4
0x4000cd5	            0x89ef	                            mov edi, ebp	       212	opncls.c	FUNCTION_5	IF_3	CALL_4
0x4000cd7	      0xe800000000	                          call 0x4000cdc	       212	opncls.c	FUNCTION_5	IF_3	CALL_4
0x4000cdc	         0xf1f4000	                         nop dword [rax]	       212	opncls.c	FUNCTION_5	IF_3	CALL_4
0x4000ce0	    0x4883bb080100	              cmp qword [rbx + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x4000ce8	            0x7414	                            je 0x4000cfe	       123	opncls.c	FUNCTION_3	IF_1
0x4000cea	          0x4c89ff	                            mov rdi, r15	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4000ced	      0xe800000000	                          call 0x4000cf2	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4000cf2	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x4000cf9	      0xe800000000	                          call 0x4000cfe	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x4000cfe	          0x488b3b	                    mov rdi, qword [rbx]	       129	opncls.c	FUNCTION_3	IF_2
0x4000d01	          0x4885ff	                           test rdi, rdi	       129	opncls.c	FUNCTION_3	IF_2
0x4000d04	            0x7405	                            je 0x4000d0b	       129	opncls.c	FUNCTION_3	IF_2
0x4000d06	      0xe800000000	                          call 0x4000d0b	       130	opncls.c	FUNCTION_3	CALL_3
0x4000d0b	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	       131	opncls.c	FUNCTION_3	CALL_4
0x4000d12	      0xe800000000	                          call 0x4000d17	       131	opncls.c	FUNCTION_3	CALL_4
0x4000d17	          0x4889df	                            mov rdi, rbx	       132	opncls.c	FUNCTION_3	CALL_5
0x4000d1a	      0xe800000000	                          call 0x4000d1f	       132	opncls.c	FUNCTION_3	CALL_5
0x4000d1f	            0x31c0	                            xor eax, eax	       249	opncls.c	FUNCTION_5	ELSE_3	IF_9
0x4000d21	      0xe9bbfeffff	                           jmp 0x4000be1	       249	opncls.c	FUNCTION_5	ELSE_3	IF_9
0x4000d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       249	opncls.c	FUNCTION_5	ELSE_3	IF_9
0x4000d30	          0x4889df	                            mov rdi, rbx	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4000d33	      0xe800000000	                          call 0x4000d38	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4000d38	      0xe945ffffff	                           jmp 0x4000c82	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4000d3d	           0xf1f00	                         nop dword [rax]	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4000d40	      0xe800000000	                          call 0x4000d45	       343	opncls.c	FUNCTION_7	IF_1
0x4000d45	          0x448b20	                   mov r12d, dword [rax]	       343	opncls.c	FUNCTION_7	IF_1
0x4000d48	          0x4889c3	                            mov rbx, rax	       343	opncls.c	FUNCTION_7	IF_1
0x4000d4b	            0x89ef	                            mov edi, ebp	       345	opncls.c	FUNCTION_7	IF_1	CALL_2
0x4000d4d	      0xe800000000	                          call 0x4000d52	       345	opncls.c	FUNCTION_7	IF_1	CALL_2
0x4000d52	      0xbf01000000	                              mov edi, 1	       347	opncls.c	FUNCTION_7	IF_1	CALL_3
0x4000d57	          0x448923	                   mov dword [rbx], r12d	       346	opncls.c	FUNCTION_7	IF_1
0x4000d5a	      0xe800000000	                          call 0x4000d5f	       347	opncls.c	FUNCTION_7	IF_1	CALL_3
0x4000d5f	            0x31c0	                            xor eax, eax	       348	opncls.c	FUNCTION_7	IF_1
0x4000d61	      0xe97bfeffff	                           jmp 0x4000be1	       348	opncls.c	FUNCTION_7	IF_1
0x4000d66	      0xbf01000000	                              mov edi, 1	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
0x4000d6b	      0xe800000000	                          call 0x4000d70	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
0x4000d70	    0x4883bb080100	              cmp qword [rbx + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x4000d78	     0xf856cffffff	                           jne 0x4000cea	       123	opncls.c	FUNCTION_3	IF_1
0x4000d7e	      0xe97bffffff	                           jmp 0x4000cfe	       123	opncls.c	FUNCTION_3	IF_1
bfd_make_readable	WHILE,0:IF,3:DO,0:functions,0:CALL,3:ELSE,0:FOR,0:SWITCH,0	60
0x4001900	              0x53	                                push rbx	       877	opncls.c	FUNCTION_24
0x4001901	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       878	opncls.c	FUNCTION_24	IF_1
0x4001905	            0x89c2	                            mov edx, eax	       878	opncls.c	FUNCTION_24	IF_1
0x4001907	          0x83e218	                           and edx, 0x18	       878	opncls.c	FUNCTION_24	IF_1
0x400190a	          0x80fa10	                            cmp dl, 0x10	       878	opncls.c	FUNCTION_24	IF_1
0x400190d	            0x7509	                           jne 0x4001918	       878	opncls.c	FUNCTION_24	IF_1
0x400190f	        0xf6474601	               test byte [rdi + 0x46], 1	       878	opncls.c	FUNCTION_24	IF_1
0x4001913	          0x4889fb	                            mov rbx, rdi	       878	opncls.c	FUNCTION_24	IF_1
0x4001916	            0x7518	                           jne 0x4001930	       878	opncls.c	FUNCTION_24	IF_1
0x4001918	      0xbf05000000	                              mov edi, 5	       880	opncls.c	FUNCTION_24	IF_1	CALL_1
0x400191d	      0xe800000000	                          call 0x4001922	       880	opncls.c	FUNCTION_24	IF_1	CALL_1
0x4001922	            0x31c0	                            xor eax, eax	       881	opncls.c	FUNCTION_24	IF_1
0x4001924	              0x5b	                                 pop rbx	       915	opncls.c	FUNCTION_24
0x4001925	              0xc3	                                     ret	       915	opncls.c	FUNCTION_24
0x4001926	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       915	opncls.c	FUNCTION_24
0x4001930	        0x488b5708	                mov rdx, qword [rdi + 8]	       884	opncls.c	FUNCTION_24	IF_2
0x4001934	          0x83e007	                              and eax, 7	       884	opncls.c	FUNCTION_24	IF_2
0x4001937	    0xff94c2f00000	        call qword [rdx + rax*8 + 0xf0] 	       884	opncls.c	FUNCTION_24	IF_2
0x400193e	            0x85c0	                           test eax, eax	       884	opncls.c	FUNCTION_24	IF_2
0x4001940	            0x750e	                           jne 0x4001950	       884	opncls.c	FUNCTION_24	IF_2
0x4001942	            0x31c0	                            xor eax, eax	       885	opncls.c	FUNCTION_24	IF_2
0x4001944	              0x5b	                                 pop rbx	       915	opncls.c	FUNCTION_24
0x4001945	              0xc3	                                     ret	       915	opncls.c	FUNCTION_24
0x4001946	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       915	opncls.c	FUNCTION_24
0x4001950	        0x488b4308	                mov rax, qword [rbx + 8]	       887	opncls.c	FUNCTION_24	IF_3
0x4001954	          0x4889df	                            mov rdi, rbx	       887	opncls.c	FUNCTION_24	IF_3
0x4001957	    0xff9010010000	                call qword [rax + 0x110]	       887	opncls.c	FUNCTION_24	IF_3
0x400195d	            0x85c0	                           test eax, eax	       887	opncls.c	FUNCTION_24	IF_3
0x400195f	            0x74e1	                            je 0x4001942	       887	opncls.c	FUNCTION_24	IF_3
0x4001961	         0xfb64347	           movzx eax, byte [rbx + 0x47] 	       900	opncls.c	FUNCTION_24
0x4001965	        0x806344f8	             and byte [rbx + 0x44], 0xf8	       893	opncls.c	FUNCTION_24
0x4001969	          0x4889df	                            mov rdi, rbx	       911	opncls.c	FUNCTION_24	CALL_2
0x400196c	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	       890	opncls.c	FUNCTION_24
0x4001977	    0x48c743300000	               mov qword [rbx + 0x30], 0	       892	opncls.c	FUNCTION_24
0x400197f	    0x48c783d00000	               mov qword [rbx + 0xd0], 0	       894	opncls.c	FUNCTION_24
0x400198a	    0x48c743580000	               mov qword [rbx + 0x58], 0	       895	opncls.c	FUNCTION_24
0x4001992	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	       898	opncls.c	FUNCTION_24
0x400199c	          0x83e0b5	                     and eax, 0xffffffb5	       900	opncls.c	FUNCTION_24
0x400199f	    0x48c783000100	              mov qword [rbx + 0x100], 0	       899	opncls.c	FUNCTION_24
0x40019aa	          0x884347	               mov byte [rbx + 0x47], al	       900	opncls.c	FUNCTION_24
0x40019ad	    0x814b44000001	          or dword [rbx + 0x44], 0x10000	       901	opncls.c	FUNCTION_24
0x40019b4	         0xfb64347	           movzx eax, byte [rbx + 0x47] 	       902	opncls.c	FUNCTION_24
0x40019b8	    0x48c783900000	               mov qword [rbx + 0x90], 0	       906	opncls.c	FUNCTION_24
0x40019c3	    0xc783b8000000	               mov dword [rbx + 0xb8], 0	       907	opncls.c	FUNCTION_24
0x40019cd	    0x48c783b00000	               mov qword [rbx + 0xb0], 0	       908	opncls.c	FUNCTION_24
0x40019d8	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	       909	opncls.c	FUNCTION_24
0x40019e3	          0x83e0ef	                     and eax, 0xffffffef	       902	opncls.c	FUNCTION_24
0x40019e6	          0x83c804	                               or eax, 4	       904	opncls.c	FUNCTION_24
0x40019e9	          0x884347	               mov byte [rbx + 0x47], al	       904	opncls.c	FUNCTION_24
0x40019ec	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       905	opncls.c	FUNCTION_24
0x40019f0	          0x83e0e7	                     and eax, 0xffffffe7	       905	opncls.c	FUNCTION_24
0x40019f3	          0x83c808	                               or eax, 8	       905	opncls.c	FUNCTION_24
0x40019f6	          0x884344	               mov byte [rbx + 0x44], al	       905	opncls.c	FUNCTION_24
0x40019f9	      0xe800000000	                          call 0x40019fe	       911	opncls.c	FUNCTION_24	CALL_2
0x40019fe	          0x4889df	                            mov rdi, rbx	       912	opncls.c	FUNCTION_24	CALL_3
0x4001a01	      0xbe01000000	                              mov esi, 1	       912	opncls.c	FUNCTION_24	CALL_3
0x4001a06	      0xe800000000	                          call 0x4001a0b	       912	opncls.c	FUNCTION_24	CALL_3
0x4001a0b	      0xb801000000	                              mov eax, 1	       914	opncls.c	FUNCTION_24
0x4001a10	              0x5b	                                 pop rbx	       915	opncls.c	FUNCTION_24
0x4001a11	              0xc3	                                     ret	       915	opncls.c	FUNCTION_24
bfd_openstreamr	WHILE,0:IF,3:DO,0:functions,0:CALL,6:ELSE,0:FOR,0:SWITCH,0	94
0x4000d90	            0x4156	                                push r14	       382	opncls.c	FUNCTION_8
0x4000d92	            0x4155	                                push r13	       382	opncls.c	FUNCTION_8
0x4000d94	          0x4989fd	                            mov r13, rdi	       382	opncls.c	FUNCTION_8
0x4000d97	            0x4154	                                push r12	       382	opncls.c	FUNCTION_8
0x4000d99	              0x55	                                push rbp	       382	opncls.c	FUNCTION_8
0x4000d9a	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x4000d9f	              0x53	                                push rbx	       382	opncls.c	FUNCTION_8
0x4000da0	          0x4989f4	                            mov r12, rsi	       382	opncls.c	FUNCTION_8
0x4000da3	          0x4989d6	                            mov r14, rdx	       382	opncls.c	FUNCTION_8
0x4000da6	      0xe800000000	                          call 0x4000dab	        62	opncls.c	FUNCTION_1	CALL_1
0x4000dab	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x4000dae	     0xf84e6000000	                            je 0x4000e9a	        63	opncls.c	FUNCTION_1	IF_1
0x4000db4	    0x8b1500000000	            mov edx, dword [0x04000dba] 	        66	opncls.c	FUNCTION_1	IF_2
0x4000dba	          0x4889c3	                            mov rbx, rax	        66	opncls.c	FUNCTION_1	IF_2
0x4000dbd	            0x85d2	                           test edx, edx	        66	opncls.c	FUNCTION_1	IF_2
0x4000dbf	     0xf85a3000000	                           jne 0x4000e68	        66	opncls.c	FUNCTION_1	IF_2
0x4000dc5	    0x8b0500000000	            mov eax, dword [0x04000dcb] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000dcb	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000dce	    0x891500000000	            mov dword [0x04000dd4], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000dd4	          0x894340	             mov dword [rbx + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000dd7	      0xe800000000	                          call 0x4000ddc	        74	opncls.c	FUNCTION_1	CALL_2
0x4000ddc	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x4000ddf	    0x488983080100	            mov qword [rbx + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x4000de6	     0xf849c000000	                            je 0x4000e88	        75	opncls.c	FUNCTION_1	IF_3
0x4000dec	        0x488d6b68	                   lea rbp, [rbx + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000df0	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x4000dfb	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000e00	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000e05	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000e0a	          0x4889ef	                            mov rdi, rbp	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000e0d	      0xe800000000	                          call 0x4000e12	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000e12	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000e14	     0xf84d6000000	                            je 0x4000ef0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000e1a	          0x4889de	                            mov rsi, rbx	       391	opncls.c	FUNCTION_8	CALL_2
0x4000e1d	          0x4c89e7	                            mov rdi, r12	       391	opncls.c	FUNCTION_8	CALL_2
0x4000e20	      0xe800000000	                          call 0x4000e25	       391	opncls.c	FUNCTION_8	CALL_2
0x4000e25	          0x4885c0	                           test rax, rax	       392	opncls.c	FUNCTION_8	IF_2
0x4000e28	            0x7476	                            je 0x4000ea0	       392	opncls.c	FUNCTION_8	IF_2
0x4000e2a	          0x4c89ef	                            mov rdi, r13	       401	opncls.c	FUNCTION_8	CALL_4
0x4000e2d	        0x4c897310	             mov qword [rbx + 0x10], r14	       398	opncls.c	FUNCTION_8
0x4000e31	      0xe800000000	                          call 0x4000e36	       401	opncls.c	FUNCTION_8	CALL_4
0x4000e36	          0x488903	                    mov qword [rbx], rax	       401	opncls.c	FUNCTION_8	CALL_4
0x4000e39	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       402	opncls.c	FUNCTION_8
0x4000e3d	          0x4889df	                            mov rdi, rbx	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000e40	          0x83e0e7	                     and eax, 0xffffffe7	       402	opncls.c	FUNCTION_8
0x4000e43	          0x83c808	                               or eax, 8	       402	opncls.c	FUNCTION_8
0x4000e46	          0x884344	               mov byte [rbx + 0x44], al	       402	opncls.c	FUNCTION_8
0x4000e49	      0xe800000000	                          call 0x4000e4e	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000e4e	            0x85c0	                           test eax, eax	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000e50	          0x4889da	                            mov rdx, rbx	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000e53	            0x744b	                            je 0x4000ea0	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000e55	              0x5b	                                 pop rbx	       411	opncls.c	FUNCTION_8
0x4000e56	          0x4889d0	                            mov rax, rdx	       411	opncls.c	FUNCTION_8
0x4000e59	              0x5d	                                 pop rbp	       411	opncls.c	FUNCTION_8
0x4000e5a	            0x415c	                                 pop r12	       411	opncls.c	FUNCTION_8
0x4000e5c	            0x415d	                                 pop r13	       411	opncls.c	FUNCTION_8
0x4000e5e	            0x415e	                                 pop r14	       411	opncls.c	FUNCTION_8
0x4000e60	              0xc3	                                     ret	       411	opncls.c	FUNCTION_8
0x4000e61	     0xf1f80000000	                         nop dword [rax]	       411	opncls.c	FUNCTION_8
0x4000e68	    0x8b0500000000	            mov eax, dword [0x04000e6e] 	        68	opncls.c	FUNCTION_1	IF_2
0x4000e6e	          0x83ea01	                              sub edx, 1	        69	opncls.c	FUNCTION_1	IF_2
0x4000e71	    0x891500000000	            mov dword [0x04000e77], edx 	        69	opncls.c	FUNCTION_1	IF_2
0x4000e77	          0x83e801	                              sub eax, 1	        68	opncls.c	FUNCTION_1	IF_2
0x4000e7a	    0x890500000000	            mov dword [0x04000e80], eax 	        68	opncls.c	FUNCTION_1	IF_2
0x4000e80	      0xe94fffffff	                           jmp 0x4000dd4	        68	opncls.c	FUNCTION_1	IF_2
0x4000e85	           0xf1f00	                         nop dword [rax]	        68	opncls.c	FUNCTION_1	IF_2
0x4000e88	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x4000e8d	      0xe800000000	                          call 0x4000e92	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x4000e92	          0x4889df	                            mov rdi, rbx	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x4000e95	      0xe800000000	                          call 0x4000e9a	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x4000e9a	            0x31d2	                            xor edx, edx	       389	opncls.c	FUNCTION_8	IF_1
0x4000e9c	            0xebb7	                           jmp 0x4000e55	       389	opncls.c	FUNCTION_8	IF_1
0x4000e9e	            0x6690	                                     nop	       389	opncls.c	FUNCTION_8	IF_1
0x4000ea0	    0x4883bb080100	              cmp qword [rbx + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x4000ea8	            0x7414	                            je 0x4000ebe	       123	opncls.c	FUNCTION_3	IF_1
0x4000eaa	          0x4889ef	                            mov rdi, rbp	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4000ead	      0xe800000000	                          call 0x4000eb2	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4000eb2	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x4000eb9	      0xe800000000	                          call 0x4000ebe	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x4000ebe	          0x488b3b	                    mov rdi, qword [rbx]	       129	opncls.c	FUNCTION_3	IF_2
0x4000ec1	          0x4885ff	                           test rdi, rdi	       129	opncls.c	FUNCTION_3	IF_2
0x4000ec4	            0x7405	                            je 0x4000ecb	       129	opncls.c	FUNCTION_3	IF_2
0x4000ec6	      0xe800000000	                          call 0x4000ecb	       130	opncls.c	FUNCTION_3	CALL_3
0x4000ecb	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	       131	opncls.c	FUNCTION_3	CALL_4
0x4000ed2	      0xe800000000	                          call 0x4000ed7	       131	opncls.c	FUNCTION_3	CALL_4
0x4000ed7	          0x4889df	                            mov rdi, rbx	       132	opncls.c	FUNCTION_3	CALL_5
0x4000eda	      0xe800000000	                          call 0x4000edf	       132	opncls.c	FUNCTION_3	CALL_5
0x4000edf	            0x31d2	                            xor edx, edx	       407	opncls.c	FUNCTION_8	IF_3
0x4000ee1	      0xe96fffffff	                           jmp 0x4000e55	       407	opncls.c	FUNCTION_8	IF_3
0x4000ee6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       407	opncls.c	FUNCTION_8	IF_3
0x4000ef0	          0x4889df	                            mov rdi, rbx	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4000ef3	      0xe800000000	                          call 0x4000ef8	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4000ef8	            0x31d2	                            xor edx, edx	       389	opncls.c	FUNCTION_8	IF_1
0x4000efa	      0xe956ffffff	                           jmp 0x4000e55	       389	opncls.c	FUNCTION_8	IF_1
bfd_alloc2	WHILE,0:IF,1:DO,0:functions,0:CALL,2:ELSE,0:FOR,0:SWITCH,0	50
0x4001aa0	          0x4889d1	                            mov rcx, rdx	       969	opncls.c	FUNCTION_26
0x4001aa3	          0x4889f2	                            mov rdx, rsi	       971	opncls.c	FUNCTION_26	IF_1
0x4001aa6	      0xb8ffffffff	                     mov eax, 0xffffffff	       971	opncls.c	FUNCTION_26	IF_1
0x4001aab	          0x4809ca	                             or rdx, rcx	       971	opncls.c	FUNCTION_26	IF_1
0x4001aae	        0x4883ec18	                           sub rsp, 0x18	       969	opncls.c	FUNCTION_26
0x4001ab2	          0x4839c2	                            cmp rdx, rax	       971	opncls.c	FUNCTION_26	IF_1
0x4001ab5	            0x7616	                           jbe 0x4001acd	       971	opncls.c	FUNCTION_26	IF_1
0x4001ab7	          0x4885c9	                           test rcx, rcx	       971	opncls.c	FUNCTION_26	IF_1
0x4001aba	            0x7411	                            je 0x4001acd	       971	opncls.c	FUNCTION_26	IF_1
0x4001abc	            0x31d2	                            xor edx, edx	       972	opncls.c	FUNCTION_26	IF_1
0x4001abe	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       972	opncls.c	FUNCTION_26	IF_1
0x4001ac5	          0x48f7f1	                                 div rcx	       972	opncls.c	FUNCTION_26	IF_1
0x4001ac8	          0x4839c6	                            cmp rsi, rax	       972	opncls.c	FUNCTION_26	IF_1
0x4001acb	            0x775b	                            ja 0x4001b28	       972	opncls.c	FUNCTION_26	IF_1
0x4001acd	        0x480fafce	                           imul rcx, rsi	       978	opncls.c	FUNCTION_26	CALL_2
0x4001ad1	          0x4885c9	                           test rcx, rcx	       935	opncls.c	FUNCTION_25	IF_1
0x4001ad4	            0x7852	                            js 0x4001b28	       935	opncls.c	FUNCTION_25	IF_1
0x4001ad6	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	       949	opncls.c	FUNCTION_25	CALL_2
0x4001add	            0x7421	                            je 0x4001b00	       949	opncls.c	FUNCTION_25	CALL_2
0x4001adf	        0x488d7107	                      lea rsi, [rcx + 7]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001ae3	        0x4883e6f8	             and rsi, 0xfffffffffffffff8	       949	opncls.c	FUNCTION_25	CALL_2
0x4001ae7	            0x751c	                           jne 0x4001b05	       949	opncls.c	FUNCTION_25	CALL_2
0x4001ae9	      0xe800000000	                          call 0x4001aee	       949	opncls.c	FUNCTION_25	CALL_2
0x4001aee	          0x4885c0	                           test rax, rax	       950	opncls.c	FUNCTION_25	IF_2
0x4001af1	            0x744d	                            je 0x4001b40	       950	opncls.c	FUNCTION_25	IF_2
0x4001af3	        0x4883c418	                           add rsp, 0x18	       979	opncls.c	FUNCTION_26
0x4001af7	              0xc3	                                     ret	       979	opncls.c	FUNCTION_26
0x4001af8	     0xf1f84000000	                   nop dword [rax + rax]	       979	opncls.c	FUNCTION_26
0x4001b00	      0xbe08000000	                              mov esi, 8	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b05	          0x8b4708	                mov eax, dword [rdi + 8]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b08	          0x4839f0	                            cmp rax, rsi	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b0b	          0x4889c2	                            mov rdx, rax	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b0e	            0x72d9	                            jb 0x4001ae9	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b10	          0x488b07	                    mov rax, qword [rdi]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b13	            0x29f2	                            sub edx, esi	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b15	          0x895708	                mov dword [rdi + 8], edx	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b18	        0x488d0c30	                    lea rcx, [rax + rsi]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b1c	          0x48890f	                    mov qword [rdi], rcx	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b1f	            0xebcd	                           jmp 0x4001aee	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b21	     0xf1f80000000	                         nop dword [rax]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001b28	      0xbf06000000	                              mov edi, 6	       974	opncls.c	FUNCTION_26	IF_1	CALL_1
0x4001b2d	      0xe800000000	                          call 0x4001b32	       974	opncls.c	FUNCTION_26	IF_1	CALL_1
0x4001b32	            0x31c0	                            xor eax, eax	       975	opncls.c	FUNCTION_26	IF_1
0x4001b34	            0xebbd	                           jmp 0x4001af3	       975	opncls.c	FUNCTION_26	IF_1
0x4001b36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       975	opncls.c	FUNCTION_26	IF_1
0x4001b40	      0xbf06000000	                              mov edi, 6	       951	opncls.c	FUNCTION_25	CALL_3
0x4001b45	      0x4889442408	                mov qword [rsp + 8], rax	       951	opncls.c	FUNCTION_25	CALL_3
0x4001b4a	      0xe800000000	                          call 0x4001b4f	       951	opncls.c	FUNCTION_25	CALL_3
0x4001b4f	      0x488b442408	                mov rax, qword [rsp + 8]	       951	opncls.c	FUNCTION_25	CALL_3
0x4001b54	            0xeb9d	                           jmp 0x4001af3	       951	opncls.c	FUNCTION_25	CALL_3
opncls_bstat	WHILE,0:IF,1:DO,0:functions,0:CALL,1:ELSE,0:FOR,0:SWITCH,0	22
0x4000110	        0x4c8b4f10	              mov r9, qword [rdi + 0x10]	       542	opncls.c	FUNCTION_15
0x4000114	          0x4989f8	                             mov r8, rdi	       541	opncls.c	FUNCTION_15
0x4000117	        0x488d7e08	                      lea rdi, [rsi + 8]	        90	string3.h	FUNCTION_49	CALL_6
0x400011b	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_49	CALL_6
0x400011e	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_49	CALL_6
0x4000120	    0x48c706000000	                      mov qword [rsi], 0	        90	string3.h	FUNCTION_49	CALL_6
0x4000127	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_49	CALL_6
0x400012b	    0x48c786880000	               mov qword [rsi + 0x88], 0	        90	string3.h	FUNCTION_49	CALL_6
0x4000136	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_49	CALL_6
0x4000139	    0x81c190000000	                           add ecx, 0x90	        90	string3.h	FUNCTION_49	CALL_6
0x400013f	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_49	CALL_6
0x4000142	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_49	CALL_6
0x4000145	        0x498b4118	              mov rax, qword [r9 + 0x18]	       545	opncls.c	FUNCTION_15	IF_1
0x4000149	          0x4885c0	                           test rax, rax	       545	opncls.c	FUNCTION_15	IF_1
0x400014c	            0x7412	                            je 0x4000160	       545	opncls.c	FUNCTION_15	IF_1
0x400014e	          0x4889f2	                            mov rdx, rsi	       548	opncls.c	FUNCTION_15
0x4000151	          0x4c89c7	                             mov rdi, r8	       548	opncls.c	FUNCTION_15
0x4000154	          0x498b31	                     mov rsi, qword [r9]	       548	opncls.c	FUNCTION_15
0x4000157	            0xffe0	                                 jmp rax	       548	opncls.c	FUNCTION_15
0x4000159	     0xf1f80000000	                         nop dword [rax]	       548	opncls.c	FUNCTION_15
0x4000160	            0x31c0	                            xor eax, eax	       549	opncls.c	FUNCTION_15
0x4000162	              0xc3	                                     ret	       549	opncls.c	FUNCTION_15
bfd_create	WHILE,0:IF,2:DO,0:functions,0:CALL,3:ELSE,0:FOR,0:SWITCH,0	64
0x4001790	            0x4154	                                push r12	       796	opncls.c	FUNCTION_22
0x4001792	              0x55	                                push rbp	       796	opncls.c	FUNCTION_22
0x4001793	          0x4989fc	                            mov r12, rdi	       796	opncls.c	FUNCTION_22
0x4001796	              0x53	                                push rbx	       796	opncls.c	FUNCTION_22
0x4001797	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x400179c	          0x4889f5	                            mov rbp, rsi	       796	opncls.c	FUNCTION_22
0x400179f	      0xe800000000	                          call 0x40017a4	        62	opncls.c	FUNCTION_1	CALL_1
0x40017a4	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x40017a7	     0xf84bd000000	                            je 0x400186a	        63	opncls.c	FUNCTION_1	IF_1
0x40017ad	    0x8b1500000000	            mov edx, dword [0x040017b3] 	        66	opncls.c	FUNCTION_1	IF_2
0x40017b3	          0x4889c3	                            mov rbx, rax	        66	opncls.c	FUNCTION_1	IF_2
0x40017b6	            0x85d2	                           test edx, edx	        66	opncls.c	FUNCTION_1	IF_2
0x40017b8	            0x757e	                           jne 0x4001838	        66	opncls.c	FUNCTION_1	IF_2
0x40017ba	    0x8b0500000000	            mov eax, dword [0x040017c0] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x40017c0	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x40017c3	    0x891500000000	            mov dword [0x040017c9], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x40017c9	          0x894340	             mov dword [rbx + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x40017cc	      0xe800000000	                          call 0x40017d1	        74	opncls.c	FUNCTION_1	CALL_2
0x40017d1	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x40017d4	    0x488983080100	            mov qword [rbx + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x40017db	            0x747b	                            je 0x4001858	        75	opncls.c	FUNCTION_1	IF_3
0x40017dd	        0x488d7b68	                   lea rdi, [rbx + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40017e1	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x40017ec	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40017f1	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40017f6	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40017fb	      0xe800000000	                          call 0x4001800	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4001800	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4001802	            0x746c	                            je 0x4001870	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4001804	          0x4c89e7	                            mov rdi, r12	       804	opncls.c	FUNCTION_22	CALL_2
0x4001807	      0xe800000000	                          call 0x400180c	       804	opncls.c	FUNCTION_22	CALL_2
0x400180c	          0x4885ed	                           test rbp, rbp	       805	opncls.c	FUNCTION_22	IF_2
0x400180f	          0x488903	                    mov qword [rbx], rax	       804	opncls.c	FUNCTION_22	CALL_2
0x4001812	            0x7408	                            je 0x400181c	       805	opncls.c	FUNCTION_22	IF_2
0x4001814	        0x488b4508	                mov rax, qword [rbp + 8]	       806	opncls.c	FUNCTION_22	IF_2
0x4001818	        0x48894308	                mov qword [rbx + 8], rax	       806	opncls.c	FUNCTION_22	IF_2
0x400181c	        0x806344e7	             and byte [rbx + 0x44], 0xe7	       807	opncls.c	FUNCTION_22
0x4001820	      0xbe01000000	                              mov esi, 1	       808	opncls.c	FUNCTION_22	CALL_3
0x4001825	          0x4889df	                            mov rdi, rbx	       808	opncls.c	FUNCTION_22	CALL_3
0x4001828	      0xe800000000	                          call 0x400182d	       808	opncls.c	FUNCTION_22	CALL_3
0x400182d	          0x4889d8	                            mov rax, rbx	       810	opncls.c	FUNCTION_22
0x4001830	              0x5b	                                 pop rbx	       811	opncls.c	FUNCTION_22
0x4001831	              0x5d	                                 pop rbp	       811	opncls.c	FUNCTION_22
0x4001832	            0x415c	                                 pop r12	       811	opncls.c	FUNCTION_22
0x4001834	              0xc3	                                     ret	       811	opncls.c	FUNCTION_22
0x4001835	           0xf1f00	                         nop dword [rax]	       811	opncls.c	FUNCTION_22
0x4001838	    0x8b0500000000	            mov eax, dword [0x0400183e] 	        68	opncls.c	FUNCTION_1	IF_2
0x400183e	          0x83ea01	                              sub edx, 1	        69	opncls.c	FUNCTION_1	IF_2
0x4001841	    0x891500000000	            mov dword [0x04001847], edx 	        69	opncls.c	FUNCTION_1	IF_2
0x4001847	          0x83e801	                              sub eax, 1	        68	opncls.c	FUNCTION_1	IF_2
0x400184a	    0x890500000000	            mov dword [0x04001850], eax 	        68	opncls.c	FUNCTION_1	IF_2
0x4001850	      0xe974ffffff	                           jmp 0x40017c9	        68	opncls.c	FUNCTION_1	IF_2
0x4001855	           0xf1f00	                         nop dword [rax]	        68	opncls.c	FUNCTION_1	IF_2
0x4001858	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x400185d	      0xe800000000	                          call 0x4001862	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x4001862	          0x4889df	                            mov rdi, rbx	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x4001865	      0xe800000000	                          call 0x400186a	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x400186a	            0x31c0	                            xor eax, eax	       801	opncls.c	FUNCTION_22	IF_1
0x400186c	            0xebc2	                           jmp 0x4001830	       801	opncls.c	FUNCTION_22	IF_1
0x400186e	            0x6690	                                     nop	       801	opncls.c	FUNCTION_22	IF_1
0x4001870	          0x4889df	                            mov rdi, rbx	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4001873	      0xe800000000	                          call 0x4001878	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4001878	            0x31c0	                            xor eax, eax	       801	opncls.c	FUNCTION_22	IF_1
0x400187a	            0xebb4	                           jmp 0x4001830	       801	opncls.c	FUNCTION_22	IF_1
opncls_bread	WHILE,0:IF,1:DO,0:functions,0:CALL,0:ELSE,0:FOR,0:SWITCH,0	12
0x4000090	              0x53	                                push rbx	       501	opncls.c	FUNCTION_11
0x4000091	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       502	opncls.c	FUNCTION_11
0x4000095	          0x4889d1	                            mov rcx, rdx	       503	opncls.c	FUNCTION_11
0x4000098	          0x4889f2	                            mov rdx, rsi	       503	opncls.c	FUNCTION_11
0x400009b	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	       503	opncls.c	FUNCTION_11
0x400009f	          0x488b33	                    mov rsi, qword [rbx]	       503	opncls.c	FUNCTION_11
0x40000a2	          0xff5308	                    call qword [rbx + 8]	       503	opncls.c	FUNCTION_11
0x40000a5	          0x4885c0	                           test rax, rax	       505	opncls.c	FUNCTION_11	IF_1
0x40000a8	            0x7804	                            js 0x40000ae	       505	opncls.c	FUNCTION_11	IF_1
0x40000aa	        0x48014320	            add qword [rbx + 0x20], rax 	       507	opncls.c	FUNCTION_11
0x40000ae	              0x5b	                                 pop rbx	       509	opncls.c	FUNCTION_11
0x40000af	              0xc3	                                     ret	       509	opncls.c	FUNCTION_11
opncls_bseek	WHILE,0:IF,0:DO,0:functions,0:CALL,0:ELSE,0:FOR,0:SWITCH,1	18
0x4000050	          0x83fa01	                              cmp edx, 1	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000053	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       489	opncls.c	FUNCTION_10
0x4000057	            0x7427	                            je 0x4000080	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000059	          0x83fa02	                              cmp edx, 2	       490	opncls.c	FUNCTION_10	SWITCH_1
0x400005c	      0xb8ffffffff	                     mov eax, 0xffffffff	       494	opncls.c	FUNCTION_10	SWITCH_1
0x4000061	            0x7406	                            je 0x4000069	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000063	            0x85d2	                           test edx, edx	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000065	            0x7409	                            je 0x4000070	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000067	            0x31c0	                            xor eax, eax	       496	opncls.c	FUNCTION_10
0x4000069	            0xf3c3	                                     ret	       497	opncls.c	FUNCTION_10
0x400006b	       0xf1f440000	                   nop dword [rax + rax]	       497	opncls.c	FUNCTION_10
0x4000070	        0x48897120	             mov qword [rcx + 0x20], rsi	       492	opncls.c	FUNCTION_10	SWITCH_1
0x4000074	            0x31c0	                            xor eax, eax	       496	opncls.c	FUNCTION_10
0x4000076	              0xc3	                                     ret	       492	opncls.c	FUNCTION_10	SWITCH_1
0x4000077	    0x660f1f840000	                    nop word [rax + rax]	       492	opncls.c	FUNCTION_10	SWITCH_1
0x4000080	        0x48017120	            add qword [rcx + 0x20], rsi 	       493	opncls.c	FUNCTION_10	SWITCH_1
0x4000084	            0x31c0	                            xor eax, eax	       496	opncls.c	FUNCTION_10
0x4000086	            0xebe1	                           jmp 0x4000069	       496	opncls.c	FUNCTION_10
opncls_btell	WHILE,0:IF,0:DO,0:functions,0:CALL,0:ELSE,0:FOR,0:SWITCH,0	3
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       483	opncls.c	FUNCTION_9
0x4000044	        0x488b4020	            mov rax, qword [rax + 0x20] 	       483	opncls.c	FUNCTION_9
0x4000048	              0xc3	                                     ret	       484	opncls.c	FUNCTION_9
bfd_get_debug_link_info	WHILE,0:IF,0:DO,0:functions,0:CALL,1:ELSE,0:FOR,0:SWITCH,0	74
0x4001cf0	            0x4155	                                push r13	      1241	opncls.c	FUNCTION_32
0x4001cf2	            0x4154	                                push r12	      1241	opncls.c	FUNCTION_32
0x4001cf4	          0x4989f5	                            mov r13, rsi	      1241	opncls.c	FUNCTION_32
0x4001cf7	              0x55	                                push rbp	      1241	opncls.c	FUNCTION_32
0x4001cf8	              0x53	                                push rbx	      1241	opncls.c	FUNCTION_32
0x4001cf9	          0x4889fb	                            mov rbx, rdi	      1241	opncls.c	FUNCTION_32
0x4001cfc	        0x4883ec18	                           sub rsp, 0x18	      1241	opncls.c	FUNCTION_32
0x4001d00	    0x64488b042528	                mov rax, qword fs:[0x28]	      1241	opncls.c	FUNCTION_32
0x4001d09	      0x4889442408	                mov qword [rsp + 8], rax	      1241	opncls.c	FUNCTION_32
0x4001d0e	            0x31c0	                            xor eax, eax	      1241	opncls.c	FUNCTION_32
0x4001d10	          0x4885ff	                           test rdi, rdi	      1184	opncls.c	FUNCTION_31	CALL_1
0x4001d13	     0xf84c7000000	                            je 0x4001de0	      1184	opncls.c	FUNCTION_31	CALL_1
0x4001d19	          0x4d85ed	                           test r13, r13	      1185	opncls.c	FUNCTION_31	CALL_2
0x4001d1c	     0xf84a6000000	                            je 0x4001dc8	      1185	opncls.c	FUNCTION_31	CALL_2
0x4001d22	      0xbe00000000	                              mov esi, 0	      1187	opncls.c	FUNCTION_31	CALL_3
0x4001d27	          0x4889df	                            mov rdi, rbx	      1187	opncls.c	FUNCTION_31	CALL_3
0x4001d2a	      0xe800000000	                          call 0x4001d2f	      1187	opncls.c	FUNCTION_31	CALL_3
0x4001d2f	          0x4885c0	                           test rax, rax	      1189	opncls.c	FUNCTION_31	IF_1
0x4001d32	          0x4889c5	                            mov rbp, rax	      1187	opncls.c	FUNCTION_31	CALL_3
0x4001d35	            0x7437	                            je 0x4001d6e	      1189	opncls.c	FUNCTION_31	IF_1
0x4001d37	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      1192	opncls.c	FUNCTION_31
0x4001d3b	        0x4983fc07	                              cmp r12, 7	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001d3f	            0x762d	                           jbe 0x4001d6e	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001d41	          0x4889df	                            mov rdi, rbx	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001d44	      0xe800000000	                          call 0x4001d49	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001d49	          0x4939c4	                            cmp r12, rax	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001d4c	            0x7320	                           jae 0x4001d6e	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x4001d4e	          0x4889e2	                            mov rdx, rsp	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001d51	          0x4889ee	                            mov rsi, rbp	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001d54	          0x4889df	                            mov rdi, rbx	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001d57	      0xe800000000	                          call 0x4001d5c	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001d5c	            0x85c0	                           test eax, eax	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001d5e	            0x7530	                           jne 0x4001d90	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4001d60	        0x488b3c24	                    mov rdi, qword [rsp]	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x4001d64	          0x4885ff	                           test rdi, rdi	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x4001d67	            0x7405	                            je 0x4001d6e	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x4001d69	      0xe800000000	                          call 0x4001d6e	      1201	opncls.c	FUNCTION_31	IF_3	CALL_6
0x4001d6e	            0x31c0	                            xor eax, eax	      1202	opncls.c	FUNCTION_31	IF_3
0x4001d70	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1243	opncls.c	FUNCTION_32
0x4001d75	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1243	opncls.c	FUNCTION_32
0x4001d7e	            0x7574	                           jne 0x4001df4	      1243	opncls.c	FUNCTION_32
0x4001d80	        0x4883c418	                           add rsp, 0x18	      1243	opncls.c	FUNCTION_32
0x4001d84	              0x5b	                                 pop rbx	      1243	opncls.c	FUNCTION_32
0x4001d85	              0x5d	                                 pop rbp	      1243	opncls.c	FUNCTION_32
0x4001d86	            0x415c	                                 pop r12	      1243	opncls.c	FUNCTION_32
0x4001d88	            0x415d	                                 pop r13	      1243	opncls.c	FUNCTION_32
0x4001d8a	              0xc3	                                     ret	      1243	opncls.c	FUNCTION_32
0x4001d8b	       0xf1f440000	                   nop dword [rax + rax]	      1243	opncls.c	FUNCTION_32
0x4001d90	        0x488b2c24	                    mov rbp, qword [rsp]	      1206	opncls.c	FUNCTION_31
0x4001d94	          0x4c89e6	                            mov rsi, r12	      1208	opncls.c	FUNCTION_31	CALL_7
0x4001d97	          0x4889ef	                            mov rdi, rbp	      1208	opncls.c	FUNCTION_31	CALL_7
0x4001d9a	      0xe800000000	                          call 0x4001d9f	      1208	opncls.c	FUNCTION_31	CALL_7
0x4001d9f	          0x83c004	                              add eax, 4	      1209	opncls.c	FUNCTION_31
0x4001da2	          0x83e0fc	                     and eax, 0xfffffffc	      1209	opncls.c	FUNCTION_31
0x4001da5	          0x8d5004	                      lea edx, [rax + 4]	      1210	opncls.c	FUNCTION_31	IF_5
0x4001da8	          0x4939d4	                            cmp r12, rdx	      1210	opncls.c	FUNCTION_31	IF_5
0x4001dab	            0x72c1	                            jb 0x4001d6e	      1210	opncls.c	FUNCTION_31	IF_5
0x4001dad	      0x488d7c0500	                    lea rdi, [rbp + rax]	      1213	opncls.c	FUNCTION_31
0x4001db2	        0x488b4308	                mov rax, qword [rbx + 8]	      1213	opncls.c	FUNCTION_31
0x4001db6	          0xff5038	                 call qword [rax + 0x38]	      1213	opncls.c	FUNCTION_31
0x4001db9	        0x49894500	                    mov qword [r13], rax	      1213	opncls.c	FUNCTION_31
0x4001dbd	          0x4889e8	                            mov rax, rbp	      1213	opncls.c	FUNCTION_31
0x4001dc0	            0xebae	                           jmp 0x4001d70	      1213	opncls.c	FUNCTION_31
0x4001dc2	    0x660f1f440000	                    nop word [rax + rax]	      1213	opncls.c	FUNCTION_31
0x4001dc8	      0xbea1040000	                          mov esi, 0x4a1	      1185	opncls.c	FUNCTION_31	CALL_2
0x4001dcd	      0xbf00000000	                              mov edi, 0	      1185	opncls.c	FUNCTION_31	CALL_2
0x4001dd2	      0xe800000000	                          call 0x4001dd7	      1185	opncls.c	FUNCTION_31	CALL_2
0x4001dd7	      0xe946ffffff	                           jmp 0x4001d22	      1185	opncls.c	FUNCTION_31	CALL_2
0x4001ddc	         0xf1f4000	                         nop dword [rax]	      1185	opncls.c	FUNCTION_31	CALL_2
0x4001de0	      0xbea0040000	                          mov esi, 0x4a0	      1184	opncls.c	FUNCTION_31	CALL_1
0x4001de5	      0xbf00000000	                              mov edi, 0	      1184	opncls.c	FUNCTION_31	CALL_1
0x4001dea	      0xe800000000	                          call 0x4001def	      1184	opncls.c	FUNCTION_31	CALL_1
0x4001def	      0xe925ffffff	                           jmp 0x4001d19	      1184	opncls.c	FUNCTION_31	CALL_1
0x4001df4	      0xe800000000	                          call 0x4001df9	      1243	opncls.c	FUNCTION_32
_bfd_free_cached_info	WHILE,0:IF,1:DO,0:functions,0:CALL,2:ELSE,0:FOR,0:SWITCH,0	20
0x4000600	    0x4883bf080100	              cmp qword [rdi + 0x108], 0	       140	opncls.c	FUNCTION_4	IF_1
0x4000608	            0x7466	                            je 0x4000670	       140	opncls.c	FUNCTION_4	IF_1
0x400060a	              0x53	                                push rbx	       139	opncls.c	FUNCTION_4
0x400060b	          0x4889fb	                            mov rbx, rdi	       139	opncls.c	FUNCTION_4
0x400060e	        0x488d7f68	                   lea rdi, [rdi + 0x68]	       142	opncls.c	FUNCTION_4	IF_1	CALL_1
0x4000612	      0xe800000000	                          call 0x4000617	       142	opncls.c	FUNCTION_4	IF_1	CALL_1
0x4000617	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       143	opncls.c	FUNCTION_4	IF_1	CALL_2
0x400061e	      0xe800000000	                          call 0x4000623	       143	opncls.c	FUNCTION_4	IF_1	CALL_2
0x4000623	    0x48c783900000	               mov qword [rbx + 0x90], 0	       145	opncls.c	FUNCTION_4	IF_1
0x400062e	    0x48c783980000	               mov qword [rbx + 0x98], 0	       146	opncls.c	FUNCTION_4	IF_1
0x4000639	      0xb801000000	                              mov eax, 1	       154	opncls.c	FUNCTION_4
0x400063e	    0x48c783b00000	               mov qword [rbx + 0xb0], 0	       147	opncls.c	FUNCTION_4	IF_1
0x4000649	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	       148	opncls.c	FUNCTION_4	IF_1
0x4000654	    0x48c783000100	              mov qword [rbx + 0x100], 0	       149	opncls.c	FUNCTION_4	IF_1
0x400065f	    0x48c783080100	              mov qword [rbx + 0x108], 0	       150	opncls.c	FUNCTION_4	IF_1
0x400066a	              0x5b	                                 pop rbx	       154	opncls.c	FUNCTION_4
0x400066b	              0xc3	                                     ret	       154	opncls.c	FUNCTION_4
0x400066c	         0xf1f4000	                         nop dword [rax]	       154	opncls.c	FUNCTION_4
0x4000670	      0xb801000000	                              mov eax, 1	       154	opncls.c	FUNCTION_4
0x4000675	              0xc3	                                     ret	       154	opncls.c	FUNCTION_4
bfd_openr_iovec	WHILE,0:IF,3:DO,0:functions,0:CALL,7:ELSE,0:FOR,0:SWITCH,0	134
0x4000f00	            0x4157	                                push r15	       578	opncls.c	FUNCTION_17
0x4000f02	            0x4156	                                push r14	       578	opncls.c	FUNCTION_17
0x4000f04	          0x4d89cf	                             mov r15, r9	       578	opncls.c	FUNCTION_17
0x4000f07	            0x4155	                                push r13	       578	opncls.c	FUNCTION_17
0x4000f09	            0x4154	                                push r12	       578	opncls.c	FUNCTION_17
0x4000f0b	          0x4d89c6	                             mov r14, r8	       578	opncls.c	FUNCTION_17
0x4000f0e	              0x55	                                push rbp	       578	opncls.c	FUNCTION_17
0x4000f0f	              0x53	                                push rbx	       578	opncls.c	FUNCTION_17
0x4000f10	          0x4989d4	                            mov r12, rdx	       578	opncls.c	FUNCTION_17
0x4000f13	          0x4889f3	                            mov rbx, rsi	       578	opncls.c	FUNCTION_17
0x4000f16	        0x4883ec18	                           sub rsp, 0x18	       578	opncls.c	FUNCTION_17
0x4000f1a	        0x48893c24	                    mov qword [rsp], rdi	       578	opncls.c	FUNCTION_17
0x4000f1e	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x4000f23	      0x48894c2408	                mov qword [rsp + 8], rcx	       578	opncls.c	FUNCTION_17
0x4000f28	      0xe800000000	                          call 0x4000f2d	        62	opncls.c	FUNCTION_1	CALL_1
0x4000f2d	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x4000f30	     0xf849c010000	                            je 0x40010d2	        63	opncls.c	FUNCTION_1	IF_1
0x4000f36	    0x8b1500000000	            mov edx, dword [0x04000f3c] 	        66	opncls.c	FUNCTION_1	IF_2
0x4000f3c	          0x4989c5	                            mov r13, rax	        66	opncls.c	FUNCTION_1	IF_2
0x4000f3f	            0x85d2	                           test edx, edx	        66	opncls.c	FUNCTION_1	IF_2
0x4000f41	     0xf8529010000	                           jne 0x4001070	        66	opncls.c	FUNCTION_1	IF_2
0x4000f47	    0x8b0500000000	            mov eax, dword [0x04000f4d] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000f4d	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000f50	    0x891500000000	            mov dword [0x04000f56], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000f56	        0x41894540	             mov dword [r13 + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x4000f5a	      0xe800000000	                          call 0x4000f5f	        74	opncls.c	FUNCTION_1	CALL_2
0x4000f5f	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x4000f62	    0x498985080100	            mov qword [r13 + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x4000f69	     0xf8451010000	                            je 0x40010c0	        75	opncls.c	FUNCTION_1	IF_3
0x4000f6f	        0x498d6d68	                   lea rbp, [r13 + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000f73	    0x49c785c00000	               mov qword [r13 + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x4000f7e	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000f83	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000f88	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000f8d	          0x4889ef	                            mov rdi, rbp	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000f90	      0xe800000000	                          call 0x4000f95	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000f95	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000f97	     0xf8443010000	                            je 0x40010e0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000f9d	          0x4c89ee	                            mov rsi, r13	       588	opncls.c	FUNCTION_17	CALL_3
0x4000fa0	          0x4889df	                            mov rdi, rbx	       588	opncls.c	FUNCTION_17	CALL_3
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       588	opncls.c	FUNCTION_17	CALL_3
0x4000fa8	          0x4885c0	                           test rax, rax	       589	opncls.c	FUNCTION_17	IF_2
0x4000fab	     0xf843f010000	                            je 0x40010f0	       589	opncls.c	FUNCTION_17	IF_2
0x4000fb1	        0x488b3c24	                    mov rdi, qword [rsp]	       597	opncls.c	FUNCTION_17	CALL_5
0x4000fb5	      0xe800000000	                          call 0x4000fba	       597	opncls.c	FUNCTION_17	CALL_5
0x4000fba	        0x49894500	                    mov qword [r13], rax	       597	opncls.c	FUNCTION_17	CALL_5
0x4000fbe	      0x410fb64544	           movzx eax, byte [r13 + 0x44] 	       598	opncls.c	FUNCTION_17
0x4000fc3	          0x4c89ef	                            mov rdi, r13	       601	opncls.c	FUNCTION_17
0x4000fc6	      0x488b742408	                mov rsi, qword [rsp + 8]	       601	opncls.c	FUNCTION_17
0x4000fcb	          0x83e0e7	                     and eax, 0xffffffe7	       598	opncls.c	FUNCTION_17
0x4000fce	          0x83c808	                               or eax, 8	       598	opncls.c	FUNCTION_17
0x4000fd1	        0x41884544	               mov byte [r13 + 0x44], al	       598	opncls.c	FUNCTION_17
0x4000fd5	          0x41ffd4	                                call r12	       601	opncls.c	FUNCTION_17
0x4000fd8	          0x4885c0	                           test rax, rax	       602	opncls.c	FUNCTION_17	IF_3
0x4000fdb	          0x4889c3	                            mov rbx, rax	       601	opncls.c	FUNCTION_17
0x4000fde	     0xf840c010000	                            je 0x40010f0	       602	opncls.c	FUNCTION_17	IF_3
0x4000fe4	    0x498bbd080100	           mov rdi, qword [r13 + 0x108] 	       949	opncls.c	FUNCTION_25	CALL_2
0x4000feb	          0x8b5708	                mov edx, dword [rdi + 8]	       949	opncls.c	FUNCTION_25	CALL_2
0x4000fee	          0x83fa27	                           cmp edx, 0x27	       949	opncls.c	FUNCTION_25	CALL_2
0x4000ff1	     0xf8699000000	                           jbe 0x4001090	       949	opncls.c	FUNCTION_25	CALL_2
0x4000ff7	          0x488b07	                    mov rax, qword [rdi]	       949	opncls.c	FUNCTION_25	CALL_2
0x4000ffa	          0x83ea28	                           sub edx, 0x28	       949	opncls.c	FUNCTION_25	CALL_2
0x4000ffd	          0x895708	                mov dword [rdi + 8], edx	       949	opncls.c	FUNCTION_25	CALL_2
0x4001000	        0x488d4828	                   lea rcx, [rax + 0x28]	       949	opncls.c	FUNCTION_25	CALL_2
0x4001004	          0x48890f	                    mov qword [rdi], rcx	       949	opncls.c	FUNCTION_25	CALL_2
0x4001007	          0x4885c0	                           test rax, rax	       950	opncls.c	FUNCTION_25	IF_2
0x400100a	     0xf8490000000	                            je 0x40010a0	       950	opncls.c	FUNCTION_25	IF_2
0x4001010	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_49	CALL_6
0x4001017	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_49	CALL_6
0x400101f	    0x48c740100000	               mov qword [rax + 0x10], 0	        90	string3.h	FUNCTION_49	CALL_6
0x4001027	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_49	CALL_6
0x400102f	    0x48c740200000	               mov qword [rax + 0x20], 0	        90	string3.h	FUNCTION_49	CALL_6
0x4001037	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       612	opncls.c	FUNCTION_17
0x400103c	          0x488918	                    mov qword [rax], rbx	       609	opncls.c	FUNCTION_17
0x400103f	        0x4c897008	                mov qword [rax + 8], r14	       610	opncls.c	FUNCTION_17
0x4001043	        0x4c897810	             mov qword [rax + 0x10], r15	       611	opncls.c	FUNCTION_17
0x4001047	        0x48895018	             mov qword [rax + 0x18], rdx	       612	opncls.c	FUNCTION_17
0x400104b	        0x49894510	             mov qword [r13 + 0x10], rax	       615	opncls.c	FUNCTION_17
0x400104f	          0x4c89e8	                            mov rax, r13	       617	opncls.c	FUNCTION_17
0x4001052	    0x49c745180000	               mov qword [r13 + 0x18], 0	       614	opncls.c	FUNCTION_17
0x400105a	        0x4883c418	                           add rsp, 0x18	       618	opncls.c	FUNCTION_17
0x400105e	              0x5b	                                 pop rbx	       618	opncls.c	FUNCTION_17
0x400105f	              0x5d	                                 pop rbp	       618	opncls.c	FUNCTION_17
0x4001060	            0x415c	                                 pop r12	       618	opncls.c	FUNCTION_17
0x4001062	            0x415d	                                 pop r13	       618	opncls.c	FUNCTION_17
0x4001064	            0x415e	                                 pop r14	       618	opncls.c	FUNCTION_17
0x4001066	            0x415f	                                 pop r15	       618	opncls.c	FUNCTION_17
0x4001068	              0xc3	                                     ret	       618	opncls.c	FUNCTION_17
0x4001069	     0xf1f80000000	                         nop dword [rax]	       618	opncls.c	FUNCTION_17
0x4001070	    0x8b0500000000	            mov eax, dword [0x04001076] 	        68	opncls.c	FUNCTION_1	IF_2
0x4001076	          0x83ea01	                              sub edx, 1	        69	opncls.c	FUNCTION_1	IF_2
0x4001079	    0x891500000000	            mov dword [0x0400107f], edx 	        69	opncls.c	FUNCTION_1	IF_2
0x400107f	          0x83e801	                              sub eax, 1	        68	opncls.c	FUNCTION_1	IF_2
0x4001082	    0x890500000000	            mov dword [0x04001088], eax 	        68	opncls.c	FUNCTION_1	IF_2
0x4001088	      0xe9c9feffff	                           jmp 0x4000f56	        68	opncls.c	FUNCTION_1	IF_2
0x400108d	           0xf1f00	                         nop dword [rax]	        68	opncls.c	FUNCTION_1	IF_2
0x4001090	      0xbe28000000	                           mov esi, 0x28	       949	opncls.c	FUNCTION_25	CALL_2
0x4001095	      0xe800000000	                          call 0x400109a	       949	opncls.c	FUNCTION_25	CALL_2
0x400109a	      0xe968ffffff	                           jmp 0x4001007	       949	opncls.c	FUNCTION_25	CALL_2
0x400109f	              0x90	                                     nop	       949	opncls.c	FUNCTION_25	CALL_2
0x40010a0	      0xbf06000000	                              mov edi, 6	       951	opncls.c	FUNCTION_25	CALL_3
0x40010a5	        0x48890424	                    mov qword [rsp], rax	       951	opncls.c	FUNCTION_25	CALL_3
0x40010a9	      0xe800000000	                          call 0x40010ae	       951	opncls.c	FUNCTION_25	CALL_3
0x40010ae	        0x488b0424	                    mov rax, qword [rsp]	       951	opncls.c	FUNCTION_25	CALL_3
0x40010b2	      0xe980ffffff	                           jmp 0x4001037	       951	opncls.c	FUNCTION_25	CALL_3
0x40010b7	    0x660f1f840000	                    nop word [rax + rax]	       951	opncls.c	FUNCTION_25	CALL_3
0x40010c0	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x40010c5	      0xe800000000	                          call 0x40010ca	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x40010ca	          0x4c89ef	                            mov rdi, r13	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x40010cd	      0xe800000000	                          call 0x40010d2	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x40010d2	            0x31c0	                            xor eax, eax	       586	opncls.c	FUNCTION_17	IF_1
0x40010d4	      0xe981ffffff	                           jmp 0x400105a	       586	opncls.c	FUNCTION_17	IF_1
0x40010d9	     0xf1f80000000	                         nop dword [rax]	       586	opncls.c	FUNCTION_17	IF_1
0x40010e0	          0x4c89ef	                            mov rdi, r13	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x40010e3	      0xe800000000	                          call 0x40010e8	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x40010e8	            0x31c0	                            xor eax, eax	       586	opncls.c	FUNCTION_17	IF_1
0x40010ea	      0xe96bffffff	                           jmp 0x400105a	       586	opncls.c	FUNCTION_17	IF_1
0x40010ef	              0x90	                                     nop	       586	opncls.c	FUNCTION_17	IF_1
0x40010f0	    0x4983bd080100	              cmp qword [r13 + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x40010f8	            0x7414	                            je 0x400110e	       123	opncls.c	FUNCTION_3	IF_1
0x40010fa	          0x4889ef	                            mov rdi, rbp	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x40010fd	      0xe800000000	                          call 0x4001102	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4001102	    0x498bbd080100	           mov rdi, qword [r13 + 0x108] 	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x4001109	      0xe800000000	                          call 0x400110e	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x400110e	        0x498b7d00	                    mov rdi, qword [r13]	       129	opncls.c	FUNCTION_3	IF_2
0x4001112	          0x4885ff	                           test rdi, rdi	       129	opncls.c	FUNCTION_3	IF_2
0x4001115	            0x7405	                            je 0x400111c	       129	opncls.c	FUNCTION_3	IF_2
0x4001117	      0xe800000000	                          call 0x400111c	       130	opncls.c	FUNCTION_3	CALL_3
0x400111c	    0x498bbdc80000	            mov rdi, qword [r13 + 0xc8] 	       131	opncls.c	FUNCTION_3	CALL_4
0x4001123	      0xe800000000	                          call 0x4001128	       131	opncls.c	FUNCTION_3	CALL_4
0x4001128	          0x4c89ef	                            mov rdi, r13	       132	opncls.c	FUNCTION_3	CALL_5
0x400112b	      0xe800000000	                          call 0x4001130	       132	opncls.c	FUNCTION_3	CALL_5
0x4001130	            0x31c0	                            xor eax, eax	       605	opncls.c	FUNCTION_17	IF_3
0x4001132	      0xe923ffffff	                           jmp 0x400105a	       605	opncls.c	FUNCTION_17	IF_3
bfd_release	WHILE,0:IF,0:DO,0:functions,0:CALL,1:ELSE,0:FOR,0:SWITCH,0	2
0x4001cb0	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	      1043	opncls.c	FUNCTION_29	CALL_1
0x4001cb7	      0xe900000000	                           jmp 0x4001cbc	      1043	opncls.c	FUNCTION_29	CALL_1
