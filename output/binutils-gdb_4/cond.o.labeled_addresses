cond_finish_check	WHILE,0:SWITCH,0:CALL,8:ELSE,1:FOR,0:IF,3:functions,0:DO,0	45
0x4001590	    0x488b05000000	            mov rax, qword [0x04001597] 	       550	cond.c	FUNCTION_12	IF_1
0x4001597	          0x4885c0	                           test rax, rax	       550	cond.c	FUNCTION_12	IF_1
0x400159a	            0x745c	                            je 0x40015f8	       550	cond.c	FUNCTION_12	IF_1
0x400159c	          0x397834	            cmp dword [rax + 0x34], edi 	       550	cond.c	FUNCTION_12	IF_1
0x400159f	            0x7c57	                            jl 0x40015f8	       550	cond.c	FUNCTION_12	IF_1
0x40015a1	            0x85ff	                           test edi, edi	       552	cond.c	FUNCTION_12	IF_1	IF_2
0x40015a3	              0x53	                                push rbx	       549	cond.c	FUNCTION_12
0x40015a4	      0xba05000000	                              mov edx, 5	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x40015a9	      0xbe00000000	                              mov esi, 0	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x40015ae	            0x7878	                            js 0x4001628	       552	cond.c	FUNCTION_12	IF_1	IF_2
0x40015b0	            0x31ff	                            xor edi, edi	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40015b2	      0xe800000000	                          call 0x40015b7	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40015b7	          0x4889c7	                            mov rdi, rax	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40015ba	            0x31c0	                            xor eax, eax	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40015bc	      0xe800000000	                          call 0x40015c1	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x40015c1	            0x31ff	                            xor edi, edi	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x40015c3	      0xba05000000	                              mov edx, 5	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x40015c8	      0xbe00000000	                              mov esi, 0	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x40015cd	      0xe800000000	                          call 0x40015d2	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x40015d2	    0x488b0d000000	            mov rcx, qword [0x040015d9] 	       558	cond.c	FUNCTION_12	IF_1
0x40015d9	          0x4889c2	                            mov rdx, rax	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40015dc	            0x31c0	                            xor eax, eax	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40015de	          0x8b7108	                mov esi, dword [rcx + 8]	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40015e1	          0x488b39	                    mov rdi, qword [rcx]	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40015e4	      0xe800000000	                          call 0x40015e9	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40015e9	    0x488b1d000000	            mov rbx, qword [0x040015f0] 	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40015f0	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40015f3	            0x85c0	                           test eax, eax	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40015f5	            0x7509	                           jne 0x4001600	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40015f7	              0x5b	                                 pop rbx	       565	cond.c	FUNCTION_12
0x40015f8	            0xf3c3	                                     ret	       565	cond.c	FUNCTION_12
0x40015fa	    0x660f1f440000	                    nop word [rax + rax]	       565	cond.c	FUNCTION_12
0x4001600	      0xba05000000	                              mov edx, 5	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x4001605	      0xbe00000000	                              mov esi, 0	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x400160a	            0x31ff	                            xor edi, edi	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x400160c	      0xe800000000	                          call 0x4001611	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x4001611	          0x8b7318	            mov esi, dword [rbx + 0x18] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4001614	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4001618	          0x4889c2	                            mov rdx, rax	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x400161b	              0x5b	                                 pop rbx	       565	cond.c	FUNCTION_12
0x400161c	            0x31c0	                            xor eax, eax	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x400161e	      0xe900000000	                           jmp 0x4001623	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4001623	       0xf1f440000	                   nop dword [rax + rax]	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x4001628	      0xbe00000000	                              mov esi, 0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x400162d	            0xeb81	                           jmp 0x40015b0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
s_if	WHILE,1:SWITCH,1:CALL,13:ELSE,1:FOR,0:IF,5:functions,0:DO,0	205
0x4000460	              0x55	                                push rbp	       128	cond.c	FUNCTION_2
0x4000461	              0x53	                                push rbx	       128	cond.c	FUNCTION_2
0x4000462	            0x31db	                            xor ebx, ebx	       128	cond.c	FUNCTION_2
0x4000464	            0x89fd	                            mov ebp, edi	       128	cond.c	FUNCTION_2
0x4000466	        0x4883ec78	                           sub rsp, 0x78	       128	cond.c	FUNCTION_2
0x400046a	    0x448b05000000	            mov r8d, dword [0x04000471] 	       135	cond.c	FUNCTION_2	IF_1
0x4000471	    0x64488b042528	                mov rax, qword fs:[0x28]	       128	cond.c	FUNCTION_2
0x400047a	      0x4889442468	             mov qword [rsp + 0x68], rax	       128	cond.c	FUNCTION_2
0x400047f	            0x31c0	                            xor eax, eax	       128	cond.c	FUNCTION_2
0x4000481	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       133	cond.c	FUNCTION_2
0x4000486	          0x4585c0	                           test r8d, r8d	       135	cond.c	FUNCTION_2	IF_1
0x4000489	     0xf85c1000000	                           jne 0x4000550	       135	cond.c	FUNCTION_2	IF_1
0x400048f	    0x488b05000000	            mov rax, qword [0x04000496] 	       139	cond.c	FUNCTION_2	CALL_2
0x4000496	          0x803820	                    cmp byte [rax], 0x20	       139	cond.c	FUNCTION_2	CALL_2
0x4000499	     0xf84ce000000	                            je 0x400056d	       139	cond.c	FUNCTION_2	CALL_2
0x400049f	    0x488b15000000	            mov rdx, qword [0x040004a6] 	       141	cond.c	FUNCTION_2	IF_2
0x40004a6	          0x4885d2	                           test rdx, rdx	       141	cond.c	FUNCTION_2	IF_2
0x40004a9	            0x7455	                            je 0x4000500	       141	cond.c	FUNCTION_2	IF_2
0x40004ab	          0x8b7a2c	            mov edi, dword [rdx + 0x2c] 	       141	cond.c	FUNCTION_2	IF_2
0x40004ae	            0x85ff	                           test edi, edi	       141	cond.c	FUNCTION_2	IF_2
0x40004b0	            0x744e	                            je 0x4000500	       141	cond.c	FUNCTION_2	IF_2
0x40004b2	    0x48c744242000	               mov qword [rsp + 0x20], 0	       143	cond.c	FUNCTION_2	IF_2
0x40004bb	           0xfb610	                   movzx edx, byte [rax]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004be	        0x4883c001	                              add rax, 1	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004c2	    0x80ba00000000	                       cmp byte [rdx], 0	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004c9	            0x751f	                           jne 0x40004ea	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004cb	       0xf1f440000	                   nop dword [rax + rax]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004d0	          0x4889c2	                            mov rdx, rax	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004d3	    0x488905000000	            mov qword [0x040004da], rax 	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004da	        0x4883c001	                              add rax, 1	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004de	           0xfb612	                   movzx edx, byte [rdx]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004e1	    0x80ba00000000	                       cmp byte [rdx], 0	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004e8	            0x74e6	                            je 0x40004d0	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004ea	          0x8d7deb	                   lea edi, [rbp - 0x15]	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004ed	          0x83ff05	                              cmp edi, 5	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004f0	            0x7746	                            ja 0x4000538	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004f2	    0xff24fd000000	                       jmp qword [rdi*8]	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004f9	     0xf1f80000000	                         nop dword [rax]	       154	cond.c	FUNCTION_2	SWITCH_1
0x4000500	      0x488d742410	                   lea rsi, [rsp + 0x10]	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x4000505	            0x31d2	                            xor edx, edx	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x4000507	            0x31ff	                            xor edi, edi	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x4000509	      0xe800000000	                          call 0x400050e	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x400050e	      0x807c242802	                cmp byte [rsp + 0x28], 2	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x4000513	            0x74d5	                            je 0x40004ea	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x4000515	            0x31ff	                            xor edi, edi	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000517	      0xba05000000	                              mov edx, 5	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x400051c	      0xbe00000000	                              mov esi, 0	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000521	      0xe800000000	                          call 0x4000526	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000526	          0x4889c7	                            mov rdi, rax	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000529	            0x31c0	                            xor eax, eax	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x400052b	      0xe800000000	                          call 0x4000530	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x4000530	          0x8d7deb	                   lea edi, [rbp - 0x15]	       154	cond.c	FUNCTION_2	SWITCH_1
0x4000533	          0x83ff05	                              cmp edi, 5	       154	cond.c	FUNCTION_2	SWITCH_1
0x4000536	            0x76ba	                           jbe 0x40004f2	       154	cond.c	FUNCTION_2	SWITCH_1
0x4000538	      0xba00000000	                              mov edx, 0	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x400053d	      0xbea3000000	                           mov esi, 0xa3	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000542	      0xbf00000000	                              mov edi, 0	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000547	      0xe800000000	                          call 0x400054c	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x400054c	         0xf1f4000	                         nop dword [rax]	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000550	      0x488d7c240f	                    lea rdi, [rsp + 0xf]	       136	cond.c	FUNCTION_2	CALL_1
0x4000555	      0xe800000000	                          call 0x400055a	       136	cond.c	FUNCTION_2	CALL_1
0x400055a	          0x4889c3	                            mov rbx, rax	       136	cond.c	FUNCTION_2	CALL_1
0x400055d	    0x488b05000000	            mov rax, qword [0x04000564] 	       139	cond.c	FUNCTION_2	CALL_2
0x4000564	          0x803820	                    cmp byte [rax], 0x20	       139	cond.c	FUNCTION_2	CALL_2
0x4000567	     0xf8532ffffff	                           jne 0x400049f	       139	cond.c	FUNCTION_2	CALL_2
0x400056d	        0x4883c001	                              add rax, 1	       139	cond.c	FUNCTION_2	CALL_2
0x4000571	    0x488905000000	            mov qword [0x04000578], rax 	       139	cond.c	FUNCTION_2	CALL_2
0x4000578	      0xe922ffffff	                           jmp 0x400049f	       139	cond.c	FUNCTION_2	CALL_2
0x400057d	           0xf1f00	                         nop dword [rax]	       139	cond.c	FUNCTION_2	CALL_2
0x4000580	            0x31ed	                            xor ebp, ebp	       156	cond.c	FUNCTION_2	SWITCH_1
0x4000582	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       156	cond.c	FUNCTION_2	SWITCH_1
0x4000588	        0x400f94c5	                                sete bpl	       156	cond.c	FUNCTION_2	SWITCH_1
0x400058c	         0xf1f4000	                         nop dword [rax]	       156	cond.c	FUNCTION_2	SWITCH_1
0x4000590	      0x488d542430	                   lea rdx, [rsp + 0x30]	        90	string3.h	FUNCTION_17	CALL_6
0x4000595	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_17	CALL_6
0x4000597	      0xb907000000	                              mov ecx, 7	        90	string3.h	FUNCTION_17	CALL_6
0x400059c	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_17	CALL_6
0x400059f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_17	CALL_6
0x40005a2	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       536	cond.c	FUNCTION_11	CALL_2
0x40005a7	      0xe800000000	                          call 0x40005ac	       536	cond.c	FUNCTION_11	CALL_2
0x40005ac	      0x4889442430	             mov qword [rsp + 0x30], rax	       536	cond.c	FUNCTION_11	CALL_2
0x40005b1	    0x488b05000000	            mov rax, qword [0x040005b8] 	       537	cond.c	FUNCTION_11
0x40005b8	          0x4885c0	                           test rax, rax	       538	cond.c	FUNCTION_11
0x40005bb	      0x4889442450	             mov qword [rsp + 0x50], rax	       537	cond.c	FUNCTION_11
0x40005c0	            0x740b	                            je 0x40005cd	       538	cond.c	FUNCTION_11
0x40005c2	          0x8b702c	            mov esi, dword [rax + 0x2c] 	       538	cond.c	FUNCTION_11
0x40005c5	            0x85f6	                           test esi, esi	       538	cond.c	FUNCTION_11
0x40005c7	     0xf85bb010000	                           jne 0x4000788	       538	cond.c	FUNCTION_11
0x40005cd	    0x8b0500000000	            mov eax, dword [0x040005d3] 	       539	cond.c	FUNCTION_11
0x40005d3	    0xc74424600000	               mov dword [rsp + 0x60], 0	       538	cond.c	FUNCTION_11
0x40005db	        0x89442464	             mov dword [rsp + 0x64], eax	       539	cond.c	FUNCTION_11
0x40005df	            0x89e8	                            mov eax, ebp	       170	cond.c	FUNCTION_2
0x40005e1	          0x83f001	                              xor eax, 1	       170	cond.c	FUNCTION_2
0x40005e4	    0x488b35000000	            mov rsi, qword [0x040005eb] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005eb	    0x488b15000000	            mov rdx, qword [0x040005f2] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005f2	        0x8944245c	             mov dword [rsp + 0x5c], eax	       170	cond.c	FUNCTION_2
0x40005f6	          0x4889f0	                            mov rax, rsi	       172	cond.c	FUNCTION_2	CALL_8
0x40005f9	          0x4829d0	                            sub rax, rdx	       172	cond.c	FUNCTION_2	CALL_8
0x40005fc	        0x4883f837	                           cmp rax, 0x37	       172	cond.c	FUNCTION_2	CALL_8
0x4000600	     0xf86a2010000	                           jbe 0x40007a8	       172	cond.c	FUNCTION_2	CALL_8
0x4000606	    0x488b05000000	            mov rax, qword [0x0400060d] 	       172	cond.c	FUNCTION_2	CALL_8
0x400060d	        0x4883c238	                           add rdx, 0x38	       172	cond.c	FUNCTION_2	CALL_8
0x4000611	          0x4839c2	                            cmp rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x4000614	     0xf84b6010000	                            je 0x40007d0	       172	cond.c	FUNCTION_2	CALL_8
0x400061a	    0x488b0d000000	            mov rcx, qword [0x04000621] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000621	          0x4989f0	                             mov r8, rsi	       172	cond.c	FUNCTION_2	CALL_8
0x4000624	          0x4801ca	                            add rdx, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x4000627	          0x48f7d1	                                 not rcx	       172	cond.c	FUNCTION_2	CALL_8
0x400062a	          0x4821ca	                            and rdx, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x400062d	    0x488b0d000000	            mov rcx, qword [0x04000634] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000634	          0x4889d7	                            mov rdi, rdx	       172	cond.c	FUNCTION_2	CALL_8
0x4000637	    0x488915000000	            mov qword [0x0400063e], rdx 	       172	cond.c	FUNCTION_2	CALL_8
0x400063e	          0x4829cf	                            sub rdi, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x4000641	          0x4929c8	                             sub r8, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x4000644	          0x4c39c7	                             cmp rdi, r8	       172	cond.c	FUNCTION_2	CALL_8
0x4000647	            0x760a	                           jbe 0x4000653	       172	cond.c	FUNCTION_2	CALL_8
0x4000649	    0x488935000000	            mov qword [0x04000650], rsi 	       172	cond.c	FUNCTION_2	CALL_8
0x4000650	          0x4889f2	                            mov rdx, rsi	       172	cond.c	FUNCTION_2	CALL_8
0x4000653	    0x488915000000	            mov qword [0x0400065a], rdx 	       172	cond.c	FUNCTION_2	CALL_8
0x400065a	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x400065f	    0x488905000000	            mov qword [0x04000666], rax 	       171	cond.c	FUNCTION_2
0x4000666	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000669	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x400066e	    0xf60500000000	           test byte [0x04000675], 0x20 	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x4000675	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000679	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x400067e	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000682	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000687	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400068b	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000690	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000694	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000699	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400069d	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_14	CALL_3
0x40006a2	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40006a6	            0x7428	                            je 0x40006d0	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x40006a8	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	       176	cond.c	FUNCTION_2	IF_4
0x40006ac	            0x85c9	                           test ecx, ecx	       176	cond.c	FUNCTION_2	IF_4
0x40006ae	            0x7420	                            je 0x40006d0	       176	cond.c	FUNCTION_2	IF_4
0x40006b0	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       177	cond.c	FUNCTION_2	IF_4
0x40006b5	          0x4885c0	                           test rax, rax	       177	cond.c	FUNCTION_2	IF_4
0x40006b8	            0x7407	                            je 0x40006c1	       177	cond.c	FUNCTION_2	IF_4
0x40006ba	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       178	cond.c	FUNCTION_2	IF_4
0x40006bd	            0x85d2	                           test edx, edx	       178	cond.c	FUNCTION_2	IF_4
0x40006bf	            0x750f	                           jne 0x40006d0	       178	cond.c	FUNCTION_2	IF_4
0x40006c1	      0xbf02000000	                              mov edi, 2	       179	cond.c	FUNCTION_2	CALL_11
0x40006c6	      0xe800000000	                          call 0x40006cb	       179	cond.c	FUNCTION_2	CALL_11
0x40006cb	       0xf1f440000	                   nop dword [rax + rax]	       179	cond.c	FUNCTION_2	CALL_11
0x40006d0	    0x8b0500000000	            mov eax, dword [0x040006d6] 	       181	cond.c	FUNCTION_2	IF_5
0x40006d6	            0x85c0	                           test eax, eax	       181	cond.c	FUNCTION_2	IF_5
0x40006d8	            0x740d	                            je 0x40006e7	       181	cond.c	FUNCTION_2	IF_5
0x40006da	       0xfbe74240f	            movsx esi, byte [rsp + 0xf] 	       182	cond.c	FUNCTION_2	CALL_12
0x40006df	          0x4889df	                            mov rdi, rbx	       182	cond.c	FUNCTION_2	CALL_12
0x40006e2	      0xe800000000	                          call 0x40006e7	       182	cond.c	FUNCTION_2	CALL_12
0x40006e7	      0xe800000000	                          call 0x40006ec	       184	cond.c	FUNCTION_2	CALL_13
0x40006ec	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       185	cond.c	FUNCTION_2
0x40006f1	    0x644833042528	                xor rax, qword fs:[0x28]	       185	cond.c	FUNCTION_2
0x40006fa	     0xf85dc000000	                           jne 0x40007dc	       185	cond.c	FUNCTION_2
0x4000700	        0x4883c478	                           add rsp, 0x78	       185	cond.c	FUNCTION_2
0x4000704	              0x5b	                                 pop rbx	       185	cond.c	FUNCTION_2
0x4000705	              0x5d	                                 pop rbp	       185	cond.c	FUNCTION_2
0x4000706	              0xc3	                                     ret	       185	cond.c	FUNCTION_2
0x4000707	    0x660f1f840000	                    nop word [rax + rax]	       185	cond.c	FUNCTION_2
0x4000710	            0x31ed	                            xor ebp, ebp	       157	cond.c	FUNCTION_2	SWITCH_1
0x4000712	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       157	cond.c	FUNCTION_2	SWITCH_1
0x4000718	        0x400f95c5	                               setne bpl	       157	cond.c	FUNCTION_2	SWITCH_1
0x400071c	      0xe96ffeffff	                           jmp 0x4000590	       157	cond.c	FUNCTION_2	SWITCH_1
0x4000721	     0xf1f80000000	                         nop dword [rax]	       157	cond.c	FUNCTION_2	SWITCH_1
0x4000728	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       158	cond.c	FUNCTION_2	SWITCH_1
0x400072d	        0x48c1e83f	                           shr rax, 0x3f	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000731	          0x4889c5	                            mov rbp, rax	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000734	      0xe957feffff	                           jmp 0x4000590	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000739	     0xf1f80000000	                         nop dword [rax]	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000740	            0x31ed	                            xor ebp, ebp	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000742	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000748	        0x400f9ec5	                               setle bpl	       159	cond.c	FUNCTION_2	SWITCH_1
0x400074c	      0xe93ffeffff	                           jmp 0x4000590	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000751	     0xf1f80000000	                         nop dword [rax]	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000758	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       160	cond.c	FUNCTION_2	SWITCH_1
0x400075d	          0x48f7d0	                                 not rax	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000760	        0x48c1e83f	                           shr rax, 0x3f	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000764	          0x4889c5	                            mov rbp, rax	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000767	      0xe924feffff	                           jmp 0x4000590	       160	cond.c	FUNCTION_2	SWITCH_1
0x400076c	         0xf1f4000	                         nop dword [rax]	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000770	            0x31ed	                            xor ebp, ebp	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000772	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000778	        0x400f9fc5	                                setg bpl	       161	cond.c	FUNCTION_2	SWITCH_1
0x400077c	      0xe90ffeffff	                           jmp 0x4000590	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000781	     0xf1f80000000	                         nop dword [rax]	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000788	    0x8b0500000000	            mov eax, dword [0x0400078e] 	       539	cond.c	FUNCTION_11
0x400078e	    0xc74424600100	               mov dword [rsp + 0x60], 1	       538	cond.c	FUNCTION_11
0x4000796	        0x89442464	             mov dword [rsp + 0x64], eax	       539	cond.c	FUNCTION_11
0x400079a	      0xb801000000	                              mov eax, 1	       170	cond.c	FUNCTION_2
0x400079f	      0xe940feffff	                           jmp 0x40005e4	       170	cond.c	FUNCTION_2
0x40007a4	         0xf1f4000	                         nop dword [rax]	       170	cond.c	FUNCTION_2
0x40007a8	      0xbe38000000	                           mov esi, 0x38	       172	cond.c	FUNCTION_2	CALL_8
0x40007ad	      0xbf00000000	                              mov edi, 0	       172	cond.c	FUNCTION_2	CALL_8
0x40007b2	      0xe800000000	                          call 0x40007b7	       172	cond.c	FUNCTION_2	CALL_8
0x40007b7	    0x488b15000000	            mov rdx, qword [0x040007be] 	       172	cond.c	FUNCTION_2	CALL_8
0x40007be	    0x488b35000000	            mov rsi, qword [0x040007c5] 	       172	cond.c	FUNCTION_2	CALL_8
0x40007c5	      0xe93cfeffff	                           jmp 0x4000606	       172	cond.c	FUNCTION_2	CALL_8
0x40007ca	    0x660f1f440000	                    nop word [rax + rax]	       172	cond.c	FUNCTION_2	CALL_8
0x40007d0	    0x800d00000000	                 or byte [0x040007d7], 2	       172	cond.c	FUNCTION_2	CALL_8
0x40007d7	      0xe93efeffff	                           jmp 0x400061a	       172	cond.c	FUNCTION_2	CALL_8
0x40007dc	      0xe800000000	                          call 0x40007e1	       185	cond.c	FUNCTION_2
s_ifdef	WHILE,0:SWITCH,0:CALL,18:ELSE,1:FOR,0:IF,3:functions,0:DO,0	170
0x4000170	            0x4154	                                push r12	        70	cond.c	FUNCTION_1
0x4000172	              0x55	                                push rbp	        70	cond.c	FUNCTION_1
0x4000173	              0x53	                                push rbx	        70	cond.c	FUNCTION_1
0x4000174	            0x89fb	                            mov ebx, edi	        70	cond.c	FUNCTION_1
0x4000176	        0x4883ec50	                           sub rsp, 0x50	        70	cond.c	FUNCTION_1
0x400017a	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	cond.c	FUNCTION_1
0x4000183	      0x4889442448	             mov qword [rsp + 0x48], rax	        70	cond.c	FUNCTION_1
0x4000188	            0x31c0	                            xor eax, eax	        70	cond.c	FUNCTION_1
0x400018a	    0x488b05000000	            mov rax, qword [0x04000191] 	        79	cond.c	FUNCTION_1	CALL_1
0x4000191	          0x803820	                    cmp byte [rax], 0x20	        79	cond.c	FUNCTION_1	CALL_1
0x4000194	     0xf8436020000	                            je 0x40003d0	        79	cond.c	FUNCTION_1	CALL_1
0x400019a	      0x4889442408	                mov qword [rsp + 8], rax	        80	cond.c	FUNCTION_1
0x400019f	           0xfb610	                   movzx edx, byte [rax]	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40001a2	    0xf68200000000	                      test byte [rdx], 2	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40001a9	            0x7565	                           jne 0x4000210	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40001ab	          0x80fa22	                            cmp dl, 0x22	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40001ae	            0x7460	                            je 0x4000210	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40001b0	            0x31ff	                            xor edi, edi	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40001b2	      0xba05000000	                              mov edx, 5	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40001b7	      0xbe00000000	                              mov esi, 0	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40001bc	      0xe800000000	                          call 0x40001c1	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40001c1	          0x4889c7	                            mov rdi, rax	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40001c4	            0x31c0	                            xor eax, eax	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40001c6	      0xe800000000	                          call 0x40001cb	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x40001cb	    0x488b05000000	            mov rax, qword [0x040001d2] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40001d2	    0x483905000000	            cmp qword [0x040001d9], rax 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40001d9	     0xf8421020000	                            je 0x4000400	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40001df	        0x488d5001	                      lea rdx, [rax + 1]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40001e3	    0x488915000000	            mov qword [0x040001ea], rdx 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40001ea	          0xc60000	                       mov byte [rax], 0	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x40001ed	      0xe800000000	                          call 0x40001f2	        86	cond.c	FUNCTION_1	IF_1	CALL_6
0x40001f2	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       124	cond.c	FUNCTION_1
0x40001f7	    0x644833042528	                xor rax, qword fs:[0x28]	       124	cond.c	FUNCTION_1
0x4000200	     0xf854e020000	                           jne 0x4000454	       124	cond.c	FUNCTION_1
0x4000206	        0x4883c450	                           add rsp, 0x50	       124	cond.c	FUNCTION_1
0x400020a	              0x5b	                                 pop rbx	       124	cond.c	FUNCTION_1
0x400020b	              0x5d	                                 pop rbp	       124	cond.c	FUNCTION_1
0x400020c	            0x415c	                                 pop r12	       124	cond.c	FUNCTION_1
0x400020e	              0xc3	                                     ret	       124	cond.c	FUNCTION_1
0x400020f	              0x90	                                     nop	       124	cond.c	FUNCTION_1
0x4000210	      0x488d7c2408	                      lea rdi, [rsp + 8]	        90	cond.c	FUNCTION_1	CALL_7
0x4000215	      0xe800000000	                          call 0x400021a	        90	cond.c	FUNCTION_1	CALL_7
0x400021a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        91	cond.c	FUNCTION_1	CALL_8
0x400021f	            0x89c5	                            mov ebp, eax	        90	cond.c	FUNCTION_1	CALL_7
0x4000221	      0xe800000000	                          call 0x4000226	        91	cond.c	FUNCTION_1	CALL_8
0x4000226	        0x400fbefd	                          movsx edi, bpl	        92	cond.c	FUNCTION_1	CALL_9
0x400022a	          0x4989c4	                            mov r12, rax	        91	cond.c	FUNCTION_1	CALL_8
0x400022d	      0xe800000000	                          call 0x4000232	        92	cond.c	FUNCTION_1	CALL_9
0x4000232	      0x488d542410	                   lea rdx, [rsp + 0x10]	        90	string3.h	FUNCTION_17	CALL_6
0x4000237	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_17	CALL_6
0x4000239	      0xb907000000	                              mov ecx, 7	        90	string3.h	FUNCTION_17	CALL_6
0x400023e	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_17	CALL_6
0x4000241	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_17	CALL_6
0x4000244	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       536	cond.c	FUNCTION_11	CALL_2
0x4000249	      0xe800000000	                          call 0x400024e	       536	cond.c	FUNCTION_11	CALL_2
0x400024e	      0x4889442410	             mov qword [rsp + 0x10], rax	       536	cond.c	FUNCTION_11	CALL_2
0x4000253	    0x488b05000000	            mov rax, qword [0x0400025a] 	       537	cond.c	FUNCTION_11
0x400025a	          0x4885c0	                           test rax, rax	       538	cond.c	FUNCTION_11
0x400025d	      0x4889442430	             mov qword [rsp + 0x30], rax	       537	cond.c	FUNCTION_11
0x4000262	            0x7407	                            je 0x400026b	       538	cond.c	FUNCTION_11
0x4000264	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	       538	cond.c	FUNCTION_11
0x4000267	            0x85c9	                           test ecx, ecx	       538	cond.c	FUNCTION_11
0x4000269	            0x7555	                           jne 0x40002c0	       538	cond.c	FUNCTION_11
0x400026b	    0x8b0500000000	            mov eax, dword [0x04000271] 	       539	cond.c	FUNCTION_11
0x4000271	          0x4d85e4	                           test r12, r12	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x4000274	    0xc74424400000	               mov dword [rsp + 0x40], 0	       538	cond.c	FUNCTION_11
0x400027c	        0x89442444	             mov dword [rsp + 0x44], eax	       539	cond.c	FUNCTION_11
0x4000280	     0xf846a010000	                            je 0x40003f0	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x4000286	          0x4c89e7	                            mov rdi, r12	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x4000289	      0xe800000000	                          call 0x400028e	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x400028e	            0x85c0	                           test eax, eax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x4000290	     0xf844a010000	                            je 0x40003e0	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x4000296	          0x4c89e7	                            mov rdi, r12	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x4000299	      0xe800000000	                          call 0x400029e	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x400029e	    0x483905000000	            cmp qword [0x040002a5], rax 	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002a5	           0xf95c0	                                setne al	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002a8	           0xfb6c0	                           movzx eax, al	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002ab	            0x39d8	                            cmp eax, ebx	       110	cond.c	FUNCTION_1	ELSE_1
0x40002ad	           0xf94c0	                                 sete al	       110	cond.c	FUNCTION_1	ELSE_1
0x40002b0	           0xfb6c0	                           movzx eax, al	       110	cond.c	FUNCTION_1	ELSE_1
0x40002b3	        0x8944243c	             mov dword [rsp + 0x3c], eax	       110	cond.c	FUNCTION_1	ELSE_1
0x40002b7	            0xeb21	                           jmp 0x40002da	       110	cond.c	FUNCTION_1	ELSE_1
0x40002b9	     0xf1f80000000	                         nop dword [rax]	       110	cond.c	FUNCTION_1	ELSE_1
0x40002c0	    0x8b0500000000	            mov eax, dword [0x040002c6] 	       539	cond.c	FUNCTION_11
0x40002c6	    0xc74424400100	               mov dword [rsp + 0x40], 1	       538	cond.c	FUNCTION_11
0x40002ce	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	        97	cond.c	FUNCTION_1	IF_2
0x40002d6	        0x89442444	             mov dword [rsp + 0x44], eax	       539	cond.c	FUNCTION_11
0x40002da	    0x488b35000000	            mov rsi, qword [0x040002e1] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002e1	    0x488b15000000	            mov rdx, qword [0x040002e8] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002e8	          0x4889f0	                            mov rax, rsi	       114	cond.c	FUNCTION_1	CALL_14
0x40002eb	          0x4829d0	                            sub rax, rdx	       114	cond.c	FUNCTION_1	CALL_14
0x40002ee	        0x4883f837	                           cmp rax, 0x37	       114	cond.c	FUNCTION_1	CALL_14
0x40002f2	     0xf8628010000	                           jbe 0x4000420	       114	cond.c	FUNCTION_1	CALL_14
0x40002f8	    0x488b05000000	            mov rax, qword [0x040002ff] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002ff	        0x4883c238	                           add rdx, 0x38	       114	cond.c	FUNCTION_1	CALL_14
0x4000303	          0x4839c2	                            cmp rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000306	     0xf843c010000	                            je 0x4000448	       114	cond.c	FUNCTION_1	CALL_14
0x400030c	    0x488b0d000000	            mov rcx, qword [0x04000313] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000313	          0x4889f3	                            mov rbx, rsi	       114	cond.c	FUNCTION_1	CALL_14
0x4000316	          0x4801ca	                            add rdx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x4000319	          0x48f7d1	                                 not rcx	       114	cond.c	FUNCTION_1	CALL_14
0x400031c	          0x4821ca	                            and rdx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x400031f	    0x488b0d000000	            mov rcx, qword [0x04000326] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000326	          0x4889d7	                            mov rdi, rdx	       114	cond.c	FUNCTION_1	CALL_14
0x4000329	    0x488915000000	            mov qword [0x04000330], rdx 	       114	cond.c	FUNCTION_1	CALL_14
0x4000330	          0x4829cf	                            sub rdi, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x4000333	          0x4829cb	                            sub rbx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x4000336	          0x4839df	                            cmp rdi, rbx	       114	cond.c	FUNCTION_1	CALL_14
0x4000339	            0x760a	                           jbe 0x4000345	       114	cond.c	FUNCTION_1	CALL_14
0x400033b	    0x488935000000	            mov qword [0x04000342], rsi 	       114	cond.c	FUNCTION_1	CALL_14
0x4000342	          0x4889f2	                            mov rdx, rsi	       114	cond.c	FUNCTION_1	CALL_14
0x4000345	    0x488915000000	            mov qword [0x0400034c], rdx 	       114	cond.c	FUNCTION_1	CALL_14
0x400034c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000351	    0x488905000000	            mov qword [0x04000358], rax 	       113	cond.c	FUNCTION_1
0x4000358	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400035b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000360	    0xf60500000000	           test byte [0x04000367], 0x20 	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x4000367	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400036b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000370	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000374	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000379	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400037d	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000382	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000386	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x400038b	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400038f	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000394	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000398	            0x7426	                            je 0x40003c0	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x400039a	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       118	cond.c	FUNCTION_1	IF_3
0x400039e	            0x85d2	                           test edx, edx	       118	cond.c	FUNCTION_1	IF_3
0x40003a0	            0x741e	                            je 0x40003c0	       118	cond.c	FUNCTION_1	IF_3
0x40003a2	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       119	cond.c	FUNCTION_1	IF_3
0x40003a7	          0x4885c0	                           test rax, rax	       119	cond.c	FUNCTION_1	IF_3
0x40003aa	            0x7407	                            je 0x40003b3	       119	cond.c	FUNCTION_1	IF_3
0x40003ac	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       120	cond.c	FUNCTION_1	IF_3
0x40003af	            0x85c0	                           test eax, eax	       120	cond.c	FUNCTION_1	IF_3
0x40003b1	            0x750d	                           jne 0x40003c0	       120	cond.c	FUNCTION_1	IF_3
0x40003b3	      0xbf02000000	                              mov edi, 2	       121	cond.c	FUNCTION_1	CALL_17
0x40003b8	      0xe800000000	                          call 0x40003bd	       121	cond.c	FUNCTION_1	CALL_17
0x40003bd	           0xf1f00	                         nop dword [rax]	       121	cond.c	FUNCTION_1	CALL_17
0x40003c0	      0xe800000000	                          call 0x40003c5	       123	cond.c	FUNCTION_1	CALL_18
0x40003c5	      0xe928feffff	                           jmp 0x40001f2	       123	cond.c	FUNCTION_1	CALL_18
0x40003ca	    0x660f1f440000	                    nop word [rax + rax]	       123	cond.c	FUNCTION_1	CALL_18
0x40003d0	        0x4883c001	                              add rax, 1	        79	cond.c	FUNCTION_1	CALL_1
0x40003d4	    0x488905000000	            mov qword [0x040003db], rax 	        79	cond.c	FUNCTION_1	CALL_1
0x40003db	      0xe9bafdffff	                           jmp 0x400019a	        79	cond.c	FUNCTION_1	CALL_1
0x40003e0	          0x4c89e7	                            mov rdi, r12	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003e3	      0xe800000000	                          call 0x40003e8	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003e8	            0x85c0	                           test eax, eax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003ea	     0xf85a6feffff	                           jne 0x4000296	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40003f0	            0x31c0	                            xor eax, eax	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003f2	      0xe9b4feffff	                           jmp 0x40002ab	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40003f7	    0x660f1f840000	                    nop word [rax + rax]	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x4000400	      0xbe01000000	                              mov esi, 1	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000405	      0xbf00000000	                              mov edi, 0	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400040a	      0xe800000000	                          call 0x400040f	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400040f	    0x488b05000000	            mov rax, qword [0x04000416] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000416	      0xe9c4fdffff	                           jmp 0x40001df	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400041b	       0xf1f440000	                   nop dword [rax + rax]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000420	      0xbe38000000	                           mov esi, 0x38	       114	cond.c	FUNCTION_1	CALL_14
0x4000425	      0xbf00000000	                              mov edi, 0	       114	cond.c	FUNCTION_1	CALL_14
0x400042a	      0xe800000000	                          call 0x400042f	       114	cond.c	FUNCTION_1	CALL_14
0x400042f	    0x488b15000000	            mov rdx, qword [0x04000436] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000436	    0x488b35000000	            mov rsi, qword [0x0400043d] 	       114	cond.c	FUNCTION_1	CALL_14
0x400043d	      0xe9b6feffff	                           jmp 0x40002f8	       114	cond.c	FUNCTION_1	CALL_14
0x4000442	    0x660f1f440000	                    nop word [rax + rax]	       114	cond.c	FUNCTION_1	CALL_14
0x4000448	    0x800d00000000	                 or byte [0x0400044f], 2	       114	cond.c	FUNCTION_1	CALL_14
0x400044f	      0xe9b8feffff	                           jmp 0x400030c	       114	cond.c	FUNCTION_1	CALL_14
0x4000454	      0xe800000000	                          call 0x4000459	       124	cond.c	FUNCTION_1
s_endif	WHILE,1:SWITCH,0:CALL,6:ELSE,1:FOR,0:IF,3:functions,0:DO,0	56
0x4000fb0	        0x4883ec08	                              sub rsp, 8	       382	cond.c	FUNCTION_7
0x4000fb4	    0x488b35000000	            mov rsi, qword [0x04000fbb] 	       385	cond.c	FUNCTION_7	IF_1
0x4000fbb	          0x4885f6	                           test rsi, rsi	       385	cond.c	FUNCTION_7	IF_1
0x4000fbe	     0xf84bc000000	                            je 0x4001080	       385	cond.c	FUNCTION_7	IF_1
0x4000fc4	    0xf60500000000	           test byte [0x04000fcb], 0x20 	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000fcb	            0x7428	                            je 0x4000ff5	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000fcd	          0x8b4e2c	            mov ecx, dword [rsi + 0x2c] 	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fd0	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fd4	            0x85c9	                           test ecx, ecx	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fd6	            0x7421	                            je 0x4000ff9	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fd8	          0x4885c0	                           test rax, rax	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fdb	            0x7407	                            je 0x4000fe4	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fdd	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fe0	            0x85d2	                           test edx, edx	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fe2	            0x7515	                           jne 0x4000ff9	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000fe4	      0xbf01000000	                              mov edi, 1	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000fe9	      0xe800000000	                          call 0x4000fee	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000fee	    0x488b35000000	            mov rsi, qword [0x04000ff5] 	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000ff5	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000ff9	    0x483935000000	            cmp qword [0x04001000], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001000	    0x488905000000	            mov qword [0x04001007], rax 	       398	cond.c	FUNCTION_7	ELSE_1
0x4001007	            0x7309	                           jae 0x4001012	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001009	    0x483935000000	            cmp qword [0x04001010], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001010	            0x7756	                            ja 0x4001068	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001012	      0xbf00000000	                              mov edi, 0	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001017	      0xe800000000	                          call 0x400101c	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x400101c	    0x8b0500000000	            mov eax, dword [0x04001022] 	       402	cond.c	FUNCTION_7	IF_3
0x4001022	            0x85c0	                           test eax, eax	       402	cond.c	FUNCTION_7	IF_3
0x4001024	            0x7434	                            je 0x400105a	       402	cond.c	FUNCTION_7	IF_3
0x4001026	    0x488b05000000	            mov rax, qword [0x0400102d] 	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x400102d	           0xfb610	                   movzx edx, byte [rax]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001030	    0x80ba00000000	                       cmp byte [rdx], 0	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001037	            0x7521	                           jne 0x400105a	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001039	        0x4883c001	                              add rax, 1	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x400103d	           0xf1f00	                         nop dword [rax]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001040	          0x4889c2	                            mov rdx, rax	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001043	    0x488905000000	            mov qword [0x0400104a], rax 	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x400104a	        0x4883c001	                              add rax, 1	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x400104e	           0xfb612	                   movzx edx, byte [rdx]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001051	    0x80ba00000000	                       cmp byte [rdx], 0	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4001058	            0x74e6	                            je 0x4001040	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x400105a	        0x4883c408	                              add rsp, 8	       409	cond.c	FUNCTION_7
0x400105e	      0xe900000000	                           jmp 0x4001063	       408	cond.c	FUNCTION_7	CALL_6
0x4001063	       0xf1f440000	                   nop dword [rax + rax]	       408	cond.c	FUNCTION_7	CALL_6
0x4001068	    0x488935000000	            mov qword [0x0400106f], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x400106f	    0x488935000000	            mov qword [0x04001076], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001076	            0xeba4	                           jmp 0x400101c	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001078	     0xf1f84000000	                   nop dword [rax + rax]	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4001080	            0x31ff	                            xor edi, edi	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4001082	      0xba05000000	                              mov edx, 5	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4001087	      0xbe00000000	                              mov esi, 0	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x400108c	      0xe800000000	                          call 0x4001091	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4001091	          0x4889c7	                            mov rdi, rax	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4001094	            0x31c0	                            xor eax, eax	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4001096	      0xe800000000	                          call 0x400109b	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x400109b	      0xe97cffffff	                           jmp 0x400101c	       387	cond.c	FUNCTION_7	IF_1	CALL_2
ignore_input	WHILE,0:SWITCH,0:CALL,6:ELSE,1:FOR,0:IF,4:functions,0:DO,0	64
0x40014b0	              0x53	                                push rbx	       499	cond.c	FUNCTION_10
0x40014b1	    0x488b1d000000	            mov rbx, qword [0x040014b8] 	       502	cond.c	FUNCTION_10
0x40014b8	        0x807bff2e	                cmp byte [rbx - 1], 0x2e	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40014bc	            0x7422	                            je 0x40014e0	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40014be	    0x488b05000000	            mov rax, qword [0x040014c5] 	       528	cond.c	FUNCTION_10
0x40014c5	          0x4885c0	                           test rax, rax	       528	cond.c	FUNCTION_10
0x40014c8	     0xf84b2000000	                            je 0x4001580	       528	cond.c	FUNCTION_10
0x40014ce	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40014d1	            0x85c0	                           test eax, eax	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40014d3	           0xf95c0	                                setne al	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40014d6	           0xfb6c0	                           movzx eax, al	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x40014d9	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x40014da	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
0x40014db	       0xf1f440000	                   nop dword [rax + rax]	       529	cond.c	FUNCTION_10
0x40014e0	           0xfb603	                   movzx eax, byte [rbx]	       517	cond.c	FUNCTION_10	IF_4
0x40014e3	          0x83e0df	                     and eax, 0xffffffdf	       517	cond.c	FUNCTION_10	IF_4
0x40014e6	            0x3c49	                            cmp al, 0x49	       516	cond.c	FUNCTION_10	IF_4
0x40014e8	            0x7546	                           jne 0x4001530	       516	cond.c	FUNCTION_10	IF_4
0x40014ea	      0xba02000000	                              mov edx, 2	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40014ef	      0xbe00000000	                              mov esi, 0	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40014f4	          0x4889df	                            mov rdi, rbx	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40014f7	      0xe800000000	                          call 0x40014fc	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40014fc	            0x85c0	                           test eax, eax	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x40014fe	            0x74d9	                            je 0x40014d9	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x4001500	      0xba05000000	                              mov edx, 5	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001505	      0xbe00000000	                              mov esi, 0	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x400150a	          0x4889df	                            mov rdi, rbx	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x400150d	      0xe800000000	                          call 0x4001512	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001512	            0x85c0	                           test eax, eax	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001514	            0x74c3	                            je 0x40014d9	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001516	      0xba06000000	                              mov edx, 6	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x400151b	      0xbe00000000	                              mov esi, 0	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x4001520	          0x4889df	                            mov rdi, rbx	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x4001523	      0xe800000000	                          call 0x4001528	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x4001528	            0x85c0	                           test eax, eax	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x400152a	            0x7592	                           jne 0x40014be	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x400152c	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x400152d	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
0x400152e	            0x6690	                                     nop	       529	cond.c	FUNCTION_10
0x4001530	            0x3c45	                            cmp al, 0x45	       521	cond.c	FUNCTION_10	IF_4
0x4001532	            0x758a	                           jne 0x40014be	       521	cond.c	FUNCTION_10	IF_4
0x4001534	      0xba04000000	                              mov edx, 4	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001539	      0xbe00000000	                              mov esi, 0	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x400153e	          0x4889df	                            mov rdi, rbx	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001541	      0xe800000000	                          call 0x4001546	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001546	            0x85c0	                           test eax, eax	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x4001548	            0x748f	                            je 0x40014d9	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x400154a	      0xba05000000	                              mov edx, 5	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x400154f	      0xbe00000000	                              mov esi, 0	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001554	          0x4889df	                            mov rdi, rbx	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001557	      0xe800000000	                          call 0x400155c	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x400155c	            0x85c0	                           test eax, eax	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x400155e	     0xf8475ffffff	                            je 0x40014d9	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x4001564	      0xba04000000	                              mov edx, 4	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001569	      0xbe00000000	                              mov esi, 0	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x400156e	          0x4889df	                            mov rdi, rbx	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001571	      0xe800000000	                          call 0x4001576	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001576	            0x85c0	                           test eax, eax	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x4001578	     0xf8540ffffff	                           jne 0x40014be	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x400157e	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x400157f	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
0x4001580	            0x31c0	                            xor eax, eax	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001582	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x4001583	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
get_mri_string	WHILE,3:SWITCH,0:CALL,2:ELSE,1:FOR,0:IF,3:functions,0:DO,0	80
0x4000040	    0x488b05000000	            mov rax, qword [0x04000047] 	       229	cond.c	FUNCTION_4	CALL_1
0x4000047	           0xfb610	                   movzx edx, byte [rax]	       229	cond.c	FUNCTION_4	CALL_1
0x400004a	          0x80fa20	                            cmp dl, 0x20	       229	cond.c	FUNCTION_4	CALL_1
0x400004d	     0xf84fd000000	                            je 0x4000150	       229	cond.c	FUNCTION_4	CALL_1
0x4000053	          0x80fa27	                            cmp dl, 0x27	       231	cond.c	FUNCTION_4	IF_1
0x4000056	            0x7478	                            je 0x40000d0	       231	cond.c	FUNCTION_4	IF_1
0x4000058	           0xfbeca	                           movsx ecx, dl	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400005b	            0x39cf	                            cmp edi, ecx	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400005d	            0x7469	                            je 0x40000c8	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400005f	           0xfb6ca	                           movzx ecx, dl	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000062	          0x4889c2	                            mov rdx, rax	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000065	    0x80b900000000	                       cmp byte [rcx], 0	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400006c	            0x740f	                            je 0x400007d	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400006e	            0xeb58	                           jmp 0x40000c8	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000070	        0x410fb6c8	                          movzx ecx, r8b	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000074	    0x80b900000000	                       cmp byte [rcx], 0	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400007b	            0x7514	                           jne 0x4000091	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400007d	        0x4883c201	                              add rdx, 1	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000081	    0x488915000000	            mov qword [0x04000088], rdx 	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000088	        0x440fbe02	                   movsx r8d, byte [rdx]	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400008c	          0x4139f8	                            cmp r8d, edi	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400008f	            0x75df	                           jne 0x4000070	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000091	          0x4839c2	                            cmp rdx, rax	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000094	            0x7629	                           jbe 0x40000bf	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000096	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400009a	          0x80f909	                               cmp cl, 9	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400009d	            0x7409	                            je 0x40000a8	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400009f	          0x80f920	                            cmp cl, 0x20	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000a2	            0x751b	                           jne 0x40000bf	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000a4	         0xf1f4000	                         nop dword [rax]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000a8	        0x4883ea01	                              sub rdx, 1	       254	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000ac	          0x4839c2	                            cmp rdx, rax	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000af	            0x7417	                            je 0x40000c8	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000b1	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000b5	          0x80f920	                            cmp cl, 0x20	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000b8	            0x74ee	                            je 0x40000a8	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000ba	          0x80f909	                               cmp cl, 9	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000bd	            0x74e9	                            je 0x40000a8	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000bf	            0x29c2	                            sub edx, eax	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x40000c1	            0x8916	                    mov dword [rsi], edx	       257	cond.c	FUNCTION_4
0x40000c3	              0xc3	                                     ret	       259	cond.c	FUNCTION_4
0x40000c4	         0xf1f4000	                         nop dword [rax]	       259	cond.c	FUNCTION_4
0x40000c8	            0x31d2	                            xor edx, edx	       259	cond.c	FUNCTION_4
0x40000ca	            0x8916	                    mov dword [rsi], edx	       257	cond.c	FUNCTION_4
0x40000cc	              0xc3	                                     ret	       259	cond.c	FUNCTION_4
0x40000cd	           0xf1f00	                         nop dword [rax]	       259	cond.c	FUNCTION_4
0x40000d0	        0x488d5001	                      lea rdx, [rax + 1]	       233	cond.c	FUNCTION_4	IF_1
0x40000d4	    0x488915000000	            mov qword [0x040000db], rdx 	       234	cond.c	FUNCTION_4	IF_1
0x40000db	          0x4889d1	                            mov rcx, rdx	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000de	            0x6690	                                     nop	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000e0	        0x440fb601	                   movzx r8d, byte [rcx]	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000e4	    0x4180b8000000	                        cmp byte [r8], 0	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000ec	          0x4c89c7	                             mov rdi, r8	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000ef	            0x753f	                           jne 0x4000130	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000f1	        0x488d7901	                      lea rdi, [rcx + 1]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000f5	        0x4883c201	                              add rdx, 1	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000f9	    0x48893d000000	            mov qword [0x04000100], rdi 	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000100	           0xfb609	                   movzx ecx, byte [rcx]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000103	          0x80f927	                            cmp cl, 0x27	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000106	          0x884aff	                  mov byte [rdx - 1], cl	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000109	    0x488b0d000000	            mov rcx, qword [0x04000110] 	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000110	            0x75ce	                           jne 0x40000e0	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000112	           0xfb639	                   movzx edi, byte [rcx]	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000115	        0x4080ff27	                           cmp dil, 0x27	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000119	            0x7515	                           jne 0x4000130	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x400011b	        0x4883c101	                              add rcx, 1	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x400011f	    0x48890d000000	            mov qword [0x04000126], rcx 	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000126	            0xebb8	                           jmp 0x40000e0	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000128	     0xf1f84000000	                   nop dword [rax + rax]	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000130	        0x4080ff20	                           cmp dil, 0x20	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000134	            0x7589	                           jne 0x40000bf	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000136	        0x4883c101	                              add rcx, 1	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x400013a	    0x48890d000000	            mov qword [0x04000141], rcx 	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000141	      0xe979ffffff	                           jmp 0x40000bf	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000146	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x4000150	        0x488d4801	                      lea rcx, [rax + 1]	       229	cond.c	FUNCTION_4	CALL_1
0x4000154	    0x48890d000000	            mov qword [0x0400015b], rcx 	       229	cond.c	FUNCTION_4	CALL_1
0x400015b	         0xfb65001	               movzx edx, byte [rax + 1]	       229	cond.c	FUNCTION_4	CALL_1
0x400015f	          0x4889c8	                            mov rax, rcx	       229	cond.c	FUNCTION_4	CALL_1
0x4000162	      0xe9ecfeffff	                           jmp 0x4000053	       229	cond.c	FUNCTION_4	CALL_1
s_ifc	WHILE,0:SWITCH,0:CALL,13:ELSE,1:FOR,0:IF,4:functions,0:DO,0	161
0x4000a00	            0x4155	                                push r13	       265	cond.c	FUNCTION_5
0x4000a02	            0x4154	                                push r12	       265	cond.c	FUNCTION_5
0x4000a04	          0x4189fc	                           mov r12d, edi	       265	cond.c	FUNCTION_5
0x4000a07	              0x55	                                push rbp	       265	cond.c	FUNCTION_5
0x4000a08	              0x53	                                push rbx	       265	cond.c	FUNCTION_5
0x4000a09	            0x31db	                            xor ebx, ebx	       265	cond.c	FUNCTION_5
0x4000a0b	        0x4883ec58	                           sub rsp, 0x58	       265	cond.c	FUNCTION_5
0x4000a0f	    0x8b3d00000000	            mov edi, dword [0x04000a15] 	       273	cond.c	FUNCTION_5	IF_1
0x4000a15	    0x64488b042528	                mov rax, qword fs:[0x28]	       265	cond.c	FUNCTION_5
0x4000a1e	      0x4889442448	             mov qword [rsp + 0x48], rax	       265	cond.c	FUNCTION_5
0x4000a23	            0x31c0	                            xor eax, eax	       265	cond.c	FUNCTION_5
0x4000a25	      0xc644240700	                   mov byte [rsp + 7], 0	       267	cond.c	FUNCTION_5
0x4000a2a	            0x85ff	                           test edi, edi	       273	cond.c	FUNCTION_5	IF_1
0x4000a2c	     0xf8536020000	                           jne 0x4000c68	       273	cond.c	FUNCTION_5	IF_1
0x4000a32	      0x488d742408	                      lea rsi, [rsp + 8]	       276	cond.c	FUNCTION_5	CALL_2
0x4000a37	      0xbf2c000000	                           mov edi, 0x2c	       276	cond.c	FUNCTION_5	CALL_2
0x4000a3c	      0xe8fff5ffff	                 call sym.get_mri_string	       276	cond.c	FUNCTION_5	CALL_2
0x4000a41	          0x4989c5	                            mov r13, rax	       276	cond.c	FUNCTION_5	CALL_2
0x4000a44	    0x488b05000000	            mov rax, qword [0x04000a4b] 	       278	cond.c	FUNCTION_5	IF_2
0x4000a4b	          0x80382c	                    cmp byte [rax], 0x2c	       278	cond.c	FUNCTION_5	IF_2
0x4000a4e	     0xf84bc010000	                            je 0x4000c10	       278	cond.c	FUNCTION_5	IF_2
0x4000a54	            0x31ff	                            xor edi, edi	       279	cond.c	FUNCTION_5	CALL_4
0x4000a56	      0xba05000000	                              mov edx, 5	       279	cond.c	FUNCTION_5	CALL_4
0x4000a5b	      0xbe00000000	                              mov esi, 0	       279	cond.c	FUNCTION_5	CALL_4
0x4000a60	      0xe800000000	                          call 0x4000a65	       279	cond.c	FUNCTION_5	CALL_4
0x4000a65	          0x4889c7	                            mov rdi, rax	       279	cond.c	FUNCTION_5	CALL_4
0x4000a68	            0x31c0	                            xor eax, eax	       279	cond.c	FUNCTION_5	CALL_4
0x4000a6a	      0xe800000000	                          call 0x4000a6f	       279	cond.c	FUNCTION_5	CALL_4
0x4000a6f	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       283	cond.c	FUNCTION_5	CALL_5
0x4000a74	      0xbf3b000000	                           mov edi, 0x3b	       283	cond.c	FUNCTION_5	CALL_5
0x4000a79	            0x31ed	                            xor ebp, ebp	       285	cond.c	FUNCTION_5	CALL_6
0x4000a7b	      0xe8c0f5ffff	                 call sym.get_mri_string	       283	cond.c	FUNCTION_5	CALL_5
0x4000a80	      0x4863542408	            movsxd rdx, dword [rsp + 8] 	       285	cond.c	FUNCTION_5	CALL_6
0x4000a85	        0x3b54240c	              cmp edx, dword [rsp + 0xc]	       285	cond.c	FUNCTION_5	CALL_6
0x4000a89	     0xf84f1010000	                            je 0x4000c80	       285	cond.c	FUNCTION_5	CALL_6
0x4000a8f	      0x488d542410	                   lea rdx, [rsp + 0x10]	        90	string3.h	FUNCTION_17	CALL_6
0x4000a94	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_17	CALL_6
0x4000a96	      0xb907000000	                              mov ecx, 7	        90	string3.h	FUNCTION_17	CALL_6
0x4000a9b	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_17	CALL_6
0x4000a9e	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_17	CALL_6
0x4000aa1	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       536	cond.c	FUNCTION_11	CALL_2
0x4000aa6	      0xe800000000	                          call 0x4000aab	       536	cond.c	FUNCTION_11	CALL_2
0x4000aab	      0x4889442410	             mov qword [rsp + 0x10], rax	       536	cond.c	FUNCTION_11	CALL_2
0x4000ab0	    0x488b05000000	            mov rax, qword [0x04000ab7] 	       537	cond.c	FUNCTION_11
0x4000ab7	          0x4885c0	                           test rax, rax	       538	cond.c	FUNCTION_11
0x4000aba	      0x4889442430	             mov qword [rsp + 0x30], rax	       537	cond.c	FUNCTION_11
0x4000abf	            0x740b	                            je 0x4000acc	       538	cond.c	FUNCTION_11
0x4000ac1	          0x8b702c	            mov esi, dword [rax + 0x2c] 	       538	cond.c	FUNCTION_11
0x4000ac4	            0x85f6	                           test esi, esi	       538	cond.c	FUNCTION_11
0x4000ac6	     0xf8554010000	                           jne 0x4000c20	       538	cond.c	FUNCTION_11
0x4000acc	    0x8b0500000000	            mov eax, dword [0x04000ad2] 	       539	cond.c	FUNCTION_11
0x4000ad2	    0xc74424400000	               mov dword [rsp + 0x40], 0	       538	cond.c	FUNCTION_11
0x4000ada	        0x89442444	             mov dword [rsp + 0x44], eax	       539	cond.c	FUNCTION_11
0x4000ade	            0x31c0	                            xor eax, eax	       288	cond.c	FUNCTION_5
0x4000ae0	          0x4439e5	                           cmp ebp, r12d	       288	cond.c	FUNCTION_5
0x4000ae3	           0xf94c0	                                 sete al	       288	cond.c	FUNCTION_5
0x4000ae6	    0x488b35000000	            mov rsi, qword [0x04000aed] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000aed	    0x488b15000000	            mov rdx, qword [0x04000af4] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000af4	        0x8944243c	             mov dword [rsp + 0x3c], eax	       288	cond.c	FUNCTION_5
0x4000af8	          0x4889f0	                            mov rax, rsi	       290	cond.c	FUNCTION_5	CALL_8
0x4000afb	          0x4829d0	                            sub rax, rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000afe	        0x4883f837	                           cmp rax, 0x37	       290	cond.c	FUNCTION_5	CALL_8
0x4000b02	     0xf8638010000	                           jbe 0x4000c40	       290	cond.c	FUNCTION_5	CALL_8
0x4000b08	    0x488b05000000	            mov rax, qword [0x04000b0f] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000b0f	        0x4883c238	                           add rdx, 0x38	       290	cond.c	FUNCTION_5	CALL_8
0x4000b13	          0x4839c2	                            cmp rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000b16	     0xf8484010000	                            je 0x4000ca0	       290	cond.c	FUNCTION_5	CALL_8
0x4000b1c	    0x488b0d000000	            mov rcx, qword [0x04000b23] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000b23	          0x4989f0	                             mov r8, rsi	       290	cond.c	FUNCTION_5	CALL_8
0x4000b26	          0x4801ca	                            add rdx, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000b29	          0x48f7d1	                                 not rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000b2c	          0x4821ca	                            and rdx, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000b2f	    0x488b0d000000	            mov rcx, qword [0x04000b36] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000b36	          0x4889d7	                            mov rdi, rdx	       290	cond.c	FUNCTION_5	CALL_8
0x4000b39	    0x488915000000	            mov qword [0x04000b40], rdx 	       290	cond.c	FUNCTION_5	CALL_8
0x4000b40	          0x4829cf	                            sub rdi, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000b43	          0x4929c8	                             sub r8, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000b46	          0x4c39c7	                             cmp rdi, r8	       290	cond.c	FUNCTION_5	CALL_8
0x4000b49	            0x760a	                           jbe 0x4000b55	       290	cond.c	FUNCTION_5	CALL_8
0x4000b4b	    0x488935000000	            mov qword [0x04000b52], rsi 	       290	cond.c	FUNCTION_5	CALL_8
0x4000b52	          0x4889f2	                            mov rdx, rsi	       290	cond.c	FUNCTION_5	CALL_8
0x4000b55	    0x488915000000	            mov qword [0x04000b5c], rdx 	       290	cond.c	FUNCTION_5	CALL_8
0x4000b5c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000b61	    0x488905000000	            mov qword [0x04000b68], rax 	       289	cond.c	FUNCTION_5
0x4000b68	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000b6b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000b70	    0xf60500000000	           test byte [0x04000b77], 0x20 	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x4000b77	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000b7b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000b80	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000b84	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000b89	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000b8d	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000b92	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000b96	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000b9b	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000b9f	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000ba4	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000ba8	            0x7408	                            je 0x4000bb2	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x4000baa	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       294	cond.c	FUNCTION_5	IF_3
0x4000bae	            0x85c9	                           test ecx, ecx	       294	cond.c	FUNCTION_5	IF_3
0x4000bb0	            0x753e	                           jne 0x4000bf0	       294	cond.c	FUNCTION_5	IF_3
0x4000bb2	    0x8b0500000000	            mov eax, dword [0x04000bb8] 	       299	cond.c	FUNCTION_5	IF_4
0x4000bb8	            0x85c0	                           test eax, eax	       299	cond.c	FUNCTION_5	IF_4
0x4000bba	            0x740d	                            je 0x4000bc9	       299	cond.c	FUNCTION_5	IF_4
0x4000bbc	       0xfbe742407	               movsx esi, byte [rsp + 7]	       300	cond.c	FUNCTION_5	CALL_12
0x4000bc1	          0x4889df	                            mov rdi, rbx	       300	cond.c	FUNCTION_5	CALL_12
0x4000bc4	      0xe800000000	                          call 0x4000bc9	       300	cond.c	FUNCTION_5	CALL_12
0x4000bc9	      0xe800000000	                          call 0x4000bce	       302	cond.c	FUNCTION_5	CALL_13
0x4000bce	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       303	cond.c	FUNCTION_5
0x4000bd3	    0x644833042528	                xor rax, qword fs:[0x28]	       303	cond.c	FUNCTION_5
0x4000bdc	     0xf85ca000000	                           jne 0x4000cac	       303	cond.c	FUNCTION_5
0x4000be2	        0x4883c458	                           add rsp, 0x58	       303	cond.c	FUNCTION_5
0x4000be6	              0x5b	                                 pop rbx	       303	cond.c	FUNCTION_5
0x4000be7	              0x5d	                                 pop rbp	       303	cond.c	FUNCTION_5
0x4000be8	            0x415c	                                 pop r12	       303	cond.c	FUNCTION_5
0x4000bea	            0x415d	                                 pop r13	       303	cond.c	FUNCTION_5
0x4000bec	              0xc3	                                     ret	       303	cond.c	FUNCTION_5
0x4000bed	           0xf1f00	                         nop dword [rax]	       303	cond.c	FUNCTION_5
0x4000bf0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       295	cond.c	FUNCTION_5	IF_3
0x4000bf5	          0x4885c0	                           test rax, rax	       295	cond.c	FUNCTION_5	IF_3
0x4000bf8	            0x7407	                            je 0x4000c01	       295	cond.c	FUNCTION_5	IF_3
0x4000bfa	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       296	cond.c	FUNCTION_5	IF_3
0x4000bfd	            0x85d2	                           test edx, edx	       296	cond.c	FUNCTION_5	IF_3
0x4000bff	            0x75b1	                           jne 0x4000bb2	       296	cond.c	FUNCTION_5	IF_3
0x4000c01	      0xbf02000000	                              mov edi, 2	       297	cond.c	FUNCTION_5	CALL_11
0x4000c06	      0xe800000000	                          call 0x4000c0b	       297	cond.c	FUNCTION_5	CALL_11
0x4000c0b	            0xeba5	                           jmp 0x4000bb2	       297	cond.c	FUNCTION_5	CALL_11
0x4000c0d	           0xf1f00	                         nop dword [rax]	       297	cond.c	FUNCTION_5	CALL_11
0x4000c10	        0x4883c001	                              add rax, 1	       281	cond.c	FUNCTION_5	ELSE_1
0x4000c14	    0x488905000000	            mov qword [0x04000c1b], rax 	       281	cond.c	FUNCTION_5	ELSE_1
0x4000c1b	      0xe94ffeffff	                           jmp 0x4000a6f	       281	cond.c	FUNCTION_5	ELSE_1
0x4000c20	    0x8b0500000000	            mov eax, dword [0x04000c26] 	       539	cond.c	FUNCTION_11
0x4000c26	    0xc74424400100	               mov dword [rsp + 0x40], 1	       538	cond.c	FUNCTION_11
0x4000c2e	        0x89442444	             mov dword [rsp + 0x44], eax	       539	cond.c	FUNCTION_11
0x4000c32	      0xb801000000	                              mov eax, 1	       288	cond.c	FUNCTION_5
0x4000c37	      0xe9aafeffff	                           jmp 0x4000ae6	       288	cond.c	FUNCTION_5
0x4000c3c	         0xf1f4000	                         nop dword [rax]	       288	cond.c	FUNCTION_5
0x4000c40	      0xbe38000000	                           mov esi, 0x38	       290	cond.c	FUNCTION_5	CALL_8
0x4000c45	      0xbf00000000	                              mov edi, 0	       290	cond.c	FUNCTION_5	CALL_8
0x4000c4a	      0xe800000000	                          call 0x4000c4f	       290	cond.c	FUNCTION_5	CALL_8
0x4000c4f	    0x488b15000000	            mov rdx, qword [0x04000c56] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000c56	    0x488b35000000	            mov rsi, qword [0x04000c5d] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000c5d	      0xe9a6feffff	                           jmp 0x4000b08	       290	cond.c	FUNCTION_5	CALL_8
0x4000c62	    0x660f1f440000	                    nop word [rax + rax]	       290	cond.c	FUNCTION_5	CALL_8
0x4000c68	      0x488d7c2407	                      lea rdi, [rsp + 7]	       274	cond.c	FUNCTION_5	CALL_1
0x4000c6d	      0xe800000000	                          call 0x4000c72	       274	cond.c	FUNCTION_5	CALL_1
0x4000c72	          0x4889c3	                            mov rbx, rax	       274	cond.c	FUNCTION_5	CALL_1
0x4000c75	      0xe9b8fdffff	                           jmp 0x4000a32	       274	cond.c	FUNCTION_5	CALL_1
0x4000c7a	    0x660f1f440000	                    nop word [rax + rax]	       274	cond.c	FUNCTION_5	CALL_1
0x4000c80	          0x4889c6	                            mov rsi, rax	       285	cond.c	FUNCTION_5	CALL_6
0x4000c83	          0x4c89ef	                            mov rdi, r13	       285	cond.c	FUNCTION_5	CALL_6
0x4000c86	            0x31ed	                            xor ebp, ebp	       285	cond.c	FUNCTION_5	CALL_6
0x4000c88	      0xe800000000	                          call 0x4000c8d	       285	cond.c	FUNCTION_5	CALL_6
0x4000c8d	            0x85c0	                           test eax, eax	       285	cond.c	FUNCTION_5	CALL_6
0x4000c8f	        0x400f94c5	                                sete bpl	       285	cond.c	FUNCTION_5	CALL_6
0x4000c93	      0xe9f7fdffff	                           jmp 0x4000a8f	       285	cond.c	FUNCTION_5	CALL_6
0x4000c98	     0xf1f84000000	                   nop dword [rax + rax]	       285	cond.c	FUNCTION_5	CALL_6
0x4000ca0	    0x800d00000000	                 or byte [0x04000ca7], 2	       290	cond.c	FUNCTION_5	CALL_8
0x4000ca7	      0xe970feffff	                           jmp 0x4000b1c	       290	cond.c	FUNCTION_5	CALL_8
0x4000cac	      0xe800000000	                          call 0x4000cb1	       303	cond.c	FUNCTION_5
s_ifb	WHILE,0:SWITCH,0:CALL,7:ELSE,1:FOR,0:IF,2:functions,0:DO,0	115
0x40007f0	              0x53	                                push rbx	       192	cond.c	FUNCTION_3
0x40007f1	      0xb907000000	                              mov ecx, 7	        90	string3.h	FUNCTION_17	CALL_6
0x40007f6	            0x89fb	                            mov ebx, edi	       192	cond.c	FUNCTION_3
0x40007f8	        0x4883ec40	                           sub rsp, 0x40	       192	cond.c	FUNCTION_3
0x40007fc	    0x64488b042528	                mov rax, qword fs:[0x28]	       192	cond.c	FUNCTION_3
0x4000805	      0x4889442438	             mov qword [rsp + 0x38], rax	       192	cond.c	FUNCTION_3
0x400080a	            0x31c0	                            xor eax, eax	       192	cond.c	FUNCTION_3
0x400080c	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_17	CALL_6
0x400080f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_17	CALL_6
0x4000812	      0x488d7c2408	                      lea rdi, [rsp + 8]	       536	cond.c	FUNCTION_11	CALL_2
0x4000817	      0xe800000000	                          call 0x400081c	       536	cond.c	FUNCTION_11	CALL_2
0x400081c	        0x48890424	                    mov qword [rsp], rax	       536	cond.c	FUNCTION_11	CALL_2
0x4000820	    0x488b05000000	            mov rax, qword [0x04000827] 	       537	cond.c	FUNCTION_11
0x4000827	          0x4885c0	                           test rax, rax	       538	cond.c	FUNCTION_11
0x400082a	      0x4889442420	             mov qword [rsp + 0x20], rax	       537	cond.c	FUNCTION_11
0x400082f	            0x740b	                            je 0x400083c	       538	cond.c	FUNCTION_11
0x4000831	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	       538	cond.c	FUNCTION_11
0x4000834	            0x85c9	                           test ecx, ecx	       538	cond.c	FUNCTION_11
0x4000836	     0xf8544010000	                           jne 0x4000980	       538	cond.c	FUNCTION_11
0x400083c	    0x8b0500000000	            mov eax, dword [0x04000842] 	       539	cond.c	FUNCTION_11
0x4000842	    0x488b15000000	            mov rdx, qword [0x04000849] 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000849	    0xc74424300000	               mov dword [rsp + 0x30], 0	       538	cond.c	FUNCTION_11
0x4000851	        0x89442434	             mov dword [rsp + 0x34], eax	       539	cond.c	FUNCTION_11
0x4000855	           0xfb602	                   movzx eax, byte [rdx]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000858	            0x3c20	                            cmp al, 0x20	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x400085a	     0xf8468010000	                            je 0x40009c8	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x4000860	    0x80b800000000	                       cmp byte [rax], 0	       205	cond.c	FUNCTION_3	ELSE_1
0x4000867	           0xf94c0	                                 sete al	       205	cond.c	FUNCTION_3	ELSE_1
0x400086a	           0xfb6c0	                           movzx eax, al	       205	cond.c	FUNCTION_3	ELSE_1
0x400086d	            0x39d8	                            cmp eax, ebx	       205	cond.c	FUNCTION_3	ELSE_1
0x400086f	           0xf94c0	                                 sete al	       205	cond.c	FUNCTION_3	ELSE_1
0x4000872	           0xfb6c0	                           movzx eax, al	       205	cond.c	FUNCTION_3	ELSE_1
0x4000875	        0x8944242c	             mov dword [rsp + 0x2c], eax	       205	cond.c	FUNCTION_3	ELSE_1
0x4000879	    0x488b35000000	            mov rsi, qword [0x04000880] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000880	    0x488b15000000	            mov rdx, qword [0x04000887] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000887	          0x4889f0	                            mov rax, rsi	       209	cond.c	FUNCTION_3	CALL_3
0x400088a	          0x4829d0	                            sub rax, rdx	       209	cond.c	FUNCTION_3	CALL_3
0x400088d	        0x4883f837	                           cmp rax, 0x37	       209	cond.c	FUNCTION_3	CALL_3
0x4000891	     0xf8609010000	                           jbe 0x40009a0	       209	cond.c	FUNCTION_3	CALL_3
0x4000897	    0x488b05000000	            mov rax, qword [0x0400089e] 	       209	cond.c	FUNCTION_3	CALL_3
0x400089e	        0x4883c238	                           add rdx, 0x38	       209	cond.c	FUNCTION_3	CALL_3
0x40008a2	          0x4839c2	                            cmp rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x40008a5	     0xf8435010000	                            je 0x40009e0	       209	cond.c	FUNCTION_3	CALL_3
0x40008ab	    0x488b0d000000	            mov rcx, qword [0x040008b2] 	       209	cond.c	FUNCTION_3	CALL_3
0x40008b2	          0x4889f3	                            mov rbx, rsi	       209	cond.c	FUNCTION_3	CALL_3
0x40008b5	          0x4801ca	                            add rdx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x40008b8	          0x48f7d1	                                 not rcx	       209	cond.c	FUNCTION_3	CALL_3
0x40008bb	          0x4821ca	                            and rdx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x40008be	    0x488b0d000000	            mov rcx, qword [0x040008c5] 	       209	cond.c	FUNCTION_3	CALL_3
0x40008c5	          0x4889d7	                            mov rdi, rdx	       209	cond.c	FUNCTION_3	CALL_3
0x40008c8	    0x488915000000	            mov qword [0x040008cf], rdx 	       209	cond.c	FUNCTION_3	CALL_3
0x40008cf	          0x4829cf	                            sub rdi, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x40008d2	          0x4829cb	                            sub rbx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x40008d5	          0x4839df	                            cmp rdi, rbx	       209	cond.c	FUNCTION_3	CALL_3
0x40008d8	            0x760a	                           jbe 0x40008e4	       209	cond.c	FUNCTION_3	CALL_3
0x40008da	    0x488935000000	            mov qword [0x040008e1], rsi 	       209	cond.c	FUNCTION_3	CALL_3
0x40008e1	          0x4889f2	                            mov rdx, rsi	       209	cond.c	FUNCTION_3	CALL_3
0x40008e4	    0x488915000000	            mov qword [0x040008eb], rdx 	       209	cond.c	FUNCTION_3	CALL_3
0x40008eb	        0x488b1424	                    mov rdx, qword [rsp]	        53	string3.h	FUNCTION_14	CALL_3
0x40008ef	    0x488905000000	            mov qword [0x040008f6], rax 	       208	cond.c	FUNCTION_3
0x40008f6	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40008f9	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_14	CALL_3
0x40008fe	    0xf60500000000	           test byte [0x04000905], 0x20 	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x4000905	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000909	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x400090e	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000912	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000917	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400091b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000920	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000924	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000929	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400092d	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000932	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000936	            0x7423	                            je 0x400095b	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x4000938	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	       213	cond.c	FUNCTION_3	IF_2
0x400093c	            0x85d2	                           test edx, edx	       213	cond.c	FUNCTION_3	IF_2
0x400093e	            0x741b	                            je 0x400095b	       213	cond.c	FUNCTION_3	IF_2
0x4000940	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       214	cond.c	FUNCTION_3	IF_2
0x4000945	          0x4885c0	                           test rax, rax	       214	cond.c	FUNCTION_3	IF_2
0x4000948	            0x7407	                            je 0x4000951	       214	cond.c	FUNCTION_3	IF_2
0x400094a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       215	cond.c	FUNCTION_3	IF_2
0x400094d	            0x85c0	                           test eax, eax	       215	cond.c	FUNCTION_3	IF_2
0x400094f	            0x750a	                           jne 0x400095b	       215	cond.c	FUNCTION_3	IF_2
0x4000951	      0xbf02000000	                              mov edi, 2	       216	cond.c	FUNCTION_3	CALL_6
0x4000956	      0xe800000000	                          call 0x400095b	       216	cond.c	FUNCTION_3	CALL_6
0x400095b	      0xe800000000	                          call 0x4000960	       218	cond.c	FUNCTION_3	CALL_7
0x4000960	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       219	cond.c	FUNCTION_3
0x4000965	    0x644833042528	                xor rax, qword fs:[0x28]	       219	cond.c	FUNCTION_3
0x400096e	            0x757c	                           jne 0x40009ec	       219	cond.c	FUNCTION_3
0x4000970	        0x4883c440	                           add rsp, 0x40	       219	cond.c	FUNCTION_3
0x4000974	              0x5b	                                 pop rbx	       219	cond.c	FUNCTION_3
0x4000975	              0xc3	                                     ret	       219	cond.c	FUNCTION_3
0x4000976	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       219	cond.c	FUNCTION_3
0x4000980	    0x8b0500000000	            mov eax, dword [0x04000986] 	       539	cond.c	FUNCTION_11
0x4000986	    0xc74424300100	               mov dword [rsp + 0x30], 1	       538	cond.c	FUNCTION_11
0x400098e	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	       198	cond.c	FUNCTION_3	IF_1
0x4000996	        0x89442434	             mov dword [rsp + 0x34], eax	       539	cond.c	FUNCTION_11
0x400099a	      0xe9dafeffff	                           jmp 0x4000879	       539	cond.c	FUNCTION_11
0x400099f	              0x90	                                     nop	       539	cond.c	FUNCTION_11
0x40009a0	      0xbe38000000	                           mov esi, 0x38	       209	cond.c	FUNCTION_3	CALL_3
0x40009a5	      0xbf00000000	                              mov edi, 0	       209	cond.c	FUNCTION_3	CALL_3
0x40009aa	      0xe800000000	                          call 0x40009af	       209	cond.c	FUNCTION_3	CALL_3
0x40009af	    0x488b15000000	            mov rdx, qword [0x040009b6] 	       209	cond.c	FUNCTION_3	CALL_3
0x40009b6	    0x488b35000000	            mov rsi, qword [0x040009bd] 	       209	cond.c	FUNCTION_3	CALL_3
0x40009bd	      0xe9d5feffff	                           jmp 0x4000897	       209	cond.c	FUNCTION_3	CALL_3
0x40009c2	    0x660f1f440000	                    nop word [rax + rax]	       209	cond.c	FUNCTION_3	CALL_3
0x40009c8	        0x488d4201	                      lea rax, [rdx + 1]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40009cc	    0x488905000000	            mov qword [0x040009d3], rax 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40009d3	         0xfb64201	               movzx eax, byte [rdx + 1]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40009d7	      0xe984feffff	                           jmp 0x4000860	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40009dc	         0xf1f4000	                         nop dword [rax]	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40009e0	    0x800d00000000	                 or byte [0x040009e7], 2	       209	cond.c	FUNCTION_3	CALL_3
0x40009e7	      0xe9bffeffff	                           jmp 0x40008ab	       209	cond.c	FUNCTION_3	CALL_3
0x40009ec	      0xe800000000	                          call 0x40009f1	       219	cond.c	FUNCTION_3
s_else	WHILE,1:SWITCH,0:CALL,13:ELSE,3:FOR,0:IF,5:functions,0:DO,0	91
0x40010a0	              0x53	                                push rbx	       413	cond.c	FUNCTION_8
0x40010a1	    0x488b1d000000	            mov rbx, qword [0x040010a8] 	       414	cond.c	FUNCTION_8	IF_1
0x40010a8	          0x4885db	                           test rbx, rbx	       414	cond.c	FUNCTION_8	IF_1
0x40010ab	     0xf8427010000	                            je 0x40011d8	       414	cond.c	FUNCTION_8	IF_1
0x40010b1	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x40010b4	            0x85ff	                           test edi, edi	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x40010b6	     0xf84b4000000	                            je 0x4001170	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x40010bc	      0xba05000000	                              mov edx, 5	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x40010c1	      0xbe00000000	                              mov esi, 0	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x40010c6	            0x31ff	                            xor edi, edi	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x40010c8	      0xe800000000	                          call 0x40010cd	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x40010cd	          0x4889c7	                            mov rdi, rax	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x40010d0	            0x31c0	                            xor eax, eax	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x40010d2	      0xe800000000	                          call 0x40010d7	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x40010d7	      0xba05000000	                              mov edx, 5	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x40010dc	      0xbe00000000	                              mov esi, 0	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x40010e1	            0x31ff	                            xor edi, edi	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x40010e3	      0xe800000000	                          call 0x40010e8	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x40010e8	    0x488b0d000000	            mov rcx, qword [0x040010ef] 	       422	cond.c	FUNCTION_8	ELSE_1	IF_2
0x40010ef	          0x4889c2	                            mov rdx, rax	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x40010f2	            0x31c0	                            xor eax, eax	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x40010f4	          0x8b7118	            mov esi, dword [rcx + 0x18] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x40010f7	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x40010fb	      0xe800000000	                          call 0x4001100	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4001100	      0xba05000000	                              mov edx, 5	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x4001105	      0xbe00000000	                              mov esi, 0	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x400110a	            0x31ff	                            xor edi, edi	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x400110c	      0xe800000000	                          call 0x4001111	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x4001111	    0x488b0d000000	            mov rcx, qword [0x04001118] 	       425	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4001118	          0x4889c2	                            mov rdx, rax	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x400111b	            0x31c0	                            xor eax, eax	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x400111d	          0x8b7108	                mov esi, dword [rcx + 8]	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4001120	          0x488b39	                    mov rdi, qword [rcx]	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4001123	      0xe800000000	                          call 0x4001128	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4001128	    0x8b0500000000	            mov eax, dword [0x0400112e] 	       449	cond.c	FUNCTION_8	IF_5
0x400112e	            0x85c0	                           test eax, eax	       449	cond.c	FUNCTION_8	IF_5
0x4001130	            0x7438	                            je 0x400116a	       449	cond.c	FUNCTION_8	IF_5
0x4001132	    0x488b05000000	            mov rax, qword [0x04001139] 	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001139	           0xfb610	                   movzx edx, byte [rax]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400113c	    0x80ba00000000	                       cmp byte [rdx], 0	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001143	            0x7525	                           jne 0x400116a	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001145	        0x4883c001	                              add rax, 1	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001149	     0xf1f80000000	                         nop dword [rax]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001150	          0x4889c2	                            mov rdx, rax	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001153	    0x488905000000	            mov qword [0x0400115a], rax 	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400115a	        0x4883c001	                              add rax, 1	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400115e	           0xfb612	                   movzx edx, byte [rdx]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001161	    0x80ba00000000	                       cmp byte [rdx], 0	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4001168	            0x74e6	                            je 0x4001150	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x400116a	              0x5b	                                 pop rbx	       456	cond.c	FUNCTION_8
0x400116b	      0xe900000000	                           jmp 0x4001170	       455	cond.c	FUNCTION_8	CALL_13
0x4001170	        0x488d7b18	                   lea rdi, [rbx + 0x18]	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x4001174	      0xe800000000	                          call 0x4001179	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x4001179	        0x48894310	             mov qword [rbx + 0x10], rax	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x400117d	    0x488b05000000	            mov rax, qword [0x04001184] 	       434	cond.c	FUNCTION_8	ELSE_2
0x4001184	            0x31d2	                            xor edx, edx	       434	cond.c	FUNCTION_8	ELSE_2
0x4001186	          0x8b702c	            mov esi, dword [rax + 0x2c] 	       434	cond.c	FUNCTION_8	ELSE_2
0x4001189	            0x85f6	                           test esi, esi	       434	cond.c	FUNCTION_8	ELSE_2
0x400118b	           0xf94c2	                                 sete dl	       434	cond.c	FUNCTION_8	ELSE_2
0x400118e	           0xb5030	              or edx, dword [rax + 0x30]	       434	cond.c	FUNCTION_8	ELSE_2
0x4001191	    0xf60500000000	           test byte [0x04001198], 0x20 	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x4001198	          0x89502c	             mov dword [rax + 0x2c], edx	       433	cond.c	FUNCTION_8	ELSE_2
0x400119b	            0x742b	                            je 0x40011c8	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x400119d	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40011a1	          0x4885c9	                           test rcx, rcx	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40011a4	            0x7407	                            je 0x40011ad	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40011a6	          0x8b492c	            mov ecx, dword [rcx + 0x2c] 	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40011a9	            0x85c9	                           test ecx, ecx	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40011ab	            0x751b	                           jne 0x40011c8	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x40011ad	            0x85d2	                           test edx, edx	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x40011af	            0x754f	                           jne 0x4001200	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x40011b1	      0xbf01000000	                              mov edi, 1	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x40011b6	      0xe800000000	                          call 0x40011bb	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x40011bb	    0x488b05000000	            mov rax, qword [0x040011c2] 	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x40011c2	    0x660f1f440000	                    nop word [rax + rax]	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x40011c8	    0xc74028010000	               mov dword [rax + 0x28], 1	       446	cond.c	FUNCTION_8	ELSE_2
0x40011cf	      0xe954ffffff	                           jmp 0x4001128	       446	cond.c	FUNCTION_8	ELSE_2
0x40011d4	         0xf1f4000	                         nop dword [rax]	       446	cond.c	FUNCTION_8	ELSE_2
0x40011d8	            0x31ff	                            xor edi, edi	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40011da	      0xba05000000	                              mov edx, 5	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40011df	      0xbe00000000	                              mov esi, 0	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40011e4	      0xe800000000	                          call 0x40011e9	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40011e9	          0x4889c7	                            mov rdi, rax	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40011ec	            0x31c0	                            xor eax, eax	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40011ee	      0xe800000000	                          call 0x40011f3	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40011f3	      0xe930ffffff	                           jmp 0x4001128	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x40011f8	     0xf1f84000000	                   nop dword [rax + rax]	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4001200	      0xbf02000000	                              mov edi, 2	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x4001205	      0xe800000000	                          call 0x400120a	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x400120a	    0x488b05000000	            mov rax, qword [0x04001211] 	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x4001211	            0xebb5	                           jmp 0x40011c8	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
s_elseif	WHILE,1:SWITCH,1:CALL,18:ELSE,4:FOR,0:IF,7:functions,0:DO,0	180
0x4000cc0	              0x55	                                push rbp	       307	cond.c	FUNCTION_6
0x4000cc1	              0x53	                                push rbx	       307	cond.c	FUNCTION_6
0x4000cc2	            0x89fd	                            mov ebp, edi	       307	cond.c	FUNCTION_6
0x4000cc4	        0x4883ec38	                           sub rsp, 0x38	       307	cond.c	FUNCTION_6
0x4000cc8	    0x488b1d000000	            mov rbx, qword [0x04000ccf] 	       308	cond.c	FUNCTION_6	IF_1
0x4000ccf	    0x64488b042528	                mov rax, qword fs:[0x28]	       307	cond.c	FUNCTION_6
0x4000cd8	      0x4889442428	             mov qword [rsp + 0x28], rax	       307	cond.c	FUNCTION_6
0x4000cdd	            0x31c0	                            xor eax, eax	       307	cond.c	FUNCTION_6
0x4000cdf	          0x4885db	                           test rbx, rbx	       308	cond.c	FUNCTION_6	IF_1
0x4000ce2	     0xf8478020000	                            je 0x4000f60	       308	cond.c	FUNCTION_6	IF_1
0x4000ce8	        0x448b4b28	            mov r9d, dword [rbx + 0x28] 	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000cec	          0x4585c9	                           test r9d, r9d	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000cef	     0xf85ab000000	                           jne 0x4000da0	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000cf5	        0x488d7b18	                   lea rdi, [rbx + 0x18]	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000cf9	      0xe800000000	                          call 0x4000cfe	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000cfe	    0x488b0d000000	            mov rcx, qword [0x04000d05] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000d05	        0x48894310	             mov qword [rbx + 0x10], rax	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000d09	            0x31c0	                            xor eax, eax	       327	cond.c	FUNCTION_6	ELSE_2
0x4000d0b	        0x448b412c	            mov r8d, dword [rcx + 0x2c] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000d0f	          0x4585c0	                           test r8d, r8d	       327	cond.c	FUNCTION_6	ELSE_2
0x4000d12	           0xf94c0	                                 sete al	       327	cond.c	FUNCTION_6	ELSE_2
0x4000d15	           0xb4130	              or eax, dword [rcx + 0x30]	       327	cond.c	FUNCTION_6	ELSE_2
0x4000d18	          0x894130	             mov dword [rcx + 0x30], eax	       327	cond.c	FUNCTION_6	ELSE_2
0x4000d1b	          0x89412c	             mov dword [rcx + 0x2c], eax	       328	cond.c	FUNCTION_6	ELSE_2
0x4000d1e	          0x8b792c	            mov edi, dword [rcx + 0x2c] 	       331	cond.c	FUNCTION_6	IF_3
0x4000d21	            0x85ff	                           test edi, edi	       331	cond.c	FUNCTION_6	IF_3
0x4000d23	     0xf8437010000	                            je 0x4000e60	       331	cond.c	FUNCTION_6	IF_3
0x4000d29	    0x488b05000000	            mov rax, qword [0x04000d30] 	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d30	           0xfb610	                   movzx edx, byte [rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d33	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d3a	            0x7523	                           jne 0x4000d5f	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d3c	        0x4883c001	                              add rax, 1	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d40	          0x4889c2	                            mov rdx, rax	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d43	    0x488905000000	            mov qword [0x04000d4a], rax 	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d4a	        0x4883c001	                              add rax, 1	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d4e	           0xfb612	                   movzx edx, byte [rdx]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d51	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d58	            0x74e6	                            je 0x4000d40	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000d5a	          0x4885c9	                           test rcx, rcx	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000d5d	            0x7426	                            je 0x4000d85	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000d5f	    0xf60500000000	           test byte [0x04000d66], 0x20 	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4000d66	            0x7418	                            je 0x4000d80	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4000d68	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       368	cond.c	FUNCTION_6	IF_6
0x4000d6c	          0x4885c0	                           test rax, rax	       368	cond.c	FUNCTION_6	IF_6
0x4000d6f	     0xf84cb000000	                            je 0x4000e40	       368	cond.c	FUNCTION_6	IF_6
0x4000d75	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       369	cond.c	FUNCTION_6	IF_6
0x4000d78	            0x85d2	                           test edx, edx	       369	cond.c	FUNCTION_6	IF_6
0x4000d7a	     0xf84c0000000	                            je 0x4000e40	       369	cond.c	FUNCTION_6	IF_6
0x4000d80	      0xe800000000	                          call 0x4000d85	       377	cond.c	FUNCTION_6	CALL_18
0x4000d85	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       378	cond.c	FUNCTION_6
0x4000d8a	    0x644833042528	                xor rax, qword fs:[0x28]	       378	cond.c	FUNCTION_6
0x4000d93	     0xf850b020000	                           jne 0x4000fa4	       378	cond.c	FUNCTION_6
0x4000d99	        0x4883c438	                           add rsp, 0x38	       378	cond.c	FUNCTION_6
0x4000d9d	              0x5b	                                 pop rbx	       378	cond.c	FUNCTION_6
0x4000d9e	              0x5d	                                 pop rbp	       378	cond.c	FUNCTION_6
0x4000d9f	              0xc3	                                     ret	       378	cond.c	FUNCTION_6
0x4000da0	      0xba05000000	                              mov edx, 5	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000da5	      0xbe00000000	                              mov esi, 0	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000daa	            0x31ff	                            xor edi, edi	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000dac	      0xe800000000	                          call 0x4000db1	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000db1	          0x4889c7	                            mov rdi, rax	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000db4	            0x31c0	                            xor eax, eax	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000db6	      0xe800000000	                          call 0x4000dbb	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000dbb	      0xba05000000	                              mov edx, 5	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000dc0	      0xbe00000000	                              mov esi, 0	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000dc5	            0x31ff	                            xor edi, edi	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000dc7	      0xe800000000	                          call 0x4000dcc	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000dcc	    0x488b0d000000	            mov rcx, qword [0x04000dd3] 	       316	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000dd3	          0x4889c2	                            mov rdx, rax	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000dd6	            0x31c0	                            xor eax, eax	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000dd8	          0x8b7118	            mov esi, dword [rcx + 0x18] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ddb	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ddf	      0xe800000000	                          call 0x4000de4	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000de4	      0xba05000000	                              mov edx, 5	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000de9	      0xbe00000000	                              mov esi, 0	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000dee	            0x31ff	                            xor edi, edi	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000df0	      0xe800000000	                          call 0x4000df5	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000df5	    0x488b0d000000	            mov rcx, qword [0x04000dfc] 	       319	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000dfc	          0x4889c2	                            mov rdx, rax	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000dff	            0x31c0	                            xor eax, eax	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e01	          0x8b7108	                mov esi, dword [rcx + 8]	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e04	          0x488b39	                    mov rdi, qword [rcx]	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e07	      0xe800000000	                          call 0x4000e0c	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e0c	    0x488b0d000000	            mov rcx, qword [0x04000e13] 	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000e13	          0x4885c9	                           test rcx, rcx	       331	cond.c	FUNCTION_6	IF_3
0x4000e16	     0xf8502ffffff	                           jne 0x4000d1e	       331	cond.c	FUNCTION_6	IF_3
0x4000e1c	    0x488b05000000	            mov rax, qword [0x04000e23] 	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000e23	           0xfb610	                   movzx edx, byte [rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000e26	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000e2d	     0xf8409ffffff	                            je 0x4000d3c	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000e33	      0xe94dffffff	                           jmp 0x4000d85	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000e38	     0xf1f84000000	                   nop dword [rax + rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000e40	          0x8b412c	            mov eax, dword [rcx + 0x2c] 	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x4000e43	            0x85c0	                           test eax, eax	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x4000e45	            0x7571	                           jne 0x4000eb8	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x4000e47	      0xbf01000000	                              mov edi, 1	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000e4c	      0xe800000000	                          call 0x4000e51	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000e51	      0xe92affffff	                           jmp 0x4000d80	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000e56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000e60	    0x488b05000000	            mov rax, qword [0x04000e67] 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000e67	          0x803820	                    cmp byte [rax], 0x20	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000e6a	     0xf84e0000000	                            je 0x4000f50	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000e70	            0x31d2	                            xor edx, edx	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000e72	            0x31ff	                            xor edi, edi	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000e74	          0x4889e6	                            mov rsi, rsp	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000e77	      0xe800000000	                          call 0x4000e7c	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000e7c	      0x807c241802	                cmp byte [rsp + 0x18], 2	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000e81	            0x741b	                            je 0x4000e9e	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000e83	            0x31ff	                            xor edi, edi	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000e85	      0xba05000000	                              mov edx, 5	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000e8a	      0xbe00000000	                              mov esi, 0	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000e8f	      0xe800000000	                          call 0x4000e94	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000e94	          0x4889c7	                            mov rdi, rax	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000e97	            0x31c0	                            xor eax, eax	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000e99	      0xe800000000	                          call 0x4000e9e	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000e9e	          0x83ed15	                           sub ebp, 0x15	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ea1	          0x83fd05	                              cmp ebp, 5	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ea4	     0xf87e6000000	                            ja 0x4000f90	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000eaa	    0xff24ed000000	                       jmp qword [rbp*8]	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000eb1	     0xf1f80000000	                         nop dword [rax]	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000eb8	      0xbf02000000	                              mov edi, 2	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000ebd	      0xe800000000	                          call 0x4000ec2	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000ec2	      0xe9b9feffff	                           jmp 0x4000d80	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000ec7	    0x660f1f840000	                    nop word [rax + rax]	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000ed0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ed5	          0x48f7d0	                                 not rax	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ed8	        0x48c1e83f	                           shr rax, 0x3f	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000edc	         0xf1f4000	                         nop dword [rax]	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000ee0	    0x488b0d000000	            mov rcx, qword [0x04000ee7] 	       364	cond.c	FUNCTION_6	ELSE_3
0x4000ee7	          0x8b7130	            mov esi, dword [rcx + 0x30] 	       364	cond.c	FUNCTION_6	ELSE_3
0x4000eea	            0x85f6	                           test esi, esi	       364	cond.c	FUNCTION_6	ELSE_3
0x4000eec	           0xf95c2	                                setne dl	       364	cond.c	FUNCTION_6	ELSE_3
0x4000eef	          0x83f001	                              xor eax, 1	       364	cond.c	FUNCTION_6	ELSE_3
0x4000ef2	             0x9d0	                             or eax, edx	       364	cond.c	FUNCTION_6	ELSE_3
0x4000ef4	           0xfb6c0	                           movzx eax, al	       364	cond.c	FUNCTION_6	ELSE_3
0x4000ef7	          0x89412c	             mov dword [rcx + 0x2c], eax	       364	cond.c	FUNCTION_6	ELSE_3
0x4000efa	      0xe960feffff	                           jmp 0x4000d5f	       364	cond.c	FUNCTION_6	ELSE_3
0x4000eff	              0x90	                                     nop	       364	cond.c	FUNCTION_6	ELSE_3
0x4000f00	            0x31c0	                            xor eax, eax	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f02	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f08	           0xf9ec0	                                setle al	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f0b	            0xebd3	                           jmp 0x4000ee0	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f0d	           0xf1f00	                         nop dword [rax]	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f10	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f15	        0x48c1e83f	                           shr rax, 0x3f	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f19	            0xebc5	                           jmp 0x4000ee0	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f1b	       0xf1f440000	                   nop dword [rax + rax]	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f20	            0x31c0	                            xor eax, eax	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f22	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f28	           0xf95c0	                                setne al	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f2b	            0xebb3	                           jmp 0x4000ee0	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f2d	           0xf1f00	                         nop dword [rax]	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f30	            0x31c0	                            xor eax, eax	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f32	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f38	           0xf94c0	                                 sete al	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f3b	            0xeba3	                           jmp 0x4000ee0	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f3d	           0xf1f00	                         nop dword [rax]	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f40	            0x31c0	                            xor eax, eax	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f42	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f48	           0xf9fc0	                                 setg al	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f4b	            0xeb93	                           jmp 0x4000ee0	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f4d	           0xf1f00	                         nop dword [rax]	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000f50	        0x4883c001	                              add rax, 1	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f54	    0x488905000000	            mov qword [0x04000f5b], rax 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f5b	      0xe910ffffff	                           jmp 0x4000e70	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000f60	      0xba05000000	                              mov edx, 5	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f65	      0xbe00000000	                              mov esi, 0	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f6a	            0x31ff	                            xor edi, edi	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f6c	      0xe800000000	                          call 0x4000f71	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f71	          0x4889c7	                            mov rdi, rax	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f74	            0x31c0	                            xor eax, eax	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f76	      0xe800000000	                          call 0x4000f7b	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f7b	    0x488b0d000000	            mov rcx, qword [0x04000f82] 	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f82	      0xe98cfeffff	                           jmp 0x4000e13	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f87	    0x660f1f840000	                    nop word [rax + rax]	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000f90	      0xba00000000	                              mov edx, 0	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000f95	      0xbe68010000	                          mov esi, 0x168	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000f9a	      0xbf00000000	                              mov edi, 0	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000f9f	      0xe800000000	                          call 0x4000fa4	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000fa4	      0xe800000000	                          call 0x4000fa9	       378	cond.c	FUNCTION_6
s_ifeqs	WHILE,0:SWITCH,0:CALL,13:ELSE,0:FOR,0:IF,2:functions,0:DO,0	150
0x4001220	            0x4154	                                push r12	       460	cond.c	FUNCTION_9
0x4001222	              0x55	                                push rbp	       460	cond.c	FUNCTION_9
0x4001223	              0x53	                                push rbx	       460	cond.c	FUNCTION_9
0x4001224	            0x89fb	                            mov ebx, edi	       460	cond.c	FUNCTION_9
0x4001226	        0x4883ec50	                           sub rsp, 0x50	       460	cond.c	FUNCTION_9
0x400122a	      0x488d7c2408	                      lea rdi, [rsp + 8]	       466	cond.c	FUNCTION_9	CALL_1
0x400122f	    0x64488b042528	                mov rax, qword fs:[0x28]	       460	cond.c	FUNCTION_9
0x4001238	      0x4889442448	             mov qword [rsp + 0x48], rax	       460	cond.c	FUNCTION_9
0x400123d	            0x31c0	                            xor eax, eax	       460	cond.c	FUNCTION_9
0x400123f	      0xe800000000	                          call 0x4001244	       466	cond.c	FUNCTION_9	CALL_1
0x4001244	          0x4989c4	                            mov r12, rax	       466	cond.c	FUNCTION_9	CALL_1
0x4001247	    0x488b05000000	            mov rax, qword [0x0400124e] 	       468	cond.c	FUNCTION_9	CALL_2
0x400124e	           0xfb610	                   movzx edx, byte [rax]	       468	cond.c	FUNCTION_9	CALL_2
0x4001251	          0x80fa20	                            cmp dl, 0x20	       468	cond.c	FUNCTION_9	CALL_2
0x4001254	     0xf84be010000	                            je 0x4001418	       468	cond.c	FUNCTION_9	CALL_2
0x400125a	          0x80fa2c	                            cmp dl, 0x2c	       469	cond.c	FUNCTION_9	IF_1
0x400125d	            0x7441	                            je 0x40012a0	       469	cond.c	FUNCTION_9	IF_1
0x400125f	      0xba05000000	                              mov edx, 5	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001264	      0xbe00000000	                              mov esi, 0	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001269	            0x31ff	                            xor edi, edi	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x400126b	      0xe800000000	                          call 0x4001270	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001270	          0x4889c7	                            mov rdi, rax	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001273	            0x31c0	                            xor eax, eax	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4001275	      0xe800000000	                          call 0x400127a	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x400127a	      0xe800000000	                          call 0x400127f	       472	cond.c	FUNCTION_9	IF_1	CALL_5
0x400127f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       495	cond.c	FUNCTION_9
0x4001284	    0x644833042528	                xor rax, qword fs:[0x28]	       495	cond.c	FUNCTION_9
0x400128d	     0xf8509020000	                           jne 0x400149c	       495	cond.c	FUNCTION_9
0x4001293	        0x4883c450	                           add rsp, 0x50	       495	cond.c	FUNCTION_9
0x4001297	              0x5b	                                 pop rbx	       495	cond.c	FUNCTION_9
0x4001298	              0x5d	                                 pop rbp	       495	cond.c	FUNCTION_9
0x4001299	            0x415c	                                 pop r12	       495	cond.c	FUNCTION_9
0x400129b	              0xc3	                                     ret	       495	cond.c	FUNCTION_9
0x400129c	         0xf1f4000	                         nop dword [rax]	       495	cond.c	FUNCTION_9
0x40012a0	      0x488d7c240c	                    lea rdi, [rsp + 0xc]	       478	cond.c	FUNCTION_9	CALL_6
0x40012a5	        0x4883c001	                              add rax, 1	       476	cond.c	FUNCTION_9
0x40012a9	            0x31ed	                            xor ebp, ebp	       480	cond.c	FUNCTION_9	CALL_7
0x40012ab	    0x488905000000	            mov qword [0x040012b2], rax 	       476	cond.c	FUNCTION_9
0x40012b2	      0xe800000000	                          call 0x40012b7	       478	cond.c	FUNCTION_9	CALL_6
0x40012b7	      0x4863542408	            movsxd rdx, dword [rsp + 8] 	       480	cond.c	FUNCTION_9	CALL_7
0x40012bc	        0x3b54240c	              cmp edx, dword [rsp + 0xc]	       480	cond.c	FUNCTION_9	CALL_7
0x40012c0	     0xf84b2010000	                            je 0x4001478	       480	cond.c	FUNCTION_9	CALL_7
0x40012c6	      0x488d542410	                   lea rdx, [rsp + 0x10]	        90	string3.h	FUNCTION_17	CALL_6
0x40012cb	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_17	CALL_6
0x40012cd	      0xb907000000	                              mov ecx, 7	        90	string3.h	FUNCTION_17	CALL_6
0x40012d2	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_17	CALL_6
0x40012d5	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_17	CALL_6
0x40012d8	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       536	cond.c	FUNCTION_11	CALL_2
0x40012dd	      0xe800000000	                          call 0x40012e2	       536	cond.c	FUNCTION_11	CALL_2
0x40012e2	      0x4889442410	             mov qword [rsp + 0x10], rax	       536	cond.c	FUNCTION_11	CALL_2
0x40012e7	    0x488b05000000	            mov rax, qword [0x040012ee] 	       537	cond.c	FUNCTION_11
0x40012ee	          0x4885c0	                           test rax, rax	       538	cond.c	FUNCTION_11
0x40012f1	      0x4889442430	             mov qword [rsp + 0x30], rax	       537	cond.c	FUNCTION_11
0x40012f6	            0x740b	                            je 0x4001303	       538	cond.c	FUNCTION_11
0x40012f8	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	       538	cond.c	FUNCTION_11
0x40012fb	            0x85c9	                           test ecx, ecx	       538	cond.c	FUNCTION_11
0x40012fd	     0xf852d010000	                           jne 0x4001430	       538	cond.c	FUNCTION_11
0x4001303	    0x8b0500000000	            mov eax, dword [0x04001309] 	       539	cond.c	FUNCTION_11
0x4001309	    0xc74424400000	               mov dword [rsp + 0x40], 0	       538	cond.c	FUNCTION_11
0x4001311	        0x89442444	             mov dword [rsp + 0x44], eax	       539	cond.c	FUNCTION_11
0x4001315	            0x31c0	                            xor eax, eax	       483	cond.c	FUNCTION_9
0x4001317	            0x39dd	                            cmp ebp, ebx	       483	cond.c	FUNCTION_9
0x4001319	           0xf94c0	                                 sete al	       483	cond.c	FUNCTION_9
0x400131c	    0x488b35000000	            mov rsi, qword [0x04001323] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001323	    0x488b15000000	            mov rdx, qword [0x0400132a] 	       485	cond.c	FUNCTION_9	CALL_9
0x400132a	        0x8944243c	             mov dword [rsp + 0x3c], eax	       483	cond.c	FUNCTION_9
0x400132e	          0x4889f0	                            mov rax, rsi	       485	cond.c	FUNCTION_9	CALL_9
0x4001331	          0x4829d0	                            sub rax, rdx	       485	cond.c	FUNCTION_9	CALL_9
0x4001334	        0x4883f837	                           cmp rax, 0x37	       485	cond.c	FUNCTION_9	CALL_9
0x4001338	     0xf8612010000	                           jbe 0x4001450	       485	cond.c	FUNCTION_9	CALL_9
0x400133e	    0x488b05000000	            mov rax, qword [0x04001345] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001345	        0x4883c238	                           add rdx, 0x38	       485	cond.c	FUNCTION_9	CALL_9
0x4001349	          0x4839c2	                            cmp rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x400134c	     0xf843e010000	                            je 0x4001490	       485	cond.c	FUNCTION_9	CALL_9
0x4001352	    0x488b0d000000	            mov rcx, qword [0x04001359] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001359	          0x4889f3	                            mov rbx, rsi	       485	cond.c	FUNCTION_9	CALL_9
0x400135c	          0x4801ca	                            add rdx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x400135f	          0x48f7d1	                                 not rcx	       485	cond.c	FUNCTION_9	CALL_9
0x4001362	          0x4821ca	                            and rdx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x4001365	    0x488b0d000000	            mov rcx, qword [0x0400136c] 	       485	cond.c	FUNCTION_9	CALL_9
0x400136c	          0x4889d7	                            mov rdi, rdx	       485	cond.c	FUNCTION_9	CALL_9
0x400136f	    0x488915000000	            mov qword [0x04001376], rdx 	       485	cond.c	FUNCTION_9	CALL_9
0x4001376	          0x4829cf	                            sub rdi, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x4001379	          0x4829cb	                            sub rbx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x400137c	          0x4839df	                            cmp rdi, rbx	       485	cond.c	FUNCTION_9	CALL_9
0x400137f	            0x760a	                           jbe 0x400138b	       485	cond.c	FUNCTION_9	CALL_9
0x4001381	    0x488935000000	            mov qword [0x04001388], rsi 	       485	cond.c	FUNCTION_9	CALL_9
0x4001388	          0x4889f2	                            mov rdx, rsi	       485	cond.c	FUNCTION_9	CALL_9
0x400138b	    0x488915000000	            mov qword [0x04001392], rdx 	       485	cond.c	FUNCTION_9	CALL_9
0x4001392	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x4001397	    0x488905000000	            mov qword [0x0400139e], rax 	       484	cond.c	FUNCTION_9
0x400139e	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40013a1	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x40013a6	    0xf60500000000	           test byte [0x040013ad], 0x20 	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x40013ad	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40013b1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x40013b6	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40013ba	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x40013bf	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40013c3	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x40013c8	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40013cc	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x40013d1	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40013d5	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x40013da	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40013de	            0x7428	                            je 0x4001408	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x40013e0	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       489	cond.c	FUNCTION_9	IF_2
0x40013e4	            0x85d2	                           test edx, edx	       489	cond.c	FUNCTION_9	IF_2
0x40013e6	            0x7420	                            je 0x4001408	       489	cond.c	FUNCTION_9	IF_2
0x40013e8	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       490	cond.c	FUNCTION_9	IF_2
0x40013ed	          0x4885c0	                           test rax, rax	       490	cond.c	FUNCTION_9	IF_2
0x40013f0	            0x7407	                            je 0x40013f9	       490	cond.c	FUNCTION_9	IF_2
0x40013f2	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       491	cond.c	FUNCTION_9	IF_2
0x40013f5	            0x85c0	                           test eax, eax	       491	cond.c	FUNCTION_9	IF_2
0x40013f7	            0x750f	                           jne 0x4001408	       491	cond.c	FUNCTION_9	IF_2
0x40013f9	      0xbf02000000	                              mov edi, 2	       492	cond.c	FUNCTION_9	CALL_12
0x40013fe	      0xe800000000	                          call 0x4001403	       492	cond.c	FUNCTION_9	CALL_12
0x4001403	       0xf1f440000	                   nop dword [rax + rax]	       492	cond.c	FUNCTION_9	CALL_12
0x4001408	      0xe800000000	                          call 0x400140d	       494	cond.c	FUNCTION_9	CALL_13
0x400140d	      0xe96dfeffff	                           jmp 0x400127f	       494	cond.c	FUNCTION_9	CALL_13
0x4001412	    0x660f1f440000	                    nop word [rax + rax]	       494	cond.c	FUNCTION_9	CALL_13
0x4001418	        0x488d4801	                      lea rcx, [rax + 1]	       468	cond.c	FUNCTION_9	CALL_2
0x400141c	    0x48890d000000	            mov qword [0x04001423], rcx 	       468	cond.c	FUNCTION_9	CALL_2
0x4001423	         0xfb65001	               movzx edx, byte [rax + 1]	       468	cond.c	FUNCTION_9	CALL_2
0x4001427	          0x4889c8	                            mov rax, rcx	       468	cond.c	FUNCTION_9	CALL_2
0x400142a	      0xe92bfeffff	                           jmp 0x400125a	       468	cond.c	FUNCTION_9	CALL_2
0x400142f	              0x90	                                     nop	       468	cond.c	FUNCTION_9	CALL_2
0x4001430	    0x8b0500000000	            mov eax, dword [0x04001436] 	       539	cond.c	FUNCTION_11
0x4001436	    0xc74424400100	               mov dword [rsp + 0x40], 1	       538	cond.c	FUNCTION_11
0x400143e	        0x89442444	             mov dword [rsp + 0x44], eax	       539	cond.c	FUNCTION_11
0x4001442	      0xb801000000	                              mov eax, 1	       483	cond.c	FUNCTION_9
0x4001447	      0xe9d0feffff	                           jmp 0x400131c	       483	cond.c	FUNCTION_9
0x400144c	         0xf1f4000	                         nop dword [rax]	       483	cond.c	FUNCTION_9
0x4001450	      0xbe38000000	                           mov esi, 0x38	       485	cond.c	FUNCTION_9	CALL_9
0x4001455	      0xbf00000000	                              mov edi, 0	       485	cond.c	FUNCTION_9	CALL_9
0x400145a	      0xe800000000	                          call 0x400145f	       485	cond.c	FUNCTION_9	CALL_9
0x400145f	    0x488b15000000	            mov rdx, qword [0x04001466] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001466	    0x488b35000000	            mov rsi, qword [0x0400146d] 	       485	cond.c	FUNCTION_9	CALL_9
0x400146d	      0xe9ccfeffff	                           jmp 0x400133e	       485	cond.c	FUNCTION_9	CALL_9
0x4001472	    0x660f1f440000	                    nop word [rax + rax]	       485	cond.c	FUNCTION_9	CALL_9
0x4001478	          0x4889c6	                            mov rsi, rax	       480	cond.c	FUNCTION_9	CALL_7
0x400147b	          0x4c89e7	                            mov rdi, r12	       480	cond.c	FUNCTION_9	CALL_7
0x400147e	            0x31ed	                            xor ebp, ebp	       480	cond.c	FUNCTION_9	CALL_7
0x4001480	      0xe800000000	                          call 0x4001485	       480	cond.c	FUNCTION_9	CALL_7
0x4001485	            0x85c0	                           test eax, eax	       480	cond.c	FUNCTION_9	CALL_7
0x4001487	        0x400f94c5	                                sete bpl	       480	cond.c	FUNCTION_9	CALL_7
0x400148b	      0xe936feffff	                           jmp 0x40012c6	       480	cond.c	FUNCTION_9	CALL_7
0x4001490	    0x800d00000000	                 or byte [0x04001497], 2	       485	cond.c	FUNCTION_9	CALL_9
0x4001497	      0xe9b6feffff	                           jmp 0x4001352	       485	cond.c	FUNCTION_9	CALL_9
0x400149c	      0xe800000000	                          call 0x40014a1	       495	cond.c	FUNCTION_9
cond_exit_macro	WHILE,1:SWITCH,0:CALL,1:ELSE,0:FOR,0:IF,0:functions,0:DO,0	26
0x4001630	    0x488b35000000	            mov rsi, qword [0x04001637] 	       573	cond.c	FUNCTION_13
0x4001637	              0x53	                                push rbx	       573	cond.c	FUNCTION_13
0x4001638	            0x89fb	                            mov ebx, edi	       573	cond.c	FUNCTION_13
0x400163a	    0x660f1f440000	                    nop word [rax + rax]	       573	cond.c	FUNCTION_13
0x4001640	          0x4885f6	                           test rsi, rsi	       574	cond.c	FUNCTION_13	WHILE_1
0x4001643	            0x7438	                            je 0x400167d	       574	cond.c	FUNCTION_13	WHILE_1
0x4001645	          0x395e34	            cmp dword [rsi + 0x34], ebx 	       574	cond.c	FUNCTION_13	WHILE_1
0x4001648	            0x7c33	                            jl 0x400167d	       574	cond.c	FUNCTION_13	WHILE_1
0x400164a	    0x483935000000	            cmp qword [0x04001651], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001651	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       579	cond.c	FUNCTION_13	WHILE_1
0x4001655	    0x488905000000	            mov qword [0x0400165c], rax 	       579	cond.c	FUNCTION_13	WHILE_1
0x400165c	            0x7322	                           jae 0x4001680	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400165e	    0x483935000000	            cmp qword [0x04001665], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001665	            0x7619	                           jbe 0x4001680	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001667	    0x488935000000	            mov qword [0x0400166e], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400166e	    0x488935000000	            mov qword [0x04001675], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001675	          0x4889c6	                            mov rsi, rax	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001678	          0x4885f6	                           test rsi, rsi	       574	cond.c	FUNCTION_13	WHILE_1
0x400167b	            0x75c8	                           jne 0x4001645	       574	cond.c	FUNCTION_13	WHILE_1
0x400167d	              0x5b	                                 pop rbx	       582	cond.c	FUNCTION_13
0x400167e	              0xc3	                                     ret	       582	cond.c	FUNCTION_13
0x400167f	              0x90	                                     nop	       582	cond.c	FUNCTION_13
0x4001680	      0xbf00000000	                              mov edi, 0	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001685	      0xe800000000	                          call 0x400168a	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400168a	    0x488b35000000	            mov rsi, qword [0x04001691] 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001691	            0xebad	                           jmp 0x4001640	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
