bfd_check_format	FOR,0:DO,0:functions,0:SWITCH,0:ELSE,0:WHILE,0:CALL,1:IF,0	2
0x4000950	            0x31d2	                            xor edx, edx	        94	format.c	FUNCTION_1	CALL_1
0x4000952	      0xe9e9f6ffff	        jmp sym.bfd_check_format_matches	        94	format.c	FUNCTION_1	CALL_1
bfd_set_format	FOR,0:DO,0:functions,0:SWITCH,0:ELSE,0:WHILE,0:CALL,3:IF,3	40
0x4000960	              0x53	                                push rbx	       528	format.c	FUNCTION_7
0x4000961	         0xfb65744	           movzx edx, byte [rdi + 0x44] 	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000965	          0xf6c208	                              test dl, 8	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x4000968	            0x751e	                           jne 0x4000988	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x400096a	            0x89d0	                            mov eax, edx	       530	format.c	FUNCTION_7	IF_1
0x400096c	          0x83e007	                              and eax, 7	       530	format.c	FUNCTION_7	IF_1
0x400096f	            0x3c03	                               cmp al, 3	       530	format.c	FUNCTION_7	IF_1
0x4000971	            0x7715	                            ja 0x4000988	       530	format.c	FUNCTION_7	IF_1
0x4000973	            0x84c0	                             test al, al	       536	format.c	FUNCTION_7	IF_2
0x4000975	            0x7429	                            je 0x40009a0	       536	format.c	FUNCTION_7	IF_2
0x4000977	           0xfb6c0	                           movzx eax, al	       537	format.c	FUNCTION_7	IF_2
0x400097a	            0x39f0	                            cmp eax, esi	       537	format.c	FUNCTION_7	IF_2
0x400097c	           0xf94c0	                                 sete al	       537	format.c	FUNCTION_7	IF_2
0x400097f	           0xfb6c0	                           movzx eax, al	       537	format.c	FUNCTION_7	IF_2
0x4000982	              0x5b	                                 pop rbx	       549	format.c	FUNCTION_7
0x4000983	              0xc3	                                     ret	       549	format.c	FUNCTION_7
0x4000984	         0xf1f4000	                         nop dword [rax]	       549	format.c	FUNCTION_7
0x4000988	      0xbf05000000	                              mov edi, 5	       532	format.c	FUNCTION_7	IF_1	CALL_2
0x400098d	      0xe800000000	                          call 0x4000992	       532	format.c	FUNCTION_7	IF_1	CALL_2
0x4000992	            0x31c0	                            xor eax, eax	       533	format.c	FUNCTION_7	IF_1
0x4000994	              0x5b	                                 pop rbx	       549	format.c	FUNCTION_7
0x4000995	              0xc3	                                     ret	       549	format.c	FUNCTION_7
0x4000996	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       549	format.c	FUNCTION_7
0x40009a0	        0x488b4708	                mov rax, qword [rdi + 8]	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40009a4	          0x83e607	                              and esi, 7	       540	format.c	FUNCTION_7
0x40009a7	          0x83e2f8	                     and edx, 0xfffffff8	       540	format.c	FUNCTION_7
0x40009aa	             0x9f2	                             or edx, esi	       540	format.c	FUNCTION_7
0x40009ac	          0x83e607	                              and esi, 7	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40009af	          0x4889fb	                            mov rbx, rdi	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40009b2	          0x885744	               mov byte [rdi + 0x44], dl	       540	format.c	FUNCTION_7
0x40009b5	    0xff94f0d00000	        call qword [rax + rsi*8 + 0xd0] 	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40009bc	            0x85c0	                           test eax, eax	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40009be	            0x7510	                           jne 0x40009d0	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40009c0	        0x806344f8	             and byte [rbx + 0x44], 0xf8	       544	format.c	FUNCTION_7	IF_3
0x40009c4	              0x5b	                                 pop rbx	       549	format.c	FUNCTION_7
0x40009c5	              0xc3	                                     ret	       549	format.c	FUNCTION_7
0x40009c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       549	format.c	FUNCTION_7
0x40009d0	      0xb801000000	                              mov eax, 1	       548	format.c	FUNCTION_7
0x40009d5	              0x5b	                                 pop rbx	       549	format.c	FUNCTION_7
0x40009d6	              0xc3	                                     ret	       549	format.c	FUNCTION_7
bfd_check_format_matches	FOR,2:DO,0:functions,0:SWITCH,0:ELSE,3:WHILE,3:CALL,25:IF,42	493
0x4000040	            0x4157	                                push r15	       211	format.c	FUNCTION_6
0x4000042	            0x4156	                                push r14	       211	format.c	FUNCTION_6
0x4000044	          0x4989fe	                            mov r14, rdi	       211	format.c	FUNCTION_6
0x4000047	            0x4155	                                push r13	       211	format.c	FUNCTION_6
0x4000049	            0x4154	                                push r12	       211	format.c	FUNCTION_6
0x400004b	              0x55	                                push rbp	       211	format.c	FUNCTION_6
0x400004c	              0x53	                                push rbx	       211	format.c	FUNCTION_6
0x400004d	            0x89f3	                            mov ebx, esi	       211	format.c	FUNCTION_6
0x400004f	    0x4881ecb80000	                           sub rsp, 0xb8	       211	format.c	FUNCTION_6
0x4000056	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       211	format.c	FUNCTION_6
0x400005f	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       211	format.c	FUNCTION_6
0x4000067	            0x31c9	                            xor ecx, ecx	       211	format.c	FUNCTION_6
0x4000069	    0x8b0d00000000	            mov ecx, dword [0x0400006f] 	       221	format.c	FUNCTION_6
0x400006f	          0x4885d2	                           test rdx, rdx	       224	format.c	FUNCTION_6	IF_1
0x4000072	      0x4889542420	             mov qword [rsp + 0x20], rdx	       211	format.c	FUNCTION_6
0x4000077	        0x894c2404	                mov dword [rsp + 4], ecx	       221	format.c	FUNCTION_6
0x400007b	            0x7407	                            je 0x4000084	       224	format.c	FUNCTION_6	IF_1
0x400007d	    0x48c702000000	                      mov qword [rdx], 0	       225	format.c	FUNCTION_6	IF_1
0x4000084	      0x410fb64644	           movzx eax, byte [r14 + 0x44] 	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x4000089	            0xa808	                              test al, 8	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x400008b	     0xf84df020000	                            je 0x4000370	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x4000091	          0x83e007	                              and eax, 7	       228	format.c	FUNCTION_6	IF_2
0x4000094	            0x3c03	                               cmp al, 3	       228	format.c	FUNCTION_6	IF_2
0x4000096	     0xf87d4020000	                            ja 0x4000370	       228	format.c	FUNCTION_6	IF_2
0x400009c	            0x84c0	                             test al, al	       234	format.c	FUNCTION_6	IF_3
0x400009e	     0xf857c040000	                           jne 0x4000520	       234	format.c	FUNCTION_6	IF_3
0x40000a4	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       237	format.c	FUNCTION_6	IF_4
0x40000aa	     0xf8490040000	                            je 0x4000540	       237	format.c	FUNCTION_6	IF_4
0x40000b0	    0x488b3d000000	            mov rdi, qword [0x040000b7] 	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x40000b7	        0x48c1e704	                              shl rdi, 4	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x40000bb	      0xe800000000	                          call 0x40000c0	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x40000c0	          0x4885c0	                           test rax, rax	       243	format.c	FUNCTION_6	IF_4	IF_5
0x40000c3	          0x4989c5	                            mov r13, rax	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x40000c6	     0xf84e0030000	                            je 0x40004ac	       243	format.c	FUNCTION_6	IF_4	IF_5
0x40000cc	      0x410fb65644	           movzx edx, byte [r14 + 0x44] 	       248	format.c	FUNCTION_6
0x40000d1	            0x89d8	                            mov eax, ebx	       248	format.c	FUNCTION_6
0x40000d3	    0x48c744244000	               mov qword [rsp + 0x40], 0	       250	format.c	FUNCTION_6
0x40000dc	          0x83e007	                              and eax, 7	       248	format.c	FUNCTION_6
0x40000df	          0x83e2f8	                     and edx, 0xfffffff8	       248	format.c	FUNCTION_6
0x40000e2	             0x9d0	                             or eax, edx	       248	format.c	FUNCTION_6
0x40000e4	      0x41f6464704	               test byte [r14 + 0x47], 4	       253	format.c	FUNCTION_6	IF_6
0x40000e9	        0x41884644	               mov byte [r14 + 0x44], al	       248	format.c	FUNCTION_6
0x40000ed	        0x498b4608	                mov rax, qword [r14 + 8]	       249	format.c	FUNCTION_6
0x40000f1	      0x4889442410	             mov qword [rsp + 0x10], rax	       249	format.c	FUNCTION_6
0x40000f6	     0xf84a9020000	                            je 0x40003a5	       253	format.c	FUNCTION_6	IF_6
0x40000fc	    0x8b0500000000	            mov eax, dword [0x04000102] 	       287	format.c	FUNCTION_6
0x4000102	    0x488b1d000000	            mov rbx, qword [0x04000109] 	       289	format.c	FUNCTION_6	FOR_1
0x4000109	        0x89442434	             mov dword [rsp + 0x34], eax	       287	format.c	FUNCTION_6
0x400010d	          0x488b03	                    mov rax, qword [rbx]	       289	format.c	FUNCTION_6	FOR_1
0x4000110	          0x4885c0	                           test rax, rax	       289	format.c	FUNCTION_6	FOR_1
0x4000113	     0xf849c070000	                            je 0x40008b5	       289	format.c	FUNCTION_6	FOR_1
0x4000119	     0xfb60d000000	           movzx ecx, byte [0x04000120] 	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x4000120	            0x31ed	                            xor ebp, ebp	       289	format.c	FUNCTION_6	FOR_1
0x4000122	            0x31f6	                            xor esi, esi	       289	format.c	FUNCTION_6	FOR_1
0x4000124	          0x4531ff	                          xor r15d, r15d	       289	format.c	FUNCTION_6	FOR_1
0x4000127	      0x48896c2438	             mov qword [rsp + 0x38], rbp	       185	format.c	FUNCTION_5	CALL_1
0x400012c	          0x4d89f4	                            mov r12, r14	       185	format.c	FUNCTION_5	CALL_1
0x400012f	    0xc74424080001	              mov dword [rsp + 8], 0x100	       289	format.c	FUNCTION_6	FOR_1
0x4000137	    0xc74424300000	               mov dword [rsp + 0x30], 0	       289	format.c	FUNCTION_6	FOR_1
0x400013f	            0x89f5	                            mov ebp, esi	       185	format.c	FUNCTION_5	CALL_1
0x4000141	    0x48c744242800	               mov qword [rsp + 0x28], 0	       289	format.c	FUNCTION_6	FOR_1
0x400014a	        0x894c240c	              mov dword [rsp + 0xc], ecx	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x400014e	        0x498d4e68	                   lea rcx, [r14 + 0x68]	       136	format.c	FUNCTION_2	CALL_2
0x4000152	          0x4d89fe	                            mov r14, r15	       185	format.c	FUNCTION_5	CALL_1
0x4000155	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       136	format.c	FUNCTION_2	CALL_2
0x400015a	      0xe900010000	                           jmp 0x400025f	       136	format.c	FUNCTION_2	CALL_2
0x400015f	              0x90	                                     nop	       136	format.c	FUNCTION_2	CALL_2
0x4000160	     0xf8e70070000	                           jle 0x40008d6	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x4000166	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	       123	format.c	FUNCTION_2
0x400016e	      0xbe01000000	                              mov esi, 1	       131	format.c	FUNCTION_2	CALL_1
0x4000173	          0x4c89e7	                            mov rdi, r12	       131	format.c	FUNCTION_2	CALL_1
0x4000176	      0x4889442448	             mov qword [rsp + 0x48], rax	       123	format.c	FUNCTION_2
0x400017b	    0x498b8424c000	            mov rax, qword [r12 + 0xc0] 	       124	format.c	FUNCTION_2
0x4000183	      0x4889442458	             mov qword [rsp + 0x58], rax	       124	format.c	FUNCTION_2
0x4000188	      0x418b442444	            mov eax, dword [r12 + 0x44] 	       125	format.c	FUNCTION_2
0x400018d	          0xc1e805	                              shr eax, 5	       125	format.c	FUNCTION_2
0x4000190	      0x25ffff0f00	                        and eax, 0xfffff	       125	format.c	FUNCTION_2
0x4000195	        0x89442450	             mov dword [rsp + 0x50], eax	       125	format.c	FUNCTION_2
0x4000199	    0x498b84249000	            mov rax, qword [r12 + 0x90] 	       126	format.c	FUNCTION_2
0x40001a1	      0x4889442460	             mov qword [rsp + 0x60], rax	       126	format.c	FUNCTION_2
0x40001a6	    0x498b84249800	            mov rax, qword [r12 + 0x98] 	       127	format.c	FUNCTION_2
0x40001ae	      0x4889442468	             mov qword [rsp + 0x68], rax	       127	format.c	FUNCTION_2
0x40001b3	    0x418b8424a000	            mov eax, dword [r12 + 0xa0] 	       128	format.c	FUNCTION_2
0x40001bb	        0x89442470	             mov dword [rsp + 0x70], eax	       128	format.c	FUNCTION_2
0x40001bf	    0x8b0500000000	            mov eax, dword [0x040001c5] 	       129	format.c	FUNCTION_2
0x40001c5	        0x89442474	             mov dword [rsp + 0x74], eax	       129	format.c	FUNCTION_2
0x40001c9	      0x498b442468	            mov rax, qword [r12 + 0x68] 	       130	format.c	FUNCTION_2
0x40001ce	      0x4889442478	             mov qword [rsp + 0x78], rax	       130	format.c	FUNCTION_2
0x40001d3	      0x498b442470	            mov rax, qword [r12 + 0x70] 	       130	format.c	FUNCTION_2
0x40001d8	    0x488984248000	             mov qword [rsp + 0x80], rax	       130	format.c	FUNCTION_2
0x40001e0	      0x498b442478	            mov rax, qword [r12 + 0x78] 	       130	format.c	FUNCTION_2
0x40001e5	    0x488984248800	             mov qword [rsp + 0x88], rax	       130	format.c	FUNCTION_2
0x40001ed	    0x498b84248000	            mov rax, qword [r12 + 0x80] 	       130	format.c	FUNCTION_2
0x40001f5	    0x488984249000	             mov qword [rsp + 0x90], rax	       130	format.c	FUNCTION_2
0x40001fd	    0x498b84248800	            mov rax, qword [r12 + 0x88] 	       130	format.c	FUNCTION_2
0x4000205	    0x488984249800	             mov qword [rsp + 0x98], rax	       130	format.c	FUNCTION_2
0x400020d	      0xe800000000	                          call 0x4000212	       131	format.c	FUNCTION_2	CALL_1
0x4000212	    0x498b94241001	           mov rdx, qword [r12 + 0x110] 	       132	format.c	FUNCTION_2
0x400021a	          0x4885c0	                           test rax, rax	       133	format.c	FUNCTION_2	IF_1
0x400021d	      0x4889442440	             mov qword [rsp + 0x40], rax	       131	format.c	FUNCTION_2	CALL_1
0x4000222	    0x48899424a000	             mov qword [rsp + 0xa0], rdx	       132	format.c	FUNCTION_2
0x400022a	     0xf84e0020000	                            je 0x4000510	       133	format.c	FUNCTION_2	IF_1
0x4000230	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       136	format.c	FUNCTION_2	CALL_2
0x4000235	      0xba30010000	                          mov edx, 0x130	       136	format.c	FUNCTION_2	CALL_2
0x400023a	      0xbe00000000	                              mov esi, 0	       136	format.c	FUNCTION_2	CALL_2
0x400023f	      0xe800000000	                          call 0x4000244	       136	format.c	FUNCTION_2	CALL_2
0x4000244	            0x85c0	                           test eax, eax	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x4000246	     0xf84c4020000	                            je 0x4000510	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x400024c	          0x4d89fe	                            mov r14, r15	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x400024f	        0x4883c308	                              add rbx, 8	       289	format.c	FUNCTION_6	FOR_1
0x4000253	          0x488b03	                    mov rax, qword [rbx]	       289	format.c	FUNCTION_6	FOR_1
0x4000256	          0x4885c0	                           test rax, rax	       289	format.c	FUNCTION_6	FOR_1
0x4000259	     0xf84fa020000	                            je 0x4000559	       289	format.c	FUNCTION_6	FOR_1
0x400025f	    0x483d00000000	                              cmp rax, 0	       294	format.c	FUNCTION_6	FOR_1	IF_10
0x4000265	            0x74e8	                            je 0x400024f	       294	format.c	FUNCTION_6	FOR_1	IF_10
0x4000267	    0x41f644244704	               test byte [r12 + 0x47], 4	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x400026d	            0x7507	                           jne 0x4000276	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x400026f	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x4000274	            0x74d9	                            je 0x400024f	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x4000276	    0x41816424441f	      and dword [r12 + 0x44], 0xfffb001f	       147	format.c	FUNCTION_3
0x400027f	          0x4c89e7	                            mov rdi, r12	       148	format.c	FUNCTION_3	CALL_1
0x4000282	    0x49c78424f800	               mov qword [r12 + 0xf8], 0	       145	format.c	FUNCTION_3
0x400028e	    0x49c78424c000	               mov qword [r12 + 0xc0], 0	       146	format.c	FUNCTION_3
0x400029a	      0xe800000000	                          call 0x400029f	       148	format.c	FUNCTION_3	CALL_1
0x400029f	        0x8b442404	                mov eax, dword [rsp + 4]	       149	format.c	FUNCTION_3
0x40002a3	            0x31d2	                            xor edx, edx	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x40002a5	            0x31f6	                            xor esi, esi	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x40002a7	          0x4c89e7	                            mov rdi, r12	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x40002aa	    0x890500000000	            mov dword [0x040002b0], eax 	       149	format.c	FUNCTION_3
0x40002b0	          0x488b03	                    mov rax, qword [rbx]	       304	format.c	FUNCTION_6	FOR_1
0x40002b3	      0x4989442408	                mov qword [r12 + 8], rax	       304	format.c	FUNCTION_6	FOR_1
0x40002b8	      0xe800000000	                          call 0x40002bd	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x40002bd	            0x85c0	                           test eax, eax	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x40002bf	     0xf854b020000	                           jne 0x4000510	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x40002c5	      0xbf03000000	                              mov edi, 3	       313	format.c	FUNCTION_6	FOR_1	CALL_8
0x40002ca	      0xe800000000	                          call 0x40002cf	       313	format.c	FUNCTION_6	FOR_1	CALL_8
0x40002cf	    0x410fb6442444	           movzx eax, byte [r12 + 0x44] 	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x40002d5	      0x498b542408	                mov rdx, qword [r12 + 8]	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x40002da	          0x4c89e7	                            mov rdi, r12	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x40002dd	          0x83e007	                              and eax, 7	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x40002e0	    0xff94c2b00000	        call qword [rdx + rax*8 + 0xb0] 	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x40002e7	          0x4885c0	                           test rax, rax	       316	format.c	FUNCTION_6	FOR_1	IF_12
0x40002ea	          0x4989c7	                            mov r15, rax	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x40002ed	     0xf8405020000	                            je 0x40004f8	       316	format.c	FUNCTION_6	FOR_1	IF_12
0x40002f3	    0x48813b000000	                      cmp qword [rbx], 0	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x40002fa	      0x440fb6701f	          movzx r14d, byte [rax + 0x1f] 	       318	format.c	FUNCTION_6	FOR_1	IF_12
0x40002ff	    0x440f4474240c	           cmove r14d, dword [rsp + 0xc]	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x4000305	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       329	format.c	FUNCTION_6	FOR_1	IF_12	IF_14
0x400030b	            0x7413	                            je 0x4000320	       329	format.c	FUNCTION_6	FOR_1	IF_12	IF_14
0x400030d	      0x488d7c2478	                   lea rdi, [rsp + 0x78]	       185	format.c	FUNCTION_5	CALL_1
0x4000312	      0xe800000000	                          call 0x4000317	       185	format.c	FUNCTION_5	CALL_1
0x4000317	    0x48c744244000	               mov qword [rsp + 0x40], 0	       186	format.c	FUNCTION_5
0x4000320	    0x410fb6442444	           movzx eax, byte [r12 + 0x44] 	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x4000326	          0x83e007	                              and eax, 7	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x4000329	            0x3c02	                               cmp al, 2	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x400032b	     0xf8487010000	                            je 0x40004b8	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x4000331	    0x4c3b3d000000	            cmp r15, qword [0x04000338] 	       339	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_16
0x4000338	     0xf8468040000	                            je 0x40007a6	       339	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_16
0x400033e	          0x4d85ed	                           test r13, r13	       342	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000341	            0x7408	                            je 0x400034b	       342	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000343	          0x4863c5	                         movsxd rax, ebp	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x4000346	      0x4d897cc500	            mov qword [r13 + rax*8], r15	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x400034b	          0x83c501	                              add ebp, 1	       344	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x400034e	      0x443b742408	               cmp r14d, dword [rsp + 8]	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000353	     0xf8d07feffff	                           jge 0x4000160	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000359	    0xc74424300100	               mov dword [rsp + 0x30], 1	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000361	      0x4489742408	               mov dword [rsp + 8], r14d	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000366	      0x4c897c2438	             mov qword [rsp + 0x38], r15	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x400036b	      0xe9f6fdffff	                           jmp 0x4000166	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x4000370	      0xbf05000000	                              mov edi, 5	       230	format.c	FUNCTION_6	IF_2	CALL_2
0x4000375	      0xe800000000	                          call 0x400037a	       230	format.c	FUNCTION_6	IF_2	CALL_2
0x400037a	            0x31c0	                            xor eax, eax	       231	format.c	FUNCTION_6	IF_2
0x400037c	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	       510	format.c	FUNCTION_6
0x4000384	    0x644833342528	                xor rsi, qword fs:[0x28]	       510	format.c	FUNCTION_6
0x400038d	     0xf8552050000	                           jne 0x40008e5	       510	format.c	FUNCTION_6
0x4000393	    0x4881c4b80000	                           add rsp, 0xb8	       510	format.c	FUNCTION_6
0x400039a	              0x5b	                                 pop rbx	       510	format.c	FUNCTION_6
0x400039b	              0x5d	                                 pop rbp	       510	format.c	FUNCTION_6
0x400039c	            0x415c	                                 pop r12	       510	format.c	FUNCTION_6
0x400039e	            0x415d	                                 pop r13	       510	format.c	FUNCTION_6
0x40003a0	            0x415e	                                 pop r14	       510	format.c	FUNCTION_6
0x40003a2	            0x415f	                                 pop r15	       510	format.c	FUNCTION_6
0x40003a4	              0xc3	                                     ret	       510	format.c	FUNCTION_6
0x40003a5	            0x31d2	                            xor edx, edx	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40003a7	            0x31f6	                            xor esi, esi	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40003a9	          0x4c89f7	                            mov rdi, r14	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40003ac	      0xe800000000	                          call 0x40003b1	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40003b1	            0x85c0	                           test eax, eax	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40003b3	     0xf84f2030000	                            je 0x40007ab	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40003b9	     0xf1f80000000	                         nop dword [rax]	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x40003c0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       483	format.c	FUNCTION_6	IF_39
0x40003c5	      0x41806644f8	             and byte [r14 + 0x44], 0xf8	       484	format.c	FUNCTION_6	IF_39
0x40003ca	          0x4d85ed	                           test r13, r13	       485	format.c	FUNCTION_6	IF_39	IF_40
0x40003cd	        0x49894608	                mov qword [r14 + 8], rax	       483	format.c	FUNCTION_6	IF_39
0x40003d1	            0x7408	                            je 0x40003db	       485	format.c	FUNCTION_6	IF_39	IF_40
0x40003d3	          0x4c89ef	                            mov rdi, r13	       486	format.c	FUNCTION_6	IF_39	CALL_23
0x40003d6	      0xe800000000	                          call 0x40003db	       486	format.c	FUNCTION_6	IF_39	CALL_23
0x40003db	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       487	format.c	FUNCTION_6	IF_39	IF_41
0x40003e1	     0xf84c5000000	                            je 0x40004ac	       487	format.c	FUNCTION_6	IF_39	IF_41
0x40003e7	        0x498d7e68	                   lea rdi, [r14 + 0x68]	       157	format.c	FUNCTION_4	CALL_1
0x40003eb	      0xe800000000	                          call 0x40003f0	       157	format.c	FUNCTION_4	CALL_1
0x40003f0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       159	format.c	FUNCTION_4
0x40003f5	        0x418b5644	            mov edx, dword [r14 + 0x44] 	       161	format.c	FUNCTION_4
0x40003f9	          0x4c89f7	                            mov rdi, r14	       171	format.c	FUNCTION_4	CALL_2
0x40003fc	    0x498986f80000	             mov qword [r14 + 0xf8], rax	       159	format.c	FUNCTION_4
0x4000403	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       160	format.c	FUNCTION_4
0x4000408	    0x81e21f0000fe	                     and edx, 0xfe00001f	       161	format.c	FUNCTION_4
0x400040e	    0x498986c00000	             mov qword [r14 + 0xc0], rax	       160	format.c	FUNCTION_4
0x4000415	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       161	format.c	FUNCTION_4
0x4000419	      0x25ffff0f00	                        and eax, 0xfffff	       161	format.c	FUNCTION_4
0x400041e	          0xc1e005	                              shl eax, 5	       161	format.c	FUNCTION_4
0x4000421	             0x9d0	                             or eax, edx	       161	format.c	FUNCTION_4
0x4000423	        0x41894644	             mov dword [r14 + 0x44], eax	       161	format.c	FUNCTION_4
0x4000427	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       162	format.c	FUNCTION_4
0x400042c	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       171	format.c	FUNCTION_4	CALL_2
0x4000431	        0x49894668	             mov qword [r14 + 0x68], rax	       162	format.c	FUNCTION_4
0x4000435	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       162	format.c	FUNCTION_4
0x400043d	        0x49894670	             mov qword [r14 + 0x70], rax	       162	format.c	FUNCTION_4
0x4000441	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       162	format.c	FUNCTION_4
0x4000449	        0x49894678	             mov qword [r14 + 0x78], rax	       162	format.c	FUNCTION_4
0x400044d	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       162	format.c	FUNCTION_4
0x4000455	    0x498986800000	             mov qword [r14 + 0x80], rax	       162	format.c	FUNCTION_4
0x400045c	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       162	format.c	FUNCTION_4
0x4000464	    0x498986880000	             mov qword [r14 + 0x88], rax	       162	format.c	FUNCTION_4
0x400046b	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       163	format.c	FUNCTION_4
0x4000470	    0x498986900000	             mov qword [r14 + 0x90], rax	       163	format.c	FUNCTION_4
0x4000477	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       164	format.c	FUNCTION_4
0x400047c	    0x498986980000	             mov qword [r14 + 0x98], rax	       164	format.c	FUNCTION_4
0x4000483	        0x8b442470	            mov eax, dword [rsp + 0x70] 	       165	format.c	FUNCTION_4
0x4000487	    0x418986a00000	             mov dword [r14 + 0xa0], eax	       165	format.c	FUNCTION_4
0x400048e	        0x8b442474	            mov eax, dword [rsp + 0x74] 	       166	format.c	FUNCTION_4
0x4000492	    0x890500000000	            mov dword [0x04000498], eax 	       166	format.c	FUNCTION_4
0x4000498	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       167	format.c	FUNCTION_4
0x40004a0	    0x498986100100	            mov qword [r14 + 0x110], rax	       167	format.c	FUNCTION_4
0x40004a7	      0xe800000000	                          call 0x40004ac	       171	format.c	FUNCTION_4	CALL_2
0x40004ac	            0x31c0	                            xor eax, eax	       489	format.c	FUNCTION_6	IF_39
0x40004ae	      0xe9c9feffff	                           jmp 0x400037c	       489	format.c	FUNCTION_6	IF_39
0x40004b3	       0xf1f440000	                   nop dword [rax + rax]	       489	format.c	FUNCTION_6	IF_39
0x40004b8	    0x41807c244700	                cmp byte [r12 + 0x47], 0	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x40004be	            0x7870	                            js 0x4000530	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x40004c0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40004c5	    0x483905000000	            cmp qword [0x040004cc], rax 	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40004cc	            0x7408	                            je 0x40004d6	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40004ce	          0x488b03	                    mov rax, qword [rbx]	       364	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40004d1	      0x4889442428	             mov qword [rsp + 0x28], rax	       364	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40004d6	          0x4d85ed	                           test r13, r13	       365	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40004d9	            0x740d	                            je 0x40004e8	       365	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40004db	      0x4863442434	         movsxd rax, dword [rsp + 0x34] 	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40004e0	          0x488b13	                    mov rdx, qword [rbx]	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40004e3	      0x498954c500	            mov qword [r13 + rax*8], rdx	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x40004e8	      0x8344243401	               add dword [rsp + 0x34], 1	       367	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1
0x40004ed	      0xe974fcffff	                           jmp 0x4000166	       367	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1
0x40004f2	    0x660f1f440000	                    nop word [rax + rax]	       367	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1
0x40004f8	      0xe800000000	                          call 0x40004fd	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x40004fd	          0x83f803	                              cmp eax, 3	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000500	     0xf8449fdffff	                            je 0x400024f	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000510	          0x4d89e6	                            mov r14, r12	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000513	      0xe9a8feffff	                           jmp 0x40003c0	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000518	     0xf1f84000000	                   nop dword [rax + rax]	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000520	           0xfb6c0	                           movzx eax, al	       235	format.c	FUNCTION_6	IF_3
0x4000523	            0x39d8	                            cmp eax, ebx	       235	format.c	FUNCTION_6	IF_3
0x4000525	           0xf94c0	                                 sete al	       235	format.c	FUNCTION_6	IF_3
0x4000528	           0xfb6c0	                           movzx eax, al	       235	format.c	FUNCTION_6	IF_3
0x400052b	      0xe94cfeffff	                           jmp 0x400037c	       235	format.c	FUNCTION_6	IF_3
0x4000530	      0xe800000000	                          call 0x4000535	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x4000535	          0x83f804	                              cmp eax, 4	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x4000538	     0xf85f3fdffff	                           jne 0x4000331	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x400053e	            0xeb80	                           jmp 0x40004c0	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x4000540	    0x488b05000000	            mov rax, qword [0x04000547] 	       237	format.c	FUNCTION_6	IF_4
0x4000547	        0x48833800	                      cmp qword [rax], 0	       237	format.c	FUNCTION_6	IF_4
0x400054b	     0xf855ffbffff	                           jne 0x40000b0	       237	format.c	FUNCTION_6	IF_4
0x4000551	          0x4531ed	                          xor r13d, r13d	       217	format.c	FUNCTION_6
0x4000554	      0xe973fbffff	                           jmp 0x40000cc	       217	format.c	FUNCTION_6
0x4000559	      0x837c243001	               cmp dword [rsp + 0x30], 1	       377	format.c	FUNCTION_6	IF_24
0x400055e	          0x4d89f7	                            mov r15, r14	       377	format.c	FUNCTION_6	IF_24
0x4000561	            0x89e8	                            mov eax, ebp	       377	format.c	FUNCTION_6	IF_24
0x4000563	        0x896c240c	              mov dword [rsp + 0xc], ebp	       377	format.c	FUNCTION_6	IF_24
0x4000567	          0x4d89e6	                            mov r14, r12	       377	format.c	FUNCTION_6	IF_24
0x400056a	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	       377	format.c	FUNCTION_6	IF_24
0x400056f	     0xf8492000000	                            je 0x4000607	       377	format.c	FUNCTION_6	IF_24
0x4000575	            0x85c0	                           test eax, eax	       380	format.c	FUNCTION_6	IF_25
0x4000577	     0xf85f5020000	                           jne 0x4000872	       380	format.c	FUNCTION_6	IF_25
0x400057d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       385	format.c	FUNCTION_6	IF_25	IF_26
0x4000582	    0x483905000000	            cmp qword [0x04000589], rax 	       385	format.c	FUNCTION_6	IF_25	IF_26
0x4000589	     0xf8416030000	                            je 0x40008a5	       385	format.c	FUNCTION_6	IF_25	IF_26
0x400058f	        0x8b442434	            mov eax, dword [rsp + 0x34] 	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x4000593	    0x2b0500000000	             sub eax, dword [0x04000599]	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x4000599	          0x4d85ed	                           test r13, r13	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x400059c	        0x8944240c	              mov dword [rsp + 0xc], eax	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x40005a0	            0x7409	                            je 0x40005ab	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40005a2	          0x83f801	                              cmp eax, 1	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40005a5	     0xf8fd1020000	                            jg 0x400087c	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x40005ab	          0x83f801	                              cmp eax, 1	       403	format.c	FUNCTION_6	IF_28
0x40005ae	     0xf8e8a030000	                           jle 0x400093e	       403	format.c	FUNCTION_6	IF_28
0x40005b4	          0x4863d8	                         movsxd rbx, eax	       403	format.c	FUNCTION_6	IF_28
0x40005b7	          0x4189c1	                            mov r9d, eax	       403	format.c	FUNCTION_6	IF_28
0x40005ba	    0x488b3d000000	            mov rdi, qword [0x040005c1] 	       405	format.c	FUNCTION_6	IF_28
0x40005c1	        0x8b742408	                mov esi, dword [rsp + 8]	       405	format.c	FUNCTION_6	IF_28
0x40005c5	      0x4d8d44dd00	                   lea r8, [r13 + rbx*8]	       405	format.c	FUNCTION_6	IF_28
0x40005ca	    0x660f1f440000	                    nop word [rax + rax]	       405	format.c	FUNCTION_6	IF_28
0x40005d0	        0x4883c708	                              add rdi, 8	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005d4	        0x488b6ff8	                mov rbp, qword [rdi - 8]	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005d8	          0x4885ed	                           test rbp, rbp	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005db	     0xf841d030000	                            je 0x40008fe	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005e1	          0x4c89c2	                             mov rdx, r8	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005e4	          0x4489c8	                            mov eax, r9d	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005e7	            0xeb0b	                           jmp 0x40005f4	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005e9	     0xf1f80000000	                         nop dword [rax]	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005f0	        0x4883ea08	                              sub rdx, 8	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40005f4	          0x83e801	                              sub eax, 1	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x40005f7	            0x78d7	                            js 0x40005d0	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x40005f9	        0x483b6af8	                cmp rbp, qword [rdx - 8]	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40005fd	            0x75f1	                           jne 0x40005f0	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40005ff	         0xfb64d1f	           movzx ecx, byte [rbp + 0x1f] 	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000603	            0x39f1	                            cmp ecx, esi	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000605	            0x7fe9	                            jg 0x40005f0	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x4000607	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       437	format.c	FUNCTION_6	IF_31
0x400060f	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       444	format.c	FUNCTION_6	IF_33
0x4000615	     0xf84ce000000	                            je 0x40006e9	       444	format.c	FUNCTION_6	IF_33
0x400061b	        0x498d7e68	                   lea rdi, [r14 + 0x68]	       157	format.c	FUNCTION_4	CALL_1
0x400061f	      0xe800000000	                          call 0x4000624	       157	format.c	FUNCTION_4	CALL_1
0x4000624	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       159	format.c	FUNCTION_4
0x4000629	        0x418b5644	            mov edx, dword [r14 + 0x44] 	       161	format.c	FUNCTION_4
0x400062d	          0x4c89f7	                            mov rdi, r14	       171	format.c	FUNCTION_4	CALL_2
0x4000630	    0x498986f80000	             mov qword [r14 + 0xf8], rax	       159	format.c	FUNCTION_4
0x4000637	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       160	format.c	FUNCTION_4
0x400063c	    0x81e21f0000fe	                     and edx, 0xfe00001f	       161	format.c	FUNCTION_4
0x4000642	    0x498986c00000	             mov qword [r14 + 0xc0], rax	       160	format.c	FUNCTION_4
0x4000649	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       161	format.c	FUNCTION_4
0x400064d	      0x25ffff0f00	                        and eax, 0xfffff	       161	format.c	FUNCTION_4
0x4000652	          0xc1e005	                              shl eax, 5	       161	format.c	FUNCTION_4
0x4000655	             0x9d0	                             or eax, edx	       161	format.c	FUNCTION_4
0x4000657	        0x41894644	             mov dword [r14 + 0x44], eax	       161	format.c	FUNCTION_4
0x400065b	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       162	format.c	FUNCTION_4
0x4000660	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       171	format.c	FUNCTION_4	CALL_2
0x4000665	        0x49894668	             mov qword [r14 + 0x68], rax	       162	format.c	FUNCTION_4
0x4000669	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       162	format.c	FUNCTION_4
0x4000671	        0x49894670	             mov qword [r14 + 0x70], rax	       162	format.c	FUNCTION_4
0x4000675	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       162	format.c	FUNCTION_4
0x400067d	        0x49894678	             mov qword [r14 + 0x78], rax	       162	format.c	FUNCTION_4
0x4000681	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       162	format.c	FUNCTION_4
0x4000689	    0x498986800000	             mov qword [r14 + 0x80], rax	       162	format.c	FUNCTION_4
0x4000690	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       162	format.c	FUNCTION_4
0x4000698	    0x498986880000	             mov qword [r14 + 0x88], rax	       162	format.c	FUNCTION_4
0x400069f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       163	format.c	FUNCTION_4
0x40006a4	    0x498986900000	             mov qword [r14 + 0x90], rax	       163	format.c	FUNCTION_4
0x40006ab	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       164	format.c	FUNCTION_4
0x40006b0	    0x498986980000	             mov qword [r14 + 0x98], rax	       164	format.c	FUNCTION_4
0x40006b7	        0x8b442470	            mov eax, dword [rsp + 0x70] 	       165	format.c	FUNCTION_4
0x40006bb	    0x418986a00000	             mov dword [r14 + 0xa0], eax	       165	format.c	FUNCTION_4
0x40006c2	        0x8b442474	            mov eax, dword [rsp + 0x74] 	       166	format.c	FUNCTION_4
0x40006c6	    0x890500000000	            mov dword [0x040006cc], eax 	       166	format.c	FUNCTION_4
0x40006cc	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       167	format.c	FUNCTION_4
0x40006d4	    0x498986100100	            mov qword [r14 + 0x110], rax	       167	format.c	FUNCTION_4
0x40006db	      0xe800000000	                          call 0x40006e0	       171	format.c	FUNCTION_4	CALL_2
0x40006e0	    0x48c744244000	               mov qword [rsp + 0x40], 0	       172	format.c	FUNCTION_4
0x40006e9	      0x837c240c01	                cmp dword [rsp + 0xc], 1	       447	format.c	FUNCTION_6	IF_34
0x40006ee	            0x741b	                            je 0x400070b	       447	format.c	FUNCTION_6	IF_34
0x40006f0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       478	format.c	FUNCTION_6	IF_39
0x40006f4	            0x85c0	                           test eax, eax	       478	format.c	FUNCTION_6	IF_39
0x40006f6	     0xf85f3000000	                           jne 0x40007ef	       478	format.c	FUNCTION_6	IF_39
0x40006fc	      0xbf0c000000	                            mov edi, 0xc	       481	format.c	FUNCTION_6	IF_39	CALL_22
0x4000701	      0xe800000000	                          call 0x4000706	       481	format.c	FUNCTION_6	IF_39	CALL_22
0x4000706	      0xe9b5fcffff	                           jmp 0x40003c0	       481	format.c	FUNCTION_6	IF_39	CALL_22
0x400070b	          0x4c39fd	                            cmp rbp, r15	       453	format.c	FUNCTION_6	IF_34	IF_35
0x400070e	        0x49896e08	                mov qword [r14 + 8], rbp	       449	format.c	FUNCTION_6	IF_34
0x4000712	            0x7463	                            je 0x4000777	       453	format.c	FUNCTION_6	IF_34	IF_35
0x4000714	    0x418166441f00	      and dword [r14 + 0x44], 0xfffb001f	       147	format.c	FUNCTION_3
0x400071c	          0x4c89f7	                            mov rdi, r14	       148	format.c	FUNCTION_3	CALL_1
0x400071f	    0x49c786f80000	               mov qword [r14 + 0xf8], 0	       145	format.c	FUNCTION_3
0x400072a	    0x49c786c00000	               mov qword [r14 + 0xc0], 0	       146	format.c	FUNCTION_3
0x4000735	      0xe800000000	                          call 0x400073a	       148	format.c	FUNCTION_3	CALL_1
0x400073a	        0x8b442404	                mov eax, dword [rsp + 4]	       149	format.c	FUNCTION_3
0x400073e	            0x31d2	                            xor edx, edx	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000740	            0x31f6	                            xor esi, esi	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000742	          0x4c89f7	                            mov rdi, r14	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000745	    0x890500000000	            mov dword [0x0400074b], eax 	       149	format.c	FUNCTION_3
0x400074b	      0xe800000000	                          call 0x4000750	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000750	            0x85c0	                           test eax, eax	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000752	     0xf8568fcffff	                           jne 0x40003c0	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000758	      0x410fb64644	           movzx eax, byte [r14 + 0x44] 	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x400075d	        0x498b5608	                mov rdx, qword [r14 + 8]	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000761	          0x4c89f7	                            mov rdi, r14	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000764	          0x83e007	                              and eax, 7	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000767	    0xff94c2b00000	        call qword [rdx + rax*8 + 0xb0] 	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x400076e	          0x4885c0	                           test rax, rax	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x4000771	     0xf8473010000	                            je 0x40008ea	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x4000777	      0x410fb64644	           movzx eax, byte [r14 + 0x44] 	       468	format.c	FUNCTION_6	IF_34	IF_37
0x400077c	          0x83e018	                           and eax, 0x18	       468	format.c	FUNCTION_6	IF_34	IF_37
0x400077f	            0x3c18	                            cmp al, 0x18	       468	format.c	FUNCTION_6	IF_34	IF_37
0x4000781	            0x7465	                            je 0x40007e8	       468	format.c	FUNCTION_6	IF_34	IF_37
0x4000783	          0x4d85ed	                           test r13, r13	       471	format.c	FUNCTION_6	IF_34	IF_38
0x4000786	      0xb801000000	                              mov eax, 1	       475	format.c	FUNCTION_6	IF_34
0x400078b	     0xf84ebfbffff	                            je 0x400037c	       471	format.c	FUNCTION_6	IF_34	IF_38
0x4000791	          0x4c89ef	                            mov rdi, r13	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x4000794	        0x89442404	                mov dword [rsp + 4], eax	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x4000798	      0xe800000000	                          call 0x400079d	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x400079d	        0x8b442404	                mov eax, dword [rsp + 4]	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x40007a1	      0xe9d6fbffff	                           jmp 0x400037c	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x40007a6	          0x4d89e6	                            mov r14, r12	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x40007a9	            0xebcc	                           jmp 0x4000777	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x40007ab	      0x410fb64644	           movzx eax, byte [r14 + 0x44] 	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x40007b0	        0x498b5608	                mov rdx, qword [r14 + 8]	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x40007b4	          0x4c89f7	                            mov rdi, r14	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x40007b7	          0x83e007	                              and eax, 7	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x40007ba	    0xff94c2b00000	        call qword [rdx + rax*8 + 0xb0] 	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x40007c1	          0x4885c0	                           test rax, rax	       260	format.c	FUNCTION_6	IF_6	IF_8
0x40007c4	            0x75b1	                           jne 0x4000777	       260	format.c	FUNCTION_6	IF_6	IF_8
0x40007c6	    0x48817c241000	               cmp qword [rsp + 0x10], 0	       275	format.c	FUNCTION_6	IF_6	IF_9
0x40007cf	     0xf8527f9ffff	                           jne 0x40000fc	       275	format.c	FUNCTION_6	IF_6	IF_9
0x40007d5	          0x83fb02	                              cmp ebx, 2	       275	format.c	FUNCTION_6	IF_6	IF_9
0x40007d8	     0xf851ef9ffff	                           jne 0x40000fc	       275	format.c	FUNCTION_6	IF_6	IF_9
0x40007de	      0xe919ffffff	                           jmp 0x40006fc	       275	format.c	FUNCTION_6	IF_6	IF_9
0x40007e3	       0xf1f440000	                   nop dword [rax + rax]	       275	format.c	FUNCTION_6	IF_6	IF_9
0x40007e8	      0x41804e4740	              or byte [r14 + 0x47], 0x40	       469	format.c	FUNCTION_6	IF_34	IF_37
0x40007ed	            0xeb94	                           jmp 0x4000783	       469	format.c	FUNCTION_6	IF_34	IF_37
0x40007ef	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       493	format.c	FUNCTION_6
0x40007f4	      0x41806644f8	             and byte [r14 + 0x44], 0xf8	       494	format.c	FUNCTION_6
0x40007f9	      0xbf0d000000	                            mov edi, 0xd	       495	format.c	FUNCTION_6	CALL_25
0x40007fe	        0x49894608	                mov qword [r14 + 8], rax	       493	format.c	FUNCTION_6
0x4000802	      0xe800000000	                          call 0x4000807	       495	format.c	FUNCTION_6	CALL_25
0x4000807	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       497	format.c	FUNCTION_6	IF_42
0x400080c	          0x4885c0	                           test rax, rax	       497	format.c	FUNCTION_6	IF_42
0x400080f	     0xf8497fcffff	                            je 0x40004ac	       497	format.c	FUNCTION_6	IF_42
0x4000815	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       500	format.c	FUNCTION_6	IF_42
0x4000819	          0x4c8928	                    mov qword [rax], r13	       499	format.c	FUNCTION_6	IF_42
0x400081c	          0x4863c1	                         movsxd rax, ecx	       500	format.c	FUNCTION_6	IF_42
0x400081f	    0x488d14c50000	                        lea rdx, [rax*8]	       500	format.c	FUNCTION_6	IF_42
0x4000827	    0x49c744c50000	              mov qword [r13 + rax*8], 0	       500	format.c	FUNCTION_6	IF_42
0x4000830	            0x89c8	                            mov eax, ecx	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000832	          0x83e801	                              sub eax, 1	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000835	          0x4189c4	                           mov r12d, eax	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000838	     0xf886efcffff	                            js 0x40004ac	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x400083e	      0x498d4415f8	                lea rax, [r13 + rdx - 8]	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000843	          0x4963d4	                        movsxd rdx, r12d	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000846	          0x4589e4	                          mov r12d, r12d	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000849	          0x4c29e2	                            sub rdx, r12	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x400084c	      0x498d4cd5f8	              lea rcx, [r13 + rdx*8 - 8]	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000851	     0xf1f80000000	                         nop dword [rax]	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000858	          0x488b10	                    mov rdx, qword [rax]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x400085b	        0x4883e808	                              sub rax, 8	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x400085f	          0x488b12	                    mov rdx, qword [rdx]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000862	        0x48895008	                mov qword [rax + 8], rdx	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000866	          0x4839c8	                            cmp rax, rcx	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000869	            0x75ed	                           jne 0x4000858	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x400086b	            0x31c0	                            xor eax, eax	       489	format.c	FUNCTION_6	IF_39
0x400086d	      0xe90afbffff	                           jmp 0x400037c	       489	format.c	FUNCTION_6	IF_39
0x4000872	      0x48896c2428	             mov qword [rsp + 0x28], rbp	       489	format.c	FUNCTION_6	IF_39
0x4000877	      0xe92ffdffff	                           jmp 0x40005ab	       489	format.c	FUNCTION_6	IF_39
0x400087c	          0x4863d8	                         movsxd rbx, eax	        53	string3.h	FUNCTION_9	CALL_3
0x400087f	    0x488b05000000	            mov rax, qword [0x04000886] 	        53	string3.h	FUNCTION_9	CALL_3
0x4000886	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_9	CALL_3
0x4000889	    0x488d14dd0000	                        lea rdx, [rbx*8]	        53	string3.h	FUNCTION_9	CALL_3
0x4000891	      0x498d74c500	                  lea rsi, [r13 + rax*8]	        53	string3.h	FUNCTION_9	CALL_3
0x4000896	      0xe800000000	                          call 0x400089b	        53	string3.h	FUNCTION_9	CALL_3
0x400089b	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	        53	string3.h	FUNCTION_9	CALL_3
0x40008a0	      0xe915fdffff	                           jmp 0x40005ba	        53	string3.h	FUNCTION_9	CALL_3
0x40008a5	          0x4889c5	                            mov rbp, rax	        53	string3.h	FUNCTION_9	CALL_3
0x40008a8	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       387	format.c	FUNCTION_6	IF_25	IF_26
0x40008b0	      0xe95afdffff	                           jmp 0x400060f	       387	format.c	FUNCTION_6	IF_25	IF_26
0x40008b5	          0x4531ff	                          xor r15d, r15d	       283	format.c	FUNCTION_6
0x40008b8	    0xc74424080001	              mov dword [rsp + 8], 0x100	       284	format.c	FUNCTION_6
0x40008c0	    0x48c744242800	               mov qword [rsp + 0x28], 0	       282	format.c	FUNCTION_6
0x40008c9	    0xc74424300000	               mov dword [rsp + 0x30], 0	       285	format.c	FUNCTION_6
0x40008d1	      0xe9a7fcffff	                           jmp 0x400057d	       285	format.c	FUNCTION_6
0x40008d6	      0x8344243001	               add dword [rsp + 0x30], 1	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40008db	      0x448b742408	               mov r14d, dword [rsp + 8]	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40008e0	      0xe97cfaffff	                           jmp 0x4000361	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40008e5	      0xe800000000	                          call 0x40008ea	       510	format.c	FUNCTION_6
0x40008ea	      0xbecb010000	                          mov esi, 0x1cb	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40008ef	      0xbf00000000	                              mov edi, 0	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40008f4	      0xe800000000	                          call 0x40008f9	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40008f9	      0xe979feffff	                           jmp 0x4000777	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40008fe	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       427	format.c	FUNCTION_6	IF_31
0x4000902	        0x39742430	            cmp dword [rsp + 0x30], esi 	       427	format.c	FUNCTION_6	IF_31
0x4000906	           0xf95c0	                                setne al	       427	format.c	FUNCTION_6	IF_31
0x4000909	          0x4d85ed	                           test r13, r13	       427	format.c	FUNCTION_6	IF_31
0x400090c	     0xf84fdfcffff	                            je 0x400060f	       427	format.c	FUNCTION_6	IF_31
0x4000912	            0x84c0	                             test al, al	       427	format.c	FUNCTION_6	IF_31
0x4000914	     0xf84f5fcffff	                            je 0x400060f	       427	format.c	FUNCTION_6	IF_31
0x400091a	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       427	format.c	FUNCTION_6	IF_31
0x400091e	            0x31c0	                            xor eax, eax	       427	format.c	FUNCTION_6	IF_31
0x4000920	      0x498b6cc500	            mov rbp, qword [r13 + rax*8]	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x4000925	         0xfb6551f	           movzx edx, byte [rbp + 0x1f] 	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000929	            0x39ca	                            cmp edx, ecx	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x400092b	     0xf8ed6fcffff	                           jle 0x4000607	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000931	        0x4883c001	                              add rax, 1	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000935	            0x39c6	                            cmp esi, eax	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000937	            0x7fe7	                            jg 0x4000920	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000939	      0xe9c9fcffff	                           jmp 0x4000607	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x400093e	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000943	      0xe9c7fcffff	                           jmp 0x400060f	       431	format.c	FUNCTION_6	IF_31	FOR_2
bfd_format_string	FOR,0:DO,0:functions,0:SWITCH,1:ELSE,0:WHILE,0:CALL,0:IF,1	9
0x40009e0	          0x83ff03	                              cmp edi, 3	       567	format.c	FUNCTION_8	IF_1
0x40009e3	      0xb800000000	                              mov eax, 0	       569	format.c	FUNCTION_8	IF_1
0x40009e8	            0x7715	                            ja 0x40009ff	       567	format.c	FUNCTION_8	IF_1
0x40009ea	          0x83ef01	                              sub edi, 1	       567	format.c	FUNCTION_8	IF_1
0x40009ed	      0xb800000000	                              mov eax, 0	       567	format.c	FUNCTION_8	IF_1
0x40009f2	          0x83ff02	                              cmp edi, 2	       567	format.c	FUNCTION_8	IF_1
0x40009f5	            0x7708	                            ja 0x40009ff	       567	format.c	FUNCTION_8	IF_1
0x40009f7	    0x488b04fd0000	                  mov rax, qword [rdi*8]	       567	format.c	FUNCTION_8	IF_1
0x40009ff	            0xf3c3	                                     ret	       582	format.c	FUNCTION_8
