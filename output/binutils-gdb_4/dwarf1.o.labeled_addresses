_bfd_dwarf1_find_nearest_line	ELSE,2:functions,0:FOR,1:CALL,9:SWITCH,0:WHILE,1:DO,0:IF,12	314
0x4000640	            0x4157	                                push r15	       491	dwarf1.c	FUNCTION_7
0x4000642	            0x4156	                                push r14	       491	dwarf1.c	FUNCTION_7
0x4000644	            0x4155	                                push r13	       491	dwarf1.c	FUNCTION_7
0x4000646	            0x4154	                                push r12	       491	dwarf1.c	FUNCTION_7
0x4000648	              0x55	                                push rbp	       491	dwarf1.c	FUNCTION_7
0x4000649	              0x53	                                push rbx	       491	dwarf1.c	FUNCTION_7
0x400064a	          0x4889fb	                            mov rbx, rdi	       491	dwarf1.c	FUNCTION_7
0x400064d	        0x4883ec78	                           sub rsp, 0x78	       491	dwarf1.c	FUNCTION_7
0x4000651	        0x48034a28	             add rcx, qword [rdx + 0x28]	       497	dwarf1.c	FUNCTION_7
0x4000655	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       491	dwarf1.c	FUNCTION_7
0x400065d	      0x4c89442418	              mov qword [rsp + 0x18], r8	       491	dwarf1.c	FUNCTION_7
0x4000662	      0x4c894c2420	              mov qword [rsp + 0x20], r9	       491	dwarf1.c	FUNCTION_7
0x4000667	          0x4889c7	                            mov rdi, rax	       491	dwarf1.c	FUNCTION_7
0x400066a	      0x4889442428	             mov qword [rsp + 0x28], rax	       491	dwarf1.c	FUNCTION_7
0x400066f	          0x4989cc	                            mov r12, rcx	       497	dwarf1.c	FUNCTION_7
0x4000672	    0x64488b042528	                mov rax, qword fs:[0x28]	       491	dwarf1.c	FUNCTION_7
0x400067b	      0x4889442468	             mov qword [rsp + 0x68], rax	       491	dwarf1.c	FUNCTION_7
0x4000680	            0x31c0	                            xor eax, eax	       491	dwarf1.c	FUNCTION_7
0x4000682	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       492	dwarf1.c	FUNCTION_7	CALL_1
0x4000689	    0x4c8bb0280300	           mov r14, qword [rax + 0x328] 	       492	dwarf1.c	FUNCTION_7	CALL_1
0x4000690	    0x49c700000000	                       mov qword [r8], 0	       499	dwarf1.c	FUNCTION_7
0x4000697	    0x49c701000000	                       mov qword [r9], 0	       500	dwarf1.c	FUNCTION_7
0x400069e	    0xc70700000000	                      mov dword [rdi], 0	       501	dwarf1.c	FUNCTION_7
0x40006a4	          0x4d85f6	                           test r14, r14	       503	dwarf1.c	FUNCTION_7	IF_1
0x40006a7	     0xf8437040000	                            je 0x4000ae4	       503	dwarf1.c	FUNCTION_7	IF_1
0x40006ad	      0x49837e1800	               cmp qword [r14 + 0x18], 0	       538	dwarf1.c	FUNCTION_7	IF_5
0x40006b2	            0x744f	                            je 0x4000703	       538	dwarf1.c	FUNCTION_7	IF_5
0x40006b4	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	       543	dwarf1.c	FUNCTION_7	FOR_1
0x40006b8	          0x4885f6	                           test rsi, rsi	       543	dwarf1.c	FUNCTION_7	FOR_1
0x40006bb	            0x741b	                            je 0x40006d8	       543	dwarf1.c	FUNCTION_7	FOR_1
0x40006bd	           0xf1f00	                         nop dword [rax]	       543	dwarf1.c	FUNCTION_7	FOR_1
0x40006c0	        0x4c3b6610	            cmp r12, qword [rsi + 0x10] 	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x40006c4	            0x720a	                            jb 0x40006d0	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x40006c6	        0x4c3b6618	            cmp r12, qword [rsi + 0x18] 	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x40006ca	     0xf82b0030000	                            jb 0x4000a80	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x40006d0	          0x488b36	                    mov rsi, qword [rsi]	       543	dwarf1.c	FUNCTION_7	FOR_1
0x40006d3	          0x4885f6	                           test rsi, rsi	       543	dwarf1.c	FUNCTION_7	FOR_1
0x40006d6	            0x75e8	                           jne 0x40006c0	       543	dwarf1.c	FUNCTION_7	FOR_1
0x40006d8	        0x4d8b7e38	            mov r15, qword [r14 + 0x38] 	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40006dc	        0x4d8b6e20	            mov r13, qword [r14 + 0x20] 	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40006e0	          0x4d39ef	                            cmp r15, r13	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40006e3	            0x731e	                           jae 0x4000703	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40006e5	           0xf1f00	                         nop dword [rax]	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40006e8	        0x498d7704	                      lea rsi, [r15 + 4]	       192	dwarf1.c	FUNCTION_3	IF_1
0x40006ec	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        90	string3.h	FUNCTION_11	CALL_6
0x40006f1	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_11	CALL_6
0x40006f3	      0xb907000000	                              mov ecx, 7	        90	string3.h	FUNCTION_11	CALL_6
0x40006f8	          0x498b1e	                    mov rbx, qword [r14]	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x40006fb	          0x4c39ee	                            cmp rsi, r13	       192	dwarf1.c	FUNCTION_3	IF_1
0x40006fe	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_11	CALL_6
0x4000701	            0x762d	                           jbe 0x4000730	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000703	            0x31c0	                            xor eax, eax	       596	dwarf1.c	FUNCTION_7
0x4000705	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	       596	dwarf1.c	FUNCTION_7
0x400070a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       596	dwarf1.c	FUNCTION_7
0x4000713	     0xf854c040000	                           jne 0x4000b65	       596	dwarf1.c	FUNCTION_7
0x4000719	        0x4883c478	                           add rsp, 0x78	       596	dwarf1.c	FUNCTION_7
0x400071d	              0x5b	                                 pop rbx	       596	dwarf1.c	FUNCTION_7
0x400071e	              0x5d	                                 pop rbp	       596	dwarf1.c	FUNCTION_7
0x400071f	            0x415c	                                 pop r12	       596	dwarf1.c	FUNCTION_7
0x4000721	            0x415d	                                 pop r13	       596	dwarf1.c	FUNCTION_7
0x4000723	            0x415e	                                 pop r14	       596	dwarf1.c	FUNCTION_7
0x4000725	            0x415f	                                 pop r15	       596	dwarf1.c	FUNCTION_7
0x4000727	              0xc3	                                     ret	       596	dwarf1.c	FUNCTION_7
0x4000728	     0xf1f84000000	                   nop dword [rax + rax]	       596	dwarf1.c	FUNCTION_7
0x4000730	        0x488b4308	                mov rax, qword [rbx + 8]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000734	      0x4889742410	             mov qword [rsp + 0x10], rsi	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000739	          0x4c89ff	                            mov rdi, r15	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400073c	          0xff5038	                 call qword [rax + 0x38]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400073f	          0x4885c0	                           test rax, rax	       196	dwarf1.c	FUNCTION_3	IF_2
0x4000742	          0x4889c5	                            mov rbp, rax	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000745	      0x4889442430	             mov qword [rsp + 0x30], rax	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400074a	            0x74b7	                            je 0x4000703	       196	dwarf1.c	FUNCTION_3	IF_2
0x400074c	        0x498d0407	                    lea rax, [r15 + rax]	       197	dwarf1.c	FUNCTION_3	IF_2
0x4000750	          0x4c39e8	                            cmp rax, r13	       197	dwarf1.c	FUNCTION_3	IF_2
0x4000753	      0x4889442408	                mov qword [rsp + 8], rax	       197	dwarf1.c	FUNCTION_3	IF_2
0x4000758	            0x77a9	                            ja 0x4000703	       197	dwarf1.c	FUNCTION_3	IF_2
0x400075a	        0x4883fd05	                              cmp rbp, 5	       200	dwarf1.c	FUNCTION_3	IF_3
0x400075e	            0x766c	                           jbe 0x40007cc	       200	dwarf1.c	FUNCTION_3	IF_3
0x4000760	        0x4d8d6f06	                      lea r13, [r15 + 6]	       208	dwarf1.c	FUNCTION_3	IF_4
0x4000764	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       208	dwarf1.c	FUNCTION_3	IF_4
0x4000769	          0x4c39e8	                            cmp rax, r13	       208	dwarf1.c	FUNCTION_3	IF_4
0x400076c	            0x7295	                            jb 0x4000703	       208	dwarf1.c	FUNCTION_3	IF_4
0x400076e	        0x488b4308	                mov rax, qword [rbx + 8]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x4000772	          0x4889f7	                            mov rdi, rsi	       210	dwarf1.c	FUNCTION_3	CALL_3
0x4000775	          0xff5050	                 call qword [rax + 0x50]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x4000778	      0x4889442410	             mov qword [rsp + 0x10], rax	       210	dwarf1.c	FUNCTION_3	CALL_3
0x400077d	      0x6689442464	               mov word [rsp + 0x64], ax	       210	dwarf1.c	FUNCTION_3	CALL_3
0x4000782	    0x660f1f440000	                    nop word [rax + rax]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x4000788	        0x4d8d7d02	                      lea r15, [r13 + 2]	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x400078c	      0x4c397c2408	                cmp qword [rsp + 8], r15	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000791	            0x722d	                            jb 0x40007c0	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000793	        0x488b4308	                mov rax, qword [rbx + 8]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x4000797	          0x4c89ef	                            mov rdi, r13	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x400079a	          0xff5050	                 call qword [rax + 0x50]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x400079d	            0x89c2	                            mov edx, eax	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400079f	          0x83e20f	                            and edx, 0xf	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40007a2	        0x6683fa08	                               cmp dx, 8	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40007a6	     0xf8784010000	                            ja 0x4000930	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40007ac	           0xfb7d2	                           movzx edx, dx	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40007af	    0xff24d5000000	                       jmp qword [rdx*8]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40007b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40007c0	    0x66837c241011	            cmp word [rsp + 0x10], 0x11 	       558	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007c6	     0xf8474010000	                            je 0x4000940	       558	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007cc	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       558	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007d1	          0x4885c9	                           test rcx, rcx	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x40007d4	            0x744a	                            je 0x4000820	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x40007d6	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x40007da	        0x49034e18	             add rcx, qword [r14 + 0x18]	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x40007de	          0x4989f5	                            mov r13, rsi	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x40007e1	          0x4989cf	                            mov r15, rcx	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x40007e4	          0x4d39ef	                            cmp r15, r13	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40007e7	        0x4d897e38	             mov qword [r14 + 0x38], r15	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40007eb	     0xf82f7feffff	                            jb 0x40006e8	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40007f1	      0xe90dffffff	                           jmp 0x4000703	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x40007f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000800	          0x4939fc	                            cmp r12, rdi	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000803	    0x48c740300000	               mov qword [rax + 0x30], 0	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x400080b	            0x7213	                            jb 0x4000820	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x400080d	          0x4d39c4	                             cmp r12, r8	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000810	     0xf82be010000	                            jb 0x40009d4	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000816	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000820	          0x4989ef	                            mov r15, rbp	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000823	        0x4d8b6e20	            mov r13, qword [r14 + 0x20] 	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000827	        0x4d037e38	             add r15, qword [r14 + 0x38]	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x400082b	            0xebb7	                           jmp 0x40007e4	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x400082d	           0xf1f00	                         nop dword [rax]	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000830	        0x6683f838	                            cmp ax, 0x38	       280	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x4000834	     0xf8436020000	                            je 0x4000a70	       280	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x400083a	      0x488b742408	                mov rsi, qword [rsp + 8]	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400083f	          0x4c89ff	                            mov rdi, r15	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000842	          0x4c29fe	                            sub rsi, r15	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000845	      0xe800000000	                          call 0x400084a	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400084a	      0x4d8d6c0701	                lea r13, [r15 + rax + 1]	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400084f	      0xe934ffffff	                           jmp 0x4000788	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000854	         0xf1f4000	                         nop dword [rax]	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000858	        0x4983c50a	                            add r13, 0xa	       245	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400085c	      0xe927ffffff	                           jmp 0x4000788	       245	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000861	     0xf1f80000000	                         nop dword [rax]	       245	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000868	        0x4983c504	                              add r13, 4	       228	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400086c	      0xe917ffffff	                           jmp 0x4000788	       228	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000871	     0xf1f80000000	                         nop dword [rax]	       228	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000878	        0x498d4d06	                      lea rcx, [r13 + 6]	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x400087c	      0x48394c2408	                cmp qword [rsp + 8], rcx	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x4000881	     0xf8381010000	                           jae 0x4000a08	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x4000887	        0x4d8d6f04	                      lea r13, [r15 + 4]	       277	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400088b	      0xe9f8feffff	                           jmp 0x4000788	       277	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000890	        0x498d4d04	                      lea rcx, [r13 + 4]	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x4000894	      0x48394c2408	                cmp qword [rsp + 8], rcx	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x4000899	     0xf8391010000	                           jae 0x4000a30	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x400089f	        0x4d8d6f02	                      lea r13, [r15 + 2]	       266	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40008a3	      0xe9e0feffff	                           jmp 0x4000788	       266	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40008a8	     0xf1f84000000	                   nop dword [rax + rax]	       266	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40008b0	        0x4983c506	                              add r13, 6	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x40008b4	      0x4c396c2408	                cmp qword [rsp + 8], r13	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x40008b9	     0xf82c9feffff	                            jb 0x4000788	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x40008bf	        0x663d1101	                           cmp ax, 0x111	       250	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	IF_9
0x40008c3	     0xf8407020000	                            je 0x4000ad0	       250	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	IF_9
0x40008c9	        0x663d2101	                           cmp ax, 0x121	       252	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40008cd	     0xf85b5feffff	                           jne 0x4000788	       252	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40008d3	        0x488b4308	                mov rax, qword [rbx + 8]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40008d7	          0x4c89ff	                            mov rdi, r15	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40008da	          0xff5038	                 call qword [rax + 0x38]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40008dd	      0x4889442448	             mov qword [rsp + 0x48], rax	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40008e2	      0xe9a1feffff	                           jmp 0x4000788	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40008e7	    0x660f1f840000	                    nop word [rax + rax]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40008f0	        0x4983c506	                              add r13, 6	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x40008f4	      0x4c396c2408	                cmp qword [rsp + 8], r13	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x40008f9	     0xf8289feffff	                            jb 0x4000788	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x40008ff	        0x6683f812	                            cmp ax, 0x12	       234	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	IF_6
0x4000903	     0xf84b3010000	                            je 0x4000abc	       234	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	IF_6
0x4000909	        0x663d0601	                           cmp ax, 0x106	       236	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x400090d	     0xf8575feffff	                           jne 0x4000788	       236	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x4000913	        0x488b4308	                mov rax, qword [rbx + 8]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000917	          0x4c89ff	                            mov rdi, r15	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400091a	          0xff5038	                 call qword [rax + 0x38]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400091d	    0xc74424600100	               mov dword [rsp + 0x60], 1	       239	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x4000925	      0x4889442450	             mov qword [rsp + 0x50], rax	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400092a	      0xe959feffff	                           jmp 0x4000788	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400092f	              0x90	                                     nop	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000930	          0x4d89fd	                            mov r13, r15	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000933	      0xe950feffff	                           jmp 0x4000788	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000938	     0xf1f84000000	                   nop dword [rax + rax]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000940	          0x498b3e	                    mov rdi, qword [r14]	       145	dwarf1.c	FUNCTION_1	CALL_1
0x4000943	      0xbe50000000	                           mov esi, 0x50	       145	dwarf1.c	FUNCTION_1	CALL_1
0x4000948	      0xe800000000	                          call 0x400094d	       145	dwarf1.c	FUNCTION_1	CALL_1
0x400094d	          0x4885c0	                           test rax, rax	       146	dwarf1.c	FUNCTION_1	IF_1
0x4000950	     0xf84adfdffff	                            je 0x4000703	       146	dwarf1.c	FUNCTION_1	IF_1
0x4000956	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       148	dwarf1.c	FUNCTION_1	IF_1
0x400095a	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x400095f	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       566	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000964	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	       567	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000969	          0x488910	                    mov qword [rax], rdx	       148	dwarf1.c	FUNCTION_1	IF_1
0x400096c	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	       565	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000971	          0x4885c9	                           test rcx, rcx	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000974	        0x49894610	             mov qword [r14 + 0x10], rax	       149	dwarf1.c	FUNCTION_1	IF_1
0x4000978	        0x48897810	             mov qword [rax + 0x10], rdi	       566	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x400097c	        0x4c894018	              mov qword [rax + 0x18], r8	       567	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000980	        0x48895008	                mov qword [rax + 8], rdx	       565	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000984	        0x8b542460	            mov edx, dword [rsp + 0x60] 	       568	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000988	          0x895020	             mov dword [rax + 0x20], edx	       568	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x400098b	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       569	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000990	        0x48895028	             mov qword [rax + 0x28], rdx	       569	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x4000994	     0xf8466feffff	                            je 0x4000800	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x400099a	        0x49036e38	             add rbp, qword [r14 + 0x38]	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x400099e	        0x4d8b6e20	            mov r13, qword [r14 + 0x20] 	       575	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x40009a2	          0x4c89ee	                            mov rsi, r13	       575	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x40009a5	          0x4c39ed	                            cmp rbp, r13	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x40009a8	     0xf83a2000000	                           jae 0x4000a50	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x40009ae	          0x4989cf	                            mov r15, rcx	       577	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x40009b1	        0x4d037e18	             add r15, qword [r14 + 0x18]	       577	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x40009b5	          0x4c39fd	                            cmp rbp, r15	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x40009b8	     0xf8492000000	                            je 0x4000a50	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x40009be	          0x4d39c4	                             cmp r12, r8	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40009c1	        0x48896830	             mov qword [rax + 0x30], rbp	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40009c5	     0xf8319feffff	                           jae 0x40007e4	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40009cb	          0x4939fc	                            cmp r12, rdi	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40009ce	     0xf8210feffff	                            jb 0x40007e4	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40009d4	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x40009d9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x40009e2	     0xf857d010000	                           jne 0x4000b65	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x40009e8	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x40009ed	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x40009f2	          0x4c89e2	                            mov rdx, r12	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x40009f5	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x40009fa	          0x4889c6	                            mov rsi, rax	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x40009fd	      0xe9a4000000	                           jmp 0x4000aa6	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000a02	    0x660f1f440000	                    nop word [rax + rax]	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000a08	        0x488b4308	                mov rax, qword [rbx + 8]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x4000a0c	          0x4c89ff	                            mov rdi, r15	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x4000a0f	          0xff5038	                 call qword [rax + 0x38]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x4000a12	            0x89c0	                            mov eax, eax	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x4000a14	          0x4901c7	                            add r15, rax	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x4000a17	      0x4c397c2408	                cmp qword [rsp + 8], r15	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x4000a1c	     0xf8365feffff	                           jae 0x4000887	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x4000a22	      0xe9dcfcffff	                           jmp 0x4000703	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x4000a27	    0x660f1f840000	                    nop word [rax + rax]	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x4000a30	        0x488b4308	                mov rax, qword [rbx + 8]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000a34	          0x4c89ff	                            mov rdi, r15	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000a37	          0xff5050	                 call qword [rax + 0x50]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000a3a	            0x89c0	                            mov eax, eax	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000a3c	          0x4901c7	                            add r15, rax	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000a3f	      0x4c397c2408	                cmp qword [rsp + 8], r15	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000a44	     0xf8355feffff	                           jae 0x400089f	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000a4a	      0xe9b4fcffff	                           jmp 0x4000703	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000a4f	              0x90	                                     nop	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000a50	          0x4939fc	                            cmp r12, rdi	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000a53	    0x48c740300000	               mov qword [rax + 0x30], 0	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000a5b	     0xf8279fdffff	                            jb 0x40007da	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000a61	          0x4d39c4	                             cmp r12, r8	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000a64	     0xf8370fdffff	                           jae 0x40007da	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000a6a	      0xe965ffffff	                           jmp 0x40009d4	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000a6f	              0x90	                                     nop	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000a70	      0x4c897c2458	             mov qword [rsp + 0x58], r15	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x4000a75	      0xe9c0fdffff	                           jmp 0x400083a	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x4000a7a	    0x660f1f440000	                    nop word [rax + rax]	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x4000a80	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000a85	    0x644833042528	                xor rax, qword fs:[0x28]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000a8e	     0xf85d1000000	                           jne 0x4000b65	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000a94	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000a99	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000a9e	          0x4c89e2	                            mov rdx, r12	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000aa1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000aa6	        0x4883c478	                           add rsp, 0x78	       596	dwarf1.c	FUNCTION_7
0x4000aaa	          0x4c89f7	                            mov rdi, r14	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000aad	              0x5b	                                 pop rbx	       596	dwarf1.c	FUNCTION_7
0x4000aae	              0x5d	                                 pop rbp	       596	dwarf1.c	FUNCTION_7
0x4000aaf	            0x415c	                                 pop r12	       596	dwarf1.c	FUNCTION_7
0x4000ab1	            0x415d	                                 pop r13	       596	dwarf1.c	FUNCTION_7
0x4000ab3	            0x415e	                                 pop r14	       596	dwarf1.c	FUNCTION_7
0x4000ab5	            0x415f	                                 pop r15	       596	dwarf1.c	FUNCTION_7
0x4000ab7	      0xe984f5ffff	   jmp sym.dwarf1_unit_find_nearest_line	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000abc	        0x488b4308	                mov rax, qword [rbx + 8]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000ac0	          0x4c89ff	                            mov rdi, r15	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000ac3	          0xff5038	                 call qword [rax + 0x38]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000ac6	      0x4889442438	             mov qword [rsp + 0x38], rax	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000acb	      0xe9b8fcffff	                           jmp 0x4000788	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000ad0	        0x488b4308	                mov rax, qword [rbx + 8]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000ad4	          0x4c89ff	                            mov rdi, r15	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000ad7	          0xff5038	                 call qword [rax + 0x38]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000ada	      0x4889442440	             mov qword [rsp + 0x40], rax	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000adf	      0xe9a4fcffff	                           jmp 0x4000788	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000ae4	    0x4c8babf80000	            mov r13, qword [rbx + 0xf8] 	       508	dwarf1.c	FUNCTION_7	IF_1	CALL_2
0x4000aeb	          0x4889f5	                            mov rbp, rsi	       508	dwarf1.c	FUNCTION_7	IF_1	CALL_2
0x4000aee	          0x4889df	                            mov rdi, rbx	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000af1	      0xbe40000000	                           mov esi, 0x40	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000af6	      0xe800000000	                          call 0x4000afb	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000afb	          0x4885c0	                           test rax, rax	       511	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x4000afe	          0x4989c6	                            mov r14, rax	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000b01	    0x498985280300	            mov qword [r13 + 0x328], rax	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x4000b08	     0xf84f5fbffff	                            je 0x4000703	       511	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x4000b0e	      0xbe00000000	                              mov esi, 0	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x4000b13	          0x4889df	                            mov rdi, rbx	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x4000b16	      0xe800000000	                          call 0x4000b1b	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x4000b1b	          0x4885c0	                           test rax, rax	       515	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x4000b1e	     0xf84dffbffff	                            je 0x4000703	       515	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x4000b24	        0x4c8b6840	            mov r13, qword [rax + 0x40] 	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b28	          0x4d85ed	                           test r13, r13	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b2b	            0x7504	                           jne 0x4000b31	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b2d	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	       521	dwarf1.c	FUNCTION_7	IF_1
0x4000b31	            0x31d2	                            xor edx, edx	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b33	          0x4889e9	                            mov rcx, rbp	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b36	          0x4889c6	                            mov rsi, rax	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b39	          0x4889df	                            mov rdi, rbx	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b3c	      0xe800000000	                          call 0x4000b41	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b41	          0x4885c0	                           test rax, rax	       526	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000b44	        0x49894618	             mov qword [r14 + 0x18], rax	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000b48	     0xf84b5fbffff	                            je 0x4000703	       526	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000b4e	          0x4901c5	                            add r13, rax	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000b51	        0x49894638	             mov qword [r14 + 0x38], rax	       530	dwarf1.c	FUNCTION_7	IF_1
0x4000b55	          0x49891e	                    mov qword [r14], rbx	       531	dwarf1.c	FUNCTION_7	IF_1
0x4000b58	        0x4d896e20	             mov qword [r14 + 0x20], r13	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000b5c	        0x49896e08	                mov qword [r14 + 8], rbp	       532	dwarf1.c	FUNCTION_7	IF_1
0x4000b60	      0xe94ffbffff	                           jmp 0x40006b4	       532	dwarf1.c	FUNCTION_7	IF_1
0x4000b65	      0xe800000000	                          call str..line	       596	dwarf1.c	FUNCTION_7
dwarf1_unit_find_nearest_line	ELSE,0:functions,0:FOR,2:CALL,2:SWITCH,0:WHILE,0:DO,0:IF,8	381
0x4000040	            0x4157	                                push r15	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000042	            0x4156	                                push r14	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000044	            0x4155	                                push r13	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000046	            0x4154	                                push r12	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000048	              0x55	                                push rbp	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000049	              0x53	                                push rbx	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400004a	        0x4883ec78	                           sub rsp, 0x78	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400004e	    0x64488b042528	                mov rax, qword fs:[0x28]	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000057	      0x4889442468	             mov qword [rsp + 0x68], rax	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400005c	            0x31c0	                            xor eax, eax	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400005e	        0x48395610	            cmp qword [rsi + 0x10], rdx 	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000062	            0x770c	                            ja 0x4000070	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000064	        0x483b5618	            cmp rdx, qword [rsi + 0x18] 	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000068	          0x4889f5	                            mov rbp, rsi	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400006b	          0x4889d3	                            mov rbx, rdx	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400006e	            0x7228	                            jb 0x4000098	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000070	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000075	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x400007e	     0xf85b4050000	                           jne 0x4000638	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000084	        0x4883c478	                           add rsp, 0x78	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000088	              0x5b	                                 pop rbx	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000089	              0x5d	                                 pop rbp	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x400008a	            0x415c	                                 pop r12	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x400008c	            0x415d	                                 pop r13	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x400008e	            0x415e	                                 pop r14	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000090	            0x415f	                                 pop r15	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000092	              0xc3	                                     ret	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000093	       0xf1f440000	                   nop dword [rax + rax]	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000098	          0x8b4620	            mov eax, dword [rsi + 0x20] 	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x400009b	            0x85c0	                           test eax, eax	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x400009d	            0x74d1	                            je 0x4000070	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x400009f	      0x48837e4000	               cmp qword [rsi + 0x40], 0	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x40000a4	          0x4989fc	                            mov r12, rdi	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x40000a7	          0x4989cd	                            mov r13, rcx	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x40000aa	     0xf84a9000000	                            je 0x4000159	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x40000b0	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x40000b4	          0x4885d2	                           test rdx, rdx	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x40000b7	     0xf8432020000	                            je 0x40002ef	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x40000bd	        0x488b7d38	            mov rdi, qword [rbp + 0x38] 	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40000c1	            0x31c0	                            xor eax, eax	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x40000c3	          0x4885ff	                           test rdi, rdi	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40000c6	            0x7440	                            je 0x4000108	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40000c8	        0x488b7540	            mov rsi, qword [rbp + 0x40] 	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40000cc	      0xba01000000	                              mov edx, 1	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40000d1	            0x31c0	                            xor eax, eax	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40000d3	       0xf1f440000	                   nop dword [rax + rax]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40000d8	        0x483b1c06	              cmp rbx, qword [rsi + rax]	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40000dc	            0x7207	                            jb 0x40000e5	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40000de	      0x483b5c0610	      cmp rbx, qword [rsi + rax + 0x10] 	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40000e3	            0x7243	                            jb 0x4000128	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40000e5	          0x4889d1	                            mov rcx, rdx	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40000e8	        0x4883c010	                           add rax, 0x10	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40000ec	        0x4883c201	                              add rdx, 1	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x40000f0	          0x4839cf	                            cmp rdi, rcx	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40000f3	            0x77e3	                            ja 0x40000d8	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40000f5	            0x31c0	                            xor eax, eax	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x40000f7	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x40000fb	          0x4885d2	                           test rdx, rdx	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x40000fe	     0xf846cffffff	                            je 0x4000070	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x4000104	         0xf1f4000	                         nop dword [rax]	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x4000108	        0x483b5a10	            cmp rbx, qword [rdx + 0x10] 	       466	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400010c	            0x7206	                            jb 0x4000114	       466	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400010e	        0x483b5a18	            cmp rbx, qword [rdx + 0x18] 	       467	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000112	            0x7234	                            jb 0x4000148	       467	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000114	          0x488b12	                    mov rdx, qword [rdx]	       464	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x4000117	          0x4885d2	                           test rdx, rdx	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x400011a	            0x75ec	                           jne 0x4000108	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x400011c	      0xe94fffffff	                           jmp 0x4000070	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x4000121	     0xf1f80000000	                         nop dword [rax]	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x4000128	        0x488b5508	                mov rdx, qword [rbp + 8]	       455	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400012c	        0x49895500	                    mov qword [r13], rdx	       455	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000130	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000134	      0x488b440208	         mov rax, qword [rdx + rax + 8] 	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000139	          0x418901	                     mov dword [r9], eax	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400013c	      0xb801000000	                              mov eax, 1	       457	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000141	            0xebb4	                           jmp 0x40000f7	       458	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000143	       0xf1f440000	                   nop dword [rax + rax]	       458	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000148	        0x488b4208	                mov rax, qword [rdx + 8]	       469	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400014c	          0x498900	                     mov qword [r8], rax	       469	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400014f	      0xb801000000	                              mov eax, 1	       471	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000154	      0xe917ffffff	                           jmp 0x4000070	       471	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000159	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       300	dwarf1.c	FUNCTION_4	IF_1
0x400015d	          0x4885c0	                           test rax, rax	       300	dwarf1.c	FUNCTION_4	IF_1
0x4000160	     0xf845c040000	                            je 0x40005c2	       300	dwarf1.c	FUNCTION_4	IF_1
0x4000166	        0x48034528	             add rax, qword [rbp + 0x28]	       320	dwarf1.c	FUNCTION_4
0x400016a	        0x4c8d7008	                      lea r14, [rax + 8]	       321	dwarf1.c	FUNCTION_4	IF_4
0x400016e	      0x4d39742430	            cmp qword [r12 + 0x30], r14 	       321	dwarf1.c	FUNCTION_4	IF_4
0x4000173	          0x4989c7	                            mov r15, rax	       320	dwarf1.c	FUNCTION_4
0x4000176	     0xf8234ffffff	                            jb 0x40000b0	       321	dwarf1.c	FUNCTION_4	IF_4
0x400017c	        0x498b0424	                    mov rax, qword [r12]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000180	      0x4c894c2420	              mov qword [rsp + 0x20], r9	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000185	          0x4c89ff	                            mov rdi, r15	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000188	      0x4c89442410	              mov qword [rsp + 0x10], r8	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x400018d	        0x488b4008	                mov rax, qword [rax + 8]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000191	          0xff5038	                 call qword [rax + 0x38]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000194	          0x4c01f8	                            add rax, r15	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000197	        0x498d7f04	                      lea rdi, [r15 + 4]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x400019b	        0x48890424	                    mov qword [rsp], rax	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x400019f	        0x498b0424	                    mov rax, qword [r12]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x40001a3	        0x488b4008	                mov rax, qword [rax + 8]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x40001a7	          0xff5038	                 call qword [rax + 0x38]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x40001aa	      0x4889442408	                mov qword [rsp + 8], rax	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x40001af	        0x488b0424	                    mov rax, qword [rsp]	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001b3	    0x48ba67666666	          movabs rdx, 0x6666666666666667	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001bd	      0x4c89742418	             mov qword [rsp + 0x18], r14	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001c2	        0x498b3c24	                    mov rdi, qword [r12]	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40001c6	          0x4c29f0	                            sub rax, r14	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001c9	          0x4989c6	                            mov r14, rax	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001cc	          0x48f7ea	                                imul rdx	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001cf	        0x49c1fe3f	                           sar r14, 0x3f	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001d3	          0x4889d0	                            mov rax, rdx	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001d6	        0x48c1f802	                              sar rax, 2	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001da	          0x4c29f0	                            sub rax, r14	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001dd	        0x48894538	            mov qword [rbp + 0x38], rax 	       338	dwarf1.c	FUNCTION_4	IF_4
0x40001e1	        0x48c1e004	                              shl rax, 4	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40001e5	          0x4889c6	                            mov rsi, rax	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40001e8	      0xe800000000	                          call 0x40001ed	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40001ed	          0x4885c0	                           test rax, rax	       344	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x40001f0	          0x4989c6	                            mov r14, rax	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40001f3	        0x48894540	            mov qword [rbp + 0x40], rax 	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40001f7	     0xf84eb000000	                            je 0x40002e8	       344	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x40001fd	      0x48837d3800	               cmp qword [rbp + 0x38], 0	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000202	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000207	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400020c	     0xf849efeffff	                            je 0x40000b0	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000212	        0x498d4712	                   lea rax, [r15 + 0x12]	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000216	          0x4531ff	                          xor r15d, r15d	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000219	      0x4939442430	            cmp qword [r12 + 0x30], rax 	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400021e	     0xf826d030000	                            jb 0x4000591	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000224	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000229	        0x48890424	                    mov qword [rsp], rax	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400022d	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000232	      0x4c89442420	              mov qword [rsp + 0x20], r8	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000237	      0x4c896c2418	             mov qword [rsp + 0x18], r13	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400023c	      0x4c894c2428	              mov qword [rsp + 0x28], r9	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000241	          0x4d89e5	                            mov r13, r12	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000244	            0xeb24	                           jmp 0x400026a	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000246	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000250	        0x488d4314	                   lea rax, [rbx + 0x14]	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000254	        0x493b4530	            cmp rax, qword [r13 + 0x30] 	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000258	     0xf871c030000	                            ja 0x400057a	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400025e	        0x4c8b7540	            mov r14, qword [rbp + 0x40] 	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000262	        0x488b1c24	                    mov rbx, qword [rsp]	       365	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000266	        0x48890424	                    mov qword [rsp], rax	       365	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400026a	        0x498b4500	                    mov rax, qword [r13]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400026e	          0x4d89fc	                            mov r12, r15	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000271	          0x4889df	                            mov rdi, rbx	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000274	        0x49c1e404	                              shl r12, 4	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000278	        0x4983c701	                              add r15, 1	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400027c	          0x4d01e6	                            add r14, r12	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400027f	        0x488b4008	                mov rax, qword [rax + 8]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000283	          0xff5038	                 call qword [rax + 0x38]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000286	        0x49894608	                mov qword [r14 + 8], rax	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400028a	        0x498b4500	                    mov rax, qword [r13]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x400028e	          0x4d89e6	                            mov r14, r12	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000291	        0x488d7b06	                      lea rdi, [rbx + 6]	       360	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000295	        0x4c037540	             add r14, qword [rbp + 0x40]	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000299	        0x488b4008	                mov rax, qword [rax + 8]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x400029d	          0xff5038	                 call qword [rax + 0x38]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40002a0	      0x4803442408	                add rax, qword [rsp + 8]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40002a5	        0x4c3b7d38	            cmp r15, qword [rbp + 0x38] 	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40002a9	          0x498906	                    mov qword [r14], rax	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x40002ac	            0x72a2	                            jb 0x4000250	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40002ae	          0x4d89ec	                            mov r12, r13	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40002b1	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40002b6	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40002bb	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40002c0	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40002c5	      0xe9e6fdffff	                           jmp 0x40000b0	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40002ca	        0x498b4508	                mov rax, qword [r13 + 8]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40002ce	          0x4c89f7	                            mov rdi, r14	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40002d1	          0xff5038	                 call qword [rax + 0x38]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40002d4	            0x89c0	                            mov eax, eax	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40002d6	          0x4901c6	                            add r14, rax	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40002d9	          0x4c39f3	                            cmp rbx, r14	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40002dc	     0xf8316010000	                           jae 0x40003f8	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40002e2	    0x660f1f440000	                    nop word [rax + rax]	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40002e8	            0x31c0	                            xor eax, eax	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x40002ea	      0xe981fdffff	                           jmp 0x4000070	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x40002ef	        0x4c8b7530	            mov r14, qword [rbp + 0x30] 	       382	dwarf1.c	FUNCTION_5	IF_1
0x40002f3	          0x4d85f6	                           test r14, r14	       382	dwarf1.c	FUNCTION_5	IF_1
0x40002f6	     0xf84d8010000	                            je 0x40004d4	       382	dwarf1.c	FUNCTION_5	IF_1
0x40002fc	      0x4d8b7c2420	            mov r15, qword [r12 + 0x20] 	       384	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x4000301	          0x4d39fe	                            cmp r14, r15	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x4000304	     0xf83ca010000	                           jae 0x40004d4	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x400030a	      0x48895c2410	             mov qword [rsp + 0x10], rbx	        90	string3.h	FUNCTION_11	CALL_6
0x400030f	      0x4c896c2418	             mov qword [rsp + 0x18], r13	        90	string3.h	FUNCTION_11	CALL_6
0x4000314	      0x4c89442420	              mov qword [rsp + 0x20], r8	        90	string3.h	FUNCTION_11	CALL_6
0x4000319	      0x4c894c2428	              mov qword [rsp + 0x28], r9	        90	string3.h	FUNCTION_11	CALL_6
0x400031e	            0x6690	                                     nop	        90	string3.h	FUNCTION_11	CALL_6
0x4000320	        0x498d5604	                      lea rdx, [r14 + 4]	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000324	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        90	string3.h	FUNCTION_11	CALL_6
0x4000329	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_11	CALL_6
0x400032b	      0xb907000000	                              mov ecx, 7	        90	string3.h	FUNCTION_11	CALL_6
0x4000330	        0x4d8b2c24	                    mov r13, qword [r12]	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x4000334	          0x4c39fa	                            cmp rdx, r15	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000337	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_11	CALL_6
0x400033a	            0x77ac	                            ja 0x40002e8	       192	dwarf1.c	FUNCTION_3	IF_1
0x400033c	        0x498b4508	                mov rax, qword [r13 + 8]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000340	        0x48891424	                    mov qword [rsp], rdx	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000344	          0x4c89f7	                            mov rdi, r14	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000347	          0xff5038	                 call qword [rax + 0x38]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400034a	          0x4885c0	                           test rax, rax	       196	dwarf1.c	FUNCTION_3	IF_2
0x400034d	      0x4889442430	             mov qword [rsp + 0x30], rax	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000352	            0x7494	                            je 0x40002e8	       196	dwarf1.c	FUNCTION_3	IF_2
0x4000354	        0x498d1c06	                    lea rbx, [r14 + rax]	       197	dwarf1.c	FUNCTION_3	IF_2
0x4000358	          0x4c39fb	                            cmp rbx, r15	       197	dwarf1.c	FUNCTION_3	IF_2
0x400035b	            0x778b	                            ja 0x40002e8	       197	dwarf1.c	FUNCTION_3	IF_2
0x400035d	        0x4883f805	                              cmp rax, 5	       200	dwarf1.c	FUNCTION_3	IF_3
0x4000361	     0xf8689010000	                           jbe 0x40004f0	       200	dwarf1.c	FUNCTION_3	IF_3
0x4000367	        0x4d8d7e06	                      lea r15, [r14 + 6]	       208	dwarf1.c	FUNCTION_3	IF_4
0x400036b	        0x488b1424	                    mov rdx, qword [rsp]	       208	dwarf1.c	FUNCTION_3	IF_4
0x400036f	          0x4c39fb	                            cmp rbx, r15	       208	dwarf1.c	FUNCTION_3	IF_4
0x4000372	     0xf8270ffffff	                            jb 0x40002e8	       208	dwarf1.c	FUNCTION_3	IF_4
0x4000378	        0x498b4508	                mov rax, qword [r13 + 8]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x400037c	          0x4889d7	                            mov rdi, rdx	       210	dwarf1.c	FUNCTION_3	CALL_3
0x400037f	          0xff5050	                 call qword [rax + 0x50]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x4000382	      0x4889442408	                mov qword [rsp + 8], rax	       210	dwarf1.c	FUNCTION_3	CALL_3
0x4000387	        0x66890424	                      mov word [rsp], ax	       210	dwarf1.c	FUNCTION_3	CALL_3
0x400038b	      0x6689442464	               mov word [rsp + 0x64], ax	       210	dwarf1.c	FUNCTION_3	CALL_3
0x4000390	        0x4d8d7702	                      lea r14, [r15 + 2]	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000394	          0x4c39f3	                            cmp rbx, r14	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000397	     0xf82fb000000	                            jb 0x4000498	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x400039d	        0x498b4508	                mov rax, qword [r13 + 8]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x40003a1	          0x4c89ff	                            mov rdi, r15	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x40003a4	          0xff5050	                 call qword [rax + 0x50]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x40003a7	            0x89c2	                            mov edx, eax	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003a9	          0x83e20f	                            and edx, 0xf	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003ac	        0x6683fa08	                               cmp dx, 8	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003b0	     0xf87d7000000	                            ja 0x400048d	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003b6	           0xfb7d2	                           movzx edx, dx	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003b9	    0xff24d5000000	                       jmp qword [rdx*8]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003c0	        0x6683f838	                            cmp ax, 0x38	       280	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x40003c4	     0xf8487010000	                            je 0x4000551	       280	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x40003ca	          0x4889de	                            mov rsi, rbx	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x40003cd	          0x4c89f7	                            mov rdi, r14	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x40003d0	          0x4c29f6	                            sub rsi, r14	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x40003d3	      0xe800000000	                          call 0x40003d8	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x40003d8	      0x4d8d7c0601	                lea r15, [r14 + rax + 1]	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x40003dd	            0xebb1	                           jmp 0x4000390	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x40003df	        0x4983c70a	                            add r15, 0xa	       245	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003e3	            0xebab	                           jmp 0x4000390	       245	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003e5	        0x4983c704	                              add r15, 4	       228	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003e9	            0xeba5	                           jmp 0x4000390	       228	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003eb	        0x4983c706	                              add r15, 6	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40003ef	          0x4c39fb	                            cmp rbx, r15	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40003f2	     0xf83d2feffff	                           jae 0x40002ca	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40003f8	        0x4d8d7e04	                      lea r15, [r14 + 4]	       277	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003fc	            0xeb92	                           jmp 0x4000390	       277	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40003fe	        0x4983c704	                              add r15, 4	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x4000402	          0x4c39fb	                            cmp rbx, r15	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x4000405	     0xf8350010000	                           jae 0x400055b	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x400040b	        0x4d8d7e02	                      lea r15, [r14 + 2]	       266	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400040f	      0xe97cffffff	                           jmp 0x4000390	       266	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000414	        0x4983c706	                              add r15, 6	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x4000418	          0x4c39fb	                            cmp rbx, r15	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x400041b	     0xf826fffffff	                            jb 0x4000390	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x4000421	        0x6683f812	                            cmp ax, 0x12	       234	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	IF_6
0x4000425	     0xf8483010000	                            je 0x40005ae	       234	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	IF_6
0x400042b	        0x663d0601	                           cmp ax, 0x106	       236	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x400042f	     0xf855bffffff	                           jne 0x4000390	       236	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x4000435	        0x498b4508	                mov rax, qword [r13 + 8]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000439	          0x4c89f7	                            mov rdi, r14	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400043c	          0xff5038	                 call qword [rax + 0x38]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400043f	    0xc74424600100	               mov dword [rsp + 0x60], 1	       239	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x4000447	      0x4889442450	             mov qword [rsp + 0x50], rax	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400044c	      0xe93fffffff	                           jmp 0x4000390	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000451	     0xf1f80000000	                         nop dword [rax]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000458	        0x4983c706	                              add r15, 6	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x400045c	          0x4c39fb	                            cmp rbx, r15	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x400045f	     0xf822bffffff	                            jb 0x4000390	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x4000465	        0x663d1101	                           cmp ax, 0x111	       250	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	IF_9
0x4000469	     0xf842b010000	                            je 0x400059a	       250	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	IF_9
0x400046f	        0x663d2101	                           cmp ax, 0x121	       252	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000473	     0xf8517ffffff	                           jne 0x4000390	       252	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000479	        0x498b4508	                mov rax, qword [r13 + 8]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x400047d	          0x4c89f7	                            mov rdi, r14	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000480	          0xff5038	                 call qword [rax + 0x38]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000483	      0x4889442448	             mov qword [rsp + 0x48], rax	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x4000488	      0xe903ffffff	                           jmp 0x4000390	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x400048d	          0x4d89f7	                            mov r15, r14	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000490	      0xe9fbfeffff	                           jmp 0x4000390	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000495	           0xf1f00	                         nop dword [rax]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000498	    0x66837c24081d	                cmp word [rsp + 8], 0x1d	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400049e	            0x7660	                           jbe 0x4000500	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004a0	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40004a5	          0x4885d2	                           test rdx, rdx	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40004a8	            0x7416	                            je 0x40004c0	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40004aa	      0x4903542418	             add rdx, qword [r12 + 0x18]	       409	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40004af	      0x4d8b7c2420	            mov r15, qword [r12 + 0x20] 	       384	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40004b4	          0x4939d7	                            cmp r15, rdx	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40004b7	          0x4989d6	                            mov r14, rdx	       409	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x40004ba	     0xf8760feffff	                            ja 0x4000320	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40004c0	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40004c5	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40004ca	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40004cf	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40004d4	        0x488b7d38	            mov rdi, qword [rbp + 0x38] 	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40004d8	          0x4885ff	                           test rdi, rdi	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40004db	     0xf85e7fbffff	                           jne 0x40000c8	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40004e1	      0xe90ffcffff	                           jmp 0x40000f5	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40004e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40004f0	            0x31c0	                            xor eax, eax	       200	dwarf1.c	FUNCTION_3	IF_3
0x40004f2	        0x66890424	                      mov word [rsp], ax	       200	dwarf1.c	FUNCTION_3	IF_3
0x40004f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       200	dwarf1.c	FUNCTION_3	IF_3
0x4000500	        0x488b3424	                    mov rsi, qword [rsp]	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000504	      0xb848001020	                     mov eax, 0x20100048	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000509	        0x480fa3f0	                             bt rax, rsi	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400050d	            0x7391	                           jae 0x40004a0	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400050f	        0x498b3c24	                    mov rdi, qword [r12]	       163	dwarf1.c	FUNCTION_2	CALL_1
0x4000513	      0xbe20000000	                           mov esi, 0x20	       163	dwarf1.c	FUNCTION_2	CALL_1
0x4000518	      0xe800000000	                          call 0x400051d	       163	dwarf1.c	FUNCTION_2	CALL_1
0x400051d	          0x4885c0	                           test rax, rax	       164	dwarf1.c	FUNCTION_2	IF_1
0x4000520	     0xf84c2fdffff	                            je 0x40002e8	       164	dwarf1.c	FUNCTION_2	IF_1
0x4000526	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	       166	dwarf1.c	FUNCTION_2	IF_1
0x400052a	          0x488910	                    mov qword [rax], rdx	       166	dwarf1.c	FUNCTION_2	IF_1
0x400052d	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	       402	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000532	        0x48894548	            mov qword [rbp + 0x48], rax 	       167	dwarf1.c	FUNCTION_2	IF_1
0x4000536	        0x48895008	                mov qword [rax + 8], rdx	       402	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400053a	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       403	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400053f	        0x48895010	             mov qword [rax + 0x10], rdx	       403	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000543	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       404	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000548	        0x48895018	             mov qword [rax + 0x18], rdx	       404	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x400054c	      0xe94fffffff	                           jmp 0x40004a0	       404	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000551	      0x4c89742458	             mov qword [rsp + 0x58], r14	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x4000556	      0xe96ffeffff	                           jmp 0x40003ca	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x400055b	        0x498b4508	                mov rax, qword [r13 + 8]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x400055f	          0x4c89f7	                            mov rdi, r14	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000562	          0xff5050	                 call qword [rax + 0x50]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x4000565	            0x89c0	                            mov eax, eax	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000567	          0x4901c6	                            add r14, rax	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400056a	          0x4c39f3	                            cmp rbx, r14	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400056d	     0xf8398feffff	                           jae 0x400040b	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x4000573	            0x31c0	                            xor eax, eax	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x4000575	      0xe9f6faffff	                           jmp 0x4000070	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x400057a	          0x4d89ec	                            mov r12, r13	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x400057d	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x4000582	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x4000587	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x400058c	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x4000591	        0x4c897d38	            mov qword [rbp + 0x38], r15 	       351	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x4000595	      0xe916fbffff	                           jmp 0x40000b0	       351	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x400059a	        0x498b4508	                mov rax, qword [r13 + 8]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x400059e	          0x4c89f7	                            mov rdi, r14	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40005a1	          0xff5038	                 call qword [rax + 0x38]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40005a4	      0x4889442440	             mov qword [rsp + 0x40], rax	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40005a9	      0xe9e2fdffff	                           jmp 0x4000390	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40005ae	        0x498b4508	                mov rax, qword [r13 + 8]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x40005b2	          0x4c89f7	                            mov rdi, r14	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x40005b5	          0xff5038	                 call qword [rax + 0x38]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x40005b8	      0x4889442438	             mov qword [rsp + 0x38], rax	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x40005bd	      0xe9cefdffff	                           jmp 0x4000390	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x40005c2	          0x488b3f	                    mov rdi, qword [rdi]	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x40005c5	      0xbe00000000	                              mov esi, 0	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x40005ca	      0x4c894c2408	                 mov qword [rsp + 8], r9	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x40005cf	        0x4c890424	                     mov qword [rsp], r8	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x40005d3	      0xe800000000	                          call 0x40005d8	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x40005d8	          0x4885c0	                           test rax, rax	       306	dwarf1.c	FUNCTION_4	IF_1	IF_2
0x40005db	     0xf8407fdffff	                            je 0x40002e8	       306	dwarf1.c	FUNCTION_4	IF_1	IF_2
0x40005e1	        0x4c8b7040	            mov r14, qword [rax + 0x40] 	       309	dwarf1.c	FUNCTION_4	IF_1
0x40005e5	        0x4c8b0424	                     mov r8, qword [rsp]	       309	dwarf1.c	FUNCTION_4	IF_1
0x40005e9	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       309	dwarf1.c	FUNCTION_4	IF_1
0x40005ee	          0x4d85f6	                           test r14, r14	       309	dwarf1.c	FUNCTION_4	IF_1
0x40005f1	            0x7504	                           jne 0x40005f7	       309	dwarf1.c	FUNCTION_4	IF_1
0x40005f3	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	       309	dwarf1.c	FUNCTION_4	IF_1
0x40005f7	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40005fc	        0x498b3c24	                    mov rdi, qword [r12]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x4000600	            0x31d2	                            xor edx, edx	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x4000602	          0x4889c6	                            mov rsi, rax	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x4000605	      0x4c894c2408	                 mov qword [rsp + 8], r9	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x400060a	        0x4c890424	                     mov qword [rsp], r8	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x400060e	      0xe800000000	                          call 0x4000613	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x4000613	          0x4885c0	                           test rax, rax	       314	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x4000616	      0x4989442428	             mov qword [r12 + 0x28], rax	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x400061b	     0xf84c7fcffff	                            je 0x40002e8	       314	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x4000621	        0x4a8d1430	                    lea rdx, [rax + r14]	       317	dwarf1.c	FUNCTION_4	IF_1
0x4000625	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       317	dwarf1.c	FUNCTION_4	IF_1
0x400062a	        0x4c8b0424	                     mov r8, qword [rsp]	       317	dwarf1.c	FUNCTION_4	IF_1
0x400062e	      0x4989542430	             mov qword [r12 + 0x30], rdx	       317	dwarf1.c	FUNCTION_4	IF_1
0x4000633	      0xe92efbffff	                           jmp 0x4000166	       317	dwarf1.c	FUNCTION_4	IF_1
0x4000638	      0xe800000000	                          call 0x400063d	       478	dwarf1.c	ELSE_1	FUNCTION_6
