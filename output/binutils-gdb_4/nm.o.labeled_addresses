print_symbol_info_sysv	FOR,0:functions,0:SWITCH,0:IF,9:DO,0:WHILE,0:ELSE,9:CALL,7	296
0x40020d0	            0x4154	                                push r12	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x40020d2	              0x55	                                push rbp	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x40020d3	              0x53	                                push rbx	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x40020d4	          0x488b07	                    mov rax, qword [rdi]	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x40020d7	          0x4889fb	                            mov rbx, rdi	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x40020da	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x40020de	    0x8b0500000000	            mov eax, dword [0x040020e4] 	       408	nm.c	FUNCTION_6	IF_1
0x40020e4	            0x85c0	                           test eax, eax	       408	nm.c	FUNCTION_6	IF_1
0x40020e6	            0x740a	                            je 0x40020f2	       408	nm.c	FUNCTION_6	IF_1
0x40020e8	        0x807d0000	                       cmp byte [rbp], 0	       408	nm.c	FUNCTION_6	IF_1
0x40020ec	     0xf857e010000	                           jne 0x4002270	       408	nm.c	FUNCTION_6	IF_1
0x40020f2	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_28
0x40020f5	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40020fa	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40020ff	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002101	      0xe800000000	                          call 0x4002106	       104	stdio2.h	CALL_28
0x4002106	          0x488b03	                    mov rax, qword [rbx]	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4002109	         0xfbe7808	               movsx edi, byte [rax + 8]	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x400210d	      0xe800000000	                          call 0x4002112	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4002112	            0x85c0	                           test eax, eax	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4002114	            0x746a	                            je 0x4002180	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4002116	    0x833d00000000	           cmp dword [0x0400211d], 0x20 	      1565	nm.c	FUNCTION_38	ELSE_2
0x400211d	     0xf8425030000	                            je 0x4002448	      1565	nm.c	FUNCTION_38	ELSE_2
0x4002123	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002128	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400212d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400212f	      0xe800000000	                          call 0x4002134	       104	stdio2.h	CALL_28
0x4002134	          0x488b03	                    mov rax, qword [rbx]	      1573	nm.c	FUNCTION_38	IF_3
0x4002137	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400213c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002141	         0xfbe5008	               movsx edx, byte [rax + 8]	       104	stdio2.h	CALL_28
0x4002145	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002147	      0xe800000000	                          call 0x400214c	       104	stdio2.h	CALL_28
0x400214c	          0x488b03	                    mov rax, qword [rbx]	      1575	nm.c	FUNCTION_38	IF_3
0x400214f	        0x8078082d	                cmp byte [rax + 8], 0x2d	      1575	nm.c	FUNCTION_38	IF_3
0x4002153	     0xf8447030000	                            je 0x40024a0	      1575	nm.c	FUNCTION_38	IF_3
0x4002159	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x400215d	          0x4885c0	                           test rax, rax	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4002160	            0x7456	                            je 0x40021b8	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4002162	         0xfb64848	           movzx ecx, byte [rax + 0x48] 	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4002166	          0x83e10f	                            and ecx, 0xf	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4002169	          0x80f906	                               cmp cl, 6	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400216c	     0xf8766030000	                            ja 0x40024d8	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002172	           0xfb6c9	                           movzx ecx, cl	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002175	    0xff24cd000000	                       jmp qword [rcx*8]	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400217c	         0xf1f4000	                         nop dword [rax]	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002180	    0x8b2d00000000	            mov ebp, dword [0x04002186] 	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002186	          0x488b03	                    mov rax, qword [rbx]	      1571	nm.c	FUNCTION_38	IF_3
0x4002189	          0x83fd20	                           cmp ebp, 0x20	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400218c	          0x488b10	                    mov rdx, qword [rax]	      1571	nm.c	FUNCTION_38	IF_3
0x400218f	     0xf841b010000	                            je 0x40022b0	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002195	          0x83fd40	                           cmp ebp, 0x40	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002198	     0xf858a020000	                           jne 0x4002428	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400219e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40021a3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40021a8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40021aa	      0xe800000000	                          call 0x40021af	       104	stdio2.h	CALL_28
0x40021af	            0xeb83	                           jmp 0x4002134	       104	stdio2.h	CALL_28
0x40021b1	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x40021b8	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1588	nm.c	FUNCTION_38	ELSE_3
0x40021bc	          0x4885c0	                           test rax, rax	      1588	nm.c	FUNCTION_38	ELSE_3
0x40021bf	     0xf84ab030000	                            je 0x4002570	      1588	nm.c	FUNCTION_38	ELSE_3
0x40021c5	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      1590	nm.c	FUNCTION_38	ELSE_3	CALL_7
0x40021c9	         0xfb64528	           movzx eax, byte [rbp + 0x28] 	       378	nm.c	FUNCTION_5	SWITCH_1
0x40021cd	            0x3c67	                            cmp al, 0x67	       378	nm.c	FUNCTION_5	SWITCH_1
0x40021cf	     0xf84e3010000	                            je 0x40023b8	       378	nm.c	FUNCTION_5	SWITCH_1
0x40021d5	            0x3c68	                            cmp al, 0x68	       378	nm.c	FUNCTION_5	SWITCH_1
0x40021d7	     0xf8463030000	                            je 0x4002540	       378	nm.c	FUNCTION_5	SWITCH_1
0x40021dd	            0x3c64	                            cmp al, 0x64	       378	nm.c	FUNCTION_5	SWITCH_1
0x40021df	      0xba00000000	                              mov edx, 0	       380	nm.c	FUNCTION_5	SWITCH_1
0x40021e4	     0xf84ee000000	                            je 0x40022d8	       378	nm.c	FUNCTION_5	SWITCH_1
0x40021ea	         0xfb74526	           movzx eax, word [rbp + 0x26] 	       385	nm.c	FUNCTION_5	IF_1
0x40021ee	          0x6685c0	                             test ax, ax	       385	nm.c	FUNCTION_5	IF_1
0x40021f1	     0xf8469030000	                            je 0x4002560	       385	nm.c	FUNCTION_5	IF_1
0x40021f7	          0x83e030	                           and eax, 0x30	       388	nm.c	FUNCTION_5	SWITCH_2
0x40021fa	          0xc1f804	                              sar eax, 4	       388	nm.c	FUNCTION_5	SWITCH_2
0x40021fd	          0x83f802	                              cmp eax, 2	       388	nm.c	FUNCTION_5	SWITCH_2
0x4002200	     0xf8494030000	                            je 0x400259a	       388	nm.c	FUNCTION_5	SWITCH_2
0x4002206	          0x83f803	                              cmp eax, 3	       388	nm.c	FUNCTION_5	SWITCH_2
0x4002209	     0xf8481030000	                            je 0x4002590	       388	nm.c	FUNCTION_5	SWITCH_2
0x400220f	          0x83f801	                              cmp eax, 1	       388	nm.c	FUNCTION_5	SWITCH_2
0x4002212	     0xf846e030000	                            je 0x4002586	       388	nm.c	FUNCTION_5	SWITCH_2
0x4002218	    0x488b3d000000	            mov rdi, qword [0x0400221f] 	       395	nm.c	FUNCTION_5	CALL_3
0x400221f	      0xe800000000	                          call 0x4002224	       395	nm.c	FUNCTION_5	CALL_3
0x4002224	      0x440fb76526	          movzx r12d, word [rbp + 0x26] 	       396	nm.c	FUNCTION_5	IF_2
0x4002229	         0xfb66d28	           movzx ebp, byte [rbp + 0x28] 	       396	nm.c	FUNCTION_5	IF_2
0x400222d	            0x31ff	                            xor edi, edi	       396	nm.c	FUNCTION_5	IF_2
0x400222f	      0xba05000000	                              mov edx, 5	       396	nm.c	FUNCTION_5	IF_2
0x4002234	      0xbe00000000	                              mov esi, 0	       396	nm.c	FUNCTION_5	IF_2
0x4002239	      0xe800000000	                          call 0x400223e	       396	nm.c	FUNCTION_5	IF_2
0x400223e	      0xbe01000000	                              mov esi, 1	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002243	          0x4889c2	                            mov rdx, rax	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002246	      0xbf00000000	                              mov edi, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x400224b	            0x31c0	                            xor eax, eax	       178	stdio2.h	FUNCTION_48	CALL_1
0x400224d	          0x4589e0	                           mov r8d, r12d	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002250	            0x89e9	                            mov ecx, ebp	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002252	      0xe800000000	                          call 0x4002257	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002257	            0x85c0	                           test eax, eax	       397	nm.c	FUNCTION_5	CALL_5
0x4002259	     0xf8845030000	                            js 0x40025a4	       397	nm.c	FUNCTION_5	CALL_5
0x400225f	    0x488b15000000	            mov rdx, qword [0x04002266] 	       399	nm.c	FUNCTION_5
0x4002266	            0xeb70	                           jmp 0x40022d8	       399	nm.c	FUNCTION_5
0x4002268	     0xf1f84000000	                   nop dword [rax + rax]	       399	nm.c	FUNCTION_5
0x4002270	          0x4889f7	                            mov rdi, rsi	       399	nm.c	FUNCTION_5
0x4002273	      0xba03000000	                              mov edx, 3	       410	nm.c	FUNCTION_6	IF_1
0x4002278	          0x4889ee	                            mov rsi, rbp	       410	nm.c	FUNCTION_6	IF_1
0x400227b	      0xe800000000	                          call 0x4002280	       410	nm.c	FUNCTION_6	IF_1
0x4002280	          0x4885c0	                           test rax, rax	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x4002283	          0x4989c4	                            mov r12, rax	       410	nm.c	FUNCTION_6	IF_1
0x4002286	     0xf8466feffff	                            je 0x40020f2	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x400228c	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_28
0x400228f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002294	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002299	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400229b	      0xe800000000	                          call 0x40022a0	       104	stdio2.h	CALL_28
0x40022a0	          0x4c89e7	                            mov rdi, r12	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40022a3	      0xe800000000	                          call 0x40022a8	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40022a8	      0xe959feffff	                           jmp 0x4002106	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40022ad	           0xf1f00	                         nop dword [rax]	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40022b0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40022b5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40022ba	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40022bc	      0xe800000000	                          call 0x40022c1	       104	stdio2.h	CALL_28
0x40022c1	      0xe96efeffff	                           jmp 0x4002134	       104	stdio2.h	CALL_28
0x40022c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_28
0x40022d0	      0xba00000000	                              mov edx, 0	       352	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x40022d5	           0xf1f00	                         nop dword [rax]	       352	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x40022d8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40022dd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40022e2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40022e4	      0xe800000000	                          call 0x40022e9	       104	stdio2.h	CALL_28
0x40022e9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40022ed	          0x4885c0	                           test rax, rax	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40022f0	     0xf84d2000000	                            je 0x40023c8	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40022f6	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40022fa	          0x4885d2	                           test rdx, rdx	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40022fd	     0xf84d5000000	                            je 0x40023d8	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4002303	    0x8b2d00000000	            mov ebp, dword [0x04002309] 	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002309	          0x83fd20	                           cmp ebp, 0x20	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400230c	     0xf844e010000	                            je 0x4002460	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002312	          0x83fd40	                           cmp ebp, 0x40	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002315	     0xf850d010000	                           jne 0x4002428	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400231b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002320	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002325	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002327	      0xe800000000	                          call 0x400232c	       104	stdio2.h	CALL_28
0x400232c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4002330	          0x4885c0	                           test rax, rax	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4002333	     0xf84ca000000	                            je 0x4002403	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4002339	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1607	nm.c	
0x400233d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002342	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002347	              0x5b	                                 pop rbx	      1611	nm.c	FUNCTION_39	CALL_1
0x4002348	              0x5d	                                 pop rbp	      1611	nm.c	FUNCTION_39	CALL_1
0x4002349	            0x415c	                                 pop r12	      1611	nm.c	FUNCTION_39	CALL_1
0x400234b	          0x488b10	                    mov rdx, qword [rax]	       104	stdio2.h	CALL_28
0x400234e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002350	      0xe900000000	                           jmp 0x4002355	       104	stdio2.h	CALL_28
0x4002355	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4002358	      0xba00000000	                              mov edx, 0	       353	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400235d	      0xe976ffffff	                           jmp 0x40022d8	       353	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002362	    0x660f1f440000	                    nop word [rax + rax]	       353	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002368	      0xba00000000	                              mov edx, 0	       354	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400236d	      0xe966ffffff	                           jmp 0x40022d8	       354	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002372	    0x660f1f440000	                    nop word [rax + rax]	       354	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002378	      0xba00000000	                              mov edx, 0	       355	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400237d	      0xe956ffffff	                           jmp 0x40022d8	       355	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002382	    0x660f1f440000	                    nop word [rax + rax]	       355	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002388	      0xba00000000	                              mov edx, 0	       356	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400238d	      0xe946ffffff	                           jmp 0x40022d8	       356	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002392	    0x660f1f440000	                    nop word [rax + rax]	       356	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4002398	      0xba00000000	                              mov edx, 0	       357	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400239d	      0xe936ffffff	                           jmp 0x40022d8	       357	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x40023a2	    0x660f1f440000	                    nop word [rax + rax]	       357	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x40023a8	      0xba00000000	                              mov edx, 0	       351	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x40023ad	      0xe926ffffff	                           jmp 0x40022d8	       351	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x40023b2	    0x660f1f440000	                    nop word [rax + rax]	       351	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x40023b8	      0xba00000000	                              mov edx, 0	       381	nm.c	FUNCTION_5	SWITCH_1
0x40023bd	      0xe916ffffff	                           jmp 0x40022d8	       381	nm.c	FUNCTION_5	SWITCH_1
0x40023c2	    0x660f1f440000	                    nop word [rax + rax]	       381	nm.c	FUNCTION_5	SWITCH_1
0x40023c8	        0x488b5308	                mov rdx, qword [rbx + 8]	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40023cc	          0x4885d2	                           test rdx, rdx	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40023cf	     0xf852effffff	                           jne 0x4002303	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40023d5	           0xf1f00	                         nop dword [rax]	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x40023d8	    0x833d00000000	           cmp dword [0x040023df], 0x20 	      1598	nm.c	FUNCTION_38	ELSE_3
0x40023df	     0xf849b000000	                            je 0x4002480	      1598	nm.c	FUNCTION_38	ELSE_3
0x40023e5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40023e7	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40023ec	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40023f1	      0xe800000000	                          call 0x40023f6	       104	stdio2.h	CALL_28
0x40023f6	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x40023fa	          0x4885c0	                           test rax, rax	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x40023fd	     0xf8536ffffff	                           jne 0x4002339	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4002403	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1606	nm.c	FUNCTION_38
0x4002407	          0x4885c0	                           test rax, rax	      1606	nm.c	FUNCTION_38
0x400240a	     0xf8529ffffff	                           jne 0x4002339	      1606	nm.c	FUNCTION_38
0x4002410	              0x5b	                                 pop rbx	      1611	nm.c	FUNCTION_39	CALL_1
0x4002411	              0x5d	                                 pop rbp	      1611	nm.c	FUNCTION_39	CALL_1
0x4002412	            0x415c	                                 pop r12	      1611	nm.c	FUNCTION_39	CALL_1
0x4002414	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002419	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400241e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002420	      0xe900000000	                           jmp 0x4002425	       104	stdio2.h	CALL_28
0x4002425	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4002428	      0xbe00000000	                              mov esi, 0	      1511	nm.c	
0x400242d	            0x31ff	                            xor edi, edi	      1511	nm.c	
0x400242f	      0xba05000000	                              mov edx, 5	      1511	nm.c	
0x4002434	      0xe800000000	                          call 0x4002439	      1511	nm.c	
0x4002439	            0x89ee	                            mov esi, ebp	      1511	nm.c	
0x400243b	          0x4889c7	                            mov rdi, rax	      1511	nm.c	
0x400243e	            0x31c0	                            xor eax, eax	      1511	nm.c	
0x4002440	      0xe800000000	                          call 0x4002445	      1511	nm.c	
0x4002445	           0xf1f00	                         nop dword [rax]	      1511	nm.c	
0x4002448	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400244d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002452	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002454	      0xe800000000	                          call 0x4002459	       104	stdio2.h	CALL_28
0x4002459	      0xe9d6fcffff	                           jmp 0x4002134	       104	stdio2.h	CALL_28
0x400245e	            0x6690	                                     nop	       104	stdio2.h	CALL_28
0x4002460	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002465	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400246a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400246c	      0xe800000000	                          call 0x4002471	       104	stdio2.h	CALL_28
0x4002471	      0xe9b6feffff	                           jmp 0x400232c	       104	stdio2.h	CALL_28
0x4002476	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_28
0x4002480	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002485	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400248a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400248c	      0xe800000000	                          call 0x4002491	       104	stdio2.h	CALL_28
0x4002491	      0xe996feffff	                           jmp 0x400232c	       104	stdio2.h	CALL_28
0x4002496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_28
0x40024a0	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       104	stdio2.h	CALL_28
0x40024a4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40024a9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40024ae	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40024b0	      0xe800000000	                          call 0x40024b5	       104	stdio2.h	CALL_28
0x40024b5	          0x488b03	                    mov rax, qword [rbx]	      1579	nm.c	FUNCTION_38	ELSE_3
0x40024b8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40024bd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40024c2	         0xfbf501a	           movsx edx, word [rax + 0x1a] 	       104	stdio2.h	CALL_28
0x40024c6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40024c8	      0xe800000000	                          call 0x40024cd	       104	stdio2.h	CALL_28
0x40024cd	      0xe93effffff	                           jmp 0x4002410	       104	stdio2.h	CALL_28
0x40024d2	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_28
0x40024d8	    0x488b3d000000	            mov rdi, qword [0x040024df] 	       360	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x40024df	           0xfb6e9	                           movzx ebp, cl	      1586	nm.c	FUNCTION_38	ELSE_3	ELSE_5
0x40024e2	      0xe800000000	                          call 0x40024e7	       360	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x40024e7	          0x8d45f3	                    lea eax, [rbp - 0xd]	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x40024ea	      0xba05000000	                              mov edx, 5	       362	nm.c	FUNCTION_4	ELSE_1	IF_2
0x40024ef	      0xbe00000000	                              mov esi, 0	       362	nm.c	FUNCTION_4	ELSE_1	IF_2
0x40024f4	          0x83f802	                              cmp eax, 2	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x40024f7	            0x7612	                           jbe 0x400250b	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x40024f9	          0x8d45f6	                    lea eax, [rbp - 0xa]	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x40024fc	      0xba05000000	                              mov edx, 5	       364	nm.c	FUNCTION_4	ELSE_2
0x4002501	      0xbe00000000	                              mov esi, 0	       364	nm.c	FUNCTION_4	ELSE_2
0x4002506	          0x83f802	                              cmp eax, 2	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x4002509	            0x7745	                            ja 0x4002550	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x400250b	            0x31ff	                            xor edi, edi	       366	nm.c	FUNCTION_4	IF_3
0x400250d	      0xe800000000	                          call 0x4002512	       366	nm.c	FUNCTION_4	IF_3
0x4002512	            0x89e9	                            mov ecx, ebp	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002514	          0x4889c2	                            mov rdx, rax	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002517	      0xbe01000000	                              mov esi, 1	       178	stdio2.h	FUNCTION_48	CALL_1
0x400251c	            0x31c0	                            xor eax, eax	       178	stdio2.h	FUNCTION_48	CALL_1
0x400251e	      0xbf00000000	                              mov edi, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002523	      0xe800000000	                          call 0x4002528	       178	stdio2.h	FUNCTION_48	CALL_1
0x4002528	            0x85c0	                           test eax, eax	       367	nm.c	FUNCTION_4	CALL_6
0x400252a	            0x7878	                            js 0x40025a4	       367	nm.c	FUNCTION_4	CALL_6
0x400252c	    0x488b15000000	            mov rdx, qword [0x04002533] 	       369	nm.c	FUNCTION_4
0x4002533	      0xe9a0fdffff	                           jmp 0x40022d8	       369	nm.c	FUNCTION_4
0x4002538	     0xf1f84000000	                   nop dword [rax + rax]	       369	nm.c	FUNCTION_4
0x4002540	      0xba00000000	                              mov edx, 0	       382	nm.c	FUNCTION_5	SWITCH_1
0x4002545	      0xe98efdffff	                           jmp 0x40022d8	       382	nm.c	FUNCTION_5	SWITCH_1
0x400254a	    0x660f1f440000	                    nop word [rax + rax]	       382	nm.c	FUNCTION_5	SWITCH_1
0x4002550	      0xbe00000000	                              mov esi, 0	       366	nm.c	FUNCTION_4	IF_3
0x4002555	            0xebb4	                           jmp 0x400250b	       366	nm.c	FUNCTION_4	IF_3
0x4002557	    0x660f1f840000	                    nop word [rax + rax]	       366	nm.c	FUNCTION_4	IF_3
0x4002560	      0xba00000000	                              mov edx, 0	       386	nm.c	FUNCTION_5
0x4002565	      0xe96efdffff	                           jmp 0x40022d8	       386	nm.c	FUNCTION_5
0x400256a	    0x660f1f440000	                    nop word [rax + rax]	       386	nm.c	FUNCTION_5
0x4002570	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002575	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400257a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400257c	      0xe800000000	                          call 0x4002581	       104	stdio2.h	CALL_28
0x4002581	      0xe963fdffff	                           jmp 0x40022e9	       104	stdio2.h	CALL_28
0x4002586	      0xba00000000	                              mov edx, 0	       391	nm.c	FUNCTION_5	SWITCH_2
0x400258b	      0xe948fdffff	                           jmp 0x40022d8	       391	nm.c	FUNCTION_5	SWITCH_2
0x4002590	      0xba00000000	                              mov edx, 0	       392	nm.c	FUNCTION_5	SWITCH_2
0x4002595	      0xe93efdffff	                           jmp 0x40022d8	       392	nm.c	FUNCTION_5	SWITCH_2
0x400259a	      0xba00000000	                              mov edx, 0	       390	nm.c	FUNCTION_5	SWITCH_2
0x400259f	      0xe934fdffff	                           jmp 0x40022d8	       390	nm.c	FUNCTION_5	SWITCH_2
0x40025a4	      0xe800000000	                          call 0x40025a9	       398	nm.c	FUNCTION_5
0x40025a9	            0x8b38	                    mov edi, dword [rax]	       398	nm.c	FUNCTION_5
0x40025ab	      0xe800000000	                          call 0x40025b0	       398	nm.c	FUNCTION_5
0x40025b0	      0xbf00000000	                              mov edi, 0	       398	nm.c	FUNCTION_5
0x40025b5	          0x4889c6	                            mov rsi, rax	       398	nm.c	FUNCTION_5
0x40025b8	            0x31c0	                            xor eax, eax	       398	nm.c	FUNCTION_5
0x40025ba	      0xe800000000	                          call 0x40025bf	       398	nm.c	FUNCTION_5
display_file	FOR,0:functions,0:SWITCH,0:IF,7:DO,0:WHILE,0:ELSE,2:CALL,15	256
0x4001870	            0x4157	                                push r15	      1298	nm.c	FUNCTION_23
0x4001872	            0x4156	                                push r14	      1298	nm.c	FUNCTION_23
0x4001874	            0x4155	                                push r13	      1298	nm.c	FUNCTION_23
0x4001876	            0x4154	                                push r12	      1298	nm.c	FUNCTION_23
0x4001878	          0x4989fd	                            mov r13, rdi	      1298	nm.c	FUNCTION_23
0x400187b	              0x55	                                push rbp	      1298	nm.c	FUNCTION_23
0x400187c	              0x53	                                push rbx	      1298	nm.c	FUNCTION_23
0x400187d	        0x4883ec18	                           sub rsp, 0x18	      1298	nm.c	FUNCTION_23
0x4001881	    0x64488b042528	                mov rax, qword fs:[0x28]	      1298	nm.c	FUNCTION_23
0x400188a	      0x4889442408	                mov qword [rsp + 8], rax	      1298	nm.c	FUNCTION_23
0x400188f	            0x31c0	                            xor eax, eax	      1298	nm.c	FUNCTION_23
0x4001891	      0xe800000000	                          call 0x4001896	      1303	nm.c	FUNCTION_23	IF_1
0x4001896	          0x4885c0	                           test rax, rax	      1303	nm.c	FUNCTION_23	IF_1
0x4001899	     0xf8e7c020000	                           jle 0x4001b1b	      1303	nm.c	FUNCTION_23	IF_1
0x400189f	    0x488b05000000	            mov rax, qword [0x040018a6] 	      1306	nm.c	FUNCTION_23	IF_2
0x40018a6	      0xbe00000000	                              mov esi, 0	      1306	nm.c	FUNCTION_23	IF_2
0x40018ab	          0x4c89ef	                            mov rdi, r13	      1306	nm.c	FUNCTION_23	IF_2
0x40018ae	          0x4885c0	                           test rax, rax	      1306	nm.c	FUNCTION_23	IF_2
0x40018b1	        0x480f45f0	                         cmovne rsi, rax	      1306	nm.c	FUNCTION_23	IF_2
0x40018b5	      0xe800000000	                          call 0x40018ba	      1306	nm.c	FUNCTION_23	IF_2
0x40018ba	          0x4885c0	                           test rax, rax	      1307	nm.c	FUNCTION_23	IF_2
0x40018bd	          0x4889c5	                            mov rbp, rax	      1306	nm.c	FUNCTION_23	IF_2
0x40018c0	     0xf847b030000	                            je 0x4001c41	      1307	nm.c	FUNCTION_23	IF_2
0x40018c6	    0x8b1500000000	            mov edx, dword [0x040018cc] 	      1314	nm.c	FUNCTION_23	IF_3
0x40018cc	            0x85d2	                           test edx, edx	      1314	nm.c	FUNCTION_23	IF_3
0x40018ce	            0x7407	                            je 0x40018d7	      1314	nm.c	FUNCTION_23	IF_3
0x40018d0	    0x814844000010	         or dword [rax + 0x44], 0x100000	      1315	nm.c	FUNCTION_23
0x40018d7	      0xbe02000000	                              mov esi, 2	      1317	nm.c	FUNCTION_23	IF_4
0x40018dc	          0x4889ef	                            mov rdi, rbp	      1317	nm.c	FUNCTION_23	IF_4
0x40018df	      0xe800000000	                          call 0x40018e4	      1317	nm.c	FUNCTION_23	IF_4
0x40018e4	            0x85c0	                           test eax, eax	      1317	nm.c	FUNCTION_23	IF_4
0x40018e6	     0xf84de000000	                            je 0x40019ca	      1317	nm.c	FUNCTION_23	IF_4
0x40018ec	    0x488b05000000	            mov rax, qword [0x040018f3] 	      1242	nm.c	ELSE_1	FUNCTION_22
0x40018f3	        0x488b7d00	                    mov rdi, qword [rbp]	      1242	nm.c	ELSE_1	FUNCTION_22
0x40018f7	          0xff5008	                    call qword [rax + 8]	      1242	nm.c	ELSE_1	FUNCTION_22
0x40018fa	    0x833d00000000	               cmp dword [0x04001901], 0	      1244	nm.c	ELSE_1	FUNCTION_22	CALL_3
0x4001901	     0xf851b020000	                           jne 0x4001b22	      1244	nm.c	ELSE_1	FUNCTION_22	CALL_3
0x4001907	          0x4531e4	                          xor r12d, r12d	      1306	nm.c	FUNCTION_23	IF_2
0x400190a	            0xeb66	                           jmp 0x4001972	      1306	nm.c	FUNCTION_23	IF_2
0x400190c	         0xf1f4000	                         nop dword [rax]	      1306	nm.c	FUNCTION_23	IF_2
0x4001910	          0x4889df	                            mov rdi, rbx	      1218	nm.c	FUNCTION_21
0x4001913	      0xe800000000	                          call 0x4001918	      1218	nm.c	FUNCTION_21
0x4001918	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1220	nm.c	FUNCTION_21	IF_1
0x400191b	    0x890500000000	            mov dword [0x04001921], eax 	      1218	nm.c	FUNCTION_21
0x4001921	     0xf8439010000	                            je 0x4001a60	      1220	nm.c	FUNCTION_21	IF_1
0x4001927	    0x488b05000000	            mov rax, qword [0x0400192e] 	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x400192e	          0x488b33	                    mov rsi, qword [rbx]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001931	        0x488b7d00	                    mov rdi, qword [rbp]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001935	          0xff5010	                 call qword [rax + 0x10]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001938	          0x4889ee	                            mov rsi, rbp	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x400193b	          0x4889df	                            mov rdi, rbx	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x400193e	      0xe89df2ffff	               call sym.display_rel_file	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001943	          0x4d85e4	                           test r12, r12	      1277	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4001946	            0x7427	                            je 0x400196f	      1277	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4001948	          0x4c89e7	                            mov rdi, r12	      1279	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x400194b	      0xe800000000	                          call 0x4001950	      1279	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4001950	          0x4939dc	                            cmp r12, rbx	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4001953	    0x48c705000000	               mov qword [0x0400195e], 0	      1280	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x400195e	    0x48c705000000	               mov qword [0x04001969], 0	      1281	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4001969	     0xf84a0000000	                            je 0x4001a0f	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x400196f	          0x4989dc	                            mov r12, rbx	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4001972	          0x4c89e6	                            mov rsi, r12	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001975	          0x4889ef	                            mov rdi, rbp	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001978	      0xe800000000	                          call 0x400197d	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x400197d	          0x4885c0	                           test rax, rax	      1253	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001980	          0x4889c3	                            mov rbx, rax	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001983	     0xf84ff000000	                            je 0x4001a88	      1253	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001989	          0x4889e2	                            mov rdx, rsp	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x400198c	      0xbe01000000	                              mov esi, 1	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001991	          0x4889c7	                            mov rdi, rax	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001994	      0xe800000000	                          call 0x4001999	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001999	            0x85c0	                           test eax, eax	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x400199b	     0xf856fffffff	                           jne 0x4001910	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x40019a1	          0x488b3b	                    mov rdi, qword [rbx]	      1269	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_17
0x40019a4	      0xe800000000	                          call 0x40019a9	      1269	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_17
0x40019a9	      0xe800000000	                          call 0x40019ae	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x40019ae	          0x83f80d	                            cmp eax, 0xd	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x40019b1	            0x7590	                           jne 0x4001943	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x40019b3	        0x488b3c24	                    mov rdi, qword [rsp]	      1272	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_19
0x40019b7	      0xe800000000	                          call 0x40019bc	      1272	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_19
0x40019bc	        0x488b3c24	                    mov rdi, qword [rsp]	      1273	nm.c	FUNCTION_22	FOR_1	IF_5
0x40019c0	      0xe800000000	                          call 0x40019c5	      1273	nm.c	FUNCTION_22	FOR_1	IF_5
0x40019c5	      0xe979ffffff	                           jmp 0x4001943	      1273	nm.c	FUNCTION_22	FOR_1	IF_5
0x40019ca	          0x4889e2	                            mov rdx, rsp	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40019cd	      0xbe01000000	                              mov esi, 1	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40019d2	          0x4889ef	                            mov rdi, rbp	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40019d5	      0xe800000000	                          call 0x40019da	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40019da	            0x85c0	                           test eax, eax	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40019dc	     0xf840a010000	                            je 0x4001aec	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40019e2	          0x4889ef	                            mov rdi, rbp	      1218	nm.c	FUNCTION_21
0x40019e5	      0xe800000000	                          call 0x40019ea	      1218	nm.c	FUNCTION_21
0x40019ea	    0x890500000000	            mov dword [0x040019f0], eax 	      1218	nm.c	FUNCTION_21
0x40019f0	          0x83c001	                              add eax, 1	      1220	nm.c	FUNCTION_21	IF_1
0x40019f3	     0xf8420020000	                            je 0x4001c19	      1220	nm.c	FUNCTION_21	IF_1
0x40019f9	    0x488b05000000	            mov rax, qword [0x04001a00] 	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x4001a00	          0x4c89ef	                            mov rdi, r13	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x4001a03	            0xff10	                        call qword [rax]	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x4001a05	            0x31f6	                            xor esi, esi	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4001a07	          0x4889ef	                            mov rdi, rbp	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4001a0a	      0xe8d1f1ffff	               call sym.display_rel_file	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4001a0f	      0xbb01000000	                              mov ebx, 1	      1299	nm.c	FUNCTION_23
0x4001a14	          0x4889ef	                            mov rdi, rbp	      1338	nm.c	FUNCTION_23	CALL_15
0x4001a17	      0xe800000000	                          call 0x4001a1c	      1338	nm.c	FUNCTION_23	CALL_15
0x4001a1c	            0x85c0	                           test eax, eax	      1338	nm.c	FUNCTION_23	CALL_15
0x4001a1e	     0xf8461020000	                            je 0x4001c85	      1338	nm.c	FUNCTION_23	CALL_15
0x4001a24	    0x48c705000000	               mov qword [0x04001a2f], 0	      1341	nm.c	FUNCTION_23
0x4001a2f	    0x48c705000000	               mov qword [0x04001a3a], 0	      1342	nm.c	FUNCTION_23
0x4001a3a	            0x89d8	                            mov eax, ebx	      1344	nm.c	FUNCTION_23
0x4001a3c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1345	nm.c	
0x4001a41	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1345	nm.c	
0x4001a4a	     0xf8530020000	                           jne 0x4001c80	      1345	nm.c	
0x4001a50	        0x4883c418	                           add rsp, 0x18	      1345	nm.c	
0x4001a54	              0x5b	                                 pop rbx	      1345	nm.c	
0x4001a55	              0x5d	                                 pop rbp	      1345	nm.c	
0x4001a56	            0x415c	                                 pop r12	      1345	nm.c	
0x4001a58	            0x415d	                                 pop r13	      1345	nm.c	
0x4001a5a	            0x415e	                                 pop r14	      1345	nm.c	
0x4001a5c	            0x415f	                                 pop r15	      1345	nm.c	
0x4001a5e	              0xc3	                                     ret	      1345	nm.c	
0x4001a5f	              0x90	                                     nop	      1345	nm.c	
0x4001a60	        0x488b4308	                mov rax, qword [rbx + 8]	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001a64	      0xbe00000000	                              mov esi, 0	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001a69	          0x4c8b30	                    mov r14, qword [rax]	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001a6c	          0x4c89f7	                            mov rdi, r14	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001a6f	      0xe800000000	                          call 0x4001a74	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001a74	          0x4885c0	                           test rax, rax	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001a77	            0x7449	                            je 0x4001ac2	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001a79	    0xc70500000000	           mov dword [0x04001a83], 0x40 	      1229	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4001a83	      0xe99ffeffff	                           jmp 0x4001927	      1229	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4001a88	      0xe800000000	                          call 0x4001a8d	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x4001a8d	          0x83f809	                              cmp eax, 9	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x4001a90	     0xf85f7010000	                           jne 0x4001c8d	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x4001a96	          0x4d85e4	                           test r12, r12	      1288	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4001a99	     0xf8470ffffff	                            je 0x4001a0f	      1288	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4001a9f	          0x4c89e7	                            mov rdi, r12	      1290	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4001aa2	      0xe800000000	                          call 0x4001aa7	      1290	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4001aa7	    0x48c705000000	               mov qword [0x04001ab2], 0	      1291	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4001ab2	    0x48c705000000	               mov qword [0x04001abd], 0	      1292	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4001abd	      0xe94dffffff	                           jmp 0x4001a0f	      1292	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4001ac2	        0x41803e6d	                    cmp byte [r14], 0x6d	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001ac6	            0x7515	                           jne 0x4001add	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001ac8	      0x41807e016d	                cmp byte [r14 + 1], 0x6d	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001acd	            0x750e	                           jne 0x4001add	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001acf	      0x41807e026f	                cmp byte [r14 + 2], 0x6f	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001ad4	            0x7507	                           jne 0x4001add	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001ad6	      0x41807e0300	                   cmp byte [r14 + 3], 0	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001adb	            0x749c	                            je 0x4001a79	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001add	    0xc70500000000	           mov dword [0x04001ae7], 0x20 	      1231	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4001ae7	      0xe93bfeffff	                           jmp 0x4001927	      1231	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4001aec	          0x4c89ef	                            mov rdi, r13	      1329	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_11
0x4001aef	            0x31db	                            xor ebx, ebx	      1335	nm.c	FUNCTION_23	ELSE_2
0x4001af1	      0xe800000000	                          call 0x4001af6	      1329	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_11
0x4001af6	      0xe800000000	                          call 0x4001afb	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x4001afb	          0x83f80d	                            cmp eax, 0xd	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x4001afe	     0xf8510ffffff	                           jne 0x4001a14	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x4001b04	        0x488b3c24	                    mov rdi, qword [rsp]	      1332	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_13
0x4001b08	      0xe800000000	                          call 0x4001b0d	      1332	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_13
0x4001b0d	        0x488b3c24	                    mov rdi, qword [rsp]	      1333	nm.c	FUNCTION_23	ELSE_2	IF_6
0x4001b11	      0xe800000000	                          call 0x4001b16	      1333	nm.c	FUNCTION_23	ELSE_2	IF_6
0x4001b16	      0xe9f9feffff	                           jmp 0x4001a14	      1333	nm.c	FUNCTION_23	ELSE_2	IF_6
0x4001b1b	            0x31c0	                            xor eax, eax	      1304	nm.c	FUNCTION_23
0x4001b1d	      0xe91affffff	                           jmp 0x4001a3c	      1304	nm.c	FUNCTION_23
0x4001b22	        0x4883ceff	              or rsi, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4001b26	          0x4889e2	                            mov rdx, rsp	       430	nm.c	FUNCTION_7	FOR_1
0x4001b29	          0x4889ef	                            mov rdi, rbp	       430	nm.c	FUNCTION_7	FOR_1
0x4001b2c	      0xe800000000	                          call 0x4001b31	       430	nm.c	FUNCTION_7	FOR_1
0x4001b31	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4001b35	          0x4889c3	                            mov rbx, rax	       430	nm.c	FUNCTION_7	FOR_1
0x4001b38	     0xf84c9fdffff	                            je 0x4001907	       430	nm.c	FUNCTION_7	FOR_1
0x4001b3e	            0x31ff	                            xor edi, edi	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001b40	      0xba05000000	                              mov edx, 5	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001b45	      0xbe00000000	                              mov esi, 0	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001b4a	      0xe800000000	                          call 0x4001b4f	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001b4f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001b54	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x4001b57	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001b59	      0xe800000000	                          call 0x4001b5e	       104	stdio2.h	CALL_28
0x4001b5e	            0xeb43	                           jmp 0x4001ba3	       104	stdio2.h	CALL_28
0x4001b60	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_28
0x4001b63	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001b68	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001b6d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001b6f	      0xe800000000	                          call 0x4001b74	       104	stdio2.h	CALL_28
0x4001b74	          0x498b16	                    mov rdx, qword [r14]	       104	stdio2.h	CALL_28
0x4001b77	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001b7c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001b81	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001b83	      0xe800000000	                          call 0x4001b88	       104	stdio2.h	CALL_28
0x4001b88	          0x4889de	                            mov rsi, rbx	       432	nm.c	FUNCTION_7	FOR_1
0x4001b8b	          0x4889e2	                            mov rdx, rsp	       432	nm.c	FUNCTION_7	FOR_1
0x4001b8e	          0x4889ef	                            mov rdi, rbp	       432	nm.c	FUNCTION_7	FOR_1
0x4001b91	      0xe800000000	                          call 0x4001b96	       432	nm.c	FUNCTION_7	FOR_1
0x4001b96	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4001b9a	          0x4889c3	                            mov rbx, rax	       432	nm.c	FUNCTION_7	FOR_1
0x4001b9d	     0xf8464fdffff	                            je 0x4001907	       430	nm.c	FUNCTION_7	FOR_1
0x4001ba3	        0x488b4508	                mov rax, qword [rbp + 8]	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001ba7	          0x4889de	                            mov rsi, rbx	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001baa	          0x4889ef	                            mov rdi, rbp	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001bad	    0xff90d8010000	                call qword [rax + 0x1d8]	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001bb3	          0x4885c0	                           test rax, rax	       441	nm.c	FUNCTION_7	FOR_1	CALL_5
0x4001bb6	          0x4989c6	                            mov r14, rax	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001bb9	     0xf84b7000000	                            je 0x4001c76	       441	nm.c	FUNCTION_7	FOR_1	CALL_5
0x4001bbf	        0x488b0424	                    mov rax, qword [rsp]	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001bc3	          0x4c8b20	                    mov r12, qword [rax]	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001bc6	          0x4d85e4	                           test r12, r12	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001bc9	            0x74bd	                            je 0x4001b88	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001bcb	    0x8b0500000000	            mov eax, dword [0x04001bd1] 	       408	nm.c	FUNCTION_6	IF_1
0x4001bd1	            0x85c0	                           test eax, eax	       408	nm.c	FUNCTION_6	IF_1
0x4001bd3	            0x748b	                            je 0x4001b60	       408	nm.c	FUNCTION_6	IF_1
0x4001bd5	      0x41803c2400	                       cmp byte [r12], 0	       408	nm.c	FUNCTION_6	IF_1
0x4001bda	            0x7484	                            je 0x4001b60	       408	nm.c	FUNCTION_6	IF_1
0x4001bdc	      0xba03000000	                              mov edx, 3	       410	nm.c	FUNCTION_6	IF_1
0x4001be1	          0x4c89e6	                            mov rsi, r12	       410	nm.c	FUNCTION_6	IF_1
0x4001be4	          0x4889ef	                            mov rdi, rbp	       410	nm.c	FUNCTION_6	IF_1
0x4001be7	      0xe800000000	                          call 0x4001bec	       410	nm.c	FUNCTION_6	IF_1
0x4001bec	          0x4885c0	                           test rax, rax	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x4001bef	          0x4989c7	                            mov r15, rax	       410	nm.c	FUNCTION_6	IF_1
0x4001bf2	     0xf8468ffffff	                            je 0x4001b60	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x4001bf8	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_28
0x4001bfb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001c00	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001c05	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4001c07	      0xe800000000	                          call 0x4001c0c	       104	stdio2.h	CALL_28
0x4001c0c	          0x4c89ff	                            mov rdi, r15	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x4001c0f	      0xe800000000	                          call 0x4001c14	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x4001c14	      0xe95bffffff	                           jmp 0x4001b74	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x4001c19	        0x488b4508	                mov rax, qword [rbp + 8]	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001c1d	      0xbe00000000	                              mov esi, 0	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001c22	          0x488b18	                    mov rbx, qword [rax]	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001c25	          0x4889df	                            mov rdi, rbx	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001c28	      0xe800000000	                          call 0x4001c2d	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001c2d	          0x4885c0	                           test rax, rax	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001c30	            0x741e	                            je 0x4001c50	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4001c32	    0xc70500000000	           mov dword [0x04001c3c], 0x40 	      1229	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4001c3c	      0xe9b8fdffff	                           jmp 0x40019f9	      1229	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4001c41	          0x4c89ef	                            mov rdi, r13	      1309	nm.c	FUNCTION_23	IF_2
0x4001c44	      0xe800000000	                          call 0x4001c49	      1309	nm.c	FUNCTION_23	IF_2
0x4001c49	            0x31c0	                            xor eax, eax	      1310	nm.c	FUNCTION_23	IF_2
0x4001c4b	      0xe9ecfdffff	                           jmp 0x4001a3c	      1310	nm.c	FUNCTION_23	IF_2
0x4001c50	          0x803b6d	                    cmp byte [rbx], 0x6d	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001c53	            0x7512	                           jne 0x4001c67	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001c55	        0x807b016d	                cmp byte [rbx + 1], 0x6d	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001c59	            0x750c	                           jne 0x4001c67	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001c5b	        0x807b026f	                cmp byte [rbx + 2], 0x6f	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001c5f	            0x7506	                           jne 0x4001c67	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001c61	        0x807b0300	                   cmp byte [rbx + 3], 0	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001c65	            0x74cb	                            je 0x4001c32	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4001c67	    0xc70500000000	           mov dword [0x04001c71], 0x20 	      1231	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4001c71	      0xe983fdffff	                           jmp 0x40019f9	      1231	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4001c76	      0xbf00000000	                              mov edi, 0	       442	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001c7b	      0xe800000000	                          call 0x4001c80	       442	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001c80	      0xe800000000	                          call 0x4001c85	      1345	nm.c	
0x4001c85	          0x4c89ef	                            mov rdi, r13	      1339	nm.c	FUNCTION_23
0x4001c88	      0xe800000000	                          call 0x4001c8d	      1339	nm.c	FUNCTION_23
0x4001c8d	        0x488b7d00	                    mov rdi, qword [rbp]	      1256	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001c91	      0xe800000000	                          call 0x4001c96	      1256	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
print_symbol_info_bsd	FOR,0:functions,0:SWITCH,0:IF,5:DO,0:WHILE,0:ELSE,2:CALL,5	168
0x40025c0	            0x4154	                                push r12	      1520	nm.c	FUNCTION_37	IF_1
0x40025c2	              0x55	                                push rbp	      1520	nm.c	FUNCTION_37	IF_1
0x40025c3	          0x4889f5	                            mov rbp, rsi	      1520	nm.c	FUNCTION_37	IF_1
0x40025c6	              0x53	                                push rbx	      1520	nm.c	FUNCTION_37	IF_1
0x40025c7	          0x488b07	                    mov rax, qword [rdi]	      1521	nm.c	FUNCTION_37	IF_1
0x40025ca	          0x4889fb	                            mov rbx, rdi	      1520	nm.c	FUNCTION_37	IF_1
0x40025cd	         0xfbe7808	               movsx edi, byte [rax + 8]	      1521	nm.c	FUNCTION_37	IF_1
0x40025d1	      0xe800000000	                          call 0x40025d6	      1521	nm.c	FUNCTION_37	IF_1
0x40025d6	            0x85c0	                           test eax, eax	      1521	nm.c	FUNCTION_37	IF_1
0x40025d8	            0x7476	                            je 0x4002650	      1521	nm.c	FUNCTION_37	IF_1
0x40025da	    0x833d00000000	           cmp dword [0x040025e1], 0x40 	      1523	nm.c	FUNCTION_37	ELSE_1
0x40025e1	     0xf84c9010000	                            je 0x40027b0	      1523	nm.c	FUNCTION_37	ELSE_1
0x40025e7	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40025ec	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40025f1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40025f3	      0xe800000000	                          call 0x40025f8	       104	stdio2.h	CALL_28
0x40025f8	          0x488b03	                    mov rax, qword [rbx]	      1544	nm.c	FUNCTION_37	IF_5
0x40025fb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002600	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002605	         0xfbe5008	               movsx edx, byte [rax + 8]	       104	stdio2.h	CALL_28
0x4002609	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400260b	      0xe800000000	                          call 0x4002610	       104	stdio2.h	CALL_28
0x4002610	          0x488b03	                    mov rax, qword [rbx]	      1546	nm.c	FUNCTION_37	IF_5
0x4002613	        0x8078082d	                cmp byte [rax + 8], 0x2d	      1546	nm.c	FUNCTION_37	IF_5
0x4002617	     0xf84b3010000	                            je 0x40027d0	      1546	nm.c	FUNCTION_37	IF_5
0x400261d	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1555	nm.c	FUNCTION_38
0x4002621	    0x8b0500000000	            mov eax, dword [0x04002627] 	       408	nm.c	FUNCTION_6	IF_1
0x4002627	            0x85c0	                           test eax, eax	       408	nm.c	FUNCTION_6	IF_1
0x4002629	            0x7409	                            je 0x4002634	       408	nm.c	FUNCTION_6	IF_1
0x400262b	          0x803b00	                       cmp byte [rbx], 0	       408	nm.c	FUNCTION_6	IF_1
0x400262e	     0xf851c010000	                           jne 0x4002750	       408	nm.c	FUNCTION_6	IF_1
0x4002634	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_28
0x4002637	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400263c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002641	              0x5b	                                 pop rbx	      1556	nm.c	FUNCTION_38	CALL_1
0x4002642	              0x5d	                                 pop rbp	      1556	nm.c	FUNCTION_38	CALL_1
0x4002643	            0x415c	                                 pop r12	      1556	nm.c	FUNCTION_38	CALL_1
0x4002645	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002647	      0xe900000000	                           jmp 0x400264c	       104	stdio2.h	CALL_28
0x400264c	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4002650	    0x8b3500000000	            mov esi, dword [0x04002656] 	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002656	            0x85f6	                           test esi, esi	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002658	            0x740e	                            je 0x4002668	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400265a	    0x8b0d00000000	            mov ecx, dword [0x04002660] 	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002660	            0x85c9	                           test ecx, ecx	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002662	     0xf84b0000000	                            je 0x4002718	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002668	          0x488b03	                    mov rax, qword [rbx]	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400266b	          0x488b10	                    mov rdx, qword [rax]	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400266e	    0x448b25000000	           mov r12d, dword [0x04002675] 	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002675	        0x4183fc20	                          cmp r12d, 0x20	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002679	     0xf84bb000000	                            je 0x400273a	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400267f	        0x4183fc40	                          cmp r12d, 0x40	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002683	     0xf8507010000	                           jne 0x4002790	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002689	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400268e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002693	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002695	      0xe800000000	                          call 0x400269a	       104	stdio2.h	CALL_28
0x400269a	    0x8b1500000000	            mov edx, dword [0x040026a0] 	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026a0	            0x85d2	                           test edx, edx	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026a2	     0xf8450ffffff	                            je 0x40025f8	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026a8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026ac	          0x4885c0	                           test rax, rax	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026af	     0xf8493010000	                            je 0x4002848	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026b5	      0x4883783800	               cmp qword [rax + 0x38], 0	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026ba	           0xf95c0	                                setne al	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026bd	            0x84c0	                             test al, al	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026bf	     0xf8433ffffff	                            je 0x40025f8	      1537	nm.c	FUNCTION_37	ELSE_1
0x40026c5	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x40026ca	      0xe800000000	                          call 0x40026cf	       104	stdio2.h	CALL_28
0x40026cf	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1540	nm.c	FUNCTION_37
0x40026d3	          0x4885c0	                           test rax, rax	      1540	nm.c	FUNCTION_37
0x40026d6	     0xf8492010000	                            je 0x400286e	      1540	nm.c	FUNCTION_37
0x40026dc	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1540	nm.c	FUNCTION_37
0x40026e0	    0x448b25000000	           mov r12d, dword [0x040026e7] 	      1478	nm.c	FUNCTION_36	SWITCH_1
0x40026e7	        0x4183fc20	                          cmp r12d, 0x20	      1478	nm.c	FUNCTION_36	SWITCH_1
0x40026eb	     0xf8467010000	                            je 0x4002858	      1478	nm.c	FUNCTION_36	SWITCH_1
0x40026f1	        0x4183fc40	                          cmp r12d, 0x40	      1478	nm.c	FUNCTION_36	SWITCH_1
0x40026f5	     0xf8595000000	                           jne 0x4002790	      1478	nm.c	FUNCTION_36	SWITCH_1
0x40026fb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002700	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002705	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002707	      0xe800000000	                          call 0x400270c	       104	stdio2.h	CALL_28
0x400270c	      0xe9e7feffff	                           jmp 0x40025f8	       104	stdio2.h	CALL_28
0x4002711	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4002718	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400271c	          0x4885c0	                           test rax, rax	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400271f	     0xf8413010000	                            je 0x4002838	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002725	    0x448b25000000	           mov r12d, dword [0x0400272c] 	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400272c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002730	        0x4183fc20	                          cmp r12d, 0x20	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4002734	     0xf8545ffffff	                           jne 0x400267f	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400273a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400273f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002744	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002746	      0xe800000000	                          call 0x400274b	       104	stdio2.h	CALL_28
0x400274b	      0xe94affffff	                           jmp 0x400269a	       104	stdio2.h	CALL_28
0x4002750	          0x4889ef	                            mov rdi, rbp	       410	nm.c	FUNCTION_6	IF_1
0x4002753	      0xba03000000	                              mov edx, 3	       410	nm.c	FUNCTION_6	IF_1
0x4002758	          0x4889de	                            mov rsi, rbx	       410	nm.c	FUNCTION_6	IF_1
0x400275b	      0xe800000000	                          call 0x4002760	       410	nm.c	FUNCTION_6	IF_1
0x4002760	          0x4885c0	                           test rax, rax	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x4002763	          0x4889c5	                            mov rbp, rax	       410	nm.c	FUNCTION_6	IF_1
0x4002766	     0xf84c8feffff	                            je 0x4002634	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x400276c	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_28
0x400276f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002774	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002779	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400277b	      0xe800000000	                          call 0x4002780	       104	stdio2.h	CALL_28
0x4002780	              0x5b	                                 pop rbx	      1556	nm.c	FUNCTION_38	CALL_1
0x4002781	          0x4889ef	                            mov rdi, rbp	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x4002784	              0x5d	                                 pop rbp	      1556	nm.c	FUNCTION_38	CALL_1
0x4002785	            0x415c	                                 pop r12	      1556	nm.c	FUNCTION_38	CALL_1
0x4002787	      0xe900000000	                           jmp 0x400278c	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x400278c	         0xf1f4000	                         nop dword [rax]	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x4002790	      0xbe00000000	                              mov esi, 0	      1511	nm.c	
0x4002795	            0x31ff	                            xor edi, edi	      1511	nm.c	
0x4002797	      0xba05000000	                              mov edx, 5	      1511	nm.c	
0x400279c	      0xe800000000	                          call 0x40027a1	      1511	nm.c	
0x40027a1	          0x4489e6	                           mov esi, r12d	      1511	nm.c	
0x40027a4	          0x4889c7	                            mov rdi, rax	      1511	nm.c	
0x40027a7	            0x31c0	                            xor eax, eax	      1511	nm.c	
0x40027a9	      0xe800000000	                          call 0x40027ae	      1511	nm.c	
0x40027ae	            0x6690	                                     nop	      1511	nm.c	
0x40027b0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40027b5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40027ba	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40027bc	      0xe800000000	                          call 0x40027c1	       104	stdio2.h	CALL_28
0x40027c1	      0xe921feffff	                           jmp 0x40025e7	       104	stdio2.h	CALL_28
0x40027c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_28
0x40027d0	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x40027d5	      0xe800000000	                          call 0x40027da	       104	stdio2.h	CALL_28
0x40027da	          0x488b03	                    mov rax, qword [rbx]	      1550	nm.c	FUNCTION_37	CALL_5
0x40027dd	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40027e2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40027e7	         0xfbe5019	           movsx edx, byte [rax + 0x19] 	       104	stdio2.h	CALL_28
0x40027eb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x40027ed	      0xe800000000	                          call 0x40027f2	       104	stdio2.h	CALL_28
0x40027f2	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x40027f7	      0xe800000000	                          call 0x40027fc	       104	stdio2.h	CALL_28
0x40027fc	          0x488b03	                    mov rax, qword [rbx]	      1552	nm.c	
0x40027ff	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4002804	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002809	         0xfbf501a	           movsx edx, word [rax + 0x1a] 	       104	stdio2.h	CALL_28
0x400280d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x400280f	      0xe800000000	                          call 0x4002814	       104	stdio2.h	CALL_28
0x4002814	          0x488b03	                    mov rax, qword [rbx]	      1553	nm.c	
0x4002817	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400281c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002821	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       104	stdio2.h	CALL_28
0x4002825	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002827	      0xe800000000	                          call 0x400282c	       104	stdio2.h	CALL_28
0x400282c	          0x488b03	                    mov rax, qword [rbx]	       104	stdio2.h	CALL_28
0x400282f	      0xe9e9fdffff	                           jmp 0x400261d	       104	stdio2.h	CALL_28
0x4002834	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_28
0x4002838	        0x488b5308	                mov rdx, qword [rbx + 8]	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400283c	      0xe92dfeffff	                           jmp 0x400266e	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002841	     0xf1f80000000	                         nop dword [rax]	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4002848	      0x48837b0800	                  cmp qword [rbx + 8], 0	      1537	nm.c	FUNCTION_37	ELSE_1
0x400284d	           0xf95c0	                                setne al	      1537	nm.c	FUNCTION_37	ELSE_1
0x4002850	      0xe968feffff	                           jmp 0x40026bd	      1537	nm.c	FUNCTION_37	ELSE_1
0x4002855	           0xf1f00	                         nop dword [rax]	      1537	nm.c	FUNCTION_37	ELSE_1
0x4002858	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400285d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4002862	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_28
0x4002864	      0xe800000000	                          call 0x4002869	       104	stdio2.h	CALL_28
0x4002869	      0xe98afdffff	                           jmp 0x40025f8	       104	stdio2.h	CALL_28
0x400286e	        0x488b5308	                mov rdx, qword [rbx + 8]	      1540	nm.c	FUNCTION_37
0x4002872	      0xe969feffff	                           jmp 0x40026e0	      1540	nm.c	FUNCTION_37
main	FOR,0:functions,0:SWITCH,1:IF,8:DO,0:WHILE,2:ELSE,0:CALL,39	267
0x4000040	            0xf3c3	                                     ret	      1400	nm.c	IF_2	ELSE_2
0x4000042	         0xf1f4000	                         nop dword [rax]	      1400	nm.c	IF_2	ELSE_2
0x4000046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1400	nm.c	IF_2	ELSE_2
0x4000050	            0x4154	                                push r12	       236	nm.c	FUNCTION_1
0x4000052	    0x4c8b25000000	            mov r12, qword [0x04000059] 	       237	nm.c	FUNCTION_1	CALL_1
0x4000059	      0xba05000000	                              mov edx, 5	       237	nm.c	FUNCTION_1	CALL_1
0x400005e	              0x55	                                push rbp	       236	nm.c	FUNCTION_1
0x400005f	              0x53	                                push rbx	       236	nm.c	FUNCTION_1
0x4000060	            0x89f5	                            mov ebp, esi	       236	nm.c	FUNCTION_1
0x4000062	          0x4889fb	                            mov rbx, rdi	       236	nm.c	FUNCTION_1
0x4000065	      0xbe00000000	                              mov esi, 0	       237	nm.c	FUNCTION_1	CALL_1
0x400006a	            0x31ff	                            xor edi, edi	       237	nm.c	FUNCTION_1	CALL_1
0x400006c	      0xe800000000	                          call 0x4000071	       237	nm.c	FUNCTION_1	CALL_1
0x4000071	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_25
0x4000074	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000077	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400007c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x400007f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x4000081	      0xe800000000	                          call 0x4000086	        97	stdio2.h	CALL_25
0x4000086	            0x31ff	                            xor edi, edi	       238	nm.c	FUNCTION_1	CALL_2
0x4000088	      0xba05000000	                              mov edx, 5	       238	nm.c	FUNCTION_1	CALL_2
0x400008d	      0xbe00000000	                              mov esi, 0	       238	nm.c	FUNCTION_1	CALL_2
0x4000092	      0xe800000000	                          call 0x4000097	       238	nm.c	FUNCTION_1	CALL_2
0x4000097	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400009c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x400009f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40000a2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40000a4	      0xe800000000	                          call 0x40000a9	        97	stdio2.h	CALL_25
0x40000a9	            0x31ff	                            xor edi, edi	       239	nm.c	FUNCTION_1	CALL_3
0x40000ab	      0xba05000000	                              mov edx, 5	       239	nm.c	FUNCTION_1	CALL_3
0x40000b0	      0xbe00000000	                              mov esi, 0	       239	nm.c	FUNCTION_1	CALL_3
0x40000b5	      0xe800000000	                          call 0x40000ba	       239	nm.c	FUNCTION_1	CALL_3
0x40000ba	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x40000bf	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x40000c2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40000c5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40000c7	      0xe800000000	                          call 0x40000cc	        97	stdio2.h	CALL_25
0x40000cc	            0x31ff	                            xor edi, edi	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x40000ce	      0xba05000000	                              mov edx, 5	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x40000d3	      0xbe00000000	                              mov esi, 0	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x40000d8	      0xe800000000	                          call 0x40000dd	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x40000dd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x40000e2	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x40000e5	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40000e8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40000ea	      0xe800000000	                          call 0x40000ef	        97	stdio2.h	CALL_25
0x40000ef	            0x31ff	                            xor edi, edi	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x40000f1	      0xba05000000	                              mov edx, 5	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x40000f6	      0xbe00000000	                              mov esi, 0	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x40000fb	      0xe800000000	                          call 0x4000100	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000100	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000105	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000108	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x400010b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x400010d	      0xe800000000	                          call 0x4000112	        97	stdio2.h	CALL_25
0x4000112	    0x488b3d000000	            mov rdi, qword [0x04000119] 	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000119	          0x4889de	                            mov rsi, rbx	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x400011c	      0xe800000000	                          call 0x4000121	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000121	            0x85ed	                           test ebp, ebp	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000123	            0x7407	                            je 0x400012c	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000125	            0x89ef	                            mov edi, ebp	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x4000127	      0xe800000000	                          call 0x400012c	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x400012c	            0x31ff	                            xor edi, edi	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x400012e	      0xba05000000	                              mov edx, 5	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x4000133	      0xbe00000000	                              mov esi, 0	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x4000138	      0xe800000000	                          call 0x400013d	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x400013d	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_25
0x4000142	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000145	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400014a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x400014d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x400014f	      0xe800000000	                          call 0x4000154	        97	stdio2.h	CALL_25
0x4000154	            0xebcf	                           jmp 0x4000125	        97	stdio2.h	CALL_25
0x4000156	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        97	stdio2.h	CALL_25
0x4000160	              0x55	                                push rbp	       549	nm.c	FUNCTION_9
0x4000161	              0x53	                                push rbx	       549	nm.c	FUNCTION_9
0x4000162	          0x4889fa	                            mov rdx, rdi	       549	nm.c	FUNCTION_9
0x4000165	          0x4889f5	                            mov rbp, rsi	       549	nm.c	FUNCTION_9
0x4000168	        0x4883ec08	                              sub rsp, 8	       549	nm.c	FUNCTION_9
0x400016c	    0x488b3d000000	            mov rdi, qword [0x04000173] 	       553	nm.c	FUNCTION_9	CALL_2
0x4000173	    0x488b0d000000	            mov rcx, qword [0x0400017a] 	       553	nm.c	FUNCTION_9	CALL_2
0x400017a	    0x8b3500000000	            mov esi, dword [0x04000180] 	       553	nm.c	FUNCTION_9	CALL_2
0x4000180	        0x488b4708	                mov rax, qword [rdi + 8]	       553	nm.c	FUNCTION_9	CALL_2
0x4000184	    0xff9060020000	                call qword [rax + 0x260]	       553	nm.c	FUNCTION_9	CALL_2
0x400018a	    0x488b3d000000	            mov rdi, qword [0x04000191] 	       554	nm.c	FUNCTION_9	IF_1
0x4000191	          0x4889c3	                            mov rbx, rax	       553	nm.c	FUNCTION_9	CALL_2
0x4000194	    0x488b0d000000	            mov rcx, qword [0x0400019b] 	       554	nm.c	FUNCTION_9	IF_1
0x400019b	          0x4889ea	                            mov rdx, rbp	       554	nm.c	FUNCTION_9	IF_1
0x400019e	    0x8b3500000000	            mov esi, dword [0x040001a4] 	       554	nm.c	FUNCTION_9	IF_1
0x40001a4	        0x488b4708	                mov rax, qword [rdi + 8]	       554	nm.c	FUNCTION_9	IF_1
0x40001a8	    0xff9060020000	                call qword [rax + 0x260]	       554	nm.c	FUNCTION_9	IF_1
0x40001ae	          0x4885db	                           test rbx, rbx	       555	nm.c	FUNCTION_9	CALL_4
0x40001b1	            0x745c	                            je 0x400020f	       555	nm.c	FUNCTION_9	CALL_4
0x40001b3	          0x4885c0	                           test rax, rax	       555	nm.c	FUNCTION_9	CALL_4
0x40001b6	            0x7457	                            je 0x400020f	       555	nm.c	FUNCTION_9	CALL_4
0x40001b8	        0x488b7b08	                mov rdi, qword [rbx + 8]	       558	nm.c	FUNCTION_9	CALL_6
0x40001bc	        0x488b7008	                mov rsi, qword [rax + 8]	       559	nm.c	FUNCTION_9
0x40001c0	            0x31c0	                            xor eax, eax	       562	nm.c	FUNCTION_9	IF_3
0x40001c2	          0x4885ff	                           test rdi, rdi	       562	nm.c	FUNCTION_9	IF_3
0x40001c5	           0xf95c0	                                setne al	       562	nm.c	FUNCTION_9	IF_3
0x40001c8	          0x4885f6	                           test rsi, rsi	       561	nm.c	FUNCTION_9	IF_2
0x40001cb	            0x7428	                            je 0x40001f5	       561	nm.c	FUNCTION_9	IF_2
0x40001cd	          0x4885ff	                           test rdi, rdi	       563	nm.c	FUNCTION_9	IF_3
0x40001d0	            0x741e	                            je 0x40001f0	       563	nm.c	FUNCTION_9	IF_3
0x40001d2	          0x803e00	                       cmp byte [rsi], 0	       569	nm.c	FUNCTION_9	IF_4
0x40001d5	            0x7429	                            je 0x4000200	       569	nm.c	FUNCTION_9	IF_4
0x40001d7	          0x803f00	                       cmp byte [rdi], 0	       571	nm.c	FUNCTION_9	IF_5
0x40001da	            0x7414	                            je 0x40001f0	       571	nm.c	FUNCTION_9	IF_5
0x40001dc	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x40001e0	              0x5b	                                 pop rbx	       578	nm.c	
0x40001e1	              0x5d	                                 pop rbp	       578	nm.c	
0x40001e2	      0xe900000000	                           jmp 0x40001e7	       574	nm.c	FUNCTION_9
0x40001e7	    0x660f1f840000	                    nop word [rax + rax]	       574	nm.c	FUNCTION_9
0x40001f0	      0xb8ffffffff	                     mov eax, 0xffffffff	       564	nm.c	FUNCTION_9
0x40001f5	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x40001f9	              0x5b	                                 pop rbx	       578	nm.c	
0x40001fa	              0x5d	                                 pop rbp	       578	nm.c	
0x40001fb	              0xc3	                                     ret	       578	nm.c	
0x40001fc	         0xf1f4000	                         nop dword [rax]	       578	nm.c	
0x4000200	            0x31c0	                            xor eax, eax	       570	nm.c	FUNCTION_9	IF_5
0x4000202	          0x803f00	                       cmp byte [rdi], 0	       570	nm.c	FUNCTION_9	IF_5
0x4000205	           0xf95c0	                                setne al	       570	nm.c	FUNCTION_9	IF_5
0x4000208	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x400020c	              0x5b	                                 pop rbx	       578	nm.c	
0x400020d	              0x5d	                                 pop rbp	       578	nm.c	
0x400020e	              0xc3	                                     ret	       578	nm.c	
0x400020f	    0x488b05000000	            mov rax, qword [0x04000216] 	       556	nm.c	FUNCTION_9
0x4000216	          0x488b38	                    mov rdi, qword [rax]	       556	nm.c	FUNCTION_9
0x4000219	      0xe800000000	                          call 0x400021e	       556	nm.c	FUNCTION_9
0x400021e	            0x6690	                                     nop	       556	nm.c	FUNCTION_9
0x4000220	            0x4154	                                push r12	       588	nm.c	FUNCTION_11
0x4000222	          0x4989fc	                            mov r12, rdi	       588	nm.c	FUNCTION_11
0x4000225	    0x488b3d000000	            mov rdi, qword [0x0400022c] 	       592	nm.c	FUNCTION_11	CALL_2
0x400022c	              0x55	                                push rbp	       588	nm.c	FUNCTION_11
0x400022d	              0x53	                                push rbx	       588	nm.c	FUNCTION_11
0x400022e	          0x4889f5	                            mov rbp, rsi	       588	nm.c	FUNCTION_11
0x4000231	    0x488b0d000000	            mov rcx, qword [0x04000238] 	       592	nm.c	FUNCTION_11	CALL_2
0x4000238	          0x4c89e2	                            mov rdx, r12	       592	nm.c	FUNCTION_11	CALL_2
0x400023b	    0x8b3500000000	            mov esi, dword [0x04000241] 	       592	nm.c	FUNCTION_11	CALL_2
0x4000241	        0x488b4708	                mov rax, qword [rdi + 8]	       592	nm.c	FUNCTION_11	CALL_2
0x4000245	    0xff9060020000	                call qword [rax + 0x260]	       592	nm.c	FUNCTION_11	CALL_2
0x400024b	    0x488b3d000000	            mov rdi, qword [0x04000252] 	       593	nm.c	FUNCTION_11	IF_1
0x4000252	          0x4889c3	                            mov rbx, rax	       592	nm.c	FUNCTION_11	CALL_2
0x4000255	    0x488b0d000000	            mov rcx, qword [0x0400025c] 	       593	nm.c	FUNCTION_11	IF_1
0x400025c	          0x4889ea	                            mov rdx, rbp	       593	nm.c	FUNCTION_11	IF_1
0x400025f	    0x8b3500000000	            mov esi, dword [0x04000265] 	       593	nm.c	FUNCTION_11	IF_1
0x4000265	        0x488b4708	                mov rax, qword [rdi + 8]	       593	nm.c	FUNCTION_11	IF_1
0x4000269	    0xff9060020000	                call qword [rax + 0x260]	       593	nm.c	FUNCTION_11	IF_1
0x400026f	          0x4885db	                           test rbx, rbx	       594	nm.c	FUNCTION_11	CALL_4
0x4000272	            0x7473	                            je 0x40002e7	       594	nm.c	FUNCTION_11	CALL_4
0x4000274	          0x4885c0	                           test rax, rax	       594	nm.c	FUNCTION_11	CALL_4
0x4000277	            0x746e	                            je 0x40002e7	       594	nm.c	FUNCTION_11	CALL_4
0x4000279	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       597	nm.c	FUNCTION_11	CALL_6
0x400027d	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       598	nm.c	FUNCTION_11
0x4000281	    0x4881f9000000	                              cmp rcx, 0	       600	nm.c	FUNCTION_11	IF_2
0x4000288	            0x742e	                            je 0x40002b8	       600	nm.c	FUNCTION_11	IF_2
0x400028a	    0x4881fe000000	                              cmp rsi, 0	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4000291	            0x743d	                            je 0x40002d0	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4000293	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000297	        0x488b4010	            mov rax, qword [rax + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x400029b	        0x48035128	             add rdx, qword [rcx + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x400029f	        0x48034628	             add rax, qword [rsi + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x40002a3	          0x4839c2	                            cmp rdx, rax	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x40002a6	            0x7419	                            je 0x40002c1	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x40002a8	            0x19c0	                            sbb eax, eax	       603	nm.c	FUNCTION_11	IF_2
0x40002aa	          0x83c801	                               or eax, 1	       603	nm.c	FUNCTION_11	IF_2
0x40002ad	              0x5b	                                 pop rbx	       611	nm.c	
0x40002ae	              0x5d	                                 pop rbp	       611	nm.c	
0x40002af	            0x415c	                                 pop r12	       611	nm.c	
0x40002b1	              0xc3	                                     ret	       611	nm.c	
0x40002b2	    0x660f1f440000	                    nop word [rax + rax]	       611	nm.c	
0x40002b8	    0x4881fe000000	                              cmp rsi, 0	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x40002bf	            0x751f	                           jne 0x40002e0	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x40002c1	              0x5b	                                 pop rbx	       611	nm.c	
0x40002c2	          0x4889ee	                            mov rsi, rbp	       610	nm.c	FUNCTION_11
0x40002c5	          0x4c89e7	                            mov rdi, r12	       610	nm.c	FUNCTION_11
0x40002c8	              0x5d	                                 pop rbp	       611	nm.c	
0x40002c9	            0x415c	                                 pop r12	       611	nm.c	
0x40002cb	      0xe990feffff	             jmp sym.non_numeric_forward	       610	nm.c	FUNCTION_11
0x40002d0	      0xb801000000	                              mov eax, 1	       608	nm.c	FUNCTION_11
0x40002d5	            0xebd6	                           jmp 0x40002ad	       608	nm.c	FUNCTION_11
0x40002d7	    0x660f1f840000	                    nop word [rax + rax]	       608	nm.c	FUNCTION_11
0x40002e0	      0xb8ffffffff	                     mov eax, 0xffffffff	       603	nm.c	FUNCTION_11	IF_2
0x40002e5	            0xebc6	                           jmp 0x40002ad	       603	nm.c	FUNCTION_11	IF_2
0x40002e7	    0x488b05000000	            mov rax, qword [0x040002ee] 	       595	nm.c	FUNCTION_11
0x40002ee	          0x488b38	                    mov rdi, qword [rax]	       595	nm.c	FUNCTION_11
0x40002f1	      0xe800000000	                          call 0x40002f6	       595	nm.c	FUNCTION_11
0x40002f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       595	nm.c	FUNCTION_11
0x4000300	            0x4157	                                push r15	       638	nm.c	FUNCTION_13
0x4000302	            0x4156	                                push r14	       638	nm.c	FUNCTION_13
0x4000304	            0x4155	                                push r13	       638	nm.c	FUNCTION_13
0x4000306	            0x4154	                                push r12	       638	nm.c	FUNCTION_13
0x4000308	              0x55	                                push rbp	       638	nm.c	FUNCTION_13
0x4000309	              0x53	                                push rbx	       638	nm.c	FUNCTION_13
0x400030a	          0x4889fb	                            mov rbx, rdi	       638	nm.c	FUNCTION_13
0x400030d	          0x4889f5	                            mov rbp, rsi	       638	nm.c	FUNCTION_13
0x4000310	          0x4889da	                            mov rdx, rbx	       645	nm.c	FUNCTION_13	CALL_2
0x4000313	        0x4883ec28	                           sub rsp, 0x28	       638	nm.c	FUNCTION_13
0x4000317	    0x488b3d000000	            mov rdi, qword [0x0400031e] 	       645	nm.c	FUNCTION_13	CALL_2
0x400031e	    0x488b0d000000	            mov rcx, qword [0x04000325] 	       645	nm.c	FUNCTION_13	CALL_2
0x4000325	    0x8b3500000000	            mov esi, dword [0x0400032b] 	       645	nm.c	FUNCTION_13	CALL_2
0x400032b	        0x488b4708	                mov rax, qword [rdi + 8]	       645	nm.c	FUNCTION_13	CALL_2
0x400032f	    0xff9060020000	                call qword [rax + 0x260]	       645	nm.c	FUNCTION_13	CALL_2
0x4000335	    0x488b3d000000	            mov rdi, qword [0x0400033c] 	       646	nm.c	FUNCTION_13	IF_1
0x400033c	          0x4989c6	                            mov r14, rax	       645	nm.c	FUNCTION_13	CALL_2
0x400033f	    0x488b0d000000	            mov rcx, qword [0x04000346] 	       646	nm.c	FUNCTION_13	IF_1
0x4000346	          0x4889ea	                            mov rdx, rbp	       646	nm.c	FUNCTION_13	IF_1
0x4000349	    0x8b3500000000	            mov esi, dword [0x0400034f] 	       646	nm.c	FUNCTION_13	IF_1
0x400034f	        0x488b4708	                mov rax, qword [rdi + 8]	       646	nm.c	FUNCTION_13	IF_1
0x4000353	    0xff9060020000	                call qword [rax + 0x260]	       646	nm.c	FUNCTION_13	IF_1
0x4000359	          0x4d85f6	                           test r14, r14	       647	nm.c	FUNCTION_13	CALL_4
0x400035c	          0x4989c5	                            mov r13, rax	       646	nm.c	FUNCTION_13	IF_1
0x400035f	           0xf94c1	                                 sete cl	       647	nm.c	FUNCTION_13	CALL_4
0x4000362	          0x4885c0	                           test rax, rax	       647	nm.c	FUNCTION_13	CALL_4
0x4000365	           0xf94c0	                                 sete al	       647	nm.c	FUNCTION_13	CALL_4
0x4000368	             0x8c1	                               or cl, al	       647	nm.c	FUNCTION_13	CALL_4
0x400036a	     0xf85c0010000	                           jne 0x4000530	       647	nm.c	FUNCTION_13	CALL_4
0x4000370	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	       650	nm.c	FUNCTION_13	CALL_6
0x4000374	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       651	nm.c	FUNCTION_13
0x4000378	    0x4881fe000000	                              cmp rsi, 0	       653	nm.c	FUNCTION_13	CALL_8
0x400037f	     0xf84a6010000	                            je 0x400052b	       653	nm.c	FUNCTION_13	CALL_8
0x4000385	    0x483d00000000	                              cmp rax, 0	       655	nm.c	FUNCTION_13	CALL_10
0x400038b	     0xf849a010000	                            je 0x400052b	       655	nm.c	FUNCTION_13	CALL_10
0x4000391	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000395	        0x488b4028	            mov rax, qword [rax + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000399	          0x4989f1	                             mov r9, rsi	       658	nm.c	FUNCTION_13	IF_4
0x400039c	          0x4889c7	                            mov rdi, rax	       658	nm.c	FUNCTION_13	IF_4
0x400039f	        0x4d034e10	              add r9, qword [r14 + 0x10]	       658	nm.c	FUNCTION_13	IF_4
0x40003a3	        0x49037d10	             add rdi, qword [r13 + 0x10]	       658	nm.c	FUNCTION_13	IF_4
0x40003a7	          0x4939f9	                             cmp r9, rdi	       658	nm.c	FUNCTION_13	IF_4
0x40003aa	            0x7414	                            je 0x40003c0	       658	nm.c	FUNCTION_13	IF_4
0x40003ac	            0x19c0	                            sbb eax, eax	       659	nm.c	FUNCTION_13
0x40003ae	          0x83c801	                               or eax, 1	       659	nm.c	FUNCTION_13
0x40003b1	        0x4883c428	                           add rsp, 0x28	       702	nm.c	
0x40003b5	              0x5b	                                 pop rbx	       702	nm.c	
0x40003b6	              0x5d	                                 pop rbp	       702	nm.c	
0x40003b7	            0x415c	                                 pop r12	       702	nm.c	
0x40003b9	            0x415d	                                 pop r13	       702	nm.c	
0x40003bb	            0x415e	                                 pop r14	       702	nm.c	
0x40003bd	            0x415f	                                 pop r15	       702	nm.c	
0x40003bf	              0xc3	                                     ret	       702	nm.c	
0x40003c0	          0x4839c6	                            cmp rsi, rax	       661	nm.c	FUNCTION_13	IF_5
0x40003c3	            0x75e7	                           jne 0x40003ac	       661	nm.c	FUNCTION_13	IF_5
0x40003c5	        0x498b4608	                mov rax, qword [r14 + 8]	       664	nm.c	FUNCTION_13	CALL_12
0x40003c9	        0x4d8b6508	                mov r12, qword [r13 + 8]	       665	nm.c	FUNCTION_13	CALL_13
0x40003cd	          0x4189cf	                           mov r15d, ecx	       665	nm.c	FUNCTION_13	CALL_13
0x40003d0	          0x4889c7	                            mov rdi, rax	       666	nm.c	FUNCTION_13	CALL_14
0x40003d3	        0x48890424	                    mov qword [rsp], rax	       666	nm.c	FUNCTION_13	CALL_14
0x40003d7	      0xe800000000	                          call 0x40003dc	       666	nm.c	FUNCTION_13	CALL_14
0x40003dc	          0x4c89e7	                            mov rdi, r12	       667	nm.c	FUNCTION_13
0x40003df	      0x4889442410	             mov qword [rsp + 0x10], rax	       666	nm.c	FUNCTION_13	CALL_14
0x40003e4	      0xe800000000	                          call 0x40003e9	       667	nm.c	FUNCTION_13
0x40003e9	        0x488b3c24	                    mov rdi, qword [rsp]	       672	nm.c	FUNCTION_13	CALL_16
0x40003ed	      0xbe00000000	                              mov esi, 0	       672	nm.c	FUNCTION_13	CALL_16
0x40003f2	      0x4889442408	                mov qword [rsp + 8], rax	       667	nm.c	FUNCTION_13
0x40003f7	      0xe800000000	                          call 0x40003fc	       672	nm.c	FUNCTION_13	CALL_16
0x40003fc	          0x4885c0	                           test rax, rax	       673	nm.c	FUNCTION_13	CALL_17
0x40003ff	     0xf84db000000	                            je 0x40004e0	       673	nm.c	FUNCTION_13	CALL_17
0x4000405	      0xbe00000000	                              mov esi, 0	       674	nm.c	FUNCTION_13	CALL_18
0x400040a	          0x4c89e7	                            mov rdi, r12	       674	nm.c	FUNCTION_13	CALL_18
0x400040d	      0xe800000000	                          call 0x4000412	       674	nm.c	FUNCTION_13	CALL_18
0x4000412	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x4000415	            0x7439	                            je 0x4000450	       675	nm.c	FUNCTION_13
0x4000417	      0x41f6461940	           test byte [r14 + 0x19], 0x40 	       693	nm.c	FUNCTION_13
0x400041c	            0x756a	                           jne 0x4000488	       693	nm.c	FUNCTION_13
0x400041e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       693	nm.c	FUNCTION_13
0x4000423	              0x48	                                 invalid	       693	nm.c	FUNCTION_13
size_forward1	FOR,0:functions,0:SWITCH,0:IF,9:DO,0:WHILE,0:ELSE,0:CALL,19	169
0x4000300	            0x4157	                                push r15	       638	nm.c	FUNCTION_13
0x4000302	            0x4156	                                push r14	       638	nm.c	FUNCTION_13
0x4000304	            0x4155	                                push r13	       638	nm.c	FUNCTION_13
0x4000306	            0x4154	                                push r12	       638	nm.c	FUNCTION_13
0x4000308	              0x55	                                push rbp	       638	nm.c	FUNCTION_13
0x4000309	              0x53	                                push rbx	       638	nm.c	FUNCTION_13
0x400030a	          0x4889fb	                            mov rbx, rdi	       638	nm.c	FUNCTION_13
0x400030d	          0x4889f5	                            mov rbp, rsi	       638	nm.c	FUNCTION_13
0x4000310	          0x4889da	                            mov rdx, rbx	       645	nm.c	FUNCTION_13	CALL_2
0x4000313	        0x4883ec28	                           sub rsp, 0x28	       638	nm.c	FUNCTION_13
0x4000317	    0x488b3d000000	            mov rdi, qword [0x0400031e] 	       645	nm.c	FUNCTION_13	CALL_2
0x400031e	    0x488b0d000000	            mov rcx, qword [0x04000325] 	       645	nm.c	FUNCTION_13	CALL_2
0x4000325	    0x8b3500000000	            mov esi, dword [0x0400032b] 	       645	nm.c	FUNCTION_13	CALL_2
0x400032b	        0x488b4708	                mov rax, qword [rdi + 8]	       645	nm.c	FUNCTION_13	CALL_2
0x400032f	    0xff9060020000	                call qword [rax + 0x260]	       645	nm.c	FUNCTION_13	CALL_2
0x4000335	    0x488b3d000000	            mov rdi, qword [0x0400033c] 	       646	nm.c	FUNCTION_13	IF_1
0x400033c	          0x4989c6	                            mov r14, rax	       645	nm.c	FUNCTION_13	CALL_2
0x400033f	    0x488b0d000000	            mov rcx, qword [0x04000346] 	       646	nm.c	FUNCTION_13	IF_1
0x4000346	          0x4889ea	                            mov rdx, rbp	       646	nm.c	FUNCTION_13	IF_1
0x4000349	    0x8b3500000000	            mov esi, dword [0x0400034f] 	       646	nm.c	FUNCTION_13	IF_1
0x400034f	        0x488b4708	                mov rax, qword [rdi + 8]	       646	nm.c	FUNCTION_13	IF_1
0x4000353	    0xff9060020000	                call qword [rax + 0x260]	       646	nm.c	FUNCTION_13	IF_1
0x4000359	          0x4d85f6	                           test r14, r14	       647	nm.c	FUNCTION_13	CALL_4
0x400035c	          0x4989c5	                            mov r13, rax	       646	nm.c	FUNCTION_13	IF_1
0x400035f	           0xf94c1	                                 sete cl	       647	nm.c	FUNCTION_13	CALL_4
0x4000362	          0x4885c0	                           test rax, rax	       647	nm.c	FUNCTION_13	CALL_4
0x4000365	           0xf94c0	                                 sete al	       647	nm.c	FUNCTION_13	CALL_4
0x4000368	             0x8c1	                               or cl, al	       647	nm.c	FUNCTION_13	CALL_4
0x400036a	     0xf85c0010000	                           jne 0x4000530	       647	nm.c	FUNCTION_13	CALL_4
0x4000370	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	       650	nm.c	FUNCTION_13	CALL_6
0x4000374	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       651	nm.c	FUNCTION_13
0x4000378	    0x4881fe000000	                              cmp rsi, 0	       653	nm.c	FUNCTION_13	CALL_8
0x400037f	     0xf84a6010000	                            je 0x400052b	       653	nm.c	FUNCTION_13	CALL_8
0x4000385	    0x483d00000000	                              cmp rax, 0	       655	nm.c	FUNCTION_13	CALL_10
0x400038b	     0xf849a010000	                            je 0x400052b	       655	nm.c	FUNCTION_13	CALL_10
0x4000391	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000395	        0x488b4028	            mov rax, qword [rax + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000399	          0x4989f1	                             mov r9, rsi	       658	nm.c	FUNCTION_13	IF_4
0x400039c	          0x4889c7	                            mov rdi, rax	       658	nm.c	FUNCTION_13	IF_4
0x400039f	        0x4d034e10	              add r9, qword [r14 + 0x10]	       658	nm.c	FUNCTION_13	IF_4
0x40003a3	        0x49037d10	             add rdi, qword [r13 + 0x10]	       658	nm.c	FUNCTION_13	IF_4
0x40003a7	          0x4939f9	                             cmp r9, rdi	       658	nm.c	FUNCTION_13	IF_4
0x40003aa	            0x7414	                            je 0x40003c0	       658	nm.c	FUNCTION_13	IF_4
0x40003ac	            0x19c0	                            sbb eax, eax	       659	nm.c	FUNCTION_13
0x40003ae	          0x83c801	                               or eax, 1	       659	nm.c	FUNCTION_13
0x40003b1	        0x4883c428	                           add rsp, 0x28	       702	nm.c	
0x40003b5	              0x5b	                                 pop rbx	       702	nm.c	
0x40003b6	              0x5d	                                 pop rbp	       702	nm.c	
0x40003b7	            0x415c	                                 pop r12	       702	nm.c	
0x40003b9	            0x415d	                                 pop r13	       702	nm.c	
0x40003bb	            0x415e	                                 pop r14	       702	nm.c	
0x40003bd	            0x415f	                                 pop r15	       702	nm.c	
0x40003bf	              0xc3	                                     ret	       702	nm.c	
0x40003c0	          0x4839c6	                            cmp rsi, rax	       661	nm.c	FUNCTION_13	IF_5
0x40003c3	            0x75e7	                           jne 0x40003ac	       661	nm.c	FUNCTION_13	IF_5
0x40003c5	        0x498b4608	                mov rax, qword [r14 + 8]	       664	nm.c	FUNCTION_13	CALL_12
0x40003c9	        0x4d8b6508	                mov r12, qword [r13 + 8]	       665	nm.c	FUNCTION_13	CALL_13
0x40003cd	          0x4189cf	                           mov r15d, ecx	       665	nm.c	FUNCTION_13	CALL_13
0x40003d0	          0x4889c7	                            mov rdi, rax	       666	nm.c	FUNCTION_13	CALL_14
0x40003d3	        0x48890424	                    mov qword [rsp], rax	       666	nm.c	FUNCTION_13	CALL_14
0x40003d7	      0xe800000000	                          call 0x40003dc	       666	nm.c	FUNCTION_13	CALL_14
0x40003dc	          0x4c89e7	                            mov rdi, r12	       667	nm.c	FUNCTION_13
0x40003df	      0x4889442410	             mov qword [rsp + 0x10], rax	       666	nm.c	FUNCTION_13	CALL_14
0x40003e4	      0xe800000000	                          call 0x40003e9	       667	nm.c	FUNCTION_13
0x40003e9	        0x488b3c24	                    mov rdi, qword [rsp]	       672	nm.c	FUNCTION_13	CALL_16
0x40003ed	      0xbe00000000	                              mov esi, 0	       672	nm.c	FUNCTION_13	CALL_16
0x40003f2	      0x4889442408	                mov qword [rsp + 8], rax	       667	nm.c	FUNCTION_13
0x40003f7	      0xe800000000	                          call 0x40003fc	       672	nm.c	FUNCTION_13	CALL_16
0x40003fc	          0x4885c0	                           test rax, rax	       673	nm.c	FUNCTION_13	CALL_17
0x40003ff	     0xf84db000000	                            je 0x40004e0	       673	nm.c	FUNCTION_13	CALL_17
0x4000405	      0xbe00000000	                              mov esi, 0	       674	nm.c	FUNCTION_13	CALL_18
0x400040a	          0x4c89e7	                            mov rdi, r12	       674	nm.c	FUNCTION_13	CALL_18
0x400040d	      0xe800000000	                          call 0x4000412	       674	nm.c	FUNCTION_13	CALL_18
0x4000412	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x4000415	            0x7439	                            je 0x4000450	       675	nm.c	FUNCTION_13
0x4000417	      0x41f6461940	           test byte [r14 + 0x19], 0x40 	       693	nm.c	FUNCTION_13
0x400041c	            0x756a	                           jne 0x4000488	       693	nm.c	FUNCTION_13
0x400041e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       693	nm.c	FUNCTION_13
0x4000423	        0x4883f802	                              cmp rax, 2	       693	nm.c	FUNCTION_13
0x4000427	            0x760b	                           jbe 0x4000434	       693	nm.c	FUNCTION_13
0x4000429	        0x488b1424	                    mov rdx, qword [rsp]	       693	nm.c	FUNCTION_13
0x400042d	      0x807c02fe2e	         cmp byte [rdx + rax - 2], 0x2e 	       693	nm.c	FUNCTION_13
0x4000432	            0x7438	                            je 0x400046c	       693	nm.c	FUNCTION_13
0x4000434	      0x41f6451940	           test byte [r13 + 0x19], 0x40 	       694	nm.c	FUNCTION_13
0x4000439	     0xf8400010000	                            je 0x400053f	       694	nm.c	FUNCTION_13
0x400043f	      0xb801000000	                              mov eax, 1	       659	nm.c	FUNCTION_13
0x4000444	      0xe968ffffff	                           jmp 0x40003b1	       659	nm.c	FUNCTION_13
0x4000449	     0xf1f80000000	                         nop dword [rax]	       659	nm.c	FUNCTION_13
0x4000450	      0xbe00000000	                              mov esi, 0	       675	nm.c	FUNCTION_13
0x4000455	          0x4c89e7	                            mov rdi, r12	       675	nm.c	FUNCTION_13
0x4000458	      0xe800000000	                          call 0x400045d	       675	nm.c	FUNCTION_13
0x400045d	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x4000460	            0x75b5	                           jne 0x4000417	       675	nm.c	FUNCTION_13
0x4000462	      0xb8ffffffff	                     mov eax, 0xffffffff	       659	nm.c	FUNCTION_13
0x4000467	      0xe945ffffff	                           jmp 0x40003b1	       659	nm.c	FUNCTION_13
0x400046c	          0x4889d0	                            mov rax, rdx	       693	nm.c	FUNCTION_13
0x400046f	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       693	nm.c	FUNCTION_13
0x4000474	       0xfb64410ff	         movzx eax, byte [rax + rdx - 1]	       693	nm.c	FUNCTION_13
0x4000479	            0x3c6f	                            cmp al, 0x6f	       693	nm.c	FUNCTION_13
0x400047b	            0x740b	                            je 0x4000488	       693	nm.c	FUNCTION_13
0x400047d	            0x3c61	                            cmp al, 0x61	       693	nm.c	FUNCTION_13
0x400047f	            0x75b3	                           jne 0x4000434	       693	nm.c	FUNCTION_13
0x4000481	     0xf1f80000000	                         nop dword [rax]	       693	nm.c	FUNCTION_13
0x4000488	      0x41f6451940	           test byte [r13 + 0x19], 0x40 	       694	nm.c	FUNCTION_13
0x400048d	            0x7533	                           jne 0x40004c2	       694	nm.c	FUNCTION_13
0x400048f	    0x48837c240802	                  cmp qword [rsp + 8], 2	       694	nm.c	FUNCTION_13
0x4000495	            0x76cb	                           jbe 0x4000462	       694	nm.c	FUNCTION_13
0x4000497	      0x488b442408	                mov rax, qword [rsp + 8]	       694	nm.c	FUNCTION_13
0x400049c	    0x41807c04fe2e	         cmp byte [r12 + rax - 2], 0x2e 	       694	nm.c	FUNCTION_13
0x40004a2	            0x75be	                           jne 0x4000462	       694	nm.c	FUNCTION_13
0x40004a4	      0xb801000000	                              mov eax, 1	       694	nm.c	FUNCTION_13
0x40004a9	      0x488b542408	                mov rdx, qword [rsp + 8]	       694	nm.c	FUNCTION_13
0x40004ae	    0x410fb65414ff	         movzx edx, byte [r12 + rdx - 1]	       694	nm.c	FUNCTION_13
0x40004b4	          0x80fa6f	                            cmp dl, 0x6f	       694	nm.c	FUNCTION_13
0x40004b7	            0x7467	                            je 0x4000520	       694	nm.c	FUNCTION_13
0x40004b9	          0x80fa61	                            cmp dl, 0x61	       694	nm.c	FUNCTION_13
0x40004bc	            0x7462	                            je 0x4000520	       694	nm.c	FUNCTION_13
0x40004be	            0x84c0	                             test al, al	       696	nm.c	FUNCTION_13	IF_8
0x40004c0	            0x75a0	                           jne 0x4000462	       696	nm.c	FUNCTION_13	IF_8
0x40004c2	        0x4883c428	                           add rsp, 0x28	       702	nm.c	
0x40004c6	          0x4889ee	                            mov rsi, rbp	       701	nm.c	FUNCTION_13
0x40004c9	          0x4889df	                            mov rdi, rbx	       701	nm.c	FUNCTION_13
0x40004cc	              0x5b	                                 pop rbx	       702	nm.c	
0x40004cd	              0x5d	                                 pop rbp	       702	nm.c	
0x40004ce	            0x415c	                                 pop r12	       702	nm.c	
0x40004d0	            0x415d	                                 pop r13	       702	nm.c	
0x40004d2	            0x415e	                                 pop r14	       702	nm.c	
0x40004d4	            0x415f	                                 pop r15	       702	nm.c	
0x40004d6	      0xe985fcffff	             jmp sym.non_numeric_forward	       701	nm.c	FUNCTION_13
0x40004db	       0xf1f440000	                   nop dword [rax + rax]	       701	nm.c	FUNCTION_13
0x40004e0	        0x488b3c24	                    mov rdi, qword [rsp]	       673	nm.c	FUNCTION_13	CALL_17
0x40004e4	      0xbe00000000	                              mov esi, 0	       673	nm.c	FUNCTION_13	CALL_17
0x40004e9	      0xe800000000	                          call 0x40004ee	       673	nm.c	FUNCTION_13	CALL_17
0x40004ee	      0xbe00000000	                              mov esi, 0	       674	nm.c	FUNCTION_13	CALL_18
0x40004f3	          0x4c89e7	                            mov rdi, r12	       674	nm.c	FUNCTION_13	CALL_18
0x40004f6	      0x4889442418	             mov qword [rsp + 0x18], rax	       673	nm.c	FUNCTION_13	CALL_17
0x40004fb	      0xe800000000	                          call 0x4000500	       674	nm.c	FUNCTION_13	CALL_18
0x4000500	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x4000503	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       675	nm.c	FUNCTION_13
0x4000508	            0x745f	                            je 0x4000569	       675	nm.c	FUNCTION_13
0x400050a	          0x4d85c9	                             test r9, r9	       679	nm.c	FUNCTION_13	IF_7
0x400050d	     0xf842cffffff	                            je 0x400043f	       679	nm.c	FUNCTION_13	IF_7
0x4000513	      0xe9fffeffff	                           jmp 0x4000417	       679	nm.c	FUNCTION_13	IF_7
0x4000518	     0xf1f84000000	                   nop dword [rax + rax]	       679	nm.c	FUNCTION_13	IF_7
0x4000520	          0x4584ff	                         test r15b, r15b	       698	nm.c	FUNCTION_13	IF_9
0x4000523	     0xf8516ffffff	                           jne 0x400043f	       698	nm.c	FUNCTION_13	IF_9
0x4000529	            0xeb97	                           jmp 0x40004c2	       698	nm.c	FUNCTION_13	IF_9
0x400052b	      0xe800000000	                          call 0x4000530	       654	nm.c	FUNCTION_13	IF_3	CALL_9
0x4000530	    0x488b05000000	            mov rax, qword [0x04000537] 	       648	nm.c	FUNCTION_13
0x4000537	          0x488b38	                    mov rdi, qword [rax]	       648	nm.c	FUNCTION_13
0x400053a	      0xe800000000	                          call 0x400053f	       648	nm.c	FUNCTION_13
0x400053f	    0x48837c240802	                  cmp qword [rsp + 8], 2	       694	nm.c	FUNCTION_13
0x4000545	     0xf8677ffffff	                           jbe 0x40004c2	       694	nm.c	FUNCTION_13
0x400054b	      0x488b442408	                mov rax, qword [rsp + 8]	       694	nm.c	FUNCTION_13
0x4000550	    0x41807c04fe2e	         cmp byte [r12 + rax - 2], 0x2e 	       694	nm.c	FUNCTION_13
0x4000556	     0xf8566ffffff	                           jne 0x40004c2	       694	nm.c	FUNCTION_13
0x400055c	            0x31c0	                            xor eax, eax	       694	nm.c	FUNCTION_13
0x400055e	    0x41bf01000000	                             mov r15d, 1	       694	nm.c	FUNCTION_13
0x4000564	      0xe940ffffff	                           jmp 0x40004a9	       694	nm.c	FUNCTION_13
0x4000569	      0xbe00000000	                              mov esi, 0	       675	nm.c	FUNCTION_13
0x400056e	          0x4c89e7	                            mov rdi, r12	       675	nm.c	FUNCTION_13
0x4000571	      0xe800000000	                          call 0x4000576	       675	nm.c	FUNCTION_13
0x4000576	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x4000579	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       675	nm.c	FUNCTION_13
0x400057e	            0x758a	                           jne 0x400050a	       675	nm.c	FUNCTION_13
0x4000580	          0x83c8ff	                      or eax, 0xffffffff	       659	nm.c	FUNCTION_13
0x4000583	          0x4d85c9	                             test r9, r9	       677	nm.c	FUNCTION_13	IF_6
0x4000586	     0xf8525feffff	                           jne 0x40003b1	       677	nm.c	FUNCTION_13	IF_6
0x400058c	      0xe986feffff	                           jmp 0x4000417	       677	nm.c	FUNCTION_13	IF_6
usage	FOR,3:functions,0:SWITCH,0:IF,2:DO,0:WHILE,0:ELSE,0:CALL,10	70
0x4000050	            0x4154	                                push r12	       236	nm.c	FUNCTION_1
0x4000052	    0x4c8b25000000	            mov r12, qword [0x04000059] 	       237	nm.c	FUNCTION_1	CALL_1
0x4000059	      0xba05000000	                              mov edx, 5	       237	nm.c	FUNCTION_1	CALL_1
0x400005e	              0x55	                                push rbp	       236	nm.c	FUNCTION_1
0x400005f	              0x53	                                push rbx	       236	nm.c	FUNCTION_1
0x4000060	            0x89f5	                            mov ebp, esi	       236	nm.c	FUNCTION_1
0x4000062	          0x4889fb	                            mov rbx, rdi	       236	nm.c	FUNCTION_1
0x4000065	      0xbe00000000	                              mov esi, 0	       237	nm.c	FUNCTION_1	CALL_1
0x400006a	            0x31ff	                            xor edi, edi	       237	nm.c	FUNCTION_1	CALL_1
0x400006c	      0xe800000000	                          call 0x4000071	       237	nm.c	FUNCTION_1	CALL_1
0x4000071	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_25
0x4000074	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000077	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400007c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x400007f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x4000081	      0xe800000000	                          call 0x4000086	        97	stdio2.h	CALL_25
0x4000086	            0x31ff	                            xor edi, edi	       238	nm.c	FUNCTION_1	CALL_2
0x4000088	      0xba05000000	                              mov edx, 5	       238	nm.c	FUNCTION_1	CALL_2
0x400008d	      0xbe00000000	                              mov esi, 0	       238	nm.c	FUNCTION_1	CALL_2
0x4000092	      0xe800000000	                          call 0x4000097	       238	nm.c	FUNCTION_1	CALL_2
0x4000097	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400009c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x400009f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40000a2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40000a4	      0xe800000000	                          call 0x40000a9	        97	stdio2.h	CALL_25
0x40000a9	            0x31ff	                            xor edi, edi	       239	nm.c	FUNCTION_1	CALL_3
0x40000ab	      0xba05000000	                              mov edx, 5	       239	nm.c	FUNCTION_1	CALL_3
0x40000b0	      0xbe00000000	                              mov esi, 0	       239	nm.c	FUNCTION_1	CALL_3
0x40000b5	      0xe800000000	                          call 0x40000ba	       239	nm.c	FUNCTION_1	CALL_3
0x40000ba	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x40000bf	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x40000c2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40000c5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40000c7	      0xe800000000	                          call 0x40000cc	        97	stdio2.h	CALL_25
0x40000cc	            0x31ff	                            xor edi, edi	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x40000ce	      0xba05000000	                              mov edx, 5	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x40000d3	      0xbe00000000	                              mov esi, 0	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x40000d8	      0xe800000000	                          call 0x40000dd	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x40000dd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x40000e2	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x40000e5	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x40000e8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x40000ea	      0xe800000000	                          call 0x40000ef	        97	stdio2.h	CALL_25
0x40000ef	            0x31ff	                            xor edi, edi	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x40000f1	      0xba05000000	                              mov edx, 5	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x40000f6	      0xbe00000000	                              mov esi, 0	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x40000fb	      0xe800000000	                          call 0x4000100	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000100	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000105	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000108	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x400010b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x400010d	      0xe800000000	                          call 0x4000112	        97	stdio2.h	CALL_25
0x4000112	    0x488b3d000000	            mov rdi, qword [0x04000119] 	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000119	          0x4889de	                            mov rsi, rbx	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x400011c	      0xe800000000	                          call 0x4000121	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000121	            0x85ed	                           test ebp, ebp	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000123	            0x7407	                            je 0x400012c	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000125	            0x89ef	                            mov edi, ebp	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x4000127	      0xe800000000	                          call 0x400012c	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x400012c	            0x31ff	                            xor edi, edi	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x400012e	      0xba05000000	                              mov edx, 5	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x4000133	      0xbe00000000	                              mov esi, 0	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x4000138	      0xe800000000	                          call 0x400013d	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x400013d	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_25
0x4000142	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000145	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x400014a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x400014d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_25
0x400014f	      0xe800000000	                          call 0x4000154	        97	stdio2.h	CALL_25
0x4000154	            0xebcf	                           jmp 0x4000125	        97	stdio2.h	CALL_25
display_rel_file	FOR,1:functions,0:SWITCH,0:IF,15:DO,0:WHILE,0:ELSE,3:CALL,34	574
0x4000be0	            0x4157	                                push r15	      1097	nm.c	FUNCTION_20
0x4000be2	            0x4156	                                push r14	      1097	nm.c	FUNCTION_20
0x4000be4	          0x4989ff	                            mov r15, rdi	      1097	nm.c	FUNCTION_20
0x4000be7	            0x4155	                                push r13	      1097	nm.c	FUNCTION_20
0x4000be9	            0x4154	                                push r12	      1097	nm.c	FUNCTION_20
0x4000beb	              0x55	                                push rbp	      1097	nm.c	FUNCTION_20
0x4000bec	              0x53	                                push rbx	      1097	nm.c	FUNCTION_20
0x4000bed	        0x4883ec58	                           sub rsp, 0x58	      1097	nm.c	FUNCTION_20
0x4000bf1	      0x4889742408	                mov qword [rsp + 8], rsi	      1097	nm.c	FUNCTION_20
0x4000bf6	    0x8b3500000000	            mov esi, dword [0x04000bfc] 	      1104	nm.c	FUNCTION_20	IF_1
0x4000bfc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1097	nm.c	FUNCTION_20
0x4000c05	      0x4889442448	             mov qword [rsp + 0x48], rax	      1097	nm.c	FUNCTION_20
0x4000c0a	            0x31c0	                            xor eax, eax	      1097	nm.c	FUNCTION_20
0x4000c0c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1102	nm.c	FUNCTION_20
0x4000c15	            0x85f6	                           test esi, esi	      1104	nm.c	FUNCTION_20	IF_1
0x4000c17	            0x750a	                           jne 0x4000c23	      1104	nm.c	FUNCTION_20	IF_1
0x4000c19	        0xf6474502	               test byte [rdi + 0x45], 2	      1106	nm.c	FUNCTION_20	IF_1	IF_2
0x4000c1d	     0xf84cb020000	                            je 0x4000eee	      1106	nm.c	FUNCTION_20	IF_1	IF_2
0x4000c23	        0x498b4708	                mov rax, qword [r15 + 8]	      1113	nm.c	FUNCTION_20	IF_3
0x4000c27	      0x488d4c2434	                   lea rcx, [rsp + 0x34]	      1113	nm.c	FUNCTION_20	IF_3
0x4000c2c	      0x488d542438	                   lea rdx, [rsp + 0x38]	      1113	nm.c	FUNCTION_20	IF_3
0x4000c31	          0x4c89ff	                            mov rdi, r15	      1113	nm.c	FUNCTION_20	IF_3
0x4000c34	    0xff9058020000	                call qword [rax + 0x258]	      1113	nm.c	FUNCTION_20	IF_3
0x4000c3a	          0x4885c0	                           test rax, rax	      1114	nm.c	FUNCTION_20	IF_3
0x4000c3d	          0x4989c4	                            mov r12, rax	      1113	nm.c	FUNCTION_20	IF_3
0x4000c40	     0xf888a020000	                            js 0x4000ed0	      1114	nm.c	FUNCTION_20	IF_3
0x4000c46	     0xf84a2020000	                            je 0x4000eee	      1125	nm.c	FUNCTION_20	IF_5
0x4000c4c	    0x8b2d00000000	            mov ebp, dword [0x04000c52] 	      1131	nm.c	FUNCTION_20	IF_6
0x4000c52	        0x8b5c2434	            mov ebx, dword [rsp + 0x34] 	      1131	nm.c	FUNCTION_20	IF_6
0x4000c56	            0x85ed	                           test ebp, ebp	      1131	nm.c	FUNCTION_20	IF_6
0x4000c58	            0x7409	                            je 0x4000c63	      1131	nm.c	FUNCTION_20	IF_6
0x4000c5a	          0x83fb08	                              cmp ebx, 8	      1131	nm.c	FUNCTION_20	IF_6
0x4000c5d	     0xf844d040000	                            je 0x40010b0	      1131	nm.c	FUNCTION_20	IF_6
0x4000c63	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1131	nm.c	FUNCTION_20	IF_6
0x4000c68	      0x4889442410	             mov qword [rsp + 0x10], rax	      1131	nm.c	FUNCTION_20	IF_6
0x4000c6d	    0x8b0500000000	            mov eax, dword [0x04000c73] 	      1184	nm.c	FUNCTION_20
0x4000c73	          0x4c89ff	                            mov rdi, r15	       462	nm.c	FUNCTION_8	IF_1
0x4000c76	          0x890424	                    mov dword [rsp], eax	      1184	nm.c	FUNCTION_20
0x4000c79	        0x498b4708	                mov rax, qword [r15 + 8]	       462	nm.c	FUNCTION_8	IF_1
0x4000c7d	    0xff9000020000	                call qword [rax + 0x200]	       462	nm.c	FUNCTION_8	IF_1
0x4000c83	          0x4885c0	                           test rax, rax	       463	nm.c	FUNCTION_8	CALL_3
0x4000c86	          0x4989c5	                            mov r13, rax	       462	nm.c	FUNCTION_8	IF_1
0x4000c89	     0xf848f080000	                            je 0x400151e	       463	nm.c	FUNCTION_8	CALL_3
0x4000c8f	        0x4c0fafe3	                           imul r12, rbx	       467	nm.c	FUNCTION_8
0x4000c93	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       467	nm.c	FUNCTION_8
0x4000c98	          0x4901c4	                            add r12, rax	       467	nm.c	FUNCTION_8
0x4000c9b	          0x4939c4	                            cmp r12, rax	       470	nm.c	FUNCTION_8	FOR_1
0x4000c9e	     0xf86e8070000	                           jbe 0x400148c	       470	nm.c	FUNCTION_8	FOR_1
0x4000ca4	          0x4889c5	                            mov rbp, rax	       470	nm.c	FUNCTION_8	FOR_1
0x4000ca7	          0x4c89f8	                            mov rax, r15	       470	nm.c	FUNCTION_8	FOR_1
0x4000caa	          0x4d89e6	                            mov r14, r12	       470	nm.c	FUNCTION_8	FOR_1
0x4000cad	          0x4989ef	                            mov r15, rbp	       470	nm.c	FUNCTION_8	FOR_1
0x4000cb0	          0x4989c4	                            mov r12, rax	       470	nm.c	FUNCTION_8	FOR_1
0x4000cb3	            0xeb19	                           jmp 0x4000cce	       470	nm.c	FUNCTION_8	FOR_1
0x4000cb5	           0xf1f00	                         nop dword [rax]	       470	nm.c	FUNCTION_8	FOR_1
0x4000cb8	    0x498178200000	                cmp qword [r8 + 0x20], 0	       499	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000cc0	            0x7476	                            je 0x4000d38	       499	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000cc2	          0x4901df	                            add r15, rbx	       499	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000cc5	          0x4d39fe	                            cmp r14, r15	       470	nm.c	FUNCTION_8	FOR_1
0x4000cc8	     0xf8606010000	                           jbe 0x4000dd4	       470	nm.c	FUNCTION_8	FOR_1
0x4000cce	      0x498b442408	                mov rax, qword [r12 + 8]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000cd3	          0x4c89e9	                            mov rcx, r13	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000cd6	          0x4c89fa	                            mov rdx, r15	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000cd9	          0x8b3424	                    mov esi, dword [rsp]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000cdc	          0x4c89e7	                            mov rdi, r12	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000cdf	    0xff9060020000	                call qword [rax + 0x260]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000ce5	          0x4885c0	                           test rax, rax	       478	nm.c	FUNCTION_8	FOR_1	CALL_7
0x4000ce8	          0x4989c0	                             mov r8, rax	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4000ceb	     0xf8424080000	                            je 0x4001515	       478	nm.c	FUNCTION_8	FOR_1	CALL_7
0x4000cf1	        0x488b4008	                mov rax, qword [rax + 8]	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x4000cf5	          0x80385f	                    cmp byte [rax], 0x5f	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x4000cf8	     0xf843a020000	                            je 0x4000f38	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x4000cfe	    0x448b1d000000	           mov r11d, dword [0x04000d05] 	       487	nm.c	FUNCTION_8	FOR_1	CALL_12
0x4000d05	          0x4585db	                         test r11d, r11d	       487	nm.c	FUNCTION_8	FOR_1	CALL_12
0x4000d08	            0x75ae	                           jne 0x4000cb8	       487	nm.c	FUNCTION_8	FOR_1	CALL_12
0x4000d0a	    0x448b15000000	           mov r10d, dword [0x04000d11] 	       489	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d11	          0x4585d2	                         test r10d, r10d	       489	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d14	            0x7422	                            je 0x4000d38	       489	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d16	    0x41f740188200	       test dword [r8 + 0x18], 0x800082 	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d1e	            0x7518	                           jne 0x4000d38	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d20	        0x498b4020	              mov rax, qword [r8 + 0x20]	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d24	    0x483d00000000	                              cmp rax, 0	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d2a	            0x740c	                            je 0x4000d38	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4000d2c	        0xf6402110	           test byte [rax + 0x21], 0x10 	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d30	            0x7490	                            je 0x4000cc2	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d32	    0x660f1f440000	                    nop word [rax + rax]	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x4000d38	    0x448b0d000000	            mov r9d, dword [0x04000d3f] 	       500	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d3f	          0x4585c9	                           test r9d, r9d	       500	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d42	            0x750b	                           jne 0x4000d4f	       500	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d44	      0x41f6401804	                test byte [r8 + 0x18], 4	       501	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d49	     0xf8573ffffff	                           jne 0x4000cc2	       501	nm.c	FUNCTION_8	FOR_1	IF_6
0x4000d4f	    0x8b1500000000	            mov edx, dword [0x04000d55] 	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4000d55	            0x85d2	                           test edx, edx	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4000d57	            0x741c	                            je 0x4000d75	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4000d59	        0x498b4020	              mov rax, qword [r8 + 0x20]	       506	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_16
0x4000d5d	    0x483d00000000	                              cmp rax, 0	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x4000d63	     0xf8459ffffff	                            je 0x4000cc2	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x4000d69	    0x483d00000000	                              cmp rax, 0	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x4000d6f	     0xf844dffffff	                            je 0x4000cc2	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x4000d75	    0x8b0500000000	            mov eax, dword [0x04000d7b] 	       511	nm.c	FUNCTION_8	FOR_1	IF_8
0x4000d7b	            0x85c0	                           test eax, eax	       511	nm.c	FUNCTION_8	FOR_1	IF_8
0x4000d7d	            0x740e	                            je 0x4000d8d	       511	nm.c	FUNCTION_8	FOR_1	IF_8
0x4000d7f	    0x498178200000	                cmp qword [r8 + 0x20], 0	       513	nm.c	FUNCTION_8	FOR_1	IF_8	IF_9
0x4000d87	     0xf8435ffffff	                            je 0x4000cc2	       513	nm.c	FUNCTION_8	FOR_1	IF_8	IF_9
0x4000d8d	      0x498b442408	                mov rax, qword [r12 + 8]	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000d92	          0x4c89c6	                             mov rsi, r8	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000d95	          0x4c89e7	                            mov rdi, r12	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000d98	    0xff9028020000	                call qword [rax + 0x228]	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000d9e	            0x85c0	                           test eax, eax	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000da0	            0x7410	                            je 0x4000db2	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000da2	    0x448b05000000	            mov r8d, dword [0x04000da9] 	       519	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000da9	          0x4585c0	                           test r8d, r8d	       519	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000dac	     0xf8410ffffff	                            je 0x4000cc2	       519	nm.c	FUNCTION_8	FOR_1	IF_10
0x4000db2	          0x4939ef	                            cmp r15, rbp	       524	nm.c	FUNCTION_8	FOR_1	IF_11	CALL_19
0x4000db5	            0x740e	                            je 0x4000dc5	       524	nm.c	FUNCTION_8	FOR_1	IF_11	CALL_19
0x4000db7	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_58	CALL_3
0x4000dba	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_58	CALL_3
0x4000dbd	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_58	CALL_3
0x4000dc0	      0xe800000000	                          call 0x4000dc5	        53	string3.h	FUNCTION_58	CALL_3
0x4000dc5	          0x4901df	                            add r15, rbx	        53	string3.h	FUNCTION_58	CALL_3
0x4000dc8	          0x4801dd	                            add rbp, rbx	       526	nm.c	FUNCTION_8	FOR_1	IF_11
0x4000dcb	          0x4d39fe	                            cmp r14, r15	       470	nm.c	FUNCTION_8	FOR_1
0x4000dce	     0xf87fafeffff	                            ja 0x4000cce	       470	nm.c	FUNCTION_8	FOR_1
0x4000dd4	          0x4889e8	                            mov rax, rbp	       470	nm.c	FUNCTION_8	FOR_1
0x4000dd7	      0x482b442410	             sub rax, qword [rsp + 0x10]	       470	nm.c	FUNCTION_8	FOR_1
0x4000ddc	          0x4d89e7	                            mov r15, r12	       470	nm.c	FUNCTION_8	FOR_1
0x4000ddf	            0x4899	                                     cqo	       530	nm.c	FUNCTION_8
0x4000de1	    0x8b3d00000000	            mov edi, dword [0x04000de7] 	      1187	nm.c	FUNCTION_20	IF_11
0x4000de7	    0x48c704240000	                      mov qword [rsp], 0	      1186	nm.c	FUNCTION_20	IF_11
0x4000def	          0x48f7fb	                                idiv rbx	       530	nm.c	FUNCTION_8
0x4000df2	            0x85ff	                           test edi, edi	      1187	nm.c	FUNCTION_20	IF_11
0x4000df4	          0x4889c3	                            mov rbx, rax	       530	nm.c	FUNCTION_8
0x4000df7	          0x4889c5	                            mov rbp, rax	       530	nm.c	FUNCTION_8
0x4000dfa	     0xf8420020000	                            je 0x4001020	      1187	nm.c	FUNCTION_20	IF_11
0x4000e00	    0x8b0d00000000	            mov ecx, dword [0x04000e06] 	      1204	nm.c	FUNCTION_20	CALL_30
0x4000e06	            0x85c9	                           test ecx, ecx	      1204	nm.c	FUNCTION_20	CALL_30
0x4000e08	     0xf8592010000	                           jne 0x4000fa0	      1204	nm.c	FUNCTION_20	CALL_30
0x4000e0e	        0x498b4708	                mov rax, qword [r15 + 8]	      1074	nm.c	FUNCTION_19	IF_1
0x4000e12	      0x448b642434	           mov r12d, dword [rsp + 0x34] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4000e17	          0x4c89ff	                            mov rdi, r15	      1074	nm.c	FUNCTION_19	IF_1
0x4000e1a	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4000e1f	    0x448b35000000	           mov r14d, dword [0x04000e26] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4000e26	    0xff9000020000	                call qword [rax + 0x200]	      1074	nm.c	FUNCTION_19	IF_1
0x4000e2c	          0x4885c0	                           test rax, rax	      1075	nm.c	FUNCTION_19	CALL_3
0x4000e2f	          0x4989c5	                            mov r13, rax	      1074	nm.c	FUNCTION_19	IF_1
0x4000e32	     0xf84e6060000	                            je 0x400151e	      1075	nm.c	FUNCTION_19	CALL_3
0x4000e38	          0x4889e8	                            mov rax, rbp	      1079	nm.c	FUNCTION_19
0x4000e3b	        0x490fafc4	                           imul rax, r12	      1079	nm.c	FUNCTION_19
0x4000e3f	        0x488d2c03	                    lea rbp, [rbx + rax]	      1079	nm.c	FUNCTION_19
0x4000e43	          0x4839eb	                            cmp rbx, rbp	      1081	nm.c	FUNCTION_19	FOR_1
0x4000e46	            0x7341	                           jae 0x4000e89	      1081	nm.c	FUNCTION_19	FOR_1
0x4000e48	     0xf1f84000000	                   nop dword [rax + rax]	      1081	nm.c	FUNCTION_19	FOR_1
0x4000e50	        0x498b4708	                mov rax, qword [r15 + 8]	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000e54	          0x4c89e9	                            mov rcx, r13	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000e57	          0x4889da	                            mov rdx, rbx	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000e5a	          0x4489f6	                           mov esi, r14d	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000e5d	          0x4c89ff	                            mov rdi, r15	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000e60	    0xff9060020000	                call qword [rax + 0x260]	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4000e66	          0x4885c0	                           test rax, rax	      1086	nm.c	FUNCTION_19	FOR_1	CALL_6
0x4000e69	     0xf84af060000	                            je 0x400151e	      1086	nm.c	FUNCTION_19	FOR_1	CALL_6
0x4000e6f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1089	nm.c	FUNCTION_19	FOR_1
0x4000e74	            0x31d2	                            xor edx, edx	      1089	nm.c	FUNCTION_19	FOR_1
0x4000e76	          0x4889c6	                            mov rsi, rax	      1089	nm.c	FUNCTION_19	FOR_1
0x4000e79	          0x4c89ff	                            mov rdi, r15	      1089	nm.c	FUNCTION_19	FOR_1
0x4000e7c	          0x4c01e3	                            add rbx, r12	      1089	nm.c	FUNCTION_19	FOR_1
0x4000e7f	      0xe8ccf7ffff	                   call sym.print_symbol	      1089	nm.c	FUNCTION_19	FOR_1
0x4000e84	          0x4839dd	                            cmp rbp, rbx	      1081	nm.c	FUNCTION_19	FOR_1
0x4000e87	            0x77c7	                            ja 0x4000e50	      1081	nm.c	FUNCTION_19	FOR_1
0x4000e89	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1209	nm.c	FUNCTION_20	CALL_32
0x4000e8e	          0x4885ff	                           test rdi, rdi	      1209	nm.c	FUNCTION_20	CALL_32
0x4000e91	            0x7405	                            je 0x4000e98	      1209	nm.c	FUNCTION_20	CALL_32
0x4000e93	      0xe800000000	                          call 0x4000e98	      1210	nm.c	FUNCTION_20	CALL_33
0x4000e98	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1211	nm.c	FUNCTION_20	CALL_34
0x4000e9d	      0xe800000000	                          call 0x4000ea2	      1211	nm.c	FUNCTION_20	CALL_34
0x4000ea2	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1212	nm.c	FUNCTION_20
0x4000ea7	    0x644833042528	                xor rax, qword fs:[0x28]	      1212	nm.c	FUNCTION_20
0x4000eb0	     0xf8570060000	                           jne 0x4001526	      1212	nm.c	FUNCTION_20
0x4000eb6	        0x488b3c24	                    mov rdi, qword [rsp]	      1212	nm.c	FUNCTION_20
0x4000eba	        0x4883c458	                           add rsp, 0x58	      1213	nm.c	
0x4000ebe	              0x5b	                                 pop rbx	      1213	nm.c	
0x4000ebf	              0x5d	                                 pop rbp	      1213	nm.c	
0x4000ec0	            0x415c	                                 pop r12	      1213	nm.c	
0x4000ec2	            0x415d	                                 pop r13	      1213	nm.c	
0x4000ec4	            0x415e	                                 pop r14	      1213	nm.c	
0x4000ec6	            0x415f	                                 pop r15	      1213	nm.c	
0x4000ec8	      0xe900000000	                           jmp 0x4000ecd	      1212	nm.c	FUNCTION_20
0x4000ecd	           0xf1f00	                         nop dword [rax]	      1212	nm.c	FUNCTION_20
0x4000ed0	    0x448b25000000	           mov r12d, dword [0x04000ed7] 	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000ed7	          0x4585e4	                         test r12d, r12d	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000eda	     0xf843e060000	                            je 0x400151e	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000ee0	      0xe800000000	                          call 0x4000ee5	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000ee5	          0x83f807	                              cmp eax, 7	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000ee8	     0xf8530060000	                           jne 0x400151e	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4000eee	          0x498b1f	                    mov rbx, qword [r15]	      1127	nm.c	FUNCTION_20	IF_5
0x4000ef1	            0x31ff	                            xor edi, edi	      1127	nm.c	FUNCTION_20	IF_5
0x4000ef3	      0xba05000000	                              mov edx, 5	      1127	nm.c	FUNCTION_20	IF_5
0x4000ef8	      0xbe00000000	                              mov esi, 0	      1127	nm.c	FUNCTION_20	IF_5
0x4000efd	      0xe800000000	                          call 0x4000f02	      1127	nm.c	FUNCTION_20	IF_5
0x4000f02	          0x4889de	                            mov rsi, rbx	      1127	nm.c	FUNCTION_20	IF_5
0x4000f05	          0x4889c7	                            mov rdi, rax	      1127	nm.c	FUNCTION_20	IF_5
0x4000f08	            0x31c0	                            xor eax, eax	      1127	nm.c	FUNCTION_20	IF_5
0x4000f0a	      0xe800000000	                          call 0x4000f0f	      1127	nm.c	FUNCTION_20	IF_5
0x4000f0f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1213	nm.c	
0x4000f14	    0x644833042528	                xor rax, qword fs:[0x28]	      1213	nm.c	
0x4000f1d	     0xf8503060000	                           jne 0x4001526	      1213	nm.c	
0x4000f23	        0x4883c458	                           add rsp, 0x58	      1213	nm.c	
0x4000f27	              0x5b	                                 pop rbx	      1213	nm.c	
0x4000f28	              0x5d	                                 pop rbp	      1213	nm.c	
0x4000f29	            0x415c	                                 pop r12	      1213	nm.c	
0x4000f2b	            0x415d	                                 pop r13	      1213	nm.c	
0x4000f2d	            0x415e	                                 pop r14	      1213	nm.c	
0x4000f2f	            0x415f	                                 pop r15	      1213	nm.c	
0x4000f31	              0xc3	                                     ret	      1213	nm.c	
0x4000f32	    0x660f1f440000	                    nop word [rax + rax]	      1213	nm.c	
0x4000f38	        0x8078015f	                cmp byte [rax + 1], 0x5f	       482	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_8
0x4000f3c	     0xf85bcfdffff	                           jne 0x4000cfe	       482	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_8
0x4000f42	            0x31f6	                            xor esi, esi	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000f44	        0x8078025f	                cmp byte [rax + 2], 0x5f	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000f48	      0xbf00000000	                              mov edi, 0	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000f4d	      0xb90f000000	                            mov ecx, 0xf	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000f52	        0x400f94c6	                                sete sil	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000f56	          0x4801c6	                            add rsi, rax	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000f59	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000f5b	     0xf859dfdffff	                           jne 0x4000cfe	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4000f61	        0x498b0424	                    mov rax, qword [r12]	       485	nm.c	FUNCTION_8	FOR_1
0x4000f65	      0xba05000000	                              mov edx, 5	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f6a	      0xbe00000000	                              mov esi, 0	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f6f	            0x31ff	                            xor edi, edi	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f71	      0x4c89442420	              mov qword [rsp + 0x20], r8	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f76	      0x4889442418	             mov qword [rsp + 0x18], rax	       485	nm.c	FUNCTION_8	FOR_1
0x4000f7b	      0xe800000000	                          call 0x4000f80	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f80	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f85	          0x4889c7	                            mov rdi, rax	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f88	            0x31c0	                            xor eax, eax	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f8a	      0xe800000000	                          call 0x4000f8f	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f8f	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f94	      0xe965fdffff	                           jmp 0x4000cfe	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000f99	     0xf1f80000000	                         nop dword [rax]	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4000fa0	        0x498b4708	                mov rax, qword [r15 + 8]	      1034	nm.c	FUNCTION_18	IF_1
0x4000fa4	    0x448b25000000	           mov r12d, dword [0x04000fab] 	      1207	nm.c	FUNCTION_20
0x4000fab	          0x4c89ff	                            mov rdi, r15	      1034	nm.c	FUNCTION_18	IF_1
0x4000fae	    0xff9000020000	                call qword [rax + 0x200]	      1034	nm.c	FUNCTION_18	IF_1
0x4000fb4	          0x4885c0	                           test rax, rax	      1035	nm.c	FUNCTION_18	CALL_3
0x4000fb7	          0x4889c3	                            mov rbx, rax	      1034	nm.c	FUNCTION_18	IF_1
0x4000fba	     0xf845e050000	                            je 0x400151e	      1035	nm.c	FUNCTION_18	CALL_3
0x4000fc0	        0x488b0c24	                    mov rcx, qword [rsp]	      1039	nm.c	FUNCTION_18
0x4000fc4	          0x4889e8	                            mov rax, rbp	      1039	nm.c	FUNCTION_18
0x4000fc7	        0x48c1e004	                              shl rax, 4	      1039	nm.c	FUNCTION_18
0x4000fcb	        0x4c8d2c01	                    lea r13, [rcx + rax]	      1039	nm.c	FUNCTION_18
0x4000fcf	          0x4c39e9	                            cmp rcx, r13	      1041	nm.c	FUNCTION_18	FOR_1
0x4000fd2	     0xf83b1feffff	                           jae 0x4000e89	      1041	nm.c	FUNCTION_18	FOR_1
0x4000fd8	      0x4c8b742408	                mov r14, qword [rsp + 8]	      1041	nm.c	FUNCTION_18	FOR_1
0x4000fdd	          0x4889cd	                            mov rbp, rcx	      1041	nm.c	FUNCTION_18	FOR_1
0x4000fe0	        0x498b4708	                mov rax, qword [r15 + 8]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4000fe4	          0x4889d9	                            mov rcx, rbx	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4000fe7	        0x488b5500	                    mov rdx, qword [rbp]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4000feb	          0x4489e6	                           mov esi, r12d	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4000fee	          0x4c89ff	                            mov rdi, r15	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4000ff1	    0xff9060020000	                call qword [rax + 0x260]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4000ff7	          0x4885c0	                           test rax, rax	      1046	nm.c	FUNCTION_18	FOR_1	CALL_6
0x4000ffa	     0xf841e050000	                            je 0x400151e	      1046	nm.c	FUNCTION_18	FOR_1	CALL_6
0x4001000	        0x488b5508	                mov rdx, qword [rbp + 8]	      1049	nm.c	FUNCTION_18	FOR_1
0x4001004	          0x4c89f1	                            mov rcx, r14	      1049	nm.c	FUNCTION_18	FOR_1
0x4001007	          0x4889c6	                            mov rsi, rax	      1049	nm.c	FUNCTION_18	FOR_1
0x400100a	          0x4c89ff	                            mov rdi, r15	      1049	nm.c	FUNCTION_18	FOR_1
0x400100d	        0x4883c510	                           add rbp, 0x10	      1041	nm.c	FUNCTION_18	FOR_1
0x4001011	      0xe83af6ffff	                   call sym.print_symbol	      1049	nm.c	FUNCTION_18	FOR_1
0x4001016	          0x4939ed	                            cmp r13, rbp	      1041	nm.c	FUNCTION_18	FOR_1
0x4001019	            0x77c5	                            ja 0x4000fe0	      1041	nm.c	FUNCTION_18	FOR_1
0x400101b	      0xe969feffff	                           jmp 0x4000e89	      1041	nm.c	FUNCTION_18	FOR_1
0x4001020	    0x8b0500000000	            mov eax, dword [0x04001026] 	      1190	nm.c	FUNCTION_20	IF_11	CALL_24
0x4001026	          0x4c89ff	                            mov rdi, r15	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x4001029	    0x4c893d000000	            mov qword [0x04001030], r15 	      1189	nm.c	FUNCTION_20	IF_11
0x4001030	    0x890500000000	            mov dword [0x04001036], eax 	      1190	nm.c	FUNCTION_20	IF_11	CALL_24
0x4001036	        0x498b4708	                mov rax, qword [r15 + 8]	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x400103a	    0xff9000020000	                call qword [rax + 0x200]	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x4001040	    0x488905000000	            mov qword [0x04001047], rax 	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x4001047	        0x498b4708	                mov rax, qword [r15 + 8]	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x400104b	          0x4c89ff	                            mov rdi, r15	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x400104e	    0xff9000020000	                call qword [rax + 0x200]	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x4001054	    0x48833d000000	               cmp qword [0x0400105c], 0	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x400105c	    0x488905000000	            mov qword [0x04001063], rax 	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x4001063	     0xf84b5040000	                            je 0x400151e	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x4001069	          0x4885c0	                           test rax, rax	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x400106c	     0xf84ac040000	                            je 0x400151e	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x4001072	    0x8b3500000000	            mov esi, dword [0x04001078] 	      1196	nm.c	FUNCTION_20	IF_11	IF_13	CALL_28
0x4001078	            0x85f6	                           test esi, esi	      1196	nm.c	FUNCTION_20	IF_11	IF_13	CALL_28
0x400107a	     0xf85e9010000	                           jne 0x4001269	      1196	nm.c	FUNCTION_20	IF_11	IF_13	CALL_28
0x4001080	    0x486315000000	         movsxd rdx, dword [0x04001087] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001087	    0x486305000000	         movsxd rax, dword [0x0400108e] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x400108e	          0x4889de	                            mov rsi, rbx	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001091	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001096	        0x488d0450	                  lea rax, [rax + rdx*2]	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x400109a	        0x8b542434	            mov edx, dword [rsp + 0x34] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x400109e	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010a6	      0xe800000000	                          call 0x40010ab	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010ab	      0xe950fdffff	                           jmp 0x4000e00	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x40010b0	    0x8b1d00000000	            mov ebx, dword [0x040010b6] 	      1139	nm.c	FUNCTION_20	IF_6	IF_7
0x40010b6	            0x85db	                           test ebx, ebx	      1139	nm.c	FUNCTION_20	IF_6	IF_7
0x40010b8	     0xf84aa030000	                            je 0x4001468	      1139	nm.c	FUNCTION_20	IF_6	IF_7
0x40010be	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      1142	nm.c	FUNCTION_20	IF_6	IF_7
0x40010c3	          0x4889c1	                            mov rcx, rax	      1142	nm.c	FUNCTION_20	IF_6	IF_7
0x40010c6	            0x31f6	                            xor esi, esi	      1135	nm.c	FUNCTION_20	IF_6
0x40010c8	            0x31d2	                            xor edx, edx	      1133	nm.c	FUNCTION_20	IF_6
0x40010ca	        0x4d8b5f08	                mov r11, qword [r15 + 8]	      1160	nm.c	FUNCTION_20	IF_6
0x40010ce	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      1160	nm.c	FUNCTION_20	IF_6
0x40010d3	          0x4c89ff	                            mov rdi, r15	      1160	nm.c	FUNCTION_20	IF_6
0x40010d6	    0x41ff93480300	                call qword [r11 + 0x348]	      1160	nm.c	FUNCTION_20	IF_6
0x40010dd	          0x4885c0	                           test rax, rax	      1162	nm.c	FUNCTION_20	IF_6	IF_10
0x40010e0	          0x4889c3	                            mov rbx, rax	      1160	nm.c	FUNCTION_20	IF_6
0x40010e3	     0xf8eee010000	                           jle 0x40012d7	      1162	nm.c	FUNCTION_20	IF_6	IF_10
0x40010e9	        0x498d2c04	                    lea rbp, [r12 + rax]	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x40010ed	    0x4e8d2ce50000	                        lea r13, [r12*8]	      1170	nm.c	FUNCTION_20	IF_6	IF_10
0x40010f5	    0x488d3ced0800	                    lea rdi, [rbp*8 + 8]	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x40010fd	      0xe800000000	                          call 0x4001102	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x4001102	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_58	CALL_3
0x4001107	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_58	CALL_3
0x400110a	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_58	CALL_3
0x400110d	      0xe800000000	                          call 0x4001112	        53	string3.h	FUNCTION_58	CALL_3
0x4001112	          0x4989c2	                            mov r10, rax	        53	string3.h	FUNCTION_58	CALL_3
0x4001115	        0x4a8d0428	                    lea rax, [rax + r13]	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001119	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400111e	          0x4889c2	                            mov rdx, rax	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001121	        0x48c1e23c	                           shl rdx, 0x3c	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001125	        0x48c1ea3f	                           shr rdx, 0x3f	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001129	          0x4839da	                            cmp rdx, rbx	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400112c	        0x480f47d3	                          cmova rdx, rbx	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001130	        0x4883fb05	                              cmp rbx, 5	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001134	     0xf8f59030000	                            jg 0x4001493	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400113a	          0x4889da	                            mov rdx, rbx	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400113d	        0x4883fa01	                              cmp rdx, 1	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001141	        0x4c8d4008	                       lea r8, [rax + 8]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001145	          0x488930	                    mov qword [rax], rsi	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001148	     0xf849f030000	                            je 0x40014ed	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400114e	        0x488d4e30	                   lea rcx, [rsi + 0x30]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001152	        0x4883fa02	                              cmp rdx, 2	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001156	        0x4c8d4010	                    lea r8, [rax + 0x10]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400115a	        0x48894808	                mov qword [rax + 8], rcx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400115e	     0xf84a7030000	                            je 0x400150b	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001164	        0x488d4e60	                   lea rcx, [rsi + 0x60]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001168	        0x4883fa03	                              cmp rdx, 3	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400116c	        0x4c8d4018	                    lea r8, [rax + 0x18]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001170	        0x48894810	             mov qword [rax + 0x10], rcx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001174	     0xf8487030000	                            je 0x4001501	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400117a	    0x488d8e900000	                   lea rcx, [rsi + 0x90]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001181	        0x4883fa05	                              cmp rdx, 5	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001185	        0x4c8d4020	                    lea r8, [rax + 0x20]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001189	        0x48894818	             mov qword [rax + 0x18], rcx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400118d	     0xf8564030000	                           jne 0x40014f7	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001193	    0x488d8ec00000	                   lea rcx, [rsi + 0xc0]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400119a	        0x4c8d4028	                    lea r8, [rax + 0x28]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400119e	      0xbf05000000	                              mov edi, 5	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40011a3	        0x48894820	             mov qword [rax + 0x20], rcx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011a7	          0x4839d3	                            cmp rbx, rdx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011aa	     0xf849b000000	                            je 0x400124b	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011b0	          0x4989d9	                             mov r9, rbx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011b3	          0x4929d1	                             sub r9, rdx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011b6	        0x498d49fe	                       lea rcx, [r9 - 2]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011ba	          0x48d1e9	                              shr rcx, 1	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011bd	        0x4883c101	                              add rcx, 1	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011c1	        0x4983f901	                               cmp r9, 1	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011c5	        0x4c8d1c09	                    lea r11, [rcx + rcx]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011c9	            0x7472	                            je 0x400123d	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011cb	        0x4c8d6f01	                      lea r13, [rdi + 1]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011cf	        0x48893c24	                    mov qword [rsp], rdi	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011d3	          0x4c01e2	                            add rdx, r12	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011d6	      0xf30f7e0c24	                  movq xmm1, qword [rsp]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011db	        0x4d8d24d2	                  lea r12, [r10 + rdx*8]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011df	        0x4c892c24	                    mov qword [rsp], r13	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x40011e3	            0x31d2	                            xor edx, edx	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40011e5	         0xf160c24	                movhps xmm1, qword [rsp]	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40011e9	        0x48893424	                    mov qword [rsp], rsi	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40011ed	      0xf30f7e2424	                  movq xmm4, qword [rsp]	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40011f2	        0x660f6ce4	                   punpcklqdq xmm4, xmm4	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40011f6	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x040011fe]	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40011fe	            0x6690	                                     nop	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001200	        0x660f6fd1	                       movdqa xmm2, xmm1	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001204	        0x4883c201	                              add rdx, 1	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001208	        0x660fd4cb	                        paddq xmm1, xmm3	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400120c	        0x4983c410	                           add r12, 0x10	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001210	      0x660f73f204	                           psllq xmm2, 4	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001215	        0x660f6fc2	                       movdqa xmm0, xmm2	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001219	      0x660f73f002	                           psllq xmm0, 2	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400121e	        0x660ffbc2	                        psubq xmm0, xmm2	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001222	        0x660fd4c4	                        paddq xmm0, xmm4	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001226	    0x410f294424f0	       movaps xmmword [r12 - 0x10], xmm0	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400122c	          0x4839ca	                            cmp rdx, rcx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400122f	            0x72cf	                            jb 0x4001200	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001231	          0x4c01df	                            add rdi, r11	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001234	          0x4d39cb	                             cmp r11, r9	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001237	        0x4f8d04d8	                    lea r8, [r8 + r11*8]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400123b	            0x740e	                            je 0x400124b	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400123d	        0x488d147f	                  lea rdx, [rdi + rdi*2]	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001241	        0x48c1e204	                              shl rdx, 4	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001245	          0x4801d6	                            add rsi, rdx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001248	          0x498930	                     mov qword [r8], rsi	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x400124b	    0x48c704d80000	              mov qword [rax + rbx*8], 0	      1174	nm.c	FUNCTION_20	IF_6	IF_10
0x4001253	      0x4c89542438	             mov qword [rsp + 0x38], r10	      1175	nm.c	FUNCTION_20	IF_6	IF_10
0x4001258	          0x4989ec	                            mov r12, rbp	      1176	nm.c	FUNCTION_20	IF_6	IF_10
0x400125b	        0x8b5c2434	            mov ebx, dword [rsp + 0x34] 	      1176	nm.c	FUNCTION_20	IF_6	IF_10
0x400125f	      0x4c89542410	             mov qword [rsp + 0x10], r10	      1175	nm.c	FUNCTION_20	IF_6	IF_10
0x4001264	      0xe904faffff	                           jmp 0x4000c6d	      1175	nm.c	FUNCTION_20	IF_6	IF_10
0x4001269	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	       736	nm.c	FUNCTION_15
0x400126e	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x4001273	          0x4889de	                            mov rsi, rbx	       736	nm.c	FUNCTION_15
0x4001276	    0x8b0500000000	            mov eax, dword [0x0400127c] 	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x400127c	      0xb900000000	                              mov ecx, 0	       736	nm.c	FUNCTION_15
0x4001281	            0x31ed	                            xor ebp, ebp	       752	nm.c	FUNCTION_15	IF_1
0x4001283	          0x4c89ef	                            mov rdi, r13	       736	nm.c	FUNCTION_15
0x4001286	          0x4c89c2	                             mov rdx, r8	       736	nm.c	FUNCTION_15
0x4001289	      0x4c89442410	              mov qword [rsp + 0x10], r8	       736	nm.c	FUNCTION_15
0x400128e	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x4001292	      0xe800000000	                          call 0x4001297	       736	nm.c	FUNCTION_15
0x4001297	          0x4889df	                            mov rdi, rbx	       740	nm.c	FUNCTION_15
0x400129a	        0x48c1e704	                              shl rdi, 4	       740	nm.c	FUNCTION_15
0x400129e	      0xe800000000	                          call 0x40012a3	       740	nm.c	FUNCTION_15
0x40012a3	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       747	nm.c	FUNCTION_15
0x40012a8	        0x48890424	                    mov qword [rsp], rax	       740	nm.c	FUNCTION_15
0x40012ac	          0x4889d8	                            mov rax, rbx	       747	nm.c	FUNCTION_15
0x40012af	            0x31f6	                            xor esi, esi	       752	nm.c	FUNCTION_15	IF_1
0x40012b1	        0x490fafc0	                            imul rax, r8	       747	nm.c	FUNCTION_15
0x40012b5	      0x4d8d640500	                    lea r12, [r13 + rax]	       747	nm.c	FUNCTION_15
0x40012ba	          0x4d39e5	                            cmp r13, r12	       752	nm.c	FUNCTION_15	IF_1
0x40012bd	            0x7221	                            jb 0x40012e0	       752	nm.c	FUNCTION_15	IF_1
0x40012bf	        0x488b3c24	                    mov rdi, qword [rsp]	       818	nm.c	FUNCTION_15
0x40012c3	      0xb900000000	                              mov ecx, 0	       818	nm.c	FUNCTION_15
0x40012c8	      0xba10000000	                           mov edx, 0x10	       818	nm.c	FUNCTION_15
0x40012cd	      0xe800000000	                          call 0x40012d2	       818	nm.c	FUNCTION_15
0x40012d2	      0xe929fbffff	                           jmp 0x4000e00	       818	nm.c	FUNCTION_15
0x40012d7	        0x8b5c2434	            mov ebx, dword [rsp + 0x34] 	       818	nm.c	FUNCTION_15
0x40012db	      0xe983f9ffff	                           jmp 0x4000c63	       818	nm.c	FUNCTION_15
0x40012e0	    0x4c8b0d000000	              mov r9, qword [0x040012e7]	       749	nm.c	FUNCTION_15
0x40012e7	    0x4c8b15000000	            mov r10, qword [0x040012ee] 	       750	nm.c	FUNCTION_15
0x40012ee	          0x4c89ea	                            mov rdx, r13	       754	nm.c	FUNCTION_15	IF_1
0x40012f1	        0x498b4708	                mov rax, qword [r15 + 8]	       754	nm.c	FUNCTION_15	IF_1
0x40012f5	      0x4c89442420	              mov qword [rsp + 0x20], r8	       754	nm.c	FUNCTION_15	IF_1
0x40012fa	          0x4c89ff	                            mov rdi, r15	       754	nm.c	FUNCTION_15	IF_1
0x40012fd	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	       754	nm.c	FUNCTION_15	IF_1
0x4001301	      0x4c89542418	             mov qword [rsp + 0x18], r10	       750	nm.c	FUNCTION_15
0x4001306	          0x4c89c9	                             mov rcx, r9	       754	nm.c	FUNCTION_15	IF_1
0x4001309	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       754	nm.c	FUNCTION_15	IF_1
0x400130e	    0xff9060020000	                call qword [rax + 0x260]	       754	nm.c	FUNCTION_15	IF_1
0x4001314	          0x4885c0	                           test rax, rax	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001317	          0x4889c5	                            mov rbp, rax	       754	nm.c	FUNCTION_15	IF_1
0x400131a	     0xf84fe010000	                            je 0x400151e	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001320	        0x4c8b3424	                    mov r14, qword [rsp]	       740	nm.c	FUNCTION_15
0x4001324	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       740	nm.c	FUNCTION_15
0x4001329	          0x4d89fb	                            mov r11, r15	       740	nm.c	FUNCTION_15
0x400132c	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       740	nm.c	FUNCTION_15
0x4001331	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       740	nm.c	FUNCTION_15
0x4001336	          0x4c89f0	                            mov rax, r14	       740	nm.c	FUNCTION_15
0x4001339	          0x4d89e6	                            mov r14, r12	       740	nm.c	FUNCTION_15
0x400133c	          0x4d89d4	                            mov r12, r10	       740	nm.c	FUNCTION_15
0x400133f	          0x4d89c7	                             mov r15, r8	       740	nm.c	FUNCTION_15
0x4001342	          0x4989c2	                            mov r10, rax	       740	nm.c	FUNCTION_15
0x4001345	            0xeb6f	                           jmp 0x40013b6	       740	nm.c	FUNCTION_15
0x4001347	    0x660f1f840000	                    nop word [rax + rax]	       740	nm.c	FUNCTION_15
0x4001350	            0x31c0	                            xor eax, eax	       777	nm.c	FUNCTION_15	FOR_1
0x4001352	    0xf74518000120	      test dword [rbp + 0x18], 0x200100 	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001359	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       779	nm.c	FUNCTION_15	FOR_1
0x400135d	            0x7527	                           jne 0x4001386	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x400135f	        0x498b4b08	                mov rcx, qword [r11 + 8]	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001363	        0x83790805	                  cmp dword [rcx + 8], 5	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001367	     0xf84b0000000	                            je 0x400141d	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x400136d	        0xf6422110	           test byte [rdx + 0x21], 0x10 	       788	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001371	     0xf85b9000000	                           jne 0x4001430	       788	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001377	          0x4939de	                            cmp r14, rbx	       792	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7	CALL_12
0x400137a	            0x760a	                           jbe 0x4001386	       792	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7	CALL_12
0x400137c	        0x48395020	            cmp qword [rax + 0x20], rdx 	       793	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7
0x4001380	     0xf84b6000000	                            je 0x400143c	       793	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7
0x4001386	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x400138a	        0x482b5510	             sub rdx, qword [rbp + 0x10]	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x400138e	          0x4889c5	                            mov rbp, rax	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x4001391	          0x4885d2	                           test rdx, rdx	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001394	            0x740b	                            je 0x40013a1	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001396	          0x4d892a	                    mov qword [r10], r13	       803	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001399	        0x49895208	                mov qword [r10 + 8], rdx	       804	nm.c	FUNCTION_15	FOR_1	IF_8
0x400139d	        0x4983c210	                           add r10, 0x10	       805	nm.c	FUNCTION_15	FOR_1	IF_8
0x40013a1	          0x4939de	                            cmp r14, rbx	       760	nm.c	FUNCTION_15	FOR_1
0x40013a4	     0xf86a8000000	                           jbe 0x4001452	       760	nm.c	FUNCTION_15	FOR_1
0x40013aa	          0x4c89e0	                            mov rax, r12	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013ad	          0x4989dd	                            mov r13, rbx	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013b0	          0x4d89cc	                             mov r12, r9	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013b3	          0x4989c1	                             mov r9, rax	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013b6	      0x4b8d5c3d00	                    lea rbx, [r13 + r15]	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013bb	          0x4939de	                            cmp r14, rbx	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013be	            0x7690	                           jbe 0x4001350	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013c0	        0x498b4308	                mov rax, qword [r11 + 8]	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013c4	      0x4c89542420	             mov qword [rsp + 0x20], r10	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013c9	          0x4c89df	                            mov rdi, r11	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013cc	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013d1	      0x4c895c2410	             mov qword [rsp + 0x10], r11	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013d6	          0x4c89e1	                            mov rcx, r12	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013d9	          0x4889da	                            mov rdx, rbx	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013dc	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013e0	    0xff9060020000	                call qword [rax + 0x260]	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x40013e6	          0x4885c0	                           test rax, rax	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40013e9	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40013ee	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40013f3	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40013f8	     0xf842d010000	                            je 0x400152b	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40013fe	    0xf74518000120	      test dword [rbp + 0x18], 0x200100 	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001405	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       779	nm.c	FUNCTION_15	FOR_1
0x4001409	     0xf856dffffff	                           jne 0x400137c	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x400140f	        0x498b4b08	                mov rcx, qword [r11 + 8]	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001413	        0x83790805	                  cmp dword [rcx + 8], 5	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001417	     0xf8550ffffff	                           jne 0x400136d	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x400141d	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001421	          0x4889c5	                            mov rbp, rax	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001424	      0xe968ffffff	                           jmp 0x4001391	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001429	     0xf1f80000000	                         nop dword [rax]	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001430	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x4001434	          0x4889c5	                            mov rbp, rax	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x4001437	      0xe955ffffff	                           jmp 0x4001391	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x400143c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       794	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4
0x4001440	        0x482b5510	             sub rdx, qword [rbp + 0x10]	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001444	          0x4889c5	                            mov rbp, rax	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001447	     0xf845dffffff	                            je 0x40013aa	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x400144d	      0xe944ffffff	                           jmp 0x4001396	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001452	          0x4c89d6	                            mov rsi, r10	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001455	        0x482b3424	                    sub rsi, qword [rsp]	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001459	          0x4d89df	                            mov r15, r11	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x400145c	        0x48c1fe04	                              sar rsi, 4	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001460	          0x4889f5	                            mov rbp, rsi	       760	nm.c	FUNCTION_15	FOR_1
0x4001463	      0xe957feffff	                           jmp 0x40012bf	       760	nm.c	FUNCTION_15	FOR_1
0x4001468	        0x498b4708	                mov rax, qword [r15 + 8]	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x400146c	          0x4c89ff	                            mov rdi, r15	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x400146f	    0xff9038030000	                call qword [rax + 0x338]	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x4001475	          0x4885c0	                           test rax, rax	      1151	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x4001478	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1149	nm.c	FUNCTION_20	IF_6	ELSE_1
0x400147d	            0x7f31	                            jg 0x40014b0	      1151	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x400147f	          0x4c89e6	                            mov rsi, r12	      1151	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x4001482	            0x31c9	                            xor ecx, ecx	      1136	nm.c	FUNCTION_20	IF_6
0x4001484	          0x4531c0	                            xor r8d, r8d	      1134	nm.c	FUNCTION_20	IF_6
0x4001487	      0xe93efcffff	                           jmp 0x40010ca	      1134	nm.c	FUNCTION_20	IF_6
0x400148c	            0x31c0	                            xor eax, eax	       470	nm.c	FUNCTION_8	FOR_1
0x400148e	      0xe94cf9ffff	                           jmp 0x4000ddf	       470	nm.c	FUNCTION_8	FOR_1
0x4001493	            0x31ff	                            xor edi, edi	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001495	          0x4885d2	                           test rdx, rdx	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001498	          0x4989c0	                             mov r8, rax	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400149b	     0xf840ffdffff	                            je 0x40011b0	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40014a1	      0xe997fcffff	                           jmp 0x400113d	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40014a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40014b0	          0x4889c7	                            mov rdi, rax	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40014b3	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40014b8	      0xe800000000	                          call 0x40014bd	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40014bd	          0x4989c0	                             mov r8, rax	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40014c0	        0x498b4708	                mov rax, qword [r15 + 8]	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40014c4	          0x4c89ff	                            mov rdi, r15	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40014c7	          0x4c89c6	                             mov rsi, r8	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40014ca	        0x4c890424	                     mov qword [rsp], r8	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40014ce	    0xff9040030000	                call qword [rax + 0x340]	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40014d4	          0x4885c0	                           test rax, rax	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x40014d7	          0x4889c1	                            mov rcx, rax	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40014da	        0x4c8b0424	                     mov r8, qword [rsp]	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x40014de	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x40014e3	            0x7839	                            js 0x400151e	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x40014e5	          0x4c89e6	                            mov rsi, r12	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x40014e8	      0xe9ddfbffff	                           jmp 0x40010ca	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x40014ed	      0xbf01000000	                              mov edi, 1	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40014f2	      0xe9b0fcffff	                           jmp 0x40011a7	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40014f7	      0xbf04000000	                              mov edi, 4	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x40014fc	      0xe9a6fcffff	                           jmp 0x40011a7	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001501	      0xbf03000000	                              mov edi, 3	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001506	      0xe99cfcffff	                           jmp 0x40011a7	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400150b	      0xbf02000000	                              mov edi, 2	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001510	      0xe992fcffff	                           jmp 0x40011a7	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001515	        0x498b3c24	                    mov rdi, qword [r12]	       479	nm.c	FUNCTION_8	FOR_1
0x4001519	      0xe800000000	                          call 0x400151e	       479	nm.c	FUNCTION_8	FOR_1
0x400151e	          0x498b3f	                    mov rdi, qword [r15]	      1047	nm.c	FUNCTION_18	FOR_1
0x4001521	      0xe800000000	                          call 0x4001526	      1047	nm.c	FUNCTION_18	FOR_1
0x4001526	      0xe800000000	                          call 0x400152b	      1213	nm.c	
0x400152b	          0x498b3b	                    mov rdi, qword [r11]	       774	nm.c	FUNCTION_15	FOR_1	IF_3
0x400152e	      0xe800000000	                          call 0x4001533	       774	nm.c	FUNCTION_15	FOR_1	IF_3
get_relocs	FOR,0:functions,0:SWITCH,0:IF,3:DO,0:WHILE,0:ELSE,1:CALL,7	47
0x40005a0	            0x4155	                                push r13	       828	nm.c	FUNCTION_16
0x40005a2	            0x4154	                                push r12	       828	nm.c	FUNCTION_16
0x40005a4	              0x55	                                push rbp	       828	nm.c	FUNCTION_16
0x40005a5	              0x53	                                push rbx	       828	nm.c	FUNCTION_16
0x40005a6	          0x4889d3	                            mov rbx, rdx	       828	nm.c	FUNCTION_16
0x40005a9	        0x4883ec08	                              sub rsp, 8	       828	nm.c	FUNCTION_16
0x40005ad	        0xf6462004	               test byte [rsi + 0x20], 4	       833	nm.c	FUNCTION_16	IF_1
0x40005b1	          0x488b02	                    mov rax, qword [rdx]	       831	nm.c	FUNCTION_16
0x40005b4	          0x488930	                    mov qword [rax], rsi	       831	nm.c	FUNCTION_16
0x40005b7	            0x7537	                           jne 0x40005f0	       833	nm.c	FUNCTION_16	IF_1
0x40005b9	        0x488b4208	                mov rax, qword [rdx + 8]	       835	nm.c	FUNCTION_16	IF_1
0x40005bd	    0x48c700000000	                      mov qword [rax], 0	       835	nm.c	FUNCTION_16	IF_1
0x40005c4	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       836	nm.c	FUNCTION_16	IF_1
0x40005c8	    0x48c700000000	                      mov qword [rax], 0	       836	nm.c	FUNCTION_16	IF_1
0x40005cf	        0x4883c008	                              add rax, 8	       855	nm.c	FUNCTION_16
0x40005d3	        0x48830308	                      add qword [rbx], 8	       853	nm.c	FUNCTION_16
0x40005d7	      0x4883430808	                  add qword [rbx + 8], 8	       854	nm.c	FUNCTION_16
0x40005dc	        0x48894310	             mov qword [rbx + 0x10], rax	       855	nm.c	FUNCTION_16
0x40005e0	        0x4883c408	                              add rsp, 8	       856	nm.c	
0x40005e4	              0x5b	                                 pop rbx	       856	nm.c	
0x40005e5	              0x5d	                                 pop rbp	       856	nm.c	
0x40005e6	            0x415c	                                 pop r12	       856	nm.c	
0x40005e8	            0x415d	                                 pop r13	       856	nm.c	
0x40005ea	              0xc3	                                     ret	       856	nm.c	
0x40005eb	       0xf1f440000	                   nop dword [rax + rax]	       856	nm.c	
0x40005f0	          0x4989fc	                            mov r12, rdi	       856	nm.c	
0x40005f3	          0x4889f5	                            mov rbp, rsi	       856	nm.c	
0x40005f6	      0xe800000000	                          call 0x40005fb	       842	nm.c	FUNCTION_16	ELSE_1	IF_2
0x40005fb	          0x4885c0	                           test rax, rax	       843	nm.c	FUNCTION_16	ELSE_1	CALL_3
0x40005fe	            0x7838	                            js 0x4000638	       843	nm.c	FUNCTION_16	ELSE_1	CALL_3
0x4000600	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x4000604	          0x4889c7	                            mov rdi, rax	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x4000607	      0xe800000000	                          call 0x400060c	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x400060c	          0x4889ee	                            mov rsi, rbp	       847	nm.c	FUNCTION_16	ELSE_1
0x400060f	          0x4c89e7	                            mov rdi, r12	       847	nm.c	FUNCTION_16	ELSE_1
0x4000612	        0x49894500	                    mov qword [r13], rax	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x4000616	        0x488b4308	                mov rax, qword [rbx + 8]	       847	nm.c	FUNCTION_16	ELSE_1
0x400061a	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	       847	nm.c	FUNCTION_16	ELSE_1
0x400061e	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       847	nm.c	FUNCTION_16	ELSE_1
0x4000622	          0x488b10	                    mov rdx, qword [rax]	       847	nm.c	FUNCTION_16	ELSE_1
0x4000625	      0xe800000000	                          call 0x400062a	       847	nm.c	FUNCTION_16	ELSE_1
0x400062a	        0x49894500	                    mov qword [r13], rax	       847	nm.c	FUNCTION_16	ELSE_1
0x400062e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x4000632	        0x48833800	                      cmp qword [rax], 0	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x4000636	            0x7997	                           jns 0x40005cf	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x4000638	        0x498b3c24	                    mov rdi, qword [r12]	       850	nm.c	FUNCTION_16	ELSE_1
0x400063c	      0xe800000000	                          call 0x4000641	       850	nm.c	FUNCTION_16	ELSE_1
numeric_reverse	FOR,0:functions,0:SWITCH,0:IF,0:DO,0:WHILE,0:ELSE,0:CALL,1	62
0x4001d60	            0x4154	                                push r12	       615	nm.c	FUNCTION_12	CALL_1
0x4001d62	          0x4989fc	                            mov r12, rdi	       615	nm.c	FUNCTION_12	CALL_1
0x4001d65	    0x488b3d000000	            mov rdi, qword [0x04001d6c] 	       592	nm.c	FUNCTION_11	CALL_2
0x4001d6c	              0x55	                                push rbp	       615	nm.c	FUNCTION_12	CALL_1
0x4001d6d	              0x53	                                push rbx	       615	nm.c	FUNCTION_12	CALL_1
0x4001d6e	          0x4889f5	                            mov rbp, rsi	       615	nm.c	FUNCTION_12	CALL_1
0x4001d71	    0x488b0d000000	            mov rcx, qword [0x04001d78] 	       592	nm.c	FUNCTION_11	CALL_2
0x4001d78	          0x4c89e2	                            mov rdx, r12	       592	nm.c	FUNCTION_11	CALL_2
0x4001d7b	    0x8b3500000000	            mov esi, dword [0x04001d81] 	       592	nm.c	FUNCTION_11	CALL_2
0x4001d81	        0x488b4708	                mov rax, qword [rdi + 8]	       592	nm.c	FUNCTION_11	CALL_2
0x4001d85	    0xff9060020000	                call qword [rax + 0x260]	       592	nm.c	FUNCTION_11	CALL_2
0x4001d8b	    0x488b3d000000	            mov rdi, qword [0x04001d92] 	       593	nm.c	FUNCTION_11	IF_1
0x4001d92	          0x4889c3	                            mov rbx, rax	       592	nm.c	FUNCTION_11	CALL_2
0x4001d95	    0x488b0d000000	            mov rcx, qword [0x04001d9c] 	       593	nm.c	FUNCTION_11	IF_1
0x4001d9c	          0x4889ea	                            mov rdx, rbp	       593	nm.c	FUNCTION_11	IF_1
0x4001d9f	    0x8b3500000000	            mov esi, dword [0x04001da5] 	       593	nm.c	FUNCTION_11	IF_1
0x4001da5	        0x488b4708	                mov rax, qword [rdi + 8]	       593	nm.c	FUNCTION_11	IF_1
0x4001da9	    0xff9060020000	                call qword [rax + 0x260]	       593	nm.c	FUNCTION_11	IF_1
0x4001daf	          0x4885db	                           test rbx, rbx	       594	nm.c	FUNCTION_11	CALL_4
0x4001db2	            0x7473	                            je 0x4001e27	       594	nm.c	FUNCTION_11	CALL_4
0x4001db4	          0x4885c0	                           test rax, rax	       594	nm.c	FUNCTION_11	CALL_4
0x4001db7	            0x746e	                            je 0x4001e27	       594	nm.c	FUNCTION_11	CALL_4
0x4001db9	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       597	nm.c	FUNCTION_11	CALL_6
0x4001dbd	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       598	nm.c	FUNCTION_11
0x4001dc1	    0x4881f9000000	                              cmp rcx, 0	       600	nm.c	FUNCTION_11	IF_2
0x4001dc8	            0x7436	                            je 0x4001e00	       600	nm.c	FUNCTION_11	IF_2
0x4001dca	    0x4881fe000000	                              cmp rsi, 0	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4001dd1	      0xbaffffffff	                     mov edx, 0xffffffff	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4001dd6	            0x741d	                            je 0x4001df5	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4001dd8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4001ddc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4001de0	        0x48035128	             add rdx, qword [rcx + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4001de4	        0x48034628	             add rax, qword [rsi + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4001de8	          0x4839c2	                            cmp rdx, rax	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4001deb	            0x741c	                            je 0x4001e09	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4001ded	            0x19d2	                            sbb edx, edx	       608	nm.c	FUNCTION_11
0x4001def	          0x83e202	                              and edx, 2	       608	nm.c	FUNCTION_11
0x4001df2	          0x83ea01	                              sub edx, 1	       608	nm.c	FUNCTION_11
0x4001df5	              0x5b	                                 pop rbx	       617	nm.c	
0x4001df6	            0x89d0	                            mov eax, edx	       617	nm.c	
0x4001df8	              0x5d	                                 pop rbp	       617	nm.c	
0x4001df9	            0x415c	                                 pop r12	       617	nm.c	
0x4001dfb	              0xc3	                                     ret	       617	nm.c	
0x4001dfc	         0xf1f4000	                         nop dword [rax]	       617	nm.c	
0x4001e00	    0x4881fe000000	                              cmp rsi, 0	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4001e07	            0x7517	                           jne 0x4001e20	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4001e09	          0x4889ee	                            mov rsi, rbp	       610	nm.c	FUNCTION_11
0x4001e0c	          0x4c89e7	                            mov rdi, r12	       610	nm.c	FUNCTION_11
0x4001e0f	      0xe84ce3ffff	            call sym.non_numeric_forward	       610	nm.c	FUNCTION_11
0x4001e14	            0xf7d8	                                 neg eax	       610	nm.c	FUNCTION_11
0x4001e16	            0x89c2	                            mov edx, eax	       610	nm.c	FUNCTION_11
0x4001e18	              0x5b	                                 pop rbx	       617	nm.c	
0x4001e19	            0x89d0	                            mov eax, edx	       617	nm.c	
0x4001e1b	              0x5d	                                 pop rbp	       617	nm.c	
0x4001e1c	            0x415c	                                 pop r12	       617	nm.c	
0x4001e1e	              0xc3	                                     ret	       617	nm.c	
0x4001e1f	              0x90	                                     nop	       617	nm.c	
0x4001e20	      0xba01000000	                              mov edx, 1	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4001e25	            0xebce	                           jmp 0x4001df5	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4001e27	    0x488b05000000	            mov rax, qword [0x04001e2e] 	       595	nm.c	FUNCTION_11
0x4001e2e	          0x488b38	                    mov rdi, qword [rax]	       595	nm.c	FUNCTION_11
0x4001e31	      0xe800000000	                          call 0x4001e36	       595	nm.c	FUNCTION_11
non_numeric_reverse	FOR,0:functions,0:SWITCH,0:IF,0:DO,0:WHILE,0:ELSE,0:CALL,1	61
0x4002000	              0x55	                                push rbp	       582	nm.c	FUNCTION_10	CALL_1
0x4002001	              0x53	                                push rbx	       582	nm.c	FUNCTION_10	CALL_1
0x4002002	          0x4889fa	                            mov rdx, rdi	       582	nm.c	FUNCTION_10	CALL_1
0x4002005	          0x4889f5	                            mov rbp, rsi	       582	nm.c	FUNCTION_10	CALL_1
0x4002008	        0x4883ec08	                              sub rsp, 8	       582	nm.c	FUNCTION_10	CALL_1
0x400200c	    0x488b3d000000	            mov rdi, qword [0x04002013] 	       553	nm.c	FUNCTION_9	CALL_2
0x4002013	    0x488b0d000000	            mov rcx, qword [0x0400201a] 	       553	nm.c	FUNCTION_9	CALL_2
0x400201a	    0x8b3500000000	            mov esi, dword [0x04002020] 	       553	nm.c	FUNCTION_9	CALL_2
0x4002020	        0x488b4708	                mov rax, qword [rdi + 8]	       553	nm.c	FUNCTION_9	CALL_2
0x4002024	    0xff9060020000	                call qword [rax + 0x260]	       553	nm.c	FUNCTION_9	CALL_2
0x400202a	    0x488b3d000000	            mov rdi, qword [0x04002031] 	       554	nm.c	FUNCTION_9	IF_1
0x4002031	          0x4889c3	                            mov rbx, rax	       553	nm.c	FUNCTION_9	CALL_2
0x4002034	    0x488b0d000000	            mov rcx, qword [0x0400203b] 	       554	nm.c	FUNCTION_9	IF_1
0x400203b	          0x4889ea	                            mov rdx, rbp	       554	nm.c	FUNCTION_9	IF_1
0x400203e	    0x8b3500000000	            mov esi, dword [0x04002044] 	       554	nm.c	FUNCTION_9	IF_1
0x4002044	        0x488b4708	                mov rax, qword [rdi + 8]	       554	nm.c	FUNCTION_9	IF_1
0x4002048	    0xff9060020000	                call qword [rax + 0x260]	       554	nm.c	FUNCTION_9	IF_1
0x400204e	          0x4885db	                           test rbx, rbx	       555	nm.c	FUNCTION_9	CALL_4
0x4002051	            0x746c	                            je 0x40020bf	       555	nm.c	FUNCTION_9	CALL_4
0x4002053	          0x4885c0	                           test rax, rax	       555	nm.c	FUNCTION_9	CALL_4
0x4002056	            0x7467	                            je 0x40020bf	       555	nm.c	FUNCTION_9	CALL_4
0x4002058	        0x488b7008	                mov rsi, qword [rax + 8]	       559	nm.c	FUNCTION_9
0x400205c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       558	nm.c	FUNCTION_9	CALL_6
0x4002060	          0x4885f6	                           test rsi, rsi	       561	nm.c	FUNCTION_9	IF_2
0x4002063	            0x743b	                            je 0x40020a0	       561	nm.c	FUNCTION_9	IF_2
0x4002065	          0x4885ff	                           test rdi, rdi	       563	nm.c	FUNCTION_9	IF_3
0x4002068	            0x744e	                            je 0x40020b8	       563	nm.c	FUNCTION_9	IF_3
0x400206a	          0x803e00	                       cmp byte [rsi], 0	       569	nm.c	FUNCTION_9	IF_4
0x400206d	            0x7419	                            je 0x4002088	       569	nm.c	FUNCTION_9	IF_4
0x400206f	          0x803f00	                       cmp byte [rdi], 0	       571	nm.c	FUNCTION_9	IF_5
0x4002072	            0x7444	                            je 0x40020b8	       571	nm.c	FUNCTION_9	IF_5
0x4002074	      0xe800000000	                          call 0x4002079	       574	nm.c	FUNCTION_9
0x4002079	            0xf7d8	                                 neg eax	       574	nm.c	FUNCTION_9
0x400207b	        0x4883c408	                              add rsp, 8	       584	nm.c	
0x400207f	              0x5b	                                 pop rbx	       584	nm.c	
0x4002080	              0x5d	                                 pop rbp	       584	nm.c	
0x4002081	              0xc3	                                     ret	       584	nm.c	
0x4002082	    0x660f1f440000	                    nop word [rax + rax]	       584	nm.c	
0x4002088	            0x31c0	                            xor eax, eax	       584	nm.c	
0x400208a	          0x803f00	                       cmp byte [rdi], 0	       584	nm.c	
0x400208d	           0xf95c0	                                setne al	       584	nm.c	
0x4002090	        0x4883c408	                              add rsp, 8	       584	nm.c	
0x4002094	            0xf7d8	                                 neg eax	       584	nm.c	
0x4002096	              0x5b	                                 pop rbx	       584	nm.c	
0x4002097	              0x5d	                                 pop rbp	       584	nm.c	
0x4002098	              0xc3	                                     ret	       584	nm.c	
0x4002099	     0xf1f80000000	                         nop dword [rax]	       584	nm.c	
0x40020a0	            0x31c0	                            xor eax, eax	       584	nm.c	
0x40020a2	          0x4885ff	                           test rdi, rdi	       584	nm.c	
0x40020a5	           0xf95c0	                                setne al	       584	nm.c	
0x40020a8	        0x4883c408	                              add rsp, 8	       584	nm.c	
0x40020ac	            0xf7d8	                                 neg eax	       584	nm.c	
0x40020ae	              0x5b	                                 pop rbx	       584	nm.c	
0x40020af	              0x5d	                                 pop rbp	       584	nm.c	
0x40020b0	              0xc3	                                     ret	       584	nm.c	
0x40020b1	     0xf1f80000000	                         nop dword [rax]	       584	nm.c	
0x40020b8	      0xb801000000	                              mov eax, 1	       571	nm.c	FUNCTION_9	IF_5
0x40020bd	            0xebbc	                           jmp 0x400207b	       571	nm.c	FUNCTION_9	IF_5
0x40020bf	    0x488b05000000	            mov rax, qword [0x040020c6] 	       556	nm.c	FUNCTION_9
0x40020c6	          0x488b38	                    mov rdi, qword [rax]	       556	nm.c	FUNCTION_9
0x40020c9	      0xe800000000	                          call 0x40020ce	       556	nm.c	FUNCTION_9
