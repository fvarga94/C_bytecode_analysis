hash	SWITCH,0:ELSE,0:CALL,1:IF,0:FOR,0:functions,0:DO,0:WHILE,0	14
0x4000040	          0x4863f6	                         movsxd rsi, esi	       111	bcache.c	FUNCTION_2
0x4000043	            0x31c0	                            xor eax, eax	       112	bcache.c	FUNCTION_2	FOR_1
0x4000045	          0x4801fe	                            add rsi, rdi	       111	bcache.c	FUNCTION_2
0x4000048	          0x4839f7	                            cmp rdi, rsi	       112	bcache.c	FUNCTION_2	FOR_1
0x400004b	            0x731b	                           jae 0x4000068	       112	bcache.c	FUNCTION_2	FOR_1
0x400004d	           0xf1f00	                         nop dword [rax]	       112	bcache.c	FUNCTION_2	FOR_1
0x4000050	           0xfb617	                   movzx edx, byte [rdi]	       115	bcache.c	FUNCTION_2	FOR_1
0x4000053	        0x4883c701	                              add rdi, 1	       112	bcache.c	FUNCTION_2	FOR_1
0x4000057	    0x4869c0930100	                imul rax, rax, 0x1000193	       114	bcache.c	FUNCTION_2	FOR_1
0x400005e	          0x4831d0	                            xor rax, rdx	       115	bcache.c	FUNCTION_2	FOR_1
0x4000061	          0x4839fe	                            cmp rsi, rdi	       112	bcache.c	FUNCTION_2	FOR_1
0x4000064	            0x75ea	                           jne 0x4000050	       112	bcache.c	FUNCTION_2	FOR_1
0x4000066	            0xf3c3	                                     ret	       112	bcache.c	FUNCTION_2	FOR_1
0x4000068	            0xf3c3	                                     ret	       101	bcache.c	FUNCTION_1
print_bcache_statistics	SWITCH,0:ELSE,4:CALL,64:IF,5:FOR,1:functions,0:DO,0:WHILE,1	332
0x4000500	            0x4157	                                push r15	       360	bcache.c	FUNCTION_10
0x4000502	            0x4156	                                push r14	       360	bcache.c	FUNCTION_10
0x4000504	            0x4155	                                push r13	       360	bcache.c	FUNCTION_10
0x4000506	            0x4154	                                push r12	       360	bcache.c	FUNCTION_10
0x4000508	          0x4989fc	                            mov r12, rdi	       360	bcache.c	FUNCTION_10
0x400050b	              0x55	                                push rbp	       360	bcache.c	FUNCTION_10
0x400050c	              0x53	                                push rbx	       360	bcache.c	FUNCTION_10
0x400050d	        0x4883ec28	                           sub rsp, 0x28	       360	bcache.c	FUNCTION_10
0x4000511	          0x8b4758	            mov eax, dword [rdi + 0x58] 	       158	poison.h	
0x4000514	      0x4889742410	             mov qword [rsp + 0x10], rsi	       360	bcache.c	FUNCTION_10
0x4000519	      0xbe04000000	                              mov esi, 4	       158	poison.h	
0x400051e	          0x8d7801	                      lea edi, [rax + 1]	       158	poison.h	
0x4000521	      0xe800000000	                          call 0x4000526	       158	poison.h	
0x4000526	      0x4889442408	                mov qword [rsp + 8], rax	       158	poison.h	
0x400052b	          0x4989c7	                            mov r15, rax	       158	poison.h	
0x400052e	      0x498b442468	            mov rax, qword [r12 + 0x68] 	       158	poison.h	
0x4000533	      0xbe04000000	                              mov esi, 4	       158	poison.h	
0x4000538	        0x488d7801	                      lea rdi, [rax + 1]	       158	poison.h	
0x400053c	      0xe800000000	                          call 0x4000541	       158	poison.h	
0x4000541	      0x458b6c2458	           mov r13d, dword [r12 + 0x58] 	       377	bcache.c	FUNCTION_10	FOR_1
0x4000546	          0x4889c3	                            mov rbx, rax	       158	poison.h	
0x4000549	          0x4585ed	                         test r13d, r13d	       377	bcache.c	FUNCTION_10	FOR_1
0x400054c	     0xf84db040000	                            je 0x4000a2d	       377	bcache.c	FUNCTION_10	FOR_1
0x4000552	      0x4d8b742460	            mov r14, qword [r12 + 0x60] 	       377	bcache.c	FUNCTION_10	FOR_1
0x4000557	          0x4d89fb	                            mov r11, r15	       377	bcache.c	FUNCTION_10	FOR_1
0x400055a	          0x4531d2	                          xor r10d, r10d	       377	bcache.c	FUNCTION_10	FOR_1
0x400055d	            0x31ff	                            xor edi, edi	       377	bcache.c	FUNCTION_10	FOR_1
0x400055f	            0x31ed	                            xor ebp, ebp	       377	bcache.c	FUNCTION_10	FOR_1
0x4000561	    0x41bf01000000	                             mov r15d, 1	       377	bcache.c	FUNCTION_10	FOR_1
0x4000567	    0x660f1f840000	                    nop word [rax + rax]	       377	bcache.c	FUNCTION_10	FOR_1
0x4000570	        0x4b8b04d6	            mov rax, qword [r14 + r10*8]	       379	bcache.c	FUNCTION_10	FOR_1
0x4000574	    0x41c703000000	                      mov dword [r11], 0	       381	bcache.c	FUNCTION_10	FOR_1
0x400057b	          0x4885c0	                           test rax, rax	       383	bcache.c	FUNCTION_10	FOR_1	IF_1
0x400057e	            0x7470	                            je 0x40005f0	       383	bcache.c	FUNCTION_10	FOR_1	IF_1
0x4000580	          0x83c501	                              add ebp, 1	       385	bcache.c	FUNCTION_10	FOR_1	IF_1
0x4000583	          0x4539d5	                          cmp r13d, r10d	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000586	     0xf8678040000	                           jbe 0x4000a04	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x400058c	      0x4d8b442468	              mov r8, qword [r12 + 0x68]	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x4000591	          0x4863d7	                         movsxd rdx, edi	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x4000594	    0x41c703010000	                      mov dword [r11], 1	       390	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x400059b	          0x4c39c2	                             cmp rdx, r8	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x400059e	     0xf8337040000	                           jae 0x40009db	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40005a4	         0xfb74808	               movzx ecx, word [rax + 8]	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005a8	          0x8d7701	                      lea esi, [rdi + 1]	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005ab	          0x4589f9	                           mov r9d, r15d	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005ae	          0x4129f9	                            sub r9d, edi	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005b1	          0x890c93	            mov dword [rbx + rdx*4], ecx	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005b4	          0x488b10	                    mov rdx, qword [rax]	       393	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005b7	          0x4863ce	                         movsxd rcx, esi	       393	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005ba	          0x4885d2	                           test rdx, rdx	       387	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005bd	     0xf84b2030000	                            je 0x4000975	       387	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005c3	       0xf1f440000	                   nop dword [rax + rax]	       387	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005c8	          0x4939c8	                             cmp r8, rcx	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40005cb	        0x418d0431	                     lea eax, [r9 + rsi]	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40005cf	     0xf8603040000	                           jbe 0x40009d8	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40005d5	         0xfb77a08	               movzx edi, word [rdx + 8]	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005d9	          0x488b12	                    mov rdx, qword [rdx]	       393	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005dc	          0x83c601	                              add esi, 1	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005df	          0x893c8b	            mov dword [rbx + rcx*4], edi	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005e2	        0x4883c101	                              add rcx, 1	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005e6	          0x4885d2	                           test rdx, rdx	       387	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005e9	            0x75dd	                           jne 0x40005c8	       387	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005eb	          0x418903	                    mov dword [r11], eax	       387	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005ee	            0x89f7	                            mov edi, esi	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005f0	        0x4983c201	                              add r10, 1	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005f4	        0x4983c304	                              add r11, 4	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x40005f8	          0x4539d5	                          cmp r13d, r10d	       377	bcache.c	FUNCTION_10	FOR_1
0x40005fb	     0xf876fffffff	                            ja 0x4000570	       377	bcache.c	FUNCTION_10	FOR_1
0x4000601	          0x4489ee	                           mov esi, r13d	       377	bcache.c	FUNCTION_10	FOR_1
0x4000604	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       401	bcache.c	FUNCTION_10
0x4000609	      0xb900000000	                              mov ecx, 0	       401	bcache.c	FUNCTION_10
0x400060e	      0xba04000000	                              mov edx, 4	       401	bcache.c	FUNCTION_10
0x4000613	          0x4c89ff	                            mov rdi, r15	       401	bcache.c	FUNCTION_10
0x4000616	      0xe800000000	                          call 0x400061b	       401	bcache.c	FUNCTION_10
0x400061b	      0x498b742468	            mov rsi, qword [r12 + 0x68] 	       403	bcache.c	FUNCTION_10
0x4000620	      0xb900000000	                              mov ecx, 0	       403	bcache.c	FUNCTION_10
0x4000625	      0xba04000000	                              mov edx, 4	       403	bcache.c	FUNCTION_10
0x400062a	          0x4889df	                            mov rdi, rbx	       403	bcache.c	FUNCTION_10
0x400062d	      0xe800000000	                          call 0x4000632	       403	bcache.c	FUNCTION_10
0x4000632	      0x418b442458	            mov eax, dword [r12 + 0x58] 	       405	bcache.c	FUNCTION_10	IF_2
0x4000637	            0x85c0	                           test eax, eax	       405	bcache.c	FUNCTION_10	IF_2
0x4000639	     0xf853d030000	                           jne 0x400097c	       405	bcache.c	FUNCTION_10	IF_2
0x400063f	      0x498b442468	            mov rax, qword [r12 + 0x68] 	       415	bcache.c	FUNCTION_10	IF_3
0x4000644	          0x4531f6	                          xor r14d, r14d	       413	bcache.c	FUNCTION_10	ELSE_1
0x4000647	          0x4531ed	                          xor r13d, r13d	       412	bcache.c	FUNCTION_10	ELSE_1
0x400064a	          0x4885c0	                           test rax, rax	       415	bcache.c	FUNCTION_10	IF_3
0x400064d	     0xf8444030000	                            je 0x4000997	       415	bcache.c	FUNCTION_10	IF_3
0x4000653	        0x8b5483fc	        mov edx, dword [rbx + rax*4 - 4]	       417	bcache.c	FUNCTION_10	IF_3
0x4000657	          0x48d1e8	                              shr rax, 1	       418	bcache.c	FUNCTION_10	IF_3
0x400065a	        0x448b3c83	           mov r15d, dword [rbx + rax*4]	       418	bcache.c	FUNCTION_10	IF_3
0x400065e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        60	common-utils.h	FUNCTION_12
0x4000663	        0x8954241c	             mov dword [rsp + 0x1c], edx	        60	common-utils.h	FUNCTION_12
0x4000667	      0xe800000000	                          call 0x400066c	        60	common-utils.h	FUNCTION_12
0x400066c	          0x4889df	                            mov rdi, rbx	        60	common-utils.h	FUNCTION_12
0x400066f	      0xe800000000	                          call 0x4000674	        60	common-utils.h	FUNCTION_12
0x4000674	      0xbf00000000	                              mov edi, 0	       430	bcache.c	FUNCTION_10	CALL_8
0x4000679	      0xe800000000	                          call 0x400067e	       430	bcache.c	FUNCTION_10	CALL_8
0x400067e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       430	bcache.c	FUNCTION_10	CALL_8
0x4000683	          0x4889c7	                            mov rdi, rax	       430	bcache.c	FUNCTION_10	CALL_8
0x4000686	            0x31c0	                            xor eax, eax	       430	bcache.c	FUNCTION_10	CALL_8
0x4000688	      0xe800000000	                          call 0x400068d	       430	bcache.c	FUNCTION_10	CALL_8
0x400068d	      0x498b5c2470	            mov rbx, qword [r12 + 0x70] 	       431	bcache.c	FUNCTION_10	CALL_10
0x4000692	      0xbf00000000	                              mov edi, 0	       431	bcache.c	FUNCTION_10	CALL_10
0x4000697	      0xe800000000	                          call 0x400069c	       431	bcache.c	FUNCTION_10	CALL_10
0x400069c	          0x4889c7	                            mov rdi, rax	       431	bcache.c	FUNCTION_10	CALL_10
0x400069f	            0x31c0	                            xor eax, eax	       431	bcache.c	FUNCTION_10	CALL_10
0x40006a1	          0x4889de	                            mov rsi, rbx	       431	bcache.c	FUNCTION_10	CALL_10
0x40006a4	      0xe800000000	                          call 0x40006a9	       431	bcache.c	FUNCTION_10	CALL_10
0x40006a9	      0x498b5c2468	            mov rbx, qword [r12 + 0x68] 	       432	bcache.c	FUNCTION_10	CALL_12
0x40006ae	      0xbf00000000	                              mov edi, 0	       432	bcache.c	FUNCTION_10	CALL_12
0x40006b3	      0xe800000000	                          call 0x40006b8	       432	bcache.c	FUNCTION_10	CALL_12
0x40006b8	          0x4889c7	                            mov rdi, rax	       432	bcache.c	FUNCTION_10	CALL_12
0x40006bb	            0x31c0	                            xor eax, eax	       432	bcache.c	FUNCTION_10	CALL_12
0x40006bd	          0x4889de	                            mov rsi, rbx	       432	bcache.c	FUNCTION_10	CALL_12
0x40006c0	      0xe800000000	                          call 0x40006c5	       432	bcache.c	FUNCTION_10	CALL_12
0x40006c5	      0xbf00000000	                              mov edi, 0	       433	bcache.c	FUNCTION_10	CALL_14
0x40006ca	      0xe800000000	                          call 0x40006cf	       433	bcache.c	FUNCTION_10	CALL_14
0x40006cf	          0x4889c7	                            mov rdi, rax	       433	bcache.c	FUNCTION_10	CALL_14
0x40006d2	            0x31c0	                            xor eax, eax	       433	bcache.c	FUNCTION_10	CALL_14
0x40006d4	      0xe800000000	                          call 0x40006d9	       433	bcache.c	FUNCTION_10	CALL_14
0x40006d9	      0x498b742470	            mov rsi, qword [r12 + 0x70] 	       434	bcache.c	FUNCTION_10	CALL_15
0x40006de	            0x89f7	                            mov edi, esi	       434	bcache.c	FUNCTION_10	CALL_15
0x40006e0	      0x412b7c2468	             sub edi, dword [r12 + 0x68]	       434	bcache.c	FUNCTION_10	CALL_15
0x40006e5	      0xe8c6f9ffff	       call sym.print_percentage_int_int	       434	bcache.c	FUNCTION_10	CALL_15
0x40006ea	            0x31c0	                            xor eax, eax	       435	bcache.c	FUNCTION_10	CALL_16
0x40006ec	      0xbf00000000	                              mov edi, 0	       435	bcache.c	FUNCTION_10	CALL_16
0x40006f1	      0xe800000000	                          call 0x40006f6	       435	bcache.c	FUNCTION_10	CALL_16
0x40006f6	    0x498b9c248000	            mov rbx, qword [r12 + 0x80] 	       437	bcache.c	FUNCTION_10	CALL_18
0x40006fe	      0xbf00000000	                              mov edi, 0	       437	bcache.c	FUNCTION_10	CALL_18
0x4000703	      0xe800000000	                          call 0x4000708	       437	bcache.c	FUNCTION_10	CALL_18
0x4000708	          0x4889c7	                            mov rdi, rax	       437	bcache.c	FUNCTION_10	CALL_18
0x400070b	            0x31c0	                            xor eax, eax	       437	bcache.c	FUNCTION_10	CALL_18
0x400070d	          0x4889de	                            mov rsi, rbx	       437	bcache.c	FUNCTION_10	CALL_18
0x4000710	      0xe800000000	                          call 0x4000715	       437	bcache.c	FUNCTION_10	CALL_18
0x4000715	      0x498b5c2478	            mov rbx, qword [r12 + 0x78] 	       438	bcache.c	FUNCTION_10	CALL_20
0x400071a	      0xbf00000000	                              mov edi, 0	       438	bcache.c	FUNCTION_10	CALL_20
0x400071f	      0xe800000000	                          call 0x4000724	       438	bcache.c	FUNCTION_10	CALL_20
0x4000724	          0x4889c7	                            mov rdi, rax	       438	bcache.c	FUNCTION_10	CALL_20
0x4000727	            0x31c0	                            xor eax, eax	       438	bcache.c	FUNCTION_10	CALL_20
0x4000729	          0x4889de	                            mov rsi, rbx	       438	bcache.c	FUNCTION_10	CALL_20
0x400072c	      0xe800000000	                          call 0x4000731	       438	bcache.c	FUNCTION_10	CALL_20
0x4000731	      0xbf00000000	                              mov edi, 0	       439	bcache.c	FUNCTION_10	CALL_22
0x4000736	      0xe800000000	                          call 0x400073b	       439	bcache.c	FUNCTION_10	CALL_22
0x400073b	          0x4889c7	                            mov rdi, rax	       439	bcache.c	FUNCTION_10	CALL_22
0x400073e	            0x31c0	                            xor eax, eax	       439	bcache.c	FUNCTION_10	CALL_22
0x4000740	      0xe800000000	                          call 0x4000745	       439	bcache.c	FUNCTION_10	CALL_22
0x4000745	    0x498bb4248000	            mov rsi, qword [r12 + 0x80] 	       440	bcache.c	FUNCTION_10	CALL_23
0x400074d	            0x89f7	                            mov edi, esi	       440	bcache.c	FUNCTION_10	CALL_23
0x400074f	      0x412b7c2478	             sub edi, dword [r12 + 0x78]	       440	bcache.c	FUNCTION_10	CALL_23
0x4000754	      0xe857f9ffff	       call sym.print_percentage_int_int	       440	bcache.c	FUNCTION_10	CALL_23
0x4000759	            0x31c0	                            xor eax, eax	       441	bcache.c	FUNCTION_10	CALL_24
0x400075b	      0xbf00000000	                              mov edi, 0	       441	bcache.c	FUNCTION_10	CALL_24
0x4000760	      0xe800000000	                          call 0x4000765	       441	bcache.c	FUNCTION_10	CALL_24
0x4000765	      0xbf00000000	                              mov edi, 0	       443	bcache.c	FUNCTION_10	CALL_26
0x400076a	      0xe800000000	                          call 0x400076f	       443	bcache.c	FUNCTION_10	CALL_26
0x400076f	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       443	bcache.c	FUNCTION_10	CALL_26
0x4000773	          0x4889c7	                            mov rdi, rax	       443	bcache.c	FUNCTION_10	CALL_26
0x4000776	            0x31c0	                            xor eax, eax	       443	bcache.c	FUNCTION_10	CALL_26
0x4000778	            0x89d6	                            mov esi, edx	       443	bcache.c	FUNCTION_10	CALL_26
0x400077a	      0xe800000000	                          call 0x400077f	       443	bcache.c	FUNCTION_10	CALL_26
0x400077f	      0xbf00000000	                              mov edi, 0	       444	bcache.c	FUNCTION_10	CALL_28
0x4000784	      0xe800000000	                          call 0x4000789	       444	bcache.c	FUNCTION_10	CALL_28
0x4000789	          0x4889c7	                            mov rdi, rax	       444	bcache.c	FUNCTION_10	CALL_28
0x400078c	            0x31c0	                            xor eax, eax	       444	bcache.c	FUNCTION_10	CALL_28
0x400078e	      0xe800000000	                          call 0x4000793	       444	bcache.c	FUNCTION_10	CALL_28
0x4000793	      0x498b4c2468	            mov rcx, qword [r12 + 0x68] 	       445	bcache.c	FUNCTION_10	IF_4
0x4000798	          0x4885c9	                           test rcx, rcx	       445	bcache.c	FUNCTION_10	IF_4
0x400079b	     0xf8400020000	                            je 0x40009a1	       445	bcache.c	FUNCTION_10	IF_4
0x40007a1	      0x498b442478	            mov rax, qword [r12 + 0x78] 	       446	bcache.c	FUNCTION_10	CALL_29
0x40007a6	            0x31d2	                            xor edx, edx	       446	bcache.c	FUNCTION_10	CALL_29
0x40007a8	      0xbf00000000	                              mov edi, 0	       446	bcache.c	FUNCTION_10	CALL_29
0x40007ad	          0x48f7f1	                                 div rcx	       446	bcache.c	FUNCTION_10	CALL_29
0x40007b0	          0x4889c6	                            mov rsi, rax	       446	bcache.c	FUNCTION_10	CALL_29
0x40007b3	            0x31c0	                            xor eax, eax	       446	bcache.c	FUNCTION_10	CALL_29
0x40007b5	      0xe800000000	                          call 0x40007ba	       446	bcache.c	FUNCTION_10	CALL_29
0x40007ba	      0xbf00000000	                              mov edi, 0	       450	bcache.c	FUNCTION_10	CALL_33
0x40007bf	      0xe800000000	                          call 0x40007c4	       450	bcache.c	FUNCTION_10	CALL_33
0x40007c4	          0x4489fe	                           mov esi, r15d	       450	bcache.c	FUNCTION_10	CALL_33
0x40007c7	          0x4889c7	                            mov rdi, rax	       450	bcache.c	FUNCTION_10	CALL_33
0x40007ca	            0x31c0	                            xor eax, eax	       450	bcache.c	FUNCTION_10	CALL_33
0x40007cc	      0xe800000000	                          call 0x40007d1	       450	bcache.c	FUNCTION_10	CALL_33
0x40007d1	            0x31c0	                            xor eax, eax	       451	bcache.c	FUNCTION_10	CALL_34
0x40007d3	      0xbf00000000	                              mov edi, 0	       451	bcache.c	FUNCTION_10	CALL_34
0x40007d8	      0xe800000000	                          call 0x40007dd	       451	bcache.c	FUNCTION_10	CALL_34
0x40007dd	    0x498b9c248800	            mov rbx, qword [r12 + 0x88] 	       453	bcache.c	FUNCTION_10	CALL_36
0x40007e5	      0xbf00000000	                              mov edi, 0	       453	bcache.c	FUNCTION_10	CALL_36
0x40007ea	      0xe800000000	                          call 0x40007ef	       453	bcache.c	FUNCTION_10	CALL_36
0x40007ef	          0x4889c7	                            mov rdi, rax	       455	bcache.c	FUNCTION_10	CALL_38
0x40007f2	            0x31c0	                            xor eax, eax	       455	bcache.c	FUNCTION_10	CALL_38
0x40007f4	          0x4889de	                            mov rsi, rbx	       455	bcache.c	FUNCTION_10	CALL_38
0x40007f7	      0xe800000000	                          call 0x40007fc	       455	bcache.c	FUNCTION_10	CALL_38
0x40007fc	      0xbf00000000	                              mov edi, 0	       456	bcache.c	FUNCTION_10	CALL_39
0x4000801	      0xe800000000	                          call 0x4000806	       456	bcache.c	FUNCTION_10	CALL_39
0x4000806	          0x4889c7	                            mov rdi, rax	       456	bcache.c	FUNCTION_10	CALL_39
0x4000809	            0x31c0	                            xor eax, eax	       456	bcache.c	FUNCTION_10	CALL_39
0x400080b	      0xe800000000	                          call 0x4000810	       456	bcache.c	FUNCTION_10	CALL_39
0x4000810	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	       457	bcache.c	FUNCTION_10	CALL_41
0x4000815	    0x418bbc248800	            mov edi, dword [r12 + 0x88] 	       457	bcache.c	FUNCTION_10	CALL_41
0x400081d	            0x29f7	                            sub edi, esi	       457	bcache.c	FUNCTION_10	CALL_41
0x400081f	      0xe88cf8ffff	       call sym.print_percentage_int_int	       457	bcache.c	FUNCTION_10	CALL_41
0x4000824	      0xbf00000000	                              mov edi, 0	       458	bcache.c	FUNCTION_10	CALL_42
0x4000829	      0xe800000000	                          call 0x400082e	       458	bcache.c	FUNCTION_10	CALL_42
0x400082e	          0x4889c7	                            mov rdi, rax	       458	bcache.c	FUNCTION_10	CALL_42
0x4000831	            0x31c0	                            xor eax, eax	       458	bcache.c	FUNCTION_10	CALL_42
0x4000833	      0xe800000000	                          call 0x4000838	       458	bcache.c	FUNCTION_10	CALL_42
0x4000838	    0x498bb4248000	            mov rsi, qword [r12 + 0x80] 	       459	bcache.c	FUNCTION_10	CALL_43
0x4000840	            0x89f7	                            mov edi, esi	       459	bcache.c	FUNCTION_10	CALL_43
0x4000842	    0x412bbc248800	             sub edi, dword [r12 + 0x88]	       459	bcache.c	FUNCTION_10	CALL_43
0x400084a	      0xe861f8ffff	       call sym.print_percentage_int_int	       459	bcache.c	FUNCTION_10	CALL_43
0x400084f	            0x31c0	                            xor eax, eax	       460	bcache.c	FUNCTION_10
0x4000851	      0xbf00000000	                              mov edi, 0	       460	bcache.c	FUNCTION_10
0x4000856	      0xe800000000	                          call 0x400085b	       460	bcache.c	FUNCTION_10
0x400085b	      0x418b5c2458	            mov ebx, dword [r12 + 0x58] 	       462	bcache.c	FUNCTION_10
0x4000860	      0xbf00000000	                              mov edi, 0	       462	bcache.c	FUNCTION_10
0x4000865	      0xe800000000	                          call 0x400086a	       462	bcache.c	FUNCTION_10
0x400086a	          0x4889c7	                            mov rdi, rax	       463	bcache.c	FUNCTION_10	CALL_47
0x400086d	            0x31c0	                            xor eax, eax	       463	bcache.c	FUNCTION_10	CALL_47
0x400086f	            0x89de	                            mov esi, ebx	       463	bcache.c	FUNCTION_10	CALL_47
0x4000871	      0xe800000000	                          call 0x4000876	       463	bcache.c	FUNCTION_10	CALL_47
0x4000876	    0x498b9c249000	            mov rbx, qword [r12 + 0x90] 	       464	bcache.c	FUNCTION_10
0x400087e	      0xbf00000000	                              mov edi, 0	       464	bcache.c	FUNCTION_10
0x4000883	      0xe800000000	                          call 0x4000888	       464	bcache.c	FUNCTION_10
0x4000888	          0x4889c7	                            mov rdi, rax	       465	bcache.c	FUNCTION_10	CALL_49
0x400088b	            0x31c0	                            xor eax, eax	       465	bcache.c	FUNCTION_10	CALL_49
0x400088d	          0x4889de	                            mov rsi, rbx	       465	bcache.c	FUNCTION_10	CALL_49
0x4000890	      0xe800000000	                          call 0x4000895	       465	bcache.c	FUNCTION_10	CALL_49
0x4000895	    0x498b9c249800	            mov rbx, qword [r12 + 0x98] 	       466	bcache.c	FUNCTION_10
0x400089d	      0x49035c2470	             add rbx, qword [r12 + 0x70]	       466	bcache.c	FUNCTION_10
0x40008a2	      0xbf00000000	                              mov edi, 0	       466	bcache.c	FUNCTION_10
0x40008a7	      0xe800000000	                          call 0x40008ac	       466	bcache.c	FUNCTION_10
0x40008ac	          0x4889c7	                            mov rdi, rax	       467	bcache.c	FUNCTION_10	CALL_51
0x40008af	            0x31c0	                            xor eax, eax	       467	bcache.c	FUNCTION_10	CALL_51
0x40008b1	          0x4889de	                            mov rsi, rbx	       467	bcache.c	FUNCTION_10	CALL_51
0x40008b4	      0xe800000000	                          call 0x40008b9	       467	bcache.c	FUNCTION_10	CALL_51
0x40008b9	    0x498b9c24a000	            mov rbx, qword [r12 + 0xa0] 	       468	bcache.c	FUNCTION_10
0x40008c1	      0xbf00000000	                              mov edi, 0	       468	bcache.c	FUNCTION_10
0x40008c6	      0xe800000000	                          call 0x40008cb	       468	bcache.c	FUNCTION_10
0x40008cb	          0x4889c7	                            mov rdi, rax	       469	bcache.c	FUNCTION_10	CALL_53
0x40008ce	            0x31c0	                            xor eax, eax	       469	bcache.c	FUNCTION_10	CALL_53
0x40008d0	          0x4889de	                            mov rsi, rbx	       469	bcache.c	FUNCTION_10	CALL_53
0x40008d3	      0xe800000000	                          call 0x40008d8	       469	bcache.c	FUNCTION_10	CALL_53
0x40008d8	      0xbf00000000	                              mov edi, 0	       470	bcache.c	FUNCTION_10	CALL_54
0x40008dd	      0xe800000000	                          call 0x40008e2	       470	bcache.c	FUNCTION_10	CALL_54
0x40008e2	          0x4889c7	                            mov rdi, rax	       470	bcache.c	FUNCTION_10	CALL_54
0x40008e5	            0x31c0	                            xor eax, eax	       470	bcache.c	FUNCTION_10	CALL_54
0x40008e7	      0xe800000000	                          call 0x40008ec	       470	bcache.c	FUNCTION_10	CALL_54
0x40008ec	      0x418b742458	            mov esi, dword [r12 + 0x58] 	       471	bcache.c	FUNCTION_10	CALL_56
0x40008f1	            0x89ef	                            mov edi, ebp	       471	bcache.c	FUNCTION_10	CALL_56
0x40008f3	      0xe8b8f7ffff	       call sym.print_percentage_int_int	       471	bcache.c	FUNCTION_10	CALL_56
0x40008f8	      0xbf00000000	                              mov edi, 0	       472	bcache.c	FUNCTION_10
0x40008fd	      0xe800000000	                          call 0x4000902	       472	bcache.c	FUNCTION_10
0x4000902	          0x4489f6	                           mov esi, r14d	       473	bcache.c	FUNCTION_10	CALL_58
0x4000905	          0x4889c7	                            mov rdi, rax	       473	bcache.c	FUNCTION_10	CALL_58
0x4000908	            0x31c0	                            xor eax, eax	       473	bcache.c	FUNCTION_10	CALL_58
0x400090a	      0xe800000000	                          call 0x400090f	       473	bcache.c	FUNCTION_10	CALL_58
0x400090f	      0xbf00000000	                              mov edi, 0	       474	bcache.c	FUNCTION_10	IF_5
0x4000914	      0xe800000000	                          call 0x4000919	       474	bcache.c	FUNCTION_10	IF_5
0x4000919	          0x4889c7	                            mov rdi, rax	       474	bcache.c	FUNCTION_10	IF_5
0x400091c	            0x31c0	                            xor eax, eax	       474	bcache.c	FUNCTION_10	IF_5
0x400091e	      0xe800000000	                          call 0x4000923	       474	bcache.c	FUNCTION_10	IF_5
0x4000923	      0x418b4c2458	            mov ecx, dword [r12 + 0x58] 	       475	bcache.c	FUNCTION_10	CALL_59
0x4000928	            0x85c9	                           test ecx, ecx	       475	bcache.c	FUNCTION_10	CALL_59
0x400092a	     0xf858a000000	                           jne 0x40009ba	       475	bcache.c	FUNCTION_10	CALL_59
0x4000930	      0xbf00000000	                              mov edi, 0	       479	bcache.c	FUNCTION_10	CALL_63
0x4000935	      0xe800000000	                          call 0x400093a	       479	bcache.c	FUNCTION_10	CALL_63
0x400093a	          0x4889c7	                            mov rdi, rax	       479	bcache.c	FUNCTION_10	CALL_63
0x400093d	            0x31c0	                            xor eax, eax	       479	bcache.c	FUNCTION_10	CALL_63
0x400093f	      0xe800000000	                          call 0x4000944	       479	bcache.c	FUNCTION_10	CALL_63
0x4000944	      0xbf00000000	                              mov edi, 0	       480	bcache.c	FUNCTION_10
0x4000949	      0xe800000000	                          call 0x400094e	       480	bcache.c	FUNCTION_10
0x400094e	          0x4489ee	                           mov esi, r13d	       481	bcache.c	FUNCTION_10	CALL_64
0x4000951	          0x4889c7	                            mov rdi, rax	       481	bcache.c	FUNCTION_10	CALL_64
0x4000954	            0x31c0	                            xor eax, eax	       481	bcache.c	FUNCTION_10	CALL_64
0x4000956	      0xe800000000	                          call 0x400095b	       481	bcache.c	FUNCTION_10	CALL_64
0x400095b	        0x4883c428	                           add rsp, 0x28	       483	bcache.c	
0x400095f	      0xbf00000000	                              mov edi, 0	       482	bcache.c	FUNCTION_10
0x4000964	            0x31c0	                            xor eax, eax	       482	bcache.c	FUNCTION_10
0x4000966	              0x5b	                                 pop rbx	       483	bcache.c	
0x4000967	              0x5d	                                 pop rbp	       483	bcache.c	
0x4000968	            0x415c	                                 pop r12	       483	bcache.c	
0x400096a	            0x415d	                                 pop r13	       483	bcache.c	
0x400096c	            0x415e	                                 pop r14	       483	bcache.c	
0x400096e	            0x415f	                                 pop r15	       483	bcache.c	
0x4000970	      0xe900000000	                           jmp 0x4000975	       482	bcache.c	FUNCTION_10
0x4000975	            0x89f7	                            mov edi, esi	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x4000977	      0xe974fcffff	                           jmp 0x40005f0	       392	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1
0x400097c	          0x8d50ff	                      lea edx, [rax - 1]	       407	bcache.c	FUNCTION_10	IF_2
0x400097f	            0xd1e8	                              shr eax, 1	       408	bcache.c	FUNCTION_10	IF_2
0x4000981	        0x458b3487	           mov r14d, dword [r15 + rax*4]	       408	bcache.c	FUNCTION_10	IF_2
0x4000985	      0x498b442468	            mov rax, qword [r12 + 0x68] 	       415	bcache.c	FUNCTION_10	IF_3
0x400098a	        0x458b2c97	           mov r13d, dword [r15 + rdx*4]	       407	bcache.c	FUNCTION_10	IF_2
0x400098e	          0x4885c0	                           test rax, rax	       415	bcache.c	FUNCTION_10	IF_3
0x4000991	     0xf85bcfcffff	                           jne 0x4000653	       415	bcache.c	FUNCTION_10	IF_3
0x4000997	          0x4531ff	                          xor r15d, r15d	       423	bcache.c	FUNCTION_10	ELSE_2
0x400099a	            0x31d2	                            xor edx, edx	       422	bcache.c	FUNCTION_10	ELSE_2
0x400099c	      0xe9bdfcffff	                           jmp 0x400065e	       422	bcache.c	FUNCTION_10	ELSE_2
0x40009a1	      0xbf00000000	                              mov edi, 0	       449	bcache.c	FUNCTION_10	CALL_31
0x40009a6	      0xe800000000	                          call 0x40009ab	       449	bcache.c	FUNCTION_10	CALL_31
0x40009ab	          0x4889c7	                            mov rdi, rax	       449	bcache.c	FUNCTION_10	CALL_31
0x40009ae	            0x31c0	                            xor eax, eax	       449	bcache.c	FUNCTION_10	CALL_31
0x40009b0	      0xe800000000	                          call 0x40009b5	       449	bcache.c	FUNCTION_10	CALL_31
0x40009b5	      0xe900feffff	                           jmp 0x40007ba	       449	bcache.c	FUNCTION_10	CALL_31
0x40009ba	      0x498b442468	            mov rax, qword [r12 + 0x68] 	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009bf	            0x31d2	                            xor edx, edx	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009c1	      0xbf00000000	                              mov edi, 0	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009c6	          0x48f7f1	                                 div rcx	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009c9	          0x4889c6	                            mov rsi, rax	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009cc	            0x31c0	                            xor eax, eax	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009ce	      0xe800000000	                          call 0x40009d3	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009d3	      0xe96cffffff	                           jmp 0x4000944	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009d8	          0x418903	                    mov dword [r11], eax	       476	bcache.c	FUNCTION_10	ELSE_4
0x40009db	      0xbf00000000	                              mov edi, 0	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40009e0	      0xe800000000	                          call 0x40009e5	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40009e5	    0x41b800000000	                              mov r8d, 0	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40009eb	          0x4889c2	                            mov rdx, rax	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40009ee	      0xb900000000	                              mov ecx, 0	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40009f3	      0xbe87010000	                          mov esi, 0x187	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40009f8	      0xbf00000000	                              mov edi, 0	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40009fd	            0x31c0	                            xor eax, eax	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x40009ff	      0xe800000000	                          call 0x4000a04	       391	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_2
0x4000a04	      0xbf00000000	                              mov edi, 0	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a09	      0xe800000000	                          call 0x4000a0e	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a0e	    0x41b800000000	                              mov r8d, 0	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a14	          0x4889c2	                            mov rdx, rax	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a17	      0xb900000000	                              mov ecx, 0	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a1c	      0xbe85010000	                          mov esi, 0x185	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a21	      0xbf00000000	                              mov edi, 0	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a26	            0x31c0	                            xor eax, eax	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a28	      0xe800000000	                          call 0x4000a2d	       389	bcache.c	FUNCTION_10	FOR_1	IF_1	WHILE_1	CALL_1
0x4000a2d	            0x31f6	                            xor esi, esi	       377	bcache.c	FUNCTION_10	FOR_1
0x4000a2f	            0x31ed	                            xor ebp, ebp	       375	bcache.c	FUNCTION_10
0x4000a31	      0xe9cefbffff	                           jmp 0x4000604	       375	bcache.c	FUNCTION_10
bcache_xfree	SWITCH,0:ELSE,0:CALL,3:IF,2:FOR,0:functions,0:DO,0:WHILE,0	17
0x40004c0	          0x4885ff	                           test rdi, rdi	       330	bcache.c	ELSE_2	FUNCTION_8	IF_1
0x40004c3	            0x742b	                            je 0x40004f0	       330	bcache.c	ELSE_2	FUNCTION_8	IF_1
0x40004c5	              0x53	                                push rbx	       329	bcache.c	ELSE_2	FUNCTION_8
0x40004c6	      0x48837f7000	               cmp qword [rdi + 0x70], 0	       333	bcache.c	ELSE_2	FUNCTION_8	IF_2
0x40004cb	          0x4889fb	                            mov rbx, rdi	       333	bcache.c	ELSE_2	FUNCTION_8	IF_2
0x40004ce	            0x7e07	                           jle 0x40004d7	       333	bcache.c	ELSE_2	FUNCTION_8	IF_2
0x40004d0	            0x31f6	                            xor esi, esi	       334	bcache.c	ELSE_2	FUNCTION_8	CALL_1
0x40004d2	      0xe800000000	                          call 0x40004d7	       334	bcache.c	ELSE_2	FUNCTION_8	CALL_1
0x40004d7	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       335	bcache.c	ELSE_2	FUNCTION_8	CALL_2
0x40004db	          0x4885ff	                           test rdi, rdi	        59	common-utils.h	FUNCTION_12	CALL_2
0x40004de	            0x7405	                            je 0x40004e5	        59	common-utils.h	FUNCTION_12	CALL_2
0x40004e0	      0xe800000000	                          call 0x40004e5	        60	common-utils.h	FUNCTION_12
0x40004e5	          0x4889df	                            mov rdi, rbx	        60	common-utils.h	FUNCTION_12
0x40004e8	              0x5b	                                 pop rbx	       337	bcache.c	ELSE_2	FUNCTION_8
0x40004e9	      0xe900000000	                           jmp 0x40004ee	        60	common-utils.h	FUNCTION_12
0x40004ee	            0x6690	                                     nop	        60	common-utils.h	FUNCTION_12
0x40004f0	            0xf3c3	                                     ret	        60	common-utils.h	FUNCTION_12
bcache_compare	SWITCH,0:ELSE,0:CALL,1:IF,0:FOR,0:functions,0:DO,0:WHILE,0	8
0x4000090	        0x4883ec08	                              sub rsp, 8	       294	bcache.c	FUNCTION_6
0x4000094	          0x4863d2	                         movsxd rdx, edx	       295	bcache.c	FUNCTION_6	CALL_1
0x4000097	      0xe800000000	                          call 0x400009c	       295	bcache.c	FUNCTION_6	CALL_1
0x400009c	            0x85c0	                           test eax, eax	       295	bcache.c	FUNCTION_6	CALL_1
0x400009e	           0xf94c0	                                 sete al	       295	bcache.c	FUNCTION_6	CALL_1
0x40000a1	        0x4883c408	                              add rsp, 8	       296	bcache.c	FUNCTION_6
0x40000a5	           0xfb6c0	                           movzx eax, al	       295	bcache.c	FUNCTION_6	CALL_1
0x40000a8	              0xc3	                                     ret	       296	bcache.c	FUNCTION_6
bcache_full	SWITCH,0:ELSE,1:CALL,6:IF,6:FOR,1:functions,0:DO,0:WHILE,0	211
0x4000130	            0x4157	                                push r15	       219	bcache.c	FUNCTION_5
0x4000132	            0x4156	                                push r14	       219	bcache.c	FUNCTION_5
0x4000134	          0x4989d7	                            mov r15, rdx	       219	bcache.c	FUNCTION_5
0x4000137	            0x4155	                                push r13	       219	bcache.c	FUNCTION_5
0x4000139	            0x4154	                                push r12	       219	bcache.c	FUNCTION_5
0x400013b	              0x55	                                push rbp	       219	bcache.c	FUNCTION_5
0x400013c	              0x53	                                push rbx	       219	bcache.c	FUNCTION_5
0x400013d	        0x4883ec28	                           sub rsp, 0x28	       219	bcache.c	FUNCTION_5
0x4000141	          0x4885c9	                           test rcx, rcx	       225	bcache.c	FUNCTION_5	IF_1
0x4000144	      0x48897c2408	                mov qword [rsp + 8], rdi	       219	bcache.c	FUNCTION_5
0x4000149	        0x89742418	             mov dword [rsp + 0x18], esi	       219	bcache.c	FUNCTION_5
0x400014d	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       219	bcache.c	FUNCTION_5
0x4000152	            0x7406	                            je 0x400015a	       225	bcache.c	FUNCTION_5	IF_1
0x4000154	    0xc70100000000	                      mov dword [rcx], 0	       226	bcache.c	FUNCTION_5	IF_1
0x400015a	      0x49837f7000	               cmp qword [r15 + 0x70], 0	       230	bcache.c	FUNCTION_5	IF_2
0x400015f	     0xf8491020000	                            je 0x40003f6	       230	bcache.c	FUNCTION_5	IF_2
0x4000165	        0x418b7758	            mov esi, dword [r15 + 0x58] 	       239	bcache.c	FUNCTION_5	IF_3
0x4000169	        0x498b4768	            mov rax, qword [r15 + 0x68] 	       239	bcache.c	FUNCTION_5	IF_3
0x400016d	          0x8d14b6	                  lea edx, [rsi + rsi*4]	       239	bcache.c	FUNCTION_5	IF_3
0x4000170	          0x4839d0	                            cmp rax, rdx	       239	bcache.c	FUNCTION_5	IF_3
0x4000173	     0xf8393010000	                           jae 0x400030c	       239	bcache.c	FUNCTION_5	IF_3
0x4000179	      0x48635c2418	         movsxd rbx, dword [rsp + 0x18] 	       243	bcache.c	FUNCTION_5
0x400017e	      0x4983477001	               add qword [r15 + 0x70], 1	       242	bcache.c	FUNCTION_5
0x4000183	    0x49019f800000	            add qword [r15 + 0x80], rbx 	       243	bcache.c	FUNCTION_5
0x400018a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       245	bcache.c	FUNCTION_5	CALL_3
0x400018f	            0x89de	                            mov esi, ebx	       245	bcache.c	FUNCTION_5	CALL_3
0x4000191	    0x41ff97a80000	                 call qword [r15 + 0xa8]	       245	bcache.c	FUNCTION_5	CALL_3
0x4000198	        0x418b4f58	            mov ecx, dword [r15 + 0x58] 	       253	bcache.c	FUNCTION_5	FOR_1
0x400019c	            0x31d2	                            xor edx, edx	       253	bcache.c	FUNCTION_5	FOR_1
0x400019e	          0x4989c4	                            mov r12, rax	       247	bcache.c	FUNCTION_5
0x40001a1	        0x49c1ec10	                           shr r12, 0x10	       247	bcache.c	FUNCTION_5
0x40001a5	          0x4589e0	                           mov r8d, r12d	       247	bcache.c	FUNCTION_5
0x40001a8	          0x48f7f1	                                 div rcx	       253	bcache.c	FUNCTION_5	FOR_1
0x40001ab	        0x498b4760	            mov rax, qword [r15 + 0x60] 	       253	bcache.c	FUNCTION_5	FOR_1
0x40001af	          0x4863d2	                         movsxd rdx, edx	       253	bcache.c	FUNCTION_5	FOR_1
0x40001b2	        0x4c8b2cd0	            mov r13, qword [rax + rdx*8]	       253	bcache.c	FUNCTION_5	FOR_1
0x40001b6	    0x488d2cd50000	                        lea rbp, [rdx*8]	       253	bcache.c	FUNCTION_5	FOR_1
0x40001be	          0x4d85ed	                           test r13, r13	       253	bcache.c	FUNCTION_5	FOR_1
0x40001c1	            0x750e	                           jne 0x40001d1	       253	bcache.c	FUNCTION_5	FOR_1
0x40001c3	            0xeb33	                           jmp 0x40001f8	       253	bcache.c	FUNCTION_5	FOR_1
0x40001c5	           0xf1f00	                         nop dword [rax]	       253	bcache.c	FUNCTION_5	FOR_1
0x40001c8	        0x4d8b6d00	                    mov r13, qword [r13]	       253	bcache.c	FUNCTION_5	FOR_1
0x40001cc	          0x4d85ed	                           test r13, r13	       253	bcache.c	FUNCTION_5	FOR_1
0x40001cf	            0x7427	                            je 0x40001f8	       253	bcache.c	FUNCTION_5	FOR_1
0x40001d1	      0x66453b450a	               cmp r8w, word [r13 + 0xa]	       255	bcache.c	FUNCTION_5	FOR_1	IF_4
0x40001d6	            0x75f0	                           jne 0x40001c8	       255	bcache.c	FUNCTION_5	FOR_1	IF_4
0x40001d8	      0x410fb74508	               movzx eax, word [r13 + 8]	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40001dd	        0x39442418	            cmp dword [rsp + 0x18], eax 	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40001e1	     0xf84e9000000	                            je 0x40002d0	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40001e7	        0x4d8b6d00	                    mov r13, qword [r13]	       253	bcache.c	FUNCTION_5	FOR_1
0x40001eb	    0x498387a00000	               add qword [r15 + 0xa0], 1	       261	bcache.c	FUNCTION_5	FOR_1	IF_4	ELSE_1
0x40001f3	          0x4d85ed	                           test r13, r13	       253	bcache.c	FUNCTION_5	FOR_1
0x40001f6	            0x75d9	                           jne 0x40001d1	       253	bcache.c	FUNCTION_5	FOR_1
0x40001f8	        0x498b4f20	            mov rcx, qword [r15 + 0x20] 	       268	bcache.c	FUNCTION_5	CALL_5
0x40001fc	        0x498b4718	            mov rax, qword [r15 + 0x18] 	       268	bcache.c	FUNCTION_5	CALL_5
0x4000200	        0x4c8d6b10	                   lea r13, [rbx + 0x10]	       268	bcache.c	FUNCTION_5	CALL_5
0x4000204	          0x4889ca	                            mov rdx, rcx	       268	bcache.c	FUNCTION_5	CALL_5
0x4000207	          0x4829c2	                            sub rdx, rax	       268	bcache.c	FUNCTION_5	CALL_5
0x400020a	          0x4939d5	                            cmp r13, rdx	       268	bcache.c	FUNCTION_5	CALL_5
0x400020d	     0xf87ff010000	                            ja 0x4000412	       268	bcache.c	FUNCTION_5	CALL_5
0x4000213	          0x4c01e8	                            add rax, r13	       268	bcache.c	FUNCTION_5	CALL_5
0x4000216	        0x4d8b6f10	            mov r13, qword [r15 + 0x10] 	       268	bcache.c	FUNCTION_5	CALL_5
0x400021a	        0x49894718	             mov qword [r15 + 0x18], rax	       268	bcache.c	FUNCTION_5	CALL_5
0x400021e	          0x4c39e8	                            cmp rax, r13	       268	bcache.c	FUNCTION_5	CALL_5
0x4000221	     0xf8412020000	                            je 0x4000439	       268	bcache.c	FUNCTION_5	CALL_5
0x4000227	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	       268	bcache.c	FUNCTION_5	CALL_5
0x400022b	          0x4889cf	                            mov rdi, rcx	       268	bcache.c	FUNCTION_5	CALL_5
0x400022e	          0x4801d0	                            add rax, rdx	       268	bcache.c	FUNCTION_5	CALL_5
0x4000231	          0x48f7d2	                                 not rdx	       268	bcache.c	FUNCTION_5	CALL_5
0x4000234	          0x4821d0	                            and rax, rdx	       268	bcache.c	FUNCTION_5	CALL_5
0x4000237	        0x498b5708	                mov rdx, qword [r15 + 8]	       268	bcache.c	FUNCTION_5	CALL_5
0x400023b	          0x4889c6	                            mov rsi, rax	       268	bcache.c	FUNCTION_5	CALL_5
0x400023e	        0x49894718	             mov qword [r15 + 0x18], rax	       268	bcache.c	FUNCTION_5	CALL_5
0x4000242	          0x4829d6	                            sub rsi, rdx	       268	bcache.c	FUNCTION_5	CALL_5
0x4000245	          0x4829d7	                            sub rdi, rdx	       268	bcache.c	FUNCTION_5	CALL_5
0x4000248	          0x4839fe	                            cmp rsi, rdi	       268	bcache.c	FUNCTION_5	CALL_5
0x400024b	     0xf87af000000	                            ja 0x4000300	       268	bcache.c	FUNCTION_5	CALL_5
0x4000251	        0x498d4d10	                   lea rcx, [r13 + 0x10]	       271	bcache.c	FUNCTION_5	CALL_6
0x4000255	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_27	CALL_3
0x400025a	        0x49894710	             mov qword [r15 + 0x10], rax	       268	bcache.c	FUNCTION_5	CALL_5
0x400025e	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_27	CALL_3
0x4000261	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_27	CALL_3
0x4000264	      0xe800000000	                          call 0x4000269	        53	string3.h	FUNCTION_27	CALL_3
0x4000269	        0x49036f60	             add rbp, qword [r15 + 0x60]	       273	bcache.c	FUNCTION_5
0x400026d	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_27	CALL_3
0x4000270	       0xfb7442418	           movzx eax, word [rsp + 0x18] 	       272	bcache.c	FUNCTION_5
0x4000275	      0x6641894508	                  mov word [r13 + 8], ax	       272	bcache.c	FUNCTION_5
0x400027a	        0x488b4500	                    mov rax, qword [rbp]	       273	bcache.c	FUNCTION_5
0x400027e	      0x664589650a	              mov word [r13 + 0xa], r12w	       274	bcache.c	FUNCTION_5
0x4000283	        0x49894500	                    mov qword [r13], rax	       273	bcache.c	FUNCTION_5
0x4000287	    0x498b87880000	            mov rax, qword [r15 + 0x88] 	       279	bcache.c	FUNCTION_5
0x400028e	        0x4c896d00	                    mov qword [rbp], r13	       275	bcache.c	FUNCTION_5
0x4000292	      0x4983476801	               add qword [r15 + 0x68], 1	       277	bcache.c	FUNCTION_5
0x4000297	        0x49015f78	            add qword [r15 + 0x78], rbx 	       278	bcache.c	FUNCTION_5
0x400029b	      0x488d441810	            lea rax, [rax + rbx + 0x10] 	       279	bcache.c	FUNCTION_5
0x40002a0	    0x498987880000	             mov qword [r15 + 0x88], rax	       279	bcache.c	FUNCTION_5
0x40002a7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       281	bcache.c	FUNCTION_5	IF_6
0x40002ac	          0x4885c0	                           test rax, rax	       281	bcache.c	FUNCTION_5	IF_6
0x40002af	     0xf8497010000	                            je 0x400044c	       281	bcache.c	FUNCTION_5	IF_6
0x40002b5	    0xc70001000000	                      mov dword [rax], 1	       282	bcache.c	FUNCTION_5	IF_6
0x40002bb	          0x4889c8	                            mov rax, rcx	       282	bcache.c	FUNCTION_5	IF_6
0x40002be	        0x4883c428	                           add rsp, 0x28	       286	bcache.c	FUNCTION_5
0x40002c2	              0x5b	                                 pop rbx	       286	bcache.c	FUNCTION_5
0x40002c3	              0x5d	                                 pop rbp	       286	bcache.c	FUNCTION_5
0x40002c4	            0x415c	                                 pop r12	       286	bcache.c	FUNCTION_5
0x40002c6	            0x415d	                                 pop r13	       286	bcache.c	FUNCTION_5
0x40002c8	            0x415e	                                 pop r14	       286	bcache.c	FUNCTION_5
0x40002ca	            0x415f	                                 pop r15	       286	bcache.c	FUNCTION_5
0x40002cc	              0xc3	                                     ret	       286	bcache.c	FUNCTION_5
0x40002cd	           0xf1f00	                         nop dword [rax]	       286	bcache.c	FUNCTION_5
0x40002d0	        0x4d8d7510	                   lea r14, [r13 + 0x10]	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002d4	      0x448944241c	             mov dword [rsp + 0x1c], r8d	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002d9	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002dd	      0x488b742408	                mov rsi, qword [rsp + 8]	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002e2	          0x4c89f7	                            mov rdi, r14	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002e5	    0x41ff97b00000	                 call qword [r15 + 0xb0]	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002ec	            0x85c0	                           test eax, eax	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002ee	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002f3	     0xf84eefeffff	                            je 0x40001e7	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002f9	          0x4c89f0	                            mov rax, r14	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002fc	            0xebc0	                           jmp 0x40002be	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x40002fe	            0x6690	                                     nop	       258	bcache.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_4
0x4000300	        0x49894f18	             mov qword [r15 + 0x18], rcx	       268	bcache.c	FUNCTION_5	CALL_5
0x4000304	          0x4889c8	                            mov rax, rcx	       268	bcache.c	FUNCTION_5	CALL_5
0x4000307	      0xe945ffffff	                           jmp 0x4000251	       268	bcache.c	FUNCTION_5	CALL_5
0x400030c	    0x490187980000	            add qword [r15 + 0x98], rax 	       147	bcache.c	FUNCTION_3
0x4000313	    0x498387900000	               add qword [r15 + 0x90], 1	       146	bcache.c	FUNCTION_3
0x400031b	            0x89f1	                            mov ecx, esi	       146	bcache.c	FUNCTION_3
0x400031d	      0xb800000000	                              mov eax, 0	       146	bcache.c	FUNCTION_3
0x4000322	      0xbf00000000	                              mov edi, 0	       146	bcache.c	FUNCTION_3
0x4000327	      0xbafd030000	                          mov edx, 0x3fd	       147	bcache.c	FUNCTION_3
0x400032c	            0xeb09	                           jmp 0x4000337	       147	bcache.c	FUNCTION_3
0x400032e	            0x6690	                                     nop	       147	bcache.c	FUNCTION_3
0x4000330	          0x488b10	                    mov rdx, qword [rax]	       147	bcache.c	FUNCTION_3
0x4000333	        0x4883c008	                              add rax, 8	       147	bcache.c	FUNCTION_3
0x4000337	          0x4839ca	                            cmp rdx, rcx	       152	bcache.c	FUNCTION_3	FOR_1	IF_1
0x400033a	     0xf8703010000	                            ja 0x4000443	       152	bcache.c	FUNCTION_3	FOR_1	IF_1
0x4000340	          0x4839c7	                            cmp rdi, rax	       151	bcache.c	FUNCTION_3	FOR_1
0x4000343	            0x75eb	                           jne 0x4000330	       151	bcache.c	FUNCTION_3	FOR_1
0x4000345	          0x8d0436	                    lea eax, [rsi + rsi]	       150	bcache.c	FUNCTION_3
0x4000348	        0x8944241c	             mov dword [rsp + 0x1c], eax	       150	bcache.c	FUNCTION_3
0x400034c	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	       160	bcache.c	FUNCTION_3
0x4000350	    0x488d2cdd0000	                        lea rbp, [rbx*8]	       160	bcache.c	FUNCTION_3
0x4000358	          0x4889ef	                            mov rdi, rbp	       162	bcache.c	FUNCTION_3	CALL_1
0x400035b	      0xe800000000	                          call 0x4000360	       162	bcache.c	FUNCTION_3	CALL_1
0x4000360	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_30	CALL_6
0x4000363	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_30	CALL_6
0x4000365	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_30	CALL_6
0x4000368	          0x4989c4	                            mov r12, rax	       162	bcache.c	FUNCTION_3	CALL_1
0x400036b	      0xe800000000	                          call 0x4000370	        90	string3.h	FUNCTION_30	CALL_6
0x4000370	        0x418b4758	            mov eax, dword [r15 + 0x58] 	       165	bcache.c	FUNCTION_3
0x4000374	        0x498b7f60	            mov rdi, qword [r15 + 0x60] 	       165	bcache.c	FUNCTION_3
0x4000378	          0x4889c2	                            mov rdx, rax	       165	bcache.c	FUNCTION_3
0x400037b	        0x48c1e003	                              shl rax, 3	       167	bcache.c	FUNCTION_3
0x400037f	          0x4829c5	                            sub rbp, rax	       167	bcache.c	FUNCTION_3
0x4000382	    0x4901af880000	            add qword [r15 + 0x88], rbp 	       167	bcache.c	FUNCTION_3
0x4000389	            0x85d2	                           test edx, edx	       171	bcache.c	FUNCTION_3	FOR_2
0x400038b	            0x744e	                            je 0x40003db	       171	bcache.c	FUNCTION_3	FOR_2
0x400038d	          0x4531ed	                          xor r13d, r13d	       171	bcache.c	FUNCTION_3	FOR_2
0x4000390	          0x4489e8	                           mov eax, r13d	       175	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x4000393	        0x4c8b34c7	            mov r14, qword [rdi + rax*8]	       175	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x4000397	          0x4d85f6	                           test r14, r14	       175	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x400039a	            0x7435	                            je 0x40003d1	       175	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x400039c	         0xf1f4000	                         nop dword [rax]	       175	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003a0	      0x410fb77608	               movzx esi, word [r14 + 8]	       180	bcache.c	FUNCTION_3	FOR_2	FOR_3	CALL_3
0x40003a5	          0x498b2e	                    mov rbp, qword [r14]	       178	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003a8	        0x498d7e10	                   lea rdi, [r14 + 0x10]	       180	bcache.c	FUNCTION_3	FOR_2	FOR_3	CALL_3
0x40003ac	    0x41ff97a80000	                 call qword [r15 + 0xa8]	       180	bcache.c	FUNCTION_3	FOR_2	FOR_3	CALL_3
0x40003b3	            0x31d2	                            xor edx, edx	       182	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003b5	          0x48f7f3	                                 div rbx	       182	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003b8	          0x4885ed	                           test rbp, rbp	       175	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003bb	        0x498d04d4	                  lea rax, [r12 + rdx*8]	       182	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003bf	          0x488b10	                    mov rdx, qword [rax]	       183	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003c2	          0x498916	                    mov qword [r14], rdx	       183	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003c5	          0x4c8930	                    mov qword [rax], r14	       184	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003c8	          0x4989ee	                            mov r14, rbp	       184	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003cb	            0x75d3	                           jne 0x40003a0	       175	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003cd	        0x498b7f60	            mov rdi, qword [r15 + 0x60] 	       175	bcache.c	FUNCTION_3	FOR_2	FOR_3
0x40003d1	        0x4183c501	                             add r13d, 1	       171	bcache.c	FUNCTION_3	FOR_2
0x40003d5	        0x45396f58	           cmp dword [r15 + 0x58], r13d 	       171	bcache.c	FUNCTION_3	FOR_2
0x40003d9	            0x77b5	                            ja 0x4000390	       171	bcache.c	FUNCTION_3	FOR_2
0x40003db	          0x4885ff	                           test rdi, rdi	       189	bcache.c	FUNCTION_3	IF_2
0x40003de	            0x7405	                            je 0x40003e5	       189	bcache.c	FUNCTION_3	IF_2
0x40003e0	      0xe800000000	                          call 0x40003e5	        60	common-utils.h	FUNCTION_12
0x40003e5	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       192	bcache.c	FUNCTION_3
0x40003e9	        0x4d896760	             mov qword [r15 + 0x60], r12	       191	bcache.c	FUNCTION_3
0x40003ed	        0x41894758	             mov dword [r15 + 0x58], eax	       192	bcache.c	FUNCTION_3
0x40003f1	      0xe983fdffff	                           jmp 0x4000179	       192	bcache.c	FUNCTION_3
0x40003f6	    0x41b800000000	                              mov r8d, 0	       235	bcache.c	FUNCTION_5	IF_2	CALL_1
0x40003fc	      0xb900000000	                              mov ecx, 0	       235	bcache.c	FUNCTION_5	IF_2	CALL_1
0x4000401	            0x31d2	                            xor edx, edx	       235	bcache.c	FUNCTION_5	IF_2	CALL_1
0x4000403	            0x31f6	                            xor esi, esi	       235	bcache.c	FUNCTION_5	IF_2	CALL_1
0x4000405	          0x4c89ff	                            mov rdi, r15	       235	bcache.c	FUNCTION_5	IF_2	CALL_1
0x4000408	      0xe800000000	                          call 0x400040d	       235	bcache.c	FUNCTION_5	IF_2	CALL_1
0x400040d	      0xe953fdffff	                           jmp 0x4000165	       235	bcache.c	FUNCTION_5	IF_2	CALL_1
0x4000412	          0x4c89ee	                            mov rsi, r13	       268	bcache.c	FUNCTION_5	CALL_5
0x4000415	          0x4c89ff	                            mov rdi, r15	       268	bcache.c	FUNCTION_5	CALL_5
0x4000418	      0xe800000000	                          call 0x400041d	       268	bcache.c	FUNCTION_5	CALL_5
0x400041d	        0x498b4718	            mov rax, qword [r15 + 0x18] 	       268	bcache.c	FUNCTION_5	CALL_5
0x4000421	        0x498b4f20	            mov rcx, qword [r15 + 0x20] 	       268	bcache.c	FUNCTION_5	CALL_5
0x4000425	          0x4c01e8	                            add rax, r13	       268	bcache.c	FUNCTION_5	CALL_5
0x4000428	        0x4d8b6f10	            mov r13, qword [r15 + 0x10] 	       268	bcache.c	FUNCTION_5	CALL_5
0x400042c	        0x49894718	             mov qword [r15 + 0x18], rax	       268	bcache.c	FUNCTION_5	CALL_5
0x4000430	          0x4c39e8	                            cmp rax, r13	       268	bcache.c	FUNCTION_5	CALL_5
0x4000433	     0xf85eefdffff	                           jne 0x4000227	       268	bcache.c	FUNCTION_5	CALL_5
0x4000439	      0x41804f5002	                 or byte [r15 + 0x50], 2	       268	bcache.c	FUNCTION_5	CALL_5
0x400043e	      0xe9e4fdffff	                           jmp 0x4000227	       268	bcache.c	FUNCTION_5	CALL_5
0x4000443	        0x8954241c	             mov dword [rsp + 0x1c], edx	       154	bcache.c	FUNCTION_3	FOR_1	IF_1
0x4000447	      0xe900ffffff	                           jmp 0x400034c	       154	bcache.c	FUNCTION_3	FOR_1	IF_1
0x400044c	          0x4889c8	                            mov rax, rcx	       154	bcache.c	FUNCTION_3	FOR_1	IF_1
0x400044f	      0xe96afeffff	                           jmp 0x40002be	       154	bcache.c	FUNCTION_3	FOR_1	IF_1
bcache	SWITCH,0:ELSE,0:CALL,1:IF,0:FOR,0:functions,0:DO,0:WHILE,0	2
0x4000460	            0x31c9	                            xor ecx, ecx	       208	bcache.c	FUNCTION_4	CALL_1
0x4000462	      0xe9c9fcffff	jmp sym.bcache_full_voidconst__int_bcache__int	       208	bcache.c	FUNCTION_4	CALL_1
bcache_xmalloc	SWITCH,0:ELSE,2:CALL,0:IF,2:FOR,0:functions,0:DO,0:WHILE,0	20
0x4000470	              0x55	                                push rbp	       310	bcache.c	FUNCTION_7
0x4000471	              0x53	                                push rbx	       310	bcache.c	FUNCTION_7
0x4000472	          0x4889fd	                            mov rbp, rdi	       310	bcache.c	FUNCTION_7
0x4000475	          0x4889f3	                            mov rbx, rsi	       310	bcache.c	FUNCTION_7
0x4000478	      0xbf01000000	                              mov edi, 1	       122	poison.h	
0x400047d	      0xbeb8000000	                           mov esi, 0xb8	       122	poison.h	
0x4000482	        0x4883ec08	                              sub rsp, 8	       310	bcache.c	FUNCTION_7
0x4000486	      0xe800000000	                          call 0x400048b	       122	poison.h	
0x400048b	          0x4885ed	                           test rbp, rbp	       315	bcache.c	FUNCTION_7	IF_1
0x400048e	      0xba00000000	                              mov edx, 0	       315	bcache.c	FUNCTION_7	IF_1
0x4000493	        0x480f44ea	                          cmove rbp, rdx	       315	bcache.c	FUNCTION_7	IF_1
0x4000497	          0x4885db	                           test rbx, rbx	       320	bcache.c	FUNCTION_7	IF_2
0x400049a	      0xba00000000	                              mov edx, 0	       320	bcache.c	FUNCTION_7	IF_2
0x400049f	        0x480f44da	                          cmove rbx, rdx	       320	bcache.c	FUNCTION_7	IF_2
0x40004a3	    0x4889a8a80000	             mov qword [rax + 0xa8], rbp	       315	bcache.c	FUNCTION_7	IF_1
0x40004aa	    0x488998b00000	             mov qword [rax + 0xb0], rbx	       320	bcache.c	FUNCTION_7	IF_2
0x40004b1	        0x4883c408	                              add rsp, 8	       324	bcache.c	FUNCTION_7	ELSE_2
0x40004b5	              0x5b	                                 pop rbx	       324	bcache.c	FUNCTION_7	ELSE_2
0x40004b6	              0x5d	                                 pop rbp	       324	bcache.c	FUNCTION_7	ELSE_2
0x40004b7	              0xc3	                                     ret	       324	bcache.c	FUNCTION_7	ELSE_2
