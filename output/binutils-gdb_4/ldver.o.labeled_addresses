ldversion	DO,0:ELSE,0:FOR,0:IF,2:CALL,5:WHILE,1:functions,0:SWITCH,0	61
0x4000040	              0x53	                                push rbx	        35	ldver.c	FUNCTION_1
0x4000041	      0xba05000000	                              mov edx, 5	        37	ldver.c	FUNCTION_1	CALL_1
0x4000046	            0x89fb	                            mov ebx, edi	        35	ldver.c	FUNCTION_1
0x4000048	      0xbe00000000	                              mov esi, 0	        37	ldver.c	FUNCTION_1	CALL_1
0x400004d	            0x31ff	                            xor edi, edi	        37	ldver.c	FUNCTION_1	CALL_1
0x400004f	      0xe800000000	                          call 0x4000054	        37	ldver.c	FUNCTION_1	CALL_1
0x4000054	    0x488b3d000000	            mov rdi, qword [0x0400005b] 	        97	stdio2.h	CALL_9
0x400005b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_9
0x400005e	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_9
0x4000063	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000065	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400006a	      0xe800000000	                          call 0x400006f	        97	stdio2.h	CALL_9
0x400006f	          0xf6c302	                              test bl, 2	        39	ldver.c	FUNCTION_1	IF_1
0x4000072	            0x756c	                           jne 0x40000e0	        39	ldver.c	FUNCTION_1	IF_1
0x4000074	          0x83e301	                              and ebx, 1	        48	ldver.c	FUNCTION_1	IF_2
0x4000077	            0x7507	                           jne 0x4000080	        48	ldver.c	FUNCTION_1	IF_2
0x4000079	              0x5b	                                 pop rbx	        59	ldver.c	FUNCTION_1
0x400007a	              0xc3	                                     ret	        59	ldver.c	FUNCTION_1
0x400007b	       0xf1f440000	                   nop dword [rax + rax]	        59	ldver.c	FUNCTION_1
0x4000080	            0x31ff	                            xor edi, edi	        52	ldver.c	FUNCTION_1	IF_2	CALL_5
0x4000082	      0xba05000000	                              mov edx, 5	        52	ldver.c	FUNCTION_1	IF_2	CALL_5
0x4000087	      0xbe00000000	                              mov esi, 0	        52	ldver.c	FUNCTION_1	IF_2	CALL_5
0x400008c	      0xe800000000	                          call 0x4000091	        52	ldver.c	FUNCTION_1	IF_2	CALL_5
0x4000091	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000096	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_12
0x4000099	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_12
0x400009b	      0xe800000000	                          call 0x40000a0	       104	stdio2.h	CALL_12
0x40000a0	    0x488b05000000	            mov rax, qword [0x040000a7] 	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000a7	          0x4885c0	                           test rax, rax	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000aa	            0x74cd	                            je 0x4000079	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000ac	      0xbb00000000	                              mov ebx, 0	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000b1	     0xf1f80000000	                         nop dword [rax]	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000b8	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       104	stdio2.h	CALL_12
0x40000bc	        0x4883c308	                              add rbx, 8	        56	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000c0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_12
0x40000c2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x40000c7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x40000cc	      0xe800000000	                          call 0x40000d1	       104	stdio2.h	CALL_12
0x40000d1	          0x488b03	                    mov rax, qword [rbx]	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000d4	          0x4885c0	                           test rax, rax	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000d7	            0x75df	                           jne 0x40000b8	        53	ldver.c	FUNCTION_1	IF_2	WHILE_1
0x40000d9	              0x5b	                                 pop rbx	        59	ldver.c	FUNCTION_1
0x40000da	              0xc3	                                     ret	        59	ldver.c	FUNCTION_1
0x40000db	       0xf1f440000	                   nop dword [rax + rax]	        59	ldver.c	FUNCTION_1
0x40000e0	      0xba05000000	                              mov edx, 5	        41	ldver.c	FUNCTION_1	IF_1	CALL_2
0x40000e5	            0x31ff	                            xor edi, edi	        41	ldver.c	FUNCTION_1	IF_1	CALL_2
0x40000e7	      0xbe00000000	                              mov esi, 0	        41	ldver.c	FUNCTION_1	IF_1	CALL_2
0x40000ec	      0xe800000000	                          call 0x40000f1	        41	ldver.c	FUNCTION_1	IF_1	CALL_2
0x40000f1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x40000f6	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_12
0x40000f9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_12
0x40000fb	      0xe800000000	                          call 0x4000100	       104	stdio2.h	CALL_12
0x4000100	            0x31ff	                            xor edi, edi	        42	ldver.c	FUNCTION_1	IF_1	CALL_3
0x4000102	      0xba05000000	                              mov edx, 5	        42	ldver.c	FUNCTION_1	IF_1	CALL_3
0x4000107	      0xbe00000000	                              mov esi, 0	        42	ldver.c	FUNCTION_1	IF_1	CALL_3
0x400010c	      0xe800000000	                          call 0x4000111	        42	ldver.c	FUNCTION_1	IF_1	CALL_3
0x4000111	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000116	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_12
0x4000119	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_12
0x400011b	      0xe800000000	                          call 0x4000120	       104	stdio2.h	CALL_12
0x4000120	      0xe94fffffff	                           jmp 0x4000074	       104	stdio2.h	CALL_12
