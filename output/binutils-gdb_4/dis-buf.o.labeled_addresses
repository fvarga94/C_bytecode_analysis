generic_print_address	IF,0:DO,0:CALL,1:SWITCH,0:ELSE,0:functions,0:WHILE,0:FOR,0	24
0x4000180	              0x53	                                push rbx	        83	dis-buf.c	FUNCTION_3
0x4000181	          0x4989f8	                             mov r8, rdi	        83	dis-buf.c	FUNCTION_3
0x4000184	          0x4889f3	                            mov rbx, rsi	        83	dis-buf.c	FUNCTION_3
0x4000187	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_18	CALL_1
0x400018c	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_18	CALL_1
0x4000191	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_18	CALL_1
0x4000196	        0x4883ec30	                           sub rsp, 0x30	        83	dis-buf.c	FUNCTION_3
0x400019a	    0x64488b042528	                mov rax, qword fs:[0x28]	        83	dis-buf.c	FUNCTION_3
0x40001a3	      0x4889442428	             mov qword [rsp + 0x28], rax	        83	dis-buf.c	FUNCTION_3
0x40001a8	            0x31c0	                            xor eax, eax	        83	dis-buf.c	FUNCTION_3
0x40001aa	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_18	CALL_1
0x40001ad	      0xe800000000	                          call 0x40001b2	        33	stdio2.h	FUNCTION_18	CALL_1
0x40001b2	            0x31c0	                            xor eax, eax	        87	dis-buf.c	FUNCTION_3
0x40001b4	        0x488b7b08	                mov rdi, qword [rbx + 8]	        87	dis-buf.c	FUNCTION_3
0x40001b8	          0x4889e2	                            mov rdx, rsp	        87	dis-buf.c	FUNCTION_3
0x40001bb	      0xbe00000000	                              mov esi, 0	        87	dis-buf.c	FUNCTION_3
0x40001c0	            0xff13	                        call qword [rbx]	        87	dis-buf.c	FUNCTION_3
0x40001c2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        88	dis-buf.c	FUNCTION_3
0x40001c7	    0x644833042528	                xor rax, qword fs:[0x28]	        88	dis-buf.c	FUNCTION_3
0x40001d0	            0x7506	                           jne 0x40001d8	        88	dis-buf.c	FUNCTION_3
0x40001d2	        0x4883c430	                           add rsp, 0x30	        88	dis-buf.c	FUNCTION_3
0x40001d6	              0x5b	                                 pop rbx	        88	dis-buf.c	FUNCTION_3
0x40001d7	              0xc3	                                     ret	        88	dis-buf.c	FUNCTION_3
0x40001d8	      0xe800000000	                          call 0x40001dd	        88	dis-buf.c	FUNCTION_3
generic_symbol_at_address	IF,0:DO,0:CALL,0:SWITCH,0:ELSE,0:functions,0:WHILE,0:FOR,0	2
0x40001e0	      0xb801000000	                              mov eax, 1	        97	dis-buf.c	FUNCTION_4
0x40001e5	              0xc3	                                     ret	        97	dis-buf.c	FUNCTION_4
buffer_read_memory	IF,1:DO,0:CALL,1:SWITCH,0:ELSE,0:functions,0:WHILE,0:FOR,0	43
0x4000040	    0x448b81bc0000	            mov r8d, dword [rcx + 0xbc] 	        34	dis-buf.c	FUNCTION_1
0x4000047	    0x488b81a80000	            mov rax, qword [rcx + 0xa8] 	        36	dis-buf.c	FUNCTION_1
0x400004e	          0x4989fa	                            mov r10, rdi	        37	dis-buf.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        33	dis-buf.c	FUNCTION_1
0x4000052	            0x89d3	                            mov ebx, edx	        33	dis-buf.c	FUNCTION_1
0x4000054	            0x31d2	                            xor edx, edx	        36	dis-buf.c	FUNCTION_1
0x4000056	          0x49f7f0	                                  div r8	        36	dis-buf.c	FUNCTION_1
0x4000059	          0x4989c3	                            mov r11, rax	        36	dis-buf.c	FUNCTION_1
0x400005c	    0x488b81a00000	            mov rax, qword [rcx + 0xa0] 	        37	dis-buf.c	FUNCTION_1
0x4000063	          0x4929c2	                            sub r10, rax	        37	dis-buf.c	FUNCTION_1
0x4000066	          0x4d39d3	                            cmp r11, r10	        40	dis-buf.c	FUNCTION_1	IF_1
0x4000069	            0x7205	                            jb 0x4000070	        40	dis-buf.c	FUNCTION_1	IF_1
0x400006b	          0x4839f8	                            cmp rax, rdi	        40	dis-buf.c	FUNCTION_1	IF_1
0x400006e	            0x7610	                           jbe 0x4000080	        40	dis-buf.c	FUNCTION_1	IF_1
0x4000070	      0xb805000000	                              mov eax, 5	        45	dis-buf.c	FUNCTION_1	IF_1
0x4000075	              0x5b	                                 pop rbx	        49	dis-buf.c	FUNCTION_1
0x4000076	              0xc3	                                     ret	        49	dis-buf.c	FUNCTION_1
0x4000077	    0x660f1f840000	                    nop word [rax + rax]	        49	dis-buf.c	FUNCTION_1
0x4000080	            0x31d2	                            xor edx, edx	        35	dis-buf.c	FUNCTION_1
0x4000082	            0x89d8	                            mov eax, ebx	        35	dis-buf.c	FUNCTION_1
0x4000084	          0x41f7f0	                                 div r8d	        35	dis-buf.c	FUNCTION_1
0x4000087	            0x89c2	                            mov edx, eax	        35	dis-buf.c	FUNCTION_1
0x4000089	      0xb805000000	                              mov eax, 5	        45	dis-buf.c	FUNCTION_1	IF_1
0x400008e	        0x4e8d0c12	                     lea r9, [rdx + r10]	        41	dis-buf.c	FUNCTION_1	IF_1
0x4000092	          0x4d39cb	                             cmp r11, r9	        41	dis-buf.c	FUNCTION_1	IF_1
0x4000095	            0x72de	                            jb 0x4000075	        41	dis-buf.c	FUNCTION_1	IF_1
0x4000097	    0x4c8b89f00000	              mov r9, qword [rcx + 0xf0]	        42	dis-buf.c	FUNCTION_1	IF_1
0x400009e	          0x4d85c9	                             test r9, r9	        42	dis-buf.c	FUNCTION_1	IF_1
0x40000a1	            0x740d	                            je 0x40000b0	        42	dis-buf.c	FUNCTION_1	IF_1
0x40000a3	          0x4c39cf	                             cmp rdi, r9	        42	dis-buf.c	FUNCTION_1	IF_1
0x40000a6	            0x73cd	                           jae 0x4000075	        42	dis-buf.c	FUNCTION_1	IF_1
0x40000a8	          0x4801fa	                            add rdx, rdi	        43	dis-buf.c	FUNCTION_1	IF_1
0x40000ab	          0x4939d1	                             cmp r9, rdx	        43	dis-buf.c	FUNCTION_1	IF_1
0x40000ae	            0x72c5	                            jb 0x4000075	        43	dis-buf.c	FUNCTION_1	IF_1
0x40000b0	        0x4d0fafc2	                            imul r8, r10	        53	string3.h	FUNCTION_6	CALL_3
0x40000b4	          0x4889f7	                            mov rdi, rsi	        53	string3.h	FUNCTION_6	CALL_3
0x40000b7	            0x89da	                            mov edx, ebx	        53	string3.h	FUNCTION_6	CALL_3
0x40000b9	          0x4c89c6	                             mov rsi, r8	        53	string3.h	FUNCTION_6	CALL_3
0x40000bc	    0x4803b1980000	             add rsi, qword [rcx + 0x98]	        53	string3.h	FUNCTION_6	CALL_3
0x40000c3	      0xe800000000	                          call 0x40000c8	        53	string3.h	FUNCTION_6	CALL_3
0x40000c8	            0x31c0	                            xor eax, eax	        48	dis-buf.c	FUNCTION_1
0x40000ca	              0x5b	                                 pop rbx	        49	dis-buf.c	FUNCTION_1
0x40000cb	              0xc3	                                     ret	        49	dis-buf.c	FUNCTION_1
perror_memory	IF,1:DO,0:CALL,5:SWITCH,0:ELSE,1:functions,0:WHILE,0:FOR,0	48
0x40000d0	            0x4154	                                push r12	        58	dis-buf.c	FUNCTION_2
0x40000d2	              0x55	                                push rbp	        58	dis-buf.c	FUNCTION_2
0x40000d3	              0x53	                                push rbx	        58	dis-buf.c	FUNCTION_2
0x40000d4	          0x4889d3	                            mov rbx, rdx	        58	dis-buf.c	FUNCTION_2
0x40000d7	        0x4883ec30	                           sub rsp, 0x30	        58	dis-buf.c	FUNCTION_2
0x40000db	    0x64488b042528	                mov rax, qword fs:[0x28]	        58	dis-buf.c	FUNCTION_2
0x40000e4	      0x4889442428	             mov qword [rsp + 0x28], rax	        58	dis-buf.c	FUNCTION_2
0x40000e9	            0x31c0	                            xor eax, eax	        58	dis-buf.c	FUNCTION_2
0x40000eb	          0x83ff05	                              cmp edi, 5	        59	dis-buf.c	FUNCTION_2	IF_1
0x40000ee	            0x7440	                            je 0x4000130	        59	dis-buf.c	FUNCTION_2	IF_1
0x40000f0	            0x89fd	                            mov ebp, edi	        59	dis-buf.c	FUNCTION_2	IF_1
0x40000f2	          0x4c8b22	                    mov r12, qword [rdx]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40000f5	      0xbe00000000	                              mov esi, 0	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40000fa	      0xba05000000	                              mov edx, 5	        61	dis-buf.c	FUNCTION_2	CALL_2
0x40000ff	      0xbf00000000	                              mov edi, 0	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000104	      0xe800000000	                          call 0x4000109	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000109	        0x488b7b08	                mov rdi, qword [rbx + 8]	        61	dis-buf.c	FUNCTION_2	CALL_2
0x400010d	          0x4889c6	                            mov rsi, rax	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000110	            0x89ea	                            mov edx, ebp	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000112	            0x31c0	                            xor eax, eax	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000114	          0x41ffd4	                                call r12	        61	dis-buf.c	FUNCTION_2	CALL_2
0x4000117	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        72	dis-buf.c	FUNCTION_2
0x400011c	    0x644833042528	                xor rax, qword fs:[0x28]	        72	dis-buf.c	FUNCTION_2
0x4000125	            0x754c	                           jne 0x4000173	        72	dis-buf.c	FUNCTION_2
0x4000127	        0x4883c430	                           add rsp, 0x30	        72	dis-buf.c	FUNCTION_2
0x400012b	              0x5b	                                 pop rbx	        72	dis-buf.c	FUNCTION_2
0x400012c	              0x5d	                                 pop rbp	        72	dis-buf.c	FUNCTION_2
0x400012d	            0x415c	                                 pop r12	        72	dis-buf.c	FUNCTION_2
0x400012f	              0xc3	                                     ret	        72	dis-buf.c	FUNCTION_2
0x4000130	          0x4989f0	                             mov r8, rsi	        33	stdio2.h	FUNCTION_18	CALL_1
0x4000133	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_18	CALL_1
0x4000138	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_18	CALL_1
0x400013b	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_18	CALL_1
0x4000140	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_18	CALL_1
0x4000145	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_18	CALL_1
0x4000147	      0xe800000000	                          call 0x400014c	        33	stdio2.h	FUNCTION_18	CALL_1
0x400014c	      0xba05000000	                              mov edx, 5	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x4000151	      0xbe00000000	                              mov esi, 0	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x4000156	      0xbf00000000	                              mov edi, 0	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x400015b	          0x488b2b	                    mov rbp, qword [rbx]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x400015e	      0xe800000000	                          call 0x4000163	        70	dis-buf.c	FUNCTION_2	ELSE_1	CALL_5
0x4000163	        0x488b7b08	                mov rdi, qword [rbx + 8]	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000167	          0x4889c6	                            mov rsi, rax	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x400016a	          0x4889e2	                            mov rdx, rsp	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x400016d	            0x31c0	                            xor eax, eax	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x400016f	            0xffd5	                                call rbp	        69	dis-buf.c	FUNCTION_2	ELSE_1	CALL_4
0x4000171	            0xeba4	                           jmp 0x4000117	        72	dis-buf.c	FUNCTION_2
0x4000173	      0xe800000000	                          call 0x4000178	        72	dis-buf.c	FUNCTION_2
generic_symbol_is_valid	IF,0:DO,0:CALL,0:SWITCH,0:ELSE,0:functions,0:WHILE,0:FOR,0	2
0x40001f0	      0xb801000000	                              mov eax, 1	       106	dis-buf.c	FUNCTION_5
0x40001f5	              0xc3	                                     ret	       106	dis-buf.c	FUNCTION_5
