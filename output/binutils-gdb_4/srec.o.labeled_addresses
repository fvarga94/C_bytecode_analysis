srec_sizeof_headers	WHILE,0:DO,0:IF,0:CALL,0:ELSE,0:SWITCH,0:functions,0:FOR,0	2
0x4000040	            0x31c0	                            xor eax, eax	      1178	srec.c	FUNCTION_21
0x4000042	              0xc3	                                     ret	      1178	srec.c	FUNCTION_21
srec_scan	WHILE,7:DO,1:IF,36:CALL,47:ELSE,4:SWITCH,2:functions,0:FOR,0	634
0x4001040	            0x4157	                                push r15	       297	srec.c	ELSE_1	FUNCTION_6
0x4001042	            0x4156	                                push r14	       297	srec.c	ELSE_1	FUNCTION_6
0x4001044	            0x31d2	                            xor edx, edx	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4001046	            0x4155	                                push r13	       297	srec.c	ELSE_1	FUNCTION_6
0x4001048	            0x4154	                                push r12	       297	srec.c	ELSE_1	FUNCTION_6
0x400104a	            0x31f6	                            xor esi, esi	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x400104c	              0x55	                                push rbp	       297	srec.c	ELSE_1	FUNCTION_6
0x400104d	              0x53	                                push rbx	       297	srec.c	ELSE_1	FUNCTION_6
0x400104e	          0x4889fb	                            mov rbx, rdi	       297	srec.c	ELSE_1	FUNCTION_6
0x4001051	    0x4881ec880000	                           sub rsp, 0x88	       297	srec.c	ELSE_1	FUNCTION_6
0x4001058	    0x64488b042528	                mov rax, qword fs:[0x28]	       297	srec.c	ELSE_1	FUNCTION_6
0x4001061	      0x4889442478	             mov qword [rsp + 0x78], rax	       297	srec.c	ELSE_1	FUNCTION_6
0x4001066	            0x31c0	                            xor eax, eax	       297	srec.c	ELSE_1	FUNCTION_6
0x4001068	      0xe800000000	                          call 0x400106d	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x400106d	            0x85c0	                           test eax, eax	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x400106f	     0xf852b010000	                           jne 0x40011a0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4001075	          0x4189c5	                           mov r13d, eax	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4001078	          0x4531f6	                          xor r14d, r14d	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x400107b	    0x48c744241800	               mov qword [rsp + 0x18], 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4001084	    0x48c744240800	                  mov qword [rsp + 8], 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x400108d	    0xc74424140100	               mov dword [rsp + 0x14], 1	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4001095	      0x488d7c243f	                   lea rdi, [rsp + 0x3f]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400109a	          0x4889da	                            mov rdx, rbx	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400109d	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40010a2	      0xe800000000	                          call 0x40010a7	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40010a7	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40010ab	            0x7453	                            je 0x4001100	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40010ad	      0xe800000000	                          call 0x40010b2	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40010b2	          0x83f812	                           cmp eax, 0x12	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40010b5	     0xf8425030000	                            je 0x40013e0	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40010bb	       0xf1f440000	                   nop dword [rax + rax]	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40010c0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x40010c5	          0x4885ff	                           test rdi, rdi	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x40010c8	     0xf84d2000000	                            je 0x40011a0	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x40010ce	      0xe800000000	                          call 0x40010d3	       643	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x40010d3	      0x488b5c2478	            mov rbx, qword [rsp + 0x78] 	       645	srec.c	FUNCTION_6	ELSE_1
0x40010d8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       645	srec.c	FUNCTION_6	ELSE_1
0x40010e1	          0x4489e8	                           mov eax, r13d	       645	srec.c	FUNCTION_6	ELSE_1
0x40010e4	     0xf8588090000	                           jne 0x4001a72	       645	srec.c	FUNCTION_6	ELSE_1
0x40010ea	    0x4881c4880000	                           add rsp, 0x88	       645	srec.c	FUNCTION_6	ELSE_1
0x40010f1	              0x5b	                                 pop rbx	       645	srec.c	FUNCTION_6	ELSE_1
0x40010f2	              0x5d	                                 pop rbp	       645	srec.c	FUNCTION_6	ELSE_1
0x40010f3	            0x415c	                                 pop r12	       645	srec.c	FUNCTION_6	ELSE_1
0x40010f5	            0x415d	                                 pop r13	       645	srec.c	FUNCTION_6	ELSE_1
0x40010f7	            0x415e	                                 pop r14	       645	srec.c	FUNCTION_6	ELSE_1
0x40010f9	            0x415f	                                 pop r15	       645	srec.c	FUNCTION_6	ELSE_1
0x40010fb	              0xc3	                                     ret	       645	srec.c	FUNCTION_6	ELSE_1
0x40010fc	         0xf1f4000	                         nop dword [rax]	       645	srec.c	FUNCTION_6	ELSE_1
0x4001100	    0x440fb644243f	           movzx r8d, byte [rsp + 0x3f] 	       229	srec.c	FUNCTION_3
0x4001106	        0x4183f853	                           cmp r8d, 0x53	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400110a	          0x4489c0	                            mov eax, r8d	       229	srec.c	FUNCTION_3
0x400110d	           0xf95c1	                                setne cl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001110	        0x4183f80d	                            cmp r8d, 0xd	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001114	           0xf95c2	                                setne dl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001117	            0x84d1	                             test cl, dl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001119	            0x740d	                            je 0x4001128	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400111b	        0x4183f80a	                            cmp r8d, 0xa	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x400111f	      0xbe00000000	                              mov esi, 0	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001124	        0x4c0f45f6	                         cmovne r14, rsi	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4001128	            0x3c20	                            cmp al, 0x20	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x400112a	     0xf84d8020000	                            je 0x4001408	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001130	            0x777e	                            ja 0x40011b0	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001132	            0x3c0a	                             cmp al, 0xa	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001134	     0xf84b9010000	                            je 0x40012f3	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x400113a	            0x3c0d	                             cmp al, 0xd	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x400113c	     0xf8453ffffff	                            je 0x4001095	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001142	          0x4963d0	                         movsxd rdx, r8d	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4001145	    0xf68412000000	            test byte [rdx + rdx], 0x10 	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x400114d	     0xf843d080000	                            je 0x4001990	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4001153	      0x488d6c2450	                   lea rbp, [rsp + 0x50]	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4001158	        0x88442450	               mov byte [rsp + 0x50], al	       255	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x400115c	      0xc644245100	                mov byte [rsp + 0x51], 0	       256	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x4001161	      0xba05000000	                              mov edx, 5	       260	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4001166	      0xbe00000000	                              mov esi, 0	       260	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x400116b	      0xbf00000000	                              mov edi, 0	       260	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4001170	      0xe800000000	                          call 0x4001175	       260	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4001175	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4001179	          0x4889c7	                            mov rdi, rax	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x400117c	          0x4889e9	                            mov rcx, rbp	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x400117f	          0x4889de	                            mov rsi, rbx	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4001182	            0x31c0	                            xor eax, eax	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4001184	      0xe800000000	                          call 0x4001189	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4001189	      0xbf11000000	                           mov edi, 0x11	       262	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x400118e	      0xe800000000	                          call 0x4001193	       262	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x4001193	      0xe928ffffff	                           jmp 0x40010c0	       262	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x4001198	     0xf1f84000000	                   nop dword [rax + rax]	       262	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x40011a0	          0x4531ed	                          xor r13d, r13d	       644	srec.c	FUNCTION_6	ELSE_1
0x40011a3	      0xe92bffffff	                           jmp 0x40010d3	       644	srec.c	FUNCTION_6	ELSE_1
0x40011a8	     0xf1f84000000	                   nop dword [rax + rax]	       644	srec.c	FUNCTION_6	ELSE_1
0x40011b0	            0x3c24	                            cmp al, 0x24	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40011b2	     0xf8418010000	                            je 0x40012d0	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40011b8	            0x3c53	                            cmp al, 0x53	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40011ba	            0x7586	                           jne 0x4001142	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40011bc	          0x4889df	                            mov rdi, rbx	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x40011bf	      0xe800000000	                          call 0x40011c4	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x40011c4	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40011c9	          0x4889da	                            mov rdx, rbx	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40011cc	      0xbe03000000	                              mov esi, 3	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40011d1	      0x4889442420	             mov qword [rsp + 0x20], rax	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x40011d6	      0xe800000000	                          call 0x40011db	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40011db	        0x4883f803	                              cmp rax, 3	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40011df	     0xf85dbfeffff	                           jne 0x40010c0	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x40011e5	       0xfb64c2441	           movzx ecx, byte [rsp + 0x41] 	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40011ea	     0xfb681000000	                   movzx eax, byte [rcx]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40011f1	          0x4989c8	                             mov r8, rcx	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40011f4	            0x3c63	                            cmp al, 0x63	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40011f6	     0xf8415080000	                            je 0x4001a11	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x40011fc	       0xfb64c2442	           movzx ecx, byte [rsp + 0x42] 	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001201	     0xfb691000000	                   movzx edx, byte [rcx]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001208	          0x4989c8	                             mov r8, rcx	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x400120b	          0x80fa63	                            cmp dl, 0x63	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x400120e	     0xf84fd070000	                            je 0x4001a11	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001214	          0xc1e004	                              shl eax, 4	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001217	           0xfb6ca	                           movzx ecx, dl	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400121a	        0x448d3c08	                   lea r15d, [rax + rcx]	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400121e	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001223	          0x4589fc	                          mov r12d, r15d	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001226	            0x3c32	                            cmp al, 0x32	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001228	     0xf846a030000	                            je 0x4001598	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x400122e	            0x3c38	                            cmp al, 0x38	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001230	     0xf8462030000	                            je 0x4001598	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x4001236	          0x83e0fb	                     and eax, 0xfffffffb	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x4001239	            0x3c33	                            cmp al, 0x33	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400123b	           0xf94c0	                                 sete al	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400123e	           0xfb6c0	                           movzx eax, al	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001241	        0x8d440003	                lea eax, [rax + rax + 3]	       480	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001245	          0x4439f8	                           cmp eax, r15d	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x4001248	     0xf87ed070000	                            ja 0x4001a3b	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x400124e	        0x438d2c3f	                    lea ebp, [r15 + r15]	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4001252	      0x48396c2418	            cmp qword [rsp + 0x18], rbp 	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4001257	     0xf8363030000	                           jae 0x40015c0	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x400125d	      0x488b442408	                mov rax, qword [rsp + 8]	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001262	          0x4885c0	                           test rax, rax	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001265	            0x7408	                            je 0x400126f	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001267	          0x4889c7	                            mov rdi, rax	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x400126a	      0xe800000000	                          call 0x400126f	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x400126f	          0x4489fe	                           mov esi, r15d	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001272	          0x4801f6	                            add rsi, rsi	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001275	          0x4889f7	                            mov rdi, rsi	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001278	        0x48893424	                    mov qword [rsp], rsi	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x400127c	      0xe800000000	                          call 0x4001281	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001281	          0x4885c0	                           test rax, rax	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4001284	      0x4889442408	                mov qword [rsp + 8], rax	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001289	     0xf8411ffffff	                            je 0x40011a0	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x400128f	        0x488b3424	                    mov rsi, qword [rsp]	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4001293	      0x48896c2418	             mov qword [rsp + 0x18], rbp	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4001298	          0x4889c7	                            mov rdi, rax	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x400129b	          0x4889da	                            mov rdx, rbx	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x400129e	      0xe800000000	                          call 0x40012a3	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x40012a3	          0x4839c5	                            cmp rbp, rax	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x40012a6	     0xf8514feffff	                           jne 0x40010c0	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x40012ac	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40012b1	        0x458d4fff	                      lea r9d, [r15 - 1]	       508	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x40012b5	          0x83e830	                           sub eax, 0x30	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40012b8	            0x3c09	                               cmp al, 9	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40012ba	     0xf87d5fdffff	                            ja 0x4001095	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40012c0	           0xfb6c0	                           movzx eax, al	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40012c3	    0xff24c5000000	                       jmp qword [rax*8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40012ca	    0x660f1f440000	                    nop word [rax + rax]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40012d0	      0x488d7c243f	                   lea rdi, [rsp + 0x3f]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40012d5	          0x4889da	                            mov rdx, rbx	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40012d8	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40012dd	      0xe800000000	                          call 0x40012e2	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40012e2	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40012e6	     0xf85d2000000	                           jne 0x40013be	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40012ec	      0x807c243f0a	              cmp byte [rsp + 0x3f], 0xa	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x40012f1	            0x75dd	                           jne 0x40012d0	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x40012f3	      0x8344241401	               add dword [rsp + 0x14], 1	       340	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40012f8	      0xe998fdffff	                           jmp 0x4001095	       341	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x40012fd	           0xf1f00	                         nop dword [rax]	       341	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4001300	      0x498d742401	                      lea rsi, [r12 + 1]	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4001305	      0x41c6042400	                       mov byte [r12], 0	       396	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400130a	          0x4889df	                            mov rdi, rbx	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x400130d	          0x4829ee	                            sub rsi, rbp	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4001310	      0xe800000000	                          call 0x4001315	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x4001315	          0x4885c0	                           test rax, rax	       398	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x4001318	          0x4989c4	                            mov r12, rax	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x400131b	     0xf8471010000	                            je 0x4001492	       398	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x4001321	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_32	CALL_3
0x4001324	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_32	CALL_3
0x4001327	      0xe800000000	                          call 0x400132c	       110	string3.h	FUNCTION_32	CALL_3
0x400132c	          0x4889ef	                            mov rdi, rbp	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x400132f	      0xe800000000	                          call 0x4001334	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x4001334	         0xf1f4000	                         nop dword [rax]	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x4001338	      0x488d7c243f	                   lea rdi, [rsp + 0x3f]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400133d	          0x4889da	                            mov rdx, rbx	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001340	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001345	      0xe800000000	                          call 0x400134a	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400134a	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400134e	            0x756e	                           jne 0x40013be	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001350	    0x440fb67c243f	          movzx r15d, byte [rsp + 0x3f] 	       229	srec.c	FUNCTION_3
0x4001356	        0x4183ff20	                          cmp r15d, 0x20	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x400135a	            0x74dc	                            je 0x4001338	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x400135c	        0x4183ff09	                             cmp r15d, 9	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x4001360	            0x74d6	                            je 0x4001338	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x4001362	        0x4183ff24	                          cmp r15d, 0x24	       414	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12
0x4001366	     0xf8447060000	                            je 0x40019b3	       414	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12
0x400136c	          0x4963c7	                        movsxd rax, r15d	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400136f	            0x31ed	                            xor ebp, ebp	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001371	     0xfb680000000	                   movzx eax, byte [rax]	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001378	            0x3c63	                            cmp al, 0x63	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400137a	            0x7523	                           jne 0x400139f	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400137c	      0xe987010000	                           jmp 0x4001508	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001381	     0xf1f80000000	                         nop dword [rax]	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001388	       0xfb644243f	           movzx eax, byte [rsp + 0x3f] 	       229	srec.c	FUNCTION_3
0x400138d	          0x4989c7	                            mov r15, rax	       229	srec.c	FUNCTION_3
0x4001390	     0xfb680000000	                   movzx eax, byte [rax]	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001397	            0x3c63	                            cmp al, 0x63	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001399	     0xf8469010000	                            je 0x4001508	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400139f	      0x488d7c243f	                   lea rdi, [rsp + 0x3f]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40013a4	        0x48c1e504	                              shl rbp, 4	       427	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x40013a8	          0x4889da	                            mov rdx, rbx	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40013ab	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40013b0	          0x4801c5	                            add rbp, rax	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x40013b3	      0xe800000000	                          call 0x40013b8	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40013b8	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40013bc	            0x74ca	                            je 0x4001388	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40013be	      0xe800000000	                          call 0x40013c3	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40013c3	          0x83f812	                           cmp eax, 0x12	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40013c6	     0xf85f4fcffff	                           jne 0x40010c0	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40013cc	      0xbf12000000	                           mov edi, 0x12	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x40013d1	      0xe800000000	                          call 0x40013d6	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x40013d6	      0xe9e5fcffff	                           jmp 0x40010c0	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x40013db	       0xf1f440000	                   nop dword [rax + rax]	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x40013e0	    0x48837c240800	                  cmp qword [rsp + 8], 0	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x40013e6	     0xf84c8010000	                            je 0x40015b4	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x40013ec	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x40013f1	    0x41bd01000000	                             mov r13d, 1	       637	srec.c	FUNCTION_6	ELSE_1
0x40013f7	      0xe800000000	                          call 0x40013fc	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x40013fc	      0xe9d2fcffff	                           jmp 0x40010d3	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x4001401	     0xf1f80000000	                         nop dword [rax]	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x4001408	      0x4c89742420	             mov qword [rsp + 0x20], r14	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x400140d	      0x488d7c243f	                   lea rdi, [rsp + 0x3f]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001412	          0x4889da	                            mov rdx, rbx	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001415	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400141a	      0xe800000000	                          call 0x400141f	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400141f	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001423	            0x7599	                           jne 0x40013be	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001425	    0x440fb67c243f	          movzx r15d, byte [rsp + 0x3f] 	       229	srec.c	FUNCTION_3
0x400142b	        0x4183ff20	                          cmp r15d, 0x20	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400142f	            0x74dc	                            je 0x400140d	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001431	        0x4183ff09	                             cmp r15d, 9	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001435	            0x74d6	                            je 0x400140d	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001437	        0x4183ff0a	                           cmp r15d, 0xa	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x400143b	     0xf8424010000	                            je 0x4001565	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x4001441	        0x4183ff0d	                           cmp r15d, 0xd	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x4001445	     0xf841a010000	                            je 0x4001565	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x400144b	      0xbf0b000000	                            mov edi, 0xb	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x4001450	      0xe800000000	                          call 0x4001455	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x4001455	          0x4885c0	                           test rax, rax	       366	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x4001458	          0x4889c5	                            mov rbp, rax	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x400145b	     0xf845ffcffff	                            je 0x40010c0	       366	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x4001461	        0x4c8d6001	                      lea r12, [rax + 1]	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001465	        0x44887d00	                    mov byte [rbp], r15b	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001469	    0x41bf0a000000	                           mov r15d, 0xa	       364	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400146f	              0x90	                                     nop	       364	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001470	      0x488d7c243f	                   lea rdi, [rsp + 0x3f]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001475	          0x4889da	                            mov rdx, rbx	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001478	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400147d	      0xe800000000	                          call 0x4001482	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001482	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001486	            0x7418	                            je 0x40014a0	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4001488	      0xe800000000	                          call 0x400148d	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400148d	          0x83f812	                           cmp eax, 0x12	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4001490	            0x7466	                            je 0x40014f8	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4001492	          0x4889ef	                            mov rdi, rbp	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x4001495	      0xe800000000	                          call 0x400149a	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x400149a	      0xe921fcffff	                           jmp 0x40010c0	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x400149f	              0x90	                                     nop	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x40014a0	       0xfb644243f	           movzx eax, byte [rsp + 0x3f] 	       229	srec.c	FUNCTION_3
0x40014a5	    0xf68400000000	            test byte [rax + rax], 0x40 	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x40014ad	          0x4989c6	                            mov r14, rax	       229	srec.c	FUNCTION_3
0x40014b0	     0xf854afeffff	                           jne 0x4001300	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x40014b6	          0x4c89e1	                            mov rcx, r12	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014b9	          0x4829e9	                            sub rcx, rbp	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014bc	          0x4939cf	                            cmp r15, rcx	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014bf	            0x760f	                           jbe 0x40014d0	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014c1	        0x45883424	                    mov byte [r12], r14b	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40014c5	        0x4983c401	                              add r12, 1	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40014c9	            0xeba5	                           jmp 0x4001470	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40014cb	       0xf1f440000	                   nop dword [rax + rax]	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x40014d0	          0x4d01ff	                            add r15, r15	       379	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014d3	          0x4889ef	                            mov rdi, rbp	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x40014d6	        0x48890c24	                    mov qword [rsp], rcx	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x40014da	        0x498d7701	                      lea rsi, [r15 + 1]	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x40014de	      0xe800000000	                          call 0x40014e3	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x40014e3	          0x4885c0	                           test rax, rax	       381	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x40014e6	            0x74aa	                            je 0x4001492	       381	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x40014e8	        0x488b0c24	                    mov rcx, qword [rsp]	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014ec	          0x4889c5	                            mov rbp, rax	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014ef	        0x4c8d2408	                    lea r12, [rax + rcx]	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014f3	            0xebcc	                           jmp 0x40014c1	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014f5	           0xf1f00	                         nop dword [rax]	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x40014f8	      0xbf12000000	                           mov edi, 0x12	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x40014fd	      0xe800000000	                          call 0x4001502	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x4001502	            0xeb8e	                           jmp 0x4001492	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x4001504	         0xf1f4000	                         nop dword [rax]	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x4001508	      0xbe18000000	                           mov esi, 0x18	       273	srec.c	FUNCTION_5	CALL_1
0x400150d	          0x4889df	                            mov rdi, rbx	       273	srec.c	FUNCTION_5	CALL_1
0x4001510	      0xe800000000	                          call 0x4001515	       273	srec.c	FUNCTION_5	CALL_1
0x4001515	          0x4885c0	                           test rax, rax	       274	srec.c	FUNCTION_5	IF_1
0x4001518	     0xf84a2fbffff	                            je 0x40010c0	       274	srec.c	FUNCTION_5	IF_1
0x400151e	        0x4c896008	                mov qword [rax + 8], r12	       277	srec.c	FUNCTION_5
0x4001522	        0x48896810	             mov qword [rax + 0x10], rbp	       278	srec.c	FUNCTION_5
0x4001526	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	       280	srec.c	FUNCTION_5	IF_2
0x400152d	      0x48837a1800	               cmp qword [rdx + 0x18], 0	       280	srec.c	FUNCTION_5	IF_2
0x4001532	     0xf84c5040000	                            je 0x40019fd	       280	srec.c	FUNCTION_5	IF_2
0x4001538	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	       283	srec.c	FUNCTION_5	ELSE_1
0x400153c	          0x488901	                    mov qword [rcx], rax	       283	srec.c	FUNCTION_5	ELSE_1
0x400153f	        0x48894220	             mov qword [rdx + 0x20], rax	       284	srec.c	FUNCTION_5	ELSE_1
0x4001543	    0x48c700000000	                      mov qword [rax], 0	       285	srec.c	FUNCTION_5	ELSE_1
0x400154a	    0x8383b8000000	               add dword [rbx + 0xb8], 1	       287	srec.c	FUNCTION_5	ELSE_1
0x4001551	        0x4183ff20	                          cmp r15d, 0x20	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x4001555	     0xf84b2feffff	                            je 0x400140d	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x400155b	        0x4183ff09	                             cmp r15d, 9	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x400155f	     0xf84a8feffff	                            je 0x400140d	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x4001565	        0x4183ff0a	                           cmp r15d, 0xa	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x4001569	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x400156e	     0xf847ffdffff	                            je 0x40012f3	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x4001574	        0x4183ff0d	                           cmp r15d, 0xd	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x4001578	     0xf8417fbffff	                            je 0x4001095	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x400157e	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4001582	            0x31c9	                            xor ecx, ecx	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4001584	          0x4489fa	                           mov edx, r15d	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4001587	          0x4889df	                            mov rdi, rbx	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x400158a	      0xe8e1f0ffff	                  call sym.srec_bad_byte	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x400158f	      0xe92cfbffff	                           jmp 0x40010c0	       448	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x4001594	         0xf1f4000	                         nop dword [rax]	       448	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x4001598	      0xb804000000	                              mov eax, 4	       482	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x400159d	      0xe9a3fcffff	                           jmp 0x4001245	       482	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40015a2	      0x488b442408	                mov rax, qword [rsp + 8]	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x40015a7	          0x4885c0	                           test rax, rax	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x40015aa	            0x7408	                            je 0x40015b4	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x40015ac	          0x4889c7	                            mov rdi, rax	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_44
0x40015af	      0xe800000000	                          call 0x40015b4	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_44
0x40015b4	    0x41bd01000000	                             mov r13d, 1	       637	srec.c	FUNCTION_6	ELSE_1
0x40015ba	      0xe914fbffff	                           jmp 0x40010d3	       637	srec.c	FUNCTION_6	ELSE_1
0x40015bf	              0x90	                                     nop	       637	srec.c	FUNCTION_6	ELSE_1
0x40015c0	          0x4489fe	                           mov esi, r15d	       637	srec.c	FUNCTION_6	ELSE_1
0x40015c3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       637	srec.c	FUNCTION_6	ELSE_1
0x40015c8	          0x4801f6	                            add rsi, rsi	       637	srec.c	FUNCTION_6	ELSE_1
0x40015cb	      0xe9cbfcffff	                           jmp 0x400129b	       637	srec.c	FUNCTION_6	ELSE_1
0x40015d0	      0x488b742408	                mov rsi, qword [rsp + 8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015d5	          0x4531c9	                            xor r9d, r9d	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015d8	           0xfb606	                   movzx eax, byte [rsi]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015db	         0xfb67e03	               movzx edi, byte [rsi + 3]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015df	         0xfb65602	               movzx edx, byte [rsi + 2]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015e3	     0xfb688000000	                   movzx ecx, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015ea	         0xfb64601	               movzx eax, byte [rsi + 1]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015ee	    0x440fb6870000	                   movzx r8d, byte [rdi]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015f6	     0xfb692000000	                   movzx edx, byte [rdx]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015fd	     0xfb680000000	                   movzx eax, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001604	        0x428d3c00	                     lea edi, [rax + r8]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001608	          0x4101fc	                           add r12d, edi	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400160b	            0x89cf	                            mov edi, ecx	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400160d	          0xc1e104	                              shl ecx, 4	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001610	          0x4189ca	                           mov r10d, ecx	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001613	           0xfb6c8	                           movzx ecx, al	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001616	          0xc1e704	                              shl edi, 4	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001619	        0x428d0411	                    lea eax, [rcx + r10]	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400161d	          0x4101fc	                           add r12d, edi	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001620	            0x89d7	                            mov edi, edx	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001622	          0xc1e704	                              shl edi, 4	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001625	          0x4c09c8	                              or rax, r9	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001628	          0x4401e7	                           add edi, r12d	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400162b	        0x48c1e008	                              shl rax, 8	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400162f	            0xf7d7	                                 not edi	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001631	          0x4889c1	                            mov rcx, rax	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001634	            0x89d0	                            mov eax, edx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001636	        0x410fb6d0	                          movzx edx, r8b	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400163a	          0xc1e004	                              shl eax, 4	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400163d	             0x1d0	                            add eax, edx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400163f	          0x4809c8	                             or rax, rcx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001642	    0x488983a80000	             mov qword [rbx + 0xa8], rax	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001649	         0xfb65604	               movzx edx, byte [rsi + 4]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400164d	        0x400fb6c7	                          movzx eax, dil	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001651	     0xfb692000000	                   movzx edx, byte [rdx]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001658	          0xc1e204	                              shl edx, 4	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400165b	            0x89d1	                            mov ecx, edx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400165d	         0xfb65605	               movzx edx, byte [rsi + 5]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001661	     0xfb692000000	                   movzx edx, byte [rdx]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001668	             0x1ca	                            add edx, ecx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400166a	            0x39d0	                            cmp eax, edx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400166c	     0xf8430ffffff	                            je 0x40015a2	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001672	      0xba05000000	                              mov edx, 5	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x4001677	      0xbe00000000	                              mov esi, 0	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x400167c	      0xbf00000000	                              mov edi, 0	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x4001681	      0xe800000000	                          call 0x4001686	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x4001686	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x400168a	          0x4889c7	                            mov rdi, rax	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x400168d	          0x4889de	                            mov rsi, rbx	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x4001690	            0x31c0	                            xor eax, eax	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x4001692	      0xe800000000	                          call 0x4001697	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x4001697	      0xbf11000000	                           mov edi, 0x11	       617	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x400169c	      0xe800000000	                          call 0x40016a1	       617	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x40016a1	      0xe91afaffff	                           jmp 0x40010c0	       618	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x40016a6	      0x488b742408	                mov rsi, qword [rsp + 8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016ab	          0x4531c9	                            xor r9d, r9d	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016ae	           0xfb606	                   movzx eax, byte [rsi]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016b1	        0x4883c602	                              add rsi, 2	       597	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016b5	     0xfb6b8000000	                   movzx edi, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016bc	         0xfb646ff	               movzx eax, byte [rsi - 1]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016c0	     0xfb690000000	                   movzx edx, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016c7	            0x89f8	                            mov eax, edi	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016c9	          0xc1e704	                              shl edi, 4	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016cc	          0xc1e004	                              shl eax, 4	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016cf	          0x4101d4	                           add r12d, edx	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016d2	          0x4101c4	                           add r12d, eax	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016d5	          0x8d043a	                    lea eax, [rdx + rdi]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016d8	          0x4c09c8	                              or rax, r9	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016db	        0x48c1e008	                              shl rax, 8	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016df	          0x4989c1	                             mov r9, rax	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016e2	      0xe9f1feffff	                           jmp 0x40015d8	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016e7	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016ec	            0x31f6	                            xor esi, esi	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016ee	         0xfb64500	                   movzx eax, byte [rbp]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016f2	        0x4183e901	                              sub r9d, 1	       531	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016f6	        0x4883c502	                              add rbp, 2	       530	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016fa	     0xfb688000000	                   movzx ecx, byte [rax]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001701	         0xfb645ff	               movzx eax, byte [rbp - 1]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001705	     0xfb690000000	                   movzx edx, byte [rax]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400170c	            0x89c8	                            mov eax, ecx	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400170e	          0xc1e104	                              shl ecx, 4	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001711	          0xc1e004	                              shl eax, 4	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001714	          0x4101d4	                           add r12d, edx	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001717	          0x4101c4	                           add r12d, eax	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400171a	          0x8d040a	                    lea eax, [rdx + rcx]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400171d	          0x4809f0	                             or rax, rsi	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001720	        0x48c1e008	                              shl rax, 8	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001724	         0xfb65500	                   movzx edx, byte [rbp]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001728	        0x4883c504	                              add rbp, 4	       539	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400172c	        0x458d79fe	                      lea r15d, [r9 - 2]	       540	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001730	    0x440fb6920000	                  movzx r10d, byte [rdx]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001738	         0xfb655fd	               movzx edx, byte [rbp - 3]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400173c	     0xfb68a000000	                   movzx ecx, byte [rdx]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001743	         0xfb655fe	               movzx edx, byte [rbp - 2]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001747	          0x4489d7	                           mov edi, r10d	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400174a	          0xc1e704	                              shl edi, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400174d	     0xfb6b2000000	                   movzx esi, byte [rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001754	         0xfb655ff	               movzx edx, byte [rbp - 1]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001758	     0xfb692000000	                   movzx edx, byte [rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400175f	        0x448d0411	                    lea r8d, [rcx + rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001763	          0x4501c4	                           add r12d, r8d	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001766	          0x4589d0	                           mov r8d, r10d	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001769	        0x448d140f	                   lea r10d, [rdi + rcx]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400176d	        0x41c1e004	                              shl r8d, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001771	          0x4501e0	                           add r8d, r12d	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001774	          0x4909c2	                             or r10, rax	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001777	          0x4189f4	                           mov r12d, esi	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400177a	          0xc1e604	                              shl esi, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400177d	        0x41c1e404	                             shl r12d, 4	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001781	        0x49c1e208	                              shl r10, 8	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001785	             0x1f2	                            add edx, esi	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001787	          0x4501c4	                           add r12d, r8d	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400178a	          0x4909d2	                             or r10, rdx	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400178d	          0x4d85f6	                           test r14, r14	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001790	            0x7414	                            je 0x40017a6	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001792	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001796	          0x4889c2	                            mov rdx, rax	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001799	        0x49035628	             add rdx, qword [r14 + 0x28]	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x400179d	          0x4939d2	                            cmp r10, rdx	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40017a0	     0xf8448020000	                            je 0x40019ee	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40017a6	    0x448b83a00000	            mov r8d, dword [rbx + 0xa0] 	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017ad	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017b2	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017b7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017bc	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017c1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017c3	      0x4c89542428	             mov qword [rsp + 0x28], r10	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017c8	        0x44890c24	                    mov dword [rsp], r9d	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017cc	        0x4183c001	                              add r8d, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017d0	      0xe800000000	                          call 0x40017d5	        33	stdio2.h	FUNCTION_38	CALL_1
0x40017d5	        0x448b0c24	                    mov r9d, dword [rsp]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017d9	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017de	      0x488d542450	                   lea rdx, [rsp + 0x50]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017e3	            0x8b0a	                    mov ecx, dword [rdx]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017e5	        0x4883c204	                              add rdx, 4	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017e9	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017ef	            0xf7d1	                                 not ecx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017f1	            0x21c8	                            and eax, ecx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017f3	      0x2580808080	                     and eax, 0x80808080	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017f8	            0x74e9	                            je 0x40017e3	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017fa	            0x89c1	                            mov ecx, eax	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40017fc	          0x4889df	                            mov rdi, rbx	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x40017ff	      0x44894c2428	             mov dword [rsp + 0x28], r9d	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4001804	          0xc1e910	                           shr ecx, 0x10	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001807	      0xa980800000	                        test eax, 0x8080	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400180c	        0x4c891424	                    mov qword [rsp], r10	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001810	           0xf44c1	                          cmove eax, ecx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001813	        0x488d4a02	                      lea rcx, [rdx + 2]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001817	            0x89c6	                            mov esi, eax	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001819	        0x480f44d1	                          cmove rdx, rcx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400181d	          0x4000c6	                             add sil, al	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001820	      0x488d442450	                   lea rax, [rsp + 0x50]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001825	        0x4883da03	                              sbb rdx, 3	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001829	          0x4829c2	                            sub rdx, rax	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400182c	        0x488d7201	                      lea rsi, [rdx + 1]	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4001830	      0xe800000000	                          call 0x4001835	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4001835	      0x488d742450	                   lea rsi, [rsp + 0x50]	       110	string3.h	FUNCTION_32	CALL_3
0x400183a	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_32	CALL_3
0x400183d	      0xe800000000	                          call 0x4001842	       110	string3.h	FUNCTION_32	CALL_3
0x4001842	      0xba03010000	                          mov edx, 0x103	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4001847	          0x4889c6	                            mov rsi, rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x400184a	          0x4889df	                            mov rdi, rbx	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x400184d	      0xe800000000	                          call 0x4001852	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4001852	          0x4885c0	                           test rax, rax	       562	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x4001855	          0x4989c6	                            mov r14, rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4001858	     0xf8462f8ffff	                            je 0x40010c0	       562	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x400185e	        0x4c8b1424	                    mov r10, qword [rsp]	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001862	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001867	        0x4c895028	             mov qword [rax + 0x28], r10	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x400186b	        0x4c895030	             mov qword [rax + 0x30], r10	       565	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x400186f	          0x4489f8	                           mov eax, r15d	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001872	        0x49894638	             mov qword [r14 + 0x38], rax	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001876	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x400187b	        0x4883e801	                              sub rax, 1	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x400187f	    0x498986900000	             mov qword [r14 + 0x90], rax	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001886	        0x418d41fd	                       lea eax, [r9 - 3]	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x400188a	          0x4585ff	                         test r15d, r15d	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x400188d	      0x488d4c4502	              lea rcx, [rbp + rax*2 + 2]	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001892	     0xf849b010000	                            je 0x4001a33	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001898	     0xf1f84000000	                   nop dword [rax + rax]	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018a0	         0xfb64500	                   movzx eax, byte [rbp]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018a4	         0xfb65501	               movzx edx, byte [rbp + 1]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018a8	        0x4883c502	                              add rbp, 2	       573	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018ac	     0xfb680000000	                   movzx eax, byte [rax]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018b3	          0xc1e004	                              shl eax, 4	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018b6	     0x28200000000	                      add al, byte [rdx]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018bc	          0x4101c4	                           add r12d, eax	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018bf	          0x4839cd	                            cmp rbp, rcx	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018c2	            0x75dc	                           jne 0x40018a0	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40018c4	           0xfb611	                   movzx edx, byte [rcx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018c7	          0x41f7d4	                                not r12d	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018ca	        0x410fb6c4	                         movzx eax, r12b	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018ce	     0xfb692000000	                   movzx edx, byte [rdx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018d5	          0xc1e204	                              shl edx, 4	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018d8	            0x89d6	                            mov esi, edx	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018da	         0xfb65101	               movzx edx, byte [rcx + 1]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018de	     0xfb692000000	                   movzx edx, byte [rdx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018e5	             0x1f2	                            add edx, esi	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018e7	            0x39d0	                            cmp eax, edx	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018e9	     0xf84a6f7ffff	                            je 0x4001095	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018ef	      0xe97efdffff	                           jmp 0x4001672	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018f4	         0xf1f4000	                         nop dword [rax]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40018f8	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40018fd	            0x31c0	                            xor eax, eax	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40018ff	      0xe920feffff	                           jmp 0x4001724	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001904	          0x4531f6	                          xor r14d, r14d	       518	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001907	      0xe989f7ffff	                           jmp 0x4001095	       627	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400190c	      0x488b742408	                mov rsi, qword [rsp + 8]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001911	           0xfb606	                   movzx eax, byte [rsi]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001914	        0x4883c602	                              add rsi, 2	       592	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001918	     0xfb690000000	                   movzx edx, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400191f	         0xfb646ff	               movzx eax, byte [rsi - 1]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001923	     0xfb680000000	                   movzx eax, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400192a	            0x89d1	                            mov ecx, edx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400192c	          0xc1e204	                              shl edx, 4	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400192f	          0xc1e104	                              shl ecx, 4	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001932	          0x4101c4	                           add r12d, eax	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001935	             0x1d0	                            add eax, edx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001937	        0x48c1e008	                              shl rax, 8	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400193b	          0x4101cc	                           add r12d, ecx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400193e	          0x4989c1	                             mov r9, rax	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001941	      0xe968fdffff	                           jmp 0x40016ae	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001946	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400194b	        0x458d4ffe	                      lea r9d, [r15 - 2]	       525	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400194f	           0xfb601	                   movzx eax, byte [rcx]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001952	        0x488d6902	                      lea rbp, [rcx + 2]	       524	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001956	     0xfb690000000	                   movzx edx, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400195d	         0xfb64101	               movzx eax, byte [rcx + 1]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001961	     0xfb680000000	                   movzx eax, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001968	          0x4189d4	                           mov r12d, edx	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400196b	          0xc1e204	                              shl edx, 4	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400196e	        0x41c1e404	                             shl r12d, 4	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001972	        0x428d3438	                    lea esi, [rax + r15]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001976	             0x1d0	                            add eax, edx	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001978	        0x48c1e008	                              shl rax, 8	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400197c	          0x4101f4	                           add r12d, esi	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400197f	          0x4889c6	                            mov rsi, rax	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001982	      0xe967fdffff	                           jmp 0x40016ee	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001987	    0x660f1f840000	                    nop word [rax + rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001990	      0x488d6c2450	                   lea rbp, [rsp + 0x50]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4001995	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x400199a	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_38	CALL_1
0x400199f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x40019a4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_38	CALL_1
0x40019a6	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_38	CALL_1
0x40019a9	      0xe800000000	                          call 0x40019ae	        33	stdio2.h	FUNCTION_38	CALL_1
0x40019ae	      0xe9aef7ffff	                           jmp 0x4001161	        33	stdio2.h	FUNCTION_38	CALL_1
0x40019b3	      0x488d7c243f	                   lea rdi, [rsp + 0x3f]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40019b8	          0x4889da	                            mov rdx, rbx	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40019bb	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40019c0	      0xe800000000	                          call 0x40019c5	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40019c5	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40019c9	            0x743b	                            je 0x4001a06	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x40019cb	      0xe800000000	                          call 0x40019d0	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x40019d0	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x40019d4	            0x31c9	                            xor ecx, ecx	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x40019d6	          0x83f812	                           cmp eax, 0x12	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x40019d9	           0xf95c1	                                setne cl	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x40019dc	      0xbaffffffff	                     mov edx, 0xffffffff	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x40019e1	          0x4889df	                            mov rdi, rbx	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x40019e4	      0xe887ecffff	                  call sym.srec_bad_byte	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x40019e9	      0xe9d2f6ffff	                           jmp 0x40010c0	       420	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x40019ee	          0x4489fa	                           mov edx, r15d	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40019f1	          0x4801d0	                            add rax, rdx	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40019f4	        0x49894638	             mov qword [r14 + 0x38], rax	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40019f8	      0xe989feffff	                           jmp 0x4001886	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40019fd	        0x48894218	             mov qword [rdx + 0x18], rax	       281	srec.c	FUNCTION_5	IF_2
0x4001a01	      0xe939fbffff	                           jmp 0x400153f	       281	srec.c	FUNCTION_5	IF_2
0x4001a06	    0x440fb67c243f	          movzx r15d, byte [rsp + 0x3f] 	       229	srec.c	FUNCTION_3
0x4001a0c	      0xe95bf9ffff	                           jmp 0x400136c	       229	srec.c	FUNCTION_3
0x4001a11	    0xf68409000000	            test byte [rcx + rcx], 0x10 	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4001a19	     0xf8471ffffff	                            je 0x4001990	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4001a1f	      0x4488442450	              mov byte [rsp + 0x50], r8b	       255	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x4001a24	      0xc644245100	                mov byte [rsp + 0x51], 0	       256	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x4001a29	      0x488d6c2450	                   lea rbp, [rsp + 0x50]	       256	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x4001a2e	      0xe92ef7ffff	                           jmp 0x4001161	       256	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x4001a33	          0x4889e9	                            mov rcx, rbp	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001a36	      0xe989feffff	                           jmp 0x40018c4	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001a3b	      0xba05000000	                              mov edx, 5	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a40	      0xbe00000000	                              mov esi, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a45	      0xbf00000000	                              mov edi, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a4a	      0xe800000000	                          call 0x4001a4f	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a4f	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a53	          0x4889c7	                            mov rdi, rax	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a56	          0x4489f9	                           mov ecx, r15d	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a59	          0x4889de	                            mov rsi, rbx	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a5c	            0x31c0	                            xor eax, eax	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a5e	      0xe800000000	                          call 0x4001a63	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x4001a63	      0xbf11000000	                           mov edi, 0x11	       490	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_29
0x4001a68	      0xe800000000	                          call 0x4001a6d	       490	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_29
0x4001a6d	      0xe94ef6ffff	                           jmp 0x40010c0	       491	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x4001a72	      0xe800000000	                          call 0x4001a77	       645	srec.c	FUNCTION_6	ELSE_1
srec_get_symtab_upper_bound	WHILE,0:DO,0:IF,0:CALL,1:ELSE,0:SWITCH,0:functions,0:FOR,0	4
0x4000050	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	      1185	srec.c	FUNCTION_22	CALL_1
0x4000056	          0x83c001	                              add eax, 1	      1185	srec.c	FUNCTION_22	CALL_1
0x4000059	        0x48c1e003	                              shl rax, 3	      1185	srec.c	FUNCTION_22	CALL_1
0x400005d	              0xc3	                                     ret	      1186	srec.c	FUNCTION_22
srec_object_p	WHILE,0:DO,0:IF,5:CALL,7:ELSE,0:SWITCH,0:functions,0:FOR,0	90
0x4001a80	              0x55	                                push rbp	       651	srec.c	FUNCTION_7
0x4001a81	              0x53	                                push rbx	       651	srec.c	FUNCTION_7
0x4001a82	          0x4889fb	                            mov rbx, rdi	       651	srec.c	FUNCTION_7
0x4001a85	        0x4883ec18	                           sub rsp, 0x18	       651	srec.c	FUNCTION_7
0x4001a89	    0x8b0d00000000	            mov ecx, dword [0x04001a8f] 	       183	srec.c	FUNCTION_1	IF_1
0x4001a8f	    0x64488b042528	                mov rax, qword fs:[0x28]	       651	srec.c	FUNCTION_7
0x4001a98	      0x4889442408	                mov qword [rsp + 8], rax	       651	srec.c	FUNCTION_7
0x4001a9d	            0x31c0	                            xor eax, eax	       651	srec.c	FUNCTION_7
0x4001a9f	            0x85c9	                           test ecx, ecx	       183	srec.c	FUNCTION_1	IF_1
0x4001aa1	     0xf8421010000	                            je 0x4001bc8	       183	srec.c	FUNCTION_1	IF_1
0x4001aa7	            0x31d2	                            xor edx, edx	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001aa9	            0x31f6	                            xor esi, esi	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001aab	          0x4889df	                            mov rdi, rbx	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001aae	      0xe800000000	                          call 0x4001ab3	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001ab3	            0x85c0	                           test eax, eax	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001ab5	     0xf85ef000000	                           jne 0x4001baa	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001abb	          0x4889da	                            mov rdx, rbx	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001abe	      0xbe04000000	                              mov esi, 4	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001ac3	          0x4889e7	                            mov rdi, rsp	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001ac6	      0xe800000000	                          call 0x4001acb	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001acb	        0x4883f804	                              cmp rax, 4	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001acf	     0xf85d5000000	                           jne 0x4001baa	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001ad5	        0x803c2453	                    cmp byte [rsp], 0x53	       661	srec.c	FUNCTION_7	IF_2
0x4001ad9	     0xf85c1000000	                           jne 0x4001ba0	       661	srec.c	FUNCTION_7	IF_2
0x4001adf	       0xfb6442401	               movzx eax, byte [rsp + 1]	       661	srec.c	FUNCTION_7	IF_2
0x4001ae4	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x4001aeb	     0xf84af000000	                            je 0x4001ba0	       661	srec.c	FUNCTION_7	IF_2
0x4001af1	       0xfb6442402	               movzx eax, byte [rsp + 2]	       661	srec.c	FUNCTION_7	IF_2
0x4001af6	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x4001afd	     0xf849d000000	                            je 0x4001ba0	       661	srec.c	FUNCTION_7	IF_2
0x4001b03	       0xfb6442403	               movzx eax, byte [rsp + 3]	       661	srec.c	FUNCTION_7	IF_2
0x4001b08	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x4001b0f	     0xf848b000000	                            je 0x4001ba0	       661	srec.c	FUNCTION_7	IF_2
0x4001b15	    0x8b1500000000	            mov edx, dword [0x04001b1b] 	       183	srec.c	FUNCTION_1	IF_1
0x4001b1b	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	       667	srec.c	FUNCTION_7
0x4001b22	            0x85d2	                           test edx, edx	       183	srec.c	FUNCTION_1	IF_1
0x4001b24	     0xf84de000000	                            je 0x4001c08	       183	srec.c	FUNCTION_1	IF_1
0x4001b2a	      0xbe30000000	                           mov esi, 0x30	       199	srec.c	FUNCTION_2	CALL_2
0x4001b2f	          0x4889df	                            mov rdi, rbx	       199	srec.c	FUNCTION_2	CALL_2
0x4001b32	      0xe800000000	                          call 0x4001b37	       199	srec.c	FUNCTION_2	CALL_2
0x4001b37	          0x4885c0	                           test rax, rax	       200	srec.c	FUNCTION_2	IF_1
0x4001b3a	     0xf84a0000000	                            je 0x4001be0	       200	srec.c	FUNCTION_2	IF_1
0x4001b40	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       203	srec.c	FUNCTION_2
0x4001b47	          0x4889df	                            mov rdi, rbx	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001b4a	    0xc74010010000	               mov dword [rax + 0x10], 1	       204	srec.c	FUNCTION_2
0x4001b51	    0x48c700000000	                      mov qword [rax], 0	       205	srec.c	FUNCTION_2
0x4001b58	    0x48c740080000	                  mov qword [rax + 8], 0	       206	srec.c	FUNCTION_2
0x4001b60	    0x48c740180000	               mov qword [rax + 0x18], 0	       207	srec.c	FUNCTION_2
0x4001b68	    0x48c740200000	               mov qword [rax + 0x20], 0	       208	srec.c	FUNCTION_2
0x4001b70	    0x48c740280000	               mov qword [rax + 0x28], 0	       209	srec.c	FUNCTION_2
0x4001b78	      0xe8c3f4ffff	                      call sym.srec_scan	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001b7d	            0x85c0	                           test eax, eax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001b7f	            0x745f	                            je 0x4001be0	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x4001b81	    0x8b83b8000000	            mov eax, dword [rbx + 0xb8] 	       676	srec.c	FUNCTION_7	IF_5
0x4001b87	            0x85c0	                           test eax, eax	       676	srec.c	FUNCTION_7	IF_5
0x4001b89	            0x7407	                            je 0x4001b92	       676	srec.c	FUNCTION_7	IF_5
0x4001b8b	    0x814b44000200	            or dword [rbx + 0x44], 0x200	       677	srec.c	FUNCTION_7	IF_5
0x4001b92	        0x488b4308	                mov rax, qword [rbx + 8]	       679	srec.c	FUNCTION_7
0x4001b96	            0xeb14	                           jmp 0x4001bac	       679	srec.c	FUNCTION_7
0x4001b98	     0xf1f84000000	                   nop dword [rax + rax]	       679	srec.c	FUNCTION_7
0x4001ba0	      0xbf03000000	                              mov edi, 3	       663	srec.c	FUNCTION_7	IF_2	CALL_4
0x4001ba5	      0xe800000000	                          call 0x4001baa	       663	srec.c	FUNCTION_7	IF_2	CALL_4
0x4001baa	            0x31c0	                            xor eax, eax	       664	srec.c	FUNCTION_7	IF_2
0x4001bac	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       680	srec.c	FUNCTION_7
0x4001bb1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       680	srec.c	FUNCTION_7
0x4001bba	            0x7560	                           jne 0x4001c1c	       680	srec.c	FUNCTION_7
0x4001bbc	        0x4883c418	                           add rsp, 0x18	       680	srec.c	FUNCTION_7
0x4001bc0	              0x5b	                                 pop rbx	       680	srec.c	FUNCTION_7
0x4001bc1	              0x5d	                                 pop rbp	       680	srec.c	FUNCTION_7
0x4001bc2	              0xc3	                                     ret	       680	srec.c	FUNCTION_7
0x4001bc3	       0xf1f440000	                   nop dword [rax + rax]	       680	srec.c	FUNCTION_7
0x4001bc8	    0xc70500000000	               mov dword [0x04001bd2], 1	       185	srec.c	FUNCTION_1	IF_1
0x4001bd2	      0xe800000000	                          call 0x4001bd7	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x4001bd7	      0xe9cbfeffff	                           jmp 0x4001aa7	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x4001bdc	         0xf1f4000	                         nop dword [rax]	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x4001be0	    0x488bb3f80000	            mov rsi, qword [rbx + 0xf8] 	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001be7	          0x4885f6	                           test rsi, rsi	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001bea	            0x740d	                            je 0x4001bf9	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001bec	          0x4839f5	                            cmp rbp, rsi	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001bef	            0x7408	                            je 0x4001bf9	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001bf1	          0x4889df	                            mov rdi, rbx	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x4001bf4	      0xe800000000	                          call 0x4001bf9	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x4001bf9	    0x4889abf80000	             mov qword [rbx + 0xf8], rbp	       672	srec.c	FUNCTION_7	IF_3
0x4001c00	            0x31c0	                            xor eax, eax	       673	srec.c	FUNCTION_7	IF_3
0x4001c02	            0xeba8	                           jmp 0x4001bac	       673	srec.c	FUNCTION_7	IF_3
0x4001c04	         0xf1f4000	                         nop dword [rax]	       673	srec.c	FUNCTION_7	IF_3
0x4001c08	    0xc70500000000	               mov dword [0x04001c12], 1	       185	srec.c	FUNCTION_1	IF_1
0x4001c12	      0xe800000000	                          call 0x4001c17	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x4001c17	      0xe90effffff	                           jmp 0x4001b2a	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x4001c1c	      0xe800000000	                          call 0x4001c21	       680	srec.c	FUNCTION_7
srec_canonicalize_symtab	WHILE,0:DO,0:IF,2:CALL,2:ELSE,0:SWITCH,0:functions,0:FOR,2	57
0x4000060	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1197	srec.c	FUNCTION_23
0x4000067	            0x4154	                                push r12	      1192	srec.c	FUNCTION_23
0x4000069	              0x55	                                push rbp	      1192	srec.c	FUNCTION_23
0x400006a	              0x53	                                push rbx	      1192	srec.c	FUNCTION_23
0x400006b	          0x4889f3	                            mov rbx, rsi	      1192	srec.c	FUNCTION_23
0x400006e	    0x8bafb8000000	            mov ebp, dword [rdi + 0xb8] 	      1193	srec.c	FUNCTION_23	CALL_1
0x4000074	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1197	srec.c	FUNCTION_23
0x4000078	          0x4885c0	                           test rax, rax	      1198	srec.c	FUNCTION_23	IF_1
0x400007b	            0x7505	                           jne 0x4000082	      1198	srec.c	FUNCTION_23	IF_1
0x400007d	          0x4885ed	                           test rbp, rbp	      1198	srec.c	FUNCTION_23	IF_1
0x4000080	            0x753e	                           jne 0x40000c0	      1198	srec.c	FUNCTION_23	IF_1
0x4000082	          0x4885ed	                           test rbp, rbp	      1221	srec.c	FUNCTION_23	FOR_2
0x4000085	            0x7420	                            je 0x40000a7	      1221	srec.c	FUNCTION_23	FOR_2
0x4000087	            0x31d2	                            xor edx, edx	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000089	     0xf1f80000000	                         nop dword [rax]	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000090	          0x8d4a01	                      lea ecx, [rdx + 1]	      1221	srec.c	FUNCTION_23	FOR_2
0x4000093	        0x4883c308	                              add rbx, 8	      1222	srec.c	FUNCTION_23	FOR_2
0x4000097	        0x488943f8	                mov qword [rbx - 8], rax	      1222	srec.c	FUNCTION_23	FOR_2
0x400009b	        0x4883c030	                           add rax, 0x30	      1222	srec.c	FUNCTION_23	FOR_2
0x400009f	          0x4839cd	                            cmp rbp, rcx	      1221	srec.c	FUNCTION_23	FOR_2
0x40000a2	          0x4889ca	                            mov rdx, rcx	      1221	srec.c	FUNCTION_23	FOR_2
0x40000a5	            0x77e9	                            ja 0x4000090	      1221	srec.c	FUNCTION_23	FOR_2
0x40000a7	    0x48c703000000	                      mov qword [rbx], 0	      1223	srec.c	FUNCTION_23
0x40000ae	          0x4889e8	                            mov rax, rbp	      1225	srec.c	FUNCTION_23
0x40000b1	              0x5b	                                 pop rbx	      1226	srec.c	FUNCTION_23
0x40000b2	              0x5d	                                 pop rbp	      1226	srec.c	FUNCTION_23
0x40000b3	            0x415c	                                 pop r12	      1226	srec.c	FUNCTION_23
0x40000b5	              0xc3	                                     ret	      1226	srec.c	FUNCTION_23
0x40000b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1226	srec.c	FUNCTION_23
0x40000c0	      0x488d746d00	                  lea rsi, [rbp + rbp*2]	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40000c5	          0x4989fc	                            mov r12, rdi	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40000c8	        0x48c1e604	                              shl rsi, 4	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40000cc	      0xe800000000	                          call 0x40000d1	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x40000d1	          0x4885c0	                           test rax, rax	      1204	srec.c	FUNCTION_23	IF_1	IF_2
0x40000d4	            0x7455	                            je 0x400012b	      1204	srec.c	FUNCTION_23	IF_1	IF_2
0x40000d6	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	      1206	srec.c	FUNCTION_23	IF_1
0x40000de	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000e2	        0x48894228	             mov qword [rdx + 0x28], rax	      1206	srec.c	FUNCTION_23	IF_1
0x40000e6	          0x4885c9	                           test rcx, rcx	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000e9	            0x749c	                            je 0x4000087	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000eb	          0x4889c2	                            mov rdx, rax	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000ee	            0x6690	                                     nop	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f0	          0x4c8922	                    mov qword [rdx], r12	      1212	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f3	        0x488b7108	                mov rsi, qword [rcx + 8]	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f7	        0x4883c230	                           add rdx, 0x30	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000fb	        0x488972d8	             mov qword [rdx - 0x28], rsi	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000ff	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000103	    0x48c742f00000	               mov qword [rdx - 0x10], 0	      1216	srec.c	FUNCTION_23	IF_1	FOR_1
0x400010b	    0x48c742f80000	                  mov qword [rdx - 8], 0	      1217	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000113	          0x488b09	                    mov rcx, qword [rcx]	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000116	    0xc742e8020000	               mov dword [rdx - 0x18], 2	      1215	srec.c	FUNCTION_23	IF_1	FOR_1
0x400011d	        0x488972e0	             mov qword [rdx - 0x20], rsi	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000121	          0x4885c9	                           test rcx, rcx	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000124	            0x75ca	                           jne 0x40000f0	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x4000126	      0xe95cffffff	                           jmp 0x4000087	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x400012b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1205	srec.c	FUNCTION_23	IF_1	IF_2
0x4000132	      0xe97affffff	                           jmp 0x40000b1	      1205	srec.c	FUNCTION_23	IF_1	IF_2
internal_srec_write_object_contents	WHILE,1:DO,0:IF,4:CALL,4:ELSE,0:SWITCH,0:functions,0:FOR,0	216
0x40008a0	            0x4157	                                push r15	      1136	srec.c	FUNCTION_18
0x40008a2	            0x4156	                                push r14	      1136	srec.c	FUNCTION_18
0x40008a4	          0x4889f8	                            mov rax, rdi	      1136	srec.c	FUNCTION_18
0x40008a7	            0x4155	                                push r13	      1136	srec.c	FUNCTION_18
0x40008a9	            0x4154	                                push r12	      1136	srec.c	FUNCTION_18
0x40008ab	              0x55	                                push rbp	      1136	srec.c	FUNCTION_18
0x40008ac	              0x53	                                push rbx	      1136	srec.c	FUNCTION_18
0x40008ad	        0x4883ec58	                           sub rsp, 0x58	      1136	srec.c	FUNCTION_18
0x40008b1	    0x4c8ba8f80000	            mov r13, qword [rax + 0xf8] 	      1137	srec.c	FUNCTION_18
0x40008b8	        0x48893c24	                    mov qword [rsp], rdi	      1136	srec.c	FUNCTION_18
0x40008bc	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      1136	srec.c	FUNCTION_18
0x40008c5	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      1136	srec.c	FUNCTION_18
0x40008ca	            0x31ff	                            xor edi, edi	      1136	srec.c	FUNCTION_18
0x40008cc	            0x85f6	                           test esi, esi	      1140	srec.c	FUNCTION_18	IF_1
0x40008ce	            0x740e	                            je 0x40008de	      1140	srec.c	FUNCTION_18	IF_1
0x40008d0	    0x8b98b8000000	            mov ebx, dword [rax + 0xb8] 	      1084	srec.c	FUNCTION_17	CALL_1
0x40008d6	            0x85db	                           test ebx, ebx	      1086	srec.c	FUNCTION_17	IF_1
0x40008d8	     0xf8550010000	                           jne 0x4000a2e	      1086	srec.c	FUNCTION_17	IF_1
0x40008de	        0x4c8b3c24	                    mov r15, qword [rsp]	      1018	srec.c	FUNCTION_14	CALL_1
0x40008e2	          0x498b1f	                    mov rbx, qword [r15]	      1018	srec.c	FUNCTION_14	CALL_1
0x40008e5	          0x4889df	                            mov rdi, rbx	      1018	srec.c	FUNCTION_14	CALL_1
0x40008e8	      0xe800000000	                          call 0x40008ed	      1018	srec.c	FUNCTION_14	CALL_1
0x40008ed	      0xba28000000	                           mov edx, 0x28	      1024	srec.c	FUNCTION_14	CALL_2
0x40008f2	          0x83f828	                           cmp eax, 0x28	      1024	srec.c	FUNCTION_14	CALL_2
0x40008f5	          0x4889de	                            mov rsi, rbx	      1024	srec.c	FUNCTION_14	CALL_2
0x40008f8	           0xf46d0	                         cmovbe edx, eax	      1024	srec.c	FUNCTION_14	CALL_2
0x40008fb	          0x4c89ff	                            mov rdi, r15	      1024	srec.c	FUNCTION_14	CALL_2
0x40008fe	            0x89d2	                            mov edx, edx	      1024	srec.c	FUNCTION_14	CALL_2
0x4000900	          0x4801da	                            add rdx, rbx	      1024	srec.c	FUNCTION_14	CALL_2
0x4000903	      0xe838feffff	  call sym.srec_write_record.constprop.7	      1024	srec.c	FUNCTION_14	CALL_2
0x4000908	            0x85c0	                           test eax, eax	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x400090a	     0xf84a7000000	                            je 0x40009b7	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x4000910	        0x4d8b7500	                    mov r14, qword [r13]	      1150	srec.c	FUNCTION_18
0x4000914	          0x4d85f6	                           test r14, r14	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000917	     0xf84cf000000	                            je 0x40009ec	      1152	srec.c	FUNCTION_18	WHILE_1
0x400091d	           0xf1f00	                         nop dword [rax]	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000920	    0x8b0500000000	            mov eax, dword [0x04000926] 	      1043	srec.c	FUNCTION_15	IF_1
0x4000926	        0x498b4e08	                mov rcx, qword [r14 + 8]	      1035	srec.c	FUNCTION_15
0x400092a	            0x85c0	                           test eax, eax	      1043	srec.c	FUNCTION_15	IF_1
0x400092c	     0xf85de000000	                           jne 0x4000a10	      1043	srec.c	FUNCTION_15	IF_1
0x4000932	    0xc70500000000	               mov dword [0x0400093c], 1	      1044	srec.c	FUNCTION_15	IF_1
0x400093c	      0xb801000000	                              mov eax, 1	      1044	srec.c	FUNCTION_15	IF_1
0x4000941	        0x498b5e18	            mov rbx, qword [r14 + 0x18] 	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000945	          0x4885db	                           test rbx, rbx	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000948	     0xf8492000000	                            je 0x40009e0	      1048	srec.c	FUNCTION_15	WHILE_1
0x400094e	            0x31ed	                            xor ebp, ebp	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000950	            0xeb1f	                           jmp 0x4000971	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000952	    0x660f1f440000	                    nop word [rax + rax]	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000958	        0x8d441d00	                    lea eax, [rbp + rbx]	      1065	srec.c	FUNCTION_15	WHILE_1
0x400095c	        0x498b5e18	            mov rbx, qword [r14 + 0x18] 	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000960	          0x4889c5	                            mov rbp, rax	      1065	srec.c	FUNCTION_15	WHILE_1
0x4000963	          0x4839c3	                            cmp rbx, rax	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000966	            0x7678	                           jbe 0x40009e0	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000968	    0x8b0500000000	            mov eax, dword [0x0400096e] 	      1048	srec.c	FUNCTION_15	WHILE_1
0x400096e	          0x4c89e1	                            mov rcx, r12	      1066	srec.c	FUNCTION_15	WHILE_1
0x4000971	        0x488b3c24	                    mov rdi, qword [rsp]	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000975	            0x29eb	                            sub ebx, ebp	      1051	srec.c	FUNCTION_15	WHILE_1
0x4000977	      0x48894c2408	                mov qword [rsp + 8], rcx	      1051	srec.c	FUNCTION_15	WHILE_1
0x400097c	            0x39c3	                            cmp ebx, eax	      1051	srec.c	FUNCTION_15	WHILE_1
0x400097e	        0x4d8b7e10	            mov r15, qword [r14 + 0x10] 	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000982	           0xf47d8	                          cmova ebx, eax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000985	      0xe800000000	                          call 0x400098a	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x400098a	            0x31d2	                            xor edx, edx	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x400098c	            0x89c6	                            mov esi, eax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x400098e	            0x89e8	                            mov eax, ebp	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000990	            0xf7f6	                                 div esi	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000992	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000997	          0x4189d9	                            mov r9d, ebx	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x400099a	        0x418b7510	            mov esi, dword [r13 + 0x10] 	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x400099e	        0x488b3c24	                    mov rdi, qword [rsp]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x40009a2	        0x4e8d2409	                     lea r12, [rcx + r9]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x40009a6	            0x89c2	                            mov edx, eax	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x40009a8	          0x4d89e0	                             mov r8, r12	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x40009ab	          0x4c01fa	                            add rdx, r15	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x40009ae	      0xe87df9ffff	              call sym.srec_write_record	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x40009b3	            0x85c0	                           test eax, eax	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x40009b5	            0x75a1	                           jne 0x4000958	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x40009b7	            0x31c0	                            xor eax, eax	      1143	srec.c	FUNCTION_18	IF_1	IF_2
0x40009b9	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1159	srec.c	FUNCTION_18
0x40009be	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1159	srec.c	FUNCTION_18
0x40009c7	     0xf850f020000	                           jne 0x4000bdc	      1159	srec.c	FUNCTION_18
0x40009cd	        0x4883c458	                           add rsp, 0x58	      1159	srec.c	FUNCTION_18
0x40009d1	              0x5b	                                 pop rbx	      1159	srec.c	FUNCTION_18
0x40009d2	              0x5d	                                 pop rbp	      1159	srec.c	FUNCTION_18
0x40009d3	            0x415c	                                 pop r12	      1159	srec.c	FUNCTION_18
0x40009d5	            0x415d	                                 pop r13	      1159	srec.c	FUNCTION_18
0x40009d7	            0x415e	                                 pop r14	      1159	srec.c	FUNCTION_18
0x40009d9	            0x415f	                                 pop r15	      1159	srec.c	FUNCTION_18
0x40009db	              0xc3	                                     ret	      1159	srec.c	FUNCTION_18
0x40009dc	         0xf1f4000	                         nop dword [rax]	      1159	srec.c	FUNCTION_18
0x40009e0	          0x4d8b36	                    mov r14, qword [r14]	      1156	srec.c	FUNCTION_18	WHILE_1
0x40009e3	          0x4d85f6	                           test r14, r14	      1152	srec.c	FUNCTION_18	WHILE_1
0x40009e6	     0xf8534ffffff	                           jne 0x4000920	      1152	srec.c	FUNCTION_18	WHILE_1
0x40009ec	        0x488b0424	                    mov rax, qword [rsp]	      1075	srec.c	FUNCTION_16	CALL_1
0x40009f0	      0xbe0a000000	                            mov esi, 0xa	      1075	srec.c	FUNCTION_16	CALL_1
0x40009f5	        0x412b7510	             sub esi, dword [r13 + 0x10]	      1075	srec.c	FUNCTION_16	CALL_1
0x40009f9	          0x4531c0	                            xor r8d, r8d	      1075	srec.c	FUNCTION_16	CALL_1
0x40009fc	            0x31c9	                            xor ecx, ecx	      1075	srec.c	FUNCTION_16	CALL_1
0x40009fe	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      1075	srec.c	FUNCTION_16	CALL_1
0x4000a05	          0x4889c7	                            mov rdi, rax	      1075	srec.c	FUNCTION_16	CALL_1
0x4000a08	      0xe823f9ffff	              call sym.srec_write_record	      1075	srec.c	FUNCTION_16	CALL_1
0x4000a0d	            0xebaa	                           jmp 0x40009b9	      1158	srec.c	FUNCTION_18	CALL_4
0x4000a0f	              0x90	                                     nop	      1158	srec.c	FUNCTION_18	CALL_4
0x4000a10	      0xbafd000000	                           mov edx, 0xfd	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000a15	        0x412b5510	             sub edx, dword [r13 + 0x10]	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000a19	            0x39d0	                            cmp eax, edx	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000a1b	     0xf8620ffffff	                           jbe 0x4000941	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000a21	    0x891500000000	            mov dword [0x04000a27], edx 	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000a27	            0x89d0	                            mov eax, edx	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000a29	      0xe913ffffff	                           jmp 0x4000941	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000a2e	          0x488b38	                    mov rdi, qword [rax]	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a31	          0x4989c7	                            mov r15, rax	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x4000a34	    0x488ba8b00000	            mov rbp, qword [rax + 0xb0] 	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x4000a3b	      0xe800000000	                          call 0x4000a40	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a40	          0x4c89fa	                            mov rdx, r15	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a43	      0xbe03000000	                              mov esi, 3	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a48	      0xbf00000000	                              mov edi, 0	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a4d	          0x4989c6	                            mov r14, rax	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a50	      0xe800000000	                          call 0x4000a55	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a55	        0x4883f803	                              cmp rax, 3	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a59	     0xf8558ffffff	                           jne 0x40009b7	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a5f	        0x488b0424	                    mov rax, qword [rsp]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a63	          0x4c89f6	                            mov rsi, r14	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a66	          0x488b38	                    mov rdi, qword [rax]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a69	          0x4889c2	                            mov rdx, rax	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a6c	      0xe800000000	                          call 0x4000a71	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a71	          0x4939c6	                            cmp r14, rax	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a74	     0xf853dffffff	                           jne 0x40009b7	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a7a	        0x488b1424	                    mov rdx, qword [rsp]	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a7e	      0xbe02000000	                              mov esi, 2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a83	      0xbf00000000	                              mov edi, 0	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a88	      0xe800000000	                          call 0x4000a8d	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a8d	        0x4883f802	                              cmp rax, 2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a91	     0xf8520ffffff	                           jne 0x40009b7	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a97	          0x8d43ff	                      lea eax, [rbx - 1]	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a9a	            0x85db	                           test ebx, ebx	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000a9c	      0x4c8d74c508	              lea r14, [rbp + rax*8 + 8]	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000aa1	            0x7f1a	                            jg 0x4000abd	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000aa3	      0xe912010000	                           jmp 0x4000bba	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000aa8	     0xf1f84000000	                   nop dword [rax + rax]	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000ab0	        0x4883c508	                              add rbp, 8	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000ab4	          0x4939ee	                            cmp r14, rbp	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000ab7	     0xf84fd000000	                            je 0x4000bba	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000abd	        0x488b5d00	                    mov rbx, qword [rbp]	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000ac1	        0x488b3c24	                    mov rdi, qword [rsp]	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000ac5	          0x4889de	                            mov rsi, rbx	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000ac8	      0xe800000000	                          call 0x4000acd	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000acd	            0x85c0	                           test eax, eax	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000acf	            0x75df	                           jne 0x4000ab0	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000ad1	        0xf6431804	               test byte [rbx + 0x18], 4	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000ad5	            0x75d9	                           jne 0x4000ab0	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000ad7	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000adb	      0xe800000000	                          call 0x4000ae0	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000ae0	        0x4c8b2424	                    mov r12, qword [rsp]	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000ae4	      0xbe02000000	                              mov esi, 2	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000ae9	      0xbf00000000	                              mov edi, 0	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000aee	          0x4989c7	                            mov r15, rax	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000af1	          0x4c89e2	                            mov rdx, r12	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000af4	      0xe800000000	                          call 0x4000af9	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000af9	        0x4883f802	                              cmp rax, 2	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000afd	     0xf85b4feffff	                           jne 0x40009b7	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000b03	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b07	          0x4c89e2	                            mov rdx, r12	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b0a	          0x4c89fe	                            mov rsi, r15	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b0d	      0xe800000000	                          call 0x4000b12	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b12	          0x4939c7	                            cmp r15, rax	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b15	     0xf859cfeffff	                           jne 0x40009b7	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b1b	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4000b1f	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b23	      0x488d7c2412	                   lea rdi, [rsp + 0x12]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b28	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b2d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b32	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4000b36	        0x4c034230	              add r8, qword [rdx + 0x30]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b3a	      0xba29000000	                           mov edx, 0x29	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b3f	        0x4c034060	              add r8, qword [rax + 0x60]	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b43	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b45	      0xe800000000	                          call 0x4000b4a	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000b4a	      0x807c241230	            cmp byte [rsp + 0x12], 0x30 	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b4f	            0x7562	                           jne 0x4000bb3	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b51	       0xfb6442413	           movzx eax, byte [rsp + 0x13] 	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b56	      0x488d5c2412	                   lea rbx, [rsp + 0x12]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b5b	            0x84c0	                             test al, al	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b5d	            0x7511	                           jne 0x4000b70	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b5f	            0xeb17	                           jmp 0x4000b78	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b61	     0xf1f80000000	                         nop dword [rax]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b68	         0xfb64301	               movzx eax, byte [rbx + 1]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b6c	            0x84c0	                             test al, al	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b6e	            0x7408	                            je 0x4000b78	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b70	        0x4883c301	                              add rbx, 1	      1116	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b74	            0x3c30	                            cmp al, 0x30	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b76	            0x74f0	                            je 0x4000b68	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b78	          0x4889df	                            mov rdi, rbx	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000b7b	      0xe800000000	                          call 0x4000b80	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000b80	        0x488b1424	                    mov rdx, qword [rsp]	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000b84	        0x4c8d7804	                      lea r15, [rax + 4]	      1122	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000b88	        0x488d7bfe	                      lea rdi, [rbx - 2]	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000b8c	        0xc604030d	               mov byte [rbx + rax], 0xd	      1118	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000b90	      0xc64403010a	           mov byte [rbx + rax + 1], 0xa	      1119	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000b95	          0x4c89fe	                            mov rsi, r15	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000b98	        0xc643ff24	                mov byte [rbx - 1], 0x24	      1120	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000b9c	        0xc643fe20	                mov byte [rbx - 2], 0x20	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000ba0	      0xe800000000	                          call 0x4000ba5	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000ba5	          0x4939c7	                            cmp r15, rax	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000ba8	     0xf8402ffffff	                            je 0x4000ab0	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000bae	      0xe904feffff	                           jmp 0x40009b7	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000bb3	      0x488d5c2412	                   lea rbx, [rsp + 0x12]	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000bb8	            0xebbe	                           jmp 0x4000b78	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000bba	        0x488b1424	                    mov rdx, qword [rsp]	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bbe	      0xbe05000000	                              mov esi, 5	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bc3	      0xbf00000000	                              mov edi, 0	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bc8	      0xe800000000	                          call 0x4000bcd	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bcd	        0x4883f805	                              cmp rax, 5	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bd1	     0xf85e0fdffff	                           jne 0x40009b7	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bd7	      0xe902fdffff	                           jmp 0x40008de	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bdc	      0xe800000000	                          call 0x4000be1	      1159	srec.c	FUNCTION_18
srec_set_arch_mach	WHILE,0:DO,0:IF,1:CALL,1:ELSE,0:SWITCH,0:functions,0:FOR,0	7
0x4000300	            0x85f6	                           test esi, esi	       872	srec.c	FUNCTION_11	IF_1
0x4000302	            0x7514	                           jne 0x4000318	       872	srec.c	FUNCTION_11	IF_1
0x4000304	    0x48c787c00000	               mov qword [rdi + 0xc0], 0	       875	srec.c	FUNCTION_11
0x400030f	      0xb801000000	                              mov eax, 1	       877	srec.c	FUNCTION_11
0x4000314	              0xc3	                                     ret	       877	srec.c	FUNCTION_11
0x4000315	           0xf1f00	                         nop dword [rax]	       877	srec.c	FUNCTION_11
0x4000318	      0xe900000000	                           jmp 0x400031d	       873	srec.c	FUNCTION_11	CALL_1
srec_get_symbol_info	WHILE,0:DO,0:IF,0:CALL,1:ELSE,0:SWITCH,0:functions,0:FOR,0	3
0x4000320	          0x4889f7	                            mov rdi, rsi	      1232	srec.c	FUNCTION_24
0x4000323	          0x4889d6	                            mov rsi, rdx	      1233	srec.c	FUNCTION_24	CALL_1
0x4000326	      0xe900000000	                           jmp 0x400032b	      1233	srec.c	FUNCTION_24	CALL_1
srec_set_section_contents	WHILE,0:DO,0:IF,8:CALL,4:ELSE,4:SWITCH,0:functions,0:FOR,1	120
0x4000140	            0x4157	                                push r15	       887	srec.c	FUNCTION_12
0x4000142	            0x4156	                                push r14	       887	srec.c	FUNCTION_12
0x4000144	          0x4d89c7	                             mov r15, r8	       887	srec.c	FUNCTION_12
0x4000147	            0x4155	                                push r13	       887	srec.c	FUNCTION_12
0x4000149	            0x4154	                                push r12	       887	srec.c	FUNCTION_12
0x400014b	          0x4989cd	                            mov r13, rcx	       887	srec.c	FUNCTION_12
0x400014e	              0x55	                                push rbp	       887	srec.c	FUNCTION_12
0x400014f	              0x53	                                push rbx	       887	srec.c	FUNCTION_12
0x4000150	          0x4889fb	                            mov rbx, rdi	       887	srec.c	FUNCTION_12
0x4000153	          0x4889f5	                            mov rbp, rsi	       887	srec.c	FUNCTION_12
0x4000156	          0x4989d4	                            mov r12, rdx	       887	srec.c	FUNCTION_12
0x4000159	        0x4883ec18	                           sub rsp, 0x18	       887	srec.c	FUNCTION_12
0x400015d	      0xe800000000	                          call 0x4000162	       888	srec.c	FUNCTION_12	CALL_1
0x4000162	      0xbe20000000	                           mov esi, 0x20	       892	srec.c	FUNCTION_12	CALL_2
0x4000167	          0x4889df	                            mov rdi, rbx	       892	srec.c	FUNCTION_12	CALL_2
0x400016a	        0x89442404	                mov dword [rsp + 4], eax	       888	srec.c	FUNCTION_12	CALL_1
0x400016e	    0x4c8bb3f80000	            mov r14, qword [rbx + 0xf8] 	       889	srec.c	FUNCTION_12
0x4000175	      0xe800000000	                          call 0x400017a	       892	srec.c	FUNCTION_12	CALL_2
0x400017a	          0x4885c0	                           test rax, rax	       893	srec.c	FUNCTION_12	IF_1
0x400017d	     0xf8415010000	                            je 0x4000298	       893	srec.c	FUNCTION_12	IF_1
0x4000183	          0x4d85ff	                           test r15, r15	       896	srec.c	FUNCTION_12	IF_2
0x4000186	            0x740e	                            je 0x4000196	       896	srec.c	FUNCTION_12	IF_2
0x4000188	          0x4889c1	                            mov rcx, rax	       896	srec.c	FUNCTION_12	IF_2
0x400018b	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       898	srec.c	FUNCTION_12	IF_2
0x400018e	          0x83e003	                              and eax, 3	       898	srec.c	FUNCTION_12	IF_2
0x4000191	          0x83f803	                              cmp eax, 3	       898	srec.c	FUNCTION_12	IF_2
0x4000194	            0x741a	                            je 0x40001b0	       898	srec.c	FUNCTION_12	IF_2
0x4000196	      0xb801000000	                              mov eax, 1	       946	srec.c	FUNCTION_12
0x400019b	        0x4883c418	                           add rsp, 0x18	       947	srec.c	FUNCTION_12
0x400019f	              0x5b	                                 pop rbx	       947	srec.c	FUNCTION_12
0x40001a0	              0x5d	                                 pop rbp	       947	srec.c	FUNCTION_12
0x40001a1	            0x415c	                                 pop r12	       947	srec.c	FUNCTION_12
0x40001a3	            0x415d	                                 pop r13	       947	srec.c	FUNCTION_12
0x40001a5	            0x415e	                                 pop r14	       947	srec.c	FUNCTION_12
0x40001a7	            0x415f	                                 pop r15	       947	srec.c	FUNCTION_12
0x40001a9	              0xc3	                                     ret	       947	srec.c	FUNCTION_12
0x40001aa	    0x660f1f440000	                    nop word [rax + rax]	       947	srec.c	FUNCTION_12
0x40001b0	          0x4c89fe	                            mov rsi, r15	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001b3	          0x4889df	                            mov rdi, rbx	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001b6	      0x48894c2408	                mov qword [rsp + 8], rcx	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001bb	      0xe800000000	                          call 0x40001c0	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001c0	          0x4885c0	                           test rax, rax	       903	srec.c	FUNCTION_12	IF_2	IF_3
0x40001c3	     0xf84cf000000	                            je 0x4000298	       903	srec.c	FUNCTION_12	IF_2	IF_3
0x40001c9	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_26	CALL_3
0x40001cc	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_26	CALL_3
0x40001cf	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_26	CALL_3
0x40001d2	      0xe800000000	                          call 0x40001d7	        53	string3.h	FUNCTION_26	CALL_3
0x40001d7	          0x4989c1	                             mov r9, rax	        53	string3.h	FUNCTION_26	CALL_3
0x40001da	    0x8b0500000000	            mov eax, dword [0x040001e0] 	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001e0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001e5	            0x85c0	                           test eax, eax	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001e7	     0xf85c3000000	                           jne 0x40002b0	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001ed	      0x4c63642404	            movsxd r12, dword [rsp + 4] 	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001f2	      0x4b8d443d00	                    lea rax, [r13 + r15]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001f7	            0x31d2	                            xor edx, edx	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001f9	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001fd	          0x49f7f4	                                 div r12	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4000200	      0x488d4406ff	                lea rax, [rsi + rax - 1]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x4000205	    0x483dffff0000	                         cmp rax, 0xffff	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x400020b	            0x7623	                           jbe 0x4000230	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x400020d	    0x483dffffff00	                       cmp rax, 0xffffff	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000213	     0xf87d7000000	                            ja 0x40002f0	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000219	      0x41837e1002	               cmp dword [r14 + 0x10], 2	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x400021e	     0xf87cc000000	                            ja 0x40002f0	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000224	    0x41c746100200	               mov dword [r14 + 0x10], 2	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x400022c	         0xf1f4000	                         nop dword [rax]	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000230	          0x4c89e8	                            mov rax, r13	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000233	        0x4c894908	                 mov qword [rcx + 8], r9	       919	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000237	        0x4c897918	             mov qword [rcx + 0x18], r15	       921	srec.c	FUNCTION_12	IF_2	ELSE_3
0x400023b	            0x4899	                                     cqo	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x400023d	          0x49f7fc	                                idiv r12	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000240	        0x498b5608	                mov rdx, qword [r14 + 8]	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000244	          0x4801f0	                            add rax, rsi	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000247	          0x4885d2	                           test rdx, rdx	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x400024a	        0x48894110	             mov qword [rcx + 0x10], rax	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x400024e	            0x7406	                            je 0x4000256	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000250	        0x483b4210	            cmp rax, qword [rdx + 0x10] 	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000254	            0x737a	                           jae 0x40002d0	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000256	          0x498b16	                    mov rdx, qword [r14]	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000259	          0x4c89f6	                            mov rsi, r14	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400025c	          0x4885d2	                           test rdx, rdx	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400025f	            0x7512	                           jne 0x4000273	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000261	            0xeb16	                           jmp 0x4000279	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000263	       0xf1f440000	                   nop dword [rax + rax]	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000268	          0x4889d6	                            mov rsi, rdx	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400026b	          0x488b12	                    mov rdx, qword [rdx]	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400026e	          0x4885d2	                           test rdx, rdx	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000271	            0x7406	                            je 0x4000279	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000273	        0x483b4210	            cmp rax, qword [rdx + 0x10] 	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000277	            0x77ef	                            ja 0x4000268	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000279	          0x488911	                    mov qword [rcx], rdx	       940	srec.c	FUNCTION_12	IF_2	ELSE_4
0x400027c	          0x48890e	                    mov qword [rsi], rcx	       941	srec.c	FUNCTION_12	IF_2	ELSE_4
0x400027f	        0x48833900	                      cmp qword [rcx], 0	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000283	     0xf850dffffff	                           jne 0x4000196	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000289	        0x49894e08	                mov qword [r14 + 8], rcx	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x400028d	      0xe904ffffff	                           jmp 0x4000196	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000292	    0x660f1f440000	                    nop word [rax + rax]	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000298	        0x4883c418	                           add rsp, 0x18	       947	srec.c	FUNCTION_12
0x400029c	            0x31c0	                            xor eax, eax	       894	srec.c	FUNCTION_12	IF_1
0x400029e	              0x5b	                                 pop rbx	       947	srec.c	FUNCTION_12
0x400029f	              0x5d	                                 pop rbp	       947	srec.c	FUNCTION_12
0x40002a0	            0x415c	                                 pop r12	       947	srec.c	FUNCTION_12
0x40002a2	            0x415d	                                 pop r13	       947	srec.c	FUNCTION_12
0x40002a4	            0x415e	                                 pop r14	       947	srec.c	FUNCTION_12
0x40002a6	            0x415f	                                 pop r15	       947	srec.c	FUNCTION_12
0x40002a8	              0xc3	                                     ret	       947	srec.c	FUNCTION_12
0x40002a9	     0xf1f80000000	                         nop dword [rax]	       947	srec.c	FUNCTION_12
0x40002b0	    0x41c746100300	               mov dword [r14 + 0x10], 3	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002b8	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002bc	      0x4c63642404	            movsxd r12, dword [rsp + 4] 	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002c1	      0xe96affffff	                           jmp 0x4000230	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40002d0	          0x48890a	                    mov qword [rdx], rcx	       928	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002d3	      0xb801000000	                              mov eax, 1	       946	srec.c	FUNCTION_12
0x40002d8	    0x48c701000000	                      mov qword [rcx], 0	       929	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002df	        0x49894e08	                mov qword [r14 + 8], rcx	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002e3	      0xe9b3feffff	                           jmp 0x400019b	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002e8	     0xf1f84000000	                   nop dword [rax + rax]	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x40002f0	    0x41c746100300	               mov dword [r14 + 0x10], 3	       917	srec.c	FUNCTION_12	IF_2	ELSE_3
0x40002f8	      0xe933ffffff	                           jmp 0x4000230	       917	srec.c	FUNCTION_12	IF_2	ELSE_3
srec_write_object_contents	WHILE,0:DO,0:IF,0:CALL,1:ELSE,0:SWITCH,0:functions,0:FOR,0	2
0x4000bf0	            0x31f6	                            xor esi, esi	      1164	srec.c	FUNCTION_19	CALL_1
0x4000bf2	      0xe9a9fcffff	jmp sym.internal_srec_write_object_contents	      1164	srec.c	FUNCTION_19	CALL_1
symbolsrec_write_object_contents	WHILE,0:DO,0:IF,0:CALL,1:ELSE,0:SWITCH,0:functions,0:FOR,0	2
0x4000c00	      0xbe01000000	                              mov esi, 1	      1170	srec.c	FUNCTION_20	CALL_1
0x4000c05	      0xe996fcffff	jmp sym.internal_srec_write_object_contents	      1170	srec.c	FUNCTION_20	CALL_1
