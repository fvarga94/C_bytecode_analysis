write_contents	IF,11:CALL,29:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,2:FOR,3	284
0x4000f70	            0x4157	                                push r15	      1596	write.c	FUNCTION_25
0x4000f72	            0x4156	                                push r14	      1596	write.c	FUNCTION_25
0x4000f74	            0x4155	                                push r13	      1596	write.c	FUNCTION_25
0x4000f76	            0x4154	                                push r12	      1596	write.c	FUNCTION_25
0x4000f78	              0x55	                                push rbp	      1596	write.c	FUNCTION_25
0x4000f79	              0x53	                                push rbx	      1596	write.c	FUNCTION_25
0x4000f7a	    0x4881ec280100	                          sub rsp, 0x128	      1596	write.c	FUNCTION_25
0x4000f81	    0x64488b042528	                mov rax, qword fs:[0x28]	      1596	write.c	FUNCTION_25
0x4000f8a	    0x488984241801	            mov qword [rsp + 0x118], rax	      1596	write.c	FUNCTION_25
0x4000f92	            0x31c0	                            xor eax, eax	      1596	write.c	FUNCTION_25
0x4000f94	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      1597	write.c	FUNCTION_25	CALL_1
0x4000f9b	      0x4889742408	                mov qword [rsp + 8], rsi	      1596	write.c	FUNCTION_25
0x4000fa0	          0x4885c0	                           test rax, rax	      1602	write.c	FUNCTION_25	IF_1
0x4000fa3	     0xf845f020000	                            je 0x4001208	      1602	write.c	FUNCTION_25	IF_1
0x4000fa9	        0xf6462101	               test byte [rsi + 0x21], 1	      1603	write.c	FUNCTION_25	IF_1
0x4000fad	     0xf8455020000	                            je 0x4001208	      1603	write.c	FUNCTION_25	IF_1
0x4000fb3	          0x488b00	                    mov rax, qword [rax]	      1606	write.c	FUNCTION_25	FOR_1
0x4000fb6	          0x488b00	                    mov rax, qword [rax]	      1606	write.c	FUNCTION_25	FOR_1
0x4000fb9	          0x4885c0	                           test rax, rax	      1606	write.c	FUNCTION_25	FOR_1
0x4000fbc	        0x48890424	                    mov qword [rsp], rax	      1606	write.c	FUNCTION_25	FOR_1
0x4000fc0	     0xf8442020000	                            je 0x4001208	      1606	write.c	FUNCTION_25	FOR_1
0x4000fc6	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4000fc9	          0x83f80a	                            cmp eax, 0xa	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4000fcc	            0x7409	                            je 0x4000fd7	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4000fce	          0x83f801	                              cmp eax, 1	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4000fd1	     0xf85c3000000	                           jne 0x400109a	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4000fd7	            0x31ed	                            xor ebp, ebp	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4000fd9	     0xf1f80000000	                         nop dword [rax]	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4000fe0	        0x488b1424	                    mov rdx, qword [rsp]	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4000fe4	        0x4c8b4210	              mov r8, qword [rdx + 0x10]	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4000fe8	          0x4d85c0	                             test r8, r8	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4000feb	     0xf85bf000000	                           jne 0x40010b0	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4000ff1	        0x488d5a7c	                   lea rbx, [rdx + 0x7c]	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4000ff5	          0x4531ed	                          xor r13d, r13d	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4000ff8	          0x4889d6	                            mov rsi, rdx	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4000ffb	        0x4c8b6618	            mov r12, qword [rsi + 0x18] 	      1633	write.c	FUNCTION_25	FOR_1
0x4000fff	        0x4c8b7620	            mov r14, qword [rsi + 0x20] 	      1634	write.c	FUNCTION_25	FOR_1
0x4001003	          0x4901dd	                            add r13, rbx	      1635	write.c	FUNCTION_25	FOR_1
0x4001006	          0x83f80a	                            cmp eax, 0xa	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x4001009	     0xf84ea000000	                            je 0x40010f9	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x400100f	          0x4d85f6	                           test r14, r14	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001012	     0xf88ec020000	                            js 0x4001304	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001018	          0x4d85e4	                           test r12, r12	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x400101b	            0x7453	                            je 0x4001070	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x400101d	          0x4d85f6	                           test r14, r14	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x4001020	            0x744e	                            je 0x4001070	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x4001022	    0x4981fc000100	                          cmp r12, 0x100	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x4001029	     0xf8641010000	                           jbe 0x4001170	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x400102f	          0x4c89f3	                            mov rbx, r14	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x4001032	      0x4c8b742408	                mov r14, qword [rsp + 8]	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x4001037	    0x660f1f840000	                    nop word [rax + rax]	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x4001040	    0x488b3d000000	            mov rdi, qword [0x04001047] 	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x4001047	          0x4d89e0	                             mov r8, r12	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x400104a	          0x4889e9	                            mov rcx, rbp	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x400104d	          0x4c89ea	                            mov rdx, r13	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x4001050	          0x4c89f6	                            mov rsi, r14	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x4001053	      0xe800000000	                          call 0x4001058	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x4001058	            0x85c0	                           test eax, eax	      1674	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x400105a	     0xf8402020000	                            je 0x4001262	      1674	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x4001060	          0x4c01e5	                            add rbp, r12	      1683	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001063	        0x4883eb01	                              sub rbx, 1	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001067	            0x75d7	                           jne 0x4001040	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001069	     0xf1f80000000	                         nop dword [rax]	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001070	        0x488b0424	                    mov rax, qword [rsp]	      1608	write.c	FUNCTION_25	FOR_1
0x4001074	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1608	write.c	FUNCTION_25	FOR_1
0x4001078	          0x4885c0	                           test rax, rax	      1606	write.c	FUNCTION_25	FOR_1
0x400107b	        0x48890424	                    mov qword [rsp], rax	      1608	write.c	FUNCTION_25	FOR_1
0x400107f	     0xf8483010000	                            je 0x4001208	      1606	write.c	FUNCTION_25	FOR_1
0x4001085	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4001088	          0x83f801	                              cmp eax, 1	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x400108b	     0xf844fffffff	                            je 0x4000fe0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4001091	          0x83f80a	                            cmp eax, 0xa	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x4001094	     0xf8446ffffff	                            je 0x4000fe0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x400109a	      0xba00000000	                              mov edx, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x400109f	      0xbe4f060000	                          mov esi, 0x64f	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40010a4	      0xbf00000000	                              mov edi, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40010a9	      0xe800000000	                          call 0x40010ae	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40010ae	            0x6690	                                     nop	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40010b0	        0x488d5a7c	                   lea rbx, [rdx + 0x7c]	      1619	write.c	FUNCTION_25	FOR_1	IF_2
0x40010b4	      0x488b742408	                mov rsi, qword [rsp + 8]	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40010b9	    0x488b3d000000	            mov rdi, qword [0x040010c0] 	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40010c0	          0x4889e9	                            mov rcx, rbp	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40010c3	          0x4889da	                            mov rdx, rbx	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40010c6	      0xe800000000	                          call 0x40010cb	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40010cb	            0x85c0	                           test eax, eax	      1621	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40010cd	     0xf8445020000	                            je 0x4001318	      1621	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40010d3	        0x488b0424	                    mov rax, qword [rsp]	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x40010d7	        0x488b3424	                    mov rsi, qword [rsp]	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x40010db	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x40010df	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x40010e2	        0x4c8b6618	            mov r12, qword [rsi + 0x18] 	      1633	write.c	FUNCTION_25	FOR_1
0x40010e6	        0x4c8b7620	            mov r14, qword [rsi + 0x20] 	      1634	write.c	FUNCTION_25	FOR_1
0x40010ea	          0x4c01ed	                            add rbp, r13	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x40010ed	          0x4901dd	                            add r13, rbx	      1635	write.c	FUNCTION_25	FOR_1
0x40010f0	          0x83f80a	                            cmp eax, 0xa	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x40010f3	     0xf8516ffffff	                           jne 0x400100f	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x40010f9	          0x4c89f0	                            mov rax, r14	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40010fc	        0x48c1e83f	                           shr rax, 0x3f	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001100	            0x84c0	                             test al, al	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001102	     0xf8569020000	                           jne 0x4001371	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001108	        0x4983fc01	                              cmp r12, 1	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400110c	     0xf855f020000	                           jne 0x4001371	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001112	          0x4d85f6	                           test r14, r14	      1640	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x4001115	     0xf8455ffffff	                            je 0x4001070	      1640	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x400111b	          0x4c89f7	                            mov rdi, r14	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x400111e	      0xe800000000	                          call 0x4001123	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x4001123	      0x410fbe4d00	                   movsx ecx, byte [r13]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x4001128	        0x488b3c24	                    mov rdi, qword [rsp]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x400112c	          0x4889c6	                            mov rsi, rax	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x400112f	          0x4c89f2	                            mov rdx, r14	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x4001132	          0x4889c3	                            mov rbx, rax	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x4001135	      0xe800000000	                          call 0x400113a	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x400113a	      0x488b742408	                mov rsi, qword [rsp + 8]	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x400113f	    0x488b3d000000	            mov rdi, qword [0x04001146] 	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x4001146	          0x4d89f0	                             mov r8, r14	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x4001149	          0x4889e9	                            mov rcx, rbp	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x400114c	          0x4889da	                            mov rdx, rbx	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x400114f	      0xe800000000	                          call 0x4001154	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x4001154	            0x85c0	                           test eax, eax	      1647	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x4001156	     0xf8429020000	                            je 0x4001385	      1647	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x400115c	          0x4889df	                            mov rdi, rbx	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x400115f	          0x4c01f5	                            add rbp, r14	      1655	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x4001162	      0xe800000000	                          call 0x4001167	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4001167	      0xe904ffffff	                           jmp 0x4001070	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x400116c	         0xf1f4000	                         nop dword [rax]	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4001170	        0x4983fc01	                              cmp r12, 1	      1692	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4001174	     0xf84b7000000	                            je 0x4001231	      1692	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x400117a	      0xb800010000	                          mov eax, 0x100	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x400117f	            0x31d2	                            xor edx, edx	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x4001181	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x4001186	          0x49f7f4	                                 div r12	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x4001189	            0x89c3	                            mov ebx, eax	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x400118b	          0x4189c7	                           mov r15d, eax	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400118e	            0x6690	                                     nop	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x4001190	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_41	CALL_3
0x4001193	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_41	CALL_3
0x4001196	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_41	CALL_3
0x4001199	      0xe800000000	                          call 0x400119e	        53	string3.h	FUNCTION_41	CALL_3
0x400119e	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_41	CALL_3
0x40011a1	          0x4c01e1	                            add rcx, r12	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40011a4	        0x4183ef01	                             sub r15d, 1	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40011a8	            0x75e6	                           jne 0x4001190	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40011aa	            0x89d8	                            mov eax, ebx	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40011ac	          0x4889eb	                            mov rbx, rbp	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40011af	            0x89c5	                            mov ebp, eax	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40011b1	     0xf1f80000000	                         nop dword [rax]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x40011b8	          0x4c63ed	                         movsxd r13, ebp	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011bb	      0x488b742408	                mov rsi, qword [rsp + 8]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40011c0	    0x488b3d000000	            mov rdi, qword [0x040011c7] 	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40011c7	          0x4d39f5	                            cmp r13, r14	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011ca	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40011cf	          0x4889d9	                            mov rcx, rbx	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40011d2	        0x4d0f4fee	                          cmovg r13, r14	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011d6	          0x4d89ef	                            mov r15, r13	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40011d9	          0x4489ed	                           mov ebp, r13d	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011dc	        0x4d0faffc	                           imul r15, r12	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40011e0	          0x4d89f8	                             mov r8, r15	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40011e3	      0xe800000000	                          call 0x40011e8	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40011e8	            0x85c0	                           test eax, eax	      1710	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40011ea	     0xf84c3000000	                            je 0x40012b3	      1710	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40011f0	          0x4d29ee	                            sub r14, r13	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011f3	          0x4c01fb	                            add rbx, r15	      1719	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011f6	          0x4d85f6	                           test r14, r14	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011f9	            0x7fbd	                            jg 0x40011b8	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011fb	          0x4889dd	                            mov rbp, rbx	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40011fe	      0xe96dfeffff	                           jmp 0x4001070	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001203	       0xf1f440000	                   nop dword [rax + rax]	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001208	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	      1724	write.c	FUNCTION_25
0x4001210	    0x644833042528	                xor rax, qword fs:[0x28]	      1724	write.c	FUNCTION_25
0x4001219	     0xf85b7010000	                           jne 0x40013d6	      1724	write.c	FUNCTION_25
0x400121f	    0x4881c4280100	                          add rsp, 0x128	      1724	write.c	FUNCTION_25
0x4001226	              0x5b	                                 pop rbx	      1724	write.c	FUNCTION_25
0x4001227	              0x5d	                                 pop rbp	      1724	write.c	FUNCTION_25
0x4001228	            0x415c	                                 pop r12	      1724	write.c	FUNCTION_25
0x400122a	            0x415d	                                 pop r13	      1724	write.c	FUNCTION_25
0x400122c	            0x415e	                                 pop r14	      1724	write.c	FUNCTION_25
0x400122e	            0x415f	                                 pop r15	      1724	write.c	FUNCTION_25
0x4001230	              0xc3	                                     ret	      1724	write.c	FUNCTION_25
0x4001231	      0x410fb64500	                   movzx eax, byte [r13]	        90	string3.h	FUNCTION_44	CALL_6
0x4001236	    0x48bf01010101	           movabs rdi, 0x101010101010101	        90	string3.h	FUNCTION_44	CALL_6
0x4001240	      0xbb00010000	                          mov ebx, 0x100	      1694	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4001245	      0xb920000000	                           mov ecx, 0x20	        90	string3.h	FUNCTION_44	CALL_6
0x400124a	        0x480fafc7	                           imul rax, rdi	        90	string3.h	FUNCTION_44	CALL_6
0x400124e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        90	string3.h	FUNCTION_44	CALL_6
0x4001253	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_44	CALL_6
0x4001256	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_44	CALL_6
0x4001258	          0x4889eb	                            mov rbx, rbp	        90	string3.h	FUNCTION_44	CALL_6
0x400125b	            0x89c5	                            mov ebp, eax	        90	string3.h	FUNCTION_44	CALL_6
0x400125d	      0xe956ffffff	                           jmp 0x40011b8	        90	string3.h	FUNCTION_44	CALL_6
0x4001262	      0xe800000000	                          call 0x4001267	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001267	            0x89c7	                            mov edi, eax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001269	      0xe800000000	                          call 0x400126e	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400126e	          0x4989c5	                            mov r13, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001271	    0x488b05000000	            mov rax, qword [0x04001278] 	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001278	    0x41b805000000	                              mov r8d, 5	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400127e	          0x4c89e1	                            mov rcx, r12	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001281	      0xba00000000	                              mov edx, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001286	      0xbe00000000	                              mov esi, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400128b	            0x31ff	                            xor edi, edi	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400128d	          0x488b28	                    mov rbp, qword [rax]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001290	      0x488b442408	                mov rax, qword [rsp + 8]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001295	          0x488b18	                    mov rbx, qword [rax]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001298	      0xe800000000	                          call 0x400129d	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400129d	          0x4d89e8	                             mov r8, r13	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40012a0	          0x4889c7	                            mov rdi, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40012a3	          0x4889e9	                            mov rcx, rbp	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40012a6	          0x4889da	                            mov rdx, rbx	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40012a9	          0x4c89e6	                            mov rsi, r12	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40012ac	            0x31c0	                            xor eax, eax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40012ae	      0xe800000000	                          call 0x40012b3	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40012b3	      0xe800000000	                          call 0x40012b8	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012b8	            0x89c7	                            mov edi, eax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012ba	      0xe800000000	                          call 0x40012bf	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012bf	          0x4989c4	                            mov r12, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012c2	    0x488b05000000	            mov rax, qword [0x040012c9] 	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012c9	    0x41b805000000	                              mov r8d, 5	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012cf	          0x4c89f9	                            mov rcx, r15	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012d2	      0xba00000000	                              mov edx, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012d7	      0xbe00000000	                              mov esi, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012dc	            0x31ff	                            xor edi, edi	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012de	          0x488b28	                    mov rbp, qword [rax]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012e1	      0x488b442408	                mov rax, qword [rsp + 8]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012e6	          0x488b18	                    mov rbx, qword [rax]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012e9	      0xe800000000	                          call 0x40012ee	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012ee	          0x4d89e0	                             mov r8, r12	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012f1	          0x4889c7	                            mov rdi, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012f4	          0x4889e9	                            mov rcx, rbp	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012f7	          0x4889da	                            mov rdx, rbx	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012fa	          0x4c89fe	                            mov rsi, r15	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012fd	            0x31c0	                            xor eax, eax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40012ff	      0xe800000000	                          call 0x4001304	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001304	      0xba00000000	                              mov edx, 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001309	      0xbe7d060000	                          mov esi, 0x67d	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x400130e	      0xbf00000000	                              mov edi, 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001313	      0xe800000000	                          call 0x4001318	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001318	      0xe800000000	                          call 0x400131d	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400131d	            0x89c7	                            mov edi, eax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400131f	      0xe800000000	                          call 0x4001324	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001324	          0x4989c4	                            mov r12, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001327	    0x488b05000000	            mov rax, qword [0x0400132e] 	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400132e	    0x41b805000000	                              mov r8d, 5	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001334	      0xba00000000	                              mov edx, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001339	      0xbe00000000	                              mov esi, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400133e	            0x31ff	                            xor edi, edi	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001340	          0x488b28	                    mov rbp, qword [rax]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001343	      0x488b442408	                mov rax, qword [rsp + 8]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001348	          0x4c8b28	                    mov r13, qword [rax]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400134b	        0x488b0424	                    mov rax, qword [rsp]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400134f	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001353	          0x4889d9	                            mov rcx, rbx	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001356	      0xe800000000	                          call 0x400135b	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400135b	          0x4d89e0	                             mov r8, r12	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400135e	          0x4889c7	                            mov rdi, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001361	          0x4889e9	                            mov rcx, rbp	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001364	          0x4c89ea	                            mov rdx, r13	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001367	          0x4889de	                            mov rsi, rbx	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400136a	            0x31c0	                            xor eax, eax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400136c	      0xe800000000	                          call 0x4001371	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001371	      0xba00000000	                              mov edx, 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001376	      0xbe67060000	                          mov esi, 0x667	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400137b	      0xbf00000000	                              mov edi, 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001380	      0xe800000000	                          call 0x4001385	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001385	      0xe800000000	                          call 0x400138a	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400138a	            0x89c7	                            mov edi, eax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400138c	      0xe800000000	                          call 0x4001391	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001391	          0x4989c4	                            mov r12, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001394	    0x488b05000000	            mov rax, qword [0x0400139b] 	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400139b	    0x41b805000000	                              mov r8d, 5	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013a1	          0x4c89f1	                            mov rcx, r14	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013a4	      0xba00000000	                              mov edx, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013a9	      0xbe00000000	                              mov esi, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013ae	            0x31ff	                            xor edi, edi	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013b0	          0x488b28	                    mov rbp, qword [rax]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013b3	      0x488b442408	                mov rax, qword [rsp + 8]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013b8	          0x488b18	                    mov rbx, qword [rax]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013bb	      0xe800000000	                          call 0x40013c0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013c0	          0x4d89e0	                             mov r8, r12	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013c3	          0x4889c7	                            mov rdi, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013c6	          0x4889e9	                            mov rcx, rbp	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013c9	          0x4889da	                            mov rdx, rbx	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013cc	          0x4c89f6	                            mov rsi, r14	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013cf	            0x31c0	                            xor eax, eax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013d1	      0xe800000000	                          call 0x40013d6	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x40013d6	      0xe800000000	                          call 0x40013db	      1724	write.c	FUNCTION_25
compress_debug	IF,17:CALL,29:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,1:FOR,2	279
0x40001d0	            0x4157	                                push r15	      1424	write.c	FUNCTION_23
0x40001d2	            0x4156	                                push r14	      1424	write.c	FUNCTION_23
0x40001d4	            0x4155	                                push r13	      1424	write.c	FUNCTION_23
0x40001d6	            0x4154	                                push r12	      1424	write.c	FUNCTION_23
0x40001d8	              0x55	                                push rbp	      1424	write.c	FUNCTION_23
0x40001d9	              0x53	                                push rbx	      1424	write.c	FUNCTION_23
0x40001da	    0x4881ec880000	                           sub rsp, 0x88	      1424	write.c	FUNCTION_23
0x40001e1	        0x4c8b7e38	            mov r15, qword [rsi + 0x38] 	      1430	write.c	FUNCTION_23
0x40001e5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1424	write.c	FUNCTION_23
0x40001ee	      0x4889442478	             mov qword [rsp + 0x78], rax	      1424	write.c	FUNCTION_23
0x40001f3	            0x31c0	                            xor eax, eax	      1424	write.c	FUNCTION_23
0x40001f5	      0x48897c2408	                mov qword [rsp + 8], rdi	      1424	write.c	FUNCTION_23
0x40001fa	        0x4983ff1f	                           cmp r15, 0x1f	      1441	write.c	FUNCTION_23	IF_1
0x40001fe	            0x7626	                           jbe 0x4000226	      1441	write.c	FUNCTION_23	IF_1
0x4000200	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      1442	write.c	FUNCTION_23	IF_1
0x4000203	          0x4989f4	                            mov r12, rsi	      1442	write.c	FUNCTION_23	IF_1
0x4000206	      0x2501010000	                          and eax, 0x101	      1442	write.c	FUNCTION_23	IF_1
0x400020b	          0x83f801	                              cmp eax, 1	      1442	write.c	FUNCTION_23	IF_1
0x400020e	            0x7416	                            je 0x4000226	      1442	write.c	FUNCTION_23	IF_1
0x4000210	          0x488b36	                    mov rsi, qword [rsi]	      1445	write.c	FUNCTION_23
0x4000213	      0xbf00000000	                              mov edi, 0	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4000218	      0xb907000000	                              mov ecx, 7	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x400021d	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1445	write.c	FUNCTION_23
0x4000222	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4000224	            0x742a	                            je 0x4000250	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4000226	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1576	write.c	FUNCTION_23
0x400022b	    0x644833042528	                xor rax, qword fs:[0x28]	      1576	write.c	FUNCTION_23
0x4000234	     0xf85d0030000	                           jne 0x400060a	      1576	write.c	FUNCTION_23
0x400023a	    0x4881c4880000	                           add rsp, 0x88	      1576	write.c	FUNCTION_23
0x4000241	              0x5b	                                 pop rbx	      1576	write.c	FUNCTION_23
0x4000242	              0x5d	                                 pop rbp	      1576	write.c	FUNCTION_23
0x4000243	            0x415c	                                 pop r12	      1576	write.c	FUNCTION_23
0x4000245	            0x415d	                                 pop r13	      1576	write.c	FUNCTION_23
0x4000247	            0x415e	                                 pop r14	      1576	write.c	FUNCTION_23
0x4000249	            0x415f	                                 pop r15	      1576	write.c	FUNCTION_23
0x400024b	              0xc3	                                     ret	      1576	write.c	FUNCTION_23
0x400024c	         0xf1f4000	                         nop dword [rax]	      1576	write.c	FUNCTION_23
0x4000250	    0x498b8424a800	            mov rax, qword [r12 + 0xa8] 	      1425	write.c	FUNCTION_23	CALL_1
0x4000258	      0x4889442440	             mov qword [rsp + 0x40], rax	      1425	write.c	FUNCTION_23	CALL_1
0x400025d	          0x488b00	                    mov rax, qword [rax]	      1429	write.c	FUNCTION_23
0x4000260	      0x4889442420	             mov qword [rsp + 0x20], rax	      1429	write.c	FUNCTION_23
0x4000265	      0xe800000000	                          call 0x400026a	      1449	write.c	FUNCTION_23	CALL_3
0x400026a	          0x4885c0	                           test rax, rax	      1450	write.c	FUNCTION_23	IF_3
0x400026d	      0x4889442438	             mov qword [rsp + 0x38], rax	      1449	write.c	FUNCTION_23	CALL_3
0x4000272	            0x74b2	                            je 0x4000226	      1450	write.c	FUNCTION_23	IF_3
0x4000274	    0x833d00000000	               cmp dword [0x0400027b], 5	      1453	write.c	FUNCTION_23	IF_4
0x400027b	     0xf84c7010000	                            je 0x4000448	      1453	write.c	FUNCTION_23	IF_4
0x4000281	      0xbd0c000000	                            mov ebp, 0xc	      1453	write.c	FUNCTION_23	IF_4
0x4000286	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      1461	write.c	FUNCTION_23	ELSE_1
0x400028e	      0xbb0c000000	                            mov ebx, 0xc	      1462	write.c	FUNCTION_23	ELSE_1
0x4000293	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      1429	write.c	FUNCTION_23
0x4000298	          0x4c89f0	                            mov rax, r14	      1429	write.c	FUNCTION_23
0x400029b	        0x4883c030	                           add rax, 0x30	      1429	write.c	FUNCTION_23
0x400029f	          0x4889c7	                            mov rdi, rax	      1466	write.c	FUNCTION_23	CALL_5
0x40002a2	      0x4889442410	             mov qword [rsp + 0x10], rax	      1429	write.c	FUNCTION_23
0x40002a7	      0xe800000000	                          call 0x40002ac	      1466	write.c	FUNCTION_23	CALL_5
0x40002ac	        0x498b4e50	            mov rcx, qword [r14 + 0x50] 	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40002b0	      0x4889442430	             mov qword [rsp + 0x30], rax	      1466	write.c	FUNCTION_23	CALL_5
0x40002b5	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40002b9	          0x4889ca	                            mov rdx, rcx	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40002bc	          0x4829c2	                            sub rdx, rax	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40002bf	          0x4839ea	                            cmp rdx, rbp	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40002c2	     0xf8228010000	                            jb 0x40003f0	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x40002c8	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1474	write.c	FUNCTION_23
0x40002cd	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1475	write.c	FUNCTION_23	CALL_11
0x40002d2	          0x4801e8	                            add rax, rbp	      1475	write.c	FUNCTION_23	CALL_11
0x40002d5	        0x48894248	             mov qword [rdx + 0x48], rax	      1475	write.c	FUNCTION_23	CALL_11
0x40002d9	        0x48895f10	             mov qword [rdi + 0x10], rbx	      1477	write.c	FUNCTION_23
0x40002dd	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      1483	write.c	FUNCTION_23	FOR_1
0x40002e2	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      1474	write.c	FUNCTION_23
0x40002e7	    0xc7475c010000	               mov dword [rdi + 0x5c], 1	      1476	write.c	FUNCTION_23
0x40002ee	          0x488b13	                    mov rdx, qword [rbx]	      1483	write.c	FUNCTION_23	FOR_1
0x40002f1	          0x4c8b32	                    mov r14, qword [rdx]	      1483	write.c	FUNCTION_23	FOR_1
0x40002f4	          0x4d85f6	                           test r14, r14	      1483	write.c	FUNCTION_23	FOR_1
0x40002f7	     0xf847e010000	                            je 0x400047b	      1483	write.c	FUNCTION_23	FOR_1
0x40002fd	      0x41837e5c01	               cmp dword [r14 + 0x5c], 1	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000302	     0xf859d000000	                           jne 0x40003a5	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000308	      0x4c897c2450	             mov qword [rsp + 0x50], r15	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x400030d	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4000312	      0x4c89642458	             mov qword [rsp + 0x58], r12	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4000317	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x400031b	        0x4d8d6e7c	                   lea r13, [r14 + 0x7c]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x400031f	          0x4885d2	                           test rdx, rdx	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4000322	     0xf8598000000	                           jne 0x40003c0	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4000328	        0x498b5e20	            mov rbx, qword [r14 + 0x20] 	      1503	write.c	FUNCTION_23	FOR_1
0x400032c	        0x4d8b6618	            mov r12, qword [r14 + 0x18] 	      1502	write.c	FUNCTION_23	FOR_1
0x4000330	          0x4885db	                           test rbx, rbx	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000333	     0xf88d6020000	                            js 0x400060f	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000339	          0x4d85e4	                           test r12, r12	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x400033c	            0x744f	                            je 0x400038d	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x400033e	          0x4885db	                           test rbx, rbx	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000341	            0x744a	                            je 0x400038d	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000343	      0x4c89742428	             mov qword [rsp + 0x28], r14	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000348	          0x4901d5	                            add r13, rdx	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x400034b	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000350	            0xeb11	                           jmp 0x4000363	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000352	    0x660f1f440000	                    nop word [rax + rax]	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000358	            0x4898	                                    cdqe	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x400035a	          0x4801c5	                            add rbp, rax	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x400035d	        0x4883eb01	                              sub rbx, 1	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000361	            0x7425	                            je 0x4000388	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x4000363	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4000368	          0x4d89f0	                             mov r8, r14	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x400036b	          0x4489e2	                           mov edx, r12d	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x400036e	          0x4c89ee	                            mov rsi, r13	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4000371	          0x4c89ff	                            mov rdi, r15	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4000374	      0xe8d7fcffff	                  call sym.compress_frag	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x4000379	            0x85c0	                           test eax, eax	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x400037b	            0x79db	                           jns 0x4000358	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x400037d	      0xe9a4feffff	                           jmp 0x4000226	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x4000382	    0x660f1f440000	                    nop word [rax + rax]	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x4000388	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x400038d	        0x4d8b7638	            mov r14, qword [r14 + 0x38] 	      1485	write.c	FUNCTION_23	FOR_1
0x4000391	          0x4d85f6	                           test r14, r14	      1483	write.c	FUNCTION_23	FOR_1
0x4000394	     0xf84ca000000	                            je 0x4000464	      1483	write.c	FUNCTION_23	FOR_1
0x400039a	      0x41837e5c01	               cmp dword [r14 + 0x5c], 1	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x400039f	     0xf8472ffffff	                            je 0x4000317	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40003a5	      0xba00000000	                              mov edx, 0	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40003aa	      0xbed4050000	                          mov esi, 0x5d4	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40003af	      0xbf00000000	                              mov edi, 0	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40003b4	      0xe800000000	                          call 0x40003b9	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40003b9	     0xf1f80000000	                         nop dword [rax]	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x40003c0	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40003c5	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40003ca	          0x4c89ee	                            mov rsi, r13	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40003cd	          0x4c89ff	                            mov rdi, r15	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40003d0	      0xe87bfcffff	                  call sym.compress_frag	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x40003d5	            0x85c0	                           test eax, eax	      1497	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x40003d7	     0xf8849feffff	                            js 0x4000226	      1497	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x40003dd	            0x4898	                                    cdqe	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x40003df	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x40003e3	          0x4801c5	                            add rbp, rax	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x40003e6	      0xe93dffffff	                           jmp 0x4000328	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x40003eb	       0xf1f440000	                   nop dword [rax + rax]	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x40003f0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1468	write.c	FUNCTION_23	CALL_7
0x40003f5	      0xe800000000	                          call 0x40003fa	      1468	write.c	FUNCTION_23	CALL_7
0x40003fa	      0x4889442430	             mov qword [rsp + 0x30], rax	      1468	write.c	FUNCTION_23	CALL_7
0x40003ff	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4000404	        0x488b4850	            mov rcx, qword [rax + 0x50] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4000408	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x400040c	          0x4889ca	                            mov rdx, rcx	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x400040f	          0x4829c2	                            sub rdx, rax	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4000412	          0x4839ea	                            cmp rdx, rbp	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x4000415	     0xf83adfeffff	                           jae 0x40002c8	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x400041b	      0xbe00000000	                              mov esi, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000420	            0x31ff	                            xor edi, edi	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000422	    0x41b805000000	                              mov r8d, 5	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000428	          0x4889e9	                            mov rcx, rbp	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x400042b	      0xba00000000	                              mov edx, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000430	      0xe800000000	                          call 0x4000435	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000435	          0x4889ee	                            mov rsi, rbp	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000438	          0x4889c7	                            mov rdi, rax	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x400043b	            0x31c0	                            xor eax, eax	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x400043d	      0xe800000000	                          call 0x4000442	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000442	    0x660f1f440000	                    nop word [rax + rax]	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x4000448	    0x488b3d000000	            mov rdi, qword [0x0400044f] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400044f	            0x31f6	                            xor esi, esi	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000451	      0xe800000000	                          call 0x4000456	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000456	            0x89c5	                            mov ebp, eax	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000458	          0x4889eb	                            mov rbx, rbp	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400045b	        0x896c244c	             mov dword [rsp + 0x4c], ebp	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400045f	      0xe92ffeffff	                           jmp 0x4000293	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000464	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000469	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400046e	      0x4c8b642458	            mov r12, qword [rsp + 0x58] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000473	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000477	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400047b	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4000480	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4000485	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x400048a	            0xeb61	                           jmp 0x40004ed	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x400048c	         0xf1f4000	                         nop dword [rax]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4000490	          0x4801c2	                            add rdx, rax	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x4000493	      0x488d4c2464	                   lea rcx, [rsp + 0x64]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4000498	      0x488d742470	                   lea rsi, [rsp + 0x70]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x400049d	        0x48895348	             mov qword [rbx + 0x48], rdx	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x40004a1	      0x488d542460	                   lea rdx, [rsp + 0x60]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40004a6	          0x4c89ef	                            mov rdi, r13	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40004a9	      0x4889442470	             mov qword [rsp + 0x70], rax	      1541	write.c	FUNCTION_23	FOR_2	CALL_22
0x40004ae	      0xe800000000	                          call 0x40004b3	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40004b3	            0x85c0	                           test eax, eax	      1544	write.c	FUNCTION_23	FOR_2	IF_13
0x40004b5	     0xf886bfdffff	                            js 0x4000226	      1544	write.c	FUNCTION_23	FOR_2	IF_13
0x40004bb	      0x4863542464	         movsxd rdx, dword [rsp + 0x64] 	      1547	write.c	FUNCTION_23	FOR_2
0x40004c0	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      1547	write.c	FUNCTION_23	FOR_2
0x40004c5	        0x48015110	            add qword [rcx + 0x10], rdx 	      1547	write.c	FUNCTION_23	FOR_2
0x40004c9	          0x4801d5	                            add rbp, rdx	      1548	write.c	FUNCTION_23	FOR_2
0x40004cc	        0x8b542460	            mov edx, dword [rsp + 0x60] 	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x40004d0	            0x85d2	                           test edx, edx	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x40004d2	            0x7e09	                           jle 0x40004dd	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x40004d4	            0xf7da	                                 neg edx	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x40004d6	          0x4863d2	                         movsxd rdx, edx	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x40004d9	        0x48015348	            add qword [rbx + 0x48], rdx 	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x40004dd	            0x85c0	                           test eax, eax	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x40004df	     0xf84b7000000	                            je 0x400059c	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x40004e5	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x40004e9	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x40004ed	          0x4889ce	                            mov rsi, rcx	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x40004f0	          0x4829c6	                            sub rsi, rax	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x40004f3	            0x85f6	                           test esi, esi	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x40004f5	          0x4863d6	                         movsxd rdx, esi	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x40004f8	        0x89742460	             mov dword [rsp + 0x60], esi	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x40004fc	            0x7f92	                            jg 0x4000490	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x40004fe	        0x48394340	            cmp qword [rbx + 0x40], rax 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000502	     0xf8488000000	                            je 0x4000590	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000508	        0x488b7360	            mov rsi, qword [rbx + 0x60] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400050c	          0x4889cf	                            mov rdi, rcx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400050f	        0x488d1430	                    lea rdx, [rax + rsi]	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000513	          0x48f7d6	                                 not rsi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000516	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400051a	          0x4821f2	                            and rdx, rsi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400051d	          0x4889d6	                            mov rsi, rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000520	          0x4829c7	                            sub rdi, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000523	        0x48895348	             mov qword [rbx + 0x48], rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000527	          0x4829c6	                            sub rsi, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400052a	          0x4839fe	                            cmp rsi, rdi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400052d	            0x7607	                           jbe 0x4000536	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400052f	        0x48894b48	             mov qword [rbx + 0x48], rcx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000533	          0x4889ca	                            mov rdx, rcx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000536	        0x48895340	             mov qword [rbx + 0x40], rdx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400053a	          0x4c89f7	                            mov rdi, r14	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x400053d	      0xe800000000	                          call 0x4000542	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x4000542	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x4000547	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1534	write.c	FUNCTION_23	FOR_2	IF_11
0x400054e	      0x4889442468	             mov qword [rsp + 0x68], rax	      1536	write.c	FUNCTION_23	FOR_2	IF_11
0x4000553	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000557	        0x48894238	             mov qword [rdx + 0x38], rax	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x400055b	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x400055f	          0x4829c1	                            sub rcx, rax	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000562	            0x85c9	                           test ecx, ecx	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x4000564	          0x4863d1	                         movsxd rdx, ecx	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000567	        0x894c2460	             mov dword [rsp + 0x60], ecx	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x400056b	     0xf8f1fffffff	                            jg 0x4000490	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x4000571	            0x31ff	                            xor edi, edi	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4000573	      0xba05000000	                              mov edx, 5	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4000578	      0xbe00000000	                              mov esi, 0	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x400057d	      0xe800000000	                          call 0x4000582	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4000582	          0x4889c7	                            mov rdi, rax	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4000585	            0x31c0	                            xor eax, eax	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4000587	      0xe800000000	                          call 0x400058c	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x400058c	         0xf1f4000	                         nop dword [rax]	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x4000590	    0x808b80000000	                 or byte [rbx + 0x80], 2	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000597	      0xe96cffffff	                           jmp 0x4000508	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400059c	          0x4939ef	                            cmp r15, rbp	      1560	write.c	FUNCTION_23	IF_16
0x400059f	     0xf8681fcffff	                           jbe 0x4000226	      1560	write.c	FUNCTION_23	IF_16
0x40005a5	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1564	write.c	FUNCTION_23
0x40005aa	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      1564	write.c	FUNCTION_23
0x40005af	          0x4c89e2	                            mov rdx, r12	      1568	write.c	FUNCTION_23	CALL_26
0x40005b2	          0x488b00	                    mov rax, qword [rax]	      1564	write.c	FUNCTION_23
0x40005b5	        0x488d737c	                   lea rsi, [rbx + 0x7c]	      1478	write.c	FUNCTION_23
0x40005b9	          0x488918	                    mov qword [rax], rbx	      1564	write.c	FUNCTION_23
0x40005bc	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1568	write.c	FUNCTION_23	CALL_26
0x40005c1	        0x48894808	                mov qword [rax + 8], rcx	      1565	write.c	FUNCTION_23
0x40005c5	          0x4889df	                            mov rdi, rbx	      1568	write.c	FUNCTION_23	CALL_26
0x40005c8	      0xe800000000	                          call 0x40005cd	      1568	write.c	FUNCTION_23	CALL_26
0x40005cd	          0x4889ea	                            mov rdx, rbp	      1569	write.c	FUNCTION_23	CALL_27
0x40005d0	          0x4c89e6	                            mov rsi, r12	      1569	write.c	FUNCTION_23	CALL_27
0x40005d3	          0x4889df	                            mov rdi, rbx	      1569	write.c	FUNCTION_23	CALL_27
0x40005d6	      0xe800000000	                          call 0x40005db	      1569	write.c	FUNCTION_23	CALL_27
0x40005db	            0x85c0	                           test eax, eax	      1570	write.c	FUNCTION_23	CALL_28
0x40005dd	            0x7444	                            je 0x4000623	      1570	write.c	FUNCTION_23	CALL_28
0x40005df	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	      1571	write.c	FUNCTION_23	IF_17
0x40005e4	     0xf853cfcffff	                           jne 0x4000226	      1571	write.c	FUNCTION_23	IF_17
0x40005ea	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40005ef	            0x31d2	                            xor edx, edx	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40005f1	      0xbf00000000	                              mov edi, 0	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40005f6	            0x31c0	                            xor eax, eax	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40005f8	        0x4883c601	                              add rsi, 1	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x40005fc	      0xe800000000	                          call 0x4000601	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000601	        0x49890424	                    mov qword [r12], rax	      1574	write.c	FUNCTION_23	IF_17
0x4000605	      0xe91cfcffff	                           jmp 0x4000226	      1574	write.c	FUNCTION_23	IF_17
0x400060a	      0xe800000000	                          call 0x400060f	      1576	write.c	FUNCTION_23
0x400060f	      0xba00000000	                              mov edx, 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000614	      0xbee0050000	                          mov esi, 0x5e0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000619	      0xbf00000000	                              mov edi, 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x400061e	      0xe800000000	                          call 0x4000623	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000623	      0xba00000000	                              mov edx, 0	      1570	write.c	FUNCTION_23	CALL_28
0x4000628	      0xbe22060000	                          mov esi, 0x622	      1570	write.c	FUNCTION_23	CALL_28
0x400062d	      0xbf00000000	                              mov edi, 0	      1570	write.c	FUNCTION_23	CALL_28
0x4000632	      0xe800000000	                          call 0x4000637	      1570	write.c	FUNCTION_23	CALL_28
size_seg	IF,6:CALL,12:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,3:FOR,2	257
0x4000980	            0x4157	                                push r15	       561	write.c	FUNCTION_14
0x4000982	            0x4156	                                push r14	       561	write.c	FUNCTION_14
0x4000984	            0x4155	                                push r13	       561	write.c	FUNCTION_14
0x4000986	            0x4154	                                push r12	       561	write.c	FUNCTION_14
0x4000988	          0x4989fd	                            mov r13, rdi	       561	write.c	FUNCTION_14
0x400098b	              0x55	                                push rbp	       561	write.c	FUNCTION_14
0x400098c	              0x53	                                push rbx	       561	write.c	FUNCTION_14
0x400098d	          0x4889f5	                            mov rbp, rsi	       561	write.c	FUNCTION_14
0x4000990	          0x4889ef	                            mov rdi, rbp	       568	write.c	FUNCTION_14	CALL_1
0x4000993	            0x31f6	                            xor esi, esi	       568	write.c	FUNCTION_14	CALL_1
0x4000995	        0x4883ec08	                              sub rsp, 8	       561	write.c	FUNCTION_14
0x4000999	      0xe800000000	                          call 0x400099e	       568	write.c	FUNCTION_14	CALL_1
0x400099e	    0x4c8ba5a80000	            mov r12, qword [rbp + 0xa8] 	       570	write.c	FUNCTION_14	CALL_2
0x40009a5	          0x4d85e4	                           test r12, r12	       571	write.c	FUNCTION_14	IF_1
0x40009a8	     0xf8472020000	                            je 0x4000c20	       571	write.c	FUNCTION_14	IF_1
0x40009ae	        0x498b0424	                    mov rax, qword [r12]	       571	write.c	FUNCTION_14	IF_1
0x40009b2	          0x4885c0	                           test rax, rax	       571	write.c	FUNCTION_14	IF_1
0x40009b5	     0xf8465020000	                            je 0x4000c20	       571	write.c	FUNCTION_14	IF_1
0x40009bb	          0x488b18	                    mov rbx, qword [rax]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x40009be	          0x4885db	                           test rbx, rbx	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x40009c1	            0x7420	                            je 0x40009e3	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x40009c3	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	       436	write.c	FUNCTION_12	SWITCH_1
0x40009c6	          0x83f80d	                            cmp eax, 0xd	       436	write.c	FUNCTION_12	SWITCH_1
0x40009c9	          0x4189c6	                           mov r14d, eax	       436	write.c	FUNCTION_12	SWITCH_1
0x40009cc	     0xf871e020000	                            ja 0x4000bf0	       436	write.c	FUNCTION_12	SWITCH_1
0x40009d2	    0x42ff24f50000	                       jmp qword [r14*8]	       436	write.c	FUNCTION_12	SWITCH_1
0x40009da	    0x660f1f440000	                    nop word [rax + rax]	       436	write.c	FUNCTION_12	SWITCH_1
0x40009e0	          0x4889c3	                            mov rbx, rax	       436	write.c	FUNCTION_12	SWITCH_1
0x40009e3	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       576	write.c	FUNCTION_14	IF_1	FOR_2
0x40009e7	          0x4885c0	                           test rax, rax	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x40009ea	            0x75f4	                           jne 0x40009e0	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x40009ec	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       580	write.c	FUNCTION_14	IF_1
0x40009f0	          0x480303	                    add rax, qword [rbx]	       586	write.c	FUNCTION_14	IF_2
0x40009f3	          0x8b5520	            mov edx, dword [rbp + 0x20] 	       585	write.c	FUNCTION_14
0x40009f6	          0x4889c3	                            mov rbx, rax	       586	write.c	FUNCTION_14	IF_2
0x40009f9	     0xf8424020000	                            je 0x4000c23	       586	write.c	FUNCTION_14	IF_2
0x40009ff	            0x89d0	                            mov eax, edx	       591	write.c	FUNCTION_14	IF_3
0x4000a01	          0x80cc01	                                or ah, 1	       591	write.c	FUNCTION_14	IF_3
0x4000a04	    0x41f644240802	                  test byte [r12 + 8], 2	       591	write.c	FUNCTION_14	IF_3
0x4000a0a	           0xf44d0	                          cmove edx, eax	       591	write.c	FUNCTION_14	IF_3
0x4000a0d	          0x83e2fb	                     and edx, 0xfffffffb	       594	write.c	FUNCTION_14	CALL_4
0x4000a10	          0x4889ee	                            mov rsi, rbp	       594	write.c	FUNCTION_14	CALL_4
0x4000a13	          0x4c89ef	                            mov rdi, r13	       594	write.c	FUNCTION_14	CALL_4
0x4000a16	      0xe800000000	                          call 0x4000a1b	       594	write.c	FUNCTION_14	CALL_4
0x4000a1b	            0x85c0	                           test eax, eax	       595	write.c	FUNCTION_14	CALL_5
0x4000a1d	     0xf84e7020000	                            je 0x4000d0a	       595	write.c	FUNCTION_14	CALL_5
0x4000a23	    0x8b0500000000	            mov eax, dword [0x04000a29] 	       599	write.c	FUNCTION_14	IF_4
0x4000a29	            0x85c0	                           test eax, eax	       599	write.c	FUNCTION_14	IF_4
0x4000a2b	     0xf840f020000	                            je 0x4000c40	       599	write.c	FUNCTION_14	IF_4
0x4000a31	          0x4889da	                            mov rdx, rbx	       603	write.c	FUNCTION_14	CALL_7
0x4000a34	          0x4889ee	                            mov rsi, rbp	       603	write.c	FUNCTION_14	CALL_7
0x4000a37	          0x4c89ef	                            mov rdi, r13	       603	write.c	FUNCTION_14	CALL_7
0x4000a3a	      0xe800000000	                          call 0x4000a3f	       603	write.c	FUNCTION_14	CALL_7
0x4000a3f	            0x85c0	                           test eax, eax	       604	write.c	FUNCTION_14	CALL_8
0x4000a41	     0xf84eb020000	                            je 0x4000d32	       604	write.c	FUNCTION_14	CALL_8
0x4000a47	        0x4883c408	                              add rsp, 8	       632	write.c	FUNCTION_14
0x4000a4b	              0x5b	                                 pop rbx	       632	write.c	FUNCTION_14
0x4000a4c	              0x5d	                                 pop rbp	       632	write.c	FUNCTION_14
0x4000a4d	            0x415c	                                 pop r12	       632	write.c	FUNCTION_14
0x4000a4f	            0x415d	                                 pop r13	       632	write.c	FUNCTION_14
0x4000a51	            0x415e	                                 pop r14	       632	write.c	FUNCTION_14
0x4000a53	            0x415f	                                 pop r15	       632	write.c	FUNCTION_14
0x4000a55	              0xc3	                                     ret	       632	write.c	FUNCTION_14
0x4000a56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       632	write.c	FUNCTION_14
0x4000a60	          0x4889df	                            mov rdi, rbx	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000a63	      0xe800000000	                          call 0x4000a68	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000a68	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x4000a6c	          0x4885f6	                           test rsi, rsi	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000a6f	          0x4889f3	                            mov rbx, rsi	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000a72	     0xf854bffffff	                           jne 0x40009c3	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000a78	        0x498b0424	                    mov rax, qword [r12]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000a7c	          0x488b18	                    mov rbx, qword [rax]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000a7f	      0xe95fffffff	                           jmp 0x40009e3	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000a84	         0xf1f4000	                         nop dword [rax]	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4000a88	          0x83f803	                              cmp eax, 3	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000a8b	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000a8f	            0x7533	                           jne 0x4000ac4	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000a91	          0x488b16	                    mov rdx, qword [rsi]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000a94	          0x482b13	                    sub rdx, qword [rbx]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000a97	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000a9b	          0x4829c2	                            sub rdx, rax	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000a9e	        0x488d4aff	                      lea rcx, [rdx - 1]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000aa2	    0x4881f9fe0f00	                          cmp rcx, 0xffe	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000aa9	            0x7722	                            ja 0x4000acd	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000aab	      0x488d74037c	            lea rsi, [rbx + rax + 0x7c] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000ab0	            0x31c9	                            xor ecx, ecx	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000ab2	          0x4889df	                            mov rdi, rbx	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000ab5	      0xe800000000	                          call 0x4000aba	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000aba	    0x660f1f440000	                    nop word [rax + rax]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000ac0	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000ac4	          0x4885f6	                           test rsi, rsi	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000ac7	     0xf8429020000	                            je 0x4000cf6	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000acd	          0x488b06	                    mov rax, qword [rsi]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000ad0	          0x482b03	                    sub rax, qword [rbx]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000ad3	            0x31d2	                            xor edx, edx	       450	write.c	FUNCTION_12	SWITCH_1
0x4000ad5	        0x482b4310	             sub rax, qword [rbx + 0x10]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000ad9	        0x48f77318	                  div qword [rbx + 0x18]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000add	          0x4885c0	                           test rax, rax	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000ae0	          0x4989c6	                            mov r14, rax	       450	write.c	FUNCTION_12	SWITCH_1
0x4000ae3	        0x48894320	             mov qword [rbx + 0x20], rax	       450	write.c	FUNCTION_12	SWITCH_1
0x4000ae7	     0xf88d3010000	                            js 0x4000cc0	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000aed	            0x31c0	                            xor eax, eax	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000aef	        0x837b5c09	               cmp dword [rbx + 0x5c], 9	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000af3	           0xf94c0	                                 sete al	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000af6	        0x8d44c001	              lea eax, [rax + rax*8 + 1]	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000afa	          0x89435c	             mov dword [rbx + 0x5c], eax	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000afd	      0xe96affffff	                           jmp 0x4000a6c	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000b02	    0x660f1f440000	                    nop word [rax + rax]	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000b08	    0x488b3d000000	            mov rdi, qword [0x04000b0f] 	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000b0f	          0x4889da	                            mov rdx, rbx	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000b12	          0x4889ee	                            mov rsi, rbp	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000b15	      0xe800000000	                          call 0x4000b1a	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x4000b1a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000b1e	          0x4885c0	                           test rax, rax	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000b21	            0x7410	                            je 0x4000b33	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000b23	          0x488b00	                    mov rax, qword [rax]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000b26	          0x482b03	                    sub rax, qword [rbx]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000b29	        0x483b4310	            cmp rax, qword [rbx + 0x10] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000b2d	     0xf85eb010000	                           jne 0x4000d1e	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000b33	          0x4889df	                            mov rdi, rbx	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000b36	      0xe800000000	                          call 0x4000b3b	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000b3b	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000b3f	      0xe928ffffff	                           jmp 0x4000a6c	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000b44	         0xf1f4000	                         nop dword [rax]	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x4000b48	          0x4889df	                            mov rdi, rbx	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000b4b	      0xe800000000	                          call 0x4000b50	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000b50	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000b54	      0xe913ffffff	                           jmp 0x4000a6c	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000b59	     0xf1f80000000	                         nop dword [rax]	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4000b60	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000b64	      0xe800000000	                          call 0x4000b69	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000b69	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000b6d	          0x4989c6	                            mov r14, rax	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4000b70	      0xe800000000	                          call 0x4000b75	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000b75	            0x85c0	                           test eax, eax	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000b77	            0x7531	                           jne 0x4000baa	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4000b79	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b7d	      0xe800000000	                          call 0x4000b82	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b82	      0xba05000000	                              mov edx, 5	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000b87	      0xbe00000000	                              mov esi, 0	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000b8c	            0x31ff	                            xor edi, edi	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000b8e	          0x4989c7	                            mov r15, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b91	      0xe800000000	                          call 0x4000b96	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4000b96	          0x8b7348	            mov esi, dword [rbx + 0x48] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b99	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000b9d	          0x4889c2	                            mov rdx, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000ba0	          0x4c89f9	                            mov rcx, r15	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000ba3	            0x31c0	                            xor eax, eax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000ba5	      0xe800000000	                          call 0x4000baa	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4000baa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000bae	          0x8b5360	            mov edx, dword [rbx + 0x60] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000bb1	          0x4c89f6	                            mov rsi, r14	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000bb4	      0x488d7c037c	            lea rdi, [rbx + rax + 0x7c] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000bb9	      0xe800000000	                          call 0x4000bbe	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4000bbe	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	       486	write.c	FUNCTION_12	SWITCH_1
0x4000bc5	            0x4898	                                    cdqe	       485	write.c	FUNCTION_12	SWITCH_1
0x4000bc7	    0x48c743180000	               mov qword [rbx + 0x18], 0	       487	write.c	FUNCTION_12	SWITCH_1
0x4000bcf	        0x48014310	            add qword [rbx + 0x10], rax 	       485	write.c	FUNCTION_12	SWITCH_1
0x4000bd3	    0x48c743200000	               mov qword [rbx + 0x20], 0	       488	write.c	FUNCTION_12	SWITCH_1
0x4000bdb	    0x48c743280000	               mov qword [rbx + 0x28], 0	       489	write.c	FUNCTION_12	SWITCH_1
0x4000be3	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       489	write.c	FUNCTION_12	SWITCH_1
0x4000be7	      0xe980feffff	                           jmp 0x4000a6c	       489	write.c	FUNCTION_12	SWITCH_1
0x4000bec	         0xf1f4000	                         nop dword [rax]	       489	write.c	FUNCTION_12	SWITCH_1
0x4000bf0	      0xba05000000	                              mov edx, 5	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000bf5	      0xbe00000000	                              mov esi, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000bfa	            0x31ff	                            xor edi, edi	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000bfc	      0xe800000000	                          call 0x4000c01	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c01	      0xb900000000	                              mov ecx, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c06	          0x4889c7	                            mov rdi, rax	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c09	      0xba16020000	                          mov edx, 0x216	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c0e	          0x4c89f6	                            mov rsi, r14	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c11	            0x31c0	                            xor eax, eax	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c13	      0xe800000000	                          call 0x4000c18	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c18	     0xf1f84000000	                   nop dword [rax + rax]	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4000c20	          0x8b5520	            mov edx, dword [rbp + 0x20] 	       585	write.c	FUNCTION_14
0x4000c23	      0x48837d3800	               cmp qword [rbp + 0x38], 0	       586	write.c	FUNCTION_14	IF_2
0x4000c28	            0x7409	                            je 0x4000c33	       586	write.c	FUNCTION_14	IF_2
0x4000c2a	          0xf6c601	                              test dh, 1	       586	write.c	FUNCTION_14	IF_2
0x4000c2d	     0xf8514feffff	                           jne 0x4000a47	       586	write.c	FUNCTION_14	IF_2
0x4000c33	            0x31db	                            xor ebx, ebx	       586	write.c	FUNCTION_14	IF_2
0x4000c35	      0xe9d3fdffff	                           jmp 0x4000a0d	       586	write.c	FUNCTION_14	IF_2
0x4000c3a	    0x660f1f440000	                    nop word [rax + rax]	       586	write.c	FUNCTION_14	IF_2
0x4000c40	          0x4889de	                            mov rsi, rbx	       602	write.c	FUNCTION_14	CALL_6
0x4000c43	          0x4889ef	                            mov rdi, rbp	       602	write.c	FUNCTION_14	CALL_6
0x4000c46	      0xe800000000	                          call 0x4000c4b	       602	write.c	FUNCTION_14	CALL_6
0x4000c4b	          0x4889ee	                            mov rsi, rbp	       603	write.c	FUNCTION_14	CALL_7
0x4000c4e	          0x4889c2	                            mov rdx, rax	       603	write.c	FUNCTION_14	CALL_7
0x4000c51	          0x4c89ef	                            mov rdi, r13	       603	write.c	FUNCTION_14	CALL_7
0x4000c54	          0x4989c6	                            mov r14, rax	       602	write.c	FUNCTION_14	CALL_6
0x4000c57	      0xe800000000	                          call 0x4000c5c	       603	write.c	FUNCTION_14	CALL_7
0x4000c5c	            0x85c0	                           test eax, eax	       604	write.c	FUNCTION_14	CALL_8
0x4000c5e	     0xf84ce000000	                            je 0x4000d32	       604	write.c	FUNCTION_14	CALL_8
0x4000c64	          0x4939de	                            cmp r14, rbx	       608	write.c	FUNCTION_14	CALL_9
0x4000c67	     0xf82ed000000	                            jb 0x4000d5a	       608	write.c	FUNCTION_14	CALL_9
0x4000c6d	     0xf84d4fdffff	                            je 0x4000a47	       609	write.c	FUNCTION_14	IF_5
0x4000c73	        0x498b0424	                    mov rax, qword [r12]	       611	write.c	FUNCTION_14	IF_5
0x4000c77	        0x488b7808	                mov rdi, qword [rax + 8]	       611	write.c	FUNCTION_14	IF_5
0x4000c7b	          0x488b30	                    mov rsi, qword [rax]	       612	write.c	FUNCTION_14	IF_5
0x4000c7e	            0xeb03	                           jmp 0x4000c83	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000c80	          0x4889ce	                            mov rsi, rcx	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000c83	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000c87	          0x4839cf	                            cmp rdi, rcx	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000c8a	            0x75f4	                           jne 0x4000c80	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4000c8c	          0x4c89f0	                            mov rax, r14	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000c8f	            0x31d2	                            xor edx, edx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000c91	          0x48891f	                    mov qword [rdi], rbx	       615	write.c	FUNCTION_14	IF_5
0x4000c94	          0x4829d8	                            sub rax, rbx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000c97	        0x48f77618	                  div qword [rsi + 0x18]	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000c9b	          0x4885d2	                           test rdx, rdx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000c9e	     0xf85a2000000	                           jne 0x4000d46	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4000ca4	        0x48014620	            add qword [rsi + 0x20], rax 	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4000ca8	        0x4883c408	                              add rsp, 8	       632	write.c	FUNCTION_14
0x4000cac	              0x5b	                                 pop rbx	       632	write.c	FUNCTION_14
0x4000cad	              0x5d	                                 pop rbp	       632	write.c	FUNCTION_14
0x4000cae	            0x415c	                                 pop r12	       632	write.c	FUNCTION_14
0x4000cb0	            0x415d	                                 pop r13	       632	write.c	FUNCTION_14
0x4000cb2	            0x415e	                                 pop r14	       632	write.c	FUNCTION_14
0x4000cb4	            0x415f	                                 pop r15	       632	write.c	FUNCTION_14
0x4000cb6	              0xc3	                                     ret	       632	write.c	FUNCTION_14
0x4000cb7	    0x660f1f840000	                    nop word [rax + rax]	       632	write.c	FUNCTION_14
0x4000cc0	      0xba05000000	                              mov edx, 5	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000cc5	      0xbe00000000	                              mov esi, 0	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000cca	            0x31ff	                            xor edi, edi	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000ccc	      0xe800000000	                          call 0x4000cd1	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000cd1	          0x8b7348	            mov esi, dword [rbx + 0x48] 	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000cd4	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000cd8	          0x4889c2	                            mov rdx, rax	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000cdb	          0x4c89f1	                            mov rcx, r14	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000cde	            0x31c0	                            xor eax, eax	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000ce0	      0xe800000000	                          call 0x4000ce5	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000ce5	    0x48c743200000	               mov qword [rbx + 0x20], 0	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000ced	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000cf1	      0xe9f7fdffff	                           jmp 0x4000aed	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000cf6	      0xba00000000	                              mov edx, 0	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000cfb	      0xbec1010000	                          mov esi, 0x1c1	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000d00	      0xbf00000000	                              mov edi, 0	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000d05	      0xe800000000	                          call 0x4000d0a	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000d0a	      0xba00000000	                              mov edx, 0	       595	write.c	FUNCTION_14	CALL_5
0x4000d0f	      0xbe53020000	                          mov esi, 0x253	       595	write.c	FUNCTION_14	CALL_5
0x4000d14	      0xbf00000000	                              mov edi, 0	       595	write.c	FUNCTION_14	CALL_5
0x4000d19	      0xe800000000	                          call 0x4000d1e	       595	write.c	FUNCTION_14	CALL_5
0x4000d1e	      0xba00000000	                              mov edx, 0	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d23	      0xbefa010000	                          mov esi, 0x1fa	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d28	      0xbf00000000	                              mov edi, 0	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d2d	      0xe800000000	                          call 0x4000d32	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x4000d32	      0xba00000000	                              mov edx, 0	       604	write.c	FUNCTION_14	CALL_8
0x4000d37	      0xbe5c020000	                          mov esi, 0x25c	       604	write.c	FUNCTION_14	CALL_8
0x4000d3c	      0xbf00000000	                              mov edi, 0	       604	write.c	FUNCTION_14	CALL_8
0x4000d41	      0xe800000000	                          call 0x4000d46	       604	write.c	FUNCTION_14	CALL_8
0x4000d46	      0xba00000000	                              mov edx, 0	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000d4b	      0xbe6f020000	                          mov esi, 0x26f	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000d50	      0xbf00000000	                              mov edi, 0	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000d55	      0xe800000000	                          call 0x4000d5a	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4000d5a	      0xba00000000	                              mov edx, 0	       608	write.c	FUNCTION_14	CALL_9
0x4000d5f	      0xbe60020000	                          mov esi, 0x260	       608	write.c	FUNCTION_14	CALL_9
0x4000d64	      0xbf00000000	                              mov edi, 0	       608	write.c	FUNCTION_14	CALL_9
0x4000d69	      0xe800000000	                          call 0x4000d6e	       608	write.c	FUNCTION_14	CALL_9
renumber_sections	IF,0:CALL,0:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	4
0x4000040	            0x8b02	                    mov eax, dword [rdx]	       384	write.c	FUNCTION_9
0x4000042	          0x89460c	              mov dword [rsi + 0xc], eax	       384	write.c	FUNCTION_9
0x4000045	          0x830201	                      add dword [rdx], 1	       385	write.c	FUNCTION_9
0x4000048	              0xc3	                                     ret	       385	write.c	FUNCTION_9
fix_new	IF,0:CALL,1:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	114
0x4001ff0	            0x4155	                                push r13	       238	write.c	ELSE_2	FUNCTION_2
0x4001ff2	            0x4154	                                push r12	       238	write.c	ELSE_2	FUNCTION_2
0x4001ff4	          0x4c63e6	                         movsxd r12, esi	       238	write.c	ELSE_2	FUNCTION_2
0x4001ff7	              0x55	                                push rbp	       238	write.c	ELSE_2	FUNCTION_2
0x4001ff8	              0x53	                                push rbx	       238	write.c	ELSE_2	FUNCTION_2
0x4001ff9	            0x89d5	                            mov ebp, edx	       238	write.c	ELSE_2	FUNCTION_2
0x4001ffb	          0x4989fd	                            mov r13, rdi	       238	write.c	ELSE_2	FUNCTION_2
0x4001ffe	        0x4883ec28	                           sub rsp, 0x28	       238	write.c	ELSE_2	FUNCTION_2
0x4002002	    0x488b35000000	            mov rsi, qword [0x04002009] 	       159	write.c	FUNCTION_1	CALL_1
0x4002009	    0x488b05000000	            mov rax, qword [0x04002010] 	       159	write.c	FUNCTION_1	CALL_1
0x4002010	    0x830500000000	               add dword [0x04002017], 1	       157	write.c	FUNCTION_1
0x4002017	          0x4889f2	                            mov rdx, rsi	       159	write.c	FUNCTION_1	CALL_1
0x400201a	          0x4829c2	                            sub rdx, rax	       159	write.c	FUNCTION_1	CALL_1
0x400201d	        0x4883fa6f	                           cmp rdx, 0x6f	       159	write.c	FUNCTION_1	CALL_1
0x4002021	     0xf8639010000	                           jbe 0x4002160	       159	write.c	FUNCTION_1	CALL_1
0x4002027	    0x488b1d000000	            mov rbx, qword [0x0400202e] 	       159	write.c	FUNCTION_1	CALL_1
0x400202e	        0x4883c070	                           add rax, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x4002032	          0x4839d8	                            cmp rax, rbx	       159	write.c	FUNCTION_1	CALL_1
0x4002035	     0xf8465010000	                            je 0x40021a0	       159	write.c	FUNCTION_1	CALL_1
0x400203b	    0x488b15000000	            mov rdx, qword [0x04002042] 	       159	write.c	FUNCTION_1	CALL_1
0x4002042	          0x4989f2	                            mov r10, rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002045	          0x4801d0	                            add rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x4002048	          0x48f7d2	                                 not rdx	       159	write.c	FUNCTION_1	CALL_1
0x400204b	          0x4821d0	                            and rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x400204e	    0x488b15000000	            mov rdx, qword [0x04002055] 	       159	write.c	FUNCTION_1	CALL_1
0x4002055	          0x4889c7	                            mov rdi, rax	       159	write.c	FUNCTION_1	CALL_1
0x4002058	    0x488905000000	            mov qword [0x0400205f], rax 	       159	write.c	FUNCTION_1	CALL_1
0x400205f	          0x4829d7	                            sub rdi, rdx	       159	write.c	FUNCTION_1	CALL_1
0x4002062	          0x4929d2	                            sub r10, rdx	       159	write.c	FUNCTION_1	CALL_1
0x4002065	          0x4c39d7	                            cmp rdi, r10	       159	write.c	FUNCTION_1	CALL_1
0x4002068	            0x760a	                           jbe 0x4002074	       159	write.c	FUNCTION_1	CALL_1
0x400206a	    0x488935000000	            mov qword [0x04002071], rsi 	       159	write.c	FUNCTION_1	CALL_1
0x4002071	          0x4889f0	                            mov rax, rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002074	    0x488905000000	            mov qword [0x0400207b], rax 	       159	write.c	FUNCTION_1	CALL_1
0x400207b	        0x400fb6c5	                          movzx eax, bpl	       165	write.c	FUNCTION_1	IF_1
0x400207f	        0x4c896b08	                mov qword [rbx + 8], r13	       161	write.c	FUNCTION_1
0x4002083	            0x39c5	                            cmp ebp, eax	       165	write.c	FUNCTION_1	IF_1
0x4002085	        0x4c896310	             mov qword [rbx + 0x10], r12	       162	write.c	FUNCTION_1
0x4002089	        0x40886b02	                 mov byte [rbx + 2], bpl	       163	write.c	FUNCTION_1
0x400208d	     0xf8519010000	                           jne 0x40021ac	       165	write.c	FUNCTION_1	IF_1
0x4002093	    0x488b05000000	            mov rax, qword [0x0400209a] 	       173	write.c	FUNCTION_1
0x400209a	        0x4183e101	                              and r9d, 1	       185	write.c	FUNCTION_1
0x400209e	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       196	write.c	FUNCTION_1	CALL_6
0x40020a2	        0x48894b18	             mov qword [rbx + 0x18], rcx	       170	write.c	FUNCTION_1
0x40020a6	    0x48c743200000	               mov qword [rbx + 0x20], 0	       171	write.c	FUNCTION_1
0x40020ae	        0x4c894328	              mov qword [rbx + 0x28], r8	       172	write.c	FUNCTION_1
0x40020b2	    0x48c743480000	               mov qword [rbx + 0x48], 0	       179	write.c	FUNCTION_1
0x40020ba	        0x48894330	             mov qword [rbx + 0x30], rax	       173	write.c	FUNCTION_1
0x40020be	    0x488b05000000	            mov rax, qword [0x040020c5] 	       174	write.c	FUNCTION_1
0x40020c5	    0x48c743580000	               mov qword [rbx + 0x58], 0	       180	write.c	FUNCTION_1
0x40020cd	        0xc6430100	                   mov byte [rbx + 1], 0	       178	write.c	FUNCTION_1
0x40020d1	          0x44880b	                     mov byte [rbx], r9b	       185	write.c	FUNCTION_1
0x40020d4	        0x48894338	             mov qword [rbx + 0x38], rax	       174	write.c	FUNCTION_1
0x40020d8	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       176	write.c	FUNCTION_1
0x40020dc	          0x894350	             mov dword [rbx + 0x50], eax	       176	write.c	FUNCTION_1
0x40020df	      0xe800000000	                          call 0x40020e4	       196	write.c	FUNCTION_1	CALL_6
0x40020e4	        0x48894360	             mov qword [rbx + 0x60], rax	       196	write.c	FUNCTION_1	CALL_6
0x40020e8	    0x8b0500000000	            mov eax, dword [0x040020ee] 	       202	write.c	FUNCTION_1
0x40020ee	            0x85c0	                           test eax, eax	       202	write.c	FUNCTION_1
0x40020f0	            0x753e	                           jne 0x4002130	       202	write.c	FUNCTION_1
0x40020f2	    0x488b05000000	            mov rax, qword [0x040020f9] 	       202	write.c	FUNCTION_1
0x40020f9	    0x48c743400000	               mov qword [rbx + 0x40], 0	       216	write.c	FUNCTION_1	ELSE_1
0x4002101	        0x488d4820	                   lea rcx, [rax + 0x20]	       202	write.c	FUNCTION_1
0x4002105	        0x4883c028	                           add rax, 0x28	       205	write.c	FUNCTION_1
0x4002109	          0x488b10	                    mov rdx, qword [rax]	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x400210c	          0x4885d2	                           test rdx, rdx	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x400210f	            0x7445	                            je 0x4002156	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4002111	        0x48895a40	             mov qword [rdx + 0x40], rbx	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x4002115	          0x488918	                    mov qword [rax], rbx	       221	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4002118	        0x4883c428	                           add rsp, 0x28	       241	write.c	ELSE_2	FUNCTION_2
0x400211c	          0x4889d8	                            mov rax, rbx	       241	write.c	ELSE_2	FUNCTION_2
0x400211f	              0x5b	                                 pop rbx	       241	write.c	ELSE_2	FUNCTION_2
0x4002120	              0x5d	                                 pop rbp	       241	write.c	ELSE_2	FUNCTION_2
0x4002121	            0x415c	                                 pop r12	       241	write.c	ELSE_2	FUNCTION_2
0x4002123	            0x415d	                                 pop r13	       241	write.c	ELSE_2	FUNCTION_2
0x4002125	              0xc3	                                     ret	       241	write.c	ELSE_2	FUNCTION_2
0x4002126	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       241	write.c	ELSE_2	FUNCTION_2
0x4002130	    0x488b05000000	            mov rax, qword [0x04002137] 	       201	write.c	FUNCTION_1	CALL_7
0x4002137	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       201	write.c	FUNCTION_1	CALL_7
0x400213e	    0x48c743400000	               mov qword [rbx + 0x40], 0	       216	write.c	FUNCTION_1	ELSE_1
0x4002146	        0x488d4810	                   lea rcx, [rax + 0x10]	       202	write.c	FUNCTION_1
0x400214a	        0x4883c018	                           add rax, 0x18	       205	write.c	FUNCTION_1
0x400214e	          0x488b10	                    mov rdx, qword [rax]	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4002151	          0x4885d2	                           test rdx, rdx	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4002154	            0x75bb	                           jne 0x4002111	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4002156	          0x488919	                    mov qword [rcx], rbx	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4002159	            0xebba	                           jmp 0x4002115	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x400215b	       0xf1f440000	                   nop dword [rax + rax]	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4002160	      0xbe70000000	                           mov esi, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x4002165	      0xbf00000000	                              mov edi, 0	       159	write.c	FUNCTION_1	CALL_1
0x400216a	      0x44894c241c	             mov dword [rsp + 0x1c], r9d	       159	write.c	FUNCTION_1	CALL_1
0x400216f	      0x4c89442410	              mov qword [rsp + 0x10], r8	       159	write.c	FUNCTION_1	CALL_1
0x4002174	      0x48894c2408	                mov qword [rsp + 8], rcx	       159	write.c	FUNCTION_1	CALL_1
0x4002179	      0xe800000000	                          call 0x400217e	       159	write.c	FUNCTION_1	CALL_1
0x400217e	    0x488b05000000	            mov rax, qword [0x04002185] 	       159	write.c	FUNCTION_1	CALL_1
0x4002185	    0x488b35000000	            mov rsi, qword [0x0400218c] 	       159	write.c	FUNCTION_1	CALL_1
0x400218c	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	       159	write.c	FUNCTION_1	CALL_1
0x4002191	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       159	write.c	FUNCTION_1	CALL_1
0x4002196	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       159	write.c	FUNCTION_1	CALL_1
0x400219b	      0xe987feffff	                           jmp 0x4002027	       159	write.c	FUNCTION_1	CALL_1
0x40021a0	    0x800d00000000	                 or byte [0x040021a7], 2	       159	write.c	FUNCTION_1	CALL_1
0x40021a7	      0xe98ffeffff	                           jmp 0x400203b	       159	write.c	FUNCTION_1	CALL_1
0x40021ac	      0xba05000000	                              mov edx, 5	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40021b1	      0xbe00000000	                              mov esi, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40021b6	            0x31ff	                            xor edi, edi	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40021b8	      0xe800000000	                          call 0x40021bd	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40021bd	            0x89ee	                            mov esi, ebp	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40021bf	          0x4889c7	                            mov rdi, rax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40021c2	            0x31c0	                            xor eax, eax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40021c4	      0xe800000000	                          call 0x40021c9	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40021c9	      0xba00000000	                              mov edx, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40021ce	      0xbea8000000	                           mov esi, 0xa8	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40021d3	      0xbf00000000	                              mov edi, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40021d8	      0xe800000000	                          call 0x40021dd	       168	write.c	FUNCTION_1	IF_1	CALL_4
fix_at_start	IF,0:CALL,1:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	118
0x40024e0	            0x4154	                                push r12	       318	write.c	FUNCTION_4
0x40024e2	              0x55	                                push rbp	       318	write.c	FUNCTION_4
0x40024e3	          0x4989fc	                            mov r12, rdi	       318	write.c	FUNCTION_4
0x40024e6	              0x53	                                push rbx	       318	write.c	FUNCTION_4
0x40024e7	            0x89f5	                            mov ebp, esi	       318	write.c	FUNCTION_4
0x40024e9	        0x4883ec20	                           sub rsp, 0x20	       318	write.c	FUNCTION_4
0x40024ed	    0x488b3d000000	            mov rdi, qword [0x040024f4] 	       159	write.c	FUNCTION_1	CALL_1
0x40024f4	    0x488b05000000	            mov rax, qword [0x040024fb] 	       159	write.c	FUNCTION_1	CALL_1
0x40024fb	    0x830500000000	               add dword [0x04002502], 1	       157	write.c	FUNCTION_1
0x4002502	          0x4889fe	                            mov rsi, rdi	       159	write.c	FUNCTION_1	CALL_1
0x4002505	          0x4829c6	                            sub rsi, rax	       159	write.c	FUNCTION_1	CALL_1
0x4002508	        0x4883fe6f	                           cmp rsi, 0x6f	       159	write.c	FUNCTION_1	CALL_1
0x400250c	     0xf863e010000	                           jbe 0x4002650	       159	write.c	FUNCTION_1	CALL_1
0x4002512	    0x488b1d000000	            mov rbx, qword [0x04002519] 	       159	write.c	FUNCTION_1	CALL_1
0x4002519	        0x4883c070	                           add rax, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x400251d	          0x4839d8	                            cmp rax, rbx	       159	write.c	FUNCTION_1	CALL_1
0x4002520	     0xf847a010000	                            je 0x40026a0	       159	write.c	FUNCTION_1	CALL_1
0x4002526	    0x488b35000000	            mov rsi, qword [0x0400252d] 	       159	write.c	FUNCTION_1	CALL_1
0x400252d	          0x4989fb	                            mov r11, rdi	       159	write.c	FUNCTION_1	CALL_1
0x4002530	          0x4801f0	                            add rax, rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002533	          0x48f7d6	                                 not rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002536	          0x4821f0	                            and rax, rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002539	    0x488b35000000	            mov rsi, qword [0x04002540] 	       159	write.c	FUNCTION_1	CALL_1
0x4002540	          0x4989c2	                            mov r10, rax	       159	write.c	FUNCTION_1	CALL_1
0x4002543	    0x488905000000	            mov qword [0x0400254a], rax 	       159	write.c	FUNCTION_1	CALL_1
0x400254a	          0x4929f2	                            sub r10, rsi	       159	write.c	FUNCTION_1	CALL_1
0x400254d	          0x4929f3	                            sub r11, rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002550	          0x4d39da	                            cmp r10, r11	       159	write.c	FUNCTION_1	CALL_1
0x4002553	            0x760a	                           jbe 0x400255f	       159	write.c	FUNCTION_1	CALL_1
0x4002555	    0x48893d000000	            mov qword [0x0400255c], rdi 	       159	write.c	FUNCTION_1	CALL_1
0x400255c	          0x4889f8	                            mov rax, rdi	       159	write.c	FUNCTION_1	CALL_1
0x400255f	    0x488905000000	            mov qword [0x04002566], rax 	       159	write.c	FUNCTION_1	CALL_1
0x4002566	        0x400fb6c5	                          movzx eax, bpl	       165	write.c	FUNCTION_1	IF_1
0x400256a	        0x4c896308	                mov qword [rbx + 8], r12	       161	write.c	FUNCTION_1
0x400256e	            0x39c5	                            cmp ebp, eax	       165	write.c	FUNCTION_1	IF_1
0x4002570	    0x48c743100000	               mov qword [rbx + 0x10], 0	       162	write.c	FUNCTION_1
0x4002578	        0x40886b02	                 mov byte [rbx + 2], bpl	       163	write.c	FUNCTION_1
0x400257c	     0xf852a010000	                           jne 0x40026ac	       165	write.c	FUNCTION_1	IF_1
0x4002582	    0x488b05000000	            mov rax, qword [0x04002589] 	       173	write.c	FUNCTION_1
0x4002589	        0x4183e001	                              and r8d, 1	       185	write.c	FUNCTION_1
0x400258d	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       196	write.c	FUNCTION_1	CALL_6
0x4002591	        0x48895318	             mov qword [rbx + 0x18], rdx	       170	write.c	FUNCTION_1
0x4002595	    0x48c743200000	               mov qword [rbx + 0x20], 0	       171	write.c	FUNCTION_1
0x400259d	        0x48894b28	             mov qword [rbx + 0x28], rcx	       172	write.c	FUNCTION_1
0x40025a1	        0x44894b50	             mov dword [rbx + 0x50], r9d	       176	write.c	FUNCTION_1
0x40025a5	        0x48894330	             mov qword [rbx + 0x30], rax	       173	write.c	FUNCTION_1
0x40025a9	    0x488b05000000	            mov rax, qword [0x040025b0] 	       174	write.c	FUNCTION_1
0x40025b0	    0x48c743480000	               mov qword [rbx + 0x48], 0	       179	write.c	FUNCTION_1
0x40025b8	        0xc6430100	                   mov byte [rbx + 1], 0	       178	write.c	FUNCTION_1
0x40025bc	    0x48c743580000	               mov qword [rbx + 0x58], 0	       180	write.c	FUNCTION_1
0x40025c4	          0x448803	                     mov byte [rbx], r8b	       185	write.c	FUNCTION_1
0x40025c7	        0x48894338	             mov qword [rbx + 0x38], rax	       174	write.c	FUNCTION_1
0x40025cb	      0xe800000000	                          call 0x40025d0	       196	write.c	FUNCTION_1	CALL_6
0x40025d0	        0x48894360	             mov qword [rbx + 0x60], rax	       196	write.c	FUNCTION_1	CALL_6
0x40025d4	    0x8b0500000000	            mov eax, dword [0x040025da] 	       202	write.c	FUNCTION_1
0x40025da	            0x85c0	                           test eax, eax	       202	write.c	FUNCTION_1
0x40025dc	            0x7532	                           jne 0x4002610	       202	write.c	FUNCTION_1
0x40025de	    0x488b05000000	            mov rax, qword [0x040025e5] 	       202	write.c	FUNCTION_1
0x40025e5	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       202	write.c	FUNCTION_1
0x40025e9	        0x488d5020	                   lea rdx, [rax + 0x20]	       202	write.c	FUNCTION_1
0x40025ed	        0x4883c028	                           add rax, 0x28	       205	write.c	FUNCTION_1
0x40025f1	        0x48894b40	             mov qword [rbx + 0x40], rcx	       209	write.c	FUNCTION_1	IF_2
0x40025f5	          0x48891a	                    mov qword [rdx], rbx	       210	write.c	FUNCTION_1	IF_2
0x40025f8	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       211	write.c	FUNCTION_1	IF_2	IF_3
0x40025fd	            0x7439	                            je 0x4002638	       211	write.c	FUNCTION_1	IF_2	IF_3
0x40025ff	        0x4883c420	                           add rsp, 0x20	       321	write.c	FUNCTION_4
0x4002603	          0x4889d8	                            mov rax, rbx	       321	write.c	FUNCTION_4
0x4002606	              0x5b	                                 pop rbx	       321	write.c	FUNCTION_4
0x4002607	              0x5d	                                 pop rbp	       321	write.c	FUNCTION_4
0x4002608	            0x415c	                                 pop r12	       321	write.c	FUNCTION_4
0x400260a	              0xc3	                                     ret	       321	write.c	FUNCTION_4
0x400260b	       0xf1f440000	                   nop dword [rax + rax]	       321	write.c	FUNCTION_4
0x4002610	    0x488b05000000	            mov rax, qword [0x04002617] 	       201	write.c	FUNCTION_1	CALL_7
0x4002617	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       201	write.c	FUNCTION_1	CALL_7
0x400261e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       202	write.c	FUNCTION_1
0x4002622	        0x488d5010	                   lea rdx, [rax + 0x10]	       202	write.c	FUNCTION_1
0x4002626	        0x4883c018	                           add rax, 0x18	       205	write.c	FUNCTION_1
0x400262a	        0x48894b40	             mov qword [rbx + 0x40], rcx	       209	write.c	FUNCTION_1	IF_2
0x400262e	          0x48891a	                    mov qword [rdx], rbx	       210	write.c	FUNCTION_1	IF_2
0x4002631	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       211	write.c	FUNCTION_1	IF_2	IF_3
0x4002636	            0x75c7	                           jne 0x40025ff	       211	write.c	FUNCTION_1	IF_2	IF_3
0x4002638	          0x488918	                    mov qword [rax], rbx	       212	write.c	FUNCTION_1	IF_2	IF_3
0x400263b	        0x4883c420	                           add rsp, 0x20	       321	write.c	FUNCTION_4
0x400263f	          0x4889d8	                            mov rax, rbx	       321	write.c	FUNCTION_4
0x4002642	              0x5b	                                 pop rbx	       321	write.c	FUNCTION_4
0x4002643	              0x5d	                                 pop rbp	       321	write.c	FUNCTION_4
0x4002644	            0x415c	                                 pop r12	       321	write.c	FUNCTION_4
0x4002646	              0xc3	                                     ret	       321	write.c	FUNCTION_4
0x4002647	    0x660f1f840000	                    nop word [rax + rax]	       321	write.c	FUNCTION_4
0x4002650	      0xbf00000000	                              mov edi, 0	       159	write.c	FUNCTION_1	CALL_1
0x4002655	      0xbe70000000	                           mov esi, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x400265a	      0x44894c241c	             mov dword [rsp + 0x1c], r9d	       159	write.c	FUNCTION_1	CALL_1
0x400265f	      0x4489442418	             mov dword [rsp + 0x18], r8d	       159	write.c	FUNCTION_1	CALL_1
0x4002664	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       159	write.c	FUNCTION_1	CALL_1
0x4002669	      0x4889542408	                mov qword [rsp + 8], rdx	       159	write.c	FUNCTION_1	CALL_1
0x400266e	      0xe800000000	                          call 0x4002673	       159	write.c	FUNCTION_1	CALL_1
0x4002673	    0x488b05000000	            mov rax, qword [0x0400267a] 	       159	write.c	FUNCTION_1	CALL_1
0x400267a	    0x488b3d000000	            mov rdi, qword [0x04002681] 	       159	write.c	FUNCTION_1	CALL_1
0x4002681	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	       159	write.c	FUNCTION_1	CALL_1
0x4002686	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	       159	write.c	FUNCTION_1	CALL_1
0x400268b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       159	write.c	FUNCTION_1	CALL_1
0x4002690	      0x488b542408	                mov rdx, qword [rsp + 8]	       159	write.c	FUNCTION_1	CALL_1
0x4002695	      0xe978feffff	                           jmp 0x4002512	       159	write.c	FUNCTION_1	CALL_1
0x400269a	    0x660f1f440000	                    nop word [rax + rax]	       159	write.c	FUNCTION_1	CALL_1
0x40026a0	    0x800d00000000	                 or byte [0x040026a7], 2	       159	write.c	FUNCTION_1	CALL_1
0x40026a7	      0xe97afeffff	                           jmp 0x4002526	       159	write.c	FUNCTION_1	CALL_1
0x40026ac	      0xba05000000	                              mov edx, 5	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40026b1	      0xbe00000000	                              mov esi, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40026b6	            0x31ff	                            xor edi, edi	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40026b8	      0xe800000000	                          call 0x40026bd	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40026bd	            0x89ee	                            mov esi, ebp	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40026bf	          0x4889c7	                            mov rdi, rax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40026c2	            0x31c0	                            xor eax, eax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40026c4	      0xe800000000	                          call 0x40026c9	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40026c9	      0xba00000000	                              mov edx, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40026ce	      0xbea8000000	                           mov esi, 0xa8	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40026d3	      0xbf00000000	                              mov edi, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40026d8	      0xe800000000	                          call 0x40026dd	       168	write.c	FUNCTION_1	IF_1	CALL_4
install_reloc	IF,1:CALL,9:functions,0:SWITCH,1:DO,0:WHILE,0:ELSE,0:FOR,0	85
0x4000640	            0x4156	                                push r14	      1160	write.c	FUNCTION_19
0x4000642	            0x4155	                                push r13	      1160	write.c	FUNCTION_19
0x4000644	          0x4989fe	                            mov r14, rdi	      1160	write.c	FUNCTION_19
0x4000647	            0x4154	                                push r12	      1160	write.c	FUNCTION_19
0x4000649	              0x55	                                push rbp	      1160	write.c	FUNCTION_19
0x400064a	          0x4989cc	                            mov r12, rcx	      1160	write.c	FUNCTION_19
0x400064d	              0x53	                                push rbx	      1160	write.c	FUNCTION_19
0x400064e	          0x4889d5	                            mov rbp, rdx	      1160	write.c	FUNCTION_19
0x4000651	          0x4889f3	                            mov rbx, rsi	      1160	write.c	FUNCTION_19
0x4000654	          0x4589c5	                           mov r13d, r8d	      1160	write.c	FUNCTION_19
0x4000657	        0x4883ec10	                           sub rsp, 0x10	      1160	write.c	FUNCTION_19
0x400065b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1160	write.c	FUNCTION_19
0x4000664	      0x4889442408	                mov qword [rsp + 8], rax	      1160	write.c	FUNCTION_19
0x4000669	            0x31c0	                            xor eax, eax	      1160	write.c	FUNCTION_19
0x400066b	          0x488b06	                    mov rax, qword [rsi]	      1165	write.c	FUNCTION_19	IF_1
0x400066e	          0x4885c0	                           test rax, rax	      1165	write.c	FUNCTION_19	IF_1
0x4000671	            0x7440	                            je 0x40006b3	      1165	write.c	FUNCTION_19	IF_1
0x4000673	          0x488b00	                    mov rax, qword [rax]	      1166	write.c	FUNCTION_19	IF_1
0x4000676	          0x4885c0	                           test rax, rax	      1166	write.c	FUNCTION_19	IF_1
0x4000679	            0x7438	                            je 0x40006b3	      1166	write.c	FUNCTION_19	IF_1
0x400067b	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1167	write.c	FUNCTION_19	IF_1
0x400067e	          0xf6c220	                           test dl, 0x20	      1167	write.c	FUNCTION_19	IF_1
0x4000681	            0x7530	                           jne 0x40006b3	      1167	write.c	FUNCTION_19	IF_1
0x4000683	          0x80e601	                               and dh, 1	      1168	write.c	FUNCTION_19	IF_1
0x4000686	            0x740a	                            je 0x4000692	      1168	write.c	FUNCTION_19	IF_1
0x4000688	    0x488178200000	               cmp qword [rax + 0x20], 0	      1169	write.c	FUNCTION_19	IF_1
0x4000690	            0x7421	                            je 0x40006b3	      1169	write.c	FUNCTION_19	IF_1
0x4000692	      0xba05000000	                              mov edx, 5	      1171	write.c	FUNCTION_19	CALL_2
0x4000697	      0xbe00000000	                              mov esi, 0	      1171	write.c	FUNCTION_19	CALL_2
0x400069c	            0x31ff	                            xor edi, edi	      1171	write.c	FUNCTION_19	CALL_2
0x400069e	      0xe800000000	                          call 0x40006a3	      1171	write.c	FUNCTION_19	CALL_2
0x40006a3	          0x4489ee	                           mov esi, r13d	      1171	write.c	FUNCTION_19	CALL_2
0x40006a6	          0x4889c2	                            mov rdx, rax	      1171	write.c	FUNCTION_19	CALL_2
0x40006a9	          0x4c89e7	                            mov rdi, r12	      1171	write.c	FUNCTION_19	CALL_2
0x40006ac	            0x31c0	                            xor eax, eax	      1171	write.c	FUNCTION_19	CALL_2
0x40006ae	      0xe800000000	                          call 0x40006b3	      1171	write.c	FUNCTION_19	CALL_2
0x40006b3	        0x488b4d00	                    mov rcx, qword [rbp]	      1173	write.c	FUNCTION_19	CALL_3
0x40006b7	    0x488b3d000000	            mov rdi, qword [0x040006be] 	      1173	write.c	FUNCTION_19	CALL_3
0x40006be	        0x488d557c	                   lea rdx, [rbp + 0x7c]	      1174	write.c	FUNCTION_19
0x40006c2	          0x4889de	                            mov rsi, rbx	      1173	write.c	FUNCTION_19	CALL_3
0x40006c5	          0x4989e1	                             mov r9, rsp	      1173	write.c	FUNCTION_19	CALL_3
0x40006c8	          0x4d89f0	                             mov r8, r14	      1173	write.c	FUNCTION_19	CALL_3
0x40006cb	      0xe800000000	                          call 0x40006d0	      1173	write.c	FUNCTION_19	CALL_3
0x40006d0	          0x83f803	                              cmp eax, 3	      1176	write.c	FUNCTION_19	SWITCH_1
0x40006d3	            0x89c3	                            mov ebx, eax	      1173	write.c	FUNCTION_19	CALL_3
0x40006d5	            0x7479	                            je 0x4000750	      1176	write.c	FUNCTION_19	SWITCH_1
0x40006d7	          0x83f804	                              cmp eax, 4	      1176	write.c	FUNCTION_19	SWITCH_1
0x40006da	            0x742c	                            je 0x4000708	      1176	write.c	FUNCTION_19	SWITCH_1
0x40006dc	          0x83f802	                              cmp eax, 2	      1176	write.c	FUNCTION_19	SWITCH_1
0x40006df	            0x7448	                            je 0x4000729	      1176	write.c	FUNCTION_19	SWITCH_1
0x40006e1	      0xba05000000	                              mov edx, 5	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006e6	      0xbe00000000	                              mov esi, 0	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006eb	            0x31ff	                            xor edi, edi	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006ed	      0xe800000000	                          call 0x40006f2	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006f2	            0x89d9	                            mov ecx, ebx	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006f4	          0x4889c7	                            mov rdi, rax	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006f7	          0x4489ea	                           mov edx, r13d	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006fa	          0x4c89e6	                            mov rsi, r12	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006fd	            0x31c0	                            xor eax, eax	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x40006ff	      0xe800000000	                          call 0x4000704	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000704	         0xf1f4000	                         nop dword [rax]	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000708	      0xba05000000	                              mov edx, 5	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x400070d	      0xbe00000000	                              mov esi, 0	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000712	            0x31ff	                            xor edi, edi	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000714	      0xe800000000	                          call 0x4000719	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000719	          0x4489ee	                           mov esi, r13d	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x400071c	          0x4889c2	                            mov rdx, rax	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x400071f	          0x4c89e7	                            mov rdi, r12	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000722	            0x31c0	                            xor eax, eax	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000724	      0xe800000000	                          call 0x4000729	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000729	      0x488b442408	                mov rax, qword [rsp + 8]	      1190	write.c	FUNCTION_19
0x400072e	    0x644833042528	                xor rax, qword fs:[0x28]	      1190	write.c	FUNCTION_19
0x4000737	            0x7523	                           jne 0x400075c	      1190	write.c	FUNCTION_19
0x4000739	        0x4883c410	                           add rsp, 0x10	      1190	write.c	FUNCTION_19
0x400073d	              0x5b	                                 pop rbx	      1190	write.c	FUNCTION_19
0x400073e	              0x5d	                                 pop rbp	      1190	write.c	FUNCTION_19
0x400073f	            0x415c	                                 pop r12	      1190	write.c	FUNCTION_19
0x4000741	            0x415d	                                 pop r13	      1190	write.c	FUNCTION_19
0x4000743	            0x415e	                                 pop r14	      1190	write.c	FUNCTION_19
0x4000745	              0xc3	                                     ret	      1190	write.c	FUNCTION_19
0x4000746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1190	write.c	FUNCTION_19
0x4000750	      0xba05000000	                              mov edx, 5	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000755	      0xbe00000000	                              mov esi, 0	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x400075a	            0xebb6	                           jmp 0x4000712	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x400075c	      0xe800000000	                          call 0x4000761	      1190	write.c	FUNCTION_19
adjust_reloc_syms	IF,15:CALL,23:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,1:FOR,1	129
0x4000770	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       784	write.c	FUNCTION_16	CALL_1
0x4000777	          0x4885c0	                           test rax, rax	       787	write.c	FUNCTION_16	IF_1
0x400077a	     0xf84e8000000	                            je 0x4000868	       787	write.c	FUNCTION_16	IF_1
0x4000780	            0x4155	                                push r13	       783	write.c	FUNCTION_16
0x4000782	            0x4154	                                push r12	       783	write.c	FUNCTION_16
0x4000784	          0x4989f5	                            mov r13, rsi	       783	write.c	FUNCTION_16
0x4000787	              0x55	                                push rbp	       783	write.c	FUNCTION_16
0x4000788	              0x53	                                push rbx	       783	write.c	FUNCTION_16
0x4000789	        0x4883ec08	                              sub rsp, 8	       783	write.c	FUNCTION_16
0x400078d	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	       792	write.c	FUNCTION_16	FOR_1
0x4000791	          0x4d85e4	                           test r12, r12	       792	write.c	FUNCTION_16	FOR_1
0x4000794	     0xf84c4000000	                            je 0x400085e	       792	write.c	FUNCTION_16	FOR_1
0x400079a	    0x660f1f440000	                    nop word [rax + rax]	       792	write.c	FUNCTION_16	FOR_1
0x40007a0	      0x41f6042420	                   test byte [r12], 0x20	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x40007a5	     0xf85a5000000	                           jne 0x4000850	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x40007ab	      0x498b5c2418	            mov rbx, qword [r12 + 0x18] 	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x40007b0	          0x4885db	                           test rbx, rbx	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x40007b3	     0xf8497000000	                            je 0x4000850	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x40007b9	          0x4889df	                            mov rdi, rbx	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_3
0x40007bc	      0xe800000000	                          call 0x40007c1	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_3
0x40007c1	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40007c6	          0x4885ff	                           test rdi, rdi	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40007c9	            0x7426	                            je 0x40007f1	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x40007cb	      0xe800000000	                          call 0x40007d0	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40007d0	            0xeb1f	                           jmp 0x40007f1	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40007d2	    0x660f1f440000	                    nop word [rax + rax]	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x40007d8	          0x4889df	                            mov rdi, rbx	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40007db	          0x4889eb	                            mov rbx, rbp	       826	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x40007de	      0xe800000000	                          call 0x40007e3	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40007e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40007e7	      0x4901442428	            add qword [r12 + 0x28], rax 	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x40007ec	      0x49896c2418	             mov qword [r12 + 0x18], rbp	       826	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x40007f1	          0x4889df	                            mov rdi, rbx	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x40007f4	      0xe800000000	                          call 0x40007f9	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x40007f9	            0x85c0	                           test eax, eax	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x40007fb	            0x7510	                           jne 0x400080d	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x40007fd	          0x4889df	                            mov rdi, rbx	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000800	      0xe800000000	                          call 0x4000805	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000805	            0x85c0	                           test eax, eax	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000807	     0xf8443010000	                            je 0x4000950	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x400080d	          0x4889df	                            mov rdi, rbx	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000810	      0xe800000000	                          call 0x4000815	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000815	          0x488b28	                    mov rbp, qword [rax]	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000818	          0x4839eb	                            cmp rbx, rbp	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x400081b	            0x75bb	                           jne 0x40007d8	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x400081d	          0x4889ef	                            mov rdi, rbp	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000820	      0xe800000000	                          call 0x4000825	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000825	            0x85c0	                           test eax, eax	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000827	            0x7447	                            je 0x4000870	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000829	          0x4889ef	                            mov rdi, rbp	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x400082c	      0xe800000000	                          call 0x4000831	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4000831	      0x4901442428	            add qword [r12 + 0x28], rax 	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4000836	          0x4889ef	                            mov rdi, rbp	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000839	      0xe800000000	                          call 0x400083e	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x400083e	          0x488b00	                    mov rax, qword [rax]	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000841	      0x4989442418	             mov qword [r12 + 0x18], rax	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000846	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000850	      0x4d8b642440	            mov r12, qword [r12 + 0x40] 	       792	write.c	FUNCTION_16	FOR_1
0x4000855	          0x4d85e4	                           test r12, r12	       792	write.c	FUNCTION_16	FOR_1
0x4000858	     0xf8542ffffff	                           jne 0x40007a0	       792	write.c	FUNCTION_16	FOR_1
0x400085e	        0x4883c408	                              add rsp, 8	       905	write.c	FUNCTION_16
0x4000862	              0x5b	                                 pop rbx	       905	write.c	FUNCTION_16
0x4000863	              0x5d	                                 pop rbp	       905	write.c	FUNCTION_16
0x4000864	            0x415c	                                 pop r12	       905	write.c	FUNCTION_16
0x4000866	            0x415d	                                 pop r13	       905	write.c	FUNCTION_16
0x4000868	            0xf3c3	                                     ret	       905	write.c	FUNCTION_16
0x400086a	    0x660f1f440000	                    nop word [rax + rax]	       905	write.c	FUNCTION_16
0x4000870	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000875	      0xbe01000000	                              mov esi, 1	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x400087a	      0xe800000000	                          call 0x400087f	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x400087f	            0x85c0	                           test eax, eax	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000881	            0x75cd	                           jne 0x4000850	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000883	          0x4c89e7	                            mov rdi, r12	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000886	      0xe800000000	                          call 0x400088b	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x400088b	            0x85c0	                           test eax, eax	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x400088d	            0x74c1	                            je 0x4000850	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x400088f	          0x4889ef	                            mov rdi, rbp	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000892	      0xe800000000	                          call 0x4000897	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000897	            0x85c0	                           test eax, eax	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000899	            0x75b5	                           jne 0x4000850	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x400089b	          0x4889ef	                            mov rdi, rbp	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x400089e	      0xe800000000	                          call 0x40008a3	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x40008a3	          0x4885c0	                           test rax, rax	       856	write.c	FUNCTION_16	ELSE_1	IF_3	IF_10
0x40008a6	          0x4889c3	                            mov rbx, rax	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x40008a9	     0xf84af000000	                            je 0x400095e	       856	write.c	FUNCTION_16	ELSE_1	IF_3	IF_10
0x40008af	    0x483d00000000	                              cmp rax, 0	       859	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x40008b5	            0x7499	                            je 0x4000850	       859	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x40008b7	    0x483b05000000	            cmp rax, qword [0x040008be] 	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x40008be	            0x7490	                            je 0x4000850	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x40008c0	          0x4939c5	                            cmp r13, rax	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x40008c3	     0xf848f000000	                            je 0x4000958	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x40008c9	          0x4889ef	                            mov rdi, rbp	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x40008cc	      0xe800000000	                          call 0x40008d1	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x40008d1	            0x85c0	                           test eax, eax	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x40008d3	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x40008d6	            0x7520	                           jne 0x40008f8	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x40008d8	      0xa900000200	                       test eax, 0x20000	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x40008dd	     0xf856dffffff	                           jne 0x4000850	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x40008e3	          0x488b33	                    mov rsi, qword [rbx]	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x40008e6	      0xbf00000000	                              mov edi, 0	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x40008eb	      0xb90d000000	                            mov ecx, 0xd	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x40008f0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       874	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x40008f2	     0xf8458ffffff	                            je 0x4000850	       874	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x40008f8	      0xa900008000	                      test eax, 0x800000	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x40008fd	            0x7418	                            je 0x4000917	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x40008ff	    0x49837c242800	               cmp qword [r12 + 0x28], 0	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000905	     0xf8545ffffff	                           jne 0x4000850	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x400090b	    0x49837c242000	               cmp qword [r12 + 0x20], 0	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000911	     0xf8539ffffff	                           jne 0x4000850	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000917	          0xf6c404	                              test ah, 4	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x400091a	     0xf8530ffffff	                           jne 0x4000850	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x4000920	          0x4889ef	                            mov rdi, rbp	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x4000923	      0xe800000000	                          call 0x4000928	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x4000928	      0x4901442428	            add qword [r12 + 0x28], rax 	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x400092d	          0x4889ef	                            mov rdi, rbp	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000930	      0xe800000000	                          call 0x4000935	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000935	          0x4889c7	                            mov rdi, rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000938	      0xe800000000	                          call 0x400093d	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x400093d	      0x4989442418	             mov qword [r12 + 0x18], rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000942	      0xe909ffffff	                           jmp 0x4000850	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000947	    0x660f1f840000	                    nop word [rax + rax]	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000950	          0x4889dd	                            mov rbp, rbx	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000953	      0xe9c5feffff	                           jmp 0x400081d	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000958	        0x418b4520	            mov eax, dword [r13 + 0x20] 	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x400095c	            0xeb9a	                           jmp 0x40008f8	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x400095e	      0xba00000000	                              mov edx, 0	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000963	      0xbe59030000	                          mov esi, 0x359	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000968	      0xbf00000000	                              mov edi, 0	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x400096d	      0xe800000000	                          call 0x4000972	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
write_object_file	IF,28:CALL,91:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,2:FOR,8	811
0x40032c0	            0x4157	                                push r15	      2065	write.c	FUNCTION_33
0x40032c2	            0x4156	                                push r14	      2065	write.c	FUNCTION_33
0x40032c4	            0x4155	                                push r13	      2065	write.c	FUNCTION_33
0x40032c6	            0x4154	                                push r12	      2065	write.c	FUNCTION_33
0x40032c8	              0x55	                                push rbp	      2065	write.c	FUNCTION_33
0x40032c9	              0x53	                                push rbx	      2065	write.c	FUNCTION_33
0x40032ca	        0x4883ec58	                           sub rsp, 0x58	      2065	write.c	FUNCTION_33
0x40032ce	    0x488b3d000000	            mov rdi, qword [0x040032d5] 	      1856	write.c	FUNCTION_29	FOR_1
0x40032d5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2065	write.c	FUNCTION_33
0x40032de	      0x4889442448	             mov qword [rsp + 0x48], rax	      2065	write.c	FUNCTION_33
0x40032e3	            0x31c0	                            xor eax, eax	      2065	write.c	FUNCTION_33
0x40032e5	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      1856	write.c	FUNCTION_29	FOR_1
0x40032ec	          0x4885db	                           test rbx, rbx	      1856	write.c	FUNCTION_29	FOR_1
0x40032ef	            0x741f	                            je 0x4003310	      1856	write.c	FUNCTION_29	FOR_1
0x40032f1	     0xf1f80000000	                         nop dword [rax]	      1856	write.c	FUNCTION_29	FOR_1
0x40032f8	          0x4889df	                            mov rdi, rbx	      1857	write.c	FUNCTION_29	CALL_1
0x40032fb	      0xe870daffff	         call sym.subsegs_finish_section	      1857	write.c	FUNCTION_29	CALL_1
0x4003300	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1856	write.c	FUNCTION_29	FOR_1
0x4003304	          0x4885db	                           test rbx, rbx	      1856	write.c	FUNCTION_29	FOR_1
0x4003307	            0x75ef	                           jne 0x40032f8	      1856	write.c	FUNCTION_29	FOR_1
0x4003309	    0x488b3d000000	            mov rdi, qword [0x04003310] 	      1856	write.c	FUNCTION_29	FOR_1
0x4003310	    0x488b05000000	            mov rax, qword [0x04003317] 	      2088	write.c	FUNCTION_33
0x4003317	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2088	write.c	FUNCTION_33
0x400331b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2088	write.c	FUNCTION_33
0x400331f	          0x4885c0	                           test rax, rax	      2088	write.c	FUNCTION_33
0x4003322	     0xf84380a0000	                            je 0x4003d60	      2088	write.c	FUNCTION_33
0x4003328	        0x48895010	             mov qword [rax + 0x10], rdx	      2088	write.c	FUNCTION_33
0x400332c	          0x4885d2	                           test rdx, rdx	      2088	write.c	FUNCTION_33
0x400332f	     0xf841b0a0000	                            je 0x4003d50	      2088	write.c	FUNCTION_33
0x4003335	        0x48894218	             mov qword [rdx + 0x18], rax	      2088	write.c	FUNCTION_33
0x4003339	    0x488b05000000	            mov rax, qword [0x04003340] 	      2089	write.c	FUNCTION_33
0x4003340	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2089	write.c	FUNCTION_33
0x4003344	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2089	write.c	FUNCTION_33
0x4003348	          0x4885c0	                           test rax, rax	      2089	write.c	FUNCTION_33
0x400334b	     0xf84d7090000	                            je 0x4003d28	      2089	write.c	FUNCTION_33
0x4003351	          0x4885d2	                           test rdx, rdx	      2089	write.c	FUNCTION_33
0x4003354	        0x48895010	             mov qword [rax + 0x10], rdx	      2089	write.c	FUNCTION_33
0x4003358	     0xf84e2090000	                            je 0x4003d40	      2089	write.c	FUNCTION_33
0x400335e	        0x48894218	             mov qword [rdx + 0x18], rax	      2089	write.c	FUNCTION_33
0x4003362	    0x83afa0000000	               sub dword [rdi + 0xa0], 2	      2090	write.c	FUNCTION_33
0x4003369	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2092	write.c	FUNCTION_33	CALL_2
0x400336e	      0xbe00000000	                              mov esi, 0	      2092	write.c	FUNCTION_33	CALL_2
0x4003373	    0xc74424400000	               mov dword [rsp + 0x40], 0	      2091	write.c	FUNCTION_33
0x400337b	      0xe800000000	                          call 0x4003380	      2092	write.c	FUNCTION_33	CALL_2
0x4003380	    0x488b3d000000	            mov rdi, qword [0x04003387] 	      2095	write.c	FUNCTION_33	CALL_3
0x4003387	            0x31d2	                            xor edx, edx	      2095	write.c	FUNCTION_33	CALL_3
0x4003389	      0xbe00000000	                              mov esi, 0	      2095	write.c	FUNCTION_33	CALL_3
0x400338e	      0xe800000000	                          call 0x4003393	      2095	write.c	FUNCTION_33	CALL_3
0x4003393	    0x803d00000000	                cmp byte [0x0400339a], 0	      2100	write.c	FUNCTION_33	IF_1
0x400339a	     0xf85e8070000	                           jne 0x4003b88	      2100	write.c	FUNCTION_33	IF_1
0x40033a0	    0xc74424400000	               mov dword [rsp + 0x40], 0	      2105	write.c	FUNCTION_33
0x40033a8	     0xf1f84000000	                   nop dword [rax + rax]	      2105	write.c	FUNCTION_33
0x40033b0	    0x488b3d000000	            mov rdi, qword [0x040033b7] 	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40033b7	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40033bc	      0xbe00000000	                              mov esi, 0	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40033c1	    0xc74424440000	               mov dword [rsp + 0x44], 0	      2128	write.c	FUNCTION_33	WHILE_1
0x40033c9	      0xe800000000	                          call 0x40033ce	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x40033ce	      0x448b4c2444	            mov r9d, dword [rsp + 0x44] 	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x40033d3	      0x8344244001	               add dword [rsp + 0x40], 1	      2130	write.c	FUNCTION_33	WHILE_1
0x40033d8	          0x4585c9	                           test r9d, r9d	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x40033db	            0x75d3	                           jne 0x40033b0	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x40033dd	    0x488b3d000000	            mov rdi, qword [0x040033e4] 	      2144	write.c	FUNCTION_33	CALL_6
0x40033e4	            0x31d2	                            xor edx, edx	      2144	write.c	FUNCTION_33	CALL_6
0x40033e6	      0xbe00000000	                              mov esi, 0	      2144	write.c	FUNCTION_33	CALL_6
0x40033eb	    0xc70500000000	               mov dword [0x040033f5], 1	      2142	write.c	FUNCTION_33
0x40033f5	      0xe800000000	                          call 0x40033fa	      2144	write.c	FUNCTION_33	CALL_6
0x40033fa	    0xc70500000000	               mov dword [0x04003404], 1	      2147	write.c	FUNCTION_33
0x4003404	      0xe800000000	                          call 0x4003409	      2149	write.c	FUNCTION_33	CALL_7
0x4003409	    0x488b3d000000	            mov rdi, qword [0x04003410] 	      1869	write.c	FUNCTION_30	CALL_1
0x4003410	      0xe800000000	                          call 0x4003415	      1869	write.c	FUNCTION_30	CALL_1
0x4003415	          0x4885c0	                           test rax, rax	      1870	write.c	FUNCTION_30	IF_1
0x4003418	          0x4889c5	                            mov rbp, rax	      1869	write.c	FUNCTION_30	CALL_1
0x400341b	     0xf84ad000000	                            je 0x40034ce	      1870	write.c	FUNCTION_30	IF_1
0x4003421	    0x488b05000000	            mov rax, qword [0x04003428] 	      1873	write.c	FUNCTION_30	CALL_2
0x4003428	        0x488b4008	                mov rax, qword [rax + 8]	      1873	write.c	FUNCTION_30	CALL_2
0x400342c	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1873	write.c	FUNCTION_30	CALL_2
0x4003433	    0x488bb8280300	           mov rdi, qword [rax + 0x328] 	      1873	write.c	FUNCTION_30	CALL_2
0x400343a	      0xb800000000	                              mov eax, 0	      1875	write.c	FUNCTION_30	IF_2
0x400343f	          0x4885ff	                           test rdi, rdi	      1875	write.c	FUNCTION_30	IF_2
0x4003442	        0x480f44f8	                          cmove rdi, rax	      1875	write.c	FUNCTION_30	IF_2
0x4003446	            0x31f6	                            xor esi, esi	      1876	write.c	FUNCTION_30	CALL_3
0x4003448	      0xe800000000	                          call 0x400344d	      1876	write.c	FUNCTION_30	CALL_3
0x400344d	    0x488b3d000000	            mov rdi, qword [0x04003454] 	      1878	write.c	FUNCTION_30	CALL_5
0x4003454	          0x4889c3	                            mov rbx, rax	      1876	write.c	FUNCTION_30	CALL_3
0x4003457	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1878	write.c	FUNCTION_30	CALL_5
0x400345e	          0x4889de	                            mov rsi, rbx	      1879	write.c	FUNCTION_30	CALL_6
0x4003461	        0x488b5708	                mov rdx, qword [rdi + 8]	      1878	write.c	FUNCTION_30	CALL_5
0x4003465	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      1878	write.c	FUNCTION_30	CALL_5
0x400346c	    0x8b9238030000	           mov edx, dword [rdx + 0x338] 	      1878	write.c	FUNCTION_30	CALL_5
0x4003472	          0x895004	                mov dword [rax + 4], edx	      1878	write.c	FUNCTION_30	CALL_5
0x4003475	      0xba28000000	                           mov edx, 0x28	      1879	write.c	FUNCTION_30	CALL_6
0x400347a	      0xe800000000	                          call 0x400347f	      1879	write.c	FUNCTION_30	CALL_6
0x400347f	      0xe800000000	                          call 0x4003484	      1880	write.c	FUNCTION_30	CALL_7
0x4003484	          0x4889ef	                            mov rdi, rbp	      1881	write.c	FUNCTION_30	CALL_8
0x4003487	      0xe800000000	                          call 0x400348c	      1881	write.c	FUNCTION_30	CALL_8
0x400348c	    0x488b3d000000	            mov rdi, qword [0x04003493] 	      1882	write.c	FUNCTION_30	CALL_9
0x4003493	          0x4889c6	                            mov rsi, rax	      1882	write.c	FUNCTION_30	CALL_9
0x4003496	          0x4889ea	                            mov rdx, rbp	      1882	write.c	FUNCTION_30	CALL_9
0x4003499	      0xe800000000	                          call 0x400349e	      1882	write.c	FUNCTION_30	CALL_9
0x400349e	          0x4889df	                            mov rdi, rbx	      1884	write.c	FUNCTION_30	CALL_10
0x40034a1	      0xe8cad8ffff	         call sym.subsegs_finish_section	      1884	write.c	FUNCTION_30	CALL_10
0x40034a6	    0x488b83a80000	            mov rax, qword [rbx + 0xa8] 	      1885	write.c	FUNCTION_30	CALL_12
0x40034ad	            0x31d2	                            xor edx, edx	      1885	write.c	FUNCTION_30	CALL_12
0x40034af	          0x4889de	                            mov rsi, rbx	      1885	write.c	FUNCTION_30	CALL_12
0x40034b2	          0x488b00	                    mov rax, qword [rax]	      1885	write.c	FUNCTION_30	CALL_12
0x40034b5	          0x488b38	                    mov rdi, qword [rax]	      1885	write.c	FUNCTION_30	CALL_12
0x40034b8	      0xe800000000	                          call 0x40034bd	      1885	write.c	FUNCTION_30	CALL_12
0x40034bd	    0x488b3d000000	            mov rdi, qword [0x040034c4] 	      1886	write.c	FUNCTION_30	CALL_13
0x40034c4	            0x31d2	                            xor edx, edx	      1886	write.c	FUNCTION_30	CALL_13
0x40034c6	          0x4889de	                            mov rsi, rbx	      1886	write.c	FUNCTION_30	CALL_13
0x40034c9	      0xe8b2d4ffff	                       call sym.size_seg	      1886	write.c	FUNCTION_30	CALL_13
0x40034ce	    0x488b1d000000	            mov rbx, qword [0x040034d5] 	      2261	write.c	FUNCTION_33	IF_9
0x40034d5	          0x4885db	                           test rbx, rbx	      2261	write.c	FUNCTION_33	IF_9
0x40034d8	     0xf841a000000	                            je 0x40034f8	      2261	write.c	FUNCTION_33	IF_9
0x40034de	            0x6690	                                     nop	      2261	write.c	FUNCTION_33	IF_9
0x40034e0	          0x4889df	                            mov rdi, rbx	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x40034e3	      0xe800000000	                          call 0x40034e8	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x40034e8	          0x4889df	                            mov rdi, rbx	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40034eb	      0xe800000000	                          call 0x40034f0	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40034f0	          0x4885c0	                           test rax, rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40034f3	          0x4889c3	                            mov rbx, rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40034f6	            0x75e8	                           jne 0x40034e0	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x40034f8	      0xe800000000	                          call 0x40034fd	      2268	write.c	FUNCTION_33	CALL_21
0x40034fd	    0x488b3d000000	            mov rdi, qword [0x04003504] 	       679	write.c	FUNCTION_15	CALL_1
0x4003504	    0x41bf02000000	                             mov r15d, 2	       679	write.c	FUNCTION_15	CALL_1
0x400350a	      0xe800000000	                          call 0x400350f	       679	write.c	FUNCTION_15	CALL_1
0x400350f	          0x8d48ff	                      lea ecx, [rax - 1]	       679	write.c	FUNCTION_15	CALL_1
0x4003512	    0x488b1d000000	            mov rbx, qword [0x04003519] 	       683	write.c	FUNCTION_15	FOR_1
0x4003519	          0x49d3e7	                             shl r15, cl	       680	write.c	FUNCTION_15
0x400351c	        0x498d47ff	                      lea rax, [r15 - 1]	       681	write.c	FUNCTION_15
0x4003520	          0x4885db	                           test rbx, rbx	       683	write.c	FUNCTION_15	FOR_1
0x4003523	      0x4889442408	                mov qword [rsp + 8], rax	       681	write.c	FUNCTION_15
0x4003528	     0xf858e000000	                           jne 0x40035bc	       683	write.c	FUNCTION_15	FOR_1
0x400352e	      0xe9b5010000	                           jmp 0x40036e8	       683	write.c	FUNCTION_15	FOR_1
0x4003533	       0xf1f440000	                   nop dword [rax + rax]	       683	write.c	FUNCTION_15	FOR_1
0x4003538	      0xe800000000	                          call 0x400353d	       719	write.c	FUNCTION_15	FOR_1	IF_4	CALL_10
0x400353d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x4003541	      0xe800000000	                          call 0x4003546	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x4003546	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x400354a	          0x80fa02	                               cmp dl, 2	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x400354d	     0xf845d010000	                            je 0x40036b0	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4003553	          0x4531e4	                          xor r12d, r12d	       715	write.c	FUNCTION_15	FOR_1
0x4003556	          0x80fa03	                               cmp dl, 3	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4003559	     0xf8481030000	                            je 0x40038e0	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x400355f	      0xba05000000	                              mov edx, 5	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003564	      0xbe00000000	                              mov esi, 0	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003569	            0x31ff	                            xor edi, edi	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400356b	      0xe800000000	                          call 0x4003570	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003570	          0x8b7340	            mov esi, dword [rbx + 0x40] 	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003573	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003577	          0x4889c2	                            mov rdx, rax	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400357a	            0x31ed	                            xor ebp, ebp	       732	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x400357c	            0x31c0	                            xor eax, eax	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x400357e	      0xe800000000	                          call 0x4003583	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4003583	          0x4d85e4	                           test r12, r12	       760	write.c	FUNCTION_15	FOR_1	IF_11
0x4003586	     0xf8490000000	                            je 0x400361c	       760	write.c	FUNCTION_15	FOR_1	IF_11
0x400358c	        0x48896b08	                mov qword [rbx + 8], rbp	       767	write.c	FUNCTION_15	FOR_1
0x4003590	          0x4c89e7	                            mov rdi, r12	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x4003593	      0xe800000000	                          call 0x4003598	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x4003598	        0x48894310	             mov qword [rbx + 0x10], rax	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x400359c	        0x488d4310	                   lea rax, [rbx + 0x10]	       769	write.c	FUNCTION_15	FOR_1
0x40035a0	        0x4c896b20	             mov qword [rbx + 0x20], r13	       770	write.c	FUNCTION_15	FOR_1
0x40035a4	        0x4c897b28	             mov qword [rbx + 0x28], r15	       771	write.c	FUNCTION_15	FOR_1
0x40035a8	        0x4c897330	             mov qword [rbx + 0x30], r14	       772	write.c	FUNCTION_15	FOR_1
0x40035ac	        0x48894318	             mov qword [rbx + 0x18], rax	       769	write.c	FUNCTION_15	FOR_1
0x40035b0	          0x488b1b	                    mov rbx, qword [rbx]	       683	write.c	FUNCTION_15	FOR_1
0x40035b3	          0x4885db	                           test rbx, rbx	       683	write.c	FUNCTION_15	FOR_1
0x40035b6	     0xf842c010000	                            je 0x40036e8	       683	write.c	FUNCTION_15	FOR_1
0x40035bc	        0x488b7b08	                mov rdi, qword [rbx + 8]	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x40035c0	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	       685	write.c	FUNCTION_15	FOR_1
0x40035c4	      0xe800000000	                          call 0x40035c9	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x40035c9	        0x488b7b08	                mov rdi, qword [rbx + 8]	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x40035cd	      0xe800000000	                          call 0x40035d2	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x40035d2	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x40035d6	          0x80fa02	                               cmp dl, 2	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x40035d9	            0x746d	                            je 0x4003648	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x40035db	          0x4531ed	                          xor r13d, r13d	       694	write.c	FUNCTION_15	FOR_1
0x40035de	          0x80fa03	                               cmp dl, 3	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x40035e1	     0xf84c9020000	                            je 0x40038b0	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x40035e7	      0xba05000000	                              mov edx, 5	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40035ec	      0xbe00000000	                              mov esi, 0	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40035f1	            0x31ff	                            xor edi, edi	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40035f3	      0xe800000000	                          call 0x40035f8	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40035f8	          0x8b7340	            mov esi, dword [rbx + 0x40] 	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40035fb	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x40035ff	          0x4889c2	                            mov rdx, rax	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4003602	            0x31ed	                            xor ebp, ebp	       710	write.c	FUNCTION_15	FOR_1	IF_3
0x4003604	            0x31c0	                            xor eax, eax	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4003606	      0xe800000000	                          call 0x400360b	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x400360b	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x400360f	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	       716	write.c	FUNCTION_15	FOR_1
0x4003613	          0x4885ff	                           test rdi, rdi	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x4003616	     0xf851cffffff	                           jne 0x4003538	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x400361c	    0x4c8b25000000	            mov r12, qword [0x04003623] 	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x4003623	          0x4d85e4	                           test r12, r12	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x4003626	     0xf8560ffffff	                           jne 0x400358c	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x400362c	      0xbf00000000	                              mov edi, 0	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003631	      0xe800000000	                          call 0x4003636	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003636	    0x488905000000	            mov qword [0x0400363d], rax 	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x400363d	          0x4989c4	                            mov r12, rax	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003640	      0xe947ffffff	                           jmp 0x400358c	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003645	           0xf1f00	                         nop dword [rax]	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4003648	        0x4c8b6308	                mov r12, qword [rbx + 8]	       697	write.c	FUNCTION_15	FOR_1	IF_1
0x400364c	          0x4531ed	                          xor r13d, r13d	       694	write.c	FUNCTION_15	FOR_1
0x400364f	          0x4d85e4	                           test r12, r12	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4003652	            0x7493	                            je 0x40035e7	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4003654	          0x4c89e7	                            mov rdi, r12	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4003657	      0xe800000000	                          call 0x400365c	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x400365c	    0x483d00000000	                              cmp rax, 0	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003662	          0x4889c5	                            mov rbp, rax	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4003665	           0xf94c2	                                 sete dl	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003668	          0x4885c0	                           test rax, rax	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400366b	           0xf94c0	                                 sete al	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400366e	             0x8c2	                               or dl, al	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003670	     0xf8571ffffff	                           jne 0x40035e7	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003676	    0x4881fd000000	                              cmp rbp, 0	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400367d	     0xf8464ffffff	                            je 0x40035e7	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003683	    0x483b2d000000	            cmp rbp, qword [0x0400368a] 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400368a	     0xf8457ffffff	                            je 0x40035e7	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003690	    0x483b2d000000	            cmp rbp, qword [0x04003697] 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4003697	     0xf844affffff	                            je 0x40035e7	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x400369d	          0x4c89e7	                            mov rdi, r12	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40036a0	      0xe800000000	                          call 0x40036a5	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40036a5	          0x4901c5	                            add r13, rax	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40036a8	      0xe95effffff	                           jmp 0x400360b	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40036ad	           0xf1f00	                         nop dword [rax]	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x40036b0	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       722	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x40036b4	          0x4d85e4	                           test r12, r12	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40036b7	     0xf84c6feffff	                            je 0x4003583	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40036bd	          0x4885ed	                           test rbp, rbp	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40036c0	     0xf84bdfeffff	                            je 0x4003583	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x40036c6	          0x4c89e7	                            mov rdi, r12	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40036c9	      0xe800000000	                          call 0x40036ce	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40036ce	            0x85c0	                           test eax, eax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40036d0	     0xf85fa040000	                           jne 0x4003bd0	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x40036d6	          0x4c89e7	                            mov rdi, r12	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x40036d9	      0xe800000000	                          call 0x40036de	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x40036de	      0xe9a0feffff	                           jmp 0x4003583	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x40036e3	       0xf1f440000	                   nop dword [rax + rax]	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x40036e8	    0x448b05000000	            mov r8d, dword [0x040036ef] 	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x40036ef	          0x4585c0	                           test r8d, r8d	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x40036f2	     0xf8588020000	                           jne 0x4003980	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x40036f8	      0xe800000000	                          call 0x40036fd	      2282	write.c	FUNCTION_33	CALL_26
0x40036fd	    0x488b3d000000	            mov rdi, qword [0x04003704] 	      2285	write.c	FUNCTION_33	CALL_27
0x4003704	            0x31d2	                            xor edx, edx	      2285	write.c	FUNCTION_33	CALL_27
0x4003706	      0xbe00000000	                              mov esi, 0	      2285	write.c	FUNCTION_33	CALL_27
0x400370b	            0x31ed	                            xor ebp, ebp	      2285	write.c	FUNCTION_33	CALL_27
0x400370d	      0xe800000000	                          call 0x4003712	      2285	write.c	FUNCTION_33	CALL_27
0x4003712	    0x488b3d000000	            mov rdi, qword [0x04003719] 	      2294	write.c	FUNCTION_33	CALL_30
0x4003719	            0x31d2	                            xor edx, edx	      2294	write.c	FUNCTION_33	CALL_30
0x400371b	      0xbe00000000	                              mov esi, 0	      2294	write.c	FUNCTION_33	CALL_30
0x4003720	      0xe800000000	                          call 0x4003725	      2294	write.c	FUNCTION_33	CALL_30
0x4003725	    0x488b1d000000	            mov rbx, qword [0x0400372c] 	      2297	write.c	FUNCTION_33	IF_11
0x400372c	          0x4885db	                           test rbx, rbx	      2297	write.c	FUNCTION_33	IF_11
0x400372f	            0x743c	                            je 0x400376d	      2297	write.c	FUNCTION_33	IF_11
0x4003731	     0xf1f80000000	                         nop dword [rax]	      2297	write.c	FUNCTION_33	IF_11
0x4003738	            0x85ed	                           test ebp, ebp	      2307	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x400373a	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      2304	write.c	FUNCTION_33	IF_11	FOR_8
0x4003742	          0x4889df	                            mov rdi, rbx	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003745	            0x7461	                            je 0x40037a8	      2307	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x4003747	      0xe800000000	                          call 0x400374c	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400374c	          0x4889df	                            mov rdi, rbx	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400374f	          0x4889c5	                            mov rbp, rax	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003752	      0xe800000000	                          call 0x4003757	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003757	        0x48894510	            mov qword [rbp + 0x10], rax 	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400375b	            0x31ed	                            xor ebp, ebp	      2313	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x400375d	          0x4889df	                            mov rdi, rbx	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4003760	      0xe800000000	                          call 0x4003765	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4003765	          0x4885c0	                           test rax, rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4003768	          0x4889c3	                            mov rbx, rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x400376b	            0x75cb	                           jne 0x4003738	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x400376d	      0xe800000000	                          call 0x4003772	      2428	write.c	FUNCTION_33	CALL_81
0x4003772	      0xe800000000	                          call 0x4003777	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x4003777	            0x85c0	                           test eax, eax	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x4003779	     0xf84d1040000	                            je 0x4003c50	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x400377f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2481	write.c	FUNCTION_33
0x4003784	    0x644833042528	                xor rax, qword fs:[0x28]	      2481	write.c	FUNCTION_33
0x400378d	     0xf85fc080000	                           jne 0x400408f	      2481	write.c	FUNCTION_33
0x4003793	        0x4883c458	                           add rsp, 0x58	      2481	write.c	FUNCTION_33
0x4003797	              0x5b	                                 pop rbx	      2481	write.c	FUNCTION_33
0x4003798	              0x5d	                                 pop rbp	      2481	write.c	FUNCTION_33
0x4003799	            0x415c	                                 pop r12	      2481	write.c	FUNCTION_33
0x400379b	            0x415d	                                 pop r13	      2481	write.c	FUNCTION_33
0x400379d	            0x415e	                                 pop r14	      2481	write.c	FUNCTION_33
0x400379f	            0x415f	                                 pop r15	      2481	write.c	FUNCTION_33
0x40037a1	              0xc3	                                     ret	      2481	write.c	FUNCTION_33
0x40037a2	    0x660f1f440000	                    nop word [rax + rax]	      2481	write.c	FUNCTION_33
0x40037a8	      0xe800000000	                          call 0x40037ad	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x40037ad	            0x85c0	                           test eax, eax	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x40037af	          0x4889df	                            mov rdi, rbx	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x40037b2	            0x7424	                            je 0x40037d8	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x40037b4	      0xe800000000	                          call 0x40037b9	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x40037b9	            0x85c0	                           test eax, eax	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x40037bb	     0xf853f010000	                           jne 0x4003900	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x40037c1	      0xba00000000	                              mov edx, 0	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40037c6	      0xbe00000000	                              mov esi, 0	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40037cb	          0x4889df	                            mov rdi, rbx	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40037ce	      0xe800000000	                          call 0x40037d3	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x40037d3	            0xeb86	                           jmp 0x400375b	      2397	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x40037d5	           0xf1f00	                         nop dword [rax]	      2397	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x40037d8	      0xe800000000	                          call 0x40037dd	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x40037dd	          0x4885c0	                           test rax, rax	      2326	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40037e0	          0x4889c5	                            mov rbp, rax	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x40037e3	            0x7428	                            je 0x400380d	      2326	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40037e5	          0x4889df	                            mov rdi, rbx	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x40037e8	      0xe800000000	                          call 0x40037ed	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x40037ed	          0x4889c7	                            mov rdi, rax	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40037f0	      0xe800000000	                          call 0x40037f5	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40037f5	          0x4839c5	                            cmp rbp, rax	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40037f8	          0x4989c4	                            mov r12, rax	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40037fb	            0x7410	                            je 0x400380d	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40037fd	          0x4889df	                            mov rdi, rbx	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x4003800	      0xe800000000	                          call 0x4003805	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x4003805	            0x85c0	                           test eax, eax	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x4003807	     0xf8453030000	                            je 0x4003b60	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x400380d	          0x4889df	                            mov rdi, rbx	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x4003810	      0xe800000000	                          call 0x4003815	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x4003815	          0x4889df	                            mov rdi, rbx	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4003818	      0xe800000000	                          call 0x400381d	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x400381d	            0x85c0	                           test eax, eax	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x400381f	            0x7510	                           jne 0x4003831	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4003821	          0x4889df	                            mov rdi, rbx	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003824	      0xe800000000	                          call 0x4003829	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003829	            0x85c0	                           test eax, eax	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x400382b	     0xf849f020000	                            je 0x4003ad0	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003831	          0x4889df	                            mov rdi, rbx	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x4003834	      0xe800000000	                          call 0x4003839	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x4003839	          0x4889df	                            mov rdi, rbx	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x400383c	          0x4889c5	                            mov rbp, rax	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x400383f	      0xe800000000	                          call 0x4003844	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4003844	            0x85c0	                           test eax, eax	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4003846	            0x7428	                            je 0x4003870	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4003848	        0x807d004c	                    cmp byte [rbp], 0x4c	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400384c	     0xf85de000000	                           jne 0x4003930	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003852	        0x807d0130	                cmp byte [rbp + 1], 0x30	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003856	     0xf85d4000000	                           jne 0x4003930	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400385c	        0x807d0201	                   cmp byte [rbp + 2], 1	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003860	     0xf85ca000000	                           jne 0x4003930	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003866	        0x807d0300	                   cmp byte [rbp + 3], 0	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400386a	     0xf85c0000000	                           jne 0x4003930	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003870	          0x4889df	                            mov rdi, rbx	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x4003873	      0xe800000000	                          call 0x4003878	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x4003878	    0x483b05000000	            cmp rax, qword [0x0400387f] 	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x400387f	     0xf853cffffff	                           jne 0x40037c1	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x4003885	          0x4889df	                            mov rdi, rbx	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x4003888	      0xe800000000	                          call 0x400388d	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x400388d	    0x488b15000000	            mov rdx, qword [0x04003894] 	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x4003894	          0x483b02	                    cmp rax, qword [rdx]	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x4003897	     0xf8424ffffff	                            je 0x40037c1	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x400389d	      0xba05000000	                              mov edx, 5	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40038a2	      0xbe00000000	                              mov esi, 0	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40038a7	            0xeb6c	                           jmp 0x4003915	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40038a9	     0xf1f80000000	                         nop dword [rax]	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40038b0	          0x4c8b20	                    mov r12, qword [rax]	       700	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x40038b3	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       701	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x40038b7	          0x4c89e7	                            mov rdi, r12	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x40038ba	      0xe800000000	                          call 0x40038bf	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x40038bf	          0x4d85e4	                           test r12, r12	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x40038c2	     0xf841ffdffff	                            je 0x40035e7	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x40038c8	        0x80781802	                cmp byte [rax + 0x18], 2	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x40038cc	     0xf8515fdffff	                           jne 0x40035e7	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x40038d2	      0xe97dfdffff	                           jmp 0x4003654	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x40038d7	    0x660f1f840000	                    nop word [rax + rax]	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x40038e0	          0x4c8b20	                    mov r12, qword [rax]	       725	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x40038e3	        0x4c037810	             add r15, qword [rax + 0x10]	       726	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x40038e7	          0x4c89e7	                            mov rdi, r12	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x40038ea	      0xe800000000	                          call 0x40038ef	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x40038ef	        0x80781802	                cmp byte [rax + 0x18], 2	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40038f3	     0xf8566fcffff	                           jne 0x400355f	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40038f9	      0xe9b6fdffff	                           jmp 0x40036b4	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x40038fe	            0x6690	                                     nop	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x4003900	          0x4889df	                            mov rdi, rbx	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003903	      0xe800000000	                          call 0x4003908	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003908	      0xba05000000	                              mov edx, 5	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x400390d	          0x4889c5	                            mov rbp, rax	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003910	      0xbe00000000	                              mov esi, 0	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003915	            0x31ff	                            xor edi, edi	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003917	      0xe800000000	                          call 0x400391c	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x400391c	          0x4889ee	                            mov rsi, rbp	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x400391f	          0x4889c7	                            mov rdi, rax	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003922	            0x31c0	                            xor eax, eax	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003924	      0xe800000000	                          call 0x4003929	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003929	      0xe993feffff	                           jmp 0x40037c1	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x400392e	            0x6690	                                     nop	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x4003930	          0x4889df	                            mov rdi, rbx	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4003933	      0xe800000000	                          call 0x4003938	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4003938	            0x85c0	                           test eax, eax	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x400393a	     0xf8530ffffff	                           jne 0x4003870	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4003940	          0x4889df	                            mov rdi, rbx	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x4003943	      0xe800000000	                          call 0x4003948	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x4003948	          0x488b38	                    mov rdi, qword [rax]	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400394b	      0xe800000000	                          call 0x4003950	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003950	            0x31ff	                            xor edi, edi	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003952	          0x4989c4	                            mov r12, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003955	      0xba05000000	                              mov edx, 5	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400395a	      0xbe00000000	                              mov esi, 0	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400395f	      0xe800000000	                          call 0x4003964	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003964	          0x4c89e2	                            mov rdx, r12	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003967	          0x4889c7	                            mov rdi, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400396a	          0x4889ee	                            mov rsi, rbp	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400396d	            0x31c0	                            xor eax, eax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400396f	      0xe800000000	                          call 0x4003974	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003974	      0xe9f7feffff	                           jmp 0x4003870	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003979	     0xf1f80000000	                         nop dword [rax]	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003980	    0x488b3d000000	            mov rdi, qword [0x04003987] 	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003987	      0xbe00000000	                              mov esi, 0	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x400398c	      0xe800000000	                          call 0x4003991	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003991	          0x4885c0	                           test rax, rax	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4003994	     0xf855efdffff	                           jne 0x40036f8	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x400399a	            0x31f6	                            xor esi, esi	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x400399c	      0xbf00000000	                              mov edi, 0	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x40039a1	      0xe800000000	                          call 0x40039a6	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x40039a6	          0x4889c5	                            mov rbp, rax	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x40039a9	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x40039b0	    0x488b3d000000	            mov rdi, qword [0x040039b7] 	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x40039b7	      0xba28010000	                          mov edx, 0x128	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x40039bc	          0x4889ee	                            mov rsi, rbp	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x40039bf	    0xc74004070000	                  mov dword [rax + 4], 7	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x40039c6	      0xe800000000	                          call 0x40039cb	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x40039cb	    0x488b3d000000	            mov rdi, qword [0x040039d2] 	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x40039d2	    0xc74570020000	               mov dword [rbp + 0x70], 2	      1696	bfd.h	FUNCTION_55
0x40039d9	      0xe800000000	                          call 0x40039de	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x40039de	          0x83f820	                           cmp eax, 0x20	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x40039e1	    0x488b05000000	            mov rax, qword [0x040039e8] 	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40039e8	        0x488b4008	                mov rax, qword [rax + 8]	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40039ec	          0x488b18	                    mov rbx, qword [rax]	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40039ef	     0xf878b040000	                            ja 0x4003e80	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x40039f5	      0xbe00000000	                              mov esi, 0	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40039fa	          0x4889df	                            mov rdi, rbx	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x40039fd	      0xe800000000	                          call 0x4003a02	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003a02	          0x4885c0	                           test rax, rax	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003a05	     0xf8410060000	                            je 0x400401b	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003a0b	    0x48c744240818	               mov qword [rsp + 8], 0x18	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003a14	    0x41bb08000000	                             mov r11d, 8	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003a1a	    0x41be1c000000	                          mov r14d, 0x1c	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4003a20	    0x41bd67060000	                         mov r13d, 0x667	      1979	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3
0x4003a26	    0x48c74424101c	           mov qword [rsp + 0x10], 0x1c 	      1971	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x4003a2f	    0x488b1d000000	            mov rbx, qword [0x04003a36] 	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a36	          0x4531e4	                          xor r12d, r12d	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a39	          0x4531ff	                          xor r15d, r15d	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a3c	          0x4489f0	                           mov eax, r14d	        90	string3.h	FUNCTION_44	CALL_6
0x4003a3f	      0x4889442420	             mov qword [rsp + 0x20], rax	        90	string3.h	FUNCTION_44	CALL_6
0x4003a44	          0x4885db	                           test rbx, rbx	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a47	            0x744a	                            je 0x4003a93	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a49	      0x44896c241c	            mov dword [rsp + 0x1c], r13d	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a4e	          0x4589dd	                          mov r13d, r11d	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a51	     0xf1f80000000	                         nop dword [rax]	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a58	        0x488b4308	                mov rax, qword [rbx + 8]	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a5c	          0x4885c0	                           test rax, rax	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a5f	            0x7420	                            je 0x4003a81	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a61	        0xf6401901	               test byte [rax + 0x19], 1	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a65	            0x741a	                            je 0x4003a81	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a67	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a6b	          0x4885c0	                           test rax, rax	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a6e	            0x7411	                            je 0x4003a81	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a70	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a73	      0x2510000200	                        and eax, 0x20010	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a78	          0x83f810	                           cmp eax, 0x10	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a7b	     0xf844c040000	                            je 0x4003ecd	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003a81	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a85	          0x4885db	                           test rbx, rbx	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a88	            0x75ce	                           jne 0x4003a58	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003a8a	          0x4d85ff	                           test r15, r15	      2053	write.c	FUNCTION_32	ELSE_1	ELSE_2	IF_9
0x4003a8d	     0xf852d050000	                           jne 0x4003fc0	      2053	write.c	FUNCTION_32	ELSE_1	ELSE_2	IF_9
0x4003a93	          0x4889ef	                            mov rdi, rbp	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x4003a96	      0xe8d5d2ffff	         call sym.subsegs_finish_section	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x4003a9b	    0x488b85a80000	            mov rax, qword [rbp + 0xa8] 	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4003aa2	            0x31d2	                            xor edx, edx	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4003aa4	          0x4889ee	                            mov rsi, rbp	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4003aa7	          0x488b00	                    mov rax, qword [rax]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4003aaa	          0x488b38	                    mov rdi, qword [rax]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4003aad	      0xe800000000	                          call 0x4003ab2	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x4003ab2	    0x488b3d000000	            mov rdi, qword [0x04003ab9] 	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003ab9	            0x31d2	                            xor edx, edx	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003abb	          0x4889ee	                            mov rsi, rbp	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003abe	      0xe8bdceffff	                       call sym.size_seg	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003ac3	      0xe930fcffff	                           jmp 0x40036f8	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003ac8	     0xf1f84000000	                   nop dword [rax + rax]	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x4003ad0	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x4003ad5	          0x4889df	                            mov rdi, rbx	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x4003ad8	      0xe800000000	                          call 0x4003add	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x4003add	    0x48391d000000	            cmp qword [0x04003ae4], rbx 	      2381	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x4003ae4	     0xf84d7fcffff	                            je 0x40037c1	      2381	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x4003aea	          0x4889df	                            mov rdi, rbx	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x4003aed	      0xe800000000	                          call 0x4003af2	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x4003af2	            0x85c0	                           test eax, eax	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x4003af4	            0x7528	                           jne 0x4003b1e	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x4003af6	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003afa	            0x85d2	                           test edx, edx	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003afc	            0x7510	                           jne 0x4003b0e	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003afe	          0x4889df	                            mov rdi, rbx	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003b01	      0xe800000000	                          call 0x4003b06	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003b06	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003b08	     0xf8443030000	                            je 0x4003e51	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003b0e	          0x4889df	                            mov rdi, rbx	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4003b11	      0xe800000000	                          call 0x4003b16	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4003b16	            0x85c0	                           test eax, eax	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4003b18	     0xf84a3fcffff	                            je 0x40037c1	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4003b1e	          0x4889df	                            mov rdi, rbx	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x4003b21	      0xe800000000	                          call 0x4003b26	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x4003b26	            0x85c0	                           test eax, eax	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x4003b28	     0xf84d0020000	                            je 0x4003dfe	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x4003b2e	          0x4889df	                            mov rdi, rbx	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003b31	      0xe800000000	                          call 0x4003b36	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003b36	          0x4889df	                            mov rdi, rbx	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003b39	          0x4889c5	                            mov rbp, rax	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003b3c	      0xe800000000	                          call 0x4003b41	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003b41	          0x4889df	                            mov rdi, rbx	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x4003b44	        0x48894510	            mov qword [rbp + 0x10], rax 	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x4003b48	      0xe800000000	                          call 0x4003b4d	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x4003b4d	          0x8b6818	            mov ebp, dword [rax + 0x18] 	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003b50	          0xc1ed0c	                            shr ebp, 0xc	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003b53	          0x83e501	                              and ebp, 1	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003b56	      0xe902fcffff	                           jmp 0x400375d	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003b5b	       0xf1f440000	                   nop dword [rax + rax]	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x4003b60	            0x31ff	                            xor edi, edi	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b62	      0xba05000000	                              mov edx, 5	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b67	      0xbe00000000	                              mov esi, 0	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b6c	      0xe800000000	                          call 0x4003b71	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b71	          0x4c89e6	                            mov rsi, r12	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b74	          0x4889c7	                            mov rdi, rax	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b77	            0x31c0	                            xor eax, eax	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b79	      0xe800000000	                          call 0x4003b7e	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b7e	      0xe98afcffff	                           jmp 0x400380d	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b83	       0xf1f440000	                   nop dword [rax + rax]	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003b88	    0x488b05000000	            mov rax, qword [0x04003b8f] 	      1729	write.c	FUNCTION_26	CALL_1
0x4003b8f	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1729	write.c	FUNCTION_26	CALL_1
0x4003b96	          0x488b10	                    mov rdx, qword [rax]	      1729	write.c	FUNCTION_26	CALL_1
0x4003b99	    0x488b05000000	            mov rax, qword [0x04003ba0] 	      1730	write.c	FUNCTION_26	CALL_2
0x4003ba0	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1730	write.c	FUNCTION_26	CALL_2
0x4003ba7	        0x488b7208	                mov rsi, qword [rdx + 8]	      1729	write.c	FUNCTION_26	CALL_1
0x4003bab	          0x488b08	                    mov rcx, qword [rax]	      1730	write.c	FUNCTION_26	CALL_2
0x4003bae	          0x488b39	                    mov rdi, qword [rcx]	      1729	write.c	FUNCTION_26	CALL_1
0x4003bb1	        0x488b4908	                mov rcx, qword [rcx + 8]	      1732	write.c	FUNCTION_26	CALL_4
0x4003bb5	        0x48897e38	             mov qword [rsi + 0x38], rdi	      1729	write.c	FUNCTION_26	CALL_1
0x4003bb9	        0x48894a08	                mov qword [rdx + 8], rcx	      1731	write.c	FUNCTION_26	CALL_3
0x4003bbd	    0x48c700000000	                      mov qword [rax], 0	      1733	write.c	FUNCTION_26	CALL_5
0x4003bc4	      0xe9d7f7ffff	                           jmp 0x40033a0	      1733	write.c	FUNCTION_26	CALL_5
0x4003bc9	     0xf1f80000000	                         nop dword [rax]	      1733	write.c	FUNCTION_26	CALL_5
0x4003bd0	          0x4c89e7	                            mov rdi, r12	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4003bd3	      0xe800000000	                          call 0x4003bd8	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4003bd8	            0x85c0	                           test eax, eax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4003bda	     0xf85f6faffff	                           jne 0x40036d6	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4003be0	        0xf6452504	               test byte [rbp + 0x25], 4	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003be4	            0x7518	                           jne 0x4003bfe	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003be6	        0x418b7e30	            mov edi, dword [r14 + 0x30] 	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003bea	            0x85ff	                           test edi, edi	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003bec	     0xf84e4faffff	                            je 0x40036d6	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003bf2	        0x418b7610	            mov esi, dword [r14 + 0x10] 	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003bf6	            0x85f6	                           test esi, esi	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003bf8	     0xf853f020000	                           jne 0x4003e3d	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003bfe	          0x4c89e7	                            mov rdi, r12	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x4003c01	      0xe800000000	                          call 0x4003c06	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x4003c06	          0x4889c2	                            mov rdx, rax	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x4003c09	          0x8b4020	            mov eax, dword [rax + 0x20] 	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4003c0c	      0xa900008000	                      test eax, 0x800000	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4003c11	            0x7409	                            je 0x4003c1c	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4003c13	          0x4d85ff	                           test r15, r15	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4003c16	     0xf85bafaffff	                           jne 0x40036d6	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4003c1c	          0xf6c404	                              test ah, 4	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4003c1f	     0xf85b1faffff	                           jne 0x40036d6	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4003c25	          0x4c89e7	                            mov rdi, r12	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4003c28	      0x4889542410	             mov qword [rsp + 0x10], rdx	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4003c2d	      0xe800000000	                          call 0x4003c32	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4003c32	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003c37	          0x4901c7	                            add r15, rax	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4003c3a	          0x4889d7	                            mov rdi, rdx	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003c3d	      0xe800000000	                          call 0x4003c42	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003c42	          0x4989c4	                            mov r12, rax	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003c45	      0xe98cfaffff	                           jmp 0x40036d6	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003c4a	    0x660f1f440000	                    nop word [rax + rax]	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4003c50	    0x488b05000000	            mov rax, qword [0x04003c57] 	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c57	          0x4885c0	                           test rax, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c5a	     0xf8416020000	                            je 0x4003e76	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c60	            0x31db	                            xor ebx, ebx	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c62	    0x660f1f440000	                    nop word [rax + rax]	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c68	          0x4889c7	                            mov rdi, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c6b	          0x83c301	                              add ebx, 1	      1749	write.c	FUNCTION_27	FOR_1
0x4003c6e	      0xe800000000	                          call 0x4003c73	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c73	          0x4885c0	                           test rax, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c76	            0x75f0	                           jne 0x4003c68	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003c78	    0x488b3d000000	            mov rdi, qword [0x04003c7f] 	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003c7f	          0x4863f3	                         movsxd rsi, ebx	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003c82	        0x48c1e603	                              shl rsi, 3	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003c86	      0xe800000000	                          call 0x4003c8b	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003c8b	          0x4989c5	                            mov r13, rax	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003c8e	          0x4889c5	                            mov rbp, rax	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003c91	          0x8d43ff	                      lea eax, [rbx - 1]	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003c94	    0x4c8b25000000	            mov r12, qword [0x04003c9b] 	      1757	write.c	FUNCTION_27	IF_1
0x4003c9b	      0x4d8d74c508	              lea r14, [r13 + rax*8 + 8]	      1757	write.c	FUNCTION_27	IF_1
0x4003ca0	            0xeb2c	                           jmp 0x4003cce	      1757	write.c	FUNCTION_27	IF_1
0x4003ca2	    0x660f1f440000	                    nop word [rax + rax]	      1757	write.c	FUNCTION_27	IF_1
0x4003ca8	          0x83ca20	                            or edx, 0x20	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003cab	          0x895018	             mov dword [rax + 0x18], edx	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003cae	          0x4c89e7	                            mov rdi, r12	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x4003cb1	        0x4883c508	                              add rbp, 8	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x4003cb5	      0xe800000000	                          call 0x4003cba	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x4003cba	          0x4c89e7	                            mov rdi, r12	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003cbd	      0xe800000000	                          call 0x4003cc2	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003cc2	          0x4c39f5	                            cmp rbp, r14	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003cc5	          0x4989c4	                            mov r12, rax	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003cc8	     0xf849e000000	                            je 0x4003d6c	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003cce	          0x4c89e7	                            mov rdi, r12	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003cd1	      0xe800000000	                          call 0x4003cd6	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003cd6	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003cd9	        0x48894500	                    mov qword [rbp], rax	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003cdd	    0x81fa00010000	                          cmp edx, 0x100	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003ce3	            0x75c3	                           jne 0x4003ca8	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003ce5	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003ce9	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003cf0	        0x400f95c7	                               setne dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003cf4	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003cfb	        0x400f95c6	                               setne sil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003cff	            0x21fe	                            and esi, edi	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d01	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d08	        0x400f95c7	                               setne dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d0c	          0x4084fe	                           test sil, dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d0f	            0x7409	                            je 0x4003d1a	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d11	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d18	            0x758e	                           jne 0x4003ca8	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d1a	    0x483b81f80000	            cmp rax, qword [rcx + 0xf8] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d21	            0x7585	                           jne 0x4003ca8	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d23	            0xeb89	                           jmp 0x4003cae	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d25	           0xf1f00	                         nop dword [rax]	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003d28	          0x4885d2	                           test rdx, rdx	      2089	write.c	FUNCTION_33
0x4003d2b	    0x488997900000	             mov qword [rdi + 0x90], rdx	      2089	write.c	FUNCTION_33
0x4003d32	     0xf8526f6ffff	                           jne 0x400335e	      2089	write.c	FUNCTION_33
0x4003d38	     0xf1f84000000	                   nop dword [rax + rax]	      2089	write.c	FUNCTION_33
0x4003d40	    0x488987980000	             mov qword [rdi + 0x98], rax	      2089	write.c	FUNCTION_33
0x4003d47	      0xe916f6ffff	                           jmp 0x4003362	      2089	write.c	FUNCTION_33
0x4003d4c	         0xf1f4000	                         nop dword [rax]	      2089	write.c	FUNCTION_33
0x4003d50	    0x488987980000	             mov qword [rdi + 0x98], rax	      2088	write.c	FUNCTION_33
0x4003d57	      0xe9ddf5ffff	                           jmp 0x4003339	      2088	write.c	FUNCTION_33
0x4003d5c	         0xf1f4000	                         nop dword [rax]	      2088	write.c	FUNCTION_33
0x4003d60	    0x488997900000	             mov qword [rdi + 0x90], rdx	      2088	write.c	FUNCTION_33
0x4003d67	      0xe9c0f5ffff	                           jmp 0x400332c	      2088	write.c	FUNCTION_33
0x4003d6c	            0x89da	                            mov edx, ebx	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003d6e	    0x488b3d000000	            mov rdi, qword [0x04003d75] 	      1770	write.c	FUNCTION_27	CALL_6
0x4003d75	          0x4c89ee	                            mov rsi, r13	      1770	write.c	FUNCTION_27	CALL_6
0x4003d78	      0xe800000000	                          call 0x4003d7d	      1770	write.c	FUNCTION_27	CALL_6
0x4003d7d	            0x85c0	                           test eax, eax	      1771	write.c	FUNCTION_27	CALL_7
0x4003d7f	     0xf84f6020000	                            je 0x400407b	      1771	write.c	FUNCTION_27	CALL_7
0x4003d85	    0xc70500000000	               mov dword [0x04003d8f], 1	      1772	write.c	FUNCTION_27
0x4003d8f	      0xe800000000	                          call 0x4003d94	      2447	write.c	FUNCTION_33	CALL_85
0x4003d94	    0x488b3d000000	            mov rdi, qword [0x04003d9b] 	      2453	write.c	FUNCTION_33	CALL_87
0x4003d9b	            0x31d2	                            xor edx, edx	      2453	write.c	FUNCTION_33	CALL_87
0x4003d9d	      0xbe00000000	                              mov esi, 0	      2453	write.c	FUNCTION_33	CALL_87
0x4003da2	      0xe800000000	                          call 0x4003da7	      2453	write.c	FUNCTION_33	CALL_87
0x4003da7	      0xe800000000	                          call 0x4003dac	      2459	write.c	FUNCTION_33	CALL_89
0x4003dac	    0x8b0500000000	            mov eax, dword [0x04003db2] 	      2463	write.c	FUNCTION_33	IF_26
0x4003db2	    0x488b3d000000	            mov rdi, qword [0x04003db9] 	      2464	write.c	FUNCTION_33	IF_26
0x4003db9	            0x85c0	                           test eax, eax	      2463	write.c	FUNCTION_33	IF_26
0x4003dbb	            0x7407	                            je 0x4003dc4	      2463	write.c	FUNCTION_33	IF_26
0x4003dbd	    0x814f44000080	        or dword [rdi + 0x44], 0x1800000	      2464	write.c	FUNCTION_33	IF_26
0x4003dc4	    0x8b0500000000	            mov eax, dword [0x04003dca] 	      2471	write.c	FUNCTION_33	IF_27
0x4003dca	            0x85c0	                           test eax, eax	      2471	write.c	FUNCTION_33	IF_27
0x4003dcc	            0x741f	                            je 0x4003ded	      2471	write.c	FUNCTION_33	IF_27
0x4003dce	          0x83f805	                              cmp eax, 5	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x4003dd1	            0x7461	                            je 0x4003e34	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x4003dd3	    0x814f44000008	          or dword [rdi + 0x44], 0x80000	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4003dda	            0x31d2	                            xor edx, edx	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4003ddc	      0xbe00000000	                              mov esi, 0	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4003de1	      0xe800000000	                          call 0x4003de6	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4003de6	    0x488b3d000000	            mov rdi, qword [0x04003ded] 	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4003ded	            0x31d2	                            xor edx, edx	      2480	write.c	FUNCTION_33	CALL_91
0x4003def	      0xbe00000000	                              mov esi, 0	      2480	write.c	FUNCTION_33	CALL_91
0x4003df4	      0xe800000000	                          call 0x4003df9	      2480	write.c	FUNCTION_33	CALL_91
0x4003df9	      0xe981f9ffff	                           jmp 0x400377f	      2480	write.c	FUNCTION_33	CALL_91
0x4003dfe	          0x4889df	                            mov rdi, rbx	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e01	      0xe800000000	                          call 0x4003e06	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e06	      0xba05000000	                              mov edx, 5	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e0b	          0x4889c5	                            mov rbp, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e0e	            0x31ff	                            xor edi, edi	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e10	      0xbe00000000	                              mov esi, 0	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e15	      0xe800000000	                          call 0x4003e1a	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e1a	          0x4889ee	                            mov rsi, rbp	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e1d	          0x4889c7	                            mov rdi, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e20	            0x31c0	                            xor eax, eax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e22	      0xe800000000	                          call 0x4003e27	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003e27	          0x4889df	                            mov rdi, rbx	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x4003e2a	      0xe800000000	                          call 0x4003e2f	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x4003e2f	      0xe9fafcffff	                           jmp 0x4003b2e	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x4003e34	    0x814f44000048	         or dword [rdi + 0x44], 0x480000	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4003e3b	            0xeb9d	                           jmp 0x4003dda	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4003e3d	      0x488b442408	                mov rax, qword [rsp + 8]	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003e42	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003e46	     0xf858af8ffff	                           jne 0x40036d6	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003e4c	      0xe9adfdffff	                           jmp 0x4003bfe	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4003e51	          0x4889df	                            mov rdi, rbx	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003e54	      0xe800000000	                          call 0x4003e59	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003e59	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003e5b	     0xf84bdfcffff	                            je 0x4003b1e	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003e61	          0x4889df	                            mov rdi, rbx	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003e64	      0xe800000000	                          call 0x4003e69	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003e69	            0x85c0	                           test eax, eax	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003e6b	     0xf849dfcffff	                            je 0x4003b0e	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003e71	      0xe9a8fcffff	                           jmp 0x4003b1e	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003e76	            0x31d2	                            xor edx, edx	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003e78	          0x4531ed	                          xor r13d, r13d	      1769	write.c	FUNCTION_27	ELSE_1
0x4003e7b	      0xe9eefeffff	                           jmp 0x4003d6e	      1769	write.c	FUNCTION_27	ELSE_1
0x4003e80	      0xbe00000000	                              mov esi, 0	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003e85	          0x4889df	                            mov rdi, rbx	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003e88	      0xe800000000	                          call 0x4003e8d	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003e8d	          0x4885c0	                           test rax, rax	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003e90	     0xf8446010000	                            je 0x4003fdc	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4003e96	    0x833d00000000	               cmp dword [0x04003e9d], 1	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003e9d	    0x48c74424081c	               mov qword [rsp + 8], 0x1c	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003ea6	    0x41bb10000000	                          mov r11d, 0x10	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003eac	    0x41be24000000	                          mov r14d, 0x24	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003eb2	    0x48c744241024	           mov qword [rsp + 0x10], 0x24 	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003ebb	          0x4519ed	                          sbb r13d, r13d	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003ebe	          0x41f7d5	                                not r13d	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003ec1	    0x4181c5a90500	                         add r13d, 0x5a9	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003ec8	      0xe962fbffff	                           jmp 0x4003a2f	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003ecd	          0x4889df	                            mov rdi, rbx	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003ed0	      0xe800000000	                          call 0x4003ed5	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003ed5	      0xbf00000000	                              mov edi, 0	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003eda	      0xb90d000000	                            mov ecx, 0xd	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003edf	          0x4889c6	                            mov rsi, rax	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003ee2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003ee4	     0xf8497fbffff	                            je 0x4003a81	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x4003eea	      0xe800000000	                          call 0x4003eef	      2017	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_13
0x4003eef	          0x4c89f7	                            mov rdi, r14	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x4003ef2	      0xe800000000	                          call 0x4003ef7	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x4003ef7	          0x4989c4	                            mov r12, rax	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x4003efa	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4003f01	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_44	CALL_6
0x4003f06	      0x498d4c2408	                      lea rcx, [r12 + 8]	        90	string3.h	FUNCTION_44	CALL_6
0x4003f0b	            0x31d2	                            xor edx, edx	        90	string3.h	FUNCTION_44	CALL_6
0x4003f0d	    0x49c74404f800	            mov qword [r12 + rax - 8], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4003f16	        0x4883e1f8	             and rcx, 0xfffffffffffffff8	        90	string3.h	FUNCTION_44	CALL_6
0x4003f1a	          0x4c89e0	                            mov rax, r12	        90	string3.h	FUNCTION_44	CALL_6
0x4003f1d	          0x4829c8	                            sub rax, rcx	        90	string3.h	FUNCTION_44	CALL_6
0x4003f20	          0x4401f0	                           add eax, r14d	        90	string3.h	FUNCTION_44	CALL_6
0x4003f23	          0x83e0f8	                     and eax, 0xfffffff8	        90	string3.h	FUNCTION_44	CALL_6
0x4003f26	            0x89d6	                            mov esi, edx	        90	string3.h	FUNCTION_44	CALL_6
0x4003f28	          0x83c208	                              add edx, 8	        90	string3.h	FUNCTION_44	CALL_6
0x4003f2b	            0x39c2	                            cmp edx, eax	        90	string3.h	FUNCTION_44	CALL_6
0x4003f2d	    0x48c704310000	                mov qword [rcx + rsi], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4003f35	            0x72ef	                            jb 0x4003f26	        90	string3.h	FUNCTION_44	CALL_6
0x4003f37	    0x8b0d00000000	            mov ecx, dword [0x04003f3d] 	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003f3d	            0x85c9	                           test ecx, ecx	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003f3f	     0xf841b010000	                            je 0x4004060	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003f45	    0x41c644240308	                   mov byte [r12 + 3], 8	      2023	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003f4b	      0x45886c2407	                mov byte [r12 + 7], r13b	      2024	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003f50	    0x41c644240a01	                 mov byte [r12 + 0xa], 1	      2025	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003f56	    0x41c644240b00	                 mov byte [r12 + 0xb], 0	      2026	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003f5c	    0x48b847412401	            movabs rax, 0x31613301244147	        53	string3.h	FUNCTION_41	CALL_3
0x4003f66	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003f6a	          0x4d89e1	                             mov r9, r12	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003f6d	      0x498944240c	              mov qword [r12 + 0xc], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4003f72	        0x488d4308	                      lea rax, [rbx + 8]	        53	string3.h	FUNCTION_41	CALL_3
0x4003f76	          0x4531c0	                            xor r8d, r8d	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003f79	      0xba14000000	                           mov edx, 0x14	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003f7e	          0x4889ef	                            mov rdi, rbp	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003f81	          0x4889c6	                            mov rsi, rax	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003f84	      0x4889442428	             mov qword [rsp + 0x28], rax	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003f89	      0xe852d4ffff	       call sym.create_note_reloc.isra.4	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003f8e	        0x488b5308	                mov rdx, qword [rbx + 8]	      2045	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003f92	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003f97	          0x4d89e1	                             mov r9, r12	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003f9a	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003f9e	          0x4889ef	                            mov rdi, rbp	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003fa1	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003fa5	          0x4889c6	                            mov rsi, rax	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003fa8	        0x4c8b4238	              mov r8, qword [rdx + 0x38]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003fac	      0x488b542408	                mov rdx, qword [rsp + 8]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003fb1	      0xe82ad4ffff	       call sym.create_note_reloc.isra.4	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003fb6	      0x4c037c2410	             add r15, qword [rsp + 0x10]	      2048	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003fbb	      0xe9c1faffff	                           jmp 0x4003a81	      2048	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003fc0	    0x488b3d000000	            mov rdi, qword [0x04003fc7] 	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003fc7	          0x4d89f8	                             mov r8, r15	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003fca	            0x31c9	                            xor ecx, ecx	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003fcc	          0x4c89e2	                            mov rdx, r12	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003fcf	          0x4889ee	                            mov rsi, rbp	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003fd2	      0xe800000000	                          call 0x4003fd7	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003fd7	      0xe9b7faffff	                           jmp 0x4003a93	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x4003fdc	      0xbe00000000	                              mov esi, 0	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003fe1	          0x4889df	                            mov rdi, rbx	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003fe4	    0x41be24000000	                          mov r14d, 0x24	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003fea	      0xe800000000	                          call 0x4003fef	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003fef	        0x4883f801	                              cmp rax, 1	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003ff3	    0x48c74424081c	               mov qword [rsp + 8], 0x1c	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003ffc	    0x41bb10000000	                          mov r11d, 0x10	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4004002	          0x4519ed	                          sbb r13d, r13d	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4004005	    0x48c744241024	           mov qword [rsp + 0x10], 0x24 	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x400400e	        0x4183e5b1	                    and r13d, 0xffffffb1	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4004012	        0x4183c550	                          add r13d, 0x50	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4004016	      0xe914faffff	                           jmp 0x4003a2f	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x400401b	      0xbe00000000	                              mov esi, 0	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4004020	          0x4889df	                            mov rdi, rbx	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4004023	    0x41be1c000000	                          mov r14d, 0x1c	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4004029	      0xe800000000	                          call 0x400402e	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x400402e	        0x4883f801	                              cmp rax, 1	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4004032	    0x48c744240818	               mov qword [rsp + 8], 0x18	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x400403b	    0x41bb08000000	                             mov r11d, 8	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4004041	          0x4519ed	                          sbb r13d, r13d	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4004044	    0x48c74424101c	           mov qword [rsp + 0x10], 0x1c 	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x400404d	    0x4181e5c8f9ff	                    and r13d, 0xfffff9c8	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4004054	    0x4181c53a0600	                         add r13d, 0x63a	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x400405b	      0xe9cff9ffff	                           jmp 0x4003a2f	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4004060	      0x41c6042408	                       mov byte [r12], 8	      2030	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004065	      0x45886c2404	                mov byte [r12 + 4], r13b	      2031	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x400406a	    0x41c644240800	                   mov byte [r12 + 8], 0	      2032	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004070	    0x41c644240901	                   mov byte [r12 + 9], 1	      2033	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4004076	      0xe9e1feffff	                           jmp 0x4003f5c	      2033	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x400407b	      0xba00000000	                              mov edx, 0	      1771	write.c	FUNCTION_27	CALL_7
0x4004080	      0xbeeb060000	                          mov esi, 0x6eb	      1771	write.c	FUNCTION_27	CALL_7
0x4004085	      0xbf00000000	                              mov edi, 0	      1771	write.c	FUNCTION_27	CALL_7
0x400408a	      0xe800000000	                          call 0x400408f	      1771	write.c	FUNCTION_27	CALL_7
0x400408f	      0xe800000000	                          call 0x4004094	      2481	write.c	FUNCTION_33
relax_frag	IF,8:CALL,8:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,4:FOR,2	103
0x40027a0	            0x4157	                                push r15	      2488	write.c	FUNCTION_34
0x40027a2	            0x4156	                                push r14	      2488	write.c	FUNCTION_34
0x40027a4	          0x4989f7	                            mov r15, rsi	      2488	write.c	FUNCTION_34
0x40027a7	            0x4155	                                push r13	      2488	write.c	FUNCTION_34
0x40027a9	            0x4154	                                push r12	      2488	write.c	FUNCTION_34
0x40027ab	              0x55	                                push rbp	      2488	write.c	FUNCTION_34
0x40027ac	              0x53	                                push rbx	      2488	write.c	FUNCTION_34
0x40027ad	        0x4883ec28	                           sub rsp, 0x28	      2488	write.c	FUNCTION_34
0x40027b1	          0x488b06	                    mov rax, qword [rsi]	      2501	write.c	FUNCTION_34
0x40027b4	        0x488b6e28	            mov rbp, qword [rsi + 0x28] 	      2505	write.c	FUNCTION_34
0x40027b8	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2488	write.c	FUNCTION_34
0x40027bd	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2488	write.c	FUNCTION_34
0x40027c2	        0x488b5e20	            mov rbx, qword [rsi + 0x20] 	      2500	write.c	FUNCTION_34
0x40027c6	      0x4889442408	                mov qword [rsp + 8], rax	      2501	write.c	FUNCTION_34
0x40027cb	          0x8b4660	            mov eax, dword [rsi + 0x60] 	      2503	write.c	FUNCTION_34
0x40027ce	          0x4885ed	                           test rbp, rbp	      2507	write.c	FUNCTION_34	IF_1
0x40027d1	          0x4989c6	                            mov r14, rax	      2503	write.c	FUNCTION_34
0x40027d4	        0x488d0440	                  lea rax, [rax + rax*2]	      2504	write.c	FUNCTION_34
0x40027d8	    0x4c8d24c50000	                        lea r12, [rax*8]	      2504	write.c	FUNCTION_34
0x40027e0	            0x743f	                            je 0x4002821	      2507	write.c	FUNCTION_34	IF_1
0x40027e2	          0x4889ef	                            mov rdi, rbp	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x40027e5	      0xe800000000	                          call 0x40027ea	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x40027ea	          0x4889ef	                            mov rdi, rbp	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40027ed	          0x4989c5	                            mov r13, rax	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x40027f0	      0xe800000000	                          call 0x40027f5	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40027f5	    0x4981fd000000	                              cmp r13, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40027fc	            0x740c	                            je 0x400280a	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40027fe	    0x483d00000000	                              cmp rax, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4002804	     0xf8404010000	                            je 0x400290e	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x400280a	          0x4889ef	                            mov rdi, rbp	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x400280d	      0xe800000000	                          call 0x4002812	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x4002812	          0x4801c3	                            add rbx, rax	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x4002815	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2528	write.c	FUNCTION_34	IF_1	IF_2
0x400281b	     0xf858f000000	                           jne 0x40028b0	      2528	write.c	FUNCTION_34	IF_1	IF_2
0x4002821	      0x482b5c2408	                sub rbx, qword [rsp + 8]	      2545	write.c	FUNCTION_34
0x4002826	      0x418b542414	            mov edx, dword [r12 + 0x14] 	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x400282b	          0x4c89e0	                            mov rax, r12	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x400282e	          0x4889d9	                            mov rcx, rbx	      2545	write.c	FUNCTION_34
0x4002831	        0x492b4f10	             sub rcx, qword [r15 + 0x10]	      2556	write.c	FUNCTION_34	IF_5
0x4002835	            0x791d	                           jns 0x4002854	      2556	write.c	FUNCTION_34	IF_5
0x4002837	            0xeb63	                           jmp 0x400289c	      2556	write.c	FUNCTION_34	IF_5
0x4002839	     0xf1f80000000	                         nop dword [rax]	      2556	write.c	FUNCTION_34	IF_5
0x4002840	            0x89d0	                            mov eax, edx	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002842	          0x4189d6	                           mov r14d, edx	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002845	        0x488d0440	                  lea rax, [rax + rax*2]	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002849	    0x488d04c50000	                        lea rax, [rax*8]	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002851	          0x8b5014	            mov edx, dword [rax + 0x14] 	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002854	            0x85d2	                           test edx, edx	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4002856	            0x7405	                            je 0x400285d	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4002858	          0x483b08	                    cmp rcx, qword [rax]	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x400285b	            0x7fe3	                            jg 0x4002840	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x400285d	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      2585	write.c	FUNCTION_34
0x4002861	    0x410fb6442410	           movzx eax, byte [r12 + 0x10] 	      2585	write.c	FUNCTION_34
0x4002867	            0x29c2	                            sub edx, eax	      2585	write.c	FUNCTION_34
0x4002869	            0x85d2	                           test edx, edx	      2586	write.c	FUNCTION_34	IF_8
0x400286b	          0x4863c2	                         movsxd rax, edx	      2585	write.c	FUNCTION_34
0x400286e	            0x7404	                            je 0x4002874	      2586	write.c	FUNCTION_34	IF_8
0x4002870	        0x45897760	            mov dword [r15 + 0x60], r14d	      2587	write.c	FUNCTION_34	IF_8
0x4002874	        0x4883c428	                           add rsp, 0x28	      2589	write.c	FUNCTION_34
0x4002878	              0x5b	                                 pop rbx	      2589	write.c	FUNCTION_34
0x4002879	              0x5d	                                 pop rbp	      2589	write.c	FUNCTION_34
0x400287a	            0x415c	                                 pop r12	      2589	write.c	FUNCTION_34
0x400287c	            0x415d	                                 pop r13	      2589	write.c	FUNCTION_34
0x400287e	            0x415e	                                 pop r14	      2589	write.c	FUNCTION_34
0x4002880	            0x415f	                                 pop r15	      2589	write.c	FUNCTION_34
0x4002882	              0xc3	                                     ret	      2589	write.c	FUNCTION_34
0x4002883	       0xf1f440000	                   nop dword [rax + rax]	      2589	write.c	FUNCTION_34
0x4002888	            0x89d0	                            mov eax, edx	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x400288a	          0x4189d6	                           mov r14d, edx	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x400288d	        0x488d0440	                  lea rax, [rax + rax*2]	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4002891	    0x488d04c50000	                        lea rax, [rax*8]	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4002899	          0x8b5014	            mov edx, dword [rax + 0x14] 	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x400289c	            0x85d2	                           test edx, edx	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x400289e	            0x74bd	                            je 0x400285d	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x40028a0	        0x483b4808	                cmp rcx, qword [rax + 8]	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x40028a4	            0x7ce2	                            jl 0x4002888	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x40028a6	            0xebb5	                           jmp 0x400285d	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x40028a8	     0xf1f84000000	                   nop dword [rax + rax]	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x40028b0	      0x410fb6455a	           movzx eax, byte [r13 + 0x5a] 	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40028b5	        0x4132475a	               xor al, byte [r15 + 0x5a]	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40028b9	            0xa801	                              test al, 1	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40028bb	     0xf8460ffffff	                            je 0x4002821	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40028c1	          0x4889ef	                            mov rdi, rbp	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40028c4	      0xe800000000	                          call 0x40028c9	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40028c9	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40028ce	     0xf854dffffff	                           jne 0x4002821	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40028d4	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2532	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40028da	            0x7828	                            js 0x4002904	      2532	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40028dc	      0x410fb74758	           movzx eax, word [r15 + 0x58] 	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40028e1	      0x6641394558	               cmp word [r13 + 0x58], ax	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40028e6	            0x741c	                            je 0x4002904	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x40028e8	      0x48395c2408	                cmp qword [rsp + 8], rbx	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40028ed	     0xf862effffff	                           jbe 0x4002821	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40028f3	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40028f7	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40028fc	          0x480318	                    add rbx, qword [rax]	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x40028ff	      0xe91dffffff	                           jmp 0x4002821	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4002904	      0x48035c2410	             add rbx, qword [rsp + 0x10]	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4002909	      0xe913ffffff	                           jmp 0x4002821	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x400290e	      0xba00000000	                              mov edx, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4002913	      0xbed5090000	                          mov esi, 0x9d5	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x4002918	      0xbf00000000	                              mov edi, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x400291d	      0xe800000000	                          call 0x4002922	      2516	write.c	FUNCTION_34	IF_1	CALL_4
write_print_statistics	IF,0:CALL,0:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	5
0x4004130	    0x8b0d00000000	            mov ecx, dword [0x04004136] 	        97	stdio2.h	CALL_375
0x4004136	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x400413b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4004140	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4004142	      0xe900000000	                           jmp 0x4004147	        97	stdio2.h	CALL_375
fix_new_exp	IF,0:CALL,6:functions,0:SWITCH,1:DO,0:WHILE,0:ELSE,0:FOR,0	179
0x40021e0	            0x4157	                                push r15	       254	write.c	FUNCTION_3
0x40021e2	            0x4156	                                push r14	       254	write.c	FUNCTION_3
0x40021e4	          0x4589cf	                           mov r15d, r9d	       254	write.c	FUNCTION_3
0x40021e7	            0x4155	                                push r13	       254	write.c	FUNCTION_3
0x40021e9	            0x4154	                                push r12	       254	write.c	FUNCTION_3
0x40021eb	          0x4989fd	                            mov r13, rdi	       254	write.c	FUNCTION_3
0x40021ee	              0x55	                                push rbp	       254	write.c	FUNCTION_3
0x40021ef	              0x53	                                push rbx	       254	write.c	FUNCTION_3
0x40021f0	          0x4c63e6	                         movsxd r12, esi	       254	write.c	FUNCTION_3
0x40021f3	            0x89d5	                            mov ebp, edx	       254	write.c	FUNCTION_3
0x40021f5	          0x4589c6	                           mov r14d, r8d	       254	write.c	FUNCTION_3
0x40021f8	        0x4883ec28	                           sub rsp, 0x28	       254	write.c	FUNCTION_3
0x40021fc	        0x80791814	            cmp byte [rcx + 0x18], 0x14 	       259	write.c	FUNCTION_3	SWITCH_1
0x4002200	     0xf8702020000	                            ja 0x4002408	       259	write.c	FUNCTION_3	SWITCH_1
0x4002206	         0xfb64118	           movzx eax, byte [rcx + 0x18] 	       259	write.c	FUNCTION_3	SWITCH_1
0x400220a	    0xff24c5000000	                       jmp qword [rax*8]	       259	write.c	FUNCTION_3	SWITCH_1
0x4002211	     0xf1f80000000	                         nop dword [rax]	       259	write.c	FUNCTION_3	SWITCH_1
0x4002218	          0x4531c0	                            xor r8d, r8d	       256	write.c	FUNCTION_3
0x400221b	            0x31c0	                            xor eax, eax	       255	write.c	FUNCTION_3
0x400221d	        0x4c8b4910	              mov r9, qword [rcx + 0x10]	       300	write.c	FUNCTION_3	SWITCH_1
0x4002221	    0x488b35000000	            mov rsi, qword [0x04002228] 	       159	write.c	FUNCTION_1	CALL_1
0x4002228	    0x488b15000000	            mov rdx, qword [0x0400222f] 	       159	write.c	FUNCTION_1	CALL_1
0x400222f	    0x830500000000	               add dword [0x04002236], 1	       157	write.c	FUNCTION_1
0x4002236	          0x4889f1	                            mov rcx, rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002239	          0x4829d1	                            sub rcx, rdx	       159	write.c	FUNCTION_1	CALL_1
0x400223c	        0x4883f96f	                           cmp rcx, 0x6f	       159	write.c	FUNCTION_1	CALL_1
0x4002240	     0xf860a020000	                           jbe 0x4002450	       159	write.c	FUNCTION_1	CALL_1
0x4002246	    0x488b1d000000	            mov rbx, qword [0x0400224d] 	       159	write.c	FUNCTION_1	CALL_1
0x400224d	        0x4883c270	                           add rdx, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x4002251	          0x4839da	                            cmp rdx, rbx	       159	write.c	FUNCTION_1	CALL_1
0x4002254	     0xf8436020000	                            je 0x4002490	       159	write.c	FUNCTION_1	CALL_1
0x400225a	    0x488b0d000000	            mov rcx, qword [0x04002261] 	       159	write.c	FUNCTION_1	CALL_1
0x4002261	          0x4989f2	                            mov r10, rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002264	          0x4801ca	                            add rdx, rcx	       159	write.c	FUNCTION_1	CALL_1
0x4002267	          0x48f7d1	                                 not rcx	       159	write.c	FUNCTION_1	CALL_1
0x400226a	          0x4821ca	                            and rdx, rcx	       159	write.c	FUNCTION_1	CALL_1
0x400226d	    0x488b0d000000	            mov rcx, qword [0x04002274] 	       159	write.c	FUNCTION_1	CALL_1
0x4002274	          0x4889d7	                            mov rdi, rdx	       159	write.c	FUNCTION_1	CALL_1
0x4002277	    0x488915000000	            mov qword [0x0400227e], rdx 	       159	write.c	FUNCTION_1	CALL_1
0x400227e	          0x4829cf	                            sub rdi, rcx	       159	write.c	FUNCTION_1	CALL_1
0x4002281	          0x4929ca	                            sub r10, rcx	       159	write.c	FUNCTION_1	CALL_1
0x4002284	          0x4c39d7	                            cmp rdi, r10	       159	write.c	FUNCTION_1	CALL_1
0x4002287	            0x760a	                           jbe 0x4002293	       159	write.c	FUNCTION_1	CALL_1
0x4002289	    0x488935000000	            mov qword [0x04002290], rsi 	       159	write.c	FUNCTION_1	CALL_1
0x4002290	          0x4889f2	                            mov rdx, rsi	       159	write.c	FUNCTION_1	CALL_1
0x4002293	    0x488915000000	            mov qword [0x0400229a], rdx 	       159	write.c	FUNCTION_1	CALL_1
0x400229a	        0x400fb6d5	                          movzx edx, bpl	       165	write.c	FUNCTION_1	IF_1
0x400229e	        0x4c896b08	                mov qword [rbx + 8], r13	       161	write.c	FUNCTION_1
0x40022a2	            0x39ea	                            cmp edx, ebp	       165	write.c	FUNCTION_1	IF_1
0x40022a4	        0x4c896310	             mov qword [rbx + 0x10], r12	       162	write.c	FUNCTION_1
0x40022a8	        0x40886b02	                 mov byte [rbx + 2], bpl	       163	write.c	FUNCTION_1
0x40022ac	     0xf85ea010000	                           jne 0x400249c	       165	write.c	FUNCTION_1	IF_1
0x40022b2	        0x48894318	             mov qword [rbx + 0x18], rax	       170	write.c	FUNCTION_1
0x40022b6	    0x488b05000000	            mov rax, qword [0x040022bd] 	       173	write.c	FUNCTION_1
0x40022bd	        0x4183e601	                             and r14d, 1	       185	write.c	FUNCTION_1
0x40022c1	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       196	write.c	FUNCTION_1	CALL_6
0x40022c5	        0x4c894320	              mov qword [rbx + 0x20], r8	       171	write.c	FUNCTION_1
0x40022c9	        0x4c894b28	              mov qword [rbx + 0x28], r9	       172	write.c	FUNCTION_1
0x40022cd	        0x44897b50	            mov dword [rbx + 0x50], r15d	       176	write.c	FUNCTION_1
0x40022d1	    0x48c743480000	               mov qword [rbx + 0x48], 0	       179	write.c	FUNCTION_1
0x40022d9	        0x48894330	             mov qword [rbx + 0x30], rax	       173	write.c	FUNCTION_1
0x40022dd	    0x488b05000000	            mov rax, qword [0x040022e4] 	       174	write.c	FUNCTION_1
0x40022e4	    0x48c743580000	               mov qword [rbx + 0x58], 0	       180	write.c	FUNCTION_1
0x40022ec	        0xc6430100	                   mov byte [rbx + 1], 0	       178	write.c	FUNCTION_1
0x40022f0	          0x448833	                    mov byte [rbx], r14b	       185	write.c	FUNCTION_1
0x40022f3	        0x48894338	             mov qword [rbx + 0x38], rax	       174	write.c	FUNCTION_1
0x40022f7	      0xe800000000	                          call 0x40022fc	       196	write.c	FUNCTION_1	CALL_6
0x40022fc	        0x48894360	             mov qword [rbx + 0x60], rax	       196	write.c	FUNCTION_1	CALL_6
0x4002300	    0x8b0500000000	            mov eax, dword [0x04002306] 	       202	write.c	FUNCTION_1
0x4002306	            0x85c0	                           test eax, eax	       202	write.c	FUNCTION_1
0x4002308	     0xf8412010000	                            je 0x4002420	       202	write.c	FUNCTION_1
0x400230e	    0x488b05000000	            mov rax, qword [0x04002315] 	       201	write.c	FUNCTION_1	CALL_7
0x4002315	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       201	write.c	FUNCTION_1	CALL_7
0x400231c	    0x48c743400000	               mov qword [rbx + 0x40], 0	       216	write.c	FUNCTION_1	ELSE_1
0x4002324	        0x488d4810	                   lea rcx, [rax + 0x10]	       202	write.c	FUNCTION_1
0x4002328	        0x4883c018	                           add rax, 0x18	       205	write.c	FUNCTION_1
0x400232c	          0x488b10	                    mov rdx, qword [rax]	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x400232f	          0x4885d2	                           test rdx, rdx	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4002332	     0xf840b010000	                            je 0x4002443	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4002338	        0x48895a40	             mov qword [rdx + 0x40], rbx	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x400233c	          0x488918	                    mov qword [rax], rbx	       221	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x400233f	        0x4883c428	                           add rsp, 0x28	       310	write.c	FUNCTION_3
0x4002343	          0x4889d8	                            mov rax, rbx	       310	write.c	FUNCTION_3
0x4002346	              0x5b	                                 pop rbx	       310	write.c	FUNCTION_3
0x4002347	              0x5d	                                 pop rbp	       310	write.c	FUNCTION_3
0x4002348	            0x415c	                                 pop r12	       310	write.c	FUNCTION_3
0x400234a	            0x415d	                                 pop r13	       310	write.c	FUNCTION_3
0x400234c	            0x415e	                                 pop r14	       310	write.c	FUNCTION_3
0x400234e	            0x415f	                                 pop r15	       310	write.c	FUNCTION_3
0x4002350	              0xc3	                                     ret	       310	write.c	FUNCTION_3
0x4002351	     0xf1f80000000	                         nop dword [rax]	       310	write.c	FUNCTION_3
0x4002358	          0x4531c9	                            xor r9d, r9d	       257	write.c	FUNCTION_3
0x400235b	          0x4531c0	                            xor r8d, r8d	       256	write.c	FUNCTION_3
0x400235e	            0x31c0	                            xor eax, eax	       255	write.c	FUNCTION_3
0x4002360	      0xe9bcfeffff	                           jmp 0x4002221	       255	write.c	FUNCTION_3
0x4002365	           0xf1f00	                         nop dword [rax]	       255	write.c	FUNCTION_3
0x4002368	        0x4c8b4108	                 mov r8, qword [rcx + 8]	       294	write.c	FUNCTION_3	SWITCH_1
0x400236c	          0x488b01	                    mov rax, qword [rcx]	       294	write.c	FUNCTION_3	SWITCH_1
0x400236f	      0xe9a9feffff	                           jmp 0x400221d	       294	write.c	FUNCTION_3	SWITCH_1
0x4002374	         0xf1f4000	                         nop dword [rax]	       294	write.c	FUNCTION_3	SWITCH_1
0x4002378	          0x488b01	                    mov rax, qword [rcx]	       283	write.c	FUNCTION_3	SWITCH_1
0x400237b	        0x4c8b4910	              mov r9, qword [rcx + 0x10]	       284	write.c	FUNCTION_3	SWITCH_1
0x400237f	          0x4531c0	                            xor r8d, r8d	       256	write.c	FUNCTION_3
0x4002382	    0x41bf3e000000	                          mov r15d, 0x3e	       285	write.c	FUNCTION_3	SWITCH_1
0x4002388	      0xe994feffff	                           jmp 0x4002221	       286	write.c	FUNCTION_3	SWITCH_1
0x400238d	           0xf1f00	                         nop dword [rax]	       286	write.c	FUNCTION_3	SWITCH_1
0x4002390	      0xba05000000	                              mov edx, 5	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x4002395	      0xbe00000000	                              mov esi, 0	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x400239a	            0x31ff	                            xor edi, edi	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x400239c	      0xe800000000	                          call 0x40023a1	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40023a1	          0x4889c7	                            mov rdi, rax	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40023a4	            0x31c0	                            xor eax, eax	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40023a6	      0xe800000000	                          call 0x40023ab	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40023ab	          0x4531c9	                            xor r9d, r9d	       257	write.c	FUNCTION_3
0x40023ae	          0x4531c0	                            xor r8d, r8d	       256	write.c	FUNCTION_3
0x40023b1	            0x31c0	                            xor eax, eax	       255	write.c	FUNCTION_3
0x40023b3	      0xe969feffff	                           jmp 0x4002221	       266	write.c	FUNCTION_3	SWITCH_1
0x40023b8	     0xf1f84000000	                   nop dword [rax + rax]	       266	write.c	FUNCTION_3	SWITCH_1
0x40023c0	          0x4c8b01	                     mov r8, qword [rcx]	       289	write.c	FUNCTION_3	SWITCH_1
0x40023c3	        0x4c8b4910	              mov r9, qword [rcx + 0x10]	       290	write.c	FUNCTION_3	SWITCH_1
0x40023c7	            0x31c0	                            xor eax, eax	       255	write.c	FUNCTION_3
0x40023c9	      0xe953feffff	                           jmp 0x4002221	       291	write.c	FUNCTION_3	SWITCH_1
0x40023ce	            0x6690	                                     nop	       291	write.c	FUNCTION_3	SWITCH_1
0x40023d0	          0x4889cf	                            mov rdi, rcx	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x40023d3	      0x48894c2408	                mov qword [rsp + 8], rcx	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x40023d8	      0xe800000000	                          call 0x40023dd	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x40023dd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       274	write.c	FUNCTION_3	SWITCH_1
0x40023e2	          0x4531c0	                            xor r8d, r8d	       256	write.c	FUNCTION_3
0x40023e5	        0xc6411803	                mov byte [rcx + 0x18], 3	       274	write.c	FUNCTION_3	SWITCH_1
0x40023e9	    0x48c741080000	                  mov qword [rcx + 8], 0	       275	write.c	FUNCTION_3	SWITCH_1
0x40023f1	          0x488901	                    mov qword [rcx], rax	       276	write.c	FUNCTION_3	SWITCH_1
0x40023f4	    0x48c741100000	               mov qword [rcx + 0x10], 0	       277	write.c	FUNCTION_3	SWITCH_1
0x40023fc	      0xe91cfeffff	                           jmp 0x400221d	       277	write.c	FUNCTION_3	SWITCH_1
0x4002401	     0xf1f80000000	                         nop dword [rax]	       277	write.c	FUNCTION_3	SWITCH_1
0x4002408	          0x4889cf	                            mov rdi, rcx	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x400240b	      0xe800000000	                          call 0x4002410	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4002410	          0x4531c9	                            xor r9d, r9d	       257	write.c	FUNCTION_3
0x4002413	          0x4531c0	                            xor r8d, r8d	       256	write.c	FUNCTION_3
0x4002416	      0xe906feffff	                           jmp 0x4002221	       305	write.c	FUNCTION_3	SWITCH_1
0x400241b	       0xf1f440000	                   nop dword [rax + rax]	       305	write.c	FUNCTION_3	SWITCH_1
0x4002420	    0x488b05000000	            mov rax, qword [0x04002427] 	       202	write.c	FUNCTION_1
0x4002427	    0x48c743400000	               mov qword [rbx + 0x40], 0	       216	write.c	FUNCTION_1	ELSE_1
0x400242f	        0x488d4820	                   lea rcx, [rax + 0x20]	       202	write.c	FUNCTION_1
0x4002433	        0x4883c028	                           add rax, 0x28	       205	write.c	FUNCTION_1
0x4002437	          0x488b10	                    mov rdx, qword [rax]	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x400243a	          0x4885d2	                           test rdx, rdx	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x400243d	     0xf85f5feffff	                           jne 0x4002338	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4002443	          0x488919	                    mov qword [rcx], rbx	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4002446	      0xe9f1feffff	                           jmp 0x400233c	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x400244b	       0xf1f440000	                   nop dword [rax + rax]	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4002450	      0xbe70000000	                           mov esi, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x4002455	      0xbf00000000	                              mov edi, 0	       159	write.c	FUNCTION_1	CALL_1
0x400245a	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       159	write.c	FUNCTION_1	CALL_1
0x400245f	      0x4c89442410	              mov qword [rsp + 0x10], r8	       159	write.c	FUNCTION_1	CALL_1
0x4002464	      0x4889442408	                mov qword [rsp + 8], rax	       159	write.c	FUNCTION_1	CALL_1
0x4002469	      0xe800000000	                          call 0x400246e	       159	write.c	FUNCTION_1	CALL_1
0x400246e	    0x488b15000000	            mov rdx, qword [0x04002475] 	       159	write.c	FUNCTION_1	CALL_1
0x4002475	    0x488b35000000	            mov rsi, qword [0x0400247c] 	       159	write.c	FUNCTION_1	CALL_1
0x400247c	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       159	write.c	FUNCTION_1	CALL_1
0x4002481	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       159	write.c	FUNCTION_1	CALL_1
0x4002486	      0x488b442408	                mov rax, qword [rsp + 8]	       159	write.c	FUNCTION_1	CALL_1
0x400248b	      0xe9b6fdffff	                           jmp 0x4002246	       159	write.c	FUNCTION_1	CALL_1
0x4002490	    0x800d00000000	                 or byte [0x04002497], 2	       159	write.c	FUNCTION_1	CALL_1
0x4002497	      0xe9befdffff	                           jmp 0x400225a	       159	write.c	FUNCTION_1	CALL_1
0x400249c	      0xba05000000	                              mov edx, 5	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40024a1	      0xbe00000000	                              mov esi, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40024a6	            0x31ff	                            xor edi, edi	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40024a8	      0xe800000000	                          call 0x40024ad	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40024ad	            0x89ee	                            mov esi, ebp	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40024af	          0x4889c7	                            mov rdi, rax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40024b2	            0x31c0	                            xor eax, eax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40024b4	      0xe800000000	                          call 0x40024b9	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x40024b9	      0xba00000000	                              mov edx, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40024be	      0xbea8000000	                           mov esi, 0xa8	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40024c3	      0xbf00000000	                              mov edi, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40024c8	      0xe800000000	                          call 0x40024cd	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x40024cd	          0x4531c0	                            xor r8d, r8d	       256	write.c	FUNCTION_3
0x40024d0	          0x488b01	                    mov rax, qword [rcx]	       256	write.c	FUNCTION_3
0x40024d3	      0xe945fdffff	                           jmp 0x400221d	       256	write.c	FUNCTION_3
record_alignment	IF,2:CALL,1:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	6
0x4002760	    0x4881ff000000	                              cmp rdi, 0	       361	write.c	FUNCTION_7	IF_1
0x4002767	            0x7408	                            je 0x4002771	       361	write.c	FUNCTION_7	IF_1
0x4002769	          0x397770	            cmp dword [rdi + 0x70], esi 	       364	write.c	FUNCTION_7	IF_2
0x400276c	            0x7303	                           jae 0x4002771	       364	write.c	FUNCTION_7	IF_2
0x400276e	          0x897770	             mov dword [rdi + 0x70], esi	      1696	bfd.h	FUNCTION_55
0x4002771	            0xf3c3	                                     ret	      1696	bfd.h	FUNCTION_55
relax_segment	IF,27:CALL,54:functions,0:SWITCH,2:DO,1:WHILE,0:ELSE,5:FOR,5	592
0x4002930	            0x4157	                                push r15	      2625	write.c	FUNCTION_36
0x4002932	            0x4156	                                push r14	      2625	write.c	FUNCTION_36
0x4002934	            0x4155	                                push r13	      2625	write.c	FUNCTION_36
0x4002936	            0x4154	                                push r12	      2625	write.c	FUNCTION_36
0x4002938	          0x4989fd	                            mov r13, rdi	      2625	write.c	FUNCTION_36
0x400293b	              0x55	                                push rbp	      2625	write.c	FUNCTION_36
0x400293c	              0x53	                                push rbx	      2625	write.c	FUNCTION_36
0x400293d	          0x4889f7	                            mov rdi, rsi	      2625	write.c	FUNCTION_36
0x4002940	        0x4883ec38	                           sub rsp, 0x38	      2625	write.c	FUNCTION_36
0x4002944	        0x48893424	                    mov qword [rsp], rsi	      2625	write.c	FUNCTION_36
0x4002948	            0x31f6	                            xor esi, esi	      2633	write.c	FUNCTION_36	CALL_1
0x400294a	        0x89542420	             mov dword [rsp + 0x20], edx	      2625	write.c	FUNCTION_36
0x400294e	      0xe800000000	                          call 0x4002953	      2633	write.c	FUNCTION_36	CALL_1
0x4002953	          0x4d85ed	                           test r13, r13	      2639	write.c	FUNCTION_36	FOR_1
0x4002956	     0xf8483080000	                            je 0x40031df	      2639	write.c	FUNCTION_36	FOR_1
0x400295c	          0x4c89eb	                            mov rbx, r13	      2639	write.c	FUNCTION_36	FOR_1
0x400295f	          0x4531f6	                          xor r14d, r14d	      2639	write.c	FUNCTION_36	FOR_1
0x4002962	            0x31ed	                            xor ebp, ebp	      2639	write.c	FUNCTION_36	FOR_1
0x4002964	          0x4531ff	                          xor r15d, r15d	      2639	write.c	FUNCTION_36	FOR_1
0x4002967	    0x660f1f840000	                    nop word [rax + rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002970	          0x8b735c	            mov esi, dword [rbx + 0x5c] 	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002973	          0x48892b	                    mov qword [rbx], rbp	      2645	write.c	FUNCTION_36	FOR_1
0x4002976	        0x48036b10	             add rbp, qword [rbx + 0x10]	      2646	write.c	FUNCTION_36	FOR_1
0x400297a	        0x80635afe	             and byte [rbx + 0x5a], 0xfe	      2644	write.c	FUNCTION_36	FOR_1
0x400297e	      0x6644897358	             mov word [rbx + 0x58], r14w	      2643	write.c	FUNCTION_36	FOR_1
0x4002983	          0x83fe0d	                            cmp esi, 0xd	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002986	          0x4989ec	                            mov r12, rbp	      2646	write.c	FUNCTION_36	FOR_1
0x4002989	     0xf8739050000	                            ja 0x4002ec8	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x400298f	    0xff24f5000000	                       jmp qword [rsi*8]	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002996	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40029a0	        0x488d6d01	                      lea rbp, [rbp + 1]	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40029a4	    0x48c743200100	               mov qword [rbx + 0x20], 1	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40029ac	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x40029b0	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x40029b4	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x40029b7	            0x75b7	                           jne 0x4002970	      2639	write.c	FUNCTION_36	FOR_1
0x40029b9	          0x4c89f8	                            mov rax, r15	      2639	write.c	FUNCTION_36	FOR_1
0x40029bc	        0x490fafc7	                           imul rax, r15	      2639	write.c	FUNCTION_36	FOR_1
0x40029c0	          0x4c39f8	                            cmp rax, r15	      2639	write.c	FUNCTION_36	FOR_1
0x40029c3	        0x4c0f43f8	                         cmovae r15, rax	      2639	write.c	FUNCTION_36	FOR_1
0x40029c7	      0x4c897c2428	             mov qword [rsp + 0x28], r15	      2639	write.c	FUNCTION_36	FOR_1
0x40029cc	          0x4531e4	                          xor r12d, r12d	      2639	write.c	FUNCTION_36	FOR_1
0x40029cf	    0xc74424240000	               mov dword [rsp + 0x24], 0	      2639	write.c	FUNCTION_36	FOR_1
0x40029d7	      0x4c896c2408	                mov qword [rsp + 8], r13	      2602	write.c	FUNCTION_35
0x40029dc	      0x488b442408	                mov rax, qword [rsp + 8]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40029e1	          0x4885c0	                           test rax, rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40029e4	     0xf8403080000	                            je 0x40031ed	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40029ea	          0x488b30	                    mov rsi, qword [rax]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40029ed	          0x4989c6	                            mov r14, rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40029f0	            0x31db	                            xor ebx, ebx	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40029f2	            0x31ed	                            xor ebp, ebp	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40029f4	          0x4989f7	                            mov r15, rsi	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40029f7	    0x660f1f840000	                    nop word [rax + rax]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a00	      0x410fb6465a	           movzx eax, byte [r14 + 0x5a] 	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a05	          0x4d89fd	                            mov r13, r15	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a08	          0x4d893e	                    mov qword [r14], r15	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a0b	        0x4d8b4628	              mov r8, qword [r14 + 0x28]	      2791	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a0f	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      2792	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a13	            0x89c2	                            mov edx, eax	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a15	          0x83e0fe	                     and eax, 0xfffffffe	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a18	          0x83e201	                              and edx, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a1b	          0x83f201	                              xor edx, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a1e	             0x9d0	                             or eax, edx	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a20	        0x4188465a	               mov byte [r14 + 0x5a], al	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x4002a24	        0x418b465c	            mov eax, dword [r14 + 0x5c] 	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002a28	          0x83f80d	                            cmp eax, 0xd	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002a2b	     0xf87c7060000	                            ja 0x40030f8	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002a31	            0x89c2	                            mov edx, eax	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002a33	    0xff24d5000000	                       jmp qword [rdx*8]	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002a3a	    0x660f1f440000	                    nop word [rax + rax]	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002a40	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4002a44	          0x4885ff	                           test rdi, rdi	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4002a47	            0x7405	                            je 0x4002a4e	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x4002a49	      0xe800000000	                          call 0x4002a4e	      2694	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_5
0x4002a4e	        0x488b3424	                    mov rsi, qword [rsp]	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002a52	          0x4889df	                            mov rdi, rbx	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002a55	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002a59	      0xe800000000	                          call 0x4002a5e	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002a5e	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002a62	          0x4863e8	                         movsxd rbp, eax	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002a65	          0x4c01e5	                            add rbp, r12	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x4002a68	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002a6b	     0xf85fffeffff	                           jne 0x4002970	      2639	write.c	FUNCTION_36	FOR_1
0x4002a71	      0xe943ffffff	                           jmp 0x40029b9	      2639	write.c	FUNCTION_36	FOR_1
0x4002a76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002a80	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002a84	        0x4183c601	                             add r14d, 1	      2682	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002a88	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002a8c	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002a8f	     0xf85dbfeffff	                           jne 0x4002970	      2639	write.c	FUNCTION_36	FOR_1
0x4002a95	      0xe91fffffff	                           jmp 0x40029b9	      2639	write.c	FUNCTION_36	FOR_1
0x4002a9a	    0x660f1f440000	                    nop word [rax + rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002aa0	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2602	write.c	FUNCTION_35
0x4002aa4	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2602	write.c	FUNCTION_35
0x4002aab	          0x48d3e0	                             shl rax, cl	      2602	write.c	FUNCTION_35
0x4002aae	          0x4889c5	                            mov rbp, rax	      2610	write.c	FUNCTION_35
0x4002ab1	          0x48f7d5	                                 not rbp	      2610	write.c	FUNCTION_35
0x4002ab4	          0x4c01e5	                            add rbp, r12	      2610	write.c	FUNCTION_35
0x4002ab7	          0x4821c5	                            and rbp, rax	      2610	write.c	FUNCTION_35
0x4002aba	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002abd	          0x4c29e5	                            sub rbp, r12	      2610	write.c	FUNCTION_35
0x4002ac0	            0x85c0	                           test eax, eax	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002ac2	     0xf84a0000000	                            je 0x4002b68	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002ac8	          0x4839e8	                            cmp rax, rbp	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002acb	     0xf8397000000	                           jae 0x4002b68	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002ad1	            0x31ed	                            xor ebp, ebp	      2661	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002ad3	          0x4c01e5	                            add rbp, r12	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002ad6	        0x4183c601	                             add r14d, 1	      2676	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002ada	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002ade	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002ae2	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002ae5	     0xf8585feffff	                           jne 0x4002970	      2639	write.c	FUNCTION_36	FOR_1
0x4002aeb	      0xe9c9feffff	                           jmp 0x40029b9	      2639	write.c	FUNCTION_36	FOR_1
0x4002af0	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002af4	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002af8	      0x480faf6b18	            imul rbp, qword [rbx + 0x18]	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002afd	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002b01	          0x4c01e5	                            add rbp, r12	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002b04	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002b07	     0xf8563feffff	                           jne 0x4002970	      2639	write.c	FUNCTION_36	FOR_1
0x4002b0d	      0xe9a7feffff	                           jmp 0x40029b9	      2639	write.c	FUNCTION_36	FOR_1
0x4002b12	    0x660f1f440000	                    nop word [rax + rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002b18	          0x4889df	                            mov rdi, rbx	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4002b1b	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002b1f	      0xe800000000	                          call 0x4002b24	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4002b24	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002b28	          0x4863e8	                         movsxd rbp, eax	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4002b2b	          0x4c01e5	                            add rbp, r12	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4002b2e	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002b31	     0xf8539feffff	                           jne 0x4002970	      2639	write.c	FUNCTION_36	FOR_1
0x4002b37	      0xe97dfeffff	                           jmp 0x40029b9	      2639	write.c	FUNCTION_36	FOR_1
0x4002b3c	         0xf1f4000	                         nop dword [rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002b40	          0x4889df	                            mov rdi, rbx	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002b43	        0x4983c701	                              add r15, 1	      2641	write.c	FUNCTION_36	FOR_1
0x4002b47	      0xe800000000	                          call 0x4002b4c	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002b4c	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002b50	          0x4863e8	                         movsxd rbp, eax	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002b53	          0x4c01e5	                            add rbp, r12	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002b56	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x4002b59	     0xf8511feffff	                           jne 0x4002970	      2639	write.c	FUNCTION_36	FOR_1
0x4002b5f	      0xe955feffff	                           jmp 0x40029b9	      2639	write.c	FUNCTION_36	FOR_1
0x4002b64	         0xf1f4000	                         nop dword [rax]	      2639	write.c	FUNCTION_36	FOR_1
0x4002b68	        0x4c8b4b18	              mov r9, qword [rbx + 0x18]	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002b6c	            0x31d2	                            xor edx, edx	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002b6e	          0x4889e8	                            mov rax, rbp	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002b71	          0x49f7f1	                                  div r9	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002b74	          0x4885d2	                           test rdx, rdx	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002b77	     0xf8456ffffff	                            je 0x4002ad3	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002b7d	          0x4889e9	                            mov rcx, rbp	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002b80	    0x41b805000000	                              mov r8d, 5	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002b86	      0xba00000000	                              mov edx, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002b8b	      0xbe00000000	                              mov esi, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002b90	            0x31ff	                            xor edi, edi	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002b92	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002b97	      0xe800000000	                          call 0x4002b9c	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002b9c	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002ba1	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002ba4	          0x4889c2	                            mov rdx, rax	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002ba7	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002bab	          0x4889e9	                            mov rcx, rbp	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002bae	            0x31c0	                            xor eax, eax	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002bb0	        0x4183c601	                             add r14d, 1	      2676	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002bb4	          0x4d89c8	                              mov r8, r9	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002bb7	      0xe800000000	                          call 0x4002bbc	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002bbc	          0x4889e8	                            mov rax, rbp	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002bbf	            0x31d2	                            xor edx, edx	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002bc1	        0x48f77318	                  div qword [rbx + 0x18]	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002bc5	          0x4829d5	                            sub rbp, rdx	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002bc8	          0x4c01e5	                            add rbp, r12	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002bcb	      0xe90affffff	                           jmp 0x4002ada	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002bd0	          0x4989f0	                             mov r8, rsi	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002bd3	      0xba05000000	                              mov edx, 5	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bd8	      0xbe00000000	                              mov esi, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bdd	            0x31ff	                            xor edi, edi	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bdf	        0x4c890424	                     mov qword [rsp], r8	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002be3	      0xe800000000	                          call 0x4002be8	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002be8	        0x4c8b0424	                     mov r8, qword [rsp]	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bec	          0x4889c7	                            mov rdi, rax	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bef	      0xb900000000	                              mov ecx, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bf4	      0xbaa00a0000	                          mov edx, 0xaa0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bf9	            0x31c0	                            xor eax, eax	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bfb	          0x4c89c6	                             mov rsi, r8	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002bfe	      0xe800000000	                          call 0x4002c03	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002c03	      0x837c242001	               cmp dword [rsp + 0x20], 1	      3011	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4002c08	     0xf8e41060000	                           jle 0x400324f	      3011	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4002c0e	      0xba05000000	                              mov edx, 5	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x4002c13	      0xbe00000000	                              mov esi, 0	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x4002c18	            0x31ff	                            xor edi, edi	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x4002c1a	      0xe800000000	                          call 0x4002c1f	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x4002c1f	        0x418b7648	            mov esi, dword [r14 + 0x48] 	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002c23	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002c27	          0x4889c2	                            mov rdx, rax	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002c2a	            0x31c0	                            xor eax, eax	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002c2c	      0xe800000000	                          call 0x4002c31	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002c31	    0x49c746280000	               mov qword [r14 + 0x28], 0	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002c39	     0xf1f80000000	                         nop dword [rax]	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002c40	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002c44	         0xf1f4000	                         nop dword [rax]	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002c48	          0x4885d2	                           test rdx, rdx	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002c4b	     0xf84cc040000	                            je 0x400311d	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002c51	          0x488b32	                    mov rsi, qword [rdx]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002c54	          0x4989d6	                            mov r14, rdx	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002c57	      0x4c8d7c3500	                    lea r15, [rbp + rsi]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002c5c	      0xe99ffdffff	                           jmp 0x4002a00	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002c61	     0xf1f80000000	                         nop dword [rax]	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002c68	          0x4c89f7	                            mov rdi, r14	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4002c6b	      0xe800000000	                          call 0x4002c70	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4002c70	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4002c74	          0x4c63e8	                         movsxd r13, eax	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x4002c77	          0x4d85ed	                           test r13, r13	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002c7a	            0x74cc	                            je 0x4002c48	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002c7c	        0x418b465c	            mov eax, dword [r14 + 0x5c] 	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002c80	          0x4c01ed	                            add rbp, r13	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002c83	          0x83f80b	                            cmp eax, 0xb	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x4002c86	     0xf8427020000	                            je 0x4002eb3	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x4002c8c	          0x83f802	                              cmp eax, 2	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002c8f	     0xf840b020000	                            je 0x4002ea0	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002c95	          0x4531e4	                          xor r12d, r12d	      3074	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_4
0x4002c98	      0xbb01000000	                              mov ebx, 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002c9d	            0xeba9	                           jmp 0x4002c48	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002c9f	              0x90	                                     nop	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ca0	          0x4c89f7	                            mov rdi, r14	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4002ca3	      0xe800000000	                          call 0x4002ca8	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4002ca8	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4002cac	          0x4c63e8	                         movsxd r13, eax	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x4002caf	            0xebc6	                           jmp 0x4002c77	      3053	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002cb1	     0xf1f80000000	                         nop dword [rax]	      3053	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002cb8	          0x4c89c7	                             mov rdi, r8	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x4002cbb	      0xe800000000	                          call 0x4002cc0	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x4002cc0	        0x418b7660	            mov esi, dword [r14 + 0x60] 	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x4002cc4	          0x4889c7	                            mov rdi, rax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x4002cc7	      0xe800000000	                          call 0x4002ccc	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x4002ccc	            0x89c0	                            mov eax, eax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x4002cce	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x4002cd2	          0x4989c5	                            mov r13, rax	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002cd5	        0x4d2b6e20	             sub r13, qword [r14 + 0x20]	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002cd9	        0x49894620	             mov qword [r14 + 0x20], rax	      3047	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002cdd	            0xeb98	                           jmp 0x4002c77	      3049	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002cdf	              0x90	                                     nop	      3049	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002ce0	          0x4d85c0	                             test r8, r8	      2993	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18
0x4002ce3	     0xf8457ffffff	                            je 0x4002c40	      2993	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18
0x4002ce9	          0x4c89c7	                             mov rdi, r8	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x4002cec	      0x4889742418	             mov qword [rsp + 0x18], rsi	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x4002cf1	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x4002cf6	      0xe800000000	                          call 0x4002cfb	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x4002cfb	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4002d00	          0x4989c5	                            mov r13, rax	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x4002d03	          0x4c89c7	                             mov rdi, r8	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4002d06	      0xe800000000	                          call 0x4002d0b	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4002d0b	    0x483d00000000	                              cmp rax, 0	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4002d11	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4002d16	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4002d1b	     0xf8441040000	                            je 0x4003162	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x4002d21	      0xba05000000	                              mov edx, 5	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x4002d26	      0xbe00000000	                              mov esi, 0	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x4002d2b	            0x31ff	                            xor edi, edi	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x4002d2d	      0xe800000000	                          call 0x4002d32	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x4002d32	        0x418b7648	            mov esi, dword [r14 + 0x48] 	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002d36	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002d3a	          0x4889c2	                            mov rdx, rax	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002d3d	            0x31c0	                            xor eax, eax	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002d3f	      0xe800000000	                          call 0x4002d44	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002d44	    0x49c746280000	               mov qword [r14 + 0x28], 0	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x4002d4c	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x4002d50	      0xe9f3feffff	                           jmp 0x4002c48	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x4002d55	           0xf1f00	                         nop dword [rax]	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x4002d58	        0x488b3c24	                    mov rdi, qword [rsp]	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002d5c	          0x4889ea	                            mov rdx, rbp	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002d5f	          0x4c89f6	                            mov rsi, r14	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002d62	      0xe800000000	                          call 0x4002d67	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002d67	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002d6b	          0x4989c5	                            mov r13, rax	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002d6e	      0xe904ffffff	                           jmp 0x4002c77	      3037	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002d73	       0xf1f440000	                   nop dword [rax + rax]	      3037	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002d78	          0x4d85c0	                             test r8, r8	      2938	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15
0x4002d7b	            0x743c	                            je 0x4002db9	      2938	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15
0x4002d7d	          0x4c89c7	                             mov rdi, r8	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002d80	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002d85	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002d8a	      0xe800000000	                          call 0x4002d8f	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002d8f	      0x4883782800	               cmp qword [rax + 0x28], 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002d94	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002d99	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002d9e	     0xf85bc040000	                           jne 0x4003260	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002da4	          0x4c89c7	                             mov rdi, r8	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002da7	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002dac	      0xe800000000	                          call 0x4002db1	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002db1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002db6	          0x4801c1	                            add rcx, rax	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002db9	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002dbd	          0x4885d2	                           test rdx, rdx	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002dc0	     0xf84ae040000	                            je 0x4003274	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002dc6	          0x4c89e8	                            mov rax, r13	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002dc9	        0x49034610	             add rax, qword [r14 + 0x10]	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002dcd	          0x488b32	                    mov rsi, qword [rdx]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002dd0	      0x4c8d7c3500	                    lea r15, [rbp + rsi]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002dd5	          0x4839c1	                            cmp rcx, rax	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002dd8	     0xf83f2000000	                           jae 0x4002ed0	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002dde	      0x837c242001	               cmp dword [rsp + 0x20], 1	      2970	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x4002de3	     0xf8e27030000	                           jle 0x4003110	      2970	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x4002de9	      0xba05000000	                              mov edx, 5	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x4002dee	      0xbe00000000	                              mov esi, 0	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x4002df3	            0x31ff	                            xor edi, edi	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x4002df5	      0xe800000000	                          call 0x4002dfa	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x4002dfa	        0x418b7648	            mov esi, dword [r14 + 0x48] 	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4002dfe	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4002e02	          0x4889c2	                            mov rdx, rax	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4002e05	          0x4d29ef	                            sub r15, r13	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002e08	            0x31c0	                            xor eax, eax	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4002e0a	      0xe800000000	                          call 0x4002e0f	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4002e0f	    0x41c7465c0200	               mov dword [r14 + 0x5c], 2	      2982	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002e17	    0x41c746600000	               mov dword [r14 + 0x60], 0	      2983	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002e1f	    0x49c746200000	               mov qword [r14 + 0x20], 0	      2984	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002e27	        0x4d897e10	             mov qword [r14 + 0x10], r15	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002e2b	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002e2f	      0xe914feffff	                           jmp 0x4002c48	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002e34	         0xf1f4000	                         nop dword [rax]	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002e38	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4002e3c	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	      2602	write.c	FUNCTION_35
0x4002e43	          0x48d3e7	                             shl rdi, cl	      2602	write.c	FUNCTION_35
0x4002e46	          0x4889f9	                            mov rcx, rdi	      2602	write.c	FUNCTION_35
0x4002e49	          0x48f7d7	                                 not rdi	      2602	write.c	FUNCTION_35
0x4002e4c	        0x4c8d0432	                     lea r8, [rdx + rsi]	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x4002e50	          0x4c01fa	                            add rdx, r15	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x4002e53	        0x498d3438	                     lea rsi, [r8 + rdi]	      2610	write.c	FUNCTION_35
0x4002e57	          0x4801d7	                            add rdi, rdx	      2610	write.c	FUNCTION_35
0x4002e5a	          0x4821ce	                            and rsi, rcx	      2610	write.c	FUNCTION_35
0x4002e5d	          0x4821f9	                            and rcx, rdi	      2610	write.c	FUNCTION_35
0x4002e60	          0x4829d1	                            sub rcx, rdx	      2610	write.c	FUNCTION_35
0x4002e63	        0x418b5660	            mov edx, dword [r14 + 0x60] 	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x4002e67	          0x4c29c6	                             sub rsi, r8	      2610	write.c	FUNCTION_35
0x4002e6a	            0x85d2	                           test edx, edx	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x4002e6c	            0x7415	                            je 0x4002e83	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x4002e6e	          0x4839f2	                            cmp rdx, rsi	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4002e71	     0xf8289020000	                            jb 0x4003100	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4002e77	          0x4839ca	                            cmp rdx, rcx	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002e7a	      0xba00000000	                              mov edx, 0	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002e7f	        0x480f42ca	                          cmovb rcx, rdx	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002e83	          0x4989cd	                            mov r13, rcx	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002e86	          0x4929f5	                            sub r13, rsi	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002e89	     0xf8889000000	                            js 0x4002f18	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002e8f	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002e93	      0xe9dffdffff	                           jmp 0x4002c77	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002e98	     0xf1f84000000	                   nop dword [rax + rax]	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002ea0	        0x41f6c410	                         test r12b, 0x10	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002ea4	     0xf84ebfdffff	                            je 0x4002c95	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002eaa	          0x4885ed	                           test rbp, rbp	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002ead	     0xf85e2fdffff	                           jne 0x4002c95	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002eb3	        0x4183c410	                          add r12d, 0x10	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002eb7	      0xbb01000000	                              mov ebx, 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ebc	      0xe987fdffff	                           jmp 0x4002c48	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002ec1	     0xf1f80000000	                         nop dword [rax]	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002ec8	          0x4189f0	                            mov r8d, esi	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002ecb	      0xe903fdffff	                           jmp 0x4002bd3	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002ed0	          0x4c29f9	                            sub rcx, r15	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ed3	          0x4989cd	                            mov r13, rcx	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ed6	     0xf85a0fdffff	                           jne 0x4002c7c	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002edc	          0x4989d6	                            mov r14, rdx	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002edf	      0xe91cfbffff	                           jmp 0x4002a00	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ee4	         0xf1f4000	                         nop dword [rax]	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002ee8	          0x4889d5	                            mov rbp, rdx	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002eeb	      0xba05000000	                              mov edx, 5	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ef0	      0xbe00000000	                              mov esi, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ef5	            0x31ff	                            xor edi, edi	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002ef7	      0xe800000000	                          call 0x4002efc	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002efc	      0xb900000000	                              mov ecx, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002f01	          0x4889c7	                            mov rdi, rax	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002f04	      0xbaf40b0000	                          mov edx, 0xbf4	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002f09	          0x4889ee	                            mov rsi, rbp	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002f0c	            0x31c0	                            xor eax, eax	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002f0e	      0xe800000000	                          call 0x4002f13	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002f13	       0xf1f440000	                   nop dword [rax + rax]	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002f18	        0x41f6c410	                         test r12b, 0x10	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f1c	     0xf84c6010000	                            je 0x40030e8	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f22	          0x4489e2	                           mov edx, r12d	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f25	          0x83e20f	                            and edx, 0xf	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f28	          0x83fa01	                              cmp edx, 1	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f2b	     0xf8eb7010000	                           jle 0x40030e8	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f31	        0x488b0424	                    mov rax, qword [rsp]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f35	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f3a	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f41	          0x488b10	                    mov rdx, qword [rax]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f44	        0x488d7a30	                   lea rdi, [rdx + 0x30]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f48	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002f4d	      0xe800000000	                          call 0x4002f52	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x4002f52	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002f57	          0x4989c0	                             mov r8, rax	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x4002f5a	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002f5e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f63	        0x48034248	             add rax, qword [rdx + 0x48]	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002f67	        0x483b4240	            cmp rax, qword [rdx + 0x40] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f6b	        0x48894248	             mov qword [rdx + 0x48], rax	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002f6f	     0xf84ce020000	                            je 0x4003243	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f75	        0x488b7260	            mov rsi, qword [rdx + 0x60] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f79	        0x488b7a50	            mov rdi, qword [rdx + 0x50] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f7d	          0x4801f0	                            add rax, rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f80	          0x48f7d6	                                 not rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f83	          0x4989fa	                            mov r10, rdi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f86	          0x4821f0	                            and rax, rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f89	        0x488b7238	            mov rsi, qword [rdx + 0x38] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f8d	          0x4989c1	                             mov r9, rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f90	        0x48894248	             mov qword [rdx + 0x48], rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f94	          0x4929f1	                             sub r9, rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f97	          0x4929f2	                            sub r10, rsi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f9a	          0x4d39d1	                             cmp r9, r10	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f9d	            0x7607	                           jbe 0x4002fa6	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002f9f	        0x48897a48	             mov qword [rdx + 0x48], rdi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002fa3	          0x4889f8	                            mov rax, rdi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002fa6	        0x48894240	             mov qword [rdx + 0x40], rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002faa	          0x498b06	                    mov rax, qword [r14]	        53	string3.h	FUNCTION_41	CALL_3
0x4002fad	        0x498d787c	                    lea rdi, [r8 + 0x7c]	        53	string3.h	FUNCTION_41	CALL_3
0x4002fb1	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        53	string3.h	FUNCTION_41	CALL_3
0x4002fb6	          0x498900	                     mov qword [r8], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002fb9	        0x498b4608	                mov rax, qword [r14 + 8]	        53	string3.h	FUNCTION_41	CALL_3
0x4002fbd	        0x49894008	                 mov qword [r8 + 8], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002fc1	        0x498b4610	            mov rax, qword [r14 + 0x10] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002fc5	        0x49894010	              mov qword [r8 + 0x10], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002fc9	        0x498b4618	            mov rax, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002fcd	        0x49894018	              mov qword [r8 + 0x18], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002fd1	        0x498b4620	            mov rax, qword [r14 + 0x20] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002fd5	        0x49894020	              mov qword [r8 + 0x20], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002fd9	        0x498b4628	            mov rax, qword [r14 + 0x28] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002fdd	        0x49894028	              mov qword [r8 + 0x28], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002fe1	        0x498b4630	            mov rax, qword [r14 + 0x30] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002fe5	        0x49894030	              mov qword [r8 + 0x30], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002fe9	        0x498b4638	            mov rax, qword [r14 + 0x38] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002fed	        0x49894038	              mov qword [r8 + 0x38], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002ff1	        0x498b4640	            mov rax, qword [r14 + 0x40] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002ff5	        0x49894040	              mov qword [r8 + 0x40], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4002ff9	        0x498b4648	            mov rax, qword [r14 + 0x48] 	        53	string3.h	FUNCTION_41	CALL_3
0x4002ffd	        0x49894048	              mov qword [r8 + 0x48], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4003001	        0x498b4650	            mov rax, qword [r14 + 0x50] 	        53	string3.h	FUNCTION_41	CALL_3
0x4003005	        0x49894050	              mov qword [r8 + 0x50], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4003009	        0x498b4658	            mov rax, qword [r14 + 0x58] 	        53	string3.h	FUNCTION_41	CALL_3
0x400300d	        0x49894058	              mov qword [r8 + 0x58], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4003011	        0x498b4660	            mov rax, qword [r14 + 0x60] 	        53	string3.h	FUNCTION_41	CALL_3
0x4003015	        0x49894060	              mov qword [r8 + 0x60], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4003019	        0x498b4668	            mov rax, qword [r14 + 0x68] 	        53	string3.h	FUNCTION_41	CALL_3
0x400301d	        0x49894068	              mov qword [r8 + 0x68], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4003021	        0x498b4670	            mov rax, qword [r14 + 0x70] 	        53	string3.h	FUNCTION_41	CALL_3
0x4003025	        0x49894070	              mov qword [r8 + 0x70], rax	        53	string3.h	FUNCTION_41	CALL_3
0x4003029	        0x418b4678	            mov eax, dword [r14 + 0x78] 	        53	string3.h	FUNCTION_41	CALL_3
0x400302d	      0x4c89442410	              mov qword [rsp + 0x10], r8	        53	string3.h	FUNCTION_41	CALL_3
0x4003032	        0x41894078	              mov dword [r8 + 0x78], eax	        53	string3.h	FUNCTION_41	CALL_3
0x4003036	        0x498b4610	            mov rax, qword [r14 + 0x10] 	        53	string3.h	FUNCTION_41	CALL_3
0x400303a	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_41	CALL_3
0x400303e	      0x498d74067c	            lea rsi, [r14 + rax + 0x7c] 	        53	string3.h	FUNCTION_41	CALL_3
0x4003043	      0xe800000000	                          call 0x4003048	        53	string3.h	FUNCTION_41	CALL_3
0x4003048	          0x4c89fe	                            mov rsi, r15	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400304b	        0x49037610	             add rsi, qword [r14 + 0x10]	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400304f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003054	      0xbf01000000	                              mov edi, 1	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003059	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2908	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400305e	          0x4889f8	                            mov rax, rdi	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003061	          0x4801ce	                            add rsi, rcx	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003064	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003068	    0x41c7405c0100	                mov dword [r8 + 0x5c], 1	      2908	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003070	          0x498930	                     mov qword [r8], rsi	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003073	    0x49c740100000	                mov qword [r8 + 0x10], 0	      2910	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400307b	          0x48d3e0	                             shl rax, cl	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400307e	            0x4899	                                     cqo	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003080	        0x49f77e18	                 idiv qword [r14 + 0x18]	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003084	        0x49894020	              mov qword [r8 + 0x20], rax	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4003088	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400308c	      0x490faf4018	             imul rax, qword [r8 + 0x18]	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4003091	          0x48d3e7	                             shl rdi, cl	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4003094	          0x4889fa	                            mov rdx, rdi	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x4003097	          0x4839f8	                            cmp rax, rdi	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400309a	            0x740c	                            je 0x40030a8	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x400309c	        0x49897820	              mov qword [r8 + 0x20], rdi	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40030a0	    0x49c740180100	                mov qword [r8 + 0x18], 1	      2917	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40030a8	          0x4901d5	                            add r13, rdx	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030ab	          0x4889f1	                            mov rcx, rsi	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030ae	      0x498d442d00	                    lea rax, [r13 + rbp]	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030b3	          0x4829c1	                            sub rcx, rax	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030b6	          0x498908	                     mov qword [r8], rcx	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030b9	      0x410fb6485a	            movzx ecx, byte [r8 + 0x5a] 	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030be	            0x89c8	                            mov eax, ecx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030c0	          0x83e001	                              and eax, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030c3	          0x83f001	                              xor eax, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030c6	            0x89c2	                            mov edx, eax	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030c8	            0x89c8	                            mov eax, ecx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030ca	          0x83e0fe	                     and eax, 0xfffffffe	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030cd	             0x9d0	                             or eax, edx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030cf	          0x4c89c2	                             mov rdx, r8	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030d2	        0x4188405a	                mov byte [r8 + 0x5a], al	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030d6	        0x4d894638	              mov qword [r14 + 0x38], r8	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40030da	          0x4d85ed	                           test r13, r13	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030dd	     0xf8599fbffff	                           jne 0x4002c7c	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030e3	      0xe969fbffff	                           jmp 0x4002c51	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030e8	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030ec	          0x4c01ed	                            add rbp, r13	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030ef	      0xe998fbffff	                           jmp 0x4002c8c	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030f4	         0xf1f4000	                         nop dword [rax]	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030f8	            0x89c5	                            mov ebp, eax	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030fa	      0xe9ecfdffff	                           jmp 0x4002eeb	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x40030ff	              0x90	                                     nop	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4003100	          0x4839ca	                            cmp rdx, rcx	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4003103	     0xf8237fbffff	                            jb 0x4002c40	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4003109	            0x31f6	                            xor esi, esi	      2882	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x400310b	      0xe973fdffff	                           jmp 0x4002e83	      2882	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4003110	    0xc74424240100	               mov dword [rsp + 0x24], 1	      2973	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x4003118	      0xe92bfbffff	                           jmp 0x4002c48	      2973	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x400311d	          0x4885ed	                           test rbp, rbp	      3078	write.c	FUNCTION_36	DO_1	IF_25
0x4003120	     0xf8499000000	                            je 0x40031bf	      3078	write.c	FUNCTION_36	DO_1	IF_25
0x4003126	          0x4531e4	                          xor r12d, r12d	      3083	write.c	FUNCTION_36	DO_1	ELSE_5
0x4003129	            0x85db	                           test ebx, ebx	      3086	write.c	FUNCTION_36
0x400312b	     0xf84cf000000	                            je 0x4003200	      3086	write.c	FUNCTION_36
0x4003131	    0x48836c242801	               sub qword [rsp + 0x28], 1	      3086	write.c	FUNCTION_36
0x4003137	     0xf859ff8ffff	                           jne 0x40029dc	      3086	write.c	FUNCTION_36
0x400313d	        0x488b0424	                    mov rax, qword [rsp]	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4003141	      0xbe00000000	                              mov esi, 0	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4003146	            0x31ff	                            xor edi, edi	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4003148	      0xba05000000	                              mov edx, 5	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400314d	          0x488b18	                    mov rbx, qword [rax]	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4003150	      0xe800000000	                          call 0x4003155	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4003155	          0x4889c7	                            mov rdi, rax	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4003158	            0x31c0	                            xor eax, eax	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400315a	          0x4889de	                            mov rsi, rbx	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400315d	      0xe800000000	                          call 0x4003162	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4003162	          0x4c89c7	                             mov rdi, r8	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4003165	      0x4889742418	             mov qword [rsp + 0x18], rsi	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x400316a	      0x4c89442410	              mov qword [rsp + 0x10], r8	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x400316f	      0xe800000000	                          call 0x4003174	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4003174	            0x85c0	                           test eax, eax	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4003176	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x400317b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4003180	     0xf859bfbffff	                           jne 0x4002d21	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x4003186	          0x4c89c7	                             mov rdi, r8	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x4003189	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x400318e	      0xe800000000	                          call 0x4003193	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x4003193	            0x85c0	                           test eax, eax	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x4003195	     0xf8486fbffff	                            je 0x4002d21	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x400319b	          0x4d85ed	                           test r13, r13	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x400319e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x40031a3	     0xf885afaffff	                            js 0x4002c03	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x40031a9	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      3023	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x40031ad	          0x4889f0	                            mov rax, rsi	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x40031b0	          0x482b02	                    sub rax, qword [rdx]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x40031b3	        0x49034610	             add rax, qword [r14 + 0x10]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x40031b7	          0x4901c5	                            add r13, rax	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x40031ba	      0xe91bffffff	                           jmp 0x40030da	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x40031bf	        0x41f6c410	                         test r12b, 0x10	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x40031c3	     0xf855dffffff	                           jne 0x4003126	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x40031c9	    0x41f7c4f0ffff	                   test r12d, 0xfffffff0	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x40031d0	     0xf8450ffffff	                            je 0x4003126	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x40031d6	        0x4183c401	                             add r12d, 1	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x40031da	      0xe94affffff	                           jmp 0x4003129	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x40031df	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2639	write.c	FUNCTION_36	FOR_1
0x40031e8	      0xe9dff7ffff	                           jmp 0x40029cc	      2639	write.c	FUNCTION_36	FOR_1
0x40031ed	        0x41f6c410	                         test r12b, 0x10	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x40031f1	            0x753d	                           jne 0x4003230	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x40031f3	    0x41f7c4f0ffff	                   test r12d, 0xfffffff0	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x40031fa	            0x7434	                            je 0x4003230	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x40031fc	            0x31db	                            xor ebx, ebx	      2779	write.c	FUNCTION_36	DO_1
0x40031fe	            0xebd6	                           jmp 0x40031d6	      2779	write.c	FUNCTION_36	DO_1
0x4003200	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2779	write.c	FUNCTION_36	DO_1
0x4003205	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      2779	write.c	FUNCTION_36	DO_1
0x4003209	          0x4d85ed	                           test r13, r13	      3093	write.c	FUNCTION_36	FOR_5
0x400320c	            0x7422	                            je 0x4003230	      3093	write.c	FUNCTION_36	FOR_5
0x400320e	            0x6690	                                     nop	      3093	write.c	FUNCTION_36	FOR_5
0x4003210	        0x498b4500	                    mov rax, qword [r13]	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x4003214	        0x49394508	                cmp qword [r13 + 8], rax	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x4003218	            0x7409	                            je 0x4003223	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x400321a	        0x49894508	                mov qword [r13 + 8], rax	      3096	write.c	FUNCTION_36	FOR_5	IF_27
0x400321e	      0xba01000000	                              mov edx, 1	      3097	write.c	FUNCTION_36	FOR_5	IF_27
0x4003223	        0x4d8b6d38	            mov r13, qword [r13 + 0x38] 	      3093	write.c	FUNCTION_36	FOR_5
0x4003227	          0x4d85ed	                           test r13, r13	      3093	write.c	FUNCTION_36	FOR_5
0x400322a	            0x75e4	                           jne 0x4003210	      3093	write.c	FUNCTION_36	FOR_5
0x400322c	        0x89542424	             mov dword [rsp + 0x24], edx	      3093	write.c	FUNCTION_36	FOR_5
0x4003230	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3100	write.c	FUNCTION_36
0x4003234	        0x4883c438	                           add rsp, 0x38	      3100	write.c	FUNCTION_36
0x4003238	              0x5b	                                 pop rbx	      3100	write.c	FUNCTION_36
0x4003239	              0x5d	                                 pop rbp	      3100	write.c	FUNCTION_36
0x400323a	            0x415c	                                 pop r12	      3100	write.c	FUNCTION_36
0x400323c	            0x415d	                                 pop r13	      3100	write.c	FUNCTION_36
0x400323e	            0x415e	                                 pop r14	      3100	write.c	FUNCTION_36
0x4003240	            0x415f	                                 pop r15	      3100	write.c	FUNCTION_36
0x4003242	              0xc3	                                     ret	      3100	write.c	FUNCTION_36
0x4003243	    0x808a80000000	                 or byte [rdx + 0x80], 2	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400324a	      0xe926fdffff	                           jmp 0x4002f75	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400324f	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4003253	    0xc74424240100	               mov dword [rsp + 0x24], 1	      3013	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x400325b	      0xe9e8f9ffff	                           jmp 0x4002c48	      3013	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4003260	      0xba00000000	                              mov edx, 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4003265	      0xbe800b0000	                          mov esi, 0xb80	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400326a	      0xbf00000000	                              mov edi, 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400326f	      0xe800000000	                          call 0x4003274	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4003274	      0xba00000000	                              mov edx, 0	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4003279	      0xbe840b0000	                          mov esi, 0xb84	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x400327e	      0xbf00000000	                              mov edi, 0	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4003283	      0xe800000000	                          call 0x4003288	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
chain_frchains_together	IF,1:CALL,2:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	64
0x4000e50	    0x4881ec080100	                          sub rsp, 0x108	       418	write.c	FUNCTION_11
0x4000e57	    0x64488b042528	                mov rax, qword fs:[0x28]	       418	write.c	FUNCTION_11
0x4000e60	    0x48898424f800	             mov qword [rsp + 0xf8], rax	       418	write.c	FUNCTION_11
0x4000e68	            0x31c0	                            xor eax, eax	       418	write.c	FUNCTION_11
0x4000e6a	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       423	write.c	FUNCTION_11	CALL_1
0x4000e71	          0x4885c0	                           test rax, rax	       424	write.c	FUNCTION_11	IF_1
0x4000e74	     0xf849b000000	                            je 0x4000f15	       424	write.c	FUNCTION_11	IF_1
0x4000e7a	          0x4c8b08	                     mov r9, qword [rax]	       426	write.c	FUNCTION_11	CALL_2
0x4000e7d	          0x4d85c9	                             test r9, r9	       394	write.c	FUNCTION_10	FOR_1
0x4000e80	     0xf84b4000000	                            je 0x4000f3a	       394	write.c	FUNCTION_10	FOR_1
0x4000e86	        0x498b5108	                 mov rdx, qword [r9 + 8]	       397	write.c	FUNCTION_10	FOR_1
0x4000e8a	          0x498b01	                     mov rax, qword [r9]	       396	write.c	FUNCTION_10	FOR_1
0x4000e8d	          0x8b7a5c	            mov edi, dword [rdx + 0x5c] 	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000e90	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       396	write.c	FUNCTION_10	FOR_1
0x4000e98	            0x85ff	                           test edi, edi	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000e9a	     0xf84ae000000	                            je 0x4000f4e	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000ea0	          0x4c89c8	                             mov rax, r9	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000ea3	          0x4989e0	                             mov r8, rsp	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000ea6	            0xeb2f	                           jmp 0x4000ed7	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000ea8	     0xf1f84000000	                   nop dword [rax + rax]	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000eb0	        0x49894840	              mov qword [r8 + 0x40], rcx	       403	write.c	FUNCTION_10	FOR_1	IF_1
0x4000eb4	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x4000eb8	        0x4c894718	              mov qword [rdi + 0x18], r8	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x4000ebc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       394	write.c	FUNCTION_10	FOR_1
0x4000ec0	          0x4885c0	                           test rax, rax	       394	write.c	FUNCTION_10	FOR_1
0x4000ec3	            0x7433	                            je 0x4000ef8	       394	write.c	FUNCTION_10	FOR_1
0x4000ec5	          0x488b08	                    mov rcx, qword [rax]	       396	write.c	FUNCTION_10	FOR_1
0x4000ec8	        0x48894a38	             mov qword [rdx + 0x38], rcx	       396	write.c	FUNCTION_10	FOR_1
0x4000ecc	        0x488b5008	                mov rdx, qword [rax + 8]	       397	write.c	FUNCTION_10	FOR_1
0x4000ed0	          0x8b4a5c	            mov ecx, dword [rdx + 0x5c] 	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000ed3	            0x85c9	                           test ecx, ecx	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000ed5	            0x7477	                            je 0x4000f4e	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000ed7	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x4000edb	          0x4885c9	                           test rcx, rcx	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x4000ede	            0x74dc	                            je 0x4000ebc	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x4000ee0	    0x488bbea80000	            mov rdi, qword [rsi + 0xa8] 	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x4000ee7	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x4000eec	            0x75c2	                           jne 0x4000eb0	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x4000eee	        0x48894f10	             mov qword [rdi + 0x10], rcx	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x4000ef2	            0xebbc	                           jmp 0x4000eb0	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x4000ef4	         0xf1f4000	                         nop dword [rax]	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x4000ef8	      0x488d442470	                   lea rax, [rsp + 0x70]	       408	write.c	FUNCTION_10	CALL_5
0x4000efd	          0x4839c2	                            cmp rdx, rax	       408	write.c	FUNCTION_10	CALL_5
0x4000f00	            0x7438	                            je 0x4000f3a	       408	write.c	FUNCTION_10	CALL_5
0x4000f02	          0x8b425c	            mov eax, dword [rdx + 0x5c] 	       408	write.c	FUNCTION_10	CALL_5
0x4000f05	            0x85c0	                           test eax, eax	       408	write.c	FUNCTION_10	CALL_5
0x4000f07	            0x7431	                            je 0x4000f3a	       408	write.c	FUNCTION_10	CALL_5
0x4000f09	    0x48c742380000	               mov qword [rdx + 0x38], 0	       410	write.c	FUNCTION_10
0x4000f11	        0x49895108	                 mov qword [r9 + 8], rdx	       426	write.c	FUNCTION_11	CALL_2
0x4000f15	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	       431	write.c	FUNCTION_11
0x4000f1d	    0x644833042528	                xor rax, qword fs:[0x28]	       431	write.c	FUNCTION_11
0x4000f26	    0xc70500000000	               mov dword [0x04000f30], 1	       430	write.c	FUNCTION_11
0x4000f30	            0x7530	                           jne 0x4000f62	       431	write.c	FUNCTION_11
0x4000f32	    0x4881c4080100	                          add rsp, 0x108	       431	write.c	FUNCTION_11
0x4000f39	              0xc3	                                     ret	       431	write.c	FUNCTION_11
0x4000f3a	      0xba00000000	                              mov edx, 0	       408	write.c	FUNCTION_10	CALL_5
0x4000f3f	      0xbe99010000	                          mov esi, 0x199	       408	write.c	FUNCTION_10	CALL_5
0x4000f44	      0xbf00000000	                              mov edi, 0	       408	write.c	FUNCTION_10	CALL_5
0x4000f49	      0xe800000000	                          call 0x4000f4e	       408	write.c	FUNCTION_10	CALL_5
0x4000f4e	      0xba00000000	                              mov edx, 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000f53	      0xbe8e010000	                          mov esi, 0x18e	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000f58	      0xbf00000000	                              mov edi, 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000f5d	      0xe800000000	                          call 0x4000f62	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000f62	      0xe800000000	                          call 0x4000f67	       431	write.c	FUNCTION_11
append	IF,1:CALL,1:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	16
0x4002730	          0x4885d2	                           test rdx, rdx	       342	write.c	FUNCTION_6	IF_1
0x4002733	            0x750b	                           jne 0x4002740	       342	write.c	FUNCTION_6	IF_1
0x4002735	              0xc3	                                     ret	       347	write.c	FUNCTION_6
0x4002736	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       347	write.c	FUNCTION_6
0x4002740	              0x55	                                push rbp	       340	write.c	FUNCTION_6
0x4002741	              0x53	                                push rbx	       340	write.c	FUNCTION_6
0x4002742	          0x4889fd	                            mov rbp, rdi	       340	write.c	FUNCTION_6
0x4002745	          0x4889d3	                            mov rbx, rdx	       340	write.c	FUNCTION_6
0x4002748	        0x4883ec08	                              sub rsp, 8	       340	write.c	FUNCTION_6
0x400274c	          0x488b3f	                    mov rdi, qword [rdi]	        53	string3.h	FUNCTION_41	CALL_3
0x400274f	      0xe800000000	                          call 0x4002754	        53	string3.h	FUNCTION_41	CALL_3
0x4002754	        0x48015d00	                    add qword [rbp], rbx	       346	write.c	FUNCTION_6
0x4002758	        0x4883c408	                              add rsp, 8	       347	write.c	FUNCTION_6
0x400275c	              0x5b	                                 pop rbx	       347	write.c	FUNCTION_6
0x400275d	              0x5d	                                 pop rbp	       347	write.c	FUNCTION_6
0x400275e	              0xc3	                                     ret	       347	write.c	FUNCTION_6
subsegs_finish_section	IF,5:CALL,8:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,1:FOR,1	61
0x4000d70	    0x488b87a80000	            mov rax, qword [rdi + 0xa8] 	      1800	write.c	FUNCTION_28	CALL_1
0x4000d77	          0x4885c0	                           test rax, rax	      1801	write.c	FUNCTION_28	IF_1
0x4000d7a	     0xf84b4000000	                            je 0x4000e34	      1801	write.c	FUNCTION_28	IF_1
0x4000d80	            0x4154	                                push r12	      1798	write.c	FUNCTION_28
0x4000d82	              0x55	                                push rbp	      1798	write.c	FUNCTION_28
0x4000d83	          0x4989fc	                            mov r12, rdi	      1798	write.c	FUNCTION_28
0x4000d86	              0x53	                                push rbx	      1798	write.c	FUNCTION_28
0x4000d87	          0x488b28	                    mov rbp, qword [rax]	      1804	write.c	FUNCTION_28	FOR_1
0x4000d8a	          0x4885ed	                           test rbp, rbp	      1804	write.c	FUNCTION_28	FOR_1
0x4000d8d	            0x753d	                           jne 0x4000dcc	      1804	write.c	FUNCTION_28	FOR_1
0x4000d8f	      0xe99c000000	                           jmp 0x4000e30	      1804	write.c	FUNCTION_28	FOR_1
0x4000d94	         0xf1f4000	                         nop dword [rax]	      1804	write.c	FUNCTION_28	FOR_1
0x4000d98	            0x31f6	                            xor esi, esi	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4000d9a	            0x89df	                            mov edi, ebx	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4000d9c	      0xe800000000	                          call 0x4000da1	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4000da1	    0x488b3d000000	            mov rdi, qword [0x04000da8] 	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4000da8	      0xe800000000	                          call 0x4000dad	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4000dad	    0x488b05000000	            mov rax, qword [0x04000db4] 	      1846	write.c	FUNCTION_28	FOR_1
0x4000db4	      0x4883783800	               cmp qword [rax + 0x38], 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4000db9	    0x48c740100000	               mov qword [rax + 0x10], 0	      1846	write.c	FUNCTION_28	FOR_1
0x4000dc1	            0x7573	                           jne 0x4000e36	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4000dc3	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      1806	write.c	FUNCTION_28	FOR_1
0x4000dc7	          0x4885ed	                           test rbp, rbp	      1804	write.c	FUNCTION_28	FOR_1
0x4000dca	            0x7464	                            je 0x4000e30	      1804	write.c	FUNCTION_28	FOR_1
0x4000dcc	          0x8b7518	            mov esi, dword [rbp + 0x18] 	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4000dcf	          0x4c89e7	                            mov rdi, r12	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4000dd2	      0xe800000000	                          call 0x4000dd7	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x4000dd7	      0xe800000000	                          call 0x4000ddc	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4000ddc	            0x85c0	                           test eax, eax	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4000dde	            0x740a	                            je 0x4000dea	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x4000de0	    0xc70500000000	               mov dword [0x04000dea], 1	      1816	write.c	FUNCTION_28	FOR_1	IF_2
0x4000dea	    0x488b3d000000	            mov rdi, qword [0x04000df1] 	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4000df1	            0x31db	                            xor ebx, ebx	      1818	write.c	FUNCTION_28	FOR_1
0x4000df3	        0xf6472280	           test byte [rdi + 0x22], 0x80 	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4000df7	            0x740a	                            je 0x4000e03	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x4000df9	    0x8b87c4000000	            mov eax, dword [rdi + 0xc4] 	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4000dff	            0x85c0	                           test eax, eax	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4000e01	            0x7522	                           jne 0x4000e25	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x4000e03	      0xe800000000	                          call 0x4000e08	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4000e08	            0x85c0	                           test eax, eax	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4000e0a	            0x758c	                           jne 0x4000d98	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4000e0c	            0x31d2	                            xor edx, edx	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4000e0e	            0x31f6	                            xor esi, esi	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4000e10	            0x89df	                            mov edi, ebx	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4000e12	      0xe800000000	                          call 0x4000e17	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4000e17	            0xeb88	                           jmp 0x4000da1	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4000e19	     0xf1f80000000	                         nop dword [rax]	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4000e20	          0x83c301	                              add ebx, 1	      1827	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4000e23	            0xd1e8	                              shr eax, 1	      1828	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4000e25	            0xa801	                              test al, 1	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4000e27	            0x74f7	                            je 0x4000e20	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4000e29	            0xebd8	                           jmp 0x4000e03	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4000e2b	       0xf1f440000	                   nop dword [rax + rax]	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4000e30	              0x5b	                                 pop rbx	      1849	write.c	FUNCTION_28
0x4000e31	              0x5d	                                 pop rbp	      1849	write.c	FUNCTION_28
0x4000e32	            0x415c	                                 pop r12	      1849	write.c	FUNCTION_28
0x4000e34	            0xf3c3	                                     ret	      1849	write.c	FUNCTION_28
0x4000e36	      0xba00000000	                              mov edx, 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4000e3b	      0xbe37070000	                          mov esi, 0x737	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4000e40	      0xbf00000000	                              mov edi, 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4000e45	      0xe800000000	                          call 0x4000e4a	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
get_recorded_alignment	IF,1:CALL,0:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	7
0x4002780	    0x4881ff000000	                              cmp rdi, 0	       371	write.c	FUNCTION_8	IF_1
0x4002787	            0x7407	                            je 0x4002790	       371	write.c	FUNCTION_8	IF_1
0x4002789	          0x8b4770	            mov eax, dword [rdi + 0x70] 	       374	write.c	FUNCTION_8
0x400278c	              0xc3	                                     ret	       374	write.c	FUNCTION_8
0x400278d	           0xf1f00	                         nop dword [rax]	       374	write.c	FUNCTION_8
0x4002790	            0x31c0	                            xor eax, eax	       372	write.c	FUNCTION_8	IF_1
0x4002792	              0xc3	                                     ret	       375	write.c	FUNCTION_8
write_relocs	IF,12:CALL,14:functions,0:SWITCH,0:DO,0:WHILE,4:ELSE,1:FOR,5	271
0x4001530	            0x4157	                                push r15	      1221	write.c	FUNCTION_21
0x4001532	            0x4156	                                push r14	      1221	write.c	FUNCTION_21
0x4001534	            0x4155	                                push r13	      1221	write.c	FUNCTION_21
0x4001536	            0x4154	                                push r12	      1221	write.c	FUNCTION_21
0x4001538	              0x55	                                push rbp	      1221	write.c	FUNCTION_21
0x4001539	              0x53	                                push rbx	      1221	write.c	FUNCTION_21
0x400153a	        0x4883ec28	                           sub rsp, 0x28	      1221	write.c	FUNCTION_21
0x400153e	    0x4c8bbea80000	            mov r15, qword [rsi + 0xa8] 	      1222	write.c	FUNCTION_21	CALL_1
0x4001545	          0x4d85ff	                           test r15, r15	      1231	write.c	FUNCTION_21	IF_1
0x4001548	     0xf8489020000	                            je 0x40017d7	      1231	write.c	FUNCTION_21	IF_1
0x400154e	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1235	write.c	FUNCTION_21	FOR_1
0x4001552	            0x31c9	                            xor ecx, ecx	      1235	write.c	FUNCTION_21	FOR_1
0x4001554	          0x4885c0	                           test rax, rax	      1235	write.c	FUNCTION_21	FOR_1
0x4001557	            0x7421	                            je 0x400157a	      1235	write.c	FUNCTION_21	FOR_1
0x4001559	     0xf1f80000000	                         nop dword [rax]	      1235	write.c	FUNCTION_21	FOR_1
0x4001560	           0xfb610	                   movzx edx, byte [rax]	      1235	write.c	FUNCTION_21	FOR_1
0x4001563	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1235	write.c	FUNCTION_21	FOR_1
0x4001567	          0x83e220	                           and edx, 0x20	      1235	write.c	FUNCTION_21	FOR_1
0x400156a	          0x80fa01	                               cmp dl, 1	      1235	write.c	FUNCTION_21	FOR_1
0x400156d	           0xf92c2	                                 setb dl	      1235	write.c	FUNCTION_21	FOR_1
0x4001570	           0xfb6d2	                           movzx edx, dl	      1235	write.c	FUNCTION_21	FOR_1
0x4001573	             0x1d1	                            add ecx, edx	      1235	write.c	FUNCTION_21	FOR_1
0x4001575	          0x4885c0	                           test rax, rax	      1235	write.c	FUNCTION_21	FOR_1
0x4001578	            0x75e6	                           jne 0x4001560	      1235	write.c	FUNCTION_21	FOR_1
0x400157a	      0xba00000000	                              mov edx, 0	      1235	write.c	FUNCTION_21	FOR_1
0x400157f	          0x4531ed	                          xor r13d, r13d	      1235	write.c	FUNCTION_21	FOR_1
0x4001582	          0x488b02	                    mov rax, qword [rdx]	      1246	write.c	FUNCTION_21	WHILE_1
0x4001585	          0x4885c0	                           test rax, rax	      1246	write.c	FUNCTION_21	WHILE_1
0x4001588	            0x7415	                            je 0x400159f	      1246	write.c	FUNCTION_21	WHILE_1
0x400158a	        0x483b7008	                cmp rsi, qword [rax + 8]	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x400158e	     0xf84c2020000	                            je 0x4001856	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x4001594	          0x4889c2	                            mov rdx, rax	      1256	write.c	FUNCTION_21	WHILE_1	ELSE_1
0x4001597	          0x488b02	                    mov rax, qword [rdx]	      1246	write.c	FUNCTION_21	WHILE_1
0x400159a	          0x4885c0	                           test rax, rax	      1246	write.c	FUNCTION_21	WHILE_1
0x400159d	            0x75eb	                           jne 0x400158a	      1246	write.c	FUNCTION_21	WHILE_1
0x400159f	        0x48893424	                    mov qword [rsp], rsi	      1246	write.c	FUNCTION_21	WHILE_1
0x40015a3	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1246	write.c	FUNCTION_21	WHILE_1
0x40015a8	      0xbe08000000	                              mov esi, 8	      1259	write.c	FUNCTION_21	CALL_2
0x40015ad	            0x89cf	                            mov edi, ecx	      1259	write.c	FUNCTION_21	CALL_2
0x40015af	      0xe800000000	                          call 0x40015b4	      1259	write.c	FUNCTION_21	CALL_2
0x40015b4	        0x498b5f10	            mov rbx, qword [r15 + 0x10] 	      1264	write.c	FUNCTION_21	FOR_2
0x40015b8	      0x4889442408	                mov qword [rsp + 8], rax	      1259	write.c	FUNCTION_21	CALL_2
0x40015bd	          0x4885db	                           test rbx, rbx	      1264	write.c	FUNCTION_21	FOR_2
0x40015c0	     0xf841c030000	                            je 0x40018e2	      1264	write.c	FUNCTION_21	FOR_2
0x40015c6	          0x4531f6	                          xor r14d, r14d	      1264	write.c	FUNCTION_21	FOR_2
0x40015c9	          0x4531e4	                          xor r12d, r12d	      1264	write.c	FUNCTION_21	FOR_2
0x40015cc	         0xf1f4000	                         nop dword [rax]	      1264	write.c	FUNCTION_21	FOR_2
0x40015d0	          0xf60320	                   test byte [rbx], 0x20	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x40015d3	     0xf852c010000	                           jne 0x4001705	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x40015d9	        0x488b5308	                mov rdx, qword [rbx + 8]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x40015dd	         0xfb64302	               movzx eax, byte [rbx + 2]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x40015e1	        0x48034310	             add rax, qword [rbx + 0x10]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x40015e5	        0x483b4210	            cmp rax, qword [rdx + 0x10] 	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x40015e9	     0xf8f80020000	                            jg 0x400186f	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x40015ef	        0x488b3c24	                    mov rdi, qword [rsp]	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x40015f3	          0x4889de	                            mov rsi, rbx	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x40015f6	      0xe800000000	                          call 0x40015fb	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x40015fb	          0x4885c0	                           test rax, rax	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x40015fe	          0x4889c5	                            mov rbp, rax	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4001601	     0xf84fe000000	                            je 0x4001705	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4001607	          0x4d85ed	                           test r13, r13	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400160a	          0x4489e1	                           mov ecx, r12d	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400160d	     0xf84cd000000	                            je 0x40016e0	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001613	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001617	        0x483b7008	                cmp rsi, qword [rax + 8]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400161b	          0x4489e1	                           mov ecx, r12d	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x400161e	     0xf83bc000000	                           jae 0x40016e0	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001624	         0xf1f4000	                         nop dword [rax]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4001628	          0x4d85f6	                           test r14, r14	      1199	write.c	FUNCTION_20	FOR_1
0x400162b	          0x4c89f0	                            mov rax, r14	      1199	write.c	FUNCTION_20	FOR_1
0x400162e	            0x741e	                            je 0x400164e	      1199	write.c	FUNCTION_20	FOR_1
0x4001630	          0x488b10	                    mov rdx, qword [rax]	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x4001633	          0x4839f2	                            cmp rdx, rsi	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x4001636	            0x770d	                            ja 0x4001645	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x4001638	        0x48035010	             add rdx, qword [rax + 0x10]	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x400163c	          0x4839f2	                            cmp rdx, rsi	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x400163f	     0xf87ab010000	                            ja 0x40017f0	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x4001645	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1199	write.c	FUNCTION_20	FOR_1
0x4001649	          0x4885c0	                           test rax, rax	      1199	write.c	FUNCTION_20	FOR_1
0x400164c	            0x75e2	                           jne 0x4001630	      1199	write.c	FUNCTION_20	FOR_1
0x400164e	          0x498b07	                    mov rax, qword [r15]	      1204	write.c	FUNCTION_20	FOR_2
0x4001651	          0x488b38	                    mov rdi, qword [rax]	      1204	write.c	FUNCTION_20	FOR_2
0x4001654	          0x4885ff	                           test rdi, rdi	      1204	write.c	FUNCTION_20	FOR_2
0x4001657	            0x7445	                            je 0x400169e	      1204	write.c	FUNCTION_20	FOR_2
0x4001659	          0x4889f8	                            mov rax, rdi	      1204	write.c	FUNCTION_20	FOR_2
0x400165c	         0xf1f4000	                         nop dword [rax]	      1204	write.c	FUNCTION_20	FOR_2
0x4001660	          0x488b10	                    mov rdx, qword [rax]	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x4001663	          0x4839f2	                            cmp rdx, rsi	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x4001666	            0x770d	                            ja 0x4001675	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x4001668	        0x48035010	             add rdx, qword [rax + 0x10]	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x400166c	          0x4839f2	                            cmp rdx, rsi	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x400166f	     0xf877b010000	                            ja 0x40017f0	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x4001675	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1204	write.c	FUNCTION_20	FOR_2
0x4001679	          0x4885c0	                           test rax, rax	      1204	write.c	FUNCTION_20	FOR_2
0x400167c	            0x75e2	                           jne 0x4001660	      1204	write.c	FUNCTION_20	FOR_2
0x400167e	            0x6690	                                     nop	      1204	write.c	FUNCTION_20	FOR_2
0x4001680	          0x488b07	                    mov rax, qword [rdi]	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4001683	          0x4839f0	                            cmp rax, rsi	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4001686	            0x770d	                            ja 0x4001695	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4001688	        0x48034710	             add rax, qword [rdi + 0x10]	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400168c	          0x4839f0	                            cmp rax, rsi	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400168f	     0xf838b010000	                           jae 0x4001820	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4001695	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	      1209	write.c	FUNCTION_20	FOR_3
0x4001699	          0x4885ff	                           test rdi, rdi	      1209	write.c	FUNCTION_20	FOR_3
0x400169c	            0x75e2	                           jne 0x4001680	      1209	write.c	FUNCTION_20	FOR_3
0x400169e	      0xba05000000	                              mov edx, 5	      1215	write.c	FUNCTION_20	CALL_2
0x40016a3	      0xbe00000000	                              mov esi, 0	      1215	write.c	FUNCTION_20	CALL_2
0x40016a8	            0x31ff	                            xor edi, edi	      1215	write.c	FUNCTION_20	CALL_2
0x40016aa	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1215	write.c	FUNCTION_20	CALL_2
0x40016ae	      0xe800000000	                          call 0x40016b3	      1215	write.c	FUNCTION_20	CALL_2
0x40016b3	        0x418b7540	            mov esi, dword [r13 + 0x40] 	      1214	write.c	FUNCTION_20	CALL_1
0x40016b7	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	      1214	write.c	FUNCTION_20	CALL_1
0x40016bb	          0x4889c2	                            mov rdx, rax	      1214	write.c	FUNCTION_20	CALL_1
0x40016be	            0x31c0	                            xor eax, eax	      1214	write.c	FUNCTION_20	CALL_1
0x40016c0	      0xe800000000	                          call 0x40016c5	      1214	write.c	FUNCTION_20	CALL_1
0x40016c5	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1214	write.c	FUNCTION_20	CALL_1
0x40016c9	        0x4d8b6d00	                    mov r13, qword [r13]	      1304	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40016cd	          0x4d85ed	                           test r13, r13	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40016d0	            0x740e	                            je 0x40016e0	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40016d2	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40016d6	        0x483b7508	                cmp rsi, qword [rbp + 8]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40016da	     0xf8248ffffff	                            jb 0x4001628	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x40016e0	      0x488b442408	                mov rax, qword [rsp + 8]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x40016e5	        0x448d6101	                     lea r12d, [rcx + 1]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x40016e9	        0x448b4368	            mov r8d, dword [rbx + 0x68] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x40016ed	        0x488b3c24	                    mov rdi, qword [rsp]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x40016f1	          0x4889ee	                            mov rsi, rbp	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x40016f4	        0x48892cc8	            mov qword [rax + rcx*8], rbp	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x40016f8	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x40016fc	        0x488b5308	                mov rdx, qword [rbx + 8]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4001700	      0xe83befffff	                  call sym.install_reloc	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4001705	        0x488b5b40	            mov rbx, qword [rbx + 0x40] 	      1264	write.c	FUNCTION_21	FOR_2
0x4001709	          0x4885db	                           test rbx, rbx	      1264	write.c	FUNCTION_21	FOR_2
0x400170c	     0xf85befeffff	                           jne 0x40015d0	      1264	write.c	FUNCTION_21	FOR_2
0x4001712	          0x4d85ed	                           test r13, r13	      1317	write.c	FUNCTION_21	WHILE_4
0x4001715	     0xf84b3000000	                            je 0x40017ce	      1317	write.c	FUNCTION_21	WHILE_4
0x400171b	       0xf1f440000	                   nop dword [rax + rax]	      1317	write.c	FUNCTION_21	WHILE_4
0x4001720	          0x4d85f6	                           test r14, r14	      1199	write.c	FUNCTION_20	FOR_1
0x4001723	            0x7429	                            je 0x400174e	      1199	write.c	FUNCTION_20	FOR_1
0x4001725	        0x498b4d20	            mov rcx, qword [r13 + 0x20] 	      1199	write.c	FUNCTION_20	FOR_1
0x4001729	          0x4c89f0	                            mov rax, r14	      1199	write.c	FUNCTION_20	FOR_1
0x400172c	         0xf1f4000	                         nop dword [rax]	      1199	write.c	FUNCTION_20	FOR_1
0x4001730	          0x488b10	                    mov rdx, qword [rax]	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x4001733	          0x4839ca	                            cmp rdx, rcx	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x4001736	            0x770d	                            ja 0x4001745	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x4001738	        0x48035010	             add rdx, qword [rax + 0x10]	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x400173c	          0x4839ca	                            cmp rdx, rcx	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x400173f	     0xf87e0000000	                            ja 0x4001825	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x4001745	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1199	write.c	FUNCTION_20	FOR_1
0x4001749	          0x4885c0	                           test rax, rax	      1199	write.c	FUNCTION_20	FOR_1
0x400174c	            0x75e2	                           jne 0x4001730	      1199	write.c	FUNCTION_20	FOR_1
0x400174e	          0x498b07	                    mov rax, qword [r15]	      1204	write.c	FUNCTION_20	FOR_2
0x4001751	          0x488b08	                    mov rcx, qword [rax]	      1204	write.c	FUNCTION_20	FOR_2
0x4001754	          0x4885c9	                           test rcx, rcx	      1204	write.c	FUNCTION_20	FOR_2
0x4001757	            0x7445	                            je 0x400179e	      1204	write.c	FUNCTION_20	FOR_2
0x4001759	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	      1204	write.c	FUNCTION_20	FOR_2
0x400175d	          0x4889c8	                            mov rax, rcx	      1204	write.c	FUNCTION_20	FOR_2
0x4001760	          0x488b10	                    mov rdx, qword [rax]	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x4001763	          0x4839f2	                            cmp rdx, rsi	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x4001766	            0x770d	                            ja 0x4001775	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x4001768	        0x48035010	             add rdx, qword [rax + 0x10]	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x400176c	          0x4839f2	                            cmp rdx, rsi	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x400176f	     0xf87b0000000	                            ja 0x4001825	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x4001775	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1204	write.c	FUNCTION_20	FOR_2
0x4001779	          0x4885c0	                           test rax, rax	      1204	write.c	FUNCTION_20	FOR_2
0x400177c	            0x75e2	                           jne 0x4001760	      1204	write.c	FUNCTION_20	FOR_2
0x400177e	            0x6690	                                     nop	      1204	write.c	FUNCTION_20	FOR_2
0x4001780	          0x488b01	                    mov rax, qword [rcx]	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4001783	          0x4839f0	                            cmp rax, rsi	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4001786	            0x770d	                            ja 0x4001795	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4001788	        0x48034110	             add rax, qword [rcx + 0x10]	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400178c	          0x4839f0	                            cmp rax, rsi	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400178f	     0xf83d5000000	                           jae 0x400186a	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4001795	        0x488b4938	            mov rcx, qword [rcx + 0x38] 	      1209	write.c	FUNCTION_20	FOR_3
0x4001799	          0x4885c9	                           test rcx, rcx	      1209	write.c	FUNCTION_20	FOR_3
0x400179c	            0x75e2	                           jne 0x4001780	      1209	write.c	FUNCTION_20	FOR_3
0x400179e	      0xba05000000	                              mov edx, 5	      1215	write.c	FUNCTION_20	CALL_2
0x40017a3	      0xbe00000000	                              mov esi, 0	      1215	write.c	FUNCTION_20	CALL_2
0x40017a8	            0x31ff	                            xor edi, edi	      1215	write.c	FUNCTION_20	CALL_2
0x40017aa	      0xe800000000	                          call 0x40017af	      1215	write.c	FUNCTION_20	CALL_2
0x40017af	        0x418b7540	            mov esi, dword [r13 + 0x40] 	      1214	write.c	FUNCTION_20	CALL_1
0x40017b3	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	      1214	write.c	FUNCTION_20	CALL_1
0x40017b7	          0x4889c2	                            mov rdx, rax	      1214	write.c	FUNCTION_20	CALL_1
0x40017ba	            0x31c0	                            xor eax, eax	      1214	write.c	FUNCTION_20	CALL_1
0x40017bc	      0xe800000000	                          call 0x40017c1	      1214	write.c	FUNCTION_20	CALL_1
0x40017c1	        0x4d8b6d00	                    mov r13, qword [r13]	      1326	write.c	FUNCTION_21	WHILE_4
0x40017c5	          0x4d85ed	                           test r13, r13	      1317	write.c	FUNCTION_21	WHILE_4
0x40017c8	     0xf8552ffffff	                           jne 0x4001720	      1317	write.c	FUNCTION_21	WHILE_4
0x40017ce	          0x4585e4	                         test r12d, r12d	      1347	write.c	FUNCTION_21	IF_12
0x40017d1	     0xf85bf000000	                           jne 0x4001896	      1347	write.c	FUNCTION_21	IF_12
0x40017d7	        0x4883c428	                           add rsp, 0x28	      1374	write.c	FUNCTION_21
0x40017db	              0x5b	                                 pop rbx	      1374	write.c	FUNCTION_21
0x40017dc	              0x5d	                                 pop rbp	      1374	write.c	FUNCTION_21
0x40017dd	            0x415c	                                 pop r12	      1374	write.c	FUNCTION_21
0x40017df	            0x415d	                                 pop r13	      1374	write.c	FUNCTION_21
0x40017e1	            0x415e	                                 pop r14	      1374	write.c	FUNCTION_21
0x40017e3	            0x415f	                                 pop r15	      1374	write.c	FUNCTION_21
0x40017e5	              0xc3	                                     ret	      1374	write.c	FUNCTION_21
0x40017e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1374	write.c	FUNCTION_21
0x40017f0	          0x4989c6	                            mov r14, rax	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x40017f3	      0x488b442408	                mov rax, qword [rsp + 8]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017f8	        0x498d7518	                   lea rsi, [r13 + 0x18]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x40017fc	        0x448d6101	                     lea r12d, [rcx + 1]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4001800	        0x458b4540	            mov r8d, dword [r13 + 0x40] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4001804	        0x488b3c24	                    mov rdi, qword [rsp]	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4001808	          0x4c89f2	                            mov rdx, r14	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x400180b	        0x488934c8	            mov qword [rax + rcx*8], rsi	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x400180f	        0x498b4d38	            mov rcx, qword [r13 + 0x38] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4001813	      0xe828eeffff	                  call sym.install_reloc	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4001818	          0x4489e1	                           mov ecx, r12d	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x400181b	      0xe9a9feffff	                           jmp 0x40016c9	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4001820	          0x4989fe	                            mov r14, rdi	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4001823	            0xebce	                           jmp 0x40017f3	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4001825	          0x4989c6	                            mov r14, rax	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x4001828	      0x488b442408	                mov rax, qword [rsp + 8]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x400182d	        0x498d7518	                   lea rsi, [r13 + 0x18]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4001831	        0x458b4540	            mov r8d, dword [r13 + 0x40] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001835	        0x488b3c24	                    mov rdi, qword [rsp]	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001839	      0x418d5c2401	                      lea ebx, [r12 + 1]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x400183e	          0x4c89f2	                            mov rdx, r14	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001841	        0x4a8934e0	            mov qword [rax + r12*8], rsi	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4001845	        0x498b4d38	            mov rcx, qword [r13 + 0x38] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001849	          0x4189dc	                           mov r12d, ebx	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x400184c	      0xe8efedffff	                  call sym.install_reloc	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001851	      0xe96bffffff	                           jmp 0x40017c1	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4001856	          0x4c8b00	                     mov r8, qword [rax]	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x4001859	          0x83c101	                              add ecx, 1	      1253	write.c	FUNCTION_21	WHILE_1	IF_3
0x400185c	          0x4c8902	                     mov qword [rdx], r8	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x400185f	          0x4c8928	                    mov qword [rax], r13	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x4001862	          0x4989c5	                            mov r13, rax	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x4001865	      0xe918fdffff	                           jmp 0x4001582	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x400186a	          0x4989ce	                            mov r14, rcx	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400186d	            0xebb9	                           jmp 0x4001828	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x400186f	            0x31ff	                            xor edi, edi	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4001871	      0xba05000000	                              mov edx, 5	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4001876	      0xbe00000000	                              mov esi, 0	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x400187b	      0xe800000000	                          call 0x4001880	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4001880	          0x8b7368	            mov esi, dword [rbx + 0x68] 	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4001883	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4001887	          0x4889c2	                            mov rdx, rax	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x400188a	            0x31c0	                            xor eax, eax	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x400188c	      0xe800000000	                          call 0x4001891	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4001891	      0xe959fdffff	                           jmp 0x40015ef	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4001896	        0x488b0424	                    mov rax, qword [rsp]	      1349	write.c	FUNCTION_21	IF_12
0x400189a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x400189f	          0x8b5820	            mov ebx, dword [rax + 0x20] 	      1349	write.c	FUNCTION_21	IF_12
0x40018a2	          0x4889c6	                            mov rsi, rax	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x40018a5	            0x89da	                            mov edx, ebx	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x40018a7	          0x891c24	                    mov dword [rsp], ebx	      1349	write.c	FUNCTION_21	IF_12
0x40018aa	          0x4889c3	                            mov rbx, rax	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x40018ad	          0x83ca04	                               or edx, 4	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x40018b0	      0xe800000000	                          call 0x40018b5	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x40018b5	    0x488b3d000000	            mov rdi, qword [0x040018bc] 	      1352	write.c	FUNCTION_21	IF_12
0x40018bc	      0x488b542408	                mov rdx, qword [rsp + 8]	      1352	write.c	FUNCTION_21	IF_12
0x40018c1	          0x4489e1	                           mov ecx, r12d	      1352	write.c	FUNCTION_21	IF_12
0x40018c4	          0x4889de	                            mov rsi, rbx	      1352	write.c	FUNCTION_21	IF_12
0x40018c7	        0x488b4708	                mov rax, qword [rdi + 8]	      1352	write.c	FUNCTION_21	IF_12
0x40018cb	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      1352	write.c	FUNCTION_21	IF_12
0x40018d2	        0x4883c428	                           add rsp, 0x28	      1374	write.c	FUNCTION_21
0x40018d6	              0x5b	                                 pop rbx	      1374	write.c	FUNCTION_21
0x40018d7	              0x5d	                                 pop rbp	      1374	write.c	FUNCTION_21
0x40018d8	            0x415c	                                 pop r12	      1374	write.c	FUNCTION_21
0x40018da	            0x415d	                                 pop r13	      1374	write.c	FUNCTION_21
0x40018dc	            0x415e	                                 pop r14	      1374	write.c	FUNCTION_21
0x40018de	            0x415f	                                 pop r15	      1374	write.c	FUNCTION_21
0x40018e0	            0xffe0	                                 jmp rax	      1352	write.c	FUNCTION_21	IF_12
0x40018e2	          0x4531e4	                          xor r12d, r12d	      1261	write.c	FUNCTION_21
0x40018e5	          0x4531f6	                          xor r14d, r14d	      1263	write.c	FUNCTION_21
0x40018e8	          0x4d85ed	                           test r13, r13	      1317	write.c	FUNCTION_21	WHILE_4
0x40018eb	     0xf852ffeffff	                           jne 0x4001720	      1317	write.c	FUNCTION_21	WHILE_4
0x40018f1	      0xe9e1feffff	                           jmp 0x40017d7	      1317	write.c	FUNCTION_21	WHILE_4
print_fixup	IF,7:CALL,4:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	136
0x4004150	              0x55	                                push rbp	      3137	write.c	FUNCTION_40
0x4004151	              0x53	                                push rbx	      3137	write.c	FUNCTION_40
0x4004152	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_375
0x4004157	          0x4889fb	                            mov rbx, rdi	      3137	write.c	FUNCTION_40
0x400415a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x400415f	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4004164	        0x4883ec08	                              sub rsp, 8	      3137	write.c	FUNCTION_40
0x4004168	    0x488b0d000000	            mov rcx, qword [0x0400416f] 	        97	stdio2.h	CALL_375
0x400416f	    0xc70500000000	               mov dword [0x04004179], 1	      3138	write.c	FUNCTION_40
0x4004179	      0xe800000000	                          call 0x400417e	        97	stdio2.h	CALL_375
0x400417e	    0x488b3d000000	            mov rdi, qword [0x04004185] 	        97	stdio2.h	CALL_375
0x4004185	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_375
0x4004188	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x400418d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4004192	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4004194	      0xe800000000	                          call 0x4004199	        97	stdio2.h	CALL_375
0x4004199	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	        97	stdio2.h	CALL_375
0x400419d	        0x448b4368	            mov r8d, dword [rbx + 0x68] 	        97	stdio2.h	CALL_375
0x40041a1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x40041a3	    0x488b3d000000	            mov rdi, qword [0x040041aa] 	        97	stdio2.h	CALL_375
0x40041aa	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x40041af	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x40041b4	      0xe800000000	                          call 0x40041b9	        97	stdio2.h	CALL_375
0x40041b9	          0xf60301	                      test byte [rbx], 1	      3142	write.c	FUNCTION_40	IF_1
0x40041bc	     0xf854e010000	                           jne 0x4004310	      3142	write.c	FUNCTION_40	IF_1
0x40041c2	         0xfbe4b01	               movsx ecx, byte [rbx + 1]	      3144	write.c	FUNCTION_40	IF_2
0x40041c6	            0x84c9	                             test cl, cl	      3144	write.c	FUNCTION_40	IF_2
0x40041c8	     0xf8569010000	                           jne 0x4004337	      3144	write.c	FUNCTION_40	IF_2
0x40041ce	           0xfb603	                   movzx eax, byte [rbx]	      3146	write.c	FUNCTION_40	IF_3
0x40041d1	            0xa806	                              test al, 6	      3146	write.c	FUNCTION_40	IF_3
0x40041d3	     0xf8581010000	                           jne 0x400435a	      3146	write.c	FUNCTION_40	IF_3
0x40041d9	            0xa808	                              test al, 8	      3154	write.c	FUNCTION_40	IF_4
0x40041db	     0xf859f010000	                           jne 0x4004380	      3154	write.c	FUNCTION_40	IF_4
0x40041e1	            0xa820	                           test al, 0x20	      3156	write.c	FUNCTION_40	IF_5
0x40041e3	     0xf85bd010000	                           jne 0x40043a6	      3156	write.c	FUNCTION_40	IF_5
0x40041e9	         0xfb64b02	               movzx ecx, byte [rbx + 2]	        97	stdio2.h	CALL_375
0x40041ed	    0x488b3d000000	            mov rdi, qword [0x040041f4] 	        97	stdio2.h	CALL_375
0x40041f4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x40041f9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x40041fe	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4004200	      0xe800000000	                          call 0x4004205	        97	stdio2.h	CALL_375
0x4004205	        0x488b4b08	                mov rcx, qword [rbx + 8]	        97	stdio2.h	CALL_375
0x4004209	    0x488b3d000000	            mov rdi, qword [0x04004210] 	        97	stdio2.h	CALL_375
0x4004210	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4004215	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x400421a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x400421c	      0xe800000000	                          call 0x4004221	        97	stdio2.h	CALL_375
0x4004221	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        97	stdio2.h	CALL_375
0x4004225	        0x4c8b4b58	              mov r9, qword [rbx + 0x58]	        97	stdio2.h	CALL_375
0x4004229	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x400422e	        0x4c8b4328	              mov r8, qword [rbx + 0x28]	        97	stdio2.h	CALL_375
0x4004232	    0x488b3d000000	            mov rdi, qword [0x04004239] 	        97	stdio2.h	CALL_375
0x4004239	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x400423e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4004240	      0xe800000000	                          call 0x4004245	        97	stdio2.h	CALL_375
0x4004245	          0x8b6b50	            mov ebp, dword [rbx + 0x50] 	      3164	write.c	FUNCTION_40	CALL_1
0x4004248	            0x89ef	                            mov edi, ebp	      3164	write.c	FUNCTION_40	CALL_1
0x400424a	      0xe800000000	                          call 0x400424f	      3164	write.c	FUNCTION_40	CALL_1
0x400424f	    0x488b3d000000	            mov rdi, qword [0x04004256] 	        97	stdio2.h	CALL_375
0x4004256	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_375
0x4004259	          0x4189e8	                            mov r8d, ebp	        97	stdio2.h	CALL_375
0x400425c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x400425e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4004263	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4004268	      0xe800000000	                          call 0x400426d	        97	stdio2.h	CALL_375
0x400426d	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      3166	write.c	FUNCTION_40	IF_6
0x4004272	            0x743c	                            je 0x40042b0	      3166	write.c	FUNCTION_40	IF_6
0x4004274	    0x488b0d000000	            mov rcx, qword [0x0400427b] 	        97	stdio2.h	CALL_375
0x400427b	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_375
0x4004280	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4004285	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x400428a	      0xe800000000	                          call 0x400428f	        97	stdio2.h	CALL_375
0x400428f	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x4004293	    0x488b3d000000	            mov rdi, qword [0x0400429a] 	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x400429a	      0xe800000000	                          call 0x400429f	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x400429f	    0x488b35000000	            mov rsi, qword [0x040042a6] 	        97	stdio2.h	CALL_375
0x40042a6	      0xbf3e000000	                           mov edi, 0x3e	        97	stdio2.h	CALL_375
0x40042ab	      0xe800000000	                          call 0x40042b0	        97	stdio2.h	CALL_375
0x40042b0	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      3172	write.c	FUNCTION_40	IF_7
0x40042b5	            0x743c	                            je 0x40042f3	      3172	write.c	FUNCTION_40	IF_7
0x40042b7	    0x488b0d000000	            mov rcx, qword [0x040042be] 	        97	stdio2.h	CALL_375
0x40042be	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_375
0x40042c3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x40042c8	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x40042cd	      0xe800000000	                          call 0x40042d2	        97	stdio2.h	CALL_375
0x40042d2	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x40042d6	    0x488b3d000000	            mov rdi, qword [0x040042dd] 	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x40042dd	      0xe800000000	                          call 0x40042e2	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x40042e2	    0x488b35000000	            mov rsi, qword [0x040042e9] 	        97	stdio2.h	CALL_375
0x40042e9	      0xbf3e000000	                           mov edi, 0x3e	        97	stdio2.h	CALL_375
0x40042ee	      0xe800000000	                          call 0x40042f3	        97	stdio2.h	CALL_375
0x40042f3	    0x488b35000000	            mov rsi, qword [0x040042fa] 	        97	stdio2.h	CALL_375
0x40042fa	        0x4883c408	                              add rsp, 8	      3182	write.c	FUNCTION_40
0x40042fe	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_375
0x4004303	              0x5b	                                 pop rbx	      3182	write.c	FUNCTION_40
0x4004304	              0x5d	                                 pop rbp	      3182	write.c	FUNCTION_40
0x4004305	      0xe900000000	                           jmp 0x400430a	        97	stdio2.h	CALL_375
0x400430a	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_375
0x4004310	    0x488b0d000000	            mov rcx, qword [0x04004317] 	        97	stdio2.h	CALL_375
0x4004317	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_375
0x400431c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4004321	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4004326	      0xe800000000	                          call 0x400432b	        97	stdio2.h	CALL_375
0x400432b	         0xfbe4b01	               movsx ecx, byte [rbx + 1]	      3144	write.c	FUNCTION_40	IF_2
0x400432f	            0x84c9	                             test cl, cl	      3144	write.c	FUNCTION_40	IF_2
0x4004331	     0xf8497feffff	                            je 0x40041ce	      3144	write.c	FUNCTION_40	IF_2
0x4004337	    0x488b3d000000	            mov rdi, qword [0x0400433e] 	        97	stdio2.h	CALL_375
0x400433e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_375
0x4004340	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_375
0x4004345	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x400434a	      0xe800000000	                          call 0x400434f	        97	stdio2.h	CALL_375
0x400434f	           0xfb603	                   movzx eax, byte [rbx]	      3146	write.c	FUNCTION_40	IF_3
0x4004352	            0xa806	                              test al, 6	      3146	write.c	FUNCTION_40	IF_3
0x4004354	     0xf847ffeffff	                            je 0x40041d9	      3146	write.c	FUNCTION_40	IF_3
0x400435a	    0x488b0d000000	            mov rcx, qword [0x04004361] 	        97	stdio2.h	CALL_375
0x4004361	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_375
0x4004366	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x400436b	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4004370	      0xe800000000	                          call 0x4004375	        97	stdio2.h	CALL_375
0x4004375	           0xfb603	                   movzx eax, byte [rbx]	        97	stdio2.h	CALL_375
0x4004378	            0xa808	                              test al, 8	      3154	write.c	FUNCTION_40	IF_4
0x400437a	     0xf8461feffff	                            je 0x40041e1	      3154	write.c	FUNCTION_40	IF_4
0x4004380	    0x488b0d000000	            mov rcx, qword [0x04004387] 	        97	stdio2.h	CALL_375
0x4004387	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_375
0x400438c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x4004391	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x4004396	      0xe800000000	                          call 0x400439b	        97	stdio2.h	CALL_375
0x400439b	           0xfb603	                   movzx eax, byte [rbx]	        97	stdio2.h	CALL_375
0x400439e	            0xa820	                           test al, 0x20	      3156	write.c	FUNCTION_40	IF_5
0x40043a0	     0xf8443feffff	                            je 0x40041e9	      3156	write.c	FUNCTION_40	IF_5
0x40043a6	    0x488b0d000000	            mov rcx, qword [0x040043ad] 	        97	stdio2.h	CALL_375
0x40043ad	      0xba05000000	                              mov edx, 5	        97	stdio2.h	CALL_375
0x40043b2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_375
0x40043b7	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_375
0x40043bc	      0xe800000000	                          call 0x40043c1	        97	stdio2.h	CALL_375
0x40043c1	      0xe923feffff	                           jmp 0x40041e9	        97	stdio2.h	CALL_375
compress_frag	IF,4:CALL,10:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,0:FOR,0	108
0x4000050	            0x4156	                                push r14	      1379	write.c	FUNCTION_22
0x4000052	            0x4155	                                push r13	      1379	write.c	FUNCTION_22
0x4000054	          0x4989cd	                            mov r13, rcx	      1379	write.c	FUNCTION_22
0x4000057	            0x4154	                                push r12	      1379	write.c	FUNCTION_22
0x4000059	              0x55	                                push rbp	      1379	write.c	FUNCTION_22
0x400005a	          0x4989fc	                            mov r12, rdi	      1379	write.c	FUNCTION_22
0x400005d	              0x53	                                push rbx	      1379	write.c	FUNCTION_22
0x400005e	            0x31ed	                            xor ebp, ebp	      1381	write.c	FUNCTION_22
0x4000060	          0x4c89c3	                             mov rbx, r8	      1379	write.c	FUNCTION_22
0x4000063	        0x4883ec30	                           sub rsp, 0x30	      1379	write.c	FUNCTION_22
0x4000067	          0x4c8b31	                    mov r14, qword [rcx]	      1382	write.c	FUNCTION_22
0x400006a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	write.c	FUNCTION_22
0x4000073	      0x4889442428	             mov qword [rsp + 0x28], rax	      1379	write.c	FUNCTION_22
0x4000078	            0x31c0	                            xor eax, eax	      1379	write.c	FUNCTION_22
0x400007a	      0x4889742408	                mov qword [rsp + 8], rsi	      1379	write.c	FUNCTION_22
0x400007f	        0x89542404	                mov dword [rsp + 4], edx	      1379	write.c	FUNCTION_22
0x4000083	       0xf1f440000	                   nop dword [rax + rax]	      1379	write.c	FUNCTION_22
0x4000088	        0x8b442404	                mov eax, dword [rsp + 4]	      1388	write.c	FUNCTION_22	WHILE_1
0x400008c	            0x85c0	                           test eax, eax	      1388	write.c	FUNCTION_22	WHILE_1
0x400008e	            0x7e6a	                           jle 0x40000fa	      1388	write.c	FUNCTION_22	WHILE_1
0x4000090	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x4000094	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x4000098	          0x4889f1	                            mov rcx, rsi	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x400009b	          0x4829c1	                            sub rcx, rax	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x400009e	            0x85c9	                           test ecx, ecx	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x40000a0	          0x4863d1	                         movsxd rdx, ecx	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40000a3	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x40000a7	            0x7e77	                           jle 0x4000120	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x40000a9	          0x4801c2	                            add rdx, rax	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x40000ac	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40000b1	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40000b6	        0x48895318	             mov qword [rbx + 0x18], rdx	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x40000ba	      0x488d742408	                      lea rsi, [rsp + 8]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40000bf	      0x488d542404	                      lea rdx, [rsp + 4]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40000c4	          0x4c89e7	                            mov rdi, r12	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40000c7	      0x4889442420	             mov qword [rsp + 0x20], rax	      1404	write.c	FUNCTION_22	WHILE_1	CALL_7
0x40000cc	      0xe800000000	                          call 0x40000d1	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x40000d1	            0x85c0	                           test eax, eax	      1408	write.c	FUNCTION_22	WHILE_1	IF_3
0x40000d3	     0xf88e7000000	                            js 0x40001c0	      1408	write.c	FUNCTION_22	WHILE_1	IF_3
0x40000d9	          0x4863d0	                         movsxd rdx, eax	      1411	write.c	FUNCTION_22	WHILE_1
0x40000dc	             0x1c5	                            add ebp, eax	      1412	write.c	FUNCTION_22	WHILE_1
0x40000de	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x40000e2	        0x49015610	            add qword [r14 + 0x10], rdx 	      1411	write.c	FUNCTION_22	WHILE_1
0x40000e6	            0x85c0	                           test eax, eax	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x40000e8	            0x7e9e	                           jle 0x4000088	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x40000ea	            0xf7d8	                                 neg eax	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40000ec	            0x4898	                                    cdqe	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40000ee	        0x48014318	            add qword [rbx + 0x18], rax 	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x40000f2	        0x8b442404	                mov eax, dword [rsp + 4]	      1388	write.c	FUNCTION_22	WHILE_1
0x40000f6	            0x85c0	                           test eax, eax	      1388	write.c	FUNCTION_22	WHILE_1
0x40000f8	            0x7f96	                            jg 0x4000090	      1388	write.c	FUNCTION_22	WHILE_1
0x40000fa	            0x89e8	                            mov eax, ebp	      1388	write.c	FUNCTION_22	WHILE_1
0x40000fc	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1420	write.c	FUNCTION_22
0x4000101	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1420	write.c	FUNCTION_22
0x400010a	     0xf85ba000000	                           jne 0x40001ca	      1420	write.c	FUNCTION_22
0x4000110	        0x4883c430	                           add rsp, 0x30	      1420	write.c	FUNCTION_22
0x4000114	              0x5b	                                 pop rbx	      1420	write.c	FUNCTION_22
0x4000115	              0x5d	                                 pop rbp	      1420	write.c	FUNCTION_22
0x4000116	            0x415c	                                 pop r12	      1420	write.c	FUNCTION_22
0x4000118	            0x415d	                                 pop r13	      1420	write.c	FUNCTION_22
0x400011a	            0x415e	                                 pop r14	      1420	write.c	FUNCTION_22
0x400011c	              0xc3	                                     ret	      1420	write.c	FUNCTION_22
0x400011d	           0xf1f00	                         nop dword [rax]	      1420	write.c	FUNCTION_22
0x4000120	        0x483b4310	            cmp rax, qword [rbx + 0x10] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000124	     0xf8486000000	                            je 0x40001b0	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400012a	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400012e	          0x4889f7	                            mov rdi, rsi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000131	        0x488d1408	                    lea rdx, [rax + rcx]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000135	          0x48f7d1	                                 not rcx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000138	        0x488b4308	                mov rax, qword [rbx + 8]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400013c	          0x4821ca	                            and rdx, rcx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400013f	          0x4889d1	                            mov rcx, rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000142	          0x4829c7	                            sub rdi, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000145	        0x48895318	             mov qword [rbx + 0x18], rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000149	          0x4829c1	                            sub rcx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400014c	          0x4839f9	                            cmp rcx, rdi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400014f	            0x7607	                           jbe 0x4000158	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000151	        0x48897318	             mov qword [rbx + 0x18], rsi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000155	          0x4889f2	                            mov rdx, rsi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000158	        0x48895310	             mov qword [rbx + 0x10], rdx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400015c	          0x4889df	                            mov rdi, rbx	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x400015f	      0xe800000000	                          call 0x4000164	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4000164	          0x4989c6	                            mov r14, rax	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4000167	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1397	write.c	FUNCTION_22	WHILE_1	IF_1
0x400016e	        0x498b4500	                    mov rax, qword [r13]	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x4000172	        0x4c897038	             mov qword [rax + 0x38], r14	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x4000176	        0x4d897500	                    mov qword [r13], r14	      1399	write.c	FUNCTION_22	WHILE_1	IF_1
0x400017a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x400017e	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x4000182	          0x4829c1	                            sub rcx, rax	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x4000185	            0x85c9	                           test ecx, ecx	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x4000187	          0x4863d1	                         movsxd rdx, ecx	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x400018a	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x400018e	     0xf8f15ffffff	                            jg 0x40000a9	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x4000194	            0x31ff	                            xor edi, edi	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x4000196	      0xba05000000	                              mov edx, 5	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x400019b	      0xbe00000000	                              mov esi, 0	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40001a0	      0xe800000000	                          call 0x40001a5	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40001a5	          0x4889c7	                            mov rdi, rax	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40001a8	            0x31c0	                            xor eax, eax	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40001aa	      0xe800000000	                          call 0x40001af	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40001af	              0x90	                                     nop	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40001b0	        0x804b5002	                 or byte [rbx + 0x50], 2	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40001b4	      0xe971ffffff	                           jmp 0x400012a	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40001b9	     0xf1f80000000	                         nop dword [rax]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40001c0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1409	write.c	FUNCTION_22	WHILE_1	IF_3
0x40001c5	      0xe932ffffff	                           jmp 0x40000fc	      1409	write.c	FUNCTION_22	WHILE_1	IF_3
0x40001ca	      0xe800000000	                          call 0x40001cf	      1420	write.c	FUNCTION_22
number_to_chars_bigendian	IF,1:CALL,1:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,0:FOR,0	21
0x40040a0	            0x85d2	                           test edx, edx	      3105	write.c	FUNCTION_37	IF_1
0x40040a2	            0x7e2e	                           jle 0x40040d2	      3105	write.c	FUNCTION_37	IF_1
0x40040a4	          0x83ea01	                              sub edx, 1	      3105	write.c	FUNCTION_37	IF_1
0x40040a7	          0x4863ca	                         movsxd rcx, edx	      3105	write.c	FUNCTION_37	IF_1
0x40040aa	            0x89d2	                            mov edx, edx	      3105	write.c	FUNCTION_37	IF_1
0x40040ac	        0x488d040f	                    lea rax, [rdi + rcx]	      3105	write.c	FUNCTION_37	IF_1
0x40040b0	        0x4883e901	                              sub rcx, 1	      3105	write.c	FUNCTION_37	IF_1
0x40040b4	          0x4829d1	                            sub rcx, rdx	      3105	write.c	FUNCTION_37	IF_1
0x40040b7	          0x4801cf	                            add rdi, rcx	      3105	write.c	FUNCTION_37	IF_1
0x40040ba	    0x660f1f440000	                    nop word [rax + rax]	      3105	write.c	FUNCTION_37	IF_1
0x40040c0	          0x408830	                     mov byte [rax], sil	      3109	write.c	FUNCTION_37	WHILE_1
0x40040c3	        0x4883e801	                              sub rax, 1	      3109	write.c	FUNCTION_37	WHILE_1
0x40040c7	        0x48c1ee08	                              shr rsi, 8	      3110	write.c	FUNCTION_37	WHILE_1
0x40040cb	          0x4839f8	                            cmp rax, rdi	      3107	write.c	FUNCTION_37	WHILE_1
0x40040ce	            0x75f0	                           jne 0x40040c0	      3107	write.c	FUNCTION_37	WHILE_1
0x40040d0	            0xf3c3	                                     ret	      3107	write.c	FUNCTION_37	WHILE_1
0x40040d2	        0x4883ec08	                              sub rsp, 8	      3104	write.c	FUNCTION_37
0x40040d6	      0xba00000000	                              mov edx, 0	      3106	write.c	FUNCTION_37	CALL_1
0x40040db	      0xbe220c0000	                          mov esi, 0xc22	      3106	write.c	FUNCTION_37	CALL_1
0x40040e0	      0xbf00000000	                              mov edi, 0	      3106	write.c	FUNCTION_37	CALL_1
0x40040e5	      0xe800000000	                          call 0x40040ea	      3106	write.c	FUNCTION_37	CALL_1
number_to_chars_littleendian	IF,1:CALL,1:functions,0:SWITCH,0:DO,0:WHILE,1:ELSE,0:FOR,0	16
0x40040f0	            0x85d2	                           test edx, edx	      3117	write.c	FUNCTION_38	IF_1
0x40040f2	            0x7e1f	                           jle 0x4004113	      3117	write.c	FUNCTION_38	IF_1
0x40040f4	          0x8d42ff	                      lea eax, [rdx - 1]	      3117	write.c	FUNCTION_38	IF_1
0x40040f7	      0x488d440701	                lea rax, [rdi + rax + 1]	      3117	write.c	FUNCTION_38	IF_1
0x40040fc	         0xf1f4000	                         nop dword [rax]	      3117	write.c	FUNCTION_38	IF_1
0x4004100	        0x4883c701	                              add rdi, 1	      3121	write.c	FUNCTION_38	WHILE_1
0x4004104	        0x408877ff	                 mov byte [rdi - 1], sil	      3121	write.c	FUNCTION_38	WHILE_1
0x4004108	        0x48c1ee08	                              shr rsi, 8	      3122	write.c	FUNCTION_38	WHILE_1
0x400410c	          0x4839c7	                            cmp rdi, rax	      3119	write.c	FUNCTION_38	WHILE_1
0x400410f	            0x75ef	                           jne 0x4004100	      3119	write.c	FUNCTION_38	WHILE_1
0x4004111	            0xf3c3	                                     ret	      3119	write.c	FUNCTION_38	WHILE_1
0x4004113	        0x4883ec08	                              sub rsp, 8	      3116	write.c	FUNCTION_38
0x4004117	      0xba00000000	                              mov edx, 0	      3118	write.c	FUNCTION_38	CALL_1
0x400411c	      0xbe2e0c0000	                          mov esi, 0xc2e	      3118	write.c	FUNCTION_38	CALL_1
0x4004121	      0xbf00000000	                              mov edi, 0	      3118	write.c	FUNCTION_38	CALL_1
0x4004126	      0xe800000000	                          call 0x400412b	      3118	write.c	FUNCTION_38	CALL_1
relax_seg	IF,1:CALL,2:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	16
0x4003290	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       551	write.c	FUNCTION_13	CALL_1
0x4003297	          0x4885c0	                           test rax, rax	       554	write.c	FUNCTION_13	IF_1
0x400329a	            0x7422	                            je 0x40032be	       554	write.c	FUNCTION_13	IF_1
0x400329c	          0x488b00	                    mov rax, qword [rax]	       554	write.c	FUNCTION_13	IF_1
0x400329f	          0x4885c0	                           test rax, rax	       554	write.c	FUNCTION_13	IF_1
0x40032a2	            0x741a	                            je 0x40032be	       554	write.c	FUNCTION_13	IF_1
0x40032a4	              0x53	                                push rbx	       550	write.c	FUNCTION_13
0x40032a5	          0x4889d3	                            mov rbx, rdx	       550	write.c	FUNCTION_13
0x40032a8	          0x488b38	                    mov rdi, qword [rax]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40032ab	            0x8b12	                    mov edx, dword [rdx]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40032ad	      0xe800000000	                          call 0x40032b2	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40032b2	            0x85c0	                           test eax, eax	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40032b4	            0x7407	                            je 0x40032bd	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40032b6	    0xc74304010000	                  mov dword [rbx + 4], 1	       556	write.c	FUNCTION_13	IF_1
0x40032bd	              0x5b	                                 pop rbx	       557	write.c	FUNCTION_13
0x40032be	            0xf3c3	                                     ret	       557	write.c	FUNCTION_13
fix_segment	IF,0:CALL,2:functions,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:FOR,0	403
0x4001900	            0x4157	                                push r15	      1151	write.c	FUNCTION_18
0x4001902	            0x4156	                                push r14	      1151	write.c	FUNCTION_18
0x4001904	            0x4155	                                push r13	      1151	write.c	FUNCTION_18
0x4001906	            0x4154	                                push r12	      1151	write.c	FUNCTION_18
0x4001908	              0x55	                                push rbp	      1151	write.c	FUNCTION_18
0x4001909	              0x53	                                push rbx	      1151	write.c	FUNCTION_18
0x400190a	    0x4881eca80000	                           sub rsp, 0xa8	      1151	write.c	FUNCTION_18
0x4001911	    0x64488b042528	                mov rax, qword fs:[0x28]	      1151	write.c	FUNCTION_18
0x400191a	    0x488984249800	             mov qword [rsp + 0x98], rax	      1151	write.c	FUNCTION_18
0x4001922	            0x31c0	                            xor eax, eax	      1151	write.c	FUNCTION_18
0x4001924	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      1154	write.c	FUNCTION_18	CALL_2
0x400192b	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      1154	write.c	FUNCTION_18	CALL_2
0x400192f	          0x4d85f6	                           test r14, r14	       923	write.c	FUNCTION_17	IF_1
0x4001932	            0x744b	                            je 0x400197f	       923	write.c	FUNCTION_17	IF_1
0x4001934	    0x48833d000000	               cmp qword [0x0400193c], 0	       923	write.c	FUNCTION_17	IF_1
0x400193c	          0x4889f5	                            mov rbp, rsi	       923	write.c	FUNCTION_17	IF_1
0x400193f	     0xf8409060000	                            je 0x4001f4e	       923	write.c	FUNCTION_17	IF_1
0x4001945	    0x8b0500000000	            mov eax, dword [0x0400194b] 	       930	write.c	FUNCTION_17	IF_2
0x400194b	            0x85c0	                           test eax, eax	       930	write.c	FUNCTION_17	IF_2
0x400194d	            0x7461	                            je 0x40019b0	       930	write.c	FUNCTION_17	IF_2
0x400194f	              0x90	                                     nop	       930	write.c	FUNCTION_17	IF_2
0x4001950	        0x41f60620	                   test byte [r14], 0x20	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001954	            0x7520	                           jne 0x4001976	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001956	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x400195a	          0x4885ff	                           test rdi, rdi	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x400195d	     0xf8435050000	                            je 0x4001e98	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001963	      0xe800000000	                          call 0x4001968	       943	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_2
0x4001968	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x400196c	          0x4885ff	                           test rdi, rdi	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x400196f	            0x7405	                            je 0x4001976	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x4001971	      0xe800000000	                          call 0x4001976	       945	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_3
0x4001976	        0x4d8b7640	            mov r14, qword [r14 + 0x40] 	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x400197a	          0x4d85f6	                           test r14, r14	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x400197d	            0x75d1	                           jne 0x4001950	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x400197f	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1155	write.c	FUNCTION_18
0x4001987	    0x644833042528	                xor rax, qword fs:[0x28]	      1155	write.c	FUNCTION_18
0x4001990	     0xf854d060000	                           jne 0x4001fe3	      1155	write.c	FUNCTION_18
0x4001996	    0x4881c4a80000	                           add rsp, 0xa8	      1155	write.c	FUNCTION_18
0x400199d	              0x5b	                                 pop rbx	      1155	write.c	FUNCTION_18
0x400199e	              0x5d	                                 pop rbp	      1155	write.c	FUNCTION_18
0x400199f	            0x415c	                                 pop r12	      1155	write.c	FUNCTION_18
0x40019a1	            0x415d	                                 pop r13	      1155	write.c	FUNCTION_18
0x40019a3	            0x415e	                                 pop r14	      1155	write.c	FUNCTION_18
0x40019a5	            0x415f	                                 pop r15	      1155	write.c	FUNCTION_18
0x40019a7	              0xc3	                                     ret	      1155	write.c	FUNCTION_18
0x40019a8	     0xf1f84000000	                   nop dword [rax + rax]	      1155	write.c	FUNCTION_18
0x40019b0	        0x4d8b6608	                mov r12, qword [r14 + 8]	       957	write.c	FUNCTION_17	FOR_2
0x40019b4	          0x4d85e4	                           test r12, r12	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40019b7	     0xf8400060000	                            je 0x4001fbd	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40019bd	      0xbb00000000	                              mov ebx, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40019c2	      0xe933010000	                           jmp 0x4001afa	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40019c7	    0x660f1f840000	                    nop word [rax + rax]	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x40019d0	      0xe800000000	                          call 0x40019d5	       965	write.c	FUNCTION_17	FOR_2	CALL_7
0x40019d5	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x40019d9	          0x4889c3	                            mov rbx, rax	       965	write.c	FUNCTION_17	FOR_2	CALL_7
0x40019dc	          0x4885ff	                           test rdi, rdi	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x40019df	     0xf84c5000000	                            je 0x4001aaa	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x40019e5	      0xe800000000	                          call 0x40019ea	       970	write.c	FUNCTION_17	FOR_2	IF_7	CALL_8
0x40019ea	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x40019ee	      0xe800000000	                          call 0x40019f3	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x40019f3	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       972	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40019f7	          0x4989c5	                            mov r13, rax	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x40019fa	          0x4885ff	                           test rdi, rdi	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40019fd	            0x7409	                            je 0x4001a08	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x40019ff	          0x4839d8	                            cmp rax, rbx	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001a02	     0xf84f8030000	                            je 0x4001e00	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001a08	    0x4981fd000000	                              cmp r13, 0	       988	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001a0f	     0xf846b020000	                            je 0x4001c80	       988	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001a15	          0x4c39ed	                            cmp rbp, r13	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a18	     0xf8472030000	                            je 0x4001d90	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001a1e	    0x488b15000000	            mov rdx, qword [0x04001a25] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a25	          0x4839da	                            cmp rdx, rbx	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a28	     0xf8482020000	                            je 0x4001cb0	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a2e	        0x418b4650	            mov eax, dword [r14 + 0x50] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a32	          0x83e845	                           sub eax, 0x45	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a35	          0x83f801	                              cmp eax, 1	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a38	            0x7670	                           jbe 0x4001aaa	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001a3a	          0x4939d5	                            cmp r13, rdx	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001a3d	     0xf846d020000	                            je 0x4001cb0	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001a43	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a47	        0x4d8b7d00	                    mov r15, qword [r13]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a4b	      0xe800000000	                          call 0x4001a50	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a50	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1030	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_22
0x4001a54	        0x48890424	                    mov qword [rsp], rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a58	      0xb900000000	                              mov ecx, 0	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a5d	          0x4c8b2b	                    mov r13, qword [rbx]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a60	          0x4885ff	                           test rdi, rdi	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a63	            0x7408	                            je 0x4001a6d	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a65	      0xe800000000	                          call 0x4001a6a	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a6a	          0x4889c1	                            mov rcx, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a6d	      0xba05000000	                              mov edx, 5	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001a72	      0xbe00000000	                              mov esi, 0	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001a77	            0x31ff	                            xor edi, edi	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001a79	      0x48894c2408	                mov qword [rsp + 8], rcx	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001a7e	      0xe800000000	                          call 0x4001a83	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001a83	        0x4883ec08	                              sub rsp, 8	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a87	        0x418b7668	            mov esi, dword [r14 + 0x68] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a8b	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a8f	            0x4157	                                push r15	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a91	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a96	          0x4889c2	                            mov rdx, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a99	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001a9e	          0x4d89e8	                             mov r8, r13	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001aa1	            0x31c0	                            xor eax, eax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001aa3	      0xe800000000	                          call 0x4001aa8	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001aa8	              0x5a	                                 pop rdx	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001aa9	              0x59	                                 pop rcx	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001aaa	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001aae	          0x4885ff	                           test rdi, rdi	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001ab1	            0x7416	                            je 0x4001ac9	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001ab3	          0x4839dd	                            cmp rbp, rbx	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001ab6	     0xf84a4020000	                            je 0x4001d60	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001abc	    0x4881fb000000	                              cmp rbx, 0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001ac3	     0xf8427020000	                            je 0x4001cf0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001ac9	        0x410fb606	                   movzx eax, byte [r14]	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001acd	            0xa801	                              test al, 1	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001acf	            0x755f	                           jne 0x4001b30	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001ad1	            0xa820	                           test al, 0x20	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001ad3	            0x7479	                            je 0x4001b4e	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001ad5	      0x49837e4800	               cmp qword [r14 + 0x48], 0	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ada	     0xf84b7000000	                            je 0x4001b97	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ae0	        0x4d8b7640	            mov r14, qword [r14 + 0x40] 	       950	write.c	FUNCTION_17	FOR_2
0x4001ae4	          0x4d85f6	                           test r14, r14	       950	write.c	FUNCTION_17	FOR_2
0x4001ae7	     0xf8492feffff	                            je 0x400197f	       950	write.c	FUNCTION_17	FOR_2
0x4001aed	        0x4d8b6608	                mov r12, qword [r14 + 8]	       957	write.c	FUNCTION_17	FOR_2
0x4001af1	          0x4d85e4	                           test r12, r12	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001af4	     0xf84c3040000	                            je 0x4001fbd	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001afa	          0x4c89f7	                            mov rdi, r14	       960	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001afd	      0xe800000000	                          call 0x4001b02	       960	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001b02	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001b06	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       962	write.c	FUNCTION_17	FOR_2
0x4001b0a	          0x4885ff	                           test rdi, rdi	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001b0d	      0x4889442418	             mov qword [rsp + 0x18], rax	       962	write.c	FUNCTION_17	FOR_2
0x4001b12	     0xf85b8feffff	                           jne 0x40019d0	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001b18	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001b1c	          0x4885ff	                           test rdi, rdi	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001b1f	     0xf85c0feffff	                           jne 0x40019e5	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001b25	        0x410fb606	                   movzx eax, byte [r14]	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001b29	            0xa801	                              test al, 1	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001b2b	            0x74a4	                            je 0x4001ad1	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001b2d	           0xf1f00	                         nop dword [rax]	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001b30	          0x4c89f7	                            mov rdi, r14	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001b33	      0xe800000000	                          call 0x4001b38	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001b38	      0x4829442418	             sub qword [rsp + 0x18], rax	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001b3d	        0x41f60620	                   test byte [r14], 0x20	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001b41	            0x7592	                           jne 0x4001ad5	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001b43	      0x49837e1800	               cmp qword [r14 + 0x18], 0	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001b48	     0xf8422010000	                            je 0x4001c70	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001b4e	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001b53	          0x4889ea	                            mov rdx, rbp	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001b56	          0x4c89f7	                            mov rdi, r14	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001b59	      0xe800000000	                          call 0x4001b5e	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001b5e	        0x41f60620	                   test byte [r14], 0x20	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001b62	     0xf856dffffff	                           jne 0x4001ad5	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001b68	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001b6c	          0x4885ff	                           test rdi, rdi	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001b6f	     0xf846b010000	                            je 0x4001ce0	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001b75	      0xe800000000	                          call 0x4001b7a	      1091	write.c	FUNCTION_17	FOR_2	IF_23	CALL_33
0x4001b7a	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001b7e	          0x4885ff	                           test rdi, rdi	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001b81	     0xf844effffff	                            je 0x4001ad5	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001b87	      0xe800000000	                          call 0x4001b8c	      1093	write.c	FUNCTION_17	FOR_2	IF_23	CALL_34
0x4001b8c	      0x49837e4800	               cmp qword [r14 + 0x48], 0	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001b91	     0xf8549ffffff	                           jne 0x4001ae0	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001b97	        0x410fbe06	                   movsx eax, byte [r14]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001b9b	            0xa840	                           test al, 0x40	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001b9d	     0xf853dffffff	                           jne 0x4001ae0	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ba3	      0x410fb65602	               movzx edx, byte [r14 + 2]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ba8	          0x8d4aff	                      lea ecx, [rdx - 1]	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bab	          0x80f906	                               cmp cl, 6	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bae	     0xf872cffffff	                            ja 0x4001ae0	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bb4	           0xfb6ca	                           movzx ecx, dl	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bb7	          0xc1e81f	                           shr eax, 0x1f	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bba	          0xc1e103	                              shl ecx, 3	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bbd	            0x29c1	                            sub ecx, eax	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bbf	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bc6	          0x48d3e0	                             shl rax, cl	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001bc9	          0x4889c2	                            mov rdx, rax	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001bcc	      0x4823542418	             and rdx, qword [rsp + 0x18]	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001bd1	          0x4839d0	                            cmp rax, rdx	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001bd4	     0xf8406ffffff	                            je 0x4001ae0	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001bda	          0x4885d2	                           test rdx, rdx	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001bdd	     0xf84fdfeffff	                            je 0x4001ae0	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001be3	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001be7	        0x49033424	                    add rsi, qword [r12]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001beb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001bf0	      0xe800000000	                          call 0x4001bf5	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001bf5	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001bfa	    0x4981f8e80300	                           cmp r8, 0x3e8	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001c01	     0xf875d030000	                            ja 0x4001f64	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001c07	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001c0c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001c11	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001c16	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001c1b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001c1d	      0xe800000000	                          call 0x4001c22	        33	stdio2.h	FUNCTION_57	CALL_1
0x4001c22	      0x410fb64e02	               movzx ecx, byte [r14 + 2]	      1119	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001c27	            0x31ff	                            xor edi, edi	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001c29	    0x41b805000000	                              mov r8d, 5	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001c2f	      0xba00000000	                              mov edx, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001c34	      0xbe00000000	                              mov esi, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001c39	          0x4989cc	                            mov r12, rcx	      1119	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001c3c	      0xe800000000	                          call 0x4001c41	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001c41	        0x418b7668	            mov esi, dword [r14 + 0x68] 	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c45	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c49	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c4e	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c53	          0x4889c2	                            mov rdx, rax	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c56	        0x450fb6c4	                         movzx r8d, r12b	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c5a	            0x31c0	                            xor eax, eax	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c5c	      0xe800000000	                          call 0x4001c61	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c61	      0xe97afeffff	                           jmp 0x4001ae0	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001c70	    0x488b05000000	            mov rax, qword [0x04001c77] 	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001c77	        0x49894618	             mov qword [r14 + 0x18], rax	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001c7b	      0xe9cefeffff	                           jmp 0x4001b4e	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001c80	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001c84	            0x31f6	                            xor esi, esi	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001c86	      0xe800000000	                          call 0x4001c8b	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001c8b	            0x85c0	                           test eax, eax	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001c8d	     0xf8582fdffff	                           jne 0x4001a15	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001c93	    0x48391d000000	            cmp qword [0x04001c9a], rbx 	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001c9a	     0xf8510020000	                           jne 0x4001eb0	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001ca0	    0x4881fd000000	                              cmp rbp, 0	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001ca7	     0xf84e3000000	                            je 0x4001d90	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001cad	           0xf1f00	                         nop dword [rax]	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001cb0	            0x31ff	                            xor edi, edi	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4001cb2	      0xba05000000	                              mov edx, 5	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4001cb7	      0xbe00000000	                              mov esi, 0	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4001cbc	      0xe800000000	                          call 0x4001cc1	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4001cc1	        0x418b7668	            mov esi, dword [r14 + 0x68] 	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cc5	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cc9	          0x4889c2	                            mov rdx, rax	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001ccc	            0x31c0	                            xor eax, eax	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cce	      0xe800000000	                          call 0x4001cd3	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cd3	      0xe9d2fdffff	                           jmp 0x4001aaa	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cd8	     0xf1f84000000	                   nop dword [rax + rax]	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001ce0	    0x488b3d000000	            mov rdi, qword [0x04001ce7] 	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001ce7	        0x49897e18	             mov qword [r14 + 0x18], rdi	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001ceb	      0xe985feffff	                           jmp 0x4001b75	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001cf0	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001cf4	            0x31f6	                            xor esi, esi	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001cf6	      0xe800000000	                          call 0x4001cfb	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001cfb	            0x85c0	                           test eax, eax	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001cfd	     0xf85c6fdffff	                           jne 0x4001ac9	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001d03	        0x418b4650	            mov eax, dword [r14 + 0x50] 	       327	write.c	FUNCTION_5	IF_1
0x4001d07	      0x2da3050000	                          sub eax, 0x5a3	       327	write.c	FUNCTION_5	IF_1
0x4001d0c	          0x83f801	                              cmp eax, 1	       327	write.c	FUNCTION_5	IF_1
0x4001d0f	     0xf86b4fdffff	                           jbe 0x4001ac9	       327	write.c	FUNCTION_5	IF_1
0x4001d15	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       331	write.c	FUNCTION_5	IF_2
0x4001d19	          0x4885ff	                           test rdi, rdi	       331	write.c	FUNCTION_5	IF_2
0x4001d1c	            0x741c	                            je 0x4001d3a	       331	write.c	FUNCTION_5	IF_2
0x4001d1e	            0x31f6	                            xor esi, esi	       334	write.c	FUNCTION_5	CALL_1
0x4001d20	      0x49837e2000	               cmp qword [r14 + 0x20], 0	       334	write.c	FUNCTION_5	CALL_1
0x4001d25	        0x400f94c6	                                sete sil	       334	write.c	FUNCTION_5	CALL_1
0x4001d29	      0xe800000000	                          call 0x4001d2e	       334	write.c	FUNCTION_5	CALL_1
0x4001d2e	            0x85c0	                           test eax, eax	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d30	     0xf8593fdffff	                           jne 0x4001ac9	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d36	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d3a	      0xe800000000	                          call 0x4001d3f	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d3f	      0x4803442418	             add rax, qword [rsp + 0x18]	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d44	    0x49c746180000	               mov qword [r14 + 0x18], 0	      1063	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d4c	      0x4889442418	             mov qword [rsp + 0x18], rax	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001d51	        0x49894628	             mov qword [r14 + 0x28], rax	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d55	      0xe96ffdffff	                           jmp 0x4001ac9	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d5a	    0x660f1f440000	                    nop word [rax + rax]	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d60	            0x31f6	                            xor esi, esi	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x4001d62	      0xe800000000	                          call 0x4001d67	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x4001d67	            0x85c0	                           test eax, eax	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x4001d69	     0xf854dfdffff	                           jne 0x4001abc	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x4001d6f	        0x410fb606	                   movzx eax, byte [r14]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d73	            0xa801	                              test al, 1	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d75	     0xf855c010000	                           jne 0x4001ed7	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d7b	    0x4881fd000000	                              cmp rbp, 0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d82	     0xf8468ffffff	                            je 0x4001cf0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d88	          0x4889eb	                            mov rbx, rbp	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d8b	      0xe941fdffff	                           jmp 0x4001ad1	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001d90	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001d94	            0x31f6	                            xor esi, esi	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001d96	      0xe800000000	                          call 0x4001d9b	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001d9b	            0x85c0	                           test eax, eax	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001d9d	     0xf857bfcffff	                           jne 0x4001a1e	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001da3	    0x48391d000000	            cmp qword [0x04001daa], rbx 	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001daa	     0xf8400ffffff	                            je 0x4001cb0	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001db0	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001db4	      0xe800000000	                          call 0x4001db9	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001db9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001dbe	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001dc2	          0x4829c1	                            sub rcx, rax	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001dc5	          0x4889c8	                            mov rax, rcx	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001dc8	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001dcd	        0x498b4e38	            mov rcx, qword [r14 + 0x38] 	      1002	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001dd1	          0x480311	                    add rdx, qword [rcx]	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001dd4	          0x4801d0	                            add rax, rdx	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001dd7	        0x41f60601	                      test byte [r14], 1	      1007	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001ddb	        0x49894628	             mov qword [r14 + 0x28], rax	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001ddf	     0xf8491010000	                            je 0x4001f76	      1007	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001de5	    0x49c746200000	               mov qword [r14 + 0x20], 0	      1017	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001ded	        0x41800e01	                        or byte [r14], 1	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001df1	      0xe9b4fcffff	                           jmp 0x4001aaa	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001df6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001e00	            0x31f6	                            xor esi, esi	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4001e02	      0xe800000000	                          call 0x4001e07	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4001e07	            0x85c0	                           test eax, eax	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4001e09	     0xf85f9fbffff	                           jne 0x4001a08	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4001e0f	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001e13	            0x31f6	                            xor esi, esi	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001e15	      0xe800000000	                          call 0x4001e1a	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001e1a	    0x4881fb000000	                              cmp rbx, 0	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e21	           0xf95c2	                                setne dl	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e24	            0x85c0	                           test eax, eax	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e26	           0xf94c0	                                 sete al	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e29	            0x84c2	                             test dl, al	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e2b	     0xf84d7fbffff	                            je 0x4001a08	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e31	    0x4881fb000000	                              cmp rbx, 0	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e38	     0xf84cafbffff	                            je 0x4001a08	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e3e	    0x48391d000000	            cmp qword [0x04001e45], rbx 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e45	     0xf84bdfbffff	                            je 0x4001a08	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e4b	    0x48391d000000	            cmp qword [0x04001e52], rbx 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e52	     0xf84b0fbffff	                            je 0x4001a08	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e58	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001e5c	      0xe800000000	                          call 0x4001e61	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001e61	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001e65	      0x4801442418	            add qword [rsp + 0x18], rax 	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001e6a	      0xe800000000	                          call 0x4001e6f	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001e6f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001e74	    0x49c746180000	               mov qword [r14 + 0x18], 0	       981	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e7c	    0x49c746200000	               mov qword [r14 + 0x20], 0	       982	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e84	          0x4829c1	                            sub rcx, rax	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001e87	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001e8c	        0x49894e28	             mov qword [r14 + 0x28], rcx	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e90	      0xe934fcffff	                           jmp 0x4001ac9	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e95	           0xf1f00	                         nop dword [rax]	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001e98	    0x488b3d000000	            mov rdi, qword [0x04001e9f] 	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001e9f	        0x49897e18	             mov qword [r14 + 0x18], rdi	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001ea3	      0xe9bbfaffff	                           jmp 0x4001963	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001ea8	     0xf1f84000000	                   nop dword [rax + rax]	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001eb0	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001eb4	      0xe800000000	                          call 0x4001eb9	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001eb9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001ebe	    0x49c746200000	               mov qword [r14 + 0x20], 0	       994	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001ec6	          0x4829c1	                            sub rcx, rax	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001ec9	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001ece	        0x49894e28	             mov qword [r14 + 0x28], rcx	       993	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001ed2	      0xe9d3fbffff	                           jmp 0x4001aaa	       993	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001ed7	        0x418b4650	            mov eax, dword [r14 + 0x50] 	       327	write.c	FUNCTION_5	IF_1
0x4001edb	    0x8d905dfaffff	                  lea edx, [rax - 0x5a3]	       327	write.c	FUNCTION_5	IF_1
0x4001ee1	          0x83fa01	                              cmp edx, 1	       327	write.c	FUNCTION_5	IF_1
0x4001ee4	     0xf86be000000	                           jbe 0x4001fa8	       327	write.c	FUNCTION_5	IF_1
0x4001eea	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       331	write.c	FUNCTION_5	IF_2
0x4001eee	          0x4885ff	                           test rdi, rdi	       331	write.c	FUNCTION_5	IF_2
0x4001ef1	            0x741c	                            je 0x4001f0f	       331	write.c	FUNCTION_5	IF_2
0x4001ef3	            0x31f6	                            xor esi, esi	       334	write.c	FUNCTION_5	CALL_1
0x4001ef5	      0x49837e2000	               cmp qword [r14 + 0x20], 0	       334	write.c	FUNCTION_5	CALL_1
0x4001efa	        0x400f94c6	                                sete sil	       334	write.c	FUNCTION_5	CALL_1
0x4001efe	      0xe800000000	                          call 0x4001f03	       334	write.c	FUNCTION_5	CALL_1
0x4001f03	            0x85c0	                           test eax, eax	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f05	     0xf85b1fbffff	                           jne 0x4001abc	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f0b	        0x418b4650	            mov eax, dword [r14 + 0x50] 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f0f	      0x2d65010000	                          sub eax, 0x165	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f14	          0x83f836	                           cmp eax, 0x36	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f17	            0x766f	                           jbe 0x4001f88	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f19	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001f1d	      0xe800000000	                          call 0x4001f22	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001f22	      0x4803442418	             add rax, qword [rsp + 0x18]	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001f27	        0x41f60601	                      test byte [r14], 1	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001f2b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001f30	        0x49894628	             mov qword [r14 + 0x28], rax	      1051	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f34	     0xf8597000000	                           jne 0x4001fd1	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001f3a	    0x49c746180000	               mov qword [r14 + 0x18], 0	      1054	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f42	        0x418026fe	                    and byte [r14], 0xfe	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f46	          0x4889eb	                            mov rbx, rbp	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f49	      0xe97bfbffff	                           jmp 0x4001ac9	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f4e	      0xbf00000000	                              mov edi, 0	       924	write.c	FUNCTION_17	CALL_1
0x4001f53	      0xe800000000	                          call 0x4001f58	       924	write.c	FUNCTION_17	CALL_1
0x4001f58	    0x488905000000	            mov qword [0x04001f5f], rax 	       924	write.c	FUNCTION_17	CALL_1
0x4001f5f	      0xe9e1f9ffff	                           jmp 0x4001945	       924	write.c	FUNCTION_17	CALL_1
0x4001f64	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f69	          0x4c89c6	                             mov rsi, r8	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f6c	      0xe800000000	                          call 0x4001f71	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f71	      0xe9acfcffff	                           jmp 0x4001c22	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f76	          0x4c89f7	                            mov rdi, r14	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001f79	      0xe800000000	                          call 0x4001f7e	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001f7e	      0x4801442418	            add qword [rsp + 0x18], rax 	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001f83	      0xe95dfeffff	                           jmp 0x4001de5	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001f88	    0x48b941000000	           movabs rcx, 0x60000000000041 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f92	        0x480fa3c1	                             bt rcx, rax	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f96	     0xf8220fbffff	                            jb 0x4001abc	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001f9c	      0xe978ffffff	                           jmp 0x4001f19	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001fa1	     0xf1f80000000	                         nop dword [rax]	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001fa8	    0x4881fd000000	                              cmp rbp, 0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001faf	     0xf843bfdffff	                            je 0x4001cf0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001fb5	          0x4889eb	                            mov rbx, rbp	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001fb8	      0xe973fbffff	                           jmp 0x4001b30	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001fbd	      0xba00000000	                              mov edx, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001fc2	      0xbebe030000	                          mov esi, 0x3be	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001fc7	      0xbf00000000	                              mov edi, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001fcc	      0xe800000000	                          call 0x4001fd1	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001fd1	          0x4c89f7	                            mov rdi, r14	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001fd4	      0xe800000000	                          call 0x4001fd9	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001fd9	      0x4829442418	             sub qword [rsp + 0x18], rax	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001fde	      0xe957ffffff	                           jmp 0x4001f3a	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001fe3	      0xe800000000	                          call 0x4001fe8	      1155	write.c	FUNCTION_18
