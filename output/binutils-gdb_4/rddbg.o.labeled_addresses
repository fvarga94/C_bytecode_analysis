stab_context	ELSE,2:functions,0:CALL,3:SWITCH,0:WHILE,0:IF,4:DO,1:FOR,0	93
0x4000040	            0x4154	                                push r12	       376	rddbg.c	FUNCTION_5
0x4000042	              0x55	                                push rbp	       376	rddbg.c	FUNCTION_5
0x4000043	      0xba05000000	                              mov edx, 5	       379	rddbg.c	FUNCTION_5	CALL_1
0x4000048	              0x53	                                push rbx	       376	rddbg.c	FUNCTION_5
0x4000049	      0xbe00000000	                              mov esi, 0	       379	rddbg.c	FUNCTION_5	CALL_1
0x400004e	            0x31ff	                            xor edi, edi	       379	rddbg.c	FUNCTION_5	CALL_1
0x4000050	      0xe800000000	                          call 0x4000055	       379	rddbg.c	FUNCTION_5	CALL_1
0x4000055	    0x488b3d000000	            mov rdi, qword [0x0400005c] 	        97	stdio2.h	CALL_14
0x400005c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x400005f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000064	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000066	      0xe800000000	                          call 0x400006b	        97	stdio2.h	CALL_14
0x400006b	    0x488b0d000000	            mov rcx, qword [0x04000072] 	        97	stdio2.h	CALL_14
0x4000072	      0xba1e000000	                           mov edx, 0x1e	        97	stdio2.h	CALL_14
0x4000077	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400007c	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x4000081	      0xe800000000	                          call 0x4000086	        97	stdio2.h	CALL_14
0x4000086	    0x8b1d00000000	            mov ebx, dword [0x0400008c] 	       382	rddbg.c	FUNCTION_5
0x400008c	            0x89da	                            mov edx, ebx	       382	rddbg.c	FUNCTION_5
0x400008e	      0xe99a000000	                           jmp 0x400012d	       382	rddbg.c	FUNCTION_5
0x4000093	       0xf1f440000	                   nop dword [rax + rax]	       382	rddbg.c	FUNCTION_5
0x4000098	    0x488b3d000000	            mov rdi, qword [0x0400009f] 	        97	stdio2.h	CALL_14
0x400009f	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_14
0x40000a2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40000a7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40000ac	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40000ae	      0xe800000000	                          call 0x40000b3	        97	stdio2.h	CALL_14
0x40000b3	      0x418b4c2404	                mov ecx, dword [r12 + 4]	        97	stdio2.h	CALL_14
0x40000b8	    0x488b3d000000	            mov rdi, qword [0x040000bf] 	        97	stdio2.h	CALL_14
0x40000bf	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40000c4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40000c9	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40000cb	      0xe800000000	                          call 0x40000d0	        97	stdio2.h	CALL_14
0x40000d0	      0x498b4c2408	                mov rcx, qword [r12 + 8]	        97	stdio2.h	CALL_14
0x40000d5	    0x488b3d000000	            mov rdi, qword [0x040000dc] 	        97	stdio2.h	CALL_14
0x40000dc	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40000de	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40000e3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40000e8	      0xe800000000	                          call 0x40000ed	        97	stdio2.h	CALL_14
0x40000ed	    0x8b04ed000000	                  mov eax, dword [rbp*8]	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x40000f4	            0x85c0	                           test eax, eax	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x40000f6	     0xf858c000000	                           jne 0x4000188	       401	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_4
0x40000fc	    0x488b35000000	            mov rsi, qword [0x04000103] 	        97	stdio2.h	CALL_14
0x4000103	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_14
0x4000108	      0xe800000000	                          call 0x400010d	        97	stdio2.h	CALL_14
0x400010d	    0x8b1500000000	            mov edx, dword [0x04000113] 	        97	stdio2.h	CALL_14
0x4000113	          0x83c301	                              add ebx, 1	       405	rddbg.c	FUNCTION_5	DO_1
0x4000116	            0x89d8	                            mov eax, ebx	       405	rddbg.c	FUNCTION_5	DO_1
0x4000118	          0xc1f81f	                           sar eax, 0x1f	       405	rddbg.c	FUNCTION_5	DO_1
0x400011b	          0xc1e81c	                           shr eax, 0x1c	       405	rddbg.c	FUNCTION_5	DO_1
0x400011e	             0x1c3	                            add ebx, eax	       405	rddbg.c	FUNCTION_5	DO_1
0x4000120	          0x83e30f	                            and ebx, 0xf	       405	rddbg.c	FUNCTION_5	DO_1
0x4000123	            0x29c3	                            sub ebx, eax	       405	rddbg.c	FUNCTION_5	DO_1
0x4000125	            0x39d3	                            cmp ebx, edx	       407	rddbg.c	FUNCTION_5
0x4000127	     0xf84a3000000	                            je 0x40001d0	       407	rddbg.c	FUNCTION_5
0x400012d	          0x4863c3	                         movsxd rax, ebx	       387	rddbg.c	FUNCTION_5	DO_1
0x4000130	        0x488d2c40	                  lea rbp, [rax + rax*2]	       387	rddbg.c	FUNCTION_5	DO_1
0x4000134	    0x4c8d24ed0000	                        lea r12, [rbp*8]	       387	rddbg.c	FUNCTION_5	DO_1
0x400013c	    0x49837c241000	               cmp qword [r12 + 0x10], 0	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000142	            0x74cf	                            je 0x4000113	       388	rddbg.c	FUNCTION_5	DO_1	IF_1
0x4000144	    0x8b3ced000000	                  mov edi, dword [rbp*8]	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_2
0x400014b	      0xe800000000	                          call 0x4000150	       392	rddbg.c	FUNCTION_5	DO_1	IF_1	CALL_2
0x4000150	          0x4885c0	                           test rax, rax	       393	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_2
0x4000153	     0xf853fffffff	                           jne 0x4000098	       393	rddbg.c	FUNCTION_5	DO_1	IF_1	IF_2
0x4000159	    0x8b0ced000000	                  mov ecx, dword [rbp*8]	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000160	            0x85c9	                           test ecx, ecx	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000162	            0x754c	                           jne 0x40001b0	       395	rddbg.c	FUNCTION_5	DO_1	IF_1	ELSE_1	IF_3
0x4000164	    0x488b0d000000	            mov rcx, qword [0x0400016b] 	        97	stdio2.h	CALL_14
0x400016b	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_14
0x4000170	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000175	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x400017a	      0xe800000000	                          call 0x400017f	        97	stdio2.h	CALL_14
0x400017f	      0xe92fffffff	                           jmp 0x40000b3	        97	stdio2.h	CALL_14
0x4000184	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_14
0x4000188	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	        97	stdio2.h	CALL_14
0x400018d	    0x488b3d000000	            mov rdi, qword [0x04000194] 	        97	stdio2.h	CALL_14
0x4000194	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000199	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400019e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40001a0	      0xe800000000	                          call 0x40001a5	        97	stdio2.h	CALL_14
0x40001a5	      0xe952ffffff	                           jmp 0x40000fc	        97	stdio2.h	CALL_14
0x40001aa	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_14
0x40001b0	    0x488b3d000000	            mov rdi, qword [0x040001b7] 	        97	stdio2.h	CALL_14
0x40001b7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40001bc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40001c1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40001c3	      0xe800000000	                          call 0x40001c8	        97	stdio2.h	CALL_14
0x40001c8	      0xe9e6feffff	                           jmp 0x40000b3	        97	stdio2.h	CALL_14
0x40001cd	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_14
0x40001d0	              0x5b	                                 pop rbx	       408	rddbg.c	FUNCTION_5
0x40001d1	              0x5d	                                 pop rbp	       408	rddbg.c	FUNCTION_5
0x40001d2	            0x415c	                                 pop r12	       408	rddbg.c	FUNCTION_5
0x40001d4	              0xc3	                                     ret	       408	rddbg.c	FUNCTION_5
read_debugging_info	ELSE,0:functions,0:CALL,9:SWITCH,0:WHILE,0:IF,8:DO,0:FOR,0	510
0x40001e0	            0x4157	                                push r15	        47	rddbg.c	FUNCTION_1
0x40001e2	            0x4156	                                push r14	        47	rddbg.c	FUNCTION_1
0x40001e4	          0x4989fe	                            mov r14, rdi	        47	rddbg.c	FUNCTION_1
0x40001e7	            0x4155	                                push r13	        47	rddbg.c	FUNCTION_1
0x40001e9	            0x4154	                                push r12	        47	rddbg.c	FUNCTION_1
0x40001eb	              0x55	                                push rbp	        47	rddbg.c	FUNCTION_1
0x40001ec	              0x53	                                push rbx	        47	rddbg.c	FUNCTION_1
0x40001ed	    0x4881ecb80000	                           sub rsp, 0xb8	        47	rddbg.c	FUNCTION_1
0x40001f4	    0x64488b042528	                mov rax, qword fs:[0x28]	        47	rddbg.c	FUNCTION_1
0x40001fd	    0x48898424a800	             mov qword [rsp + 0xa8], rax	        47	rddbg.c	FUNCTION_1
0x4000205	            0x31c0	                            xor eax, eax	        47	rddbg.c	FUNCTION_1
0x4000207	      0x4889742478	             mov qword [rsp + 0x78], rsi	        47	rddbg.c	FUNCTION_1
0x400020c	      0x4889542470	             mov qword [rsp + 0x70], rdx	        47	rddbg.c	FUNCTION_1
0x4000211	        0x894c246c	             mov dword [rsp + 0x6c], ecx	        47	rddbg.c	FUNCTION_1
0x4000215	      0xe800000000	                          call 0x400021a	        51	rddbg.c	FUNCTION_1	CALL_1
0x400021a	          0x4885c0	                           test rax, rax	        52	rddbg.c	FUNCTION_1	IF_1
0x400021d	      0x4889442448	             mov qword [rsp + 0x48], rax	        51	rddbg.c	FUNCTION_1	CALL_1
0x4000222	     0xf8418010000	                            je 0x4000340	        52	rddbg.c	FUNCTION_1	IF_1
0x4000228	    0x48c744244000	               mov qword [rsp + 0x40], 0	        52	rddbg.c	FUNCTION_1	IF_1
0x4000231	    0x48c744245000	               mov qword [rsp + 0x50], 0	        52	rddbg.c	FUNCTION_1	IF_1
0x400023a	          0x4531ed	                          xor r13d, r13d	        52	rddbg.c	FUNCTION_1	IF_1
0x400023d	          0x4d89f7	                            mov r15, r14	        97	stdio2.h	CALL_14
0x4000240	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000245	          0x4c89ff	                            mov rdi, r15	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000248	          0x488b03	                    mov rax, qword [rbx]	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x400024b	          0x4889c6	                            mov rsi, rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x400024e	      0x4889442458	             mov qword [rsp + 0x58], rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000253	      0xe800000000	                          call 0x4000258	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x4000258	        0x488b6b08	                mov rbp, qword [rbx + 8]	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400025c	          0x4989c4	                            mov r12, rax	       115	rddbg.c	FUNCTION_2	FOR_1	CALL_1
0x400025f	          0x4c89ff	                            mov rdi, r15	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000262	          0x4889ee	                            mov rsi, rbp	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000265	      0xe800000000	                          call 0x400026a	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x400026a	          0x4d85e4	                           test r12, r12	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400026d	          0x4989c6	                            mov r14, rax	       116	rddbg.c	FUNCTION_2	FOR_1	CALL_2
0x4000270	            0x7409	                            je 0x400027b	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000272	          0x4885c0	                           test rax, rax	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000275	     0xf85f5000000	                           jne 0x4000370	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x400027b	    0x488344244010	            add qword [rsp + 0x40], 0x10	       117	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x4000281	      0xba00000000	                              mov edx, 0	       111	rddbg.c	FUNCTION_2	FOR_1
0x4000286	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       111	rddbg.c	FUNCTION_2	FOR_1
0x400028b	          0x4839c2	                            cmp rdx, rax	       111	rddbg.c	FUNCTION_2	FOR_1
0x400028e	            0x75b0	                           jne 0x4000240	       111	rddbg.c	FUNCTION_2	FOR_1
0x4000290	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       254	rddbg.c	FUNCTION_2	IF_11
0x4000295	          0x4d89fe	                            mov r14, r15	       254	rddbg.c	FUNCTION_2	IF_11
0x4000298	          0x4885c0	                           test rax, rax	       254	rddbg.c	FUNCTION_2	IF_11
0x400029b	            0x7415	                            je 0x40002b2	       254	rddbg.c	FUNCTION_2	IF_11
0x400029d	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40002a2	          0x4889c6	                            mov rsi, rax	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40002a5	      0xe800000000	                          call 0x40002aa	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40002aa	            0x85c0	                           test eax, eax	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40002ac	     0xf848e000000	                            je 0x4000340	       256	rddbg.c	FUNCTION_2	IF_11	IF_12	CALL_35
0x40002b2	        0x498b4608	                mov rax, qword [r14 + 8]	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40002b6	        0x83780801	                  cmp dword [rax + 8], 1	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40002ba	     0xf8481040000	                            je 0x4000741	        59	rddbg.c	FUNCTION_1	IF_3	CALL_3
0x40002c0	          0x4585ed	                         test r13d, r13d	        68	rddbg.c	FUNCTION_1	IF_5
0x40002c3	            0x753b	                           jne 0x4000300	        68	rddbg.c	FUNCTION_1	IF_5
0x40002c5	        0x498b4608	                mov rax, qword [r14 + 8]	        69	rddbg.c	FUNCTION_1	IF_5	CALL_5
0x40002c9	        0x83780802	                  cmp dword [rax + 8], 2	        70	rddbg.c	FUNCTION_1	IF_5
0x40002cd	     0xf853c040000	                           jne 0x400070f	        70	rddbg.c	FUNCTION_1	IF_5
0x40002d3	      0x488b442470	            mov rax, qword [rsp + 0x70] 	        70	rddbg.c	FUNCTION_1	IF_5
0x40002d8	          0x4885c0	                           test rax, rax	        70	rddbg.c	FUNCTION_1	IF_5
0x40002db	     0xf8e2e040000	                           jle 0x400070f	        70	rddbg.c	FUNCTION_1	IF_5
0x40002e1	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x40002e6	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x40002eb	          0x4889c2	                            mov rdx, rax	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x40002ee	          0x4c89f7	                            mov rdi, r14	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x40002f1	      0xe800000000	                          call 0x40002f6	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x40002f6	            0x85c0	                           test eax, eax	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x40002f8	            0x7446	                            je 0x4000340	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x40002fa	    0x660f1f440000	                    nop word [rax + rax]	        72	rddbg.c	FUNCTION_1	IF_5	IF_6	CALL_6
0x4000300	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       272	rddbg.c	FUNCTION_3
0x4000305	            0xeb3b	                           jmp 0x4000342	       272	rddbg.c	FUNCTION_3
0x4000307	      0xe800000000	                          call 0x400030c	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x400030c	            0x89c7	                            mov edi, eax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x400030e	          0x4d89fe	                            mov r14, r15	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000311	      0xe800000000	                          call 0x4000316	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000316	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	        97	stdio2.h	CALL_14
0x400031b	          0x4989c1	                             mov r9, rax	       128	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x400031e	          0x498b0e	                    mov rcx, qword [r14]	        97	stdio2.h	CALL_14
0x4000321	    0x488b3d000000	            mov rdi, qword [0x04000328] 	        97	stdio2.h	CALL_14
0x4000328	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x400032d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000332	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000334	      0xe800000000	                          call 0x4000339	        97	stdio2.h	CALL_14
0x4000339	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_14
0x4000340	            0x31c0	                            xor eax, eax	        82	rddbg.c	FUNCTION_1	IF_7
0x4000342	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	        86	rddbg.c	FUNCTION_1
0x400034a	    0x644833142528	                xor rdx, qword fs:[0x28]	        86	rddbg.c	FUNCTION_1
0x4000353	     0xf85cf060000	                           jne 0x4000a28	        86	rddbg.c	FUNCTION_1
0x4000359	    0x4881c4b80000	                           add rsp, 0xb8	        86	rddbg.c	FUNCTION_1
0x4000360	              0x5b	                                 pop rbx	        86	rddbg.c	FUNCTION_1
0x4000361	              0x5d	                                 pop rbp	        86	rddbg.c	FUNCTION_1
0x4000362	            0x415c	                                 pop r12	        86	rddbg.c	FUNCTION_1
0x4000364	            0x415d	                                 pop r13	        86	rddbg.c	FUNCTION_1
0x4000366	            0x415e	                                 pop r14	        86	rddbg.c	FUNCTION_1
0x4000368	            0x415f	                                 pop r15	        86	rddbg.c	FUNCTION_1
0x400036a	              0xc3	                                     ret	        86	rddbg.c	FUNCTION_1
0x400036b	       0xf1f440000	                   nop dword [rax + rax]	        86	rddbg.c	FUNCTION_1
0x4000370	      0x498b5c2438	            mov rbx, qword [r12 + 0x38] 	       124	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_3
0x4000375	          0x4889df	                            mov rdi, rbx	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000378	      0xe800000000	                          call 0x400037d	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x400037d	            0x31c9	                            xor ecx, ecx	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400037f	          0x4989d8	                             mov r8, rbx	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000382	          0x4889c2	                            mov rdx, rax	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000385	          0x4c89e6	                            mov rsi, r12	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000388	          0x4c89ff	                            mov rdi, r15	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400038b	      0x4889442460	             mov qword [rsp + 0x60], rax	       125	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_4
0x4000390	      0xe800000000	                          call 0x4000395	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000395	            0x85c0	                           test eax, eax	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x4000397	     0xf846affffff	                            je 0x4000307	       126	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_2	CALL_5
0x400039d	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x40003a1	        0x488d7801	                      lea rdi, [rax + 1]	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40003a5	          0x4989c5	                            mov r13, rax	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x40003a8	      0x4889442408	                mov qword [rsp + 8], rax	       134	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_9
0x40003ad	      0xe800000000	                          call 0x40003b2	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40003b2	            0x31c9	                            xor ecx, ecx	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003b4	          0x4d89e8	                             mov r8, r13	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003b7	          0x4889c2	                            mov rdx, rax	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003ba	          0x4c89f6	                            mov rsi, r14	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003bd	          0x4c89ff	                            mov rdi, r15	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003c0	      0x4889442410	             mov qword [rsp + 0x10], rax	       135	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_10
0x40003c5	      0xe800000000	                          call 0x40003ca	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003ca	            0x85c0	                           test eax, eax	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003cc	     0xf842e060000	                            je 0x4000a00	       136	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3	CALL_11
0x40003d2	    0x48837c245000	               cmp qword [rsp + 0x50], 0	       145	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40003d8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40003dd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40003e2	        0xc6040800	                 mov byte [rax + rcx], 0	       144	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40003e6	     0xf84b4050000	                            je 0x40009a0	       145	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40003ec	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40003f1	    0x48c704240000	                      mov qword [rsp], 0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x40003f9	    0x48c744243000	               mov qword [rsp + 0x30], 0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000402	      0x488d5418f4	              lea rdx, [rax + rbx - 0xc]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000407	          0x4801c3	                            add rbx, rax	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x400040a	          0x4989c6	                            mov r14, rax	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400040d	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x4000412	          0x4839d0	                            cmp rax, rdx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000415	      0x4889542438	             mov qword [rsp + 0x38], rdx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400041a	            0x762c	                           jbe 0x4000448	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400041c	      0xe93f020000	                           jmp 0x4000660	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000421	     0xf1f80000000	                         nop dword [rax]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000428	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x400042d	          0x4801c8	                            add rax, rcx	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x4000430	        0x48890c24	                    mov qword [rsp], rcx	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x4000434	      0x4889442430	             mov qword [rsp + 0x30], rax	       178	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x4000439	        0x4983c60c	                            add r14, 0xc	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400043d	      0x4c3b742438	            cmp r14, qword [rsp + 0x38] 	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000442	     0xf8718020000	                            ja 0x4000660	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000448	        0x498b4708	                mov rax, qword [r15 + 8]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x400044c	          0x4c89f7	                            mov rdi, r14	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x400044f	          0xff5038	                 call qword [rax + 0x38]	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x4000452	          0x4889c5	                            mov rbp, rax	       167	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_16
0x4000455	      0x410fb64604	               movzx eax, byte [r14 + 4]	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x400045a	        0x498d7e06	                      lea rdi, [r14 + 6]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x400045e	            0x89c3	                            mov ebx, eax	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x4000460	        0x89442468	             mov dword [rsp + 0x68], eax	       168	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_17
0x4000464	        0x498b4708	                mov rax, qword [r15 + 8]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x4000468	          0xff5050	                 call qword [rax + 0x50]	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x400046b	      0x4889442420	             mov qword [rsp + 0x20], rax	       170	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_19
0x4000470	        0x498b4708	                mov rax, qword [r15 + 8]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000474	        0x498d7e08	                      lea rdi, [r14 + 8]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000478	          0xff5038	                 call qword [rax + 0x38]	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x400047b	            0x85db	                           test ebx, ebx	       173	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x400047d	      0x4889442428	             mov qword [rsp + 0x28], rax	       171	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	CALL_20
0x4000482	            0x74a4	                            je 0x4000428	       173	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	IF_6
0x4000484	            0x89e8	                            mov eax, ebp	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x4000486	        0x48030424	                    add rax, qword [rsp]	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x400048a	          0x4531e4	                          xor r12d, r12d	       194	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x400048d	      0x4839442408	                cmp qword [rsp + 8], rax	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x4000492	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x4000497	          0x4d89f5	                            mov r13, r14	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x400049a	        0x488d1c02	                    lea rbx, [rdx + rax]	       193	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1
0x400049e	            0x7769	                            ja 0x4000509	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004a0	      0xe94b010000	                           jmp 0x40005f0	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004a5	           0xf1f00	                         nop dword [rax]	       185	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7
0x40004a8	      0x4c8d7403ff	                lea r14, [rbx + rax - 1]	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004ad	        0x41803e5c	                    cmp byte [r14], 0x5c	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004b1	            0x7563	                           jne 0x4000516	       200	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004b3	        0x498d6d0c	                    lea rbp, [r13 + 0xc]	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004b7	      0x483b6c2418	            cmp rbp, qword [rsp + 0x18] 	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004bc	            0x7358	                           jae 0x4000516	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004be	        0x498b4708	                mov rax, qword [r15 + 8]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x40004c2	        0x41c60600	                       mov byte [r14], 0	       207	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004c6	          0x4889ef	                            mov rdi, rbp	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x40004c9	          0xff5038	                 call qword [rax + 0x38]	       208	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_24
0x40004cc	        0x488b0c24	                    mov rcx, qword [rsp]	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40004d0	          0x8d3408	                    lea esi, [rax + rcx]	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40004d3	      0x4839742408	                cmp qword [rsp + 8], rsi	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40004d8	     0xf86d2010000	                           jbe 0x40006b0	       209	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8
0x40004de	      0x4803742410	             add rsi, qword [rsp + 0x10]	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40004e3	            0x31d2	                            xor edx, edx	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40004e5	          0x4889df	                            mov rdi, rbx	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40004e8	            0x31c0	                            xor eax, eax	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40004ea	      0xe800000000	                          call 0x40004ef	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40004ef	          0x4d85e4	                           test r12, r12	       225	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_9
0x40004f2	          0x4889c3	                            mov rbx, rax	       217	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	ELSE_2	CALL_27
0x40004f5	        0x41c6065c	                    mov byte [r14], 0x5c	       223	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40004f9	            0x7408	                            je 0x4000503	       225	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_9
0x40004fb	          0x4c89e7	                            mov rdi, r12	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_28
0x40004fe	      0xe800000000	                          call 0x4000503	       226	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_28
0x4000503	          0x4989dc	                            mov r12, rbx	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000506	          0x4989ed	                            mov r13, rbp	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000509	          0x4889df	                            mov rdi, rbx	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x400050c	      0xe800000000	                          call 0x4000511	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000511	          0x4885c0	                           test rax, rax	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000514	            0x7592	                           jne 0x40004a8	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000516	          0x4d89ee	                            mov r14, r13	       199	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	CALL_23
0x4000519	    0x48632d000000	         movsxd rbp, dword [0x04000520] 	       363	rddbg.c	FUNCTION_4	IF_1
0x4000520	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       363	rddbg.c	FUNCTION_4	IF_1
0x4000525	    0x488b3cc50000	                  mov rdi, qword [rax*8]	       363	rddbg.c	FUNCTION_4	IF_1
0x400052d	          0x4885ff	                           test rdi, rdi	       363	rddbg.c	FUNCTION_4	IF_1
0x4000530	            0x7405	                            je 0x4000537	       363	rddbg.c	FUNCTION_4	IF_1
0x4000532	      0xe800000000	                          call 0x4000537	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000537	      0x448b6c2468	           mov r13d, dword [rsp + 0x68] 	       365	rddbg.c	FUNCTION_4
0x400053c	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       365	rddbg.c	FUNCTION_4
0x4000541	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	       367	rddbg.c	FUNCTION_4
0x4000546	          0x4889df	                            mov rdi, rbx	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000549	    0x488d2cc50000	                        lea rbp, [rax*8]	       365	rddbg.c	FUNCTION_4
0x4000551	    0x44892cc50000	                 mov dword [rax*8], r13d	       365	rddbg.c	FUNCTION_4
0x4000559	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       366	rddbg.c	FUNCTION_4
0x400055d	        0x4c896508	                mov qword [rbp + 8], r12	       367	rddbg.c	FUNCTION_4
0x4000561	          0x894504	                mov dword [rbp + 4], eax	       366	rddbg.c	FUNCTION_4
0x4000564	      0xe800000000	                          call 0x4000569	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000569	        0x48894510	            mov qword [rbp + 0x10], rax 	       368	rddbg.c	FUNCTION_4	CALL_2
0x400056d	    0x8b0500000000	            mov eax, dword [0x04000573] 	       369	rddbg.c	FUNCTION_4
0x4000573	          0x4989d9	                             mov r9, rbx	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000576	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x400057a	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x400057f	          0x4d89e0	                             mov r8, r12	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000582	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000587	          0x83c001	                              add eax, 1	       369	rddbg.c	FUNCTION_4
0x400058a	              0x99	                                     cdq	       369	rddbg.c	FUNCTION_4
0x400058b	          0xc1ea1c	                           shr edx, 0x1c	       369	rddbg.c	FUNCTION_4
0x400058e	             0x1d0	                            add eax, edx	       369	rddbg.c	FUNCTION_4
0x4000590	          0x83e00f	                            and eax, 0xf	       369	rddbg.c	FUNCTION_4
0x4000593	            0x29d0	                            sub eax, edx	       369	rddbg.c	FUNCTION_4
0x4000595	          0x4489ea	                           mov edx, r13d	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x4000598	    0x890500000000	            mov dword [0x0400059e], eax 	       369	rddbg.c	FUNCTION_4
0x400059e	      0xe800000000	                          call 0x40005a3	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x40005a3	            0x85c0	                           test eax, eax	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x40005a5	     0xf858efeffff	                           jne 0x4000439	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x40005ab	      0xbb00000000	                              mov ebx, 0	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x40005b0	      0xbd00000000	                              mov ebp, 0	       232	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_30
0x40005b5	      0xe886faffff	                   call sym.stab_context	       234	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_31
0x40005ba	    0x660f1f440000	                    nop word [rax + rax]	       234	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_10	CALL_31
0x40005c0	          0x488b3b	                    mov rdi, qword [rbx]	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40005c3	          0x4885ff	                           test rdi, rdi	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40005c6	            0x740c	                            je 0x40005d4	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40005c8	      0xe800000000	                          call 0x40005cd	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x40005cd	    0x48c703000000	                      mov qword [rbx], 0	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40005d4	        0x4883c318	                           add rbx, 0x18	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40005d8	          0x4839dd	                            cmp rbp, rbx	       417	rddbg.c	FUNCTION_6	FOR_1
0x40005db	            0x75e3	                           jne 0x40005c0	       417	rddbg.c	FUNCTION_6	FOR_1
0x40005dd	    0xc70500000000	               mov dword [0x040005e7], 0	       426	rddbg.c	FUNCTION_6
0x40005e7	      0xe954fdffff	                           jmp 0x4000340	       426	rddbg.c	FUNCTION_6
0x40005ec	         0xf1f4000	                         nop dword [rax]	       426	rddbg.c	FUNCTION_6
0x40005f0	            0x31ff	                            xor edi, edi	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x40005f2	      0xba05000000	                              mov edx, 5	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x40005f7	      0xbe00000000	                              mov esi, 0	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x40005fc	          0x498b1f	                    mov rbx, qword [r15]	       188	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_22
0x40005ff	      0xe800000000	                          call 0x4000604	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x4000604	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_14
0x4000607	      0x482b4c2460	             sub rcx, qword [rsp + 0x60]	        97	stdio2.h	CALL_14
0x400060c	          0x4889c6	                            mov rsi, rax	       187	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	IF_7	CALL_21
0x400060f	    0x48b8abaaaaaa	          movabs rax, 0x2aaaaaaaaaaaaaab	        97	stdio2.h	CALL_14
0x4000619	    0x488b3d000000	            mov rdi, qword [0x04000620] 	        97	stdio2.h	CALL_14
0x4000620	        0x4983c60c	                            add r14, 0xc	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000624	          0x48f7e9	                                imul rcx	        97	stdio2.h	CALL_14
0x4000627	        0x8b442468	            mov eax, dword [rsp + 0x68] 	        97	stdio2.h	CALL_14
0x400062b	        0x48c1f93f	                           sar rcx, 0x3f	        97	stdio2.h	CALL_14
0x400062f	              0x50	                                push rax	        97	stdio2.h	CALL_14
0x4000630	              0x55	                                push rbp	        97	stdio2.h	CALL_14
0x4000631	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4000633	          0x48d1fa	                              sar rdx, 1	        97	stdio2.h	CALL_14
0x4000636	      0x4c8b442468	              mov r8, qword [rsp + 0x68]	        97	stdio2.h	CALL_14
0x400063b	          0x4989d1	                             mov r9, rdx	        97	stdio2.h	CALL_14
0x400063e	          0x4889f2	                            mov rdx, rsi	        97	stdio2.h	CALL_14
0x4000641	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000646	          0x4929c9	                             sub r9, rcx	        97	stdio2.h	CALL_14
0x4000649	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_14
0x400064c	      0xe800000000	                          call 0x4000651	        97	stdio2.h	CALL_14
0x4000651	              0x5a	                                 pop rdx	        97	stdio2.h	CALL_14
0x4000652	              0x59	                                 pop rcx	        97	stdio2.h	CALL_14
0x4000653	      0x4c3b742438	            cmp r14, qword [rsp + 0x38] 	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000658	     0xf86eafdffff	                           jbe 0x4000448	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400065e	            0x6690	                                     nop	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000660	      0xbd00000000	                              mov ebp, 0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000665	      0xbb00000000	                              mov ebx, 0	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x400066a	    0x660f1f440000	                    nop word [rax + rax]	       157	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2
0x4000670	        0x488b7d00	                    mov rdi, qword [rbp]	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000674	          0x4885ff	                           test rdi, rdi	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000677	            0x740d	                            je 0x4000686	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000679	      0xe800000000	                          call 0x400067e	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400067e	    0x48c745000000	                      mov qword [rbp], 0	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000686	        0x4883c518	                           add rbp, 0x18	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x400068a	          0x4839eb	                            cmp rbx, rbp	       417	rddbg.c	FUNCTION_6	FOR_1
0x400068d	            0x75e1	                           jne 0x4000670	       417	rddbg.c	FUNCTION_6	FOR_1
0x400068f	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x4000694	    0xc70500000000	               mov dword [0x0400069e], 0	       426	rddbg.c	FUNCTION_6
0x400069e	    0x41bd01000000	                             mov r13d, 1	       152	rddbg.c	FUNCTION_2	FOR_1	IF_1
0x40006a4	      0xe800000000	                          call 0x40006a9	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006a9	      0xe9cdfbffff	                           jmp 0x400027b	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006ae	            0x6690	                                     nop	       246	rddbg.c	FUNCTION_2	FOR_1	IF_1	CALL_34
0x40006b0	      0xba05000000	                              mov edx, 5	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006b5	      0xbe00000000	                              mov esi, 0	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006ba	            0x31ff	                            xor edi, edi	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006bc	          0x4d8b27	                    mov r12, qword [r15]	       212	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_26
0x40006bf	          0x4989ee	                            mov r14, rbp	       201	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1
0x40006c2	      0xe800000000	                          call 0x40006c7	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006c7	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_14
0x40006ca	      0x482b4c2460	             sub rcx, qword [rsp + 0x60]	        97	stdio2.h	CALL_14
0x40006cf	          0x4889c6	                            mov rsi, rax	       211	rddbg.c	FUNCTION_2	FOR_1	IF_1	FOR_2	ELSE_1	WHILE_1	IF_8	CALL_25
0x40006d2	    0x48b8abaaaaaa	          movabs rax, 0x2aaaaaaaaaaaaaab	        97	stdio2.h	CALL_14
0x40006dc	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	        97	stdio2.h	CALL_14
0x40006e1	    0x488b3d000000	            mov rdi, qword [0x040006e8] 	        97	stdio2.h	CALL_14
0x40006e8	          0x48f7e9	                                imul rcx	        97	stdio2.h	CALL_14
0x40006eb	        0x48c1f93f	                           sar rcx, 0x3f	        97	stdio2.h	CALL_14
0x40006ef	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40006f1	          0x48d1fa	                              sar rdx, 1	        97	stdio2.h	CALL_14
0x40006f4	          0x4989d1	                             mov r9, rdx	        97	stdio2.h	CALL_14
0x40006f7	          0x4889f2	                            mov rdx, rsi	        97	stdio2.h	CALL_14
0x40006fa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40006ff	          0x4929c9	                             sub r9, rcx	        97	stdio2.h	CALL_14
0x4000702	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_14
0x4000705	      0xe800000000	                          call 0x400070a	        97	stdio2.h	CALL_14
0x400070a	      0xe90afeffff	                           jmp 0x4000519	        97	stdio2.h	CALL_14
0x400070f	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x4000713	            0x85c0	                           test eax, eax	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x4000715	     0xf8525fcffff	                           jne 0x4000340	        79	rddbg.c	FUNCTION_1	IF_7	IF_8
0x400071b	          0x498b1e	                    mov rbx, qword [r14]	        81	rddbg.c	FUNCTION_1	IF_7	CALL_9
0x400071e	            0x31ff	                            xor edi, edi	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000720	      0xba05000000	                              mov edx, 5	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000725	      0xbe00000000	                              mov esi, 0	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400072a	      0xe800000000	                          call 0x400072f	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400072f	          0x4889de	                            mov rsi, rbx	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000732	          0x4889c7	                            mov rdi, rax	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000735	            0x31c0	                            xor eax, eax	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000737	      0xe800000000	                          call 0x400073c	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x400073c	      0xe9fffbffff	                           jmp 0x4000340	        80	rddbg.c	FUNCTION_1	IF_7	IF_8	CALL_8
0x4000741	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       273	rddbg.c	FUNCTION_3
0x4000746	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       273	rddbg.c	FUNCTION_3
0x400074b	        0x488d14d1	                  lea rdx, [rcx + rdx*8]	       273	rddbg.c	FUNCTION_3
0x400074f	          0x4839d1	                            cmp rcx, rdx	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000752	     0xf83c2020000	                           jae 0x4000a1a	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000758	          0x4889cb	                            mov rbx, rcx	       274	rddbg.c	FUNCTION_3	FOR_1
0x400075b	    0x48c744240800	                  mov qword [rsp + 8], 0	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000764	          0x4489ed	                           mov ebp, r13d	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000767	          0x4989d7	                            mov r15, rdx	       274	rddbg.c	FUNCTION_3	FOR_1
0x400076a	        0x4c893424	                    mov qword [rsp], r14	       274	rddbg.c	FUNCTION_3	FOR_1
0x400076e	          0x4c89f7	                            mov rdi, r14	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000771	            0xeb1e	                           jmp 0x4000791	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000773	       0xf1f440000	                   nop dword [rax + rax]	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000778	        0x4883c308	                              add rbx, 8	       274	rddbg.c	FUNCTION_3	FOR_1
0x400077c	          0x4939df	                            cmp r15, rbx	       274	rddbg.c	FUNCTION_3	FOR_1
0x400077f	     0xf8689010000	                           jbe 0x400090e	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000785	        0x488b0424	                    mov rax, qword [rsp]	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000789	        0x488b3c24	                    mov rdi, qword [rsp]	       274	rddbg.c	FUNCTION_3	FOR_1
0x400078d	        0x488b4008	                mov rax, qword [rax + 8]	       274	rddbg.c	FUNCTION_3	FOR_1
0x4000791	    0x488d94248000	                   lea rdx, [rsp + 0x80]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x4000799	          0x488b33	                    mov rsi, qword [rbx]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x400079c	    0xff9010020000	                call qword [rax + 0x210]	       278	rddbg.c	FUNCTION_3	FOR_1	CALL_1
0x40007a2	    0x80bc24880000	            cmp byte [rsp + 0x88], 0x2d 	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40007aa	            0x75cc	                           jne 0x4000778	       280	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40007ac	    0x48837c240800	                  cmp qword [rsp + 8], 0	       285	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x40007b2	     0xf84b9010000	                            je 0x4000971	       285	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x40007b8	    0x4c8bac249000	            mov r13, qword [rsp + 0x90] 	       294	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x40007c0	          0x4d85ed	                           test r13, r13	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007c3	     0xf8477fbffff	                            je 0x4000340	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007c9	      0x41807d0000	                       cmp byte [r13], 0	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007ce	     0xf846cfbffff	                            je 0x4000340	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007d4	          0x4531e4	                          xor r12d, r12d	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007d7	            0xeb0a	                           jmp 0x40007e3	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007d9	     0xf1f80000000	                         nop dword [rax]	       295	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_4	CALL_3
0x40007e0	          0x4d89ec	                            mov r12, r13	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x40007e3	          0x4c89ef	                            mov rdi, r13	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40007e6	      0xe800000000	                          call 0x40007eb	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40007eb	    0x41807c05ff5c	         cmp byte [r13 + rax - 1], 0x5c 	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40007f1	            0x7558	                           jne 0x400084b	       300	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_5
0x40007f3	        0x488d6b08	                      lea rbp, [rbx + 8]	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x40007f7	          0x4939ef	                            cmp r15, rbp	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x40007fa	            0x764f	                           jbe 0x400084b	       301	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1
0x40007fc	          0x4c89ef	                            mov rdi, r13	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x40007ff	      0xe800000000	                          call 0x4000804	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x4000804	          0x4989c6	                            mov r14, rax	       306	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_6
0x4000807	          0x4889c7	                            mov rdi, rax	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x400080a	      0xe800000000	                          call 0x400080f	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x400080f	    0x41c64406ff00	             mov byte [r14 + rax - 1], 0	       307	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_7
0x4000815	        0x488b4308	                mov rax, qword [rbx + 8]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000819	            0x31d2	                            xor edx, edx	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400081b	          0x4c89f7	                            mov rdi, r14	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400081e	        0x488b7008	                mov rsi, qword [rax + 8]	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000822	            0x31c0	                            xor eax, eax	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000824	      0xe800000000	                          call 0x4000829	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x4000829	          0x4c89f7	                            mov rdi, r14	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x400082c	          0x4989c5	                            mov r13, rax	       308	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_9
0x400082f	      0xe800000000	                          call 0x4000834	       309	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_10
0x4000834	          0x4d85e4	                           test r12, r12	       310	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	IF_5
0x4000837	            0x7408	                            je 0x4000841	       310	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	IF_5
0x4000839	          0x4c89e7	                            mov rdi, r12	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x400083c	      0xe800000000	                          call 0x4000841	       311	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_11
0x4000841	      0x41807d0000	                       cmp byte [r13], 0	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000846	          0x4889eb	                            mov rbx, rbp	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x4000849	            0x7595	                           jne 0x40007e0	       299	rddbg.c	FUNCTION_3	FOR_1	IF_1	WHILE_1	CALL_4
0x400084b	    0x48632d000000	         movsxd rbp, dword [0x04000852] 	       363	rddbg.c	FUNCTION_4	IF_1
0x4000852	    0x4c8ba4248000	            mov r12, qword [rsp + 0x80] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x400085a	     0xfbf94249a00	           movsx edx, word [rsp + 0x9a] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x4000862	     0xfb68c249800	           movzx ecx, byte [rsp + 0x98] 	       316	rddbg.c	FUNCTION_3	FOR_1	IF_1	CALL_12
0x400086a	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       363	rddbg.c	FUNCTION_4	IF_1
0x400086f	    0x488b3cc50000	                  mov rdi, qword [rax*8]	       363	rddbg.c	FUNCTION_4	IF_1
0x4000877	          0x4885ff	                           test rdi, rdi	       363	rddbg.c	FUNCTION_4	IF_1
0x400087a	            0x7415	                            je 0x4000891	       363	rddbg.c	FUNCTION_4	IF_1
0x400087c	        0x894c2418	             mov dword [rsp + 0x18], ecx	       363	rddbg.c	FUNCTION_4	IF_1
0x4000880	        0x89542410	             mov dword [rsp + 0x10], edx	       363	rddbg.c	FUNCTION_4	IF_1
0x4000884	      0xe800000000	                          call 0x4000889	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000889	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       364	rddbg.c	FUNCTION_4	CALL_1
0x400088d	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       364	rddbg.c	FUNCTION_4	CALL_1
0x4000891	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       365	rddbg.c	FUNCTION_4
0x4000896	          0x4c89ef	                            mov rdi, r13	       368	rddbg.c	FUNCTION_4	CALL_2
0x4000899	    0x488d2cc50000	                        lea rbp, [rax*8]	       365	rddbg.c	FUNCTION_4
0x40008a1	    0x890cc5000000	                  mov dword [rax*8], ecx	       365	rddbg.c	FUNCTION_4
0x40008a8	          0x895504	                mov dword [rbp + 4], edx	       366	rddbg.c	FUNCTION_4
0x40008ab	        0x4c896508	                mov qword [rbp + 8], r12	       367	rddbg.c	FUNCTION_4
0x40008af	      0xe800000000	                          call 0x40008b4	       368	rddbg.c	FUNCTION_4	CALL_2
0x40008b4	        0x48894510	            mov qword [rbp + 0x10], rax 	       368	rddbg.c	FUNCTION_4	CALL_2
0x40008b8	    0x8b0500000000	            mov eax, dword [0x040008be] 	       369	rddbg.c	FUNCTION_4
0x40008be	          0x4d89e9	                             mov r9, r13	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008c1	     0xfbf8c249a00	           movsx ecx, word [rsp + 0x9a] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008c9	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008d1	      0x488b742408	                mov rsi, qword [rsp + 8]	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008d6	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008db	          0x83c001	                              add eax, 1	       369	rddbg.c	FUNCTION_4
0x40008de	              0x99	                                     cdq	       369	rddbg.c	FUNCTION_4
0x40008df	          0xc1ea1c	                           shr edx, 0x1c	       369	rddbg.c	FUNCTION_4
0x40008e2	             0x1d0	                            add eax, edx	       369	rddbg.c	FUNCTION_4
0x40008e4	          0x83e00f	                            and eax, 0xf	       369	rddbg.c	FUNCTION_4
0x40008e7	            0x29d0	                            sub eax, edx	       369	rddbg.c	FUNCTION_4
0x40008e9	     0xfb694249800	           movzx edx, byte [rsp + 0x98] 	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008f1	    0x890500000000	            mov dword [0x040008f7], eax 	       369	rddbg.c	FUNCTION_4
0x40008f7	      0xe800000000	                          call 0x40008fc	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008fc	            0x85c0	                           test eax, eax	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x40008fe	     0xf84cc000000	                            je 0x40009d0	       318	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_13
0x4000904	      0xbd01000000	                              mov ebp, 1	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000909	      0xe96afeffff	                           jmp 0x4000778	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x400090e	        0x4c8b3424	                    mov r14, qword [rsp]	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000912	          0x4189ed	                           mov r13d, ebp	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000915	      0xbd00000000	                              mov ebp, 0	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x400091a	      0xbb00000000	                              mov ebx, 0	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x400091f	              0x90	                                     nop	       292	rddbg.c	FUNCTION_3	FOR_1	IF_1
0x4000920	        0x488b7d00	                    mov rdi, qword [rbp]	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000924	          0x4885ff	                           test rdi, rdi	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000927	            0x740d	                            je 0x4000936	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000929	      0xe800000000	                          call 0x400092e	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400092e	    0x48c745000000	                      mov qword [rbp], 0	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x4000936	        0x4883c518	                           add rbp, 0x18	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x400093a	          0x4839eb	                            cmp rbx, rbp	       417	rddbg.c	FUNCTION_6	FOR_1
0x400093d	            0x75e1	                           jne 0x4000920	       417	rddbg.c	FUNCTION_6	FOR_1
0x400093f	      0x488b442408	                mov rax, qword [rsp + 8]	       334	rddbg.c	FUNCTION_3	IF_7
0x4000944	    0xc70500000000	               mov dword [0x0400094e], 0	       426	rddbg.c	FUNCTION_6
0x400094e	          0x4885c0	                           test rax, rax	       334	rddbg.c	FUNCTION_3	IF_7
0x4000951	     0xf8469f9ffff	                            je 0x40002c0	       334	rddbg.c	FUNCTION_3	IF_7
0x4000957	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x400095c	          0x4889c6	                            mov rsi, rax	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x400095f	      0xe800000000	                          call 0x4000964	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000964	            0x85c0	                           test eax, eax	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000966	     0xf8554f9ffff	                           jne 0x40002c0	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x400096c	      0xe9cff9ffff	                           jmp 0x4000340	       336	rddbg.c	FUNCTION_3	IF_7	IF_8	CALL_17
0x4000971	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000976	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x400097b	            0x31d2	                            xor edx, edx	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x400097d	        0x488b3424	                    mov rsi, qword [rsp]	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000981	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000986	      0xe800000000	                          call 0x400098b	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x400098b	          0x4885c0	                           test rax, rax	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x400098e	      0x4889442408	                mov qword [rsp + 8], rax	       287	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000993	     0xf851ffeffff	                           jne 0x40007b8	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x4000999	      0xe9a2f9ffff	                           jmp 0x4000340	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x400099e	            0x6690	                                     nop	       288	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_2	IF_3
0x40009a0	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x40009a5	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x40009aa	      0xba01000000	                              mov edx, 1	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x40009af	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x40009b4	          0x4c89fe	                            mov rsi, r15	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x40009b7	      0xe800000000	                          call 0x40009bc	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x40009bc	          0x4885c0	                           test rax, rax	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40009bf	      0x4889442450	             mov qword [rsp + 0x50], rax	       147	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_15
0x40009c4	     0xf8522faffff	                           jne 0x40003ec	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40009ca	      0xe971f9ffff	                           jmp 0x4000340	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40009cf	              0x90	                                     nop	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40009d0	      0xbb00000000	                              mov ebx, 0	       148	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_4	IF_5
0x40009d5	      0xe866f6ffff	                   call sym.stab_context	       321	rddbg.c	FUNCTION_3	FOR_1	IF_1	IF_6	CALL_14
0x40009da	          0x488b3b	                    mov rdi, qword [rbx]	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40009dd	          0x4885ff	                           test rdi, rdi	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40009e0	            0x740c	                            je 0x40009ee	       419	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40009e2	      0xe800000000	                          call 0x40009e7	       421	rddbg.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x40009e7	    0x48c703000000	                      mov qword [rbx], 0	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40009ee	        0x4883c318	                           add rbx, 0x18	       422	rddbg.c	FUNCTION_6	FOR_1	IF_1
0x40009f2	    0x4881fb000000	                              cmp rbx, 0	       417	rddbg.c	FUNCTION_6	FOR_1
0x40009f9	            0x75df	                           jne 0x40009da	       417	rddbg.c	FUNCTION_6	FOR_1
0x40009fb	      0xe9ddfbffff	                           jmp 0x40005dd	       417	rddbg.c	FUNCTION_6	FOR_1
0x4000a00	      0xe800000000	                          call 0x4000a05	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000a05	            0x89c7	                            mov edi, eax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000a07	          0x4d89fe	                            mov r14, r15	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000a0a	      0xe800000000	                          call 0x4000a0f	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000a0f	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_14
0x4000a12	          0x4989c1	                             mov r9, rax	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000a15	      0xe904f9ffff	                           jmp 0x400031e	       138	rddbg.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000a1a	    0x48c744240800	                  mov qword [rsp + 8], 0	       272	rddbg.c	FUNCTION_3
0x4000a23	      0xe9edfeffff	                           jmp 0x4000915	       272	rddbg.c	FUNCTION_3
0x4000a28	      0xe800000000	                  call section_end..data	        86	rddbg.c	FUNCTION_1
