tekhex_get_symbol_info	FOR,0:functions,0:DO,0:WHILE,0:CALL,1:SWITCH,0:IF,0:ELSE,0	3
0x40000e0	          0x4889f7	                            mov rdi, rsi	       930	tekhex.c	FUNCTION_22
0x40000e3	          0x4889d6	                            mov rsi, rdx	       931	tekhex.c	FUNCTION_22	CALL_1
0x40000e6	      0xe900000000	                           jmp 0x40000eb	       931	tekhex.c	FUNCTION_22	CALL_1
tekhex_write_object_contents	FOR,5:functions,0:DO,0:WHILE,0:CALL,15:SWITCH,1:IF,4:ELSE,0	1423
0x4000580	            0x4157	                                push r15	       801	tekhex.c	FUNCTION_19
0x4000582	            0x4156	                                push r14	       801	tekhex.c	FUNCTION_19
0x4000584	            0x4155	                                push r13	       801	tekhex.c	FUNCTION_19
0x4000586	            0x4154	                                push r12	       801	tekhex.c	FUNCTION_19
0x4000588	              0x55	                                push rbp	       801	tekhex.c	FUNCTION_19
0x4000589	              0x53	                                push rbx	       801	tekhex.c	FUNCTION_19
0x400058a	          0x4889fb	                            mov rbx, rdi	       801	tekhex.c	FUNCTION_19
0x400058d	    0x4881ec980000	                           sub rsp, 0x98	       801	tekhex.c	FUNCTION_19
0x4000594	    0x64488b042528	                mov rax, qword fs:[0x28]	       801	tekhex.c	FUNCTION_19
0x400059d	    0x488984248800	             mov qword [rsp + 0x88], rax	       801	tekhex.c	FUNCTION_19
0x40005a5	            0x31c0	                            xor eax, eax	       801	tekhex.c	FUNCTION_19
0x40005a7	    0x8b0500000000	            mov eax, dword [0x040005ad] 	       210	tekhex.c	FUNCTION_1	IF_1
0x40005ad	            0x85c0	                           test eax, eax	       210	tekhex.c	FUNCTION_1	IF_1
0x40005af	     0xf84f2110000	                            je 0x40017a7	       210	tekhex.c	FUNCTION_1	IF_1
0x40005b5	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       810	tekhex.c	FUNCTION_19	FOR_1
0x40005bc	        0x4c8b6818	            mov r13, qword [rax + 0x18] 	       810	tekhex.c	FUNCTION_19	FOR_1
0x40005c0	          0x4d85ed	                           test r13, r13	       810	tekhex.c	FUNCTION_19	FOR_1
0x40005c3	     0xf846d030000	                            je 0x4000936	       810	tekhex.c	FUNCTION_19	FOR_1
0x40005c9	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	       810	tekhex.c	FUNCTION_19	FOR_1
0x40005ce	        0x488d4501	                      lea rax, [rbp + 1]	       810	tekhex.c	FUNCTION_19	FOR_1
0x40005d2	        0x48890424	                    mov qword [rsp], rax	       810	tekhex.c	FUNCTION_19	FOR_1
0x40005d6	          0x4531f6	                          xor r14d, r14d	       801	tekhex.c	FUNCTION_19
0x40005d9	            0xeb16	                           jmp 0x40005f1	       801	tekhex.c	FUNCTION_19
0x40005db	       0xf1f440000	                   nop dword [rax + rax]	       801	tekhex.c	FUNCTION_19
0x40005e0	        0x4983c620	                           add r14, 0x20	       801	tekhex.c	FUNCTION_19
0x40005e4	    0x4981fe002000	                         cmp r14, 0x2000	       818	tekhex.c	FUNCTION_19	FOR_1	FOR_2
0x40005eb	     0xf8435030000	                            je 0x4000926	       818	tekhex.c	FUNCTION_19	FOR_1	FOR_2
0x40005f1	          0x4489f0	                           mov eax, r14d	       820	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1
0x40005f4	          0xc1f805	                              sar eax, 5	       820	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1
0x40005f7	            0x4898	                                    cdqe	       820	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1
0x40005f9	    0x4180bc050020	        cmp byte [r13 + rax + 0x2000], 0	       820	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1
0x4000602	            0x74dc	                            je 0x40005e0	       820	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1
0x4000604	          0x4c89f0	                            mov rax, r14	       824	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	CALL_2
0x4000607	    0x490385002100	           add rax, qword [r13 + 0x2100]	       824	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	CALL_2
0x400060e	      0xa9000000f0	                    test eax, 0xf0000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000613	     0xf857f010000	                           jne 0x4000798	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000619	      0xa90000000f	                     test eax, 0xf000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400061e	     0xf859e020000	                           jne 0x40008c2	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000624	      0xa90000f000	                      test eax, 0xf00000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000629	     0xf857f020000	                           jne 0x40008ae	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400062f	      0xa900000f00	                       test eax, 0xf0000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000634	     0xf85b0020000	                           jne 0x40008ea	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400063a	          0xf6c4f0	                           test ah, 0xf0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400063d	     0xf8593020000	                           jne 0x40008d6	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000643	          0xf6c40f	                            test ah, 0xf	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000646	     0xf85c6020000	                           jne 0x4000912	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400064c	            0xa8f0	                           test al, 0xf0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400064e	     0xf85aa020000	                           jne 0x40008fe	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000654	        0x4c8d7d02	                      lea r15, [rbp + 2]	       740	tekhex.c	FUNCTION_16
0x4000658	      0xc644242031	            mov byte [rsp + 0x20], 0x31 	       738	tekhex.c	FUNCTION_16
0x400065d	      0xc644242130	            mov byte [rsp + 0x21], 0x30 	       739	tekhex.c	FUNCTION_16
0x4000662	        0x498d7f40	                   lea rdi, [r15 + 0x40]	       739	tekhex.c	FUNCTION_16
0x4000666	          0x4489f1	                           mov ecx, r14d	       739	tekhex.c	FUNCTION_16
0x4000669	          0x4c89fa	                            mov rdx, r15	       740	tekhex.c	FUNCTION_16
0x400066c	         0xf1f4000	                         nop dword [rax]	       740	tekhex.c	FUNCTION_16
0x4000670	          0x4863f1	                         movsxd rsi, ecx	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x4000673	        0x4883c202	                              add rdx, 2	       828	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x4000677	          0x83c101	                              add ecx, 1	       828	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x400067a	    0x410fb6443500	             movzx eax, byte [r13 + rsi]	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x4000680	          0x83e00f	                            and eax, 0xf	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x4000683	     0xfb680000000	                   movzx eax, byte [rax]	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x400068a	          0x8842ff	                  mov byte [rdx - 1], al	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x400068d	    0x410fb6443500	             movzx eax, byte [r13 + rsi]	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x4000693	          0xc0e804	                               shr al, 4	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x4000696	          0x83e00f	                            and eax, 0xf	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x4000699	     0xfb680000000	                   movzx eax, byte [rax]	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x40006a0	          0x8842fe	                  mov byte [rdx - 2], al	       827	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x40006a3	          0x4839fa	                            cmp rdx, rdi	       825	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x40006a6	            0x75c8	                           jne 0x4000670	       825	tekhex.c	FUNCTION_19	FOR_1	FOR_2	IF_1	FOR_3
0x40006a8	          0x4989fc	                            mov r12, rdi	       781	tekhex.c	FUNCTION_18
0x40006ab	      0xc644241025	            mov byte [rsp + 0x10], 0x25 	       780	tekhex.c	FUNCTION_18
0x40006b0	      0xc644241336	            mov byte [rsp + 0x13], 0x36 	       782	tekhex.c	FUNCTION_18
0x40006b5	          0x4929ec	                            sub r12, rbp	       781	tekhex.c	FUNCTION_18
0x40006b8	      0x498d442405	                      lea rax, [r12 + 5]	       781	tekhex.c	FUNCTION_18
0x40006bd	          0x4889c2	                            mov rdx, rax	       781	tekhex.c	FUNCTION_18
0x40006c0	        0x48c1f804	                              sar rax, 4	       781	tekhex.c	FUNCTION_18
0x40006c4	          0x83e20f	                            and edx, 0xf	       781	tekhex.c	FUNCTION_18
0x40006c7	          0x83e00f	                            and eax, 0xf	       781	tekhex.c	FUNCTION_18
0x40006ca	    0x440fb6820000	                   movzx r8d, byte [rdx]	       781	tekhex.c	FUNCTION_18
0x40006d2	    0x440fb6880000	                   movzx r9d, byte [rax]	       781	tekhex.c	FUNCTION_18
0x40006da	            0x31d2	                            xor edx, edx	       784	tekhex.c	FUNCTION_18	FOR_1
0x40006dc	          0x4839ef	                            cmp rdi, rbp	       784	tekhex.c	FUNCTION_18	FOR_1
0x40006df	      0x4488442412	              mov byte [rsp + 0x12], r8b	       781	tekhex.c	FUNCTION_18
0x40006e4	      0x44884c2411	              mov byte [rsp + 0x11], r9b	       781	tekhex.c	FUNCTION_18
0x40006e9	            0x761a	                           jbe 0x4000705	       784	tekhex.c	FUNCTION_18	FOR_1
0x40006eb	          0x4889e8	                            mov rax, rbp	       784	tekhex.c	FUNCTION_18	FOR_1
0x40006ee	            0x6690	                                     nop	       784	tekhex.c	FUNCTION_18	FOR_1
0x40006f0	           0xfb630	                   movzx esi, byte [rax]	       785	tekhex.c	FUNCTION_18	FOR_1
0x40006f3	        0x4883c001	                              add rax, 1	       784	tekhex.c	FUNCTION_18	FOR_1
0x40006f7	     0xfbeb6000000	                   movsx esi, byte [rsi]	       785	tekhex.c	FUNCTION_18	FOR_1
0x40006fe	             0x1f2	                            add edx, esi	       785	tekhex.c	FUNCTION_18	FOR_1
0x4000700	          0x4839f8	                            cmp rax, rdi	       784	tekhex.c	FUNCTION_18	FOR_1
0x4000703	            0x75eb	                           jne 0x40006f0	       784	tekhex.c	FUNCTION_18	FOR_1
0x4000705	    0x410fbe810000	                    movsx eax, byte [r9]	       787	tekhex.c	FUNCTION_18
0x400070d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       791	tekhex.c	FUNCTION_18	IF_1	CALL_1
0x4000712	      0xbe06000000	                              mov esi, 6	       791	tekhex.c	FUNCTION_18	IF_1	CALL_1
0x4000717	             0x1c2	                            add edx, eax	       787	tekhex.c	FUNCTION_18
0x4000719	    0x410fbe800000	                    movsx eax, byte [r8]	       788	tekhex.c	FUNCTION_18
0x4000721	             0x1c2	                            add edx, eax	       788	tekhex.c	FUNCTION_18
0x4000723	     0xfbe05000000	           movsx eax, byte [0x0400072a] 	       789	tekhex.c	FUNCTION_18
0x400072a	             0x1d0	                            add eax, edx	       789	tekhex.c	FUNCTION_18
0x400072c	            0x89c2	                            mov edx, eax	       790	tekhex.c	FUNCTION_18
0x400072e	          0xc1f804	                              sar eax, 4	       790	tekhex.c	FUNCTION_18
0x4000731	          0x83e20f	                            and edx, 0xf	       790	tekhex.c	FUNCTION_18
0x4000734	          0x83e00f	                            and eax, 0xf	       790	tekhex.c	FUNCTION_18
0x4000737	     0xfb692000000	                   movzx edx, byte [rdx]	       790	tekhex.c	FUNCTION_18
0x400073e	     0xfb680000000	                   movzx eax, byte [rax]	       790	tekhex.c	FUNCTION_18
0x4000745	        0x88542415	               mov byte [rsp + 0x15], dl	       790	tekhex.c	FUNCTION_18
0x4000749	          0x4889da	                            mov rdx, rbx	       791	tekhex.c	FUNCTION_18	IF_1	CALL_1
0x400074c	        0x88442414	               mov byte [rsp + 0x14], al	       790	tekhex.c	FUNCTION_18
0x4000750	      0xe800000000	                          call 0x4000755	       791	tekhex.c	FUNCTION_18	IF_1	CALL_1
0x4000755	        0x4883f806	                              cmp rax, 6	       791	tekhex.c	FUNCTION_18	IF_1	CALL_1
0x4000759	     0xf85ed120000	                           jne 0x4001a4c	       791	tekhex.c	FUNCTION_18	IF_1	CALL_1
0x400075f	      0x41c647400a	              mov byte [r15 + 0x40], 0xa	       793	tekhex.c	FUNCTION_18
0x4000764	      0x4d8d7c2401	                      lea r15, [r12 + 1]	       794	tekhex.c	FUNCTION_18
0x4000769	          0x4889da	                            mov rdx, rbx	       795	tekhex.c	FUNCTION_18	IF_2	CALL_3
0x400076c	          0x4889ef	                            mov rdi, rbp	       795	tekhex.c	FUNCTION_18	IF_2	CALL_3
0x400076f	          0x4c89fe	                            mov rsi, r15	       795	tekhex.c	FUNCTION_18	IF_2	CALL_3
0x4000772	      0xe800000000	                          call 0x4000777	       795	tekhex.c	FUNCTION_18	IF_2	CALL_3
0x4000777	          0x4939c7	                            cmp r15, rax	       795	tekhex.c	FUNCTION_18	IF_2	CALL_3
0x400077a	     0xf8460feffff	                            je 0x40005e0	       795	tekhex.c	FUNCTION_18	IF_2	CALL_3
0x4000780	      0xba00000000	                              mov edx, 0	       796	tekhex.c	FUNCTION_18	CALL_4
0x4000785	      0xbe1c030000	                          mov esi, 0x31c	       796	tekhex.c	FUNCTION_18	CALL_4
0x400078a	      0xbf00000000	                              mov edi, 0	       796	tekhex.c	FUNCTION_18	CALL_4
0x400078f	      0xe800000000	                          call 0x4000794	       796	tekhex.c	FUNCTION_18	CALL_4
0x4000794	         0xf1f4000	                         nop dword [rax]	       796	tekhex.c	FUNCTION_18	CALL_4
0x4000798	      0xb938000000	                           mov ecx, 0x38	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400079d	      0xba08000000	                              mov edx, 8	       722	tekhex.c	FUNCTION_16	FOR_1
0x40007a2	      0xbf1c000000	                           mov edi, 0x1c	       722	tekhex.c	FUNCTION_16	FOR_1
0x40007a7	        0x884c2420	               mov byte [rsp + 0x20], cl	       726	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x40007ab	          0x4889c6	                            mov rsi, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007ae	            0x89f9	                            mov ecx, edi	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007b0	          0x48d3ee	                             shr rsi, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007b3	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007b6	          0x4889f1	                            mov rcx, rsi	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007b9	          0x8d72ff	                      lea esi, [rdx - 1]	       731	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007bc	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007bf	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007c6	        0x884c2421	               mov byte [rsp + 0x21], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007ca	          0x8d4ffc	                      lea ecx, [rdi - 4]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007cd	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007d0	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007d3	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007d6	          0x83fa02	                              cmp edx, 2	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007d9	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007e0	        0x884c2422	               mov byte [rsp + 0x22], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007e4	          0x8d4ff8	                      lea ecx, [rdi - 8]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007e7	     0xf84b0000000	                            je 0x400089d	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007ed	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007f0	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007f3	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007f6	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007f9	          0x83fa03	                              cmp edx, 3	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40007fc	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000803	        0x884c2423	               mov byte [rsp + 0x23], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000807	          0x8d4ff4	                    lea ecx, [rdi - 0xc]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400080a	     0xf848d000000	                            je 0x400089d	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000810	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000813	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000816	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000819	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400081c	          0x83fa04	                              cmp edx, 4	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400081f	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000826	        0x884c2424	               mov byte [rsp + 0x24], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400082a	          0x8d4ff0	                   lea ecx, [rdi - 0x10]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400082d	            0x746e	                            je 0x400089d	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400082f	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000832	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000835	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000838	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400083b	          0x83fa05	                              cmp edx, 5	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400083e	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000845	        0x884c2425	               mov byte [rsp + 0x25], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000849	          0x8d4fec	                   lea ecx, [rdi - 0x14]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400084c	            0x744f	                            je 0x400089d	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400084e	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000851	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000854	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000857	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400085a	          0x83fa06	                              cmp edx, 6	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400085d	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000864	        0x884c2426	               mov byte [rsp + 0x26], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000868	          0x8d4fe8	                   lea ecx, [rdi - 0x18]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400086b	            0x7430	                            je 0x400089d	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400086d	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000870	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000873	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000876	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000879	          0x83fa07	                              cmp edx, 7	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400087c	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000883	        0x884c2427	               mov byte [rsp + 0x27], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000887	          0x8d4fe4	                   lea ecx, [rdi - 0x1c]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400088a	            0x7411	                            je 0x400089d	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400088c	          0x48d3e8	                             shr rax, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400088f	          0x83e00f	                            and eax, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000892	     0xfb680000000	                   movzx eax, byte [rax]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4000899	        0x88442428	               mov byte [rsp + 0x28], al	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400089d	        0x488b0424	                    mov rax, qword [rsp]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40008a1	          0x4863f6	                         movsxd rsi, esi	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40008a4	      0x4c8d7c3001	                lea r15, [rax + rsi + 1]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40008a9	      0xe9b4fdffff	                           jmp 0x4000662	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40008ae	      0xb936000000	                           mov ecx, 0x36	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x40008b3	      0xba06000000	                              mov edx, 6	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008b8	      0xbf14000000	                           mov edi, 0x14	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008bd	      0xe9e5feffff	                           jmp 0x40007a7	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008c2	      0xb937000000	                           mov ecx, 0x37	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x40008c7	      0xba07000000	                              mov edx, 7	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008cc	      0xbf18000000	                           mov edi, 0x18	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008d1	      0xe9d1feffff	                           jmp 0x40007a7	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008d6	      0xb934000000	                           mov ecx, 0x34	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x40008db	      0xba04000000	                              mov edx, 4	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008e0	      0xbf0c000000	                            mov edi, 0xc	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008e5	      0xe9bdfeffff	                           jmp 0x40007a7	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008ea	      0xb935000000	                           mov ecx, 0x35	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x40008ef	      0xba05000000	                              mov edx, 5	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008f4	      0xbf10000000	                           mov edi, 0x10	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008f9	      0xe9a9feffff	                           jmp 0x40007a7	       722	tekhex.c	FUNCTION_16	FOR_1
0x40008fe	      0xb932000000	                           mov ecx, 0x32	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000903	      0xba02000000	                              mov edx, 2	       722	tekhex.c	FUNCTION_16	FOR_1
0x4000908	      0xbf04000000	                              mov edi, 4	       722	tekhex.c	FUNCTION_16	FOR_1
0x400090d	      0xe995feffff	                           jmp 0x40007a7	       722	tekhex.c	FUNCTION_16	FOR_1
0x4000912	      0xb933000000	                           mov ecx, 0x33	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000917	      0xba03000000	                              mov edx, 3	       722	tekhex.c	FUNCTION_16	FOR_1
0x400091c	      0xbf08000000	                              mov edi, 8	       722	tekhex.c	FUNCTION_16	FOR_1
0x4000921	      0xe981feffff	                           jmp 0x40007a7	       722	tekhex.c	FUNCTION_16	FOR_1
0x4000926	    0x4d8bad082100	          mov r13, qword [r13 + 0x2108] 	       812	tekhex.c	FUNCTION_19	FOR_1
0x400092d	          0x4d85ed	                           test r13, r13	       810	tekhex.c	FUNCTION_19	FOR_1
0x4000930	     0xf85a0fcffff	                           jne 0x40005d6	       810	tekhex.c	FUNCTION_19	FOR_1
0x4000936	    0x4c8bbb900000	            mov r15, qword [rbx + 0x90] 	       836	tekhex.c	FUNCTION_19	FOR_4
0x400093d	      0x488d442420	                   lea rax, [rsp + 0x20]	       836	tekhex.c	FUNCTION_19	FOR_4
0x4000942	      0x4c8d6c2421	                   lea r13, [rsp + 0x21]	       836	tekhex.c	FUNCTION_19	FOR_4
0x4000947	        0x4c8d6011	                   lea r12, [rax + 0x11]	       836	tekhex.c	FUNCTION_19	FOR_4
0x400094b	        0x4c8d7010	                   lea r14, [rax + 0x10]	       836	tekhex.c	FUNCTION_19	FOR_4
0x400094f	          0x4d85ff	                           test r15, r15	       836	tekhex.c	FUNCTION_19	FOR_4
0x4000952	     0xf85c1010000	                           jne 0x4000b19	       836	tekhex.c	FUNCTION_19	FOR_4
0x4000958	      0xe9ec030000	                           jmp 0x4000d49	       836	tekhex.c	FUNCTION_19	FOR_4
0x400095d	           0xf1f00	                         nop dword [rax]	       836	tekhex.c	FUNCTION_19	FOR_4
0x4000960	      0xc644242030	            mov byte [rsp + 0x20], 0x30 	       751	tekhex.c	FUNCTION_17	IF_1
0x4000965	      0xbe0f000000	                            mov esi, 0xf	       751	tekhex.c	FUNCTION_17	IF_1
0x400096a	         0xfb64500	                   movzx eax, byte [rbp]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400096e	            0x85f6	                           test esi, esi	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000970	        0x88442421	               mov byte [rsp + 0x21], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000974	     0xf84ce000000	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400097a	         0xfb64501	               movzx eax, byte [rbp + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400097e	          0x83fe01	                              cmp esi, 1	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000981	        0x88442422	               mov byte [rsp + 0x22], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000985	     0xf84bd000000	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400098b	         0xfb64502	               movzx eax, byte [rbp + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400098f	          0x83fe02	                              cmp esi, 2	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000992	        0x88442423	               mov byte [rsp + 0x23], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000996	     0xf84ac000000	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400099c	         0xfb64503	               movzx eax, byte [rbp + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009a0	          0x83fe03	                              cmp esi, 3	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009a3	        0x88442424	               mov byte [rsp + 0x24], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009a7	     0xf849b000000	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009ad	         0xfb64504	               movzx eax, byte [rbp + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009b1	          0x83fe04	                              cmp esi, 4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009b4	        0x88442425	               mov byte [rsp + 0x25], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009b8	     0xf848a000000	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009be	         0xfb64505	               movzx eax, byte [rbp + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009c2	          0x83fe05	                              cmp esi, 5	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009c5	        0x88442426	               mov byte [rsp + 0x26], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009c9	            0x747d	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009cb	         0xfb64506	               movzx eax, byte [rbp + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009cf	          0x83fe06	                              cmp esi, 6	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009d2	        0x88442427	               mov byte [rsp + 0x27], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009d6	            0x7470	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009d8	         0xfb64507	               movzx eax, byte [rbp + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009dc	          0x83fe07	                              cmp esi, 7	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009df	        0x88442428	               mov byte [rsp + 0x28], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009e3	            0x7463	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009e5	         0xfb64508	               movzx eax, byte [rbp + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009e9	          0x83fe08	                              cmp esi, 8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009ec	        0x88442429	               mov byte [rsp + 0x29], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009f0	            0x7456	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009f2	         0xfb64509	               movzx eax, byte [rbp + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009f6	          0x83fe09	                              cmp esi, 9	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009f9	        0x8844242a	               mov byte [rsp + 0x2a], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40009fd	            0x7449	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40009ff	         0xfb6450a	            movzx eax, byte [rbp + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a03	          0x83fe0a	                            cmp esi, 0xa	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a06	        0x8844242b	               mov byte [rsp + 0x2b], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a0a	            0x743c	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a0c	         0xfb6450b	            movzx eax, byte [rbp + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a10	          0x83fe0b	                            cmp esi, 0xb	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a13	        0x8844242c	               mov byte [rsp + 0x2c], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a17	            0x742f	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a19	         0xfb6450c	            movzx eax, byte [rbp + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a1d	          0x83fe0c	                            cmp esi, 0xc	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a20	        0x8844242d	               mov byte [rsp + 0x2d], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a24	            0x7422	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a26	         0xfb6450d	            movzx eax, byte [rbp + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a2a	          0x83fe0d	                            cmp esi, 0xd	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a2d	        0x8844242e	               mov byte [rsp + 0x2e], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a31	            0x7415	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a33	         0xfb6450e	            movzx eax, byte [rbp + 0xe] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a37	          0x83fe0e	                            cmp esi, 0xe	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a3a	        0x8844242f	               mov byte [rsp + 0x2f], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a3e	            0x7408	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000a40	         0xfb6450f	            movzx eax, byte [rbp + 0xf] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a44	        0x88442430	               mov byte [rsp + 0x30], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a48	      0x498d7c3501	                lea rdi, [r13 + rsi + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000a4d	          0xc60731	                    mov byte [rdi], 0x31	       841	tekhex.c	FUNCTION_19	FOR_4
0x4000a50	        0x498b4728	            mov rax, qword [r15 + 0x28] 	       842	tekhex.c	FUNCTION_19	FOR_4	CALL_5
0x4000a54	      0xa9000000f0	                    test eax, 0xf0000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a59	     0xf8559110000	                           jne 0x4001bb8	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a5f	      0xa90000000f	                     test eax, 0xf000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a64	     0xf853a110000	                           jne 0x4001ba4	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a6a	      0xa90000f000	                      test eax, 0xf00000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a6f	     0xf851b110000	                           jne 0x4001b90	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a75	      0xa900000f00	                       test eax, 0xf0000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a7a	     0xf85e00f0000	                           jne 0x4001a60	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a80	          0xf6c4f0	                           test ah, 0xf0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a83	     0xf85bb110000	                           jne 0x4001c44	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a89	          0xf6c40f	                            test ah, 0xf	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a8c	     0xf859e110000	                           jne 0x4001c30	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a92	            0xa8f0	                           test al, 0xf0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a94	     0xf8582110000	                           jne 0x4001c1c	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000a9a	        0xc6470131	                mov byte [rdi + 1], 0x31	       738	tekhex.c	FUNCTION_16
0x4000a9e	        0xc6470230	                mov byte [rdi + 2], 0x30	       739	tekhex.c	FUNCTION_16
0x4000aa2	        0x488d7703	                      lea rsi, [rdi + 3]	       739	tekhex.c	FUNCTION_16
0x4000aa6	        0x498b4738	            mov rax, qword [r15 + 0x38] 	       843	tekhex.c	FUNCTION_19	FOR_4	CALL_6
0x4000aaa	        0x49034728	             add rax, qword [r15 + 0x28]	       843	tekhex.c	FUNCTION_19	FOR_4	CALL_6
0x4000aae	      0xa9000000f0	                    test eax, 0xf0000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ab3	     0xf85c3100000	                           jne 0x4001b7c	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ab9	      0xa90000000f	                     test eax, 0xf000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000abe	     0xf8544110000	                           jne 0x4001c08	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ac4	      0xa90000f000	                      test eax, 0xf00000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ac9	     0xf8525110000	                           jne 0x4001bf4	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000acf	      0xa900000f00	                       test eax, 0xf0000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ad4	     0xf8506110000	                           jne 0x4001be0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ada	          0xf6c4f0	                           test ah, 0xf0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000add	     0xf85e9100000	                           jne 0x4001bcc	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ae3	          0xf6c40f	                            test ah, 0xf	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ae6	     0xf854c0f0000	                           jne 0x4001a38	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000aec	            0xa8f0	                           test al, 0xf0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000aee	     0xf853b0e0000	                           jne 0x400192f	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000af4	        0x488d5602	                      lea rdx, [rsi + 2]	       739	tekhex.c	FUNCTION_16
0x4000af8	          0xc60631	                    mov byte [rsi], 0x31	       738	tekhex.c	FUNCTION_16
0x4000afb	        0xc6460130	                mov byte [rsi + 1], 0x30	       739	tekhex.c	FUNCTION_16
0x4000aff	      0x488d742420	                   lea rsi, [rsp + 0x20]	       844	tekhex.c	FUNCTION_19	FOR_4	CALL_7
0x4000b04	          0x4889df	                            mov rdi, rbx	       844	tekhex.c	FUNCTION_19	FOR_4	CALL_7
0x4000b07	      0xe894f6ffff	                call sym.out.constprop.5	       844	tekhex.c	FUNCTION_19	FOR_4	CALL_7
0x4000b0c	        0x4d8b7f10	            mov r15, qword [r15 + 0x10] 	       836	tekhex.c	FUNCTION_19	FOR_4
0x4000b10	          0x4d85ff	                           test r15, r15	       836	tekhex.c	FUNCTION_19	FOR_4
0x4000b13	     0xf8430020000	                            je 0x4000d49	       836	tekhex.c	FUNCTION_19	FOR_4
0x4000b19	          0x498b2f	                    mov rbp, qword [r15]	       840	tekhex.c	FUNCTION_19	FOR_4	CALL_4
0x4000b1c	          0x4885ed	                           test rbp, rbp	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000b1f	     0xf84ff010000	                            je 0x4000d24	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000b25	          0x4889ef	                            mov rdi, rbp	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000b28	      0xe800000000	                          call 0x4000b2d	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000b2d	          0x83f80f	                            cmp eax, 0xf	       749	tekhex.c	FUNCTION_17	IF_1
0x4000b30	     0xf8f2afeffff	                            jg 0x4000960	       749	tekhex.c	FUNCTION_17	IF_1
0x4000b36	            0x85c0	                           test eax, eax	       756	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4000b38	     0xf84e6010000	                            je 0x4000d24	       756	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4000b3e	          0x4863d0	                         movsxd rdx, eax	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b41	          0x8d70ff	                      lea esi, [rax - 1]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b44	     0xfb692000000	                   movzx edx, byte [rdx]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b4b	        0x88542420	               mov byte [rsp + 0x20], dl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b4f	        0x488d5510	                   lea rdx, [rbp + 0x10]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b53	          0x4939d5	                            cmp r13, rdx	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b56	        0x400f93c7	                               setae dil	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b5a	          0x4c39e5	                            cmp rbp, r12	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b5d	           0xf93c1	                                setae cl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b60	          0x4008cf	                              or dil, cl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b63	     0xf8401feffff	                            je 0x400096a	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b69	          0x83f81b	                           cmp eax, 0x1b	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b6c	     0xf86f8fdffff	                           jbe 0x400096a	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4000b72	         0xfb64d00	                   movzx ecx, byte [rbp]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b76	          0x8d78f0	                   lea edi, [rax - 0x10]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000b79	        0x4c8d550f	                    lea r10, [rbp + 0xf]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b7d	        0x448d40f1	                    lea r8d, [rax - 0xf]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b81	        0x884c2421	               mov byte [rsp + 0x21], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b85	         0xfb64d01	               movzx ecx, byte [rbp + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b89	        0x884c2422	               mov byte [rsp + 0x22], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b8d	         0xfb64d02	               movzx ecx, byte [rbp + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b91	        0x884c2423	               mov byte [rsp + 0x23], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b95	         0xfb64d03	               movzx ecx, byte [rbp + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b99	        0x884c2424	               mov byte [rsp + 0x24], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000b9d	         0xfb64d04	               movzx ecx, byte [rbp + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ba1	        0x884c2425	               mov byte [rsp + 0x25], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ba5	         0xfb64d05	               movzx ecx, byte [rbp + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ba9	        0x884c2426	               mov byte [rsp + 0x26], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bad	         0xfb64d06	               movzx ecx, byte [rbp + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bb1	        0x884c2427	               mov byte [rsp + 0x27], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bb5	         0xfb64d07	               movzx ecx, byte [rbp + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bb9	        0x884c2428	               mov byte [rsp + 0x28], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bbd	         0xfb64d08	               movzx ecx, byte [rbp + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bc1	        0x884c2429	               mov byte [rsp + 0x29], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bc5	         0xfb64d09	               movzx ecx, byte [rbp + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bc9	        0x884c242a	               mov byte [rsp + 0x2a], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bcd	         0xfb64d0a	            movzx ecx, byte [rbp + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bd1	        0x884c242b	               mov byte [rsp + 0x2b], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bd5	         0xfb64d0b	            movzx ecx, byte [rbp + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bd9	        0x884c242c	               mov byte [rsp + 0x2c], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bdd	         0xfb64d0c	            movzx ecx, byte [rbp + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000be1	        0x884c242d	               mov byte [rsp + 0x2d], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000be5	         0xfb64d0d	            movzx ecx, byte [rbp + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000be9	        0x884c242e	               mov byte [rsp + 0x2e], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bed	         0xfb64d0e	            movzx ecx, byte [rbp + 0xe] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bf1	        0x884c242f	               mov byte [rsp + 0x2f], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bf5	          0x8d48e1	                   lea ecx, [rax - 0x1f]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bf8	          0x83e1f0	                     and ecx, 0xfffffff0	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bfb	          0x83c110	                           add ecx, 0x10	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000bfe	          0x83ff0e	                            cmp edi, 0xe	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c01	     0xf862e010000	                           jbe 0x4000d35	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c07	            0x89c8	                            mov eax, ecx	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c09	      0xf30f6f450f	        movdqu xmm0, xmmword [rbp + 0xf]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c0e	        0x4d8d0c06	                     lea r9, [r14 + rax]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c12	            0x29cf	                            sub edi, ecx	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c14	          0x4c01d0	                            add rax, r10	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c17	          0x4439c1	                            cmp ecx, r8d	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c1a	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c1f	     0xf8423feffff	                            je 0x4000a48	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c25	        0x488d5001	                      lea rdx, [rax + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c29	            0x85ff	                           test edi, edi	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c2b	        0x498d4901	                       lea rcx, [r9 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c2f	           0xfb600	                   movzx eax, byte [rax]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c32	          0x418801	                       mov byte [r9], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c35	          0x8d47ff	                      lea eax, [rdi - 1]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c38	     0xf840afeffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c3e	           0xfb63a	                   movzx edi, byte [rdx]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c41	            0x85c0	                           test eax, eax	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c43	          0x408839	                     mov byte [rcx], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c46	     0xf84fcfdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c4c	         0xfb67a01	               movzx edi, byte [rdx + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c50	          0x83f801	                              cmp eax, 1	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c53	        0x40887901	                 mov byte [rcx + 1], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c57	     0xf84ebfdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c5d	         0xfb67a02	               movzx edi, byte [rdx + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c61	          0x83f802	                              cmp eax, 2	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c64	        0x40887902	                 mov byte [rcx + 2], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c68	     0xf84dafdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c6e	         0xfb67a03	               movzx edi, byte [rdx + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c72	          0x83f803	                              cmp eax, 3	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c75	        0x40887903	                 mov byte [rcx + 3], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c79	     0xf84c9fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c7f	         0xfb67a04	               movzx edi, byte [rdx + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c83	          0x83f804	                              cmp eax, 4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c86	        0x40887904	                 mov byte [rcx + 4], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c8a	     0xf84b8fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c90	         0xfb67a05	               movzx edi, byte [rdx + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c94	          0x83f805	                              cmp eax, 5	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000c97	        0x40887905	                 mov byte [rcx + 5], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000c9b	     0xf84a7fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000ca1	         0xfb67a06	               movzx edi, byte [rdx + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ca5	          0x83f806	                              cmp eax, 6	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000ca8	        0x40887906	                 mov byte [rcx + 6], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cac	     0xf8496fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cb2	         0xfb67a07	               movzx edi, byte [rdx + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cb6	          0x83f807	                              cmp eax, 7	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cb9	        0x40887907	                 mov byte [rcx + 7], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cbd	     0xf8485fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cc3	         0xfb67a08	               movzx edi, byte [rdx + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cc7	          0x83f808	                              cmp eax, 8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cca	        0x40887908	                 mov byte [rcx + 8], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cce	     0xf8474fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cd4	         0xfb67a09	               movzx edi, byte [rdx + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cd8	          0x83f809	                              cmp eax, 9	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cdb	        0x40887909	                 mov byte [rcx + 9], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cdf	     0xf8463fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000ce5	         0xfb67a0a	            movzx edi, byte [rdx + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ce9	          0x83f80a	                            cmp eax, 0xa	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cec	        0x4088790a	               mov byte [rcx + 0xa], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cf0	     0xf8452fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cf6	         0xfb67a0b	            movzx edi, byte [rdx + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000cfa	          0x83f80b	                            cmp eax, 0xb	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000cfd	        0x4088790b	               mov byte [rcx + 0xb], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d01	     0xf8441fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000d07	         0xfb67a0c	            movzx edi, byte [rdx + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d0b	          0x83f80c	                            cmp eax, 0xc	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000d0e	        0x4088790c	               mov byte [rcx + 0xc], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d12	     0xf8430fdffff	                            je 0x4000a48	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000d18	         0xfb6420d	            movzx eax, byte [rdx + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d1c	          0x88410d	                mov byte [rcx + 0xd], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d1f	      0xe924fdffff	                           jmp 0x4000a48	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d24	      0xc644242031	            mov byte [rsp + 0x20], 0x31 	       758	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4000d29	            0x31f6	                            xor esi, esi	       758	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4000d2b	      0xbd00000000	                              mov ebp, 0	       759	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4000d30	      0xe935fcffff	                           jmp 0x400096a	       759	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4000d35	         0xfb67d0f	            movzx edi, byte [rbp + 0xf] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d39	          0x4c89e1	                            mov rcx, r12	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d3c	          0x83e811	                           sub eax, 0x11	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000d3f	      0x40887c2430	              mov byte [rsp + 0x30], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d44	      0xe9f5feffff	                           jmp 0x4000c3e	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000d49	    0x4c8ba3b00000	            mov r12, qword [rbx + 0xb0] 	       848	tekhex.c	FUNCTION_19	IF_2
0x4000d50	          0x4d85e4	                           test r12, r12	       848	tekhex.c	FUNCTION_19	IF_2
0x4000d53	     0xf84f4020000	                            je 0x400104d	       848	tekhex.c	FUNCTION_19	IF_2
0x4000d59	        0x498b3c24	                    mov rdi, qword [r12]	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d5d	          0x4885ff	                           test rdi, rdi	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d60	     0xf84e7020000	                            je 0x400104d	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d66	      0x488d442421	                   lea rax, [rsp + 0x21]	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d6b	      0x4c8d6c2431	                   lea r13, [rsp + 0x31]	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d70	        0x48890424	                    mov qword [rsp], rax	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d74	      0x488d442420	                   lea rax, [rsp + 0x20]	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d79	        0x4883c010	                           add rax, 0x10	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d7d	      0x4889442408	                mov qword [rsp + 8], rax	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4000d82	      0xe800000000	                          call 0x4000d87	       852	tekhex.c	FUNCTION_19	IF_2	FOR_5	CALL_8
0x4000d87	          0x83f83f	                           cmp eax, 0x3f	       854	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3
0x4000d8a	          0x4189c6	                           mov r14d, eax	       852	tekhex.c	FUNCTION_19	IF_2	FOR_5	CALL_8
0x4000d8d	     0xf84a9020000	                            je 0x400103c	       854	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3
0x4000d93	        0x4d8b3c24	                    mov r15, qword [r12]	       857	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3
0x4000d97	        0x498b4720	            mov rax, qword [r15 + 0x20] 	       860	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_9
0x4000d9b	          0x488b28	                    mov rbp, qword [rax]	       860	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_9
0x4000d9e	          0x4885ed	                           test rbp, rbp	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000da1	     0xf84af060000	                            je 0x4001456	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000da7	          0x4889ef	                            mov rdi, rbp	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000daa	      0xe800000000	                          call 0x4000daf	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000daf	          0x83f80f	                            cmp eax, 0xf	       749	tekhex.c	FUNCTION_17	IF_1
0x4000db2	     0xf8eaf060000	                           jle 0x4001467	       749	tekhex.c	FUNCTION_17	IF_1
0x4000db8	      0xc644242030	            mov byte [rsp + 0x20], 0x30 	       751	tekhex.c	FUNCTION_17	IF_1
0x4000dbd	      0xbe0f000000	                            mov esi, 0xf	       751	tekhex.c	FUNCTION_17	IF_1
0x4000dc2	         0xfb64500	                   movzx eax, byte [rbp]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000dc6	            0x85f6	                           test esi, esi	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000dc8	        0x88442421	               mov byte [rsp + 0x21], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000dcc	     0xf84ce000000	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000dd2	         0xfb64501	               movzx eax, byte [rbp + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000dd6	          0x83fe01	                              cmp esi, 1	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000dd9	        0x88442422	               mov byte [rsp + 0x22], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ddd	     0xf84bd000000	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000de3	         0xfb64502	               movzx eax, byte [rbp + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000de7	          0x83fe02	                              cmp esi, 2	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000dea	        0x88442423	               mov byte [rsp + 0x23], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000dee	     0xf84ac000000	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000df4	         0xfb64503	               movzx eax, byte [rbp + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000df8	          0x83fe03	                              cmp esi, 3	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000dfb	        0x88442424	               mov byte [rsp + 0x24], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000dff	     0xf849b000000	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e05	         0xfb64504	               movzx eax, byte [rbp + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e09	          0x83fe04	                              cmp esi, 4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e0c	        0x88442425	               mov byte [rsp + 0x25], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e10	     0xf848a000000	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e16	         0xfb64505	               movzx eax, byte [rbp + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e1a	          0x83fe05	                              cmp esi, 5	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e1d	        0x88442426	               mov byte [rsp + 0x26], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e21	            0x747d	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e23	         0xfb64506	               movzx eax, byte [rbp + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e27	          0x83fe06	                              cmp esi, 6	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e2a	        0x88442427	               mov byte [rsp + 0x27], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e2e	            0x7470	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e30	         0xfb64507	               movzx eax, byte [rbp + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e34	          0x83fe07	                              cmp esi, 7	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e37	        0x88442428	               mov byte [rsp + 0x28], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e3b	            0x7463	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e3d	         0xfb64508	               movzx eax, byte [rbp + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e41	          0x83fe08	                              cmp esi, 8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e44	        0x88442429	               mov byte [rsp + 0x29], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e48	            0x7456	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e4a	         0xfb64509	               movzx eax, byte [rbp + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e4e	          0x83fe09	                              cmp esi, 9	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e51	        0x8844242a	               mov byte [rsp + 0x2a], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e55	            0x7449	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e57	         0xfb6450a	            movzx eax, byte [rbp + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e5b	          0x83fe0a	                            cmp esi, 0xa	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e5e	        0x8844242b	               mov byte [rsp + 0x2b], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e62	            0x743c	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e64	         0xfb6450b	            movzx eax, byte [rbp + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e68	          0x83fe0b	                            cmp esi, 0xb	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e6b	        0x8844242c	               mov byte [rsp + 0x2c], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e6f	            0x742f	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e71	         0xfb6450c	            movzx eax, byte [rbp + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e75	          0x83fe0c	                            cmp esi, 0xc	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e78	        0x8844242d	               mov byte [rsp + 0x2d], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e7c	            0x7422	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e7e	         0xfb6450d	            movzx eax, byte [rbp + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e82	          0x83fe0d	                            cmp esi, 0xd	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e85	        0x8844242e	               mov byte [rsp + 0x2e], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e89	            0x7415	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e8b	         0xfb6450e	            movzx eax, byte [rbp + 0xe] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e8f	          0x83fe0e	                            cmp esi, 0xe	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e92	        0x8844242f	               mov byte [rsp + 0x2f], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e96	            0x7408	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000e98	         0xfb6450f	            movzx eax, byte [rbp + 0xf] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000e9c	        0x88442430	               mov byte [rsp + 0x30], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ea0	        0x4183ee41	                          sub r14d, 0x41	       862	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x4000ea4	      0x488d6c3422	            lea rbp, [rsp + rsi + 0x22] 	       862	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x4000ea9	        0x4183fe33	                          cmp r14d, 0x33	       862	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x4000ead	            0x7710	                            ja 0x4000ebf	       862	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x4000eaf	    0x42ff24f50000	                       jmp qword [r14*8]	       862	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x4000eb7	        0xc6450037	                    mov byte [rbp], 0x37	       884	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x4000ebb	        0x4883c501	                              add rbp, 1	       884	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x4000ebf	        0x4d8b7708	                mov r14, qword [r15 + 8]	       892	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_11
0x4000ec3	          0x4d85f6	                           test r14, r14	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000ec6	     0xf84b9010000	                            je 0x4001085	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000ecc	          0x4c89f7	                            mov rdi, r14	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000ecf	      0xe800000000	                          call 0x4000ed4	       747	tekhex.c	FUNCTION_17	CALL_1
0x4000ed4	          0x83f80f	                            cmp eax, 0xf	       749	tekhex.c	FUNCTION_17	IF_1
0x4000ed7	     0xf8e26020000	                           jle 0x4001103	       749	tekhex.c	FUNCTION_17	IF_1
0x4000edd	        0x488d7501	                      lea rsi, [rbp + 1]	       751	tekhex.c	FUNCTION_17	IF_1
0x4000ee1	        0xc6450030	                    mov byte [rbp], 0x30	       751	tekhex.c	FUNCTION_17	IF_1
0x4000ee5	      0xba0f000000	                            mov edx, 0xf	       751	tekhex.c	FUNCTION_17	IF_1
0x4000eea	            0x89d7	                            mov edi, edx	       751	tekhex.c	FUNCTION_17	IF_1
0x4000eec	        0x410fb606	                   movzx eax, byte [r14]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ef0	            0x85d2	                           test edx, edx	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000ef2	            0x8806	                      mov byte [rsi], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000ef4	     0xf84ce000000	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000efa	      0x410fb64601	               movzx eax, byte [r14 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000eff	          0x83fa01	                              cmp edx, 1	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f02	          0x884601	                  mov byte [rsi + 1], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f05	     0xf84bd000000	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f0b	      0x410fb64602	               movzx eax, byte [r14 + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f10	          0x83fa02	                              cmp edx, 2	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f13	          0x884602	                  mov byte [rsi + 2], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f16	     0xf84ac000000	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f1c	      0x410fb64603	               movzx eax, byte [r14 + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f21	          0x83fa03	                              cmp edx, 3	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f24	          0x884603	                  mov byte [rsi + 3], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f27	     0xf849b000000	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f2d	      0x410fb64604	               movzx eax, byte [r14 + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f32	          0x83fa04	                              cmp edx, 4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f35	          0x884604	                  mov byte [rsi + 4], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f38	     0xf848a000000	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f3e	      0x410fb64605	               movzx eax, byte [r14 + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f43	          0x83fa05	                              cmp edx, 5	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f46	          0x884605	                  mov byte [rsi + 5], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f49	            0x747d	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f4b	      0x410fb64606	               movzx eax, byte [r14 + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f50	          0x83fa06	                              cmp edx, 6	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f53	          0x884606	                  mov byte [rsi + 6], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f56	            0x7470	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f58	      0x410fb64607	               movzx eax, byte [r14 + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f5d	          0x83fa07	                              cmp edx, 7	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f60	          0x884607	                  mov byte [rsi + 7], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f63	            0x7463	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f65	      0x410fb64608	               movzx eax, byte [r14 + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f6a	          0x83fa08	                              cmp edx, 8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f6d	          0x884608	                  mov byte [rsi + 8], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f70	            0x7456	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f72	      0x410fb64609	               movzx eax, byte [r14 + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f77	          0x83fa09	                              cmp edx, 9	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f7a	          0x884609	                  mov byte [rsi + 9], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f7d	            0x7449	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f7f	      0x410fb6460a	            movzx eax, byte [r14 + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f84	          0x83fa0a	                            cmp edx, 0xa	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f87	          0x88460a	                mov byte [rsi + 0xa], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f8a	            0x743c	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f8c	      0x410fb6460b	            movzx eax, byte [r14 + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f91	          0x83fa0b	                            cmp edx, 0xb	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f94	          0x88460b	                mov byte [rsi + 0xb], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f97	            0x742f	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000f99	      0x410fb6460c	            movzx eax, byte [r14 + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000f9e	          0x83fa0c	                            cmp edx, 0xc	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000fa1	          0x88460c	                mov byte [rsi + 0xc], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000fa4	            0x7422	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000fa6	      0x410fb6460d	            movzx eax, byte [r14 + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000fab	          0x83fa0d	                            cmp edx, 0xd	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000fae	          0x88460d	                mov byte [rsi + 0xd], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000fb1	            0x7415	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000fb3	      0x410fb6460e	            movzx eax, byte [r14 + 0xe] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000fb8	          0x83fa0e	                            cmp edx, 0xe	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000fbb	          0x88460e	                mov byte [rsi + 0xe], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000fbe	            0x7408	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4000fc0	      0x410fb6460f	            movzx eax, byte [r14 + 0xf] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000fc5	          0x88460f	                mov byte [rsi + 0xf], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4000fc8	        0x498b4720	            mov rax, qword [r15 + 0x20] 	       893	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_12
0x4000fcc	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       893	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_12
0x4000fd0	      0x488d7c3e01	                lea rdi, [rsi + rdi + 1]	       893	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_12
0x4000fd5	        0x48035028	             add rdx, qword [rax + 0x28]	       893	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_12
0x4000fd9	    0xf7c2000000f0	                    test edx, 0xf0000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000fdf	     0xf8593070000	                           jne 0x4001778	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000fe5	    0xf7c20000000f	                     test edx, 0xf000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000feb	     0xf857a060000	                           jne 0x400166b	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ff1	    0xf7c20000f000	                      test edx, 0xf00000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ff7	     0xf851d090000	                           jne 0x400191a	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4000ffd	    0xf7c200000f00	                       test edx, 0xf0000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001003	     0xf85fc080000	                           jne 0x4001905	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001009	          0xf6c6f0	                           test dh, 0xf0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400100c	     0xf85de080000	                           jne 0x40018f0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001012	          0xf6c60f	                            test dh, 0xf	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001015	     0xf85c0080000	                           jne 0x40018db	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400101b	          0xf6c2f0	                           test dl, 0xf0	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400101e	     0xf8569070000	                           jne 0x400178d	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001024	        0x488d5702	                      lea rdx, [rdi + 2]	       739	tekhex.c	FUNCTION_16
0x4001028	          0xc60731	                    mov byte [rdi], 0x31	       738	tekhex.c	FUNCTION_16
0x400102b	        0xc6470130	                mov byte [rdi + 1], 0x30	       739	tekhex.c	FUNCTION_16
0x400102f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       894	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_13
0x4001034	          0x4889df	                            mov rdi, rbx	       894	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_13
0x4001037	      0xe864f1ffff	                call sym.out.constprop.5	       894	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_13
0x400103c	        0x4983c408	                              add r12, 8	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4001040	        0x498b3c24	                    mov rdi, qword [r12]	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4001044	          0x4885ff	                           test rdi, rdi	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x4001047	     0xf8535fdffff	                           jne 0x4000d82	       850	tekhex.c	FUNCTION_19	IF_2	FOR_5
0x400104d	          0x4889da	                            mov rdx, rbx	       900	tekhex.c	FUNCTION_19	IF_4	CALL_14
0x4001050	      0xbe09000000	                              mov esi, 9	       900	tekhex.c	FUNCTION_19	IF_4	CALL_14
0x4001055	      0xbf00000000	                              mov edi, 0	       900	tekhex.c	FUNCTION_19	IF_4	CALL_14
0x400105a	      0xe800000000	                          call 0x400105f	       900	tekhex.c	FUNCTION_19	IF_4	CALL_14
0x400105f	        0x4883f809	                              cmp rax, 9	       900	tekhex.c	FUNCTION_19	IF_4	CALL_14
0x4001063	     0xf855e080000	                           jne 0x40018c7	       900	tekhex.c	FUNCTION_19	IF_4	CALL_14
0x4001069	      0xb801000000	                              mov eax, 1	       902	tekhex.c	FUNCTION_19
0x400106e	            0xeb6a	                           jmp 0x40010da	       902	tekhex.c	FUNCTION_19
0x4001070	        0xc6450034	                    mov byte [rbp], 0x34	       873	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x4001074	        0x4d8b7708	                mov r14, qword [r15 + 8]	       892	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	CALL_11
0x4001078	        0x4883c501	                              add rbp, 1	       873	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x400107c	          0x4d85f6	                           test r14, r14	       747	tekhex.c	FUNCTION_17	CALL_1
0x400107f	     0xf8547feffff	                           jne 0x4000ecc	       747	tekhex.c	FUNCTION_17	CALL_1
0x4001085	        0x488d7501	                      lea rsi, [rbp + 1]	       758	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4001089	        0xc6450031	                    mov byte [rbp], 0x31	       758	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x400108d	            0x31d2	                            xor edx, edx	       758	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x400108f	    0x41be00000000	                             mov r14d, 0	       759	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4001095	      0xe950feffff	                           jmp 0x4000eea	       759	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x400109a	        0xc6450032	                    mov byte [rbp], 0x32	       865	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x400109e	        0x4883c501	                              add rbp, 1	       865	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010a2	      0xe918feffff	                           jmp 0x4000ebf	       866	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010a7	        0xc6450038	                    mov byte [rbp], 0x38	       878	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010ab	        0x4883c501	                              add rbp, 1	       878	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010af	      0xe90bfeffff	                           jmp 0x4000ebf	       879	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010b4	        0xc6450036	                    mov byte [rbp], 0x36	       868	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010b8	        0x4883c501	                              add rbp, 1	       868	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010bc	      0xe9fefdffff	                           jmp 0x4000ebf	       869	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010c1	        0xc6450033	                    mov byte [rbp], 0x33	       881	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010c5	        0x4883c501	                              add rbp, 1	       881	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010c9	      0xe9f1fdffff	                           jmp 0x4000ebf	       882	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010ce	      0xbf03000000	                              mov edi, 3	       888	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1	CALL_10
0x40010d3	      0xe800000000	                          call 0x40010d8	       888	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1	CALL_10
0x40010d8	            0x31c0	                            xor eax, eax	       889	tekhex.c	FUNCTION_19	IF_2	FOR_5	IF_3	SWITCH_1
0x40010da	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	       903	tekhex.c	FUNCTION_19
0x40010e2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       903	tekhex.c	FUNCTION_19
0x40010eb	     0xf85b1060000	                           jne 0x40017a2	       903	tekhex.c	FUNCTION_19
0x40010f1	    0x4881c4980000	                           add rsp, 0x98	       903	tekhex.c	FUNCTION_19
0x40010f8	              0x5b	                                 pop rbx	       903	tekhex.c	FUNCTION_19
0x40010f9	              0x5d	                                 pop rbp	       903	tekhex.c	FUNCTION_19
0x40010fa	            0x415c	                                 pop r12	       903	tekhex.c	FUNCTION_19
0x40010fc	            0x415d	                                 pop r13	       903	tekhex.c	FUNCTION_19
0x40010fe	            0x415e	                                 pop r14	       903	tekhex.c	FUNCTION_19
0x4001100	            0x415f	                                 pop r15	       903	tekhex.c	FUNCTION_19
0x4001102	              0xc3	                                     ret	       903	tekhex.c	FUNCTION_19
0x4001103	            0x85c0	                           test eax, eax	       756	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4001105	     0xf847affffff	                            je 0x4001085	       756	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x400110b	        0x498d4e10	                   lea rcx, [r14 + 0x10]	       756	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x400110f	        0x488d7501	                      lea rsi, [rbp + 1]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001113	          0x4863d0	                         movsxd rdx, eax	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001116	     0xfb692000000	                   movzx edx, byte [rdx]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400111d	          0x4839ce	                            cmp rsi, rcx	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001120	        0x488d4d11	                   lea rcx, [rbp + 0x11]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001124	        0x410f93c0	                               setae r8b	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001128	          0x4939ce	                            cmp r14, rcx	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400112b	          0x885500	                      mov byte [rbp], dl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400112e	           0xf93c1	                                setae cl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001131	          0x8d50ff	                      lea edx, [rax - 1]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001134	          0x4108c8	                              or r8b, cl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001137	            0x89d7	                            mov edi, edx	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001139	     0xf84adfdffff	                            je 0x4000eec	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400113f	          0x83f816	                           cmp eax, 0x16	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001142	     0xf86a4fdffff	                           jbe 0x4000eec	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001148	          0x4c89f1	                            mov rcx, r14	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400114b	          0x48f7d9	                                 neg rcx	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400114e	          0x83e10f	                            and ecx, 0xf	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001151	            0x39c1	                            cmp ecx, eax	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001153	           0xf47c8	                          cmova ecx, eax	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001156	            0x85c9	                           test ecx, ecx	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001158	     0xf84d6020000	                            je 0x4001434	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400115e	        0x410fb616	                   movzx edx, byte [r14]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001162	          0x83f901	                              cmp ecx, 1	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001165	        0x4c8d4502	                       lea r8, [rbp + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001169	        0x4d8d4e01	                       lea r9, [r14 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400116d	          0x885501	                  mov byte [rbp + 1], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001170	          0x8d50fe	                      lea edx, [rax - 2]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001173	     0xf846b010000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001179	      0x410fb65601	               movzx edx, byte [r14 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400117e	          0x83f902	                              cmp ecx, 2	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001181	        0x4c8d4503	                       lea r8, [rbp + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001185	        0x4d8d4e02	                       lea r9, [r14 + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001189	          0x885502	                  mov byte [rbp + 2], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400118c	          0x8d50fd	                      lea edx, [rax - 3]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400118f	     0xf844f010000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001195	      0x410fb65602	               movzx edx, byte [r14 + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400119a	          0x83f903	                              cmp ecx, 3	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400119d	        0x4c8d4504	                       lea r8, [rbp + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011a1	        0x4d8d4e03	                       lea r9, [r14 + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011a5	          0x885503	                  mov byte [rbp + 3], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011a8	          0x8d50fc	                      lea edx, [rax - 4]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40011ab	     0xf8433010000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40011b1	      0x410fb65603	               movzx edx, byte [r14 + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011b6	          0x83f904	                              cmp ecx, 4	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011b9	        0x4c8d4505	                       lea r8, [rbp + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011bd	        0x4d8d4e04	                       lea r9, [r14 + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011c1	          0x885504	                  mov byte [rbp + 4], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011c4	          0x8d50fb	                      lea edx, [rax - 5]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40011c7	     0xf8417010000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40011cd	      0x410fb65604	               movzx edx, byte [r14 + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011d2	          0x83f905	                              cmp ecx, 5	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011d5	        0x4c8d4506	                       lea r8, [rbp + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011d9	        0x4d8d4e05	                       lea r9, [r14 + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011dd	          0x885505	                  mov byte [rbp + 5], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011e0	          0x8d50fa	                      lea edx, [rax - 6]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40011e3	     0xf84fb000000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40011e9	      0x410fb65605	               movzx edx, byte [r14 + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011ee	          0x83f906	                              cmp ecx, 6	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011f1	        0x4c8d4507	                       lea r8, [rbp + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011f5	        0x4d8d4e06	                       lea r9, [r14 + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011f9	          0x885506	                  mov byte [rbp + 6], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40011fc	          0x8d50f9	                      lea edx, [rax - 7]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40011ff	     0xf84df000000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001205	      0x410fb65606	               movzx edx, byte [r14 + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400120a	          0x83f907	                              cmp ecx, 7	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400120d	        0x4c8d4508	                       lea r8, [rbp + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001211	        0x4d8d4e07	                       lea r9, [r14 + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001215	          0x885507	                  mov byte [rbp + 7], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001218	          0x8d50f8	                      lea edx, [rax - 8]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400121b	     0xf84c3000000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001221	      0x410fb65607	               movzx edx, byte [r14 + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001226	          0x83f908	                              cmp ecx, 8	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001229	        0x4c8d4509	                       lea r8, [rbp + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400122d	        0x4d8d4e08	                       lea r9, [r14 + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001231	          0x885508	                  mov byte [rbp + 8], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001234	          0x8d50f7	                      lea edx, [rax - 9]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001237	     0xf84a7000000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400123d	      0x410fb65608	               movzx edx, byte [r14 + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001242	          0x83f909	                              cmp ecx, 9	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001245	        0x4c8d450a	                     lea r8, [rbp + 0xa]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001249	        0x4d8d4e09	                       lea r9, [r14 + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400124d	          0x885509	                  mov byte [rbp + 9], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001250	          0x8d50f6	                    lea edx, [rax - 0xa]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001253	     0xf848b000000	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001259	      0x410fb65609	               movzx edx, byte [r14 + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400125e	          0x83f90a	                            cmp ecx, 0xa	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001261	        0x4c8d450b	                     lea r8, [rbp + 0xb]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001265	        0x4d8d4e0a	                     lea r9, [r14 + 0xa]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001269	          0x88550a	                mov byte [rbp + 0xa], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400126c	          0x8d50f5	                    lea edx, [rax - 0xb]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400126f	            0x7473	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001271	      0x410fb6560a	            movzx edx, byte [r14 + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001276	          0x83f90b	                            cmp ecx, 0xb	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001279	        0x4c8d450c	                     lea r8, [rbp + 0xc]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400127d	        0x4d8d4e0b	                     lea r9, [r14 + 0xb]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001281	          0x88550b	                mov byte [rbp + 0xb], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001284	          0x8d50f4	                    lea edx, [rax - 0xc]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001287	            0x745b	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001289	      0x410fb6560b	            movzx edx, byte [r14 + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400128e	          0x83f90c	                            cmp ecx, 0xc	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001291	        0x4c8d450d	                     lea r8, [rbp + 0xd]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001295	        0x4d8d4e0c	                     lea r9, [r14 + 0xc]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001299	          0x88550c	                mov byte [rbp + 0xc], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400129c	          0x8d50f3	                    lea edx, [rax - 0xd]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400129f	            0x7443	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012a1	      0x410fb6560c	            movzx edx, byte [r14 + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012a6	          0x83f90d	                            cmp ecx, 0xd	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012a9	        0x4c8d450e	                     lea r8, [rbp + 0xe]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012ad	        0x4d8d4e0d	                     lea r9, [r14 + 0xd]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012b1	          0x88550d	                mov byte [rbp + 0xd], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012b4	          0x8d50f2	                    lea edx, [rax - 0xe]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012b7	            0x742b	                            je 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012b9	      0x410fb6560d	            movzx edx, byte [r14 + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012be	          0x83f90f	                            cmp ecx, 0xf	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012c1	        0x4c8d450f	                     lea r8, [rbp + 0xf]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012c5	        0x4d8d4e0e	                     lea r9, [r14 + 0xe]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012c9	          0x88550e	                mov byte [rbp + 0xe], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012cc	          0x8d50f1	                    lea edx, [rax - 0xf]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012cf	            0x7513	                           jne 0x40012e4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012d1	      0x410fb6560e	            movzx edx, byte [r14 + 0xe] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012d6	        0x4c8d4510	                    lea r8, [rbp + 0x10]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012da	        0x4d8d4e0f	                     lea r9, [r14 + 0xf]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012de	          0x88550f	                mov byte [rbp + 0xf], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40012e1	          0x8d50f0	                   lea edx, [rax - 0x10]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012e4	            0x29c8	                            sub eax, ecx	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012e6	            0x89fd	                            mov ebp, edi	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012e8	          0x4189cb	                           mov r11d, ecx	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012eb	        0x448d50f0	                  lea r10d, [rax - 0x10]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012ef	            0x29cd	                            sub ebp, ecx	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012f1	        0x4183e2f0	                    and r10d, 0xfffffff0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012f5	        0x4183c210	                          add r10d, 0x10	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012f9	          0x83fd0e	                            cmp ebp, 0xe	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40012fc	     0xf863d010000	                           jbe 0x400143f	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001302	    0x66430f6f041e	        movdqa xmm0, xmmword [r14 + r11]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001308	          0x4489d1	                           mov ecx, r10d	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400130b	          0x4429d2	                           sub edx, r10d	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400130e	          0x4901c8	                             add r8, rcx	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001311	          0x4901c9	                             add r9, rcx	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001314	          0x4139c2	                           cmp r10d, eax	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001317	      0x420f11041e	        movups xmmword [rsi + r11], xmm0	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400131c	          0x4189d3	                           mov r11d, edx	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400131f	     0xf84a3fcffff	                            je 0x4000fc8	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001325	          0x4585db	                         test r11d, r11d	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001328	        0x498d4801	                       lea rcx, [r8 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400132c	        0x498d4101	                       lea rax, [r9 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001330	        0x410fb611	                    movzx edx, byte [r9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001334	          0x418810	                       mov byte [r8], dl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001337	        0x418d53ff	                      lea edx, [r11 - 1]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400133b	     0xf8487fcffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001341	        0x440fb600	                   movzx r8d, byte [rax]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001345	            0x85d2	                           test edx, edx	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001347	          0x448801	                     mov byte [rcx], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400134a	     0xf8478fcffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001350	      0x440fb64001	               movzx r8d, byte [rax + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001355	          0x83fa01	                              cmp edx, 1	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001358	        0x44884101	                 mov byte [rcx + 1], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400135c	     0xf8466fcffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001362	      0x440fb64002	               movzx r8d, byte [rax + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001367	          0x83fa02	                              cmp edx, 2	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400136a	        0x44884102	                 mov byte [rcx + 2], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400136e	     0xf8454fcffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001374	      0x440fb64003	               movzx r8d, byte [rax + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001379	          0x83fa03	                              cmp edx, 3	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400137c	        0x44884103	                 mov byte [rcx + 3], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001380	     0xf8442fcffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001386	      0x440fb64004	               movzx r8d, byte [rax + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400138b	          0x83fa04	                              cmp edx, 4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400138e	        0x44884104	                 mov byte [rcx + 4], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001392	     0xf8430fcffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001398	      0x440fb64005	               movzx r8d, byte [rax + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400139d	          0x83fa05	                              cmp edx, 5	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013a0	        0x44884105	                 mov byte [rcx + 5], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013a4	     0xf841efcffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013aa	      0x440fb64006	               movzx r8d, byte [rax + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013af	          0x83fa06	                              cmp edx, 6	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013b2	        0x44884106	                 mov byte [rcx + 6], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013b6	     0xf840cfcffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013bc	      0x440fb64007	               movzx r8d, byte [rax + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013c1	          0x83fa07	                              cmp edx, 7	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013c4	        0x44884107	                 mov byte [rcx + 7], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013c8	     0xf84fafbffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013ce	      0x440fb64008	               movzx r8d, byte [rax + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013d3	          0x83fa08	                              cmp edx, 8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013d6	        0x44884108	                 mov byte [rcx + 8], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013da	     0xf84e8fbffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013e0	      0x440fb64009	               movzx r8d, byte [rax + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013e5	          0x83fa09	                              cmp edx, 9	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013e8	        0x44884109	                 mov byte [rcx + 9], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013ec	     0xf84d6fbffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013f2	      0x440fb6400a	            movzx r8d, byte [rax + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013f7	          0x83fa0a	                            cmp edx, 0xa	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40013fa	        0x4488410a	               mov byte [rcx + 0xa], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40013fe	     0xf84c4fbffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001404	      0x440fb6400b	            movzx r8d, byte [rax + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001409	          0x83fa0b	                            cmp edx, 0xb	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400140c	        0x4488410b	               mov byte [rcx + 0xb], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001410	     0xf84b2fbffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001416	      0x440fb6400c	            movzx r8d, byte [rax + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400141b	          0x83fa0c	                            cmp edx, 0xc	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400141e	        0x4488410c	               mov byte [rcx + 0xc], r8b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001422	     0xf84a0fbffff	                            je 0x4000fc8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001428	         0xfb6400d	            movzx eax, byte [rax + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400142c	          0x88410d	                mov byte [rcx + 0xd], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400142f	      0xe994fbffff	                           jmp 0x4000fc8	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001434	          0x4d89f1	                             mov r9, r14	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001437	          0x4989f0	                             mov r8, rsi	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400143a	      0xe9a5feffff	                           jmp 0x40012e4	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400143f	        0x498d4101	                       lea rax, [r9 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001443	        0x450fb609	                    movzx r9d, byte [r9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001447	        0x498d4801	                       lea rcx, [r8 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400144b	          0x83ea01	                              sub edx, 1	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400144e	          0x458808	                      mov byte [r8], r9b	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001451	      0xe9ebfeffff	                           jmp 0x4001341	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001456	      0xc644242031	            mov byte [rsp + 0x20], 0x31 	       758	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x400145b	            0x31f6	                            xor esi, esi	       758	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x400145d	      0xbd00000000	                              mov ebp, 0	       759	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4001462	      0xe95bf9ffff	                           jmp 0x4000dc2	       759	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4001467	            0x85c0	                           test eax, eax	       756	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x4001469	            0x74eb	                            je 0x4001456	       756	tekhex.c	FUNCTION_17	ELSE_1	IF_2
0x400146b	          0x4863d0	                         movsxd rdx, eax	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400146e	          0x8d70ff	                      lea esi, [rax - 1]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001471	     0xfb692000000	                   movzx edx, byte [rdx]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001478	        0x88542420	               mov byte [rsp + 0x20], dl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400147c	        0x488d5510	                   lea rdx, [rbp + 0x10]	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001480	        0x48391424	                    cmp qword [rsp], rdx	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001484	        0x400f93c7	                               setae dil	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001488	          0x4c39ed	                            cmp rbp, r13	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400148b	           0xf93c1	                                setae cl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400148e	          0x4008cf	                              or dil, cl	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001491	     0xf842bf9ffff	                            je 0x4000dc2	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x4001497	          0x83f81b	                           cmp eax, 0x1b	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x400149a	     0xf8622f9ffff	                           jbe 0x4000dc2	       763	tekhex.c	FUNCTION_17	ELSE_1	ELSE_2
0x40014a0	         0xfb64d00	                   movzx ecx, byte [rbp]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014a4	          0x8d78f0	                   lea edi, [rax - 0x10]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40014a7	        0x4c8d550f	                    lea r10, [rbp + 0xf]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014ab	        0x448d40f1	                    lea r8d, [rax - 0xf]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014af	        0x884c2421	               mov byte [rsp + 0x21], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014b3	         0xfb64d01	               movzx ecx, byte [rbp + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014b7	        0x884c2422	               mov byte [rsp + 0x22], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014bb	         0xfb64d02	               movzx ecx, byte [rbp + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014bf	        0x884c2423	               mov byte [rsp + 0x23], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014c3	         0xfb64d03	               movzx ecx, byte [rbp + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014c7	        0x884c2424	               mov byte [rsp + 0x24], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014cb	         0xfb64d04	               movzx ecx, byte [rbp + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014cf	        0x884c2425	               mov byte [rsp + 0x25], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014d3	         0xfb64d05	               movzx ecx, byte [rbp + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014d7	        0x884c2426	               mov byte [rsp + 0x26], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014db	         0xfb64d06	               movzx ecx, byte [rbp + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014df	        0x884c2427	               mov byte [rsp + 0x27], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014e3	         0xfb64d07	               movzx ecx, byte [rbp + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014e7	        0x884c2428	               mov byte [rsp + 0x28], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014eb	         0xfb64d08	               movzx ecx, byte [rbp + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014ef	        0x884c2429	               mov byte [rsp + 0x29], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014f3	         0xfb64d09	               movzx ecx, byte [rbp + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014f7	        0x884c242a	               mov byte [rsp + 0x2a], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014fb	         0xfb64d0a	            movzx ecx, byte [rbp + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40014ff	        0x884c242b	               mov byte [rsp + 0x2b], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001503	         0xfb64d0b	            movzx ecx, byte [rbp + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001507	        0x884c242c	               mov byte [rsp + 0x2c], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400150b	         0xfb64d0c	            movzx ecx, byte [rbp + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400150f	        0x884c242d	               mov byte [rsp + 0x2d], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001513	         0xfb64d0d	            movzx ecx, byte [rbp + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001517	        0x884c242e	               mov byte [rsp + 0x2e], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400151b	         0xfb64d0e	            movzx ecx, byte [rbp + 0xe] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400151f	        0x884c242f	               mov byte [rsp + 0x2f], cl	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001523	          0x8d48e1	                   lea ecx, [rax - 0x1f]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001526	          0x83e1f0	                     and ecx, 0xfffffff0	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001529	          0x83c110	                           add ecx, 0x10	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400152c	          0x83ff0e	                            cmp edi, 0xe	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400152f	     0xf8622010000	                           jbe 0x4001657	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001535	      0x488b542408	                mov rdx, qword [rsp + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400153a	            0x89c8	                            mov eax, ecx	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400153c	            0x29cf	                            sub edi, ecx	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400153e	      0xf30f6f450f	        movdqu xmm0, xmmword [rbp + 0xf]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001543	        0x4c8d0c02	                     lea r9, [rdx + rax]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001547	          0x4c01d0	                            add rax, r10	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400154a	          0x4439c1	                            cmp ecx, r8d	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400154d	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001552	     0xf8448f9ffff	                            je 0x4000ea0	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001558	        0x488d5001	                      lea rdx, [rax + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400155c	            0x85ff	                           test edi, edi	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400155e	        0x498d4901	                       lea rcx, [r9 + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001562	           0xfb600	                   movzx eax, byte [rax]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001565	          0x418801	                       mov byte [r9], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001568	          0x8d47ff	                      lea eax, [rdi - 1]	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400156b	     0xf842ff9ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001571	           0xfb63a	                   movzx edi, byte [rdx]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001574	            0x85c0	                           test eax, eax	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001576	          0x408839	                     mov byte [rcx], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001579	     0xf8421f9ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400157f	         0xfb67a01	               movzx edi, byte [rdx + 1]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001583	          0x83f801	                              cmp eax, 1	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001586	        0x40887901	                 mov byte [rcx + 1], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400158a	     0xf8410f9ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001590	         0xfb67a02	               movzx edi, byte [rdx + 2]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001594	          0x83f802	                              cmp eax, 2	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001597	        0x40887902	                 mov byte [rcx + 2], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400159b	     0xf84fff8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015a1	         0xfb67a03	               movzx edi, byte [rdx + 3]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015a5	          0x83f803	                              cmp eax, 3	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015a8	        0x40887903	                 mov byte [rcx + 3], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015ac	     0xf84eef8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015b2	         0xfb67a04	               movzx edi, byte [rdx + 4]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015b6	          0x83f804	                              cmp eax, 4	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015b9	        0x40887904	                 mov byte [rcx + 4], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015bd	     0xf84ddf8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015c3	         0xfb67a05	               movzx edi, byte [rdx + 5]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015c7	          0x83f805	                              cmp eax, 5	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015ca	        0x40887905	                 mov byte [rcx + 5], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015ce	     0xf84ccf8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015d4	         0xfb67a06	               movzx edi, byte [rdx + 6]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015d8	          0x83f806	                              cmp eax, 6	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015db	        0x40887906	                 mov byte [rcx + 6], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015df	     0xf84bbf8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015e5	         0xfb67a07	               movzx edi, byte [rdx + 7]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015e9	          0x83f807	                              cmp eax, 7	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015ec	        0x40887907	                 mov byte [rcx + 7], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015f0	     0xf84aaf8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015f6	         0xfb67a08	               movzx edi, byte [rdx + 8]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x40015fa	          0x83f808	                              cmp eax, 8	       766	tekhex.c	FUNCTION_17	WHILE_1
0x40015fd	        0x40887908	                 mov byte [rcx + 8], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001601	     0xf8499f8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001607	         0xfb67a09	               movzx edi, byte [rdx + 9]	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400160b	          0x83f809	                              cmp eax, 9	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400160e	        0x40887909	                 mov byte [rcx + 9], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001612	     0xf8488f8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001618	         0xfb67a0a	            movzx edi, byte [rdx + 0xa] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400161c	          0x83f80a	                            cmp eax, 0xa	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400161f	        0x4088790a	               mov byte [rcx + 0xa], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001623	     0xf8477f8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001629	         0xfb67a0b	            movzx edi, byte [rdx + 0xb] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400162d	          0x83f80b	                            cmp eax, 0xb	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001630	        0x4088790b	               mov byte [rcx + 0xb], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001634	     0xf8466f8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400163a	         0xfb67a0c	            movzx edi, byte [rdx + 0xc] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400163e	          0x83f80c	                            cmp eax, 0xc	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001641	        0x4088790c	               mov byte [rcx + 0xc], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001645	     0xf8455f8ffff	                            je 0x4000ea0	       766	tekhex.c	FUNCTION_17	WHILE_1
0x400164b	         0xfb6420d	            movzx eax, byte [rdx + 0xd] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400164f	          0x88410d	                mov byte [rcx + 0xd], al	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001652	      0xe949f8ffff	                           jmp 0x4000ea0	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001657	         0xfb67d0f	            movzx edi, byte [rbp + 0xf] 	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400165b	          0x4c89e9	                            mov rcx, r13	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400165e	          0x83e811	                           sub eax, 0x11	       766	tekhex.c	FUNCTION_17	WHILE_1
0x4001661	      0x40887c2430	              mov byte [rsp + 0x30], dil	       767	tekhex.c	FUNCTION_17	WHILE_1
0x4001666	      0xe906ffffff	                           jmp 0x4001571	       767	tekhex.c	FUNCTION_17	WHILE_1
0x400166b	      0xb837000000	                           mov eax, 0x37	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001670	      0xbe07000000	                              mov esi, 7	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001675	    0x41b818000000	                           mov r8d, 0x18	       722	tekhex.c	FUNCTION_16	FOR_1
0x400167b	          0x4489c1	                            mov ecx, r8d	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400167e	            0x8807	                      mov byte [rdi], al	       726	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001680	          0x4889d0	                            mov rax, rdx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001683	          0x48d3e8	                             shr rax, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001686	        0x418d48fc	                       lea ecx, [r8 - 4]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400168a	          0x4989d2	                            mov r10, rdx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400168d	          0x83e00f	                            and eax, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001690	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001693	     0xfb680000000	                   movzx eax, byte [rax]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400169a	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400169d	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016a0	          0x83fe02	                              cmp esi, 2	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016a3	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016aa	          0x884701	                  mov byte [rdi + 1], al	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016ad	          0x8d46ff	                      lea eax, [rsi - 1]	       731	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016b0	          0x884f02	                  mov byte [rdi + 2], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016b3	        0x418d48f8	                       lea ecx, [r8 - 8]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016b7	     0xf84af000000	                            je 0x400176c	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016bd	          0x4989d3	                            mov r11, rdx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016c0	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016c3	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016c6	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016c9	          0x83fe03	                              cmp esi, 3	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016cc	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016d3	          0x884f03	                  mov byte [rdi + 3], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016d6	        0x418d48f4	                     lea ecx, [r8 - 0xc]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016da	     0xf848c000000	                            je 0x400176c	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016e0	          0x4989d2	                            mov r10, rdx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016e3	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016e6	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016e9	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016ec	          0x83fe04	                              cmp esi, 4	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016ef	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016f6	          0x884f04	                  mov byte [rdi + 4], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016f9	        0x418d48f0	                    lea ecx, [r8 - 0x10]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016fd	            0x746d	                            je 0x400176c	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40016ff	          0x4989d3	                            mov r11, rdx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001702	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001705	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001708	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400170b	          0x83fe05	                              cmp esi, 5	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400170e	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001715	          0x884f05	                  mov byte [rdi + 5], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001718	        0x418d48ec	                    lea ecx, [r8 - 0x14]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400171c	            0x744e	                            je 0x400176c	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400171e	          0x4989d2	                            mov r10, rdx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001721	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001724	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001727	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400172a	          0x83fe06	                              cmp esi, 6	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400172d	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001734	          0x884f06	                  mov byte [rdi + 6], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001737	        0x418d48e8	                    lea ecx, [r8 - 0x18]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400173b	            0x742f	                            je 0x400176c	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400173d	          0x4989d3	                            mov r11, rdx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001740	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001743	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001746	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001749	          0x83fe07	                              cmp esi, 7	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400174c	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001753	          0x884f07	                  mov byte [rdi + 7], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001756	        0x418d48e4	                    lea ecx, [r8 - 0x1c]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400175a	            0x7410	                            je 0x400176c	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400175c	          0x48d3ea	                             shr rdx, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400175f	          0x83e20f	                            and edx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001762	     0xfb692000000	                   movzx edx, byte [rdx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001769	          0x885708	                  mov byte [rdi + 8], dl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400176c	            0x4898	                                    cdqe	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400176e	      0x488d540702	                lea rdx, [rdi + rax + 2]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001773	      0xe9b7f8ffff	                           jmp 0x400102f	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001778	      0xb838000000	                           mov eax, 0x38	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400177d	      0xbe08000000	                              mov esi, 8	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001782	    0x41b81c000000	                           mov r8d, 0x1c	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001788	      0xe9eefeffff	                           jmp 0x400167b	       722	tekhex.c	FUNCTION_16	FOR_1
0x400178d	      0xb832000000	                           mov eax, 0x32	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001792	      0xbe02000000	                              mov esi, 2	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001797	    0x41b804000000	                              mov r8d, 4	       722	tekhex.c	FUNCTION_16	FOR_1
0x400179d	      0xe9d9feffff	                           jmp 0x400167b	       722	tekhex.c	FUNCTION_16	FOR_1
0x40017a2	      0xe800000000	                          call 0x40017a7	       903	tekhex.c	FUNCTION_19
0x40017a7	    0xc70500000000	               mov dword [0x040017b1], 1	       212	tekhex.c	FUNCTION_1	IF_1
0x40017b1	      0xe800000000	                          call 0x40017b6	       213	tekhex.c	FUNCTION_1	IF_1	CALL_1
0x40017b6	    0x660f6f050000	       movdqa xmm0, xmmword [0x040017be]	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x40017be	    0xc60500000000	                mov byte [0x040017c5], 0	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x40017c5	    0xc60500000000	                mov byte [0x040017cc], 1	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x40017cc	     0xf1105000000	      movups xmmword [0x040017d3], xmm0 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x40017d3	    0xc60500000000	                mov byte [0x040017da], 2	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x40017da	    0xc60500000000	                mov byte [0x040017e1], 3	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x40017e1	    0x660f6f050000	       movdqa xmm0, xmmword [0x040017e9]	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x40017e9	    0xc60500000000	                mov byte [0x040017f0], 4	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x40017f0	    0xc60500000000	                mov byte [0x040017f7], 5	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x40017f7	    0xc60500000000	                mov byte [0x040017fe], 6	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x40017fe	    0xc60500000000	                mov byte [0x04001805], 7	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x4001805	    0xc60500000000	                mov byte [0x0400180c], 8	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x400180c	    0xc60500000000	                mov byte [0x04001813], 9	       216	tekhex.c	FUNCTION_1	IF_1	FOR_1
0x4001813	    0xc60500000000	            mov byte [0x0400181a], 0x1a 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x400181a	    0xc60500000000	            mov byte [0x04001821], 0x1b 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x4001821	    0xc60500000000	            mov byte [0x04001828], 0x1c 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x4001828	    0xc60500000000	            mov byte [0x0400182f], 0x1d 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x400182f	    0xc60500000000	            mov byte [0x04001836], 0x1e 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x4001836	    0xc60500000000	            mov byte [0x0400183d], 0x1f 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x400183d	    0xc60500000000	            mov byte [0x04001844], 0x20 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x4001844	    0xc60500000000	            mov byte [0x0400184b], 0x21 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x400184b	    0xc60500000000	            mov byte [0x04001852], 0x22 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x4001852	    0xc60500000000	            mov byte [0x04001859], 0x23 	       219	tekhex.c	FUNCTION_1	IF_1	FOR_2
0x4001859	    0xc60500000000	            mov byte [0x04001860], 0x24 	       221	tekhex.c	FUNCTION_1	IF_1
0x4001860	    0xc60500000000	            mov byte [0x04001867], 0x25 	       222	tekhex.c	FUNCTION_1	IF_1
0x4001867	    0xc60500000000	            mov byte [0x0400186e], 0x26 	       223	tekhex.c	FUNCTION_1	IF_1
0x400186e	    0xc60500000000	            mov byte [0x04001875], 0x27 	       224	tekhex.c	FUNCTION_1	IF_1
0x4001875	     0xf1105000000	      movups xmmword [0x0400187c], xmm0 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x400187c	    0xc60500000000	            mov byte [0x04001883], 0x38 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x4001883	    0xc60500000000	            mov byte [0x0400188a], 0x39 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x400188a	    0xc60500000000	            mov byte [0x04001891], 0x3a 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x4001891	    0xc60500000000	            mov byte [0x04001898], 0x3b 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x4001898	    0xc60500000000	            mov byte [0x0400189f], 0x3c 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x400189f	    0xc60500000000	            mov byte [0x040018a6], 0x3d 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x40018a6	    0xc60500000000	            mov byte [0x040018ad], 0x3e 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x40018ad	    0xc60500000000	            mov byte [0x040018b4], 0x3f 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x40018b4	    0xc60500000000	            mov byte [0x040018bb], 0x40 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x40018bb	    0xc60500000000	            mov byte [0x040018c2], 0x41 	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x40018c2	      0xe9eeecffff	                           jmp 0x40005b5	       226	tekhex.c	FUNCTION_1	IF_1	FOR_3
0x40018c7	      0xba00000000	                              mov edx, 0	       901	tekhex.c	FUNCTION_19	CALL_15
0x40018cc	      0xbe85030000	                          mov esi, 0x385	       901	tekhex.c	FUNCTION_19	CALL_15
0x40018d1	      0xbf00000000	                              mov edi, 0	       901	tekhex.c	FUNCTION_19	CALL_15
0x40018d6	      0xe800000000	                          call 0x40018db	       901	tekhex.c	FUNCTION_19	CALL_15
0x40018db	      0xb833000000	                           mov eax, 0x33	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x40018e0	      0xbe03000000	                              mov esi, 3	       722	tekhex.c	FUNCTION_16	FOR_1
0x40018e5	    0x41b808000000	                              mov r8d, 8	       722	tekhex.c	FUNCTION_16	FOR_1
0x40018eb	      0xe98bfdffff	                           jmp 0x400167b	       722	tekhex.c	FUNCTION_16	FOR_1
0x40018f0	      0xb834000000	                           mov eax, 0x34	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x40018f5	      0xbe04000000	                              mov esi, 4	       722	tekhex.c	FUNCTION_16	FOR_1
0x40018fa	    0x41b80c000000	                            mov r8d, 0xc	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001900	      0xe976fdffff	                           jmp 0x400167b	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001905	      0xb835000000	                           mov eax, 0x35	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400190a	      0xbe05000000	                              mov esi, 5	       722	tekhex.c	FUNCTION_16	FOR_1
0x400190f	    0x41b810000000	                           mov r8d, 0x10	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001915	      0xe961fdffff	                           jmp 0x400167b	       722	tekhex.c	FUNCTION_16	FOR_1
0x400191a	      0xb836000000	                           mov eax, 0x36	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x400191f	      0xbe06000000	                              mov esi, 6	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001924	    0x41b814000000	                           mov r8d, 0x14	       722	tekhex.c	FUNCTION_16	FOR_1
0x400192a	      0xe94cfdffff	                           jmp 0x400167b	       722	tekhex.c	FUNCTION_16	FOR_1
0x400192f	      0xb932000000	                           mov ecx, 0x32	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001934	      0xbf02000000	                              mov edi, 2	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001939	      0xba04000000	                              mov edx, 4	       722	tekhex.c	FUNCTION_16	FOR_1
0x400193e	            0x880e	                      mov byte [rsi], cl	       726	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001940	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001943	            0x89d1	                            mov ecx, edx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001945	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001948	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400194b	        0x448d47ff	                      lea r8d, [rdi - 1]	       731	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400194f	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001952	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001955	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400195c	          0x884e01	                  mov byte [rsi + 1], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400195f	          0x8d4afc	                      lea ecx, [rdx - 4]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001962	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001965	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001968	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400196b	          0x83ff02	                              cmp edi, 2	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400196e	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001975	          0x884e02	                  mov byte [rsi + 2], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001978	          0x8d4af8	                      lea ecx, [rdx - 8]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400197b	     0xf84aa000000	                            je 0x4001a2b	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001981	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001984	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001987	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400198a	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400198d	          0x83ff03	                              cmp edi, 3	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001990	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001997	          0x884e03	                  mov byte [rsi + 3], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400199a	          0x8d4af4	                    lea ecx, [rdx - 0xc]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x400199d	     0xf8488000000	                            je 0x4001a2b	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019a3	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019a6	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019a9	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019ac	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019af	          0x83ff04	                              cmp edi, 4	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019b2	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019b9	          0x884e04	                  mov byte [rsi + 4], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019bc	          0x8d4af0	                   lea ecx, [rdx - 0x10]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019bf	            0x746a	                            je 0x4001a2b	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019c1	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019c4	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019c7	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019ca	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019cd	          0x83ff05	                              cmp edi, 5	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019d0	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019d7	          0x884e05	                  mov byte [rsi + 5], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019da	          0x8d4aec	                   lea ecx, [rdx - 0x14]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019dd	            0x744c	                            je 0x4001a2b	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019df	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019e2	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019e5	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019e8	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019eb	          0x83ff06	                              cmp edi, 6	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019ee	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019f5	          0x884e06	                  mov byte [rsi + 6], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019f8	          0x8d4ae8	                   lea ecx, [rdx - 0x18]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019fb	            0x742e	                            je 0x4001a2b	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x40019fd	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a00	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a03	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a06	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a09	          0x83ff07	                              cmp edi, 7	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a0c	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a13	          0x884e07	                  mov byte [rsi + 7], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a16	          0x8d4ae4	                   lea ecx, [rdx - 0x1c]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a19	            0x7410	                            je 0x4001a2b	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a1b	          0x48d3e8	                             shr rax, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a1e	          0x83e00f	                            and eax, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a21	     0xfb680000000	                   movzx eax, byte [rax]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a28	          0x884608	                  mov byte [rsi + 8], al	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a2b	          0x4d63c0	                          movsxd r8, r8d	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a2e	      0x4a8d540602	                 lea rdx, [rsi + r8 + 2]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a33	      0xe9c7f0ffff	                           jmp 0x4000aff	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a38	      0xb933000000	                           mov ecx, 0x33	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001a3d	      0xbf03000000	                              mov edi, 3	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001a42	      0xba08000000	                              mov edx, 8	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001a47	      0xe9f2feffff	                           jmp 0x400193e	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001a4c	      0xba00000000	                              mov edx, 0	       792	tekhex.c	FUNCTION_18	CALL_2
0x4001a51	      0xbe18030000	                          mov esi, 0x318	       792	tekhex.c	FUNCTION_18	CALL_2
0x4001a56	      0xbf00000000	                              mov edi, 0	       792	tekhex.c	FUNCTION_18	CALL_2
0x4001a5b	      0xe800000000	                          call 0x4001a60	       792	tekhex.c	FUNCTION_18	CALL_2
0x4001a60	      0xb935000000	                           mov ecx, 0x35	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001a65	      0xbe05000000	                              mov esi, 5	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001a6a	      0xba10000000	                           mov edx, 0x10	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001a6f	          0x884f01	                  mov byte [rdi + 1], cl	       726	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001a72	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a75	            0x89d1	                            mov ecx, edx	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a77	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a7a	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a7d	        0x4c8d4f02	                       lea r9, [rdi + 2]	       726	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001a81	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a84	        0x448d46ff	                      lea r8d, [rsi - 1]	       731	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a88	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a8b	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a92	          0x884f02	                  mov byte [rdi + 2], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a95	          0x8d4afc	                      lea ecx, [rdx - 4]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a98	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a9b	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001a9e	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001aa1	          0x83fe02	                              cmp esi, 2	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001aa4	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001aab	          0x884f03	                  mov byte [rdi + 3], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001aae	          0x8d4af8	                      lea ecx, [rdx - 8]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ab1	     0xf84aa000000	                            je 0x4001b61	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ab7	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001aba	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001abd	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ac0	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ac3	          0x83fe03	                              cmp esi, 3	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ac6	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001acd	          0x884f04	                  mov byte [rdi + 4], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ad0	          0x8d4af4	                    lea ecx, [rdx - 0xc]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ad3	     0xf8488000000	                            je 0x4001b61	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ad9	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001adc	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001adf	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ae2	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ae5	          0x83fe04	                              cmp esi, 4	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001ae8	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001aef	          0x884f05	                  mov byte [rdi + 5], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001af2	          0x8d4af0	                   lea ecx, [rdx - 0x10]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001af5	            0x746a	                            je 0x4001b61	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001af7	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001afa	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001afd	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b00	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b03	          0x83fe05	                              cmp esi, 5	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b06	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b0d	          0x884f06	                  mov byte [rdi + 6], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b10	          0x8d4aec	                   lea ecx, [rdx - 0x14]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b13	            0x744c	                            je 0x4001b61	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b15	          0x4989c2	                            mov r10, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b18	          0x49d3ea	                             shr r10, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b1b	          0x4c89d1	                            mov rcx, r10	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b1e	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b21	          0x83fe06	                              cmp esi, 6	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b24	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b2b	          0x884f07	                  mov byte [rdi + 7], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b2e	          0x8d4ae8	                   lea ecx, [rdx - 0x18]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b31	            0x742e	                            je 0x4001b61	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b33	          0x4989c3	                            mov r11, rax	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b36	          0x49d3eb	                             shr r11, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b39	          0x4c89d9	                            mov rcx, r11	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b3c	          0x83e10f	                            and ecx, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b3f	          0x83fe07	                              cmp esi, 7	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b42	     0xfb689000000	                   movzx ecx, byte [rcx]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b49	          0x884f08	                  mov byte [rdi + 8], cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b4c	          0x8d4ae4	                   lea ecx, [rdx - 0x1c]	       730	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b4f	            0x7410	                            je 0x4001b61	       727	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b51	          0x48d3e8	                             shr rax, cl	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b54	          0x83e00f	                            and eax, 0xf	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b57	     0xfb680000000	                   movzx eax, byte [rax]	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b5e	          0x884709	                  mov byte [rdi + 9], al	       729	tekhex.c	FUNCTION_16	FOR_1	IF_1	WHILE_1
0x4001b61	        0x498b4738	            mov rax, qword [r15 + 0x38] 	       843	tekhex.c	FUNCTION_19	FOR_4	CALL_6
0x4001b65	        0x49034728	             add rax, qword [r15 + 0x28]	       843	tekhex.c	FUNCTION_19	FOR_4	CALL_6
0x4001b69	          0x4d63c0	                          movsxd r8, r8d	       843	tekhex.c	FUNCTION_19	FOR_4	CALL_6
0x4001b6c	      0x4b8d740101	                  lea rsi, [r9 + r8 + 1]	       843	tekhex.c	FUNCTION_19	FOR_4	CALL_6
0x4001b71	      0xa9000000f0	                    test eax, 0xf0000000	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001b76	     0xf843defffff	                            je 0x4000ab9	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001b7c	      0xb938000000	                           mov ecx, 0x38	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001b81	      0xbf08000000	                              mov edi, 8	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001b86	      0xba1c000000	                           mov edx, 0x1c	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001b8b	      0xe9aefdffff	                           jmp 0x400193e	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001b90	      0xb936000000	                           mov ecx, 0x36	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001b95	      0xbe06000000	                              mov esi, 6	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001b9a	      0xba14000000	                           mov edx, 0x14	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001b9f	      0xe9cbfeffff	                           jmp 0x4001a6f	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001ba4	      0xb937000000	                           mov ecx, 0x37	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001ba9	      0xbe07000000	                              mov esi, 7	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bae	      0xba18000000	                           mov edx, 0x18	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bb3	      0xe9b7feffff	                           jmp 0x4001a6f	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bb8	      0xb938000000	                           mov ecx, 0x38	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001bbd	      0xbe08000000	                              mov esi, 8	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bc2	      0xba1c000000	                           mov edx, 0x1c	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bc7	      0xe9a3feffff	                           jmp 0x4001a6f	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bcc	      0xb934000000	                           mov ecx, 0x34	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001bd1	      0xbf04000000	                              mov edi, 4	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bd6	      0xba0c000000	                            mov edx, 0xc	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bdb	      0xe95efdffff	                           jmp 0x400193e	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001be0	      0xb935000000	                           mov ecx, 0x35	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001be5	      0xbf05000000	                              mov edi, 5	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bea	      0xba10000000	                           mov edx, 0x10	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bef	      0xe94afdffff	                           jmp 0x400193e	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bf4	      0xb936000000	                           mov ecx, 0x36	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001bf9	      0xbf06000000	                              mov edi, 6	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001bfe	      0xba14000000	                           mov edx, 0x14	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c03	      0xe936fdffff	                           jmp 0x400193e	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c08	      0xb937000000	                           mov ecx, 0x37	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001c0d	      0xbf07000000	                              mov edi, 7	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c12	      0xba18000000	                           mov edx, 0x18	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c17	      0xe922fdffff	                           jmp 0x400193e	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c1c	      0xb932000000	                           mov ecx, 0x32	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001c21	      0xbe02000000	                              mov esi, 2	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c26	      0xba04000000	                              mov edx, 4	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c2b	      0xe93ffeffff	                           jmp 0x4001a6f	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c30	      0xb933000000	                           mov ecx, 0x33	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001c35	      0xbe03000000	                              mov esi, 3	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c3a	      0xba08000000	                              mov edx, 8	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c3f	      0xe92bfeffff	                           jmp 0x4001a6f	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c44	      0xb934000000	                           mov ecx, 0x34	       724	tekhex.c	FUNCTION_16	FOR_1	IF_1
0x4001c49	      0xbe04000000	                              mov esi, 4	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c4e	      0xba0c000000	                            mov edx, 0xc	       722	tekhex.c	FUNCTION_16	FOR_1
0x4001c53	      0xe917feffff	                           jmp 0x4001a6f	       722	tekhex.c	FUNCTION_16	FOR_1
tekhex_get_section_contents	FOR,0:functions,0:DO,0:WHILE,0:CALL,1:SWITCH,0:IF,1:ELSE,0	67
0x4000490	        0xf6462003	               test byte [rsi + 0x20], 3	       677	tekhex.c	FUNCTION_13	IF_1
0x4000494	            0x750a	                           jne 0x40004a0	       677	tekhex.c	FUNCTION_13	IF_1
0x4000496	            0x31c0	                            xor eax, eax	       677	tekhex.c	FUNCTION_13	IF_1
0x4000498	              0xc3	                                     ret	       677	tekhex.c	FUNCTION_13	IF_1
0x4000499	     0xf1f80000000	                         nop dword [rax]	       677	tekhex.c	FUNCTION_13	IF_1
0x40004a0	            0x4155	                                push r13	       676	tekhex.c	FUNCTION_13
0x40004a2	            0x4154	                                push r12	       676	tekhex.c	FUNCTION_13
0x40004a4	          0x4d89c5	                             mov r13, r8	       676	tekhex.c	FUNCTION_13
0x40004a7	              0x55	                                push rbp	       676	tekhex.c	FUNCTION_13
0x40004a8	              0x53	                                push rbx	       676	tekhex.c	FUNCTION_13
0x40004a9	          0x4989d4	                            mov r12, rdx	       676	tekhex.c	FUNCTION_13
0x40004ac	          0x4889f5	                            mov rbp, rsi	       676	tekhex.c	FUNCTION_13
0x40004af	          0x4889fb	                            mov rbx, rdi	       676	tekhex.c	FUNCTION_13
0x40004b2	        0x4883ec08	                              sub rsp, 8	       676	tekhex.c	FUNCTION_13
0x40004b6	          0x4885c9	                           test rcx, rcx	       638	tekhex.c	FUNCTION_12	CALL_1
0x40004b9	     0xf85a9000000	                           jne 0x4000568	       638	tekhex.c	FUNCTION_12	CALL_1
0x40004bf	          0x4d85ed	                           test r13, r13	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004c2	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004c6	     0xf848c000000	                            je 0x4000558	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004cc	          0x4c89e2	                            mov rdx, r12	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004cf	      0x4d8d543500	                    lea r10, [r13 + rsi]	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004d4	            0x31c0	                            xor eax, eax	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004d6	    0x41b801000000	                              mov r8d, 1	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004dc	          0x4829f2	                            sub rdx, rsi	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004df	            0xeb21	                           jmp 0x4000502	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004e1	     0xf1f80000000	                         nop dword [rax]	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004e8	          0x4885c0	                           test rax, rax	       655	tekhex.c	FUNCTION_12	FOR_1	IF_2	IF_3
0x40004eb	            0x7458	                            je 0x4000545	       655	tekhex.c	FUNCTION_12	FOR_1	IF_2	IF_3
0x40004ed	      0x460fb60408	              movzx r8d, byte [rax + r9]	       656	tekhex.c	FUNCTION_12	FOR_1	IF_2	IF_3
0x40004f2	        0x44880432	               mov byte [rdx + rsi], r8b	       656	tekhex.c	FUNCTION_12	FOR_1	IF_2	IF_3
0x40004f6	        0x4883c601	                              add rsi, 1	       639	tekhex.c	FUNCTION_12	FOR_1
0x40004fa	          0x4989c8	                             mov r8, rcx	       642	tekhex.c	FUNCTION_12	FOR_1
0x40004fd	          0x4c39d6	                            cmp rsi, r10	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000500	            0x7456	                            je 0x4000558	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000502	          0x4889f1	                            mov rcx, rsi	       642	tekhex.c	FUNCTION_12	FOR_1
0x4000505	          0x4989f1	                             mov r9, rsi	       643	tekhex.c	FUNCTION_12	FOR_1
0x4000508	    0x4881e100e0ff	             and rcx, 0xffffffffffffe000	       642	tekhex.c	FUNCTION_12	FOR_1
0x400050f	    0x4181e1ff1f00	                         and r9d, 0x1fff	       643	tekhex.c	FUNCTION_12	FOR_1
0x4000516	          0x4c39c1	                             cmp rcx, r8	       646	tekhex.c	FUNCTION_12	FOR_1	IF_1
0x4000519	            0x74cd	                            je 0x40004e8	       646	tekhex.c	FUNCTION_12	FOR_1	IF_1
0x400051b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       321	tekhex.c	FUNCTION_4
0x4000522	        0x488b4018	            mov rax, qword [rax + 0x18] 	       321	tekhex.c	FUNCTION_4
0x4000526	          0x4885c0	                           test rax, rax	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000529	            0x741a	                            je 0x4000545	       324	tekhex.c	FUNCTION_4	WHILE_1
0x400052b	       0xf1f440000	                   nop dword [rax + rax]	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000530	    0x483b88002100	          cmp rcx, qword [rax + 0x2100] 	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000537	            0x74b4	                            je 0x40004ed	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000539	    0x488b80082100	          mov rax, qword [rax + 0x2108] 	       325	tekhex.c	FUNCTION_4	WHILE_1
0x4000540	          0x4885c0	                           test rax, rax	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000543	            0x75eb	                           jne 0x4000530	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000545	          0x4531c0	                            xor r8d, r8d	       658	tekhex.c	FUNCTION_12	FOR_1	IF_2	ELSE_1
0x4000548	        0x44880432	               mov byte [rdx + rsi], r8b	       658	tekhex.c	FUNCTION_12	FOR_1	IF_2	ELSE_1
0x400054c	        0x4883c601	                              add rsi, 1	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000550	          0x4989c8	                             mov r8, rcx	       642	tekhex.c	FUNCTION_12	FOR_1
0x4000553	          0x4c39d6	                            cmp rsi, r10	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000556	            0x75aa	                           jne 0x4000502	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000558	        0x4883c408	                              add rsp, 8	       684	tekhex.c	FUNCTION_13
0x400055c	      0xb801000000	                              mov eax, 1	       680	tekhex.c	FUNCTION_13	IF_1
0x4000561	              0x5b	                                 pop rbx	       684	tekhex.c	FUNCTION_13
0x4000562	              0x5d	                                 pop rbp	       684	tekhex.c	FUNCTION_13
0x4000563	            0x415c	                                 pop r12	       684	tekhex.c	FUNCTION_13
0x4000565	            0x415d	                                 pop r13	       684	tekhex.c	FUNCTION_13
0x4000567	              0xc3	                                     ret	       684	tekhex.c	FUNCTION_13
0x4000568	      0xbe7e020000	                          mov esi, 0x27e	       638	tekhex.c	FUNCTION_12	CALL_1
0x400056d	      0xbf00000000	                              mov edi, 0	       638	tekhex.c	FUNCTION_12	CALL_1
0x4000572	      0xe800000000	                          call 0x4000577	       638	tekhex.c	FUNCTION_12	CALL_1
0x4000577	      0xe943ffffff	                           jmp 0x40004bf	       638	tekhex.c	FUNCTION_12	CALL_1
first_phase	FOR,0:functions,0:DO,0:WHILE,2:CALL,18:SWITCH,2:IF,25:ELSE,5	532
0x4001c60	            0x4157	                                push r15	       361	tekhex.c	FUNCTION_6
0x4001c62	            0x4156	                                push r14	       361	tekhex.c	FUNCTION_6
0x4001c64	            0x4155	                                push r13	       361	tekhex.c	FUNCTION_6
0x4001c66	            0x4154	                                push r12	       361	tekhex.c	FUNCTION_6
0x4001c68	          0x4989fc	                            mov r12, rdi	       361	tekhex.c	FUNCTION_6
0x4001c6b	              0x55	                                push rbp	       361	tekhex.c	FUNCTION_6
0x4001c6c	              0x53	                                push rbx	       361	tekhex.c	FUNCTION_6
0x4001c6d	          0x4889cd	                            mov rbp, rcx	       361	tekhex.c	FUNCTION_6
0x4001c70	        0x4883ec48	                           sub rsp, 0x48	       361	tekhex.c	FUNCTION_6
0x4001c74	    0x64488b042528	                mov rax, qword fs:[0x28]	       361	tekhex.c	FUNCTION_6
0x4001c7d	      0x4889442438	             mov qword [rsp + 0x38], rax	       361	tekhex.c	FUNCTION_6
0x4001c82	            0x31c0	                            xor eax, eax	       361	tekhex.c	FUNCTION_6
0x4001c84	          0x83fe33	                           cmp esi, 0x33	       367	tekhex.c	FUNCTION_6	SWITCH_1
0x4001c87	     0xf8483010000	                            je 0x4001e10	       367	tekhex.c	FUNCTION_6	SWITCH_1
0x4001c8d	          0x83fe36	                           cmp esi, 0x36	       367	tekhex.c	FUNCTION_6	SWITCH_1
0x4001c90	            0x742e	                            je 0x4001cc0	       367	tekhex.c	FUNCTION_6	SWITCH_1
0x4001c92	      0xb801000000	                              mov eax, 1	       505	tekhex.c	FUNCTION_6
0x4001c97	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       506	tekhex.c	FUNCTION_6
0x4001c9c	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       506	tekhex.c	FUNCTION_6
0x4001ca5	     0xf8514080000	                           jne 0x40024bf	       506	tekhex.c	FUNCTION_6
0x4001cab	        0x4883c448	                           add rsp, 0x48	       506	tekhex.c	FUNCTION_6
0x4001caf	              0x5b	                                 pop rbx	       506	tekhex.c	FUNCTION_6
0x4001cb0	              0x5d	                                 pop rbp	       506	tekhex.c	FUNCTION_6
0x4001cb1	            0x415c	                                 pop r12	       506	tekhex.c	FUNCTION_6
0x4001cb3	            0x415d	                                 pop r13	       506	tekhex.c	FUNCTION_6
0x4001cb5	            0x415e	                                 pop r14	       506	tekhex.c	FUNCTION_6
0x4001cb7	            0x415f	                                 pop r15	       506	tekhex.c	FUNCTION_6
0x4001cb9	              0xc3	                                     ret	       506	tekhex.c	FUNCTION_6
0x4001cba	    0x660f1f440000	                    nop word [rax + rax]	       506	tekhex.c	FUNCTION_6
0x4001cc0	          0x4839d1	                            cmp rcx, rdx	       276	tekhex.c	FUNCTION_2	IF_1
0x4001cc3	     0xf863f010000	                           jbe 0x4001e08	       276	tekhex.c	FUNCTION_2	IF_1
0x4001cc9	           0xfb602	                   movzx eax, byte [rdx]	       279	tekhex.c	FUNCTION_2	IF_2
0x4001ccc	     0xfb680000000	                   movzx eax, byte [rax]	       279	tekhex.c	FUNCTION_2	IF_2
0x4001cd3	            0x3c63	                            cmp al, 0x63	       279	tekhex.c	FUNCTION_2	IF_2
0x4001cd5	     0xf842d010000	                            je 0x4001e08	       279	tekhex.c	FUNCTION_2	IF_2
0x4001cdb	            0x85c0	                           test eax, eax	       283	tekhex.c	FUNCTION_2	IF_3
0x4001cdd	        0x488d5a01	                      lea rbx, [rdx + 1]	       282	tekhex.c	FUNCTION_2	CALL_1
0x4001ce1	     0xf8429060000	                            je 0x4002310	       283	tekhex.c	FUNCTION_2	IF_3
0x4001ce7	          0x4839dd	                            cmp rbp, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001cea	          0x8d48ff	                      lea ecx, [rax - 1]	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001ced	     0xf8615010000	                           jbe 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001cf3	         0xfb64201	               movzx eax, byte [rdx + 1]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001cf7	          0x4531ed	                          xor r13d, r13d	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001cfa	          0x8d51ff	                      lea edx, [rcx - 1]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001cfd	     0xfb680000000	                   movzx eax, byte [rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d04	            0x3c63	                            cmp al, 0x63	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d06	            0x7526	                           jne 0x4001d2e	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d08	      0xe9fb000000	                           jmp 0x4001e08	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d0d	           0xf1f00	                         nop dword [rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d10	          0x4839dd	                            cmp rbp, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001d13	     0xf84ef000000	                            je 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001d19	           0xfb603	                   movzx eax, byte [rbx]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d1c	          0x83ea01	                              sub edx, 1	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d1f	     0xfb680000000	                   movzx eax, byte [rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d26	            0x3c63	                            cmp al, 0x63	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d28	     0xf84da000000	                            je 0x4001e08	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001d2e	        0x49c1e504	                              shl r13, 4	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001d32	        0x4883c301	                              add rbx, 1	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001d36	          0x4909c5	                             or r13, rax	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001d39	          0x83faff	             cmp edx, 0xffffffffffffffff	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001d3c	            0x75d2	                           jne 0x4001d10	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001d3e	           0xfb603	                   movzx eax, byte [rbx]	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d41	            0x84c0	                             test al, al	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d43	     0xf8449ffffff	                            je 0x4001c92	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d49	        0x4883ed01	                              sub rbp, 1	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d4d	          0x4839dd	                            cmp rbp, rbx	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d50	            0x772a	                            ja 0x4001d7c	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d52	      0xe93bffffff	                           jmp 0x4001c92	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d57	    0x660f1f840000	                    nop word [rax + rax]	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d60	        0x4883c302	                              add rbx, 2	       380	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d64	           0xfb603	                   movzx eax, byte [rbx]	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d67	        0x4983c501	                              add r13, 1	       381	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d6b	            0x84c0	                             test al, al	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d6d	     0xf841fffffff	                            je 0x4001c92	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d73	          0x4839eb	                            cmp rbx, rbp	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d76	     0xf8316ffffff	                           jae 0x4001c92	       377	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1
0x4001d7c	         0xfb65301	               movzx edx, byte [rbx + 1]	       379	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1	CALL_2
0x4001d80	     0xfb680000000	                   movzx eax, byte [rax]	       379	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1	CALL_2
0x4001d87	     0xfb692000000	                   movzx edx, byte [rdx]	       379	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1	CALL_2
0x4001d8e	          0xc1e004	                              shl eax, 4	       379	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_1	CALL_2
0x4001d91	             0x1d0	                            add eax, edx	       346	tekhex.c	FUNCTION_5	IF_1
0x4001d93	          0x4189c7	                           mov r15d, eax	       346	tekhex.c	FUNCTION_5	IF_1
0x4001d96	            0x74c8	                            je 0x4001d60	       346	tekhex.c	FUNCTION_5	IF_1
0x4001d98	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	       321	tekhex.c	FUNCTION_4
0x4001da0	          0x4d89ee	                            mov r14, r13	       323	tekhex.c	FUNCTION_4
0x4001da3	    0x4981e600e0ff	             and r14, 0xffffffffffffe000	       323	tekhex.c	FUNCTION_4
0x4001daa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       321	tekhex.c	FUNCTION_4
0x4001dae	          0x4885c0	                           test rax, rax	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4001db1	            0x751d	                           jne 0x4001dd0	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4001db3	      0xe950040000	                           jmp 0x4002208	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4001db8	     0xf1f84000000	                   nop dword [rax + rax]	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4001dc0	    0x488b80082100	          mov rax, qword [rax + 0x2108] 	       325	tekhex.c	FUNCTION_4	WHILE_1
0x4001dc7	          0x4885c0	                           test rax, rax	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4001dca	     0xf8438040000	                            je 0x4002208	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4001dd0	    0x4c3bb0002100	          cmp r14, qword [rax + 0x2100] 	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4001dd7	            0x75e7	                           jne 0x4001dc0	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4001dd9	          0x4c89ea	                            mov rdx, r13	       351	tekhex.c	FUNCTION_5	IF_1
0x4001ddc	    0x81e2ff1f0000	                         and edx, 0x1fff	       351	tekhex.c	FUNCTION_5	IF_1
0x4001de2	        0x44883c10	              mov byte [rax + rdx], r15b	       351	tekhex.c	FUNCTION_5	IF_1
0x4001de6	        0x48c1ea05	                              shr rdx, 5	       352	tekhex.c	FUNCTION_5	IF_1
0x4001dea	    0xc68410002000	       mov byte [rax + rdx + 0x2000], 1 	       352	tekhex.c	FUNCTION_5	IF_1
0x4001df2	      0xe969ffffff	                           jmp 0x4001d60	       352	tekhex.c	FUNCTION_5	IF_1
0x4001df7	            0x31c9	                            xor ecx, ecx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001df9	     0xf1f80000000	                         nop dword [rax]	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001e00	        0x49894e28	             mov qword [r14 + 0x28], rcx	       293	tekhex.c	FUNCTION_2
0x4001e04	         0xf1f4000	                         nop dword [rax]	       293	tekhex.c	FUNCTION_2
0x4001e08	            0x31c0	                            xor eax, eax	       412	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_7
0x4001e0a	      0xe988feffff	                           jmp 0x4001c97	       412	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_7
0x4001e0f	              0x90	                                     nop	       412	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_7
0x4001e10	           0xfb602	                   movzx eax, byte [rdx]	       304	tekhex.c	FUNCTION_3	IF_1
0x4001e13	    0x440fb6a80000	                  movzx r13d, byte [rax]	       304	tekhex.c	FUNCTION_3	IF_1
0x4001e1b	        0x4180fd63	                          cmp r13b, 0x63	       304	tekhex.c	FUNCTION_3	IF_1
0x4001e1f	            0x74e7	                            je 0x4001e08	       304	tekhex.c	FUNCTION_3	IF_1
0x4001e21	        0x4883c201	                              add rdx, 1	       307	tekhex.c	FUNCTION_3	CALL_1
0x4001e25	      0xb810000000	                           mov eax, 0x10	       309	tekhex.c	FUNCTION_3	IF_2
0x4001e2a	          0x4585ed	                         test r13d, r13d	       309	tekhex.c	FUNCTION_3	IF_2
0x4001e2d	        0x440f44e8	                         cmove r13d, eax	       309	tekhex.c	FUNCTION_3	IF_2
0x4001e31	          0x4889d3	                            mov rbx, rdx	       309	tekhex.c	FUNCTION_3	IF_2
0x4001e34	            0x31c9	                            xor ecx, ecx	       309	tekhex.c	FUNCTION_3	IF_2
0x4001e36	            0x31c0	                            xor eax, eax	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e38	     0xf1f84000000	                   nop dword [rax + rax]	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e40	          0x4839dd	                            cmp rbp, rbx	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e43	     0xf8627040000	                           jbe 0x4002270	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e49	           0xfb633	                   movzx esi, byte [rbx]	       311	tekhex.c	FUNCTION_3	FOR_1
0x4001e4c	          0x83c001	                              add eax, 1	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e4f	        0x4883c301	                              add rbx, 1	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e53	      0x4c8d7c2420	                   lea r15, [rsp + 0x20]	       311	tekhex.c	FUNCTION_3	FOR_1
0x4001e58	      0x4088740c20	        mov byte [rsp + rcx + 0x20], sil	       311	tekhex.c	FUNCTION_3	FOR_1
0x4001e5d	        0x4883c101	                              add rcx, 1	       311	tekhex.c	FUNCTION_3	FOR_1
0x4001e61	          0x4439e8	                           cmp eax, r13d	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e64	            0x75da	                           jne 0x4001e40	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e66	          0x4489e8	                           mov eax, r13d	       310	tekhex.c	FUNCTION_3	FOR_1
0x4001e69	        0x488d1c02	                    lea rbx, [rdx + rax]	       312	tekhex.c	FUNCTION_3
0x4001e6d	      0xc644042000	          mov byte [rsp + rax + 0x20], 0	       312	tekhex.c	FUNCTION_3
0x4001e72	          0x4c89fe	                            mov rsi, r15	       390	tekhex.c	FUNCTION_6	SWITCH_1	CALL_4
0x4001e75	          0x4c89e7	                            mov rdi, r12	       390	tekhex.c	FUNCTION_6	SWITCH_1	CALL_4
0x4001e78	      0xe800000000	                          call 0x4001e7d	       390	tekhex.c	FUNCTION_6	SWITCH_1	CALL_4
0x4001e7d	          0x4885c0	                           test rax, rax	       391	tekhex.c	FUNCTION_6	SWITCH_1	IF_3
0x4001e80	          0x4989c6	                            mov r14, rax	       390	tekhex.c	FUNCTION_6	SWITCH_1	CALL_4
0x4001e83	     0xf845a050000	                            je 0x40023e3	       391	tekhex.c	FUNCTION_6	SWITCH_1	IF_3
0x4001e89	          0x4839dd	                            cmp rbp, rbx	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001e8c	     0xf8600feffff	                           jbe 0x4001c92	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001e92	           0xfb60b	                   movzx ecx, byte [rbx]	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001e95	            0x84c9	                             test cl, cl	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001e97	     0xf84f5fdffff	                            je 0x4001c92	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001e9d	          0x83e930	                           sub ecx, 0x30	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ea0	          0x80f908	                               cmp cl, 8	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ea3	     0xf875fffffff	                            ja 0x4001e08	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ea9	    0x41bd01000000	                             mov r13d, 1	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001eaf	    0x48c744241800	               mov qword [rsp + 0x18], 0	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001eb8	          0x4c89e8	                            mov rax, r13	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ebb	          0x48d3e0	                             shl rax, cl	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ebe	      0xa9dd010000	                         test eax, 0x1dd	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ec3	     0xf8579010000	                           jne 0x4002042	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ec9	     0xf1f80000000	                         nop dword [rax]	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ed0	            0xa802	                              test al, 2	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ed2	     0xf8430ffffff	                            je 0x4001e08	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4001ed8	        0x488d4301	                      lea rax, [rbx + 1]	       276	tekhex.c	FUNCTION_2	IF_1
0x4001edc	          0x4839c5	                            cmp rbp, rax	       276	tekhex.c	FUNCTION_2	IF_1
0x4001edf	     0xf8623ffffff	                           jbe 0x4001e08	       276	tekhex.c	FUNCTION_2	IF_1
0x4001ee5	         0xfb64301	               movzx eax, byte [rbx + 1]	       279	tekhex.c	FUNCTION_2	IF_2
0x4001ee9	     0xfb690000000	                   movzx edx, byte [rax]	       279	tekhex.c	FUNCTION_2	IF_2
0x4001ef0	          0x80fa63	                            cmp dl, 0x63	       279	tekhex.c	FUNCTION_2	IF_2
0x4001ef3	     0xf840fffffff	                            je 0x4001e08	       279	tekhex.c	FUNCTION_2	IF_2
0x4001ef9	          0x8d4aff	                      lea ecx, [rdx - 1]	       279	tekhex.c	FUNCTION_2	IF_2
0x4001efc	        0x488d4302	                      lea rax, [rbx + 2]	       282	tekhex.c	FUNCTION_2	CALL_1
0x4001f00	            0x85d2	                           test edx, edx	       282	tekhex.c	FUNCTION_2	CALL_1
0x4001f02	      0xba0f000000	                            mov edx, 0xf	       282	tekhex.c	FUNCTION_2	CALL_1
0x4001f07	        0x480f44ca	                          cmove rcx, rdx	       282	tekhex.c	FUNCTION_2	CALL_1
0x4001f0b	          0x4839c5	                            cmp rbp, rax	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001f0e	     0xf86e3feffff	                           jbe 0x4001df7	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001f14	         0xfb65302	               movzx edx, byte [rbx + 2]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f18	     0xfb692000000	                   movzx edx, byte [rdx]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f1f	          0x80fa63	                            cmp dl, 0x63	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f22	     0xf84e0feffff	                            je 0x4001e08	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f28	      0x488d740801	                lea rsi, [rax + rcx + 1]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f2d	            0x31c9	                            xor ecx, ecx	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f2f	            0xeb23	                           jmp 0x4001f54	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f31	     0xf1f80000000	                         nop dword [rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f38	          0x4839c5	                            cmp rbp, rax	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001f3b	     0xf84bffeffff	                            je 0x4001e00	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001f41	           0xfb610	                   movzx edx, byte [rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f44	     0xfb692000000	                   movzx edx, byte [rdx]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f4b	          0x80fa63	                            cmp dl, 0x63	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f4e	     0xf84b4feffff	                            je 0x4001e08	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001f54	          0x4889cf	                            mov rdi, rcx	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001f57	        0x4883c001	                              add rax, 1	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001f5b	           0xfb6ca	                           movzx ecx, dl	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001f5e	        0x48c1e704	                              shl rdi, 4	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001f62	          0x4809f9	                             or rcx, rdi	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001f65	          0x4839f0	                            cmp rax, rsi	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001f68	            0x75ce	                           jne 0x4001f38	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001f6a	          0x4839f5	                            cmp rbp, rsi	       276	tekhex.c	FUNCTION_2	IF_1
0x4001f6d	        0x49894e28	             mov qword [r14 + 0x28], rcx	       293	tekhex.c	FUNCTION_2
0x4001f71	     0xf8691feffff	                           jbe 0x4001e08	       276	tekhex.c	FUNCTION_2	IF_1
0x4001f77	           0xfb606	                   movzx eax, byte [rsi]	       279	tekhex.c	FUNCTION_2	IF_2
0x4001f7a	     0xfb680000000	                   movzx eax, byte [rax]	       279	tekhex.c	FUNCTION_2	IF_2
0x4001f81	            0x3c63	                            cmp al, 0x63	       279	tekhex.c	FUNCTION_2	IF_2
0x4001f83	     0xf847ffeffff	                            je 0x4001e08	       279	tekhex.c	FUNCTION_2	IF_2
0x4001f89	            0x85c0	                           test eax, eax	       283	tekhex.c	FUNCTION_2	IF_3
0x4001f8b	        0x488d5e01	                      lea rbx, [rsi + 1]	       282	tekhex.c	FUNCTION_2	CALL_1
0x4001f8f	     0xf84c3020000	                            je 0x4002258	       283	tekhex.c	FUNCTION_2	IF_3
0x4001f95	          0x83e801	                              sub eax, 1	       283	tekhex.c	FUNCTION_2	IF_3
0x4001f98	          0x4839dd	                            cmp rbp, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001f9b	     0xf8667feffff	                           jbe 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001fa1	         0xfb65601	               movzx edx, byte [rsi + 1]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fa5	     0xfb6b2000000	                   movzx esi, byte [rdx]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fac	        0x4080fe63	                           cmp sil, 0x63	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fb0	     0xf8452feffff	                            je 0x4001e08	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fb6	          0x8d50ff	                      lea edx, [rax - 1]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fb9	            0x31c0	                            xor eax, eax	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fbb	            0xeb23	                           jmp 0x4001fe0	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fbd	           0xf1f00	                         nop dword [rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fc0	          0x4839dd	                            cmp rbp, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001fc3	     0xf843ffeffff	                            je 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001fc9	           0xfb633	                   movzx esi, byte [rbx]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fcc	          0x83ea01	                              sub edx, 1	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fcf	     0xfb6b6000000	                   movzx esi, byte [rsi]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fd6	        0x4080fe63	                           cmp sil, 0x63	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fda	     0xf8428feffff	                            je 0x4001e08	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x4001fe0	        0x48c1e004	                              shl rax, 4	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001fe4	        0x4883c301	                              add rbx, 1	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001fe8	          0x4809f0	                             or rax, rsi	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x4001feb	          0x83faff	             cmp edx, 0xffffffffffffffff	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001fee	            0x75d0	                           jne 0x4001fc0	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4001ff0	          0x4839c1	                            cmp rcx, rax	       415	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4001ff3	        0x480f43c1	                         cmovae rax, rcx	       415	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4001ff7	          0x4829c8	                            sub rax, rcx	       415	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4001ffa	      0xa900000080	                    test eax, 0x80000000	       418	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_9
0x4001fff	        0x49894638	             mov qword [r14 + 0x38], rax	       415	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002003	     0xf85fffdffff	                           jne 0x4001e08	       418	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_9
0x4002009	    0x41c746200301	          mov dword [r14 + 0x20], 0x103 	       420	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002011	          0x4839eb	                            cmp rbx, rbp	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4002014	     0xf8378fcffff	                           jae 0x4001c92	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x400201a	           0xfb60b	                   movzx ecx, byte [rbx]	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x400201d	            0x84c9	                             test cl, cl	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x400201f	     0xf846dfcffff	                            je 0x4001c92	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4002025	          0x83e930	                           sub ecx, 0x30	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4002028	          0x80f908	                               cmp cl, 8	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x400202b	     0xf87d7fdffff	                            ja 0x4001e08	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4002031	          0x4c89e8	                            mov rax, r13	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4002034	          0x48d3e0	                             shl rax, cl	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4002037	      0xa9dd010000	                         test eax, 0x1dd	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x400203c	     0xf848efeffff	                            je 0x4001ed0	       403	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2
0x4002042	      0xbe38000000	                           mov esi, 0x38	       432	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002047	          0x4c89e7	                            mov rdi, r12	       432	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x400204a	      0xe800000000	                          call 0x400204f	       432	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x400204f	          0x4885c0	                           test rax, rax	       436	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_10
0x4002052	          0x4989c2	                            mov r10, rax	       432	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002055	           0xfb613	                   movzx edx, byte [rbx]	       434	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002058	     0xf84aafdffff	                            je 0x4001e08	       436	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_10
0x400205e	          0x4c8920	                    mov qword [rax], r12	       438	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002061	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	       442	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002069	    0x41814c244400	            or dword [r12 + 0x44], 0x200	       441	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002072	    0x41838424b800	               add dword [r12 + 0xb8], 1	       440	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x400207b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       442	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x400207f	        0x49894a30	             mov qword [r10 + 0x30], rcx	       442	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002083	        0x4c895010	             mov qword [rax + 0x10], r10	       443	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002087	         0xfb64301	               movzx eax, byte [rbx + 1]	       304	tekhex.c	FUNCTION_3	IF_1
0x400208b	     0xfb6b0000000	                   movzx esi, byte [rax]	       304	tekhex.c	FUNCTION_3	IF_1
0x4002092	        0x4080fe63	                           cmp sil, 0x63	       304	tekhex.c	FUNCTION_3	IF_1
0x4002096	     0xf846cfdffff	                            je 0x4001e08	       304	tekhex.c	FUNCTION_3	IF_1
0x400209c	        0x488d7b02	                      lea rdi, [rbx + 2]	       307	tekhex.c	FUNCTION_3	CALL_1
0x40020a0	            0x85f6	                           test esi, esi	       309	tekhex.c	FUNCTION_3	IF_2
0x40020a2	      0xb810000000	                           mov eax, 0x10	       309	tekhex.c	FUNCTION_3	IF_2
0x40020a7	           0xf44f0	                          cmove esi, eax	       309	tekhex.c	FUNCTION_3	IF_2
0x40020aa	            0x31c0	                            xor eax, eax	       309	tekhex.c	FUNCTION_3	IF_2
0x40020ac	            0x31db	                            xor ebx, ebx	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020ae	          0x4889f9	                            mov rcx, rdi	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020b1	     0xf1f80000000	                         nop dword [rax]	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020b8	          0x4839cd	                            cmp rbp, rcx	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020bb	          0x4989c9	                             mov r9, rcx	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020be	     0xf8634020000	                           jbe 0x40022f8	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020c4	           0xfb609	                   movzx ecx, byte [rcx]	       311	tekhex.c	FUNCTION_3	FOR_1
0x40020c7	          0x83c301	                              add ebx, 1	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020ca	        0x41880c07	                mov byte [r15 + rax], cl	       311	tekhex.c	FUNCTION_3	FOR_1
0x40020ce	        0x4883c001	                              add rax, 1	       311	tekhex.c	FUNCTION_3	FOR_1
0x40020d2	            0x39f3	                            cmp ebx, esi	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020d4	        0x498d4901	                       lea rcx, [r9 + 1]	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020d8	            0x75de	                           jne 0x40020b8	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020da	            0x89de	                            mov esi, ebx	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020dc	        0x4c8d0c37	                     lea r9, [rdi + rsi]	       310	tekhex.c	FUNCTION_3	FOR_1
0x40020e0	      0xc644342000	          mov byte [rsp + rsi + 0x20], 0	       312	tekhex.c	FUNCTION_3
0x40020e5	        0x4883c601	                              add rsi, 1	       447	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	CALL_12
0x40020e9	          0x4c89e7	                            mov rdi, r12	       447	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	CALL_12
0x40020ec	        0x4c891424	                    mov qword [rsp], r10	       447	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	CALL_12
0x40020f0	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       447	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	CALL_12
0x40020f5	        0x88542408	                  mov byte [rsp + 8], dl	       447	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	CALL_12
0x40020f9	      0xe800000000	                          call 0x40020fe	       447	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	CALL_12
0x40020fe	        0x4c8b1424	                    mov r10, qword [rsp]	       446	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002102	          0x4885c0	                           test rax, rax	       448	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_12
0x4002105	        0x49894208	                mov qword [r10 + 8], rax	       446	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002109	     0xf84f9fcffff	                            je 0x4001e08	       448	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_12
0x400210f	          0x83c301	                              add ebx, 1	        53	string3.h	FUNCTION_24	CALL_3
0x4002112	       0xfb6542408	               movzx edx, byte [rsp + 8]	        53	string3.h	FUNCTION_24	CALL_3
0x4002117	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	        53	string3.h	FUNCTION_24	CALL_3
0x400211c	          0x83fb08	                              cmp ebx, 8	        53	string3.h	FUNCTION_24	CALL_3
0x400211f	     0xf839b010000	                           jae 0x40022c0	        53	string3.h	FUNCTION_24	CALL_3
0x4002125	          0xf6c304	                              test bl, 4	        53	string3.h	FUNCTION_24	CALL_3
0x4002128	     0xf85a2020000	                           jne 0x40023d0	        53	string3.h	FUNCTION_24	CALL_3
0x400212e	            0x85db	                           test ebx, ebx	        53	string3.h	FUNCTION_24	CALL_3
0x4002130	            0x740f	                            je 0x4002141	        53	string3.h	FUNCTION_24	CALL_3
0x4002132	        0x410fb60f	                   movzx ecx, byte [r15]	        53	string3.h	FUNCTION_24	CALL_3
0x4002136	          0xf6c302	                              test bl, 2	        53	string3.h	FUNCTION_24	CALL_3
0x4002139	            0x8808	                      mov byte [rax], cl	        53	string3.h	FUNCTION_24	CALL_3
0x400213b	     0xf8501030000	                           jne 0x4002442	        53	string3.h	FUNCTION_24	CALL_3
0x4002141	            0x31c0	                            xor eax, eax	       455	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_1
0x4002143	          0x80fa35	                            cmp dl, 0x35	       455	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_1
0x4002146	        0x4d897220	             mov qword [r10 + 0x20], r14	       451	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x400214a	           0xf9cc0	                                 setl al	       455	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_1
0x400214d	          0x83c001	                              add eax, 1	       455	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_1
0x4002150	        0x41894218	             mov dword [r10 + 0x18], eax	       455	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_1
0x4002154	            0x89d0	                            mov eax, edx	       456	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_14
0x4002156	          0x83e0fb	                     and eax, 0xfffffffb	       456	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_14
0x4002159	            0x3c32	                            cmp al, 0x32	       456	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_14
0x400215b	     0xf852f010000	                           jne 0x4002290	       456	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_14
0x4002161	    0x49c742200000	               mov qword [r10 + 0x20], 0	       457	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_14
0x4002169	          0x4c39cd	                             cmp rbp, r9	       276	tekhex.c	FUNCTION_2	IF_1
0x400216c	     0xf8696fcffff	                           jbe 0x4001e08	       276	tekhex.c	FUNCTION_2	IF_1
0x4002172	        0x410fb601	                    movzx eax, byte [r9]	       279	tekhex.c	FUNCTION_2	IF_2
0x4002176	     0xfb680000000	                   movzx eax, byte [rax]	       279	tekhex.c	FUNCTION_2	IF_2
0x400217d	            0x3c63	                            cmp al, 0x63	       279	tekhex.c	FUNCTION_2	IF_2
0x400217f	     0xf8483fcffff	                            je 0x4001e08	       279	tekhex.c	FUNCTION_2	IF_2
0x4002185	            0x85c0	                           test eax, eax	       283	tekhex.c	FUNCTION_2	IF_3
0x4002187	        0x498d5901	                       lea rbx, [r9 + 1]	       282	tekhex.c	FUNCTION_2	CALL_1
0x400218b	     0xf84b5010000	                            je 0x4002346	       283	tekhex.c	FUNCTION_2	IF_3
0x4002191	          0x4839dd	                            cmp rbp, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002194	          0x8d70ff	                      lea esi, [rax - 1]	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002197	     0xf866bfcffff	                           jbe 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x400219d	      0x410fb64101	                movzx eax, byte [r9 + 1]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021a2	     0xfb680000000	                   movzx eax, byte [rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021a9	            0x3c63	                            cmp al, 0x63	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021ab	     0xf8457fcffff	                            je 0x4001e08	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021b1	          0x83ee01	                              sub esi, 1	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021b4	            0x31d2	                            xor edx, edx	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021b6	            0xeb26	                           jmp 0x40021de	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021b8	     0xf1f84000000	                   nop dword [rax + rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021c0	          0x4839dd	                            cmp rbp, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x40021c3	     0xf843ffcffff	                            je 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x40021c9	           0xfb603	                   movzx eax, byte [rbx]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021cc	          0x83ee01	                              sub esi, 1	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021cf	     0xfb680000000	                   movzx eax, byte [rax]	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021d6	            0x3c63	                            cmp al, 0x63	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021d8	     0xf842afcffff	                            je 0x4001e08	       287	tekhex.c	FUNCTION_2	WHILE_1	IF_4
0x40021de	          0x4889d1	                            mov rcx, rdx	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x40021e1	           0xfb6d0	                           movzx edx, al	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x40021e4	        0x4883c301	                              add rbx, 1	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x40021e8	        0x48c1e104	                              shl rcx, 4	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x40021ec	          0x4809ca	                             or rdx, rcx	       289	tekhex.c	FUNCTION_2	WHILE_1	CALL_2
0x40021ef	          0x83feff	             cmp esi, 0xffffffffffffffff	       285	tekhex.c	FUNCTION_2	WHILE_1
0x40021f2	            0x75cc	                           jne 0x40021c0	       285	tekhex.c	FUNCTION_2	WHILE_1
0x40021f4	        0x492b5628	             sub rdx, qword [r14 + 0x28]	       496	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x40021f8	        0x49895210	             mov qword [r10 + 0x10], rdx	       496	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x40021fc	      0xe910feffff	                           jmp 0x4002011	       497	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002201	     0xf1f80000000	                         nop dword [rax]	       497	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2
0x4002208	      0xbe10210000	                         mov esi, 0x2110	       330	tekhex.c	FUNCTION_4	IF_1
0x400220d	          0x4c89e7	                            mov rdi, r12	       330	tekhex.c	FUNCTION_4	IF_1
0x4002210	      0xe800000000	                          call 0x4002215	       330	tekhex.c	FUNCTION_4	IF_1
0x4002215	          0x4885c0	                           test rax, rax	       333	tekhex.c	FUNCTION_4	IF_1	IF_2
0x4002218	            0x742b	                            je 0x4002245	       333	tekhex.c	FUNCTION_4	IF_1	IF_2
0x400221a	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	       336	tekhex.c	FUNCTION_4	IF_1
0x4002222	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       336	tekhex.c	FUNCTION_4	IF_1
0x4002226	    0x4c89b0002100	          mov qword [rax + 0x2100], r14 	       337	tekhex.c	FUNCTION_4	IF_1
0x400222d	    0x488990082100	          mov qword [rax + 0x2108], rdx 	       336	tekhex.c	FUNCTION_4	IF_1
0x4002234	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	       338	tekhex.c	FUNCTION_4	IF_1
0x400223c	        0x48894218	             mov qword [rdx + 0x18], rax	       338	tekhex.c	FUNCTION_4	IF_1
0x4002240	      0xe994fbffff	                           jmp 0x4001dd9	       338	tekhex.c	FUNCTION_4	IF_1
0x4002245	    0x4181e5ff1f00	                        and r13d, 0x1fff	       351	tekhex.c	FUNCTION_5	IF_1
0x400224c	      0x41c6450000	                       mov byte [r13], 0	       351	tekhex.c	FUNCTION_5	IF_1
0x4002251	             0xf0b	                                     ud2	       351	tekhex.c	FUNCTION_5	IF_1
0x4002253	       0xf1f440000	                   nop dword [rax + rax]	       351	tekhex.c	FUNCTION_5	IF_1
0x4002258	          0x4839dd	                            cmp rbp, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x400225b	     0xf86a7fbffff	                           jbe 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002261	      0xb80f000000	                            mov eax, 0xf	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002266	      0xe936fdffff	                           jmp 0x4001fa1	       285	tekhex.c	FUNCTION_2	WHILE_1
0x400226b	       0xf1f440000	                   nop dword [rax + rax]	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002270	          0x4139c5	                           cmp r13d, eax	       388	tekhex.c	FUNCTION_6	SWITCH_1	IF_2	CALL_3
0x4002273	      0xc6440c2000	          mov byte [rsp + rcx + 0x20], 0	       312	tekhex.c	FUNCTION_3
0x4002278	     0xf858afbffff	                           jne 0x4001e08	       388	tekhex.c	FUNCTION_6	SWITCH_1	IF_2	CALL_3
0x400227e	      0x4c8d7c2420	                   lea r15, [rsp + 0x20]	       388	tekhex.c	FUNCTION_6	SWITCH_1	IF_2	CALL_3
0x4002283	      0xe9eafbffff	                           jmp 0x4001e72	       388	tekhex.c	FUNCTION_6	SWITCH_1	IF_2	CALL_3
0x4002288	     0xf1f84000000	                   nop dword [rax + rax]	       388	tekhex.c	FUNCTION_6	SWITCH_1	IF_2	CALL_3
0x4002290	            0x3c33	                            cmp al, 0x33	       458	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15
0x4002292	     0xf858b000000	                           jne 0x4002323	       458	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15
0x4002298	        0x418b4620	            mov eax, dword [r14 + 0x20] 	       460	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	IF_16
0x400229c	            0xa820	                           test al, 0x20	       460	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	IF_16
0x400229e	     0xf84b5000000	                            je 0x4002359	       460	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	IF_16
0x40022a4	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       464	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_17
0x40022aa	     0xf84d6010000	                            je 0x4002486	       464	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_17
0x40022b0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       491	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5
0x40022b5	        0x49894220	             mov qword [r10 + 0x20], rax	       491	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5
0x40022b9	      0xe9abfeffff	                           jmp 0x4002169	       491	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5
0x40022be	            0x6690	                                     nop	       491	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5
0x40022c0	          0x498b0f	                    mov rcx, qword [r15]	        53	string3.h	FUNCTION_24	CALL_3
0x40022c3	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_24	CALL_3
0x40022c7	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_24	CALL_3
0x40022cb	          0x488908	                    mov qword [rax], rcx	        53	string3.h	FUNCTION_24	CALL_3
0x40022ce	            0x89d9	                            mov ecx, ebx	        53	string3.h	FUNCTION_24	CALL_3
0x40022d0	      0x498b740ff8	          mov rsi, qword [r15 + rcx - 8]	        53	string3.h	FUNCTION_24	CALL_3
0x40022d5	      0x48897408f8	          mov qword [rax + rcx - 8], rsi	        53	string3.h	FUNCTION_24	CALL_3
0x40022da	          0x4829f8	                            sub rax, rdi	        53	string3.h	FUNCTION_24	CALL_3
0x40022dd	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_24	CALL_3
0x40022e0	          0x4829c6	                            sub rsi, rax	        53	string3.h	FUNCTION_24	CALL_3
0x40022e3	             0x1d8	                            add eax, ebx	        53	string3.h	FUNCTION_24	CALL_3
0x40022e5	          0xc1e803	                              shr eax, 3	        53	string3.h	FUNCTION_24	CALL_3
0x40022e8	            0x89c1	                            mov ecx, eax	        53	string3.h	FUNCTION_24	CALL_3
0x40022ea	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_24	CALL_3
0x40022ed	      0xe94ffeffff	                           jmp 0x4002141	        53	string3.h	FUNCTION_24	CALL_3
0x40022f2	    0x660f1f440000	                    nop word [rax + rax]	        53	string3.h	FUNCTION_24	CALL_3
0x40022f8	            0x39de	                            cmp esi, ebx	       444	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_11	CALL_11
0x40022fa	      0xc644042000	          mov byte [rsp + rax + 0x20], 0	       312	tekhex.c	FUNCTION_3
0x40022ff	     0xf8503fbffff	                           jne 0x4001e08	       444	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_11	CALL_11
0x4002305	            0x89de	                            mov esi, ebx	       444	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_11	CALL_11
0x4002307	      0xe9d9fdffff	                           jmp 0x40020e5	       444	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_11	CALL_11
0x400230c	         0xf1f4000	                         nop dword [rax]	       444	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_11	CALL_11
0x4002310	          0x4839d9	                            cmp rcx, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002313	     0xf86effaffff	                           jbe 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002319	      0xb90f000000	                            mov ecx, 0xf	       285	tekhex.c	FUNCTION_2	WHILE_1
0x400231e	      0xe9d0f9ffff	                           jmp 0x4001cf3	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002323	          0x83ea34	                           sub edx, 0x34	       476	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20
0x4002326	    0x81e2fb000000	                           and edx, 0xfb	       476	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20
0x400232c	     0xf8537feffff	                           jne 0x4002169	       476	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20
0x4002332	        0x418b4620	            mov eax, dword [r14 + 0x20] 	       478	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	IF_21
0x4002336	            0xa810	                           test al, 0x10	       478	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	IF_21
0x4002338	            0x752b	                           jne 0x4002365	       478	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	IF_21
0x400233a	          0x83c820	                            or eax, 0x20	       479	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	IF_21
0x400233d	        0x41894620	             mov dword [r14 + 0x20], eax	       479	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	IF_21
0x4002341	      0xe923feffff	                           jmp 0x4002169	       479	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	IF_21
0x4002346	          0x4839dd	                            cmp rbp, rbx	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002349	     0xf86b9faffff	                           jbe 0x4001e08	       285	tekhex.c	FUNCTION_2	WHILE_1
0x400234f	      0xbe0f000000	                            mov esi, 0xf	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002354	      0xe944feffff	                           jmp 0x400219d	       285	tekhex.c	FUNCTION_2	WHILE_1
0x4002359	          0x83c810	                            or eax, 0x10	       461	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	IF_16
0x400235c	        0x41894620	             mov dword [r14 + 0x20], eax	       461	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	IF_16
0x4002360	      0xe904feffff	                           jmp 0x4002169	       461	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	IF_16
0x4002365	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       482	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_22
0x400236b	     0xf853fffffff	                           jne 0x40022b0	       482	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_22
0x4002371	            0x31ff	                            xor edi, edi	       484	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	CALL_16
0x4002373	          0x4c89f6	                            mov rsi, r14	       484	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	CALL_16
0x4002376	      0x4c894c2408	                 mov qword [rsp + 8], r9	       484	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	CALL_16
0x400237b	        0x4c891424	                    mov qword [rsp], r10	       484	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	CALL_16
0x400237f	      0xe800000000	                          call 0x4002384	       484	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	CALL_16
0x4002384	          0x4885c0	                           test rax, rax	       485	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23
0x4002387	      0x4889442418	             mov qword [rsp + 0x18], rax	       484	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	CALL_16
0x400238c	        0x4c8b1424	                    mov r10, qword [rsp]	       485	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23
0x4002390	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       485	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23
0x4002395	     0xf8515ffffff	                           jne 0x40022b0	       485	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23
0x400239b	        0x418b5620	            mov edx, dword [r14 + 0x20] 	       486	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23	CALL_17
0x400239f	          0x83e2cf	                     and edx, 0xffffffcf	       486	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23	CALL_17
0x40023a2	          0x83ca20	                            or edx, 0x20	       486	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23	CALL_17
0x40023a5	          0x498b36	                    mov rsi, qword [r14]	       486	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23	CALL_17
0x40023a8	          0x4c89e7	                            mov rdi, r12	       486	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23	CALL_17
0x40023ab	      0xe800000000	                          call 0x40023b0	       486	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23	CALL_17
0x40023b0	          0x4885c0	                           test rax, rax	       489	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_24
0x40023b3	      0x4889442418	             mov qword [rsp + 0x18], rax	       486	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_23	CALL_17
0x40023b8	        0x4c8b1424	                    mov r10, qword [rsp]	       489	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_24
0x40023bc	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       489	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_24
0x40023c1	     0xf85e9feffff	                           jne 0x40022b0	       489	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_4	IF_20	ELSE_5	IF_24
0x40023c7	            0x31c0	                            xor eax, eax	       412	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_7
0x40023c9	      0xe9c9f8ffff	                           jmp 0x4001c97	       412	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_7
0x40023ce	            0x6690	                                     nop	       412	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_7
0x40023d0	          0x418b0f	                    mov ecx, dword [r15]	        53	string3.h	FUNCTION_24	CALL_3
0x40023d3	            0x8908	                    mov dword [rax], ecx	        53	string3.h	FUNCTION_24	CALL_3
0x40023d5	      0x418b4c1ffc	          mov ecx, dword [r15 + rbx - 4]	        53	string3.h	FUNCTION_24	CALL_3
0x40023da	        0x894c18fc	          mov dword [rax + rbx - 4], ecx	        53	string3.h	FUNCTION_24	CALL_3
0x40023de	      0xe95efdffff	                           jmp 0x4002141	        53	string3.h	FUNCTION_24	CALL_3
0x40023e3	          0x4489ee	                           mov esi, r13d	       393	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	CALL_5
0x40023e6	          0x4c89e7	                            mov rdi, r12	       393	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	CALL_5
0x40023e9	        0x4883c601	                              add rsi, 1	       393	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	CALL_5
0x40023ed	      0xe800000000	                          call 0x40023f2	       393	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	CALL_5
0x40023f2	          0x4885c0	                           test rax, rax	       395	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	IF_4
0x40023f5	     0xf840dfaffff	                            je 0x4001e08	       395	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	IF_4
0x40023fb	        0x4183c501	                             add r13d, 1	        53	string3.h	FUNCTION_24	CALL_3
0x40023ff	        0x4183fd08	                             cmp r13d, 8	        53	string3.h	FUNCTION_24	CALL_3
0x4002403	            0x734d	                           jae 0x4002452	        53	string3.h	FUNCTION_24	CALL_3
0x4002405	        0x41f6c504	                            test r13b, 4	        53	string3.h	FUNCTION_24	CALL_3
0x4002409	     0xf85b5000000	                           jne 0x40024c4	        53	string3.h	FUNCTION_24	CALL_3
0x400240f	          0x4585ed	                         test r13d, r13d	        53	string3.h	FUNCTION_24	CALL_3
0x4002412	            0x7410	                            je 0x4002424	        53	string3.h	FUNCTION_24	CALL_3
0x4002414	        0x410fb617	                   movzx edx, byte [r15]	        53	string3.h	FUNCTION_24	CALL_3
0x4002418	        0x41f6c502	                            test r13b, 2	        53	string3.h	FUNCTION_24	CALL_3
0x400241c	            0x8810	                      mov byte [rax], dl	        53	string3.h	FUNCTION_24	CALL_3
0x400241e	     0xf85b4000000	                           jne 0x40024d8	        53	string3.h	FUNCTION_24	CALL_3
0x4002424	          0x4889c6	                            mov rsi, rax	       398	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	CALL_7
0x4002427	          0x4c89e7	                            mov rdi, r12	       398	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	CALL_7
0x400242a	      0xe800000000	                          call 0x400242f	       398	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	CALL_7
0x400242f	          0x4885c0	                           test rax, rax	       399	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	IF_5
0x4002432	          0x4989c6	                            mov r14, rax	       398	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	CALL_7
0x4002435	     0xf854efaffff	                           jne 0x4001e89	       399	tekhex.c	FUNCTION_6	SWITCH_1	IF_3	IF_5
0x400243b	            0x31c0	                            xor eax, eax	       412	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_7
0x400243d	      0xe955f8ffff	                           jmp 0x4001c97	       412	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	IF_7
0x4002442	    0x410fb74c1ffe	         movzx ecx, word [r15 + rbx - 2]	        53	string3.h	FUNCTION_24	CALL_3
0x4002448	      0x66894c18fe	            mov word [rax + rbx - 2], cx	        53	string3.h	FUNCTION_24	CALL_3
0x400244d	      0xe9effcffff	                           jmp 0x4002141	        53	string3.h	FUNCTION_24	CALL_3
0x4002452	          0x498b17	                    mov rdx, qword [r15]	        53	string3.h	FUNCTION_24	CALL_3
0x4002455	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_24	CALL_3
0x4002459	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_24	CALL_3
0x400245c	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_24	CALL_3
0x4002460	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_24	CALL_3
0x4002463	          0x4489ea	                           mov edx, r13d	        53	string3.h	FUNCTION_24	CALL_3
0x4002466	      0x498b4c17f8	          mov rcx, qword [r15 + rdx - 8]	        53	string3.h	FUNCTION_24	CALL_3
0x400246b	      0x48894c10f8	          mov qword [rax + rdx - 8], rcx	        53	string3.h	FUNCTION_24	CALL_3
0x4002470	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_24	CALL_3
0x4002473	          0x4829fa	                            sub rdx, rdi	        53	string3.h	FUNCTION_24	CALL_3
0x4002476	      0x418d4c1500	                    lea ecx, [r13 + rdx]	        53	string3.h	FUNCTION_24	CALL_3
0x400247b	          0x4829d6	                            sub rsi, rdx	        53	string3.h	FUNCTION_24	CALL_3
0x400247e	          0xc1e903	                              shr ecx, 3	        53	string3.h	FUNCTION_24	CALL_3
0x4002481	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_24	CALL_3
0x4002484	            0xeb9e	                           jmp 0x4002424	        53	string3.h	FUNCTION_24	CALL_3
0x4002486	            0x31ff	                            xor edi, edi	       466	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	CALL_14
0x4002488	          0x4c89f6	                            mov rsi, r14	       466	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	CALL_14
0x400248b	      0x4c894c2408	                 mov qword [rsp + 8], r9	       466	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	CALL_14
0x4002490	        0x4c891424	                    mov qword [rsp], r10	       466	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	CALL_14
0x4002494	      0xe800000000	                          call 0x4002499	       466	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	CALL_14
0x4002499	          0x4885c0	                           test rax, rax	       467	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_18
0x400249c	      0x4889442418	             mov qword [rsp + 0x18], rax	       466	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	CALL_14
0x40024a1	        0x4c8b1424	                    mov r10, qword [rsp]	       467	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_18
0x40024a5	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       467	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_18
0x40024aa	     0xf8500feffff	                           jne 0x40022b0	       467	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_18
0x40024b0	        0x418b5620	            mov edx, dword [r14 + 0x20] 	       468	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_18	CALL_15
0x40024b4	          0x83e2cf	                     and edx, 0xffffffcf	       468	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_18	CALL_15
0x40024b7	          0x83ca10	                            or edx, 0x10	       468	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_18	CALL_15
0x40024ba	      0xe9e6feffff	                           jmp 0x40023a5	       468	tekhex.c	FUNCTION_6	SWITCH_1	WHILE_2	SWITCH_2	ELSE_2	IF_15	ELSE_3	IF_18	CALL_15
0x40024bf	      0xe800000000	                          call 0x40024c4	       506	tekhex.c	FUNCTION_6
0x40024c4	          0x418b17	                    mov edx, dword [r15]	        53	string3.h	FUNCTION_24	CALL_3
0x40024c7	            0x8910	                    mov dword [rax], edx	        53	string3.h	FUNCTION_24	CALL_3
0x40024c9	      0x438b542ffc	          mov edx, dword [r15 + r13 - 4]	        53	string3.h	FUNCTION_24	CALL_3
0x40024ce	      0x42895428fc	          mov dword [rax + r13 - 4], edx	        53	string3.h	FUNCTION_24	CALL_3
0x40024d3	      0xe94cffffff	                           jmp 0x4002424	        53	string3.h	FUNCTION_24	CALL_3
0x40024d8	    0x430fb7542ffe	         movzx edx, word [r15 + r13 - 2]	        53	string3.h	FUNCTION_24	CALL_3
0x40024de	    0x6642895428fe	            mov word [rax + r13 - 2], dx	        53	string3.h	FUNCTION_24	CALL_3
0x40024e4	      0xe93bffffff	                           jmp 0x4002424	        53	string3.h	FUNCTION_24	CALL_3
tekhex_set_arch_mach	FOR,0:functions,0:DO,0:WHILE,0:CALL,1:SWITCH,0:IF,0:ELSE,0	11
0x40000c0	              0x53	                                push rbx	       690	tekhex.c	FUNCTION_14
0x40000c1	            0x89f3	                            mov ebx, esi	       690	tekhex.c	FUNCTION_14
0x40000c3	      0xe800000000	                          call 0x40000c8	       692	tekhex.c	FUNCTION_14	CALL_1
0x40000c8	            0x85db	                           test ebx, ebx	       692	tekhex.c	FUNCTION_14	CALL_1
0x40000ca	           0xf94c2	                                 sete dl	       692	tekhex.c	FUNCTION_14	CALL_1
0x40000cd	            0x85c0	                           test eax, eax	       692	tekhex.c	FUNCTION_14	CALL_1
0x40000cf	           0xf95c0	                                setne al	       692	tekhex.c	FUNCTION_14	CALL_1
0x40000d2	             0x9d0	                             or eax, edx	       692	tekhex.c	FUNCTION_14	CALL_1
0x40000d4	           0xfb6c0	                           movzx eax, al	       692	tekhex.c	FUNCTION_14	CALL_1
0x40000d7	              0x5b	                                 pop rbx	       694	tekhex.c	FUNCTION_14
0x40000d8	              0xc3	                                     ret	       694	tekhex.c	FUNCTION_14
tekhex_set_section_contents	FOR,0:functions,0:DO,0:WHILE,0:CALL,1:SWITCH,0:IF,1:ELSE,0	108
0x40002e0	        0xf6462003	               test byte [rsi + 0x20], 3	       705	tekhex.c	FUNCTION_15	IF_1
0x40002e4	            0x750a	                           jne 0x40002f0	       705	tekhex.c	FUNCTION_15	IF_1
0x40002e6	            0x31c0	                            xor eax, eax	       705	tekhex.c	FUNCTION_15	IF_1
0x40002e8	              0xc3	                                     ret	       705	tekhex.c	FUNCTION_15	IF_1
0x40002e9	     0xf1f80000000	                         nop dword [rax]	       705	tekhex.c	FUNCTION_15	IF_1
0x40002f0	            0x4157	                                push r15	       704	tekhex.c	FUNCTION_15
0x40002f2	            0x4156	                                push r14	       704	tekhex.c	FUNCTION_15
0x40002f4	          0x4d89c6	                             mov r14, r8	       704	tekhex.c	FUNCTION_15
0x40002f7	            0x4155	                                push r13	       704	tekhex.c	FUNCTION_15
0x40002f9	            0x4154	                                push r12	       704	tekhex.c	FUNCTION_15
0x40002fb	          0x4989fd	                            mov r13, rdi	       704	tekhex.c	FUNCTION_15
0x40002fe	              0x55	                                push rbp	       704	tekhex.c	FUNCTION_15
0x40002ff	              0x53	                                push rbx	       704	tekhex.c	FUNCTION_15
0x4000300	          0x4889f3	                            mov rbx, rsi	       704	tekhex.c	FUNCTION_15
0x4000303	        0x4883ec18	                           sub rsp, 0x18	       704	tekhex.c	FUNCTION_15
0x4000307	          0x4885c9	                           test rcx, rcx	       638	tekhex.c	FUNCTION_12	CALL_1
0x400030a	     0xf8556010000	                           jne 0x4000466	       638	tekhex.c	FUNCTION_12	CALL_1
0x4000310	        0x4c8b7b28	            mov r15, qword [rbx + 0x28] 	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000314	            0x31c0	                            xor eax, eax	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000316	          0x4989d4	                            mov r12, rdx	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000319	      0xb901000000	                              mov ecx, 1	       639	tekhex.c	FUNCTION_12	FOR_1
0x400031e	          0x4929d7	                            sub r15, rdx	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000321	          0x4d85f6	                           test r14, r14	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000324	     0xf84e5000000	                            je 0x400040f	       639	tekhex.c	FUNCTION_12	FOR_1
0x400032a	    0x660f1f440000	                    nop word [rax + rax]	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000330	      0x410fb63424	                   movzx esi, byte [r12]	       644	tekhex.c	FUNCTION_12	FOR_1
0x4000335	        0x4b8d2c3c	                    lea rbp, [r12 + r15]	       644	tekhex.c	FUNCTION_12	FOR_1
0x4000339	          0x4889eb	                            mov rbx, rbp	       642	tekhex.c	FUNCTION_12	FOR_1
0x400033c	    0x4881e300e0ff	             and rbx, 0xffffffffffffe000	       642	tekhex.c	FUNCTION_12	FOR_1
0x4000343	          0x4084f6	                           test sil, sil	       644	tekhex.c	FUNCTION_12	FOR_1
0x4000346	     0xf84dc000000	                            je 0x4000428	       644	tekhex.c	FUNCTION_12	FOR_1
0x400034c	          0x4839cb	                            cmp rbx, rcx	       646	tekhex.c	FUNCTION_12	FOR_1	IF_1
0x400034f	            0x7509	                           jne 0x400035a	       646	tekhex.c	FUNCTION_12	FOR_1	IF_1
0x4000351	          0x4885c0	                           test rax, rax	       646	tekhex.c	FUNCTION_12	FOR_1	IF_1
0x4000354	     0xf8591000000	                           jne 0x40003eb	       646	tekhex.c	FUNCTION_12	FOR_1	IF_1
0x400035a	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	       321	tekhex.c	FUNCTION_4
0x4000361	        0x488b4018	            mov rax, qword [rax + 0x18] 	       321	tekhex.c	FUNCTION_4
0x4000365	          0x4885c0	                           test rax, rax	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000368	            0x7443	                            je 0x40003ad	       324	tekhex.c	FUNCTION_4	WHILE_1
0x400036a	    0x488b88002100	          mov rcx, qword [rax + 0x2100] 	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000371	          0x4839cb	                            cmp rbx, rcx	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000374	            0x7475	                            je 0x40003eb	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000376	      0xba01000000	                              mov edx, 1	       324	tekhex.c	FUNCTION_4	WHILE_1
0x400037b	      0xbf01000000	                              mov edi, 1	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000380	            0xeb16	                           jmp 0x4000398	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000382	    0x660f1f440000	                    nop word [rax + rax]	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000388	    0x488b88002100	          mov rcx, qword [rax + 0x2100] 	       324	tekhex.c	FUNCTION_4	WHILE_1
0x400038f	          0x4839cb	                            cmp rbx, rcx	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000392	     0xf84c8000000	                            je 0x4000460	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000398	    0x488b80082100	          mov rax, qword [rax + 0x2108] 	       325	tekhex.c	FUNCTION_4	WHILE_1
0x400039f	          0x4885c0	                           test rax, rax	       324	tekhex.c	FUNCTION_4	WHILE_1
0x40003a2	            0x75e4	                           jne 0x4000388	       324	tekhex.c	FUNCTION_4	WHILE_1
0x40003a4	          0x4084ff	                           test dil, dil	       327	tekhex.c	FUNCTION_4	IF_1
0x40003a7	     0xf84a9000000	                            je 0x4000456	       327	tekhex.c	FUNCTION_4	IF_1
0x40003ad	      0xbe10210000	                         mov esi, 0x2110	       330	tekhex.c	FUNCTION_4	IF_1
0x40003b2	          0x4c89ef	                            mov rdi, r13	       330	tekhex.c	FUNCTION_4	IF_1
0x40003b5	      0xe800000000	                          call 0x40003ba	       330	tekhex.c	FUNCTION_4	IF_1
0x40003ba	          0x4885c0	                           test rax, rax	       333	tekhex.c	FUNCTION_4	IF_1	IF_2
0x40003bd	            0x7424	                            je 0x40003e3	       333	tekhex.c	FUNCTION_4	IF_1	IF_2
0x40003bf	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	       336	tekhex.c	FUNCTION_4	IF_1
0x40003c6	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       336	tekhex.c	FUNCTION_4	IF_1
0x40003ca	    0x488998002100	          mov qword [rax + 0x2100], rbx 	       337	tekhex.c	FUNCTION_4	IF_1
0x40003d1	    0x488990082100	          mov qword [rax + 0x2108], rdx 	       336	tekhex.c	FUNCTION_4	IF_1
0x40003d8	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	       338	tekhex.c	FUNCTION_4	IF_1
0x40003df	        0x48894218	             mov qword [rdx + 0x18], rax	       338	tekhex.c	FUNCTION_4	IF_1
0x40003e3	      0x410fb63424	                   movzx esi, byte [r12]	       338	tekhex.c	FUNCTION_4	IF_1
0x40003e8	          0x4889d9	                            mov rcx, rbx	       642	tekhex.c	FUNCTION_12	FOR_1
0x40003eb	    0x81e5ff1f0000	                         and ebp, 0x1fff	       643	tekhex.c	FUNCTION_12	FOR_1
0x40003f1	        0x40883428	               mov byte [rax + rbp], sil	       662	tekhex.c	FUNCTION_12	FOR_1	ELSE_1	ELSE_2	IF_4
0x40003f5	        0x48c1ed05	                              shr rbp, 5	       663	tekhex.c	FUNCTION_12	FOR_1	ELSE_1	ELSE_2	IF_4
0x40003f9	    0xc68428002000	       mov byte [rax + rbp + 0x2000], 1 	       663	tekhex.c	FUNCTION_12	FOR_1	ELSE_1	ELSE_2	IF_4
0x4000401	        0x4983c401	                              add r12, 1	       666	tekhex.c	FUNCTION_12	FOR_1
0x4000405	        0x4983ee01	                              sub r14, 1	       639	tekhex.c	FUNCTION_12	FOR_1
0x4000409	     0xf8521ffffff	                           jne 0x4000330	       639	tekhex.c	FUNCTION_12	FOR_1
0x400040f	        0x4883c418	                           add rsp, 0x18	       713	tekhex.c	FUNCTION_15
0x4000413	      0xb801000000	                              mov eax, 1	       709	tekhex.c	FUNCTION_15	IF_1
0x4000418	              0x5b	                                 pop rbx	       713	tekhex.c	FUNCTION_15
0x4000419	              0x5d	                                 pop rbp	       713	tekhex.c	FUNCTION_15
0x400041a	            0x415c	                                 pop r12	       713	tekhex.c	FUNCTION_15
0x400041c	            0x415d	                                 pop r13	       713	tekhex.c	FUNCTION_15
0x400041e	            0x415e	                                 pop r14	       713	tekhex.c	FUNCTION_15
0x4000420	            0x415f	                                 pop r15	       713	tekhex.c	FUNCTION_15
0x4000422	              0xc3	                                     ret	       713	tekhex.c	FUNCTION_15
0x4000423	       0xf1f440000	                   nop dword [rax + rax]	       713	tekhex.c	FUNCTION_15
0x4000428	          0x4839cb	                            cmp rbx, rcx	       646	tekhex.c	FUNCTION_12	FOR_1	IF_1
0x400042b	            0x74d4	                            je 0x4000401	       646	tekhex.c	FUNCTION_12	FOR_1	IF_1
0x400042d	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	       321	tekhex.c	FUNCTION_4
0x4000434	          0x4889d9	                            mov rcx, rbx	       642	tekhex.c	FUNCTION_12	FOR_1
0x4000437	        0x488b4018	            mov rax, qword [rax + 0x18] 	       321	tekhex.c	FUNCTION_4
0x400043b	          0x4885c0	                           test rax, rax	       324	tekhex.c	FUNCTION_4	WHILE_1
0x400043e	            0x74c1	                            je 0x4000401	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000440	    0x488b88002100	          mov rcx, qword [rax + 0x2100] 	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000447	            0x31d2	                            xor edx, edx	       644	tekhex.c	FUNCTION_12	FOR_1
0x4000449	            0x31ff	                            xor edi, edi	       324	tekhex.c	FUNCTION_4	WHILE_1
0x400044b	          0x4839cb	                            cmp rbx, rcx	       324	tekhex.c	FUNCTION_4	WHILE_1
0x400044e	     0xf8544ffffff	                           jne 0x4000398	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000454	            0xebab	                           jmp 0x4000401	       324	tekhex.c	FUNCTION_4	WHILE_1
0x4000456	          0x4889d9	                            mov rcx, rbx	       642	tekhex.c	FUNCTION_12	FOR_1
0x4000459	     0xf1f80000000	                         nop dword [rax]	       642	tekhex.c	FUNCTION_12	FOR_1
0x4000460	            0x85d2	                           test edx, edx	       660	tekhex.c	FUNCTION_12	FOR_1	ELSE_1	ELSE_2	IF_4
0x4000462	            0x7587	                           jne 0x40003eb	       660	tekhex.c	FUNCTION_12	FOR_1	ELSE_1	ELSE_2	IF_4
0x4000464	            0xeb9b	                           jmp 0x4000401	       660	tekhex.c	FUNCTION_12	FOR_1	ELSE_1	ELSE_2	IF_4
0x4000466	      0xbe7e020000	                          mov esi, 0x27e	       638	tekhex.c	FUNCTION_12	CALL_1
0x400046b	      0xbf00000000	                              mov edi, 0	       638	tekhex.c	FUNCTION_12	CALL_1
0x4000470	      0x4889542408	                mov qword [rsp + 8], rdx	       638	tekhex.c	FUNCTION_12	CALL_1
0x4000475	      0xe800000000	                          call 0x400047a	       638	tekhex.c	FUNCTION_12	CALL_1
0x400047a	      0x488b542408	                mov rdx, qword [rsp + 8]	       638	tekhex.c	FUNCTION_12	CALL_1
0x400047f	      0xe98cfeffff	                           jmp 0x4000310	       638	tekhex.c	FUNCTION_12	CALL_1
tekhex_sizeof_headers	FOR,0:functions,0:DO,0:WHILE,0:CALL,0:SWITCH,0:IF,0:ELSE,0	2
0x4000090	            0x31c0	                            xor eax, eax	       910	tekhex.c	FUNCTION_20
0x4000092	              0xc3	                                     ret	       910	tekhex.c	FUNCTION_20
tekhex_canonicalize_symtab	FOR,0:functions,0:DO,0:WHILE,1:CALL,2:SWITCH,0:IF,0:ELSE,0	15
0x4000040	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       564	tekhex.c	FUNCTION_8
0x4000047	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       564	tekhex.c	FUNCTION_8
0x400004b	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	       565	tekhex.c	FUNCTION_8	CALL_1
0x4000051	          0x4885d2	                           test rdx, rdx	       568	tekhex.c	FUNCTION_8	WHILE_1
0x4000054	          0x4889c1	                            mov rcx, rax	       565	tekhex.c	FUNCTION_8	CALL_1
0x4000057	    0x48c704c60000	              mov qword [rsi + rax*8], 0	       567	tekhex.c	FUNCTION_8
0x400005f	            0x741a	                            je 0x400007b	       568	tekhex.c	FUNCTION_8	WHILE_1
0x4000061	     0xf1f80000000	                         nop dword [rax]	       568	tekhex.c	FUNCTION_8	WHILE_1
0x4000068	          0x8d79ff	                      lea edi, [rcx - 1]	       570	tekhex.c	FUNCTION_8	WHILE_1
0x400006b	        0x488914fe	            mov qword [rsi + rdi*8], rdx	       570	tekhex.c	FUNCTION_8	WHILE_1
0x400006f	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       571	tekhex.c	FUNCTION_8	WHILE_1
0x4000073	          0x4889f9	                            mov rcx, rdi	       570	tekhex.c	FUNCTION_8	WHILE_1
0x4000076	          0x4885d2	                           test rdx, rdx	       568	tekhex.c	FUNCTION_8	WHILE_1
0x4000079	            0x75ed	                           jne 0x4000068	       568	tekhex.c	FUNCTION_8	WHILE_1
0x400007b	            0xf3c3	                                     ret	       575	tekhex.c	FUNCTION_8
tekhex_get_symtab_upper_bound	FOR,0:functions,0:DO,0:WHILE,0:CALL,0:SWITCH,0:IF,0:ELSE,0	4
0x4000080	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	       580	tekhex.c	FUNCTION_9
0x4000086	          0x83c001	                              add eax, 1	       580	tekhex.c	FUNCTION_9
0x4000089	        0x48c1e003	                              shl rax, 3	       580	tekhex.c	FUNCTION_9
0x400008d	              0xc3	                                     ret	       582	tekhex.c	FUNCTION_9
tekhex_make_empty_symbol	FOR,0:functions,0:DO,0:WHILE,0:CALL,1:SWITCH,0:IF,1:ELSE,0	10
0x40000a0	              0x53	                                push rbx	       914	tekhex.c	FUNCTION_21
0x40000a1	      0xbe38000000	                           mov esi, 0x38	       916	tekhex.c	FUNCTION_21	CALL_1
0x40000a6	          0x4889fb	                            mov rbx, rdi	       914	tekhex.c	FUNCTION_21
0x40000a9	      0xe800000000	                          call 0x40000ae	       916	tekhex.c	FUNCTION_21	CALL_1
0x40000ae	          0x4885c0	                           test rax, rax	       919	tekhex.c	FUNCTION_21	IF_1
0x40000b1	            0x740b	                            je 0x40000be	       919	tekhex.c	FUNCTION_21	IF_1
0x40000b3	          0x488918	                    mov qword [rax], rbx	       921	tekhex.c	FUNCTION_21
0x40000b6	    0x48c740300000	               mov qword [rax + 0x30], 0	       922	tekhex.c	FUNCTION_21
0x40000be	              0x5b	                                 pop rbx	       924	tekhex.c	FUNCTION_21
0x40000bf	              0xc3	                                     ret	       924	tekhex.c	FUNCTION_21
