ldctor_build_sets	DO,0:IF,16:ELSE,4:functions,0:WHILE,1:FOR,6:SWITCH,1:CALL,50	311
0x40002f0	    0x8b1500000000	            mov edx, dword [0x040002f6] 	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40002f6	            0x85d2	                           test edx, edx	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40002f8	     0xf8582040000	                           jne 0x4000780	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40002fe	            0x4157	                                push r15	       200	ldctor.c	ELSE_3	FUNCTION_4
0x4000300	            0x4156	                                push r14	       200	ldctor.c	ELSE_3	FUNCTION_4
0x4000302	            0x4155	                                push r13	       200	ldctor.c	ELSE_3	FUNCTION_4
0x4000304	            0x4154	                                push r12	       200	ldctor.c	ELSE_3	FUNCTION_4
0x4000306	              0x55	                                push rbp	       200	ldctor.c	ELSE_3	FUNCTION_4
0x4000307	              0x53	                                push rbx	       200	ldctor.c	ELSE_3	FUNCTION_4
0x4000308	        0x4883ec08	                              sub rsp, 8	       200	ldctor.c	ELSE_3	FUNCTION_4
0x400030c	    0x8b0500000000	            mov eax, dword [0x04000312] 	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x4000312	    0xc70500000000	               mov dword [0x0400031c], 1	       209	ldctor.c	ELSE_3	FUNCTION_4
0x400031c	            0x85c0	                           test eax, eax	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x400031e	     0xf8578030000	                           jne 0x400069c	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x4000324	      0xbf00000000	                              mov edi, 0	       247	ldctor.c	ELSE_3	FUNCTION_4	CALL_4
0x4000329	          0x4531ed	                          xor r13d, r13d	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x400032c	      0xe800000000	                          call 0x4000331	       247	ldctor.c	ELSE_3	FUNCTION_4	CALL_4
0x4000331	      0xbf00000000	                              mov edi, 0	       248	ldctor.c	ELSE_3	FUNCTION_4	CALL_5
0x4000336	      0xe800000000	                          call 0x400033b	       248	ldctor.c	ELSE_3	FUNCTION_4	CALL_5
0x400033b	    0x4c8b25000000	            mov r12, qword [0x04000342] 	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000342	          0x4d85e4	                           test r12, r12	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000345	     0xf84c5010000	                            je 0x4000510	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x400034b	       0xf1f440000	                   nop dword [rax + rax]	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000350	      0x498b442408	                mov rax, qword [r12 + 8]	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x4000355	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x4000359	          0x83e803	                              sub eax, 3	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x400035c	            0x3c01	                               cmp al, 1	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x400035e	     0xf869f010000	                           jbe 0x4000503	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x4000364	      0x418b742410	            mov esi, dword [r12 + 0x10] 	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x4000369	    0x488b3d000000	            mov rdi, qword [0x04000370] 	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x4000370	      0xe800000000	                          call 0x4000375	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x4000375	          0x4885c0	                           test rax, rax	       275	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5
0x4000378	          0x4989c7	                            mov r15, rax	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x400037b	     0xf842f020000	                            je 0x40005b0	       275	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5
0x4000381	          0x4c89ff	                            mov rdi, r15	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000384	      0xe800000000	                          call 0x4000389	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000389	          0x83f802	                              cmp eax, 2	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400038c	            0x89c3	                            mov ebx, eax	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x400038e	     0xf84fd020000	                            je 0x4000691	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000394	     0xf86aa020000	                           jbe 0x4000644	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400039a	          0x83f804	                              cmp eax, 4	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400039d	    0x41be1c010000	                         mov r14d, 0x11c	       313	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40003a3	            0x741c	                            je 0x40003c1	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40003a5	          0x83f808	                              cmp eax, 8	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40003a8	     0xf85a5020000	                           jne 0x4000653	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40003ae	          0x4531f6	                          xor r14d, r14d	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x40003b1	      0x41837f1802	               cmp dword [r15 + 0x18], 2	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x40003b6	        0x410f94c6	                               sete r14b	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x40003ba	    0x4181c61a0100	                         add r14d, 0x11a	       316	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	IF_10
0x40003c1	          0x4863fb	                         movsxd rdi, ebx	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003c4	      0xe800000000	                          call 0x40003c9	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003c9	      0xbf17010000	                          mov edi, 0x117	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003ce	          0x4889c6	                            mov rsi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003d1	      0xe800000000	                          call 0x40003d6	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003d6	            0x31d2	                            xor edx, edx	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003d8	          0x4889c6	                            mov rsi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003db	      0xbf00000000	                              mov edi, 0	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003e0	      0xe800000000	                          call 0x40003e5	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003e5	          0x4889c7	                            mov rdi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003e8	      0xe800000000	                          call 0x40003ed	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40003ed	      0xbe00000000	                              mov esi, 0	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003f2	      0xbf03010000	                          mov edi, 0x103	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003f7	      0xe800000000	                          call 0x40003fc	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x40003fc	      0x498b542408	                mov rdx, qword [r12 + 8]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000401	          0x4889c6	                            mov rsi, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000404	        0x488b7a08	                mov rdi, qword [rdx + 8]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000408	            0x31d2	                            xor edx, edx	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400040a	      0xe800000000	                          call 0x400040f	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400040f	          0x4889c7	                            mov rdi, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000412	      0xe800000000	                          call 0x4000417	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000417	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x400041c	      0xe800000000	                          call 0x4000421	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000421	          0x4489f7	                           mov edi, r14d	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000424	          0x4889c6	                            mov rsi, rax	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000427	      0xe800000000	                          call 0x400042c	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x400042c	      0x498b6c2420	            mov rbp, qword [r12 + 0x20] 	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000431	          0x4885ed	                           test rbp, rbp	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000434	     0xf84b7000000	                            je 0x40004f1	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x400043a	    0x660f1f440000	                    nop word [rax + rax]	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000440	    0x48833d000000	               cmp qword [0x04000448], 0	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x4000448	            0x7464	                            je 0x40004ae	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x400044a	          0x4585ed	                         test r13d, r13d	       342	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x400044d	     0xf840d010000	                            je 0x4000560	       342	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x4000453	      0x498b442408	                mov rax, qword [r12 + 8]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x4000458	      0xbf00000000	                              mov edi, 0	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x400045d	        0x488b7008	                mov rsi, qword [rax + 8]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x4000461	            0x31c0	                            xor eax, eax	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x4000463	      0xe800000000	                          call 0x4000468	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x4000468	      0x498b442408	                mov rax, qword [r12 + 8]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x400046d	        0x488b7808	                mov rdi, qword [rax + 8]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x4000471	      0xe800000000	                          call 0x4000476	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x4000476	          0x83f812	                           cmp eax, 0x12	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000479	            0x89c3	                            mov ebx, eax	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x400047b	     0xf8fcf000000	                            jg 0x4000550	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000481	     0xf1f80000000	                         nop dword [rax]	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000488	          0x83c301	                              add ebx, 1	       359	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x400048b	      0xe800000000	                          call 0x4000490	       358	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1	CALL_39
0x4000490	          0x83fb14	                           cmp ebx, 0x14	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x4000493	            0x75f3	                           jne 0x4000488	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x4000495	        0x488b7508	                mov rsi, qword [rbp + 8]	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x4000499	          0x4885f6	                           test rsi, rsi	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x400049c	     0xf84ee000000	                            je 0x4000590	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x40004a2	      0xbf00000000	                              mov edi, 0	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x40004a7	            0x31c0	                            xor eax, eax	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x40004a9	      0xe800000000	                          call 0x40004ae	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x40004ae	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x40004b2	    0x4881ff000000	                              cmp rdi, 0	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x40004b9	            0x7407	                            je 0x40004c2	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x40004bb	    0x814f20000020	         or dword [rdi + 0x20], 0x200000	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x40004c2	     0xfb605000000	           movzx eax, byte [0x040004c9] 	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x40004c9	          0x83e003	                              and eax, 3	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x40004cc	            0x3c02	                               cmp al, 2	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x40004ce	            0x7458	                            je 0x4000528	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x40004d0	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40004d4	      0xe800000000	                          call 0x40004d9	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40004d9	          0x4489f7	                           mov edi, r14d	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40004dc	          0x4889c6	                            mov rsi, rax	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40004df	      0xe800000000	                          call 0x40004e4	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x40004e4	        0x488b6d00	                    mov rbp, qword [rbp]	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40004e8	          0x4885ed	                           test rbp, rbp	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40004eb	     0xf854fffffff	                           jne 0x4000440	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40004f1	            0x31ff	                            xor edi, edi	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004f3	      0xe800000000	                          call 0x40004f8	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004f8	          0x4489f7	                           mov edi, r14d	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004fb	          0x4889c6	                            mov rsi, rax	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40004fe	      0xe800000000	                          call 0x4000503	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x4000503	        0x4d8b2424	                    mov r12, qword [r12]	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000507	          0x4d85e4	                           test r12, r12	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x400050a	     0xf8540feffff	                           jne 0x4000350	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x4000510	        0x4883c408	                              add rsp, 8	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000514	              0x5b	                                 pop rbx	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000515	              0x5d	                                 pop rbp	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000516	            0x415c	                                 pop r12	       383	ldctor.c	FUNCTION_4	ELSE_3
0x4000518	            0x415d	                                 pop r13	       383	ldctor.c	FUNCTION_4	ELSE_3
0x400051a	            0x415e	                                 pop r14	       383	ldctor.c	FUNCTION_4	ELSE_3
0x400051c	            0x415f	                                 pop r15	       383	ldctor.c	FUNCTION_4	ELSE_3
0x400051e	      0xe900000000	                           jmp 0x4000523	       382	ldctor.c	FUNCTION_4	ELSE_3	CALL_50
0x4000523	       0xf1f440000	                   nop dword [rax + rax]	       382	ldctor.c	FUNCTION_4	ELSE_3	CALL_50
0x4000528	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x400052c	      0xe800000000	                          call 0x4000531	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x4000531	        0x488b4d08	                mov rcx, qword [rbp + 8]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000535	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000539	          0x4989c0	                             mov r8, rax	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x400053c	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000541	          0x4c89fe	                            mov rsi, r15	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000544	      0xe800000000	                          call 0x4000549	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000549	            0xeb99	                           jmp 0x40004e4	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x400054b	       0xf1f440000	                   nop dword [rax + rax]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000550	      0xe800000000	                          call 0x4000555	       353	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13	CALL_38
0x4000555	            0x31db	                            xor ebx, ebx	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000557	      0xe92cffffff	                           jmp 0x4000488	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x400055c	         0xf1f4000	                         nop dword [rax]	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x4000560	      0xba05000000	                              mov edx, 5	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000565	      0xbe00000000	                              mov esi, 0	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x400056a	            0x31ff	                            xor edi, edi	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x400056c	      0xe800000000	                          call 0x4000571	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000571	          0x4889c7	                            mov rdi, rax	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000574	            0x31c0	                            xor eax, eax	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000576	    0x41bd01000000	                             mov r13d, 1	       345	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x400057c	      0xe800000000	                          call 0x4000581	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000581	      0xe9cdfeffff	                           jmp 0x4000453	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000590	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000594	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000598	      0xbf00000000	                              mov edi, 0	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400059d	            0x31c0	                            xor eax, eax	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400059f	    0x488bb2f00000	            mov rsi, qword [rdx + 0xf0] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x40005a6	      0xe800000000	                          call 0x40005ab	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x40005ab	      0xe9fefeffff	                           jmp 0x40004ae	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x40005b0	     0xfb605000000	           movzx eax, byte [0x040005b7] 	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x40005b7	          0x83e003	                              and eax, 3	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x40005ba	            0x3c02	                               cmp al, 2	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x40005bc	     0xf840b020000	                            je 0x40007cd	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x40005c2	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x40005c7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x40005cb	    0x488bb8f00000	            mov rdi, qword [rax + 0xf0] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x40005d2	          0x4885ff	                           test rdi, rdi	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x40005d5	     0xf84a7010000	                            je 0x4000782	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x40005db	      0x418b742410	            mov esi, dword [r12 + 0x10] 	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x40005e0	      0xe800000000	                          call 0x40005e5	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x40005e5	          0x4885c0	                           test rax, rax	       291	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x40005e8	          0x4989c7	                            mov r15, rax	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x40005eb	     0xf8590fdffff	                           jne 0x4000381	       291	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x40005f1	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40005f6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40005fa	    0x4883b8f00000	               cmp qword [rax + 0xf0], 0	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x4000602	     0xf847a010000	                            je 0x4000782	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x4000608	      0x498b442408	                mov rax, qword [r12 + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400060d	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000612	        0x4c8b7008	                mov r14, qword [rax + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000616	      0xe800000000	                          call 0x400061b	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400061b	          0x4889c5	                            mov rbp, rax	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400061e	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x4000623	      0xba05000000	                              mov edx, 5	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000628	      0xbe00000000	                              mov esi, 0	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400062d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x4000631	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x4000638	        0x488b4008	                mov rax, qword [rax + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400063c	          0x488b18	                    mov rbx, qword [rax]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400063f	      0xe96a010000	                           jmp 0x40007ae	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000644	          0x83f801	                              cmp eax, 1	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000647	    0x41be1e010000	                         mov r14d, 0x11e	       311	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400064d	     0xf846efdffff	                            je 0x40003c1	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000653	      0x498b442408	                mov rax, qword [r12 + 8]	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000658	          0x4c89ff	                            mov rdi, r15	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400065b	        0x4c8b7008	                mov r14, qword [rax + 8]	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400065f	      0xe800000000	                          call 0x4000664	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000664	      0xba05000000	                              mov edx, 5	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000669	            0x89c5	                            mov ebp, eax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400066b	      0xbe00000000	                              mov esi, 0	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000670	            0x31ff	                            xor edi, edi	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000672	      0xe800000000	                          call 0x4000677	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000677	          0x4c89f2	                            mov rdx, r14	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400067a	          0x4889c7	                            mov rdi, rax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400067d	            0x89ee	                            mov esi, ebp	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400067f	            0x31c0	                            xor eax, eax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x4000681	    0x41be1c010000	                         mov r14d, 0x11c	       323	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000687	      0xe800000000	                          call 0x400068c	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x400068c	      0xe930fdffff	                           jmp 0x40003c1	       324	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000691	    0x41be1d010000	                         mov r14d, 0x11d	       312	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000697	      0xe925fdffff	                           jmp 0x40003c1	       312	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400069c	    0x4c8b25000000	            mov r12, qword [0x040006a3] 	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40006a3	          0x4d85e4	                           test r12, r12	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40006a6	     0xf8478fcffff	                            je 0x4000324	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40006ac	         0xf1f4000	                         nop dword [rax]	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40006b0	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x40006b5	          0x4885c0	                           test rax, rax	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x40006b8	     0xf84b0000000	                            je 0x400076e	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x40006be	            0x31db	                            xor ebx, ebx	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x40006c0	            0xeb08	                           jmp 0x40006ca	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x40006c2	    0x660f1f440000	                    nop word [rax + rax]	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x40006c8	            0x89d3	                            mov ebx, edx	       224	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x40006ca	          0x488b00	                    mov rax, qword [rax]	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x40006cd	          0x8d5301	                      lea edx, [rbx + 1]	       224	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x40006d0	          0x4885c0	                           test rax, rax	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x40006d3	            0x75f3	                           jne 0x40006c8	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x40006d5	          0x4863ea	                         movsxd rbp, edx	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006d8	    0x488d3ced0000	                        lea rdi, [rbp*8]	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006e0	      0xe800000000	                          call 0x40006e5	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006e5	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006ea	          0x4989c5	                            mov r13, rax	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006ed	          0x4889c1	                            mov rcx, rax	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x40006f0	          0x4885d2	                           test rdx, rdx	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006f3	            0x7412	                            je 0x4000707	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006f5	           0xf1f00	                         nop dword [rax]	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006f8	          0x488911	                    mov qword [rcx], rdx	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006fb	          0x488b12	                    mov rdx, qword [rdx]	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x40006fe	        0x4883c108	                              add rcx, 8	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000702	          0x4885d2	                           test rdx, rdx	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000705	            0x75f1	                           jne 0x40006f8	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000707	      0xba08000000	                              mov edx, 8	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x400070c	      0xb900000000	                              mov ecx, 0	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x4000711	          0x4889ee	                            mov rsi, rbp	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x4000714	          0x4c89ef	                            mov rdi, r13	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x4000717	      0xe800000000	                          call 0x400071c	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x400071c	        0x498b4500	                    mov rax, qword [r13]	       237	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000720	            0x31d2	                            xor edx, edx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000722	            0x85db	                           test ebx, ebx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000724	      0x4989442420	             mov qword [r12 + 0x20], rax	       238	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000729	            0x742f	                            je 0x400075a	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400072b	          0x8d43ff	                      lea eax, [rbx - 1]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400072e	          0x4c89ea	                            mov rdx, r13	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000731	      0x498d44c508	              lea rax, [r13 + rax*8 + 8]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000736	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000740	          0x488b0a	                    mov rcx, qword [rdx]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000743	        0x488b7208	                mov rsi, qword [rdx + 8]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000747	        0x4883c208	                              add rdx, 8	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400074b	          0x4839d0	                            cmp rax, rdx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400074e	          0x488931	                    mov qword [rcx], rsi	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000751	            0x75ed	                           jne 0x4000740	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000753	          0x4863d3	                         movsxd rdx, ebx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000756	        0x48c1e203	                              shl rdx, 3	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400075a	      0x498b441500	              mov rax, qword [r13 + rdx]	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400075f	          0x4c89ef	                            mov rdi, r13	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x4000762	    0x48c700000000	                      mov qword [rax], 0	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000769	      0xe800000000	                          call 0x400076e	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x400076e	        0x4d8b2424	                    mov r12, qword [r12]	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000772	          0x4d85e4	                           test r12, r12	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000775	     0xf8535ffffff	                           jne 0x40006b0	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400077b	      0xe9a4fbffff	                           jmp 0x4000324	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000780	            0xf3c3	                                     ret	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000782	      0x498b442408	                mov rax, qword [r12 + 8]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000787	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x400078c	        0x4c8b7008	                mov r14, qword [rax + 8]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000790	      0xe800000000	                          call 0x4000795	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000795	          0x4889c5	                            mov rbp, rax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x4000798	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       296	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_15
0x400079d	      0xba05000000	                              mov edx, 5	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007a2	      0xbe00000000	                              mov esi, 0	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007a7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007ab	          0x488b18	                    mov rbx, qword [rax]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007ae	            0x31ff	                            xor edi, edi	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007b0	      0xe800000000	                          call 0x40007b5	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007b5	          0x4c89f1	                            mov rcx, r14	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007b8	          0x4889c7	                            mov rdi, rax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007bb	          0x4889ea	                            mov rdx, rbp	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007be	          0x4889de	                            mov rsi, rbx	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007c1	            0x31c0	                            xor eax, eax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007c3	      0xe800000000	                          call 0x40007c8	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007c8	      0xe936fdffff	                           jmp 0x4000503	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40007cd	      0x498b442408	                mov rax, qword [r12 + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007d2	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007d7	        0x4c8b7008	                mov r14, qword [rax + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007db	      0xe800000000	                          call 0x40007e0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007e0	          0x4889c5	                            mov rbp, rax	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007e3	    0x488b05000000	            mov rax, qword [0x040007ea] 	       280	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_10
0x40007ea	      0xba05000000	                              mov edx, 5	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007ef	      0xbe00000000	                              mov esi, 0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007f4	        0x488b4008	                mov rax, qword [rax + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007f8	          0x488b18	                    mov rbx, qword [rax]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x40007fb	            0xebb1	                           jmp 0x40007ae	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
ldctor_add_set_entry	DO,0:IF,4:ELSE,1:functions,0:WHILE,0:FOR,2:SWITCH,0:CALL,9	102
0x4000170	            0x4157	                                push r15	        60	ldctor.c	FUNCTION_1
0x4000172	            0x4156	                                push r14	        60	ldctor.c	FUNCTION_1
0x4000174	          0x4189f7	                           mov r15d, esi	        60	ldctor.c	FUNCTION_1
0x4000177	            0x4155	                                push r13	        60	ldctor.c	FUNCTION_1
0x4000179	            0x4154	                                push r12	        60	ldctor.c	FUNCTION_1
0x400017b	          0x4989d5	                            mov r13, rdx	        60	ldctor.c	FUNCTION_1
0x400017e	              0x55	                                push rbp	        60	ldctor.c	FUNCTION_1
0x400017f	              0x53	                                push rbx	        60	ldctor.c	FUNCTION_1
0x4000180	          0x4889fd	                            mov rbp, rdi	        60	ldctor.c	FUNCTION_1
0x4000183	          0x4989cc	                            mov r12, rcx	        60	ldctor.c	FUNCTION_1
0x4000186	          0x4d89c6	                             mov r14, r8	        60	ldctor.c	FUNCTION_1
0x4000189	        0x4883ec08	                              sub rsp, 8	        60	ldctor.c	FUNCTION_1
0x400018d	    0x488b1d000000	            mov rbx, qword [0x04000194] 	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000194	          0x4885db	                           test rbx, rbx	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000197	            0x7421	                            je 0x40001ba	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000199	        0x483b7b08	                cmp rdi, qword [rbx + 8]	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x400019d	            0x7513	                           jne 0x40001b2	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x400019f	      0xe9a4000000	                           jmp 0x4000248	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x40001a4	         0xf1f4000	                         nop dword [rax]	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x40001a8	        0x48396b08	                cmp qword [rbx + 8], rbp	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x40001ac	     0xf8496000000	                            je 0x4000248	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x40001b2	          0x488b1b	                    mov rbx, qword [rbx]	        65	ldctor.c	FUNCTION_1	FOR_1
0x40001b5	          0x4885db	                           test rbx, rbx	        65	ldctor.c	FUNCTION_1	FOR_1
0x40001b8	            0x75ee	                           jne 0x40001a8	        65	ldctor.c	FUNCTION_1	FOR_1
0x40001ba	      0xbf28000000	                           mov edi, 0x28	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x40001bf	      0xe800000000	                          call 0x40001c4	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x40001c4	          0x4889c3	                            mov rbx, rax	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x40001c7	    0x488b05000000	            mov rax, qword [0x040001ce] 	        72	ldctor.c	FUNCTION_1	IF_2
0x40001ce	        0x48896b08	                mov qword [rbx + 8], rbp	        74	ldctor.c	FUNCTION_1	IF_2
0x40001d2	        0x44897b10	            mov dword [rbx + 0x10], r15d	        75	ldctor.c	FUNCTION_1	IF_2
0x40001d6	    0x48c743180000	               mov qword [rbx + 0x18], 0	        76	ldctor.c	FUNCTION_1	IF_2
0x40001de	    0x48c743200000	               mov qword [rbx + 0x20], 0	        77	ldctor.c	FUNCTION_1	IF_2
0x40001e6	          0x488903	                    mov qword [rbx], rax	        72	ldctor.c	FUNCTION_1	IF_2
0x40001e9	    0x48891d000000	            mov qword [0x040001f0], rbx 	        73	ldctor.c	FUNCTION_1	IF_2
0x40001f0	      0xbf20000000	                           mov edi, 0x20	       107	ldctor.c	FUNCTION_1	CALL_9
0x40001f5	      0xe800000000	                          call 0x40001fa	       107	ldctor.c	FUNCTION_1	CALL_9
0x40001fa	    0x48c700000000	                      mov qword [rax], 0	       108	ldctor.c	FUNCTION_1
0x4000201	        0x4c896808	                mov qword [rax + 8], r13	       109	ldctor.c	FUNCTION_1
0x4000205	        0x4c896010	             mov qword [rax + 0x10], r12	       110	ldctor.c	FUNCTION_1
0x4000209	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       113	ldctor.c	FUNCTION_1	FOR_2
0x400020d	        0x4c897018	             mov qword [rax + 0x18], r14	       111	ldctor.c	FUNCTION_1
0x4000211	          0x4885c9	                           test rcx, rcx	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000214	            0x750d	                           jne 0x4000223	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000216	      0xe9bd000000	                           jmp 0x40002d8	       113	ldctor.c	FUNCTION_1	FOR_2
0x400021b	       0xf1f440000	                   nop dword [rax + rax]	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000220	          0x4889d1	                            mov rcx, rdx	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000223	          0x488b11	                    mov rdx, qword [rcx]	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000226	          0x4885d2	                           test rdx, rdx	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000229	            0x75f5	                           jne 0x4000220	       113	ldctor.c	FUNCTION_1	FOR_2
0x400022b	          0x488901	                    mov qword [rcx], rax	       115	ldctor.c	FUNCTION_1
0x400022e	      0x4883431801	               add qword [rbx + 0x18], 1	       117	ldctor.c	FUNCTION_1
0x4000233	        0x4883c408	                              add rsp, 8	       118	ldctor.c	FUNCTION_1
0x4000237	              0x5b	                                 pop rbx	       118	ldctor.c	FUNCTION_1
0x4000238	              0x5d	                                 pop rbp	       118	ldctor.c	FUNCTION_1
0x4000239	            0x415c	                                 pop r12	       118	ldctor.c	FUNCTION_1
0x400023b	            0x415d	                                 pop r13	       118	ldctor.c	FUNCTION_1
0x400023d	            0x415e	                                 pop r14	       118	ldctor.c	FUNCTION_1
0x400023f	            0x415f	                                 pop r15	       118	ldctor.c	FUNCTION_1
0x4000241	              0xc3	                                     ret	       118	ldctor.c	FUNCTION_1
0x4000242	    0x660f1f440000	                    nop word [rax + rax]	       118	ldctor.c	FUNCTION_1
0x4000248	        0x44397b10	           cmp dword [rbx + 0x10], r15d 	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x400024c	            0x755a	                           jne 0x40002a8	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x400024e	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000252	          0x4885c0	                           test rax, rax	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000255	            0x7499	                            je 0x40001f0	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000257	    0x498b9424f000	            mov rdx, qword [r12 + 0xf0] 	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400025f	          0x4885d2	                           test rdx, rdx	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000262	            0x748c	                            je 0x40001f0	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000264	        0x488b4010	            mov rax, qword [rax + 0x10] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000268	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400026f	          0x4885c0	                           test rax, rax	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000272	     0xf8478ffffff	                            je 0x40001f0	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x4000278	        0x488b4808	                mov rcx, qword [rax + 8]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x400027c	        0x488b4208	                mov rax, qword [rdx + 8]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000280	          0x488b31	                    mov rsi, qword [rcx]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000283	          0x488b38	                    mov rdi, qword [rax]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000286	      0xe800000000	                          call 0x400028b	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x400028b	            0x85c0	                           test eax, eax	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x400028d	     0xf845dffffff	                            je 0x40001f0	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x4000293	        0x488b5d08	                mov rbx, qword [rbp + 8]	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000297	      0xba05000000	                              mov edx, 5	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x400029c	      0xbe00000000	                              mov esi, 0	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002a1	            0xeb13	                           jmp 0x40002b6	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002a3	       0xf1f440000	                   nop dword [rax + rax]	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002a8	        0x488b5d08	                mov rbx, qword [rbp + 8]	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40002ac	      0xba05000000	                              mov edx, 5	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40002b1	      0xbe00000000	                              mov esi, 0	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40002b6	            0x31ff	                            xor edi, edi	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002b8	      0xe800000000	                          call 0x40002bd	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002bd	        0x4883c408	                              add rsp, 8	       118	ldctor.c	FUNCTION_1
0x40002c1	          0x4889de	                            mov rsi, rbx	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002c4	          0x4889c7	                            mov rdi, rax	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002c7	              0x5b	                                 pop rbx	       118	ldctor.c	FUNCTION_1
0x40002c8	              0x5d	                                 pop rbp	       118	ldctor.c	FUNCTION_1
0x40002c9	            0x415c	                                 pop r12	       118	ldctor.c	FUNCTION_1
0x40002cb	            0x415d	                                 pop r13	       118	ldctor.c	FUNCTION_1
0x40002cd	            0x415e	                                 pop r14	       118	ldctor.c	FUNCTION_1
0x40002cf	            0x415f	                                 pop r15	       118	ldctor.c	FUNCTION_1
0x40002d1	            0x31c0	                            xor eax, eax	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002d3	      0xe900000000	                           jmp 0x40002d8	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40002d8	        0x488d4b20	                   lea rcx, [rbx + 0x20]	       113	ldctor.c	FUNCTION_1	FOR_2
0x40002dc	      0xe94affffff	                           jmp 0x400022b	       113	ldctor.c	FUNCTION_1	FOR_2
