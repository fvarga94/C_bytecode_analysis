flonum_copy	functions,0:SWITCH,0:WHILE,0:ELSE,2:CALL,3:FOR,0:DO,0:IF,3	64
0x4000040	            0x4154	                                push r12	        25	flonum-copy.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        25	flonum-copy.c	FUNCTION_1
0x4000043	          0x4889f5	                            mov rbp, rsi	        25	flonum-copy.c	FUNCTION_1
0x4000046	              0x53	                                push rbx	        25	flonum-copy.c	FUNCTION_1
0x4000047	         0xfb64720	           movzx eax, byte [rdi + 0x20] 	        29	flonum-copy.c	FUNCTION_1
0x400004b	          0x884620	               mov byte [rsi + 0x20], al	        29	flonum-copy.c	FUNCTION_1
0x400004e	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        30	flonum-copy.c	FUNCTION_1
0x4000052	          0x488b37	                    mov rsi, qword [rdi]	        30	flonum-copy.c	FUNCTION_1
0x4000055	          0x4839f0	                            cmp rax, rsi	        32	flonum-copy.c	FUNCTION_1	IF_1
0x4000058	            0x7266	                            jb 0x40000c0	        32	flonum-copy.c	FUNCTION_1	IF_1
0x400005a	          0x4989fc	                            mov r12, rdi	        32	flonum-copy.c	FUNCTION_1	IF_1
0x400005d	        0x488b5508	                mov rdx, qword [rbp + 8]	        38	flonum-copy.c	FUNCTION_1	ELSE_1
0x4000061	        0x488b7d00	                    mov rdi, qword [rbp]	        38	flonum-copy.c	FUNCTION_1	ELSE_1
0x4000065	          0x4829f0	                            sub rax, rsi	        30	flonum-copy.c	FUNCTION_1
0x4000068	          0x48d1f8	                              sar rax, 1	        30	flonum-copy.c	FUNCTION_1
0x400006b	          0x4829fa	                            sub rdx, rdi	        38	flonum-copy.c	FUNCTION_1	ELSE_1
0x400006e	          0x4889c3	                            mov rbx, rax	        30	flonum-copy.c	FUNCTION_1
0x4000071	          0x48d1fa	                              sar rdx, 1	        38	flonum-copy.c	FUNCTION_1	ELSE_1
0x4000074	            0x39d0	                            cmp eax, edx	        41	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x4000076	            0x7760	                            ja 0x40000d8	        41	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x4000078	            0x7318	                           jae 0x4000092	        47	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x400007a	            0x29c2	                            sub edx, eax	        90	string3.h	FUNCTION_5	CALL_6
0x400007c	            0x89c0	                            mov eax, eax	        90	string3.h	FUNCTION_5	CALL_6
0x400007e	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_5	CALL_6
0x4000080	      0x488d7c4702	              lea rdi, [rdi + rax*2 + 2]	        90	string3.h	FUNCTION_5	CALL_6
0x4000085	      0xe800000000	                          call 0x400008a	        90	string3.h	FUNCTION_5	CALL_6
0x400008a	        0x498b3424	                    mov rsi, qword [r12]	        90	string3.h	FUNCTION_5	CALL_6
0x400008e	        0x488b7d00	                    mov rdi, qword [rbp]	        90	string3.h	FUNCTION_5	CALL_6
0x4000092	          0x8d5301	                      lea edx, [rbx + 1]	        53	string3.h	FUNCTION_2	CALL_3
0x4000095	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_2	CALL_3
0x4000098	      0xe800000000	                          call 0x400009d	        53	string3.h	FUNCTION_2	CALL_3
0x400009d	      0x498b442418	            mov rax, qword [r12 + 0x18] 	        55	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000a2	        0x48894518	            mov qword [rbp + 0x18], rax 	        55	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000a6	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000ab	        0x492b0424	                    sub rax, qword [r12]	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000af	        0x48034500	                    add rax, qword [rbp]	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000b3	        0x48894510	            mov qword [rbp + 0x10], rax 	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000b7	              0x5b	                                 pop rbx	        70	flonum-copy.c	FUNCTION_1
0x40000b8	              0x5d	                                 pop rbp	        70	flonum-copy.c	FUNCTION_1
0x40000b9	            0x415c	                                 pop r12	        70	flonum-copy.c	FUNCTION_1
0x40000bb	              0xc3	                                     ret	        70	flonum-copy.c	FUNCTION_1
0x40000bc	         0xf1f4000	                         nop dword [rax]	        70	flonum-copy.c	FUNCTION_1
0x40000c0	        0x488b4500	                    mov rax, qword [rbp]	        34	flonum-copy.c	FUNCTION_1	IF_1
0x40000c4	        0x4883e802	                              sub rax, 2	        34	flonum-copy.c	FUNCTION_1	IF_1
0x40000c8	        0x48894510	            mov qword [rbp + 0x10], rax 	        34	flonum-copy.c	FUNCTION_1	IF_1
0x40000cc	              0x5b	                                 pop rbx	        70	flonum-copy.c	FUNCTION_1
0x40000cd	              0x5d	                                 pop rbp	        70	flonum-copy.c	FUNCTION_1
0x40000ce	            0x415c	                                 pop r12	        70	flonum-copy.c	FUNCTION_1
0x40000d0	              0xc3	                                     ret	        70	flonum-copy.c	FUNCTION_1
0x40000d1	     0xf1f80000000	                         nop dword [rax]	        70	flonum-copy.c	FUNCTION_1
0x40000d8	            0x29d3	                            sub ebx, edx	        62	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000da	          0x83c201	                              add edx, 1	        53	string3.h	FUNCTION_2	CALL_3
0x40000dd	          0x4863db	                         movsxd rbx, ebx	        53	string3.h	FUNCTION_2	CALL_3
0x40000e0	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_2	CALL_3
0x40000e3	        0x488d345e	                  lea rsi, [rsi + rbx*2]	        53	string3.h	FUNCTION_2	CALL_3
0x40000e7	      0xe800000000	                          call 0x40000ec	        53	string3.h	FUNCTION_2	CALL_3
0x40000ec	      0x49035c2418	             add rbx, qword [r12 + 0x18]	        67	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000f1	        0x488b4508	                mov rax, qword [rbp + 8]	        66	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000f5	        0x48894510	            mov qword [rbp + 0x10], rax 	        66	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000f9	        0x48895d18	            mov qword [rbp + 0x18], rbx 	        67	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000fd	              0x5b	                                 pop rbx	        70	flonum-copy.c	FUNCTION_1
0x40000fe	              0x5d	                                 pop rbp	        70	flonum-copy.c	FUNCTION_1
0x40000ff	            0x415c	                                 pop r12	        70	flonum-copy.c	FUNCTION_1
0x4000101	              0xc3	                                     ret	        70	flonum-copy.c	FUNCTION_1
