bfd_default_scan	DO,0:WHILE,1:IF,14:functions,0:FOR,1:CALL,10:ELSE,1:SWITCH,1	226
0x4000040	            0x4157	                                push r15	      1070	archures.c	FUNCTION_12
0x4000042	            0x4156	                                push r14	      1070	archures.c	FUNCTION_12
0x4000044	            0x4155	                                push r13	      1070	archures.c	FUNCTION_12
0x4000046	            0x4154	                                push r12	      1070	archures.c	FUNCTION_12
0x4000048	          0x4989fc	                            mov r12, rdi	      1070	archures.c	FUNCTION_12
0x400004b	              0x55	                                push rbp	      1070	archures.c	FUNCTION_12
0x400004c	              0x53	                                push rbx	      1070	archures.c	FUNCTION_12
0x400004d	          0x4889f3	                            mov rbx, rsi	      1070	archures.c	FUNCTION_12
0x4000050	        0x4883ec08	                              sub rsp, 8	      1070	archures.c	FUNCTION_12
0x4000054	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000058	          0x4889df	                            mov rdi, rbx	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x400005b	          0x4889ee	                            mov rsi, rbp	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x400005e	      0xe800000000	                          call 0x4000063	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000063	            0x85c0	                           test eax, eax	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000065	            0x7513	                           jne 0x400007a	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000067	      0x418b44242c	            mov eax, dword [r12 + 0x2c] 	      1080	archures.c	FUNCTION_12	IF_1
0x400006c	    0x41bf01000000	                             mov r15d, 1	      1081	archures.c	FUNCTION_12	IF_1
0x4000072	            0x85c0	                           test eax, eax	      1080	archures.c	FUNCTION_12	IF_1
0x4000074	     0xf8596000000	                           jne 0x4000110	      1080	archures.c	FUNCTION_12	IF_1
0x400007a	      0x4d8b6c2420	            mov r13, qword [r12 + 0x20] 	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x400007f	          0x4889df	                            mov rdi, rbx	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x4000082	    0x41bf01000000	                             mov r15d, 1	      1081	archures.c	FUNCTION_12	IF_1
0x4000088	          0x4c89ee	                            mov rsi, r13	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x400008b	      0xe800000000	                          call 0x4000090	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x4000090	            0x85c0	                           test eax, eax	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x4000092	            0x747c	                            je 0x4000110	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x4000094	      0xbe3a000000	                           mov esi, 0x3a	      1089	archures.c	FUNCTION_12	CALL_3
0x4000099	          0x4c89ef	                            mov rdi, r13	      1089	archures.c	FUNCTION_12	CALL_3
0x400009c	      0xe800000000	                          call 0x40000a1	      1089	archures.c	FUNCTION_12	CALL_3
0x40000a1	          0x4885c0	                           test rax, rax	      1090	archures.c	FUNCTION_12	IF_3
0x40000a4	     0xf84b6010000	                            je 0x4000260	      1090	archures.c	FUNCTION_12	IF_3
0x40000aa	          0x4c29e8	                            sub rax, r13	      1114	archures.c	FUNCTION_12	IF_8
0x40000ad	          0x4c89ee	                            mov rsi, r13	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x40000b0	          0x4889df	                            mov rdi, rbx	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x40000b3	          0x4889c2	                            mov rdx, rax	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x40000b6	          0x4989c6	                            mov r14, rax	      1114	archures.c	FUNCTION_12	IF_8
0x40000b9	      0xe800000000	                          call 0x40000be	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x40000be	            0x85c0	                           test eax, eax	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x40000c0	            0x7512	                           jne 0x40000d4	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x40000c2	      0x4b8d743501	                lea rsi, [r13 + r14 + 1]	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x40000c7	        0x4a8d3c33	                    lea rdi, [rbx + r14]	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x40000cb	      0xe800000000	                          call 0x40000d0	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x40000d0	            0x85c0	                           test eax, eax	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x40000d2	            0x743c	                            je 0x4000110	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x40000d4	           0xfb603	                   movzx eax, byte [rbx]	      1133	archures.c	FUNCTION_12	FOR_1
0x40000d7	            0x84c0	                             test al, al	      1132	archures.c	FUNCTION_12	FOR_1
0x40000d9	            0x7430	                            je 0x400010b	      1132	archures.c	FUNCTION_12	FOR_1
0x40000db	         0xfb65500	                   movzx edx, byte [rbp]	      1133	archures.c	FUNCTION_12	FOR_1
0x40000df	            0x84d2	                             test dl, dl	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000e1	            0x7445	                            je 0x4000128	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000e3	            0x38c2	                              cmp dl, al	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000e5	            0x7415	                            je 0x40000fc	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000e7	            0xeb3f	                           jmp 0x4000128	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000e9	     0xf1f80000000	                         nop dword [rax]	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000f0	         0xfb65500	                   movzx edx, byte [rbp]	      1133	archures.c	FUNCTION_12	FOR_1
0x40000f4	            0x38d0	                              cmp al, dl	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000f6	            0x7530	                           jne 0x4000128	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000f8	            0x84d2	                             test dl, dl	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000fa	            0x742c	                            je 0x4000128	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x40000fc	        0x4883c301	                              add rbx, 1	      1134	archures.c	FUNCTION_12	FOR_1
0x4000100	           0xfb603	                   movzx eax, byte [rbx]	      1133	archures.c	FUNCTION_12	FOR_1
0x4000103	        0x4883c501	                              add rbp, 1	      1134	archures.c	FUNCTION_12	FOR_1
0x4000107	            0x84c0	                             test al, al	      1132	archures.c	FUNCTION_12	FOR_1
0x4000109	            0x75e5	                           jne 0x40000f0	      1132	archures.c	FUNCTION_12	FOR_1
0x400010b	      0x458b7c242c	           mov r15d, dword [r12 + 0x2c] 	      1149	archures.c	FUNCTION_12	IF_12
0x4000110	        0x4883c408	                              add rsp, 8	      1258	archures.c	FUNCTION_12
0x4000114	          0x4489f8	                           mov eax, r15d	      1258	archures.c	FUNCTION_12
0x4000117	              0x5b	                                 pop rbx	      1258	archures.c	FUNCTION_12
0x4000118	              0x5d	                                 pop rbp	      1258	archures.c	FUNCTION_12
0x4000119	            0x415c	                                 pop r12	      1258	archures.c	FUNCTION_12
0x400011b	            0x415d	                                 pop r13	      1258	archures.c	FUNCTION_12
0x400011d	            0x415e	                                 pop r14	      1258	archures.c	FUNCTION_12
0x400011f	            0x415f	                                 pop r15	      1258	archures.c	FUNCTION_12
0x4000121	              0xc3	                                     ret	      1258	archures.c	FUNCTION_12
0x4000122	    0x660f1f440000	                    nop word [rax + rax]	      1258	archures.c	FUNCTION_12
0x4000128	            0x3c3a	                            cmp al, 0x3a	      1142	archures.c	FUNCTION_12	IF_11
0x400012a	          0x4889d9	                            mov rcx, rbx	      1142	archures.c	FUNCTION_12	IF_11
0x400012d	     0xf849d000000	                            je 0x40001d0	      1142	archures.c	FUNCTION_12	IF_11
0x4000133	           0xfb6f0	                           movzx esi, al	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000136	            0x31d2	                            xor edx, edx	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000138	    0xf68436000000	                test byte [rsi + rsi], 4	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000140	     0xf84e6010000	                            je 0x400032c	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000146	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000150	        0x4883c101	                              add rcx, 1	      1156	archures.c	FUNCTION_12	WHILE_1
0x4000154	           0xfb631	                   movzx esi, byte [rcx]	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000157	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1155	archures.c	FUNCTION_12	WHILE_1
0x400015b	        0x480fbec0	                           movsx rax, al	      1155	archures.c	FUNCTION_12	WHILE_1
0x400015f	      0x488d5450d0	           lea rdx, [rax + rdx*2 - 0x30]	      1155	archures.c	FUNCTION_12	WHILE_1
0x4000164	    0xf68436000000	                test byte [rsi + rsi], 4	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x400016c	          0x4889f0	                            mov rax, rsi	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x400016f	            0x75df	                           jne 0x4000150	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x4000171	    0x4881fa1c1e00	                         cmp rdx, 0x1e1c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000178	     0xf840b020000	                            je 0x4000389	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400017e	            0x7768	                            ja 0x40001e8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000180	    0x4881faa21400	                         cmp rdx, 0x14a2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000187	     0xf84ed010000	                            je 0x400037a	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400018d	     0xf864d010000	                           jbe 0x40002e0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000193	    0x4881fa1f1500	                         cmp rdx, 0x151f	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400019a	     0xf849e010000	                            je 0x400033e	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001a0	     0xf867d010000	                           jbe 0x4000323	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001a6	    0x4881fa701700	                         cmp rdx, 0x1770	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001ad	     0xf8481010000	                            je 0x4000334	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001b3	    0x4881faf21c00	                         cmp rdx, 0x1cf2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001ba	     0xf856c010000	                           jne 0x400032c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001c0	      0xb81f000000	                           mov eax, 0x1f	      1228	archures.c	FUNCTION_12	SWITCH_1
0x40001c5	      0xba2d000000	                           mov edx, 0x2d	      1229	archures.c	FUNCTION_12	SWITCH_1
0x40001ca	            0xeb6c	                           jmp 0x4000238	      1230	archures.c	FUNCTION_12	SWITCH_1
0x40001cc	         0xf1f4000	                         nop dword [rax]	      1230	archures.c	FUNCTION_12	SWITCH_1
0x40001d0	         0xfb64301	               movzx eax, byte [rbx + 1]	      1145	archures.c	FUNCTION_12	IF_12
0x40001d4	        0x488d4b01	                      lea rcx, [rbx + 1]	      1143	archures.c	FUNCTION_12	IF_11
0x40001d8	            0x84c0	                             test al, al	      1145	archures.c	FUNCTION_12	IF_12
0x40001da	     0xf8553ffffff	                           jne 0x4000133	      1145	archures.c	FUNCTION_12	IF_12
0x40001e0	      0xe926ffffff	                           jmp 0x400010b	      1145	archures.c	FUNCTION_12	IF_12
0x40001e5	           0xf1f00	                         nop dword [rax]	      1145	archures.c	FUNCTION_12	IF_12
0x40001e8	    0x4881fab40901	                        cmp rdx, 0x109b4	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001ef	     0xf8458010000	                            je 0x400034d	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001f5	     0xf87ad000000	                            ja 0x40002a8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001fb	    0x4881fa461e00	                         cmp rdx, 0x1e46	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000202	     0xf8454010000	                            je 0x400035c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000208	     0xf86b7010000	                           jbe 0x40003c5	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400020e	    0x4881faa00901	                        cmp rdx, 0x109a0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000215	     0xf849b010000	                            je 0x40003b6	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400021b	    0x4881faaa0901	                        cmp rdx, 0x109aa	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000222	     0xf8504010000	                           jne 0x400032c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000228	      0xb802000000	                              mov eax, 2	      1169	archures.c	FUNCTION_12	SWITCH_1
0x400022d	      0xba03000000	                              mov edx, 3	      1170	archures.c	FUNCTION_12	SWITCH_1
0x4000232	    0x660f1f440000	                    nop word [rax + rax]	      1170	archures.c	FUNCTION_12	SWITCH_1
0x4000238	          0x4531ff	                          xor r15d, r15d	      1248	archures.c	FUNCTION_12	SWITCH_1
0x400023b	      0x413b44240c	              cmp eax, dword [r12 + 0xc]	      1251	archures.c	FUNCTION_12	IF_13
0x4000240	     0xf85cafeffff	                           jne 0x4000110	      1251	archures.c	FUNCTION_12	IF_13
0x4000246	          0x4531ff	                          xor r15d, r15d	      1081	archures.c	FUNCTION_12	IF_1
0x4000249	      0x4939542410	            cmp qword [r12 + 0x10], rdx 	      1081	archures.c	FUNCTION_12	IF_1
0x400024e	        0x410f94c7	                               sete r15b	      1081	archures.c	FUNCTION_12	IF_1
0x4000252	      0xe9b9feffff	                           jmp 0x4000110	      1081	archures.c	FUNCTION_12	IF_1
0x4000257	    0x660f1f840000	                    nop word [rax + rax]	      1081	archures.c	FUNCTION_12	IF_1
0x4000260	          0x4889ef	                            mov rdi, rbp	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x4000263	      0xe800000000	                          call 0x4000268	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x4000268	          0x4889ee	                            mov rsi, rbp	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x400026b	          0x4889c2	                            mov rdx, rax	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x400026e	          0x4889df	                            mov rdi, rbx	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000271	          0x4989c6	                            mov r14, rax	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x4000274	      0xe800000000	                          call 0x4000279	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000279	            0x85c0	                           test eax, eax	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x400027b	     0xf8553feffff	                           jne 0x40000d4	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x4000281	        0x4a8d3c33	                    lea rdi, [rbx + r14]	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x4000285	          0x803f3a	                    cmp byte [rdi], 0x3a	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x4000288	     0xf846f010000	                            je 0x40003fd	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x400028e	          0x4c89ee	                            mov rsi, r13	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x4000291	      0xe800000000	                          call 0x4000296	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x4000296	            0x85c0	                           test eax, eax	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x4000298	     0xf8536feffff	                           jne 0x40000d4	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x400029e	      0xe96dfeffff	                           jmp 0x4000110	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40002a3	       0xf1f440000	                   nop dword [rax + rax]	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x40002a8	    0x4881fac80901	                        cmp rdx, 0x109c8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002af	     0xf84b6000000	                            je 0x400036b	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002b5	     0xf8626010000	                           jbe 0x40003e1	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002bb	    0x4881fadc0901	                        cmp rdx, 0x109dc	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002c2	     0xf84d0000000	                            je 0x4000398	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002c8	    0x4881faec0a01	                        cmp rdx, 0x10aec	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002cf	            0x755b	                           jne 0x400032c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002d1	      0xb802000000	                              mov eax, 2	      1189	archures.c	FUNCTION_12	SWITCH_1
0x40002d6	      0xba08000000	                              mov edx, 8	      1190	archures.c	FUNCTION_12	SWITCH_1
0x40002db	      0xe958ffffff	                           jmp 0x4000238	      1191	archures.c	FUNCTION_12	SWITCH_1
0x40002e0	    0x4881faa00f00	                          cmp rdx, 0xfa0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002e7	            0x7430	                            je 0x4000319	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002e9	            0x7625	                           jbe 0x4000310	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002eb	    0x4881fa501400	                         cmp rdx, 0x1450	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002f2	     0xf84af000000	                            je 0x40003a7	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002f8	    0x4881fa561400	                         cmp rdx, 0x1456	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002ff	            0x752b	                           jne 0x400032c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000301	      0xb802000000	                              mov eax, 2	      1201	archures.c	FUNCTION_12	SWITCH_1
0x4000306	      0xba0c000000	                            mov edx, 0xc	      1202	archures.c	FUNCTION_12	SWITCH_1
0x400030b	      0xe928ffffff	                           jmp 0x4000238	      1203	archures.c	FUNCTION_12	SWITCH_1
0x4000310	    0x4881fab80b00	                          cmp rdx, 0xbb8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000317	            0x7513	                           jne 0x400032c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000319	      0xb807000000	                              mov eax, 7	      1219	archures.c	FUNCTION_12	SWITCH_1
0x400031e	      0xe915ffffff	                           jmp 0x4000238	      1221	archures.c	FUNCTION_12	SWITCH_1
0x4000323	    0x4881fabb1400	                         cmp rdx, 0x14bb	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400032a	            0x74d5	                            je 0x4000301	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400032c	          0x4531ff	                          xor r15d, r15d	      1248	archures.c	FUNCTION_12	SWITCH_1
0x400032f	      0xe9dcfdffff	                           jmp 0x4000110	      1248	archures.c	FUNCTION_12	SWITCH_1
0x4000334	      0xb814000000	                           mov eax, 0x14	      1224	archures.c	FUNCTION_12	SWITCH_1
0x4000339	      0xe9fafeffff	                           jmp 0x4000238	      1225	archures.c	FUNCTION_12	SWITCH_1
0x400033e	      0xb802000000	                              mov eax, 2	      1205	archures.c	FUNCTION_12	SWITCH_1
0x4000343	      0xba12000000	                           mov edx, 0x12	      1206	archures.c	FUNCTION_12	SWITCH_1
0x4000348	      0xe9ebfeffff	                           jmp 0x4000238	      1207	archures.c	FUNCTION_12	SWITCH_1
0x400034d	      0xb802000000	                              mov eax, 2	      1173	archures.c	FUNCTION_12	SWITCH_1
0x4000352	      0xba04000000	                              mov edx, 4	      1174	archures.c	FUNCTION_12	SWITCH_1
0x4000357	      0xe9dcfeffff	                           jmp 0x4000238	      1175	archures.c	FUNCTION_12	SWITCH_1
0x400035c	      0xb81f000000	                           mov eax, 0x1f	      1243	archures.c	FUNCTION_12	SWITCH_1
0x4000361	      0xba40000000	                           mov edx, 0x40	      1244	archures.c	FUNCTION_12	SWITCH_1
0x4000366	      0xe9cdfeffff	                           jmp 0x4000238	      1245	archures.c	FUNCTION_12	SWITCH_1
0x400036b	      0xb802000000	                              mov eax, 2	      1181	archures.c	FUNCTION_12	SWITCH_1
0x4000370	      0xba06000000	                              mov edx, 6	      1182	archures.c	FUNCTION_12	SWITCH_1
0x4000375	      0xe9befeffff	                           jmp 0x4000238	      1183	archures.c	FUNCTION_12	SWITCH_1
0x400037a	      0xb802000000	                              mov eax, 2	      1209	archures.c	FUNCTION_12	SWITCH_1
0x400037f	      0xba10000000	                           mov edx, 0x10	      1210	archures.c	FUNCTION_12	SWITCH_1
0x4000384	      0xe9affeffff	                           jmp 0x4000238	      1211	archures.c	FUNCTION_12	SWITCH_1
0x4000389	      0xb81f000000	                           mov eax, 0x1f	      1233	archures.c	FUNCTION_12	SWITCH_1
0x400038e	      0xba30000000	                           mov edx, 0x30	      1234	archures.c	FUNCTION_12	SWITCH_1
0x4000393	      0xe9a0feffff	                           jmp 0x4000238	      1235	archures.c	FUNCTION_12	SWITCH_1
0x4000398	      0xb802000000	                              mov eax, 2	      1185	archures.c	FUNCTION_12	SWITCH_1
0x400039d	      0xba07000000	                              mov edx, 7	      1186	archures.c	FUNCTION_12	SWITCH_1
0x40003a2	      0xe991feffff	                           jmp 0x4000238	      1187	archures.c	FUNCTION_12	SWITCH_1
0x40003a7	      0xb802000000	                              mov eax, 2	      1193	archures.c	FUNCTION_12	SWITCH_1
0x40003ac	      0xba0a000000	                            mov edx, 0xa	      1194	archures.c	FUNCTION_12	SWITCH_1
0x40003b1	      0xe982feffff	                           jmp 0x4000238	      1195	archures.c	FUNCTION_12	SWITCH_1
0x40003b6	      0xb802000000	                              mov eax, 2	      1165	archures.c	FUNCTION_12	SWITCH_1
0x40003bb	      0xba01000000	                              mov edx, 1	      1166	archures.c	FUNCTION_12	SWITCH_1
0x40003c0	      0xe973feffff	                           jmp 0x4000238	      1166	archures.c	FUNCTION_12	SWITCH_1
0x40003c5	    0x4881fa311e00	                         cmp rdx, 0x1e31	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40003cc	     0xf855affffff	                           jne 0x400032c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40003d2	      0xb81f000000	                           mov eax, 0x1f	      1238	archures.c	FUNCTION_12	SWITCH_1
0x40003d7	      0xba3d000000	                           mov edx, 0x3d	      1239	archures.c	FUNCTION_12	SWITCH_1
0x40003dc	      0xe957feffff	                           jmp 0x4000238	      1240	archures.c	FUNCTION_12	SWITCH_1
0x40003e1	    0x4881fabe0901	                        cmp rdx, 0x109be	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40003e8	     0xf853effffff	                           jne 0x400032c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40003ee	      0xb802000000	                              mov eax, 2	      1177	archures.c	FUNCTION_12	SWITCH_1
0x40003f3	      0xba05000000	                              mov edx, 5	      1178	archures.c	FUNCTION_12	SWITCH_1
0x40003f8	      0xe93bfeffff	                           jmp 0x4000238	      1179	archures.c	FUNCTION_12	SWITCH_1
0x40003fd	      0x4a8d7c3301	                lea rdi, [rbx + r14 + 1]	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x4000402	          0x4c89ee	                            mov rsi, r13	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x4000405	      0xe800000000	                          call 0x400040a	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x400040a	            0x85c0	                           test eax, eax	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x400040c	     0xf85c2fcffff	                           jne 0x40000d4	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x4000412	      0xe9f9fcffff	                           jmp 0x4000110	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
bfd_arch_get_compatible	DO,0:WHILE,0:IF,3:functions,0:FOR,0:CALL,3:ELSE,2:SWITCH,0	29
0x4000570	    0x488b8fc00000	            mov rcx, qword [rdi + 0xc0] 	       865	archures.c	FUNCTION_4	IF_1
0x4000577	          0x4889f0	                            mov rax, rsi	       861	archures.c	FUNCTION_4
0x400057a	        0x448b490c	              mov r9d, dword [rcx + 0xc]	       865	archures.c	FUNCTION_4	IF_1
0x400057e	          0x4585c9	                           test r9d, r9d	       865	archures.c	FUNCTION_4	IF_1
0x4000581	            0x7419	                            je 0x400059c	       865	archures.c	FUNCTION_4	IF_1
0x4000583	    0x488bb6c00000	            mov rsi, qword [rsi + 0xc0] 	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x400058a	        0x448b460c	              mov r8d, dword [rsi + 0xc]	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x400058e	          0x4585c0	                           test r8d, r8d	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000591	            0x753d	                           jne 0x40005d0	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000593	          0x4889f9	                            mov rcx, rdi	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000596	          0x4889c7	                            mov rdi, rax	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000599	          0x4889c8	                            mov rax, rcx	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x400059c	            0x85d2	                           test edx, edx	       878	archures.c	FUNCTION_4	IF_3
0x400059e	            0x7410	                            je 0x40005b0	       878	archures.c	FUNCTION_4	IF_3
0x40005a0	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       880	archures.c	FUNCTION_4	IF_3
0x40005a7	              0xc3	                                     ret	       880	archures.c	FUNCTION_4	IF_3
0x40005a8	     0xf1f84000000	                   nop dword [rax + rax]	       880	archures.c	FUNCTION_4	IF_3
0x40005b0	        0x488b5708	                mov rdx, qword [rdi + 8]	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005b4	      0xb907000000	                              mov ecx, 7	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005b9	      0xbf00000000	                              mov edi, 0	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005be	          0x488b32	                    mov rsi, qword [rdx]	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005c1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005c3	            0x74db	                            je 0x40005a0	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005c5	            0x31c0	                            xor eax, eax	       881	archures.c	FUNCTION_4
0x40005c7	              0xc3	                                     ret	       882	archures.c	FUNCTION_4
0x40005c8	     0xf1f84000000	                   nop dword [rax + rax]	       882	archures.c	FUNCTION_4
0x40005d0	        0x488b4130	            mov rax, qword [rcx + 0x30] 	       871	archures.c	FUNCTION_4	CALL_1
0x40005d4	          0x4889cf	                            mov rdi, rcx	       871	archures.c	FUNCTION_4	CALL_1
0x40005d7	            0xffe0	                                 jmp rax	       871	archures.c	FUNCTION_4	CALL_1
bfd_arch_default_fill	DO,0:WHILE,0:IF,1:functions,0:FOR,0:CALL,2:ELSE,0:SWITCH,0	17
0x4000420	              0x55	                                push rbp	      1401	archures.c	FUNCTION_18
0x4000421	              0x53	                                push rbx	      1401	archures.c	FUNCTION_18
0x4000422	          0x4889fd	                            mov rbp, rdi	      1401	archures.c	FUNCTION_18
0x4000425	        0x4883ec08	                              sub rsp, 8	      1401	archures.c	FUNCTION_18
0x4000429	      0xe800000000	                          call 0x400042e	      1402	archures.c	FUNCTION_18	CALL_1
0x400042e	          0x4885c0	                           test rax, rax	      1403	archures.c	FUNCTION_18	IF_1
0x4000431	          0x4889c3	                            mov rbx, rax	      1402	archures.c	FUNCTION_18	CALL_1
0x4000434	            0x740d	                            je 0x4000443	      1403	archures.c	FUNCTION_18	IF_1
0x4000436	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_23	CALL_6
0x4000439	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_23	CALL_6
0x400043b	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_23	CALL_6
0x400043e	      0xe800000000	                          call 0x4000443	        90	string3.h	FUNCTION_23	CALL_6
0x4000443	        0x4883c408	                              add rsp, 8	      1406	archures.c	FUNCTION_18
0x4000447	          0x4889d8	                            mov rax, rbx	      1406	archures.c	FUNCTION_18
0x400044a	              0x5b	                                 pop rbx	      1406	archures.c	FUNCTION_18
0x400044b	              0x5d	                                 pop rbp	      1406	archures.c	FUNCTION_18
0x400044c	              0xc3	                                     ret	      1406	archures.c	FUNCTION_18
bfd_set_arch_info	DO,0:WHILE,0:IF,0:functions,0:FOR,0:CALL,0:ELSE,0:SWITCH,0	2
0x40005e0	    0x4889b7c00000	             mov qword [rdi + 0xc0], rsi	       920	archures.c	FUNCTION_5
0x40005e7	              0xc3	                                     ret	       920	archures.c	FUNCTION_5
bfd_printable_arch_mach	DO,0:WHILE,0:IF,1:functions,0:FOR,0:CALL,1:ELSE,0:SWITCH,0	35
0x4000750	      0xba00000000	                              mov edx, 0	      1328	archures.c	FUNCTION_15
0x4000755	      0xb800000000	                              mov eax, 0	      1328	archures.c	FUNCTION_15
0x400075a	          0x4885f6	                           test rsi, rsi	      1328	archures.c	FUNCTION_15
0x400075d	            0x7440	                            je 0x400079f	      1328	archures.c	FUNCTION_15
0x400075f	            0xeb10	                           jmp 0x4000771	      1328	archures.c	FUNCTION_15
0x4000761	     0xf1f80000000	                         nop dword [rax]	      1328	archures.c	FUNCTION_15
0x4000768	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400076c	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400076f	            0x743c	                            je 0x40007ad	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000771	          0x3b780c	              cmp edi, dword [rax + 0xc]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000774	            0x75f2	                           jne 0x4000768	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000776	        0x483b7010	            cmp rsi, qword [rax + 0x10] 	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400077a	            0x75ec	                           jne 0x4000768	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400077c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1332	archures.c	FUNCTION_15	IF_1
0x4000780	              0xc3	                                     ret	      1334	archures.c	FUNCTION_15
0x4000781	     0xf1f80000000	                         nop dword [rax]	      1334	archures.c	FUNCTION_15
0x4000788	      0x4883781000	               cmp qword [rax + 0x10], 0	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400078d	            0x74ed	                            je 0x400077c	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400078f	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000792	            0x85c9	                           test ecx, ecx	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000794	            0x75e6	                           jne 0x400077c	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000796	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400079a	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400079d	            0x740e	                            je 0x40007ad	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400079f	          0x3b780c	              cmp edi, dword [rax + 0xc]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x40007a2	            0x74e4	                            je 0x4000788	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x40007a4	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x40007a8	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x40007ab	            0x75f2	                           jne 0x400079f	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x40007ad	        0x4883c208	                              add rdx, 8	      1297	archures.c	FUNCTION_14	FOR_1
0x40007b1	          0x488b02	                    mov rax, qword [rdx]	      1297	archures.c	FUNCTION_14	FOR_1
0x40007b4	          0x4885c0	                           test rax, rax	      1297	archures.c	FUNCTION_14	FOR_1
0x40007b7	            0x75a1	                           jne 0x400075a	      1297	archures.c	FUNCTION_14	FOR_1
0x40007b9	      0xb800000000	                              mov eax, 0	      1333	archures.c	FUNCTION_15
0x40007be	              0xc3	                                     ret	      1333	archures.c	FUNCTION_15
bfd_get_arch_info	DO,0:WHILE,0:IF,0:functions,0:FOR,0:CALL,0:ELSE,0:SWITCH,0	2
0x40006d0	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	      1274	archures.c	FUNCTION_13
0x40006d7	              0xc3	                                     ret	      1275	archures.c	FUNCTION_13
bfd_printable_name	DO,0:WHILE,0:IF,0:functions,0:FOR,0:CALL,0:ELSE,0:SWITCH,0	3
0x4000480	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	       754	archures.c	FUNCTION_1
0x4000487	        0x488b4020	            mov rax, qword [rax + 0x20] 	       754	archures.c	FUNCTION_1
0x400048b	              0xc3	                                     ret	       755	archures.c	FUNCTION_1
bfd_default_set_arch_mach	DO,0:WHILE,0:IF,1:functions,0:FOR,0:CALL,2:ELSE,0:SWITCH,0	41
0x40005f0	      0xb900000000	                              mov ecx, 0	       942	archures.c	FUNCTION_6
0x40005f5	      0xb800000000	                              mov eax, 0	       942	archures.c	FUNCTION_6
0x40005fa	          0x4885d2	                           test rdx, rdx	       942	archures.c	FUNCTION_6
0x40005fd	            0x744a	                            je 0x4000649	       942	archures.c	FUNCTION_6
0x40005ff	            0xeb10	                           jmp 0x4000611	       942	archures.c	FUNCTION_6
0x4000601	     0xf1f80000000	                         nop dword [rax]	       942	archures.c	FUNCTION_6
0x4000608	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400060c	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400060f	            0x7446	                            je 0x4000657	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000611	          0x3b700c	              cmp esi, dword [rax + 0xc]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000614	            0x75f2	                           jne 0x4000608	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000616	        0x483b5010	            cmp rdx, qword [rax + 0x10] 	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400061a	            0x75ec	                           jne 0x4000608	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400061c	    0x488987c00000	             mov qword [rdi + 0xc0], rax	       943	archures.c	FUNCTION_6	CALL_1
0x4000623	      0xb801000000	                              mov eax, 1	       945	archures.c	FUNCTION_6	IF_1
0x4000628	              0xc3	                                     ret	       945	archures.c	FUNCTION_6	IF_1
0x4000629	     0xf1f80000000	                         nop dword [rax]	       945	archures.c	FUNCTION_6	IF_1
0x4000630	      0x4883781000	               cmp qword [rax + 0x10], 0	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000635	            0x74e5	                            je 0x400061c	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000637	        0x448b402c	            mov r8d, dword [rax + 0x2c] 	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400063b	          0x4585c0	                           test r8d, r8d	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400063e	            0x75dc	                           jne 0x400061c	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000640	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000644	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000647	            0x740e	                            je 0x4000657	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000649	          0x3b700c	              cmp esi, dword [rax + 0xc]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400064c	            0x74e2	                            je 0x4000630	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400064e	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000652	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000655	            0x75f2	                           jne 0x4000649	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000657	        0x4883c108	                              add rcx, 8	      1297	archures.c	FUNCTION_14	FOR_1
0x400065b	          0x488b01	                    mov rax, qword [rcx]	      1297	archures.c	FUNCTION_14	FOR_1
0x400065e	          0x4885c0	                           test rax, rax	      1297	archures.c	FUNCTION_14	FOR_1
0x4000661	            0x7597	                           jne 0x40005fa	      1297	archures.c	FUNCTION_14	FOR_1
0x4000663	        0x4883ec08	                              sub rsp, 8	       942	archures.c	FUNCTION_6
0x4000667	    0x48c787c00000	               mov qword [rdi + 0xc0], 0	       947	archures.c	FUNCTION_6
0x4000672	      0xbf11000000	                           mov edi, 0x11	       948	archures.c	FUNCTION_6	CALL_2
0x4000677	      0xe800000000	                          call 0x400067c	       948	archures.c	FUNCTION_6	CALL_2
0x400067c	            0x31c0	                            xor eax, eax	       949	archures.c	FUNCTION_6
0x400067e	        0x4883c408	                              add rsp, 8	       950	archures.c	FUNCTION_6
0x4000682	              0xc3	                                     ret	       950	archures.c	FUNCTION_6
bfd_octets_per_byte	DO,0:WHILE,0:IF,0:functions,0:FOR,0:CALL,3:ELSE,0:SWITCH,0	42
0x40007c0	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	       985	archures.c	FUNCTION_8
0x40007c7	      0xbe00000000	                              mov esi, 0	       967	archures.c	FUNCTION_7
0x40007cc	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       985	archures.c	FUNCTION_8
0x40007d0	          0x8b500c	              mov edx, dword [rax + 0xc]	       967	archures.c	FUNCTION_7
0x40007d3	      0xb800000000	                              mov eax, 0	       967	archures.c	FUNCTION_7
0x40007d8	          0x4885c9	                           test rcx, rcx	       967	archures.c	FUNCTION_7
0x40007db	            0x7442	                            je 0x400081f	       967	archures.c	FUNCTION_7
0x40007dd	            0xeb0a	                           jmp 0x40007e9	       967	archures.c	FUNCTION_7
0x40007df	              0x90	                                     nop	       967	archures.c	FUNCTION_7
0x40007e0	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x40007e4	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x40007e7	            0x7444	                            je 0x400082d	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x40007e9	          0x3b500c	              cmp edx, dword [rax + 0xc]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x40007ec	            0x75f2	                           jne 0x40007e0	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x40007ee	        0x483b4810	            cmp rcx, qword [rax + 0x10] 	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x40007f2	            0x75ec	                           jne 0x40007e0	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x40007f4	          0x8b5008	                mov edx, dword [rax + 8]	      1378	archures.c	FUNCTION_17	IF_1
0x40007f7	          0x8d4207	                      lea eax, [rdx + 7]	      1378	archures.c	FUNCTION_17	IF_1
0x40007fa	            0x85d2	                           test edx, edx	      1378	archures.c	FUNCTION_17	IF_1
0x40007fc	           0xf49c2	                         cmovns eax, edx	      1378	archures.c	FUNCTION_17	IF_1
0x40007ff	          0xc1f803	                              sar eax, 3	      1378	archures.c	FUNCTION_17	IF_1
0x4000802	              0xc3	                                     ret	      1354	archures.c	FUNCTION_16
0x4000803	       0xf1f440000	                   nop dword [rax + rax]	      1354	archures.c	FUNCTION_16
0x4000808	      0x4883781000	               cmp qword [rax + 0x10], 0	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400080d	            0x74e5	                            je 0x40007f4	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400080f	          0x8b782c	            mov edi, dword [rax + 0x2c] 	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000812	            0x85ff	                           test edi, edi	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000814	            0x75de	                           jne 0x40007f4	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000816	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400081a	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400081d	            0x740e	                            je 0x400082d	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400081f	          0x3b500c	              cmp edx, dword [rax + 0xc]	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000822	            0x74e4	                            je 0x4000808	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000824	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000828	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400082b	            0x75f2	                           jne 0x400081f	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400082d	        0x4883c608	                              add rsi, 8	      1297	archures.c	FUNCTION_14	FOR_1
0x4000831	          0x488b06	                    mov rax, qword [rsi]	      1297	archures.c	FUNCTION_14	FOR_1
0x4000834	          0x4885c0	                           test rax, rax	      1297	archures.c	FUNCTION_14	FOR_1
0x4000837	            0x759f	                           jne 0x40007d8	      1297	archures.c	FUNCTION_14	FOR_1
0x4000839	      0xb801000000	                              mov eax, 1	      1379	archures.c	FUNCTION_17
0x400083e	              0xc3	                                     ret	      1379	archures.c	FUNCTION_17
bfd_arch_bits_per_address	DO,0:WHILE,0:IF,0:functions,0:FOR,0:CALL,0:ELSE,0:SWITCH,0	3
0x40006c0	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	      1021	archures.c	FUNCTION_10
0x40006c7	          0x8b4004	                mov eax, dword [rax + 4]	      1021	archures.c	FUNCTION_10
0x40006ca	              0xc3	                                     ret	      1022	archures.c	FUNCTION_10
_bfd_nowrite_set_arch_mach	DO,0:WHILE,0:IF,0:functions,0:FOR,0:CALL,1:ELSE,0:SWITCH,0	1
0x40008c0	      0xe900000000	                          jmp str.binary	      1413	archures.c	FUNCTION_19	CALL_1
bfd_arch_list	DO,0:WHILE,0:IF,1:functions,0:FOR,4:CALL,1:ELSE,0:SWITCH,0	39
0x40004e0	      0xbe00000000	                              mov esi, 0	       802	archures.c	FUNCTION_3
0x40004e5	      0xb800000000	                              mov eax, 0	       802	archures.c	FUNCTION_3
0x40004ea	            0x31d2	                            xor edx, edx	       802	archures.c	FUNCTION_3
0x40004ec	         0xf1f4000	                         nop dword [rax]	       802	archures.c	FUNCTION_3
0x40004f0	        0x488b4048	            mov rax, qword [rax + 0x48] 	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40004f4	            0x89d1	                            mov ecx, edx	       816	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40004f6	          0x83c201	                              add edx, 1	       816	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40004f9	          0x4885c0	                           test rax, rax	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40004fc	            0x75f2	                           jne 0x40004f0	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40004fe	        0x4883c608	                              add rsi, 8	       811	archures.c	FUNCTION_3	FOR_1
0x4000502	          0x488b06	                    mov rax, qword [rsi]	       811	archures.c	FUNCTION_3	FOR_1
0x4000505	          0x4885c0	                           test rax, rax	       811	archures.c	FUNCTION_3	FOR_1
0x4000508	            0x75e6	                           jne 0x40004f0	       811	archures.c	FUNCTION_3	FOR_1
0x400050a	          0x8d7902	                      lea edi, [rcx + 2]	       821	archures.c	FUNCTION_3	CALL_1
0x400050d	        0x4883ec08	                              sub rsp, 8	       802	archures.c	FUNCTION_3
0x4000511	          0x4863ff	                         movsxd rdi, edi	       821	archures.c	FUNCTION_3	CALL_1
0x4000514	        0x48c1e703	                              shl rdi, 3	       821	archures.c	FUNCTION_3	CALL_1
0x4000518	      0xe800000000	                          call 0x400051d	       821	archures.c	FUNCTION_3	CALL_1
0x400051d	          0x4885c0	                           test rax, rax	       822	archures.c	FUNCTION_3	IF_1
0x4000520	            0x743b	                            je 0x400055d	       822	archures.c	FUNCTION_3	IF_1
0x4000522	          0x4889c1	                            mov rcx, rax	       822	archures.c	FUNCTION_3	IF_1
0x4000525	      0xbf00000000	                              mov edi, 0	       822	archures.c	FUNCTION_3	IF_1
0x400052a	      0xba00000000	                              mov edx, 0	       822	archures.c	FUNCTION_3	IF_1
0x400052f	              0x90	                                     nop	       822	archures.c	FUNCTION_3	IF_1
0x4000530	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	       832	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000534	        0x4883c108	                              add rcx, 8	       833	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000538	        0x488971f8	                mov qword [rcx - 8], rsi	       832	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400053c	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000540	          0x4885d2	                           test rdx, rdx	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000543	            0x75eb	                           jne 0x4000530	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000545	        0x4883c708	                              add rdi, 8	       827	archures.c	FUNCTION_3	FOR_3
0x4000549	          0x488b17	                    mov rdx, qword [rdi]	       827	archures.c	FUNCTION_3	FOR_3
0x400054c	          0x4885d2	                           test rdx, rdx	       827	archures.c	FUNCTION_3	FOR_3
0x400054f	            0x75df	                           jne 0x4000530	       827	archures.c	FUNCTION_3	FOR_3
0x4000551	    0x48c701000000	                      mov qword [rcx], 0	       836	archures.c	FUNCTION_3
0x4000558	        0x4883c408	                              add rsp, 8	       839	archures.c	FUNCTION_3
0x400055c	              0xc3	                                     ret	       839	archures.c	FUNCTION_3
0x400055d	            0x31c0	                            xor eax, eax	       823	archures.c	FUNCTION_3	IF_1
0x400055f	            0xebf7	                           jmp 0x4000558	       823	archures.c	FUNCTION_3	IF_1
bfd_scan_arch	DO,0:WHILE,0:IF,1:functions,0:FOR,2:CALL,1:ELSE,0:SWITCH,0	27
0x4000490	            0x4154	                                push r12	       772	archures.c	FUNCTION_2
0x4000492	    0x41bc00000000	                             mov r12d, 0	       772	archures.c	FUNCTION_2
0x4000498	              0x55	                                push rbp	       772	archures.c	FUNCTION_2
0x4000499	          0x4889fd	                            mov rbp, rdi	       772	archures.c	FUNCTION_2
0x400049c	              0x53	                                push rbx	       772	archures.c	FUNCTION_2
0x400049d	      0xbb00000000	                              mov ebx, 0	       772	archures.c	FUNCTION_2
0x40004a2	    0x660f1f440000	                    nop word [rax + rax]	       772	archures.c	FUNCTION_2
0x40004a8	          0x4889ee	                            mov rsi, rbp	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004ab	          0x4889df	                            mov rdi, rbx	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004ae	          0xff5338	                 call qword [rbx + 0x38]	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004b1	            0x85c0	                           test eax, eax	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004b3	            0x751b	                           jne 0x40004d0	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004b5	        0x488b5b48	            mov rbx, qword [rbx + 0x48] 	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004b9	          0x4885db	                           test rbx, rbx	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004bc	            0x75ea	                           jne 0x40004a8	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004be	        0x4983c408	                              add r12, 8	       776	archures.c	FUNCTION_2	FOR_1
0x40004c2	        0x498b1c24	                    mov rbx, qword [r12]	       776	archures.c	FUNCTION_2	FOR_1
0x40004c6	          0x4885db	                           test rbx, rbx	       776	archures.c	FUNCTION_2	FOR_1
0x40004c9	            0x75dd	                           jne 0x40004a8	       776	archures.c	FUNCTION_2	FOR_1
0x40004cb	            0x31c0	                            xor eax, eax	       785	archures.c	FUNCTION_2
0x40004cd	            0xeb04	                           jmp 0x40004d3	       785	archures.c	FUNCTION_2
0x40004cf	              0x90	                                     nop	       785	archures.c	FUNCTION_2
0x40004d0	          0x4889d8	                            mov rax, rbx	       785	archures.c	FUNCTION_2
0x40004d3	              0x5b	                                 pop rbx	       786	archures.c	FUNCTION_2
0x40004d4	              0x5d	                                 pop rbp	       786	archures.c	FUNCTION_2
0x40004d5	            0x415c	                                 pop r12	       786	archures.c	FUNCTION_2
0x40004d7	              0xc3	                                     ret	       786	archures.c	FUNCTION_2
bfd_arch_bits_per_byte	DO,0:WHILE,0:IF,0:functions,0:FOR,0:CALL,0:ELSE,0:SWITCH,0	3
0x40006b0	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	      1003	archures.c	FUNCTION_9
0x40006b7	          0x8b4008	                mov eax, dword [rax + 8]	      1003	archures.c	FUNCTION_9
0x40006ba	              0xc3	                                     ret	      1004	archures.c	FUNCTION_9
