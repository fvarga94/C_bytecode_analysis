handle_asneeded_cref	SWITCH,0:ELSE,1:functions,0:IF,6:CALL,11:WHILE,0:DO,0:FOR,9	209
0x40008b0	    0x8b0500000000	            mov eax, dword [0x040008b6] 	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x40008b6	            0x4154	                                push r12	       210	ldcref.c	ELSE_2	FUNCTION_3
0x40008b8	              0x55	                                push rbp	       210	ldcref.c	ELSE_2	FUNCTION_3
0x40008b9	              0x53	                                push rbx	       210	ldcref.c	ELSE_2	FUNCTION_3
0x40008ba	            0x85c0	                           test eax, eax	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x40008bc	     0xf84bf010000	                            je 0x4000a81	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x40008c2	            0x85f6	                           test esi, esi	       216	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008c4	     0xf85c1010000	                           jne 0x4000a8b	       216	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008ca	    0x448b1d000000	           mov r11d, dword [0x040008d1] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008d1	            0x31ff	                            xor edi, edi	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008d3	    0x488b05000000	            mov rax, qword [0x040008da] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008da	    0x488b0d000000	            mov rcx, qword [0x040008e1] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008e1	          0x4585db	                         test r11d, r11d	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008e4	     0xf84e3010000	                            je 0x4000acd	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008ea	    0x488b3d000000	            mov rdi, qword [0x040008f1] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008f1	    0x488b15000000	            mov rdx, qword [0x040008f8] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008f8	        0x418d43ff	                      lea eax, [r11 - 1]	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40008fc	    0x4c8b15000000	            mov r10, qword [0x04000903] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000903	    0x448b05000000	            mov r8d, dword [0x0400090a] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400090a	            0x31db	                            xor ebx, ebx	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400090c	          0x4531c9	                            xor r9d, r9d	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400090f	          0x4889d1	                            mov rcx, rdx	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000912	      0x498d6cc208	              lea rbp, [r10 + rax*8 + 8]	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000917	          0x4889f8	                            mov rax, rdi	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400091a	          0x498b32	                    mov rsi, qword [r10]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400091d	          0x4885f6	                           test rsi, rsi	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000920	     0xf8482010000	                            je 0x4000aa8	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000926	          0x4c01c7	                             add rdi, r8	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000929	     0xf1f80000000	                         nop dword [rax]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000930	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000934	          0x4885c0	                           test rax, rax	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000937	            0x741f	                            je 0x4000958	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000939	        0x4883c218	                           add rdx, 0x18	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400093d	            0xeb04	                           jmp 0x4000943	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400093f	              0x90	                                     nop	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000940	          0x4889ca	                            mov rdx, rcx	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000943	          0x488b00	                    mov rax, qword [rax]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000946	        0x488d4a18	                   lea rcx, [rdx + 0x18]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400094a	          0x4885c0	                           test rax, rax	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400094d	            0x75f1	                           jne 0x4000940	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400094f	          0x4889d1	                            mov rcx, rdx	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000952	    0x41b901000000	                              mov r9d, 1	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000958	          0x488b36	                    mov rsi, qword [rsi]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400095b	        0x498d0438	                     lea rax, [r8 + rdi]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400095f	          0x4885f6	                           test rsi, rsi	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000962	     0xf8438010000	                            je 0x4000aa0	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000968	          0x4889c7	                            mov rdi, rax	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400096b	            0xebc3	                           jmp 0x4000930	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400096d	    0x488b35000000	            mov rsi, qword [0x04000974] 	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000974	          0x4885f6	                           test rsi, rsi	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000977	     0xf847c020000	                            je 0x4000bf9	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x400097d	    0x8b0500000000	            mov eax, dword [0x04000983] 	       287	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000983	    0x488b15000000	            mov rdx, qword [0x0400098a] 	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400098a	            0x31ed	                            xor ebp, ebp	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x400098c	    0x488b3d000000	            mov rdi, qword [0x04000993] 	       286	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000993	    0x890500000000	            mov dword [0x04000999], eax 	       287	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000999	    0x8b0500000000	            mov eax, dword [0x0400099f] 	       288	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x400099f	        0x4c8d2416	                    lea r12, [rsi + rdx]	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009a3	    0x48893d000000	            mov qword [0x040009aa], rdi 	       286	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009aa	          0x4c89e3	                            mov rbx, r12	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009ad	    0x48031d000000	             add rbx, qword [0x040009b4]	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009b4	    0x890500000000	            mov dword [0x040009ba], eax 	       288	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009ba	      0xe800000000	                          call 0x40009bf	        53	string3.h	FUNCTION_13	CALL_3
0x40009bf	    0x8b1500000000	            mov edx, dword [0x040009c5] 	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009c5	    0x488b05000000	            mov rax, qword [0x040009cc] 	       290	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009cc	            0x85d2	                           test edx, edx	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009ce	    0x488905000000	            mov qword [0x040009d5], rax 	       290	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009d5	     0xf847c000000	                            je 0x4000a57	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009db	    0x488b0d000000	            mov rcx, qword [0x040009e2] 	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009e2	            0x89e8	                            mov eax, ebp	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009e4	        0x4c8b04c1	             mov r8, qword [rcx + rax*8]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009e8	          0x4d85c0	                             test r8, r8	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009eb	            0x7463	                            je 0x4000a50	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009ed	           0xf1f00	                         nop dword [rax]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x40009f0	    0x8b1500000000	            mov edx, dword [0x040009f6] 	        53	string3.h	FUNCTION_13	CALL_3
0x40009f6	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_13	CALL_3
0x40009f9	          0x4c89c7	                             mov rdi, r8	        53	string3.h	FUNCTION_13	CALL_3
0x40009fc	      0xe800000000	                          call 0x4000a01	        53	string3.h	FUNCTION_13	CALL_3
0x4000a01	          0x4989c0	                             mov r8, rax	        53	string3.h	FUNCTION_13	CALL_3
0x4000a04	    0x8b0500000000	            mov eax, dword [0x04000a0a] 	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a0a	          0x4901c4	                            add r12, rax	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a0d	        0x498b4020	              mov rax, qword [r8 + 0x20]	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a11	          0x4885c0	                           test rax, rax	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a14	            0x742c	                            je 0x4000a42	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a20	          0x488b13	                    mov rdx, qword [rbx]	        53	string3.h	FUNCTION_13	CALL_3
0x4000a23	        0x4883c318	                           add rbx, 0x18	       306	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a27	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_13	CALL_3
0x4000a2a	        0x488b4bf0	             mov rcx, qword [rbx - 0x10]	        53	string3.h	FUNCTION_13	CALL_3
0x4000a2e	        0x48894808	                mov qword [rax + 8], rcx	        53	string3.h	FUNCTION_13	CALL_3
0x4000a32	        0x488b4bf8	                mov rcx, qword [rbx - 8]	        53	string3.h	FUNCTION_13	CALL_3
0x4000a36	          0x4885d2	                           test rdx, rdx	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a39	        0x48894810	             mov qword [rax + 0x10], rcx	        53	string3.h	FUNCTION_13	CALL_3
0x4000a3d	          0x4889d0	                            mov rax, rdx	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a40	            0x75de	                           jne 0x4000a20	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a42	          0x4d8b00	                      mov r8, qword [r8]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a45	          0x4d85c0	                             test r8, r8	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a48	            0x75a6	                           jne 0x40009f0	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a4a	    0x8b1500000000	            mov edx, dword [0x04000a50] 	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a50	          0x83c501	                              add ebp, 1	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000a53	            0x39d5	                            cmp ebp, edx	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000a55	            0x7284	                            jb 0x40009db	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000a57	    0x488b35000000	            mov rsi, qword [0x04000a5e] 	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000a5e	    0x488b3d000000	            mov rdi, qword [0x04000a65] 	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000a65	      0xe800000000	                          call 0x4000a6a	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000a6a	    0x488b3d000000	            mov rdi, qword [0x04000a71] 	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x4000a71	      0xe800000000	                          call 0x4000a76	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x4000a76	    0x48c705000000	               mov qword [0x04000a81], 0	       318	ldcref.c	ELSE_2	FUNCTION_3
0x4000a81	      0xb801000000	                              mov eax, 1	       319	ldcref.c	ELSE_2	FUNCTION_3
0x4000a86	              0x5b	                                 pop rbx	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a87	              0x5d	                                 pop rbp	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a88	            0x415c	                                 pop r12	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a8a	              0xc3	                                     ret	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a8b	          0x83fe01	                              cmp esi, 1	       271	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000a8e	     0xf84d9feffff	                            je 0x400096d	       271	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000a94	          0x83fe02	                              cmp esi, 2	       314	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000a97	            0x74d1	                            je 0x4000a6a	       314	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000a99	              0x5b	                                 pop rbx	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a9a	            0x31c0	                            xor eax, eax	       240	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x4000a9c	              0x5d	                                 pop rbp	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a9d	            0x415c	                                 pop r12	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000a9f	              0xc3	                                     ret	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000aa0	          0x4889f8	                            mov rax, rdi	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000aa3	      0xbb01000000	                              mov ebx, 1	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000aa8	        0x4983c208	                              add r10, 8	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000aac	          0x4c39d5	                            cmp rbp, r10	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000aaf	     0xf8565feffff	                           jne 0x400091a	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000ab5	          0x4584c9	                           test r9b, r9b	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000ab8	     0xf8559010000	                           jne 0x4000c17	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000abe	            0x84db	                             test bl, bl	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000ac0	     0xf855d010000	                           jne 0x4000c23	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000ac6	          0x4489df	                           mov edi, r11d	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000ac9	        0x48c1e703	                              shl rdi, 3	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000acd	          0x4801f8	                            add rax, rdi	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000ad0	    0x48893d000000	            mov qword [0x04000ad7], rdi 	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000ad7	        0x488d3c08	                    lea rdi, [rax + rcx]	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000adb	      0xe800000000	                          call 0x4000ae0	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000ae0	      0xbe01000000	                              mov esi, 1	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000ae5	      0xbf00000000	                              mov edi, 0	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000aea	    0x488905000000	            mov qword [0x04000af1], rax 	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000af1	      0xe800000000	                          call 0x4000af6	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000af6	          0x4885c0	                           test rax, rax	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x4000af9	    0x488905000000	            mov qword [0x04000b00], rax 	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000b00	            0x7497	                            je 0x4000a99	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x4000b02	    0x488b1d000000	            mov rbx, qword [0x04000b09] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x4000b09	    0x488b0d000000	            mov rcx, qword [0x04000b10] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x4000b10	    0x488b35000000	            mov rsi, qword [0x04000b17] 	        53	string3.h	FUNCTION_13	CALL_3
0x4000b17	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_13	CALL_3
0x4000b1a	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_13	CALL_3
0x4000b1d	      0xe800000000	                          call 0x4000b22	        53	string3.h	FUNCTION_13	CALL_3
0x4000b22	    0x8b3500000000	            mov esi, dword [0x04000b28] 	       247	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b28	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_13	CALL_3
0x4000b2b	    0x8b0500000000	            mov eax, dword [0x04000b31] 	       246	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b31	    0x488b15000000	            mov rdx, qword [0x04000b38] 	       245	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b38	          0x4801d9	                            add rcx, rbx	       243	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b3b	          0x4889cb	                            mov rbx, rcx	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b3e	    0x48031d000000	             add rbx, qword [0x04000b45]	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b45	    0x893500000000	            mov dword [0x04000b4b], esi 	       247	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b4b	    0x488b35000000	            mov rsi, qword [0x04000b52] 	       248	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b52	            0x85c0	                           test eax, eax	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000b54	    0x488915000000	            mov qword [0x04000b5b], rdx 	       245	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b5b	    0x890500000000	            mov dword [0x04000b61], eax 	       246	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b61	    0x488935000000	            mov qword [0x04000b68], rsi 	       248	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000b68	     0xf8413ffffff	                            je 0x4000a81	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000b6e	            0x31ed	                            xor ebp, ebp	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000b70	            0x89ee	                            mov esi, ebp	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b72	        0x4c8b24f2	            mov r12, qword [rdx + rsi*8]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b76	          0x4d85e4	                           test r12, r12	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b79	            0x7467	                            je 0x4000be2	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b7b	       0xf1f440000	                   nop dword [rax + rax]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b80	    0x8b1500000000	            mov edx, dword [0x04000b86] 	        53	string3.h	FUNCTION_13	CALL_3
0x4000b86	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_13	CALL_3
0x4000b89	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_13	CALL_3
0x4000b8c	      0xe800000000	                          call 0x4000b91	        53	string3.h	FUNCTION_13	CALL_3
0x4000b91	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_13	CALL_3
0x4000b94	    0x8b0500000000	            mov eax, dword [0x04000b9a] 	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b9a	          0x4801c1	                            add rcx, rax	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000b9d	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000ba2	          0x4885c0	                           test rax, rax	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000ba5	            0x742c	                            je 0x4000bd3	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000ba7	    0x660f1f840000	                    nop word [rax + rax]	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000bb0	          0x488b10	                    mov rdx, qword [rax]	        53	string3.h	FUNCTION_13	CALL_3
0x4000bb3	        0x4883c318	                           add rbx, 0x18	       264	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000bb7	        0x488953e8	             mov qword [rbx - 0x18], rdx	        53	string3.h	FUNCTION_13	CALL_3
0x4000bbb	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_13	CALL_3
0x4000bbf	        0x488953f0	             mov qword [rbx - 0x10], rdx	        53	string3.h	FUNCTION_13	CALL_3
0x4000bc3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        53	string3.h	FUNCTION_13	CALL_3
0x4000bc7	        0x488953f8	                mov qword [rbx - 8], rdx	        53	string3.h	FUNCTION_13	CALL_3
0x4000bcb	          0x488b00	                    mov rax, qword [rax]	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000bce	          0x4885c0	                           test rax, rax	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000bd1	            0x75dd	                           jne 0x4000bb0	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000bd3	        0x4d8b2424	                    mov r12, qword [r12]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000bd7	          0x4d85e4	                           test r12, r12	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000bda	            0x75a4	                           jne 0x4000b80	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000bdc	    0x8b0500000000	            mov eax, dword [0x04000be2] 	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000be2	          0x83c501	                              add ebp, 1	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000be5	            0x39c5	                            cmp ebp, eax	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000be7	     0xf8394feffff	                           jae 0x4000a81	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000bed	    0x488b15000000	            mov rdx, qword [0x04000bf4] 	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000bf4	      0xe977ffffff	                           jmp 0x4000b70	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000bf9	      0xbf00000000	                              mov edi, 0	       279	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5	CALL_6
0x4000bfe	      0xe800000000	                          call 0x4000c03	       279	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5	CALL_6
0x4000c03	    0xc70500000000	               mov dword [0x04000c0d], 0	       280	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000c0d	      0xb801000000	                              mov eax, 1	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000c12	      0xe96ffeffff	                           jmp 0x4000a86	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000c17	    0x488915000000	            mov qword [0x04000c1e], rdx 	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000c1e	      0xe99bfeffff	                           jmp 0x4000abe	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000c23	    0x48893d000000	            mov qword [0x04000c2a], rdi 	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000c2a	      0xe997feffff	                           jmp 0x4000ac6	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
add_cref	SWITCH,0:ELSE,2:functions,0:IF,8:CALL,10:WHILE,0:DO,0:FOR,1	102
0x4000740	            0x4155	                                push r13	       162	ldcref.c	FUNCTION_2
0x4000742	            0x4154	                                push r12	       162	ldcref.c	FUNCTION_2
0x4000744	          0x4989d5	                            mov r13, rdx	       162	ldcref.c	FUNCTION_2
0x4000747	              0x55	                                push rbp	       162	ldcref.c	FUNCTION_2
0x4000748	              0x53	                                push rbx	       162	ldcref.c	FUNCTION_2
0x4000749	          0x4889f5	                            mov rbp, rsi	       162	ldcref.c	FUNCTION_2
0x400074c	          0x4889fb	                            mov rbx, rdi	       162	ldcref.c	FUNCTION_2
0x400074f	        0x4883ec08	                              sub rsp, 8	       162	ldcref.c	FUNCTION_2
0x4000753	    0x8b0500000000	            mov eax, dword [0x04000759] 	       166	ldcref.c	FUNCTION_2	IF_1
0x4000759	            0x85c0	                           test eax, eax	       166	ldcref.c	FUNCTION_2	IF_1
0x400075b	     0xf84af000000	                            je 0x4000810	       166	ldcref.c	FUNCTION_2	IF_1
0x4000761	            0x31c9	                            xor ecx, ecx	       174	ldcref.c	FUNCTION_2
0x4000763	      0xba01000000	                              mov edx, 1	       174	ldcref.c	FUNCTION_2
0x4000768	          0x4889de	                            mov rsi, rbx	       174	ldcref.c	FUNCTION_2
0x400076b	      0xbf00000000	                              mov edi, 0	       174	ldcref.c	FUNCTION_2
0x4000770	      0xe800000000	                          call 0x4000775	       174	ldcref.c	FUNCTION_2
0x4000775	          0x4885c0	                           test rax, rax	       175	ldcref.c	FUNCTION_2	IF_3
0x4000778	          0x4989c4	                            mov r12, rax	       174	ldcref.c	FUNCTION_2
0x400077b	     0xf84e2000000	                            je 0x4000863	       175	ldcref.c	FUNCTION_2	IF_3
0x4000781	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000786	          0x4885db	                           test rbx, rbx	       178	ldcref.c	FUNCTION_2	FOR_1
0x4000789	            0x741b	                            je 0x40007a6	       178	ldcref.c	FUNCTION_2	FOR_1
0x400078b	        0x483b6b08	                cmp rbp, qword [rbx + 8]	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x400078f	            0x750d	                           jne 0x400079e	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x4000791	            0xeb4d	                           jmp 0x40007e0	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x4000793	       0xf1f440000	                   nop dword [rax + rax]	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x4000798	        0x48396b08	                cmp qword [rbx + 8], rbp	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x400079c	            0x7442	                            je 0x40007e0	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x400079e	          0x488b1b	                    mov rbx, qword [rbx]	       178	ldcref.c	FUNCTION_2	FOR_1
0x40007a1	          0x4885db	                           test rbx, rbx	       178	ldcref.c	FUNCTION_2	FOR_1
0x40007a4	            0x75f2	                           jne 0x4000798	       178	ldcref.c	FUNCTION_2	FOR_1
0x40007a6	      0xbe18000000	                           mov esi, 0x18	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x40007ab	      0xbf00000000	                              mov edi, 0	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x40007b0	      0xe800000000	                          call 0x40007b5	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x40007b5	          0x4885c0	                           test rax, rax	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x40007b8	          0x4889c3	                            mov rbx, rax	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x40007bb	     0xf84c2000000	                            je 0x4000883	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x40007c1	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       187	ldcref.c	FUNCTION_2	IF_5
0x40007c6	          0x488903	                    mov qword [rbx], rax	       187	ldcref.c	FUNCTION_2	IF_5
0x40007c9	      0x49895c2420	             mov qword [r12 + 0x20], rbx	       188	ldcref.c	FUNCTION_2	IF_5
0x40007ce	        0x806310f8	             and byte [rbx + 0x10], 0xf8	       192	ldcref.c	FUNCTION_2	IF_5
0x40007d2	        0x48896b08	                mov qword [rbx + 8], rbp	       189	ldcref.c	FUNCTION_2	IF_5
0x40007d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       189	ldcref.c	FUNCTION_2	IF_5
0x40007e0	    0x4981fd000000	                              cmp r13, 0	       195	ldcref.c	FUNCTION_2	IF_7	CALL_9
0x40007e7	            0x744e	                            je 0x4000837	       195	ldcref.c	FUNCTION_2	IF_7	CALL_9
0x40007e9	      0x41f6452110	           test byte [r13 + 0x21], 0x10 	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x40007ee	            0x7510	                           jne 0x4000800	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x40007f0	        0x804b1001	                 or byte [rbx + 0x10], 1	       200	ldcref.c	FUNCTION_2	ELSE_2
0x40007f4	        0x4883c408	                              add rsp, 8	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007f8	              0x5b	                                 pop rbx	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007f9	              0x5d	                                 pop rbp	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007fa	            0x415c	                                 pop r12	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007fc	            0x415d	                                 pop r13	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007fe	              0xc3	                                     ret	       201	ldcref.c	FUNCTION_2	ELSE_2
0x40007ff	              0x90	                                     nop	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000800	        0x804b1002	                 or byte [rbx + 0x10], 2	       198	ldcref.c	FUNCTION_2	ELSE_1	IF_8
0x4000804	        0x4883c408	                              add rsp, 8	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000808	              0x5b	                                 pop rbx	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000809	              0x5d	                                 pop rbp	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400080a	            0x415c	                                 pop r12	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400080c	            0x415d	                                 pop r13	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400080e	              0xc3	                                     ret	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400080f	              0x90	                                     nop	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000810	      0xba28000000	                           mov edx, 0x28	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000815	      0xbe00000000	                              mov esi, 0	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400081a	      0xbf00000000	                              mov edi, 0	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400081f	      0xe800000000	                          call 0x4000824	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000824	            0x85c0	                           test eax, eax	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000826	            0x741e	                            je 0x4000846	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000828	    0xc70500000000	               mov dword [0x04000832], 1	       171	ldcref.c	FUNCTION_2	IF_1
0x4000832	      0xe92affffff	                           jmp 0x4000761	       171	ldcref.c	FUNCTION_2	IF_1
0x4000837	        0x804b1004	                 or byte [rbx + 0x10], 4	       196	ldcref.c	FUNCTION_2	IF_7
0x400083b	        0x4883c408	                              add rsp, 8	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400083f	              0x5b	                                 pop rbx	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000840	              0x5d	                                 pop rbp	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000841	            0x415c	                                 pop r12	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000843	            0x415d	                                 pop r13	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000845	              0xc3	                                     ret	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000846	            0x31ff	                            xor edi, edi	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000848	      0xba05000000	                              mov edx, 5	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x400084d	      0xbe00000000	                              mov esi, 0	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000852	      0xe800000000	                          call 0x4000857	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000857	          0x4889c7	                            mov rdi, rax	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x400085a	            0x31c0	                            xor eax, eax	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x400085c	      0xe800000000	                          call 0x4000861	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000861	            0xebc5	                           jmp 0x4000828	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000863	            0x31ff	                            xor edi, edi	       176	ldcref.c	FUNCTION_2	CALL_5
0x4000865	      0xba05000000	                              mov edx, 5	       176	ldcref.c	FUNCTION_2	CALL_5
0x400086a	      0xbe00000000	                              mov esi, 0	       176	ldcref.c	FUNCTION_2	CALL_5
0x400086f	      0xe800000000	                          call 0x4000874	       176	ldcref.c	FUNCTION_2	CALL_5
0x4000874	          0x4889c7	                            mov rdi, rax	       176	ldcref.c	FUNCTION_2	CALL_5
0x4000877	            0x31c0	                            xor eax, eax	       176	ldcref.c	FUNCTION_2	CALL_5
0x4000879	      0xe800000000	                          call 0x400087e	       176	ldcref.c	FUNCTION_2	CALL_5
0x400087e	      0xe9fefeffff	                           jmp 0x4000781	       176	ldcref.c	FUNCTION_2	CALL_5
0x4000883	            0x31ff	                            xor edi, edi	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000885	      0xba05000000	                              mov edx, 5	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x400088a	      0xbe00000000	                              mov esi, 0	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x400088f	      0xe800000000	                          call 0x4000894	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000894	          0x4889c7	                            mov rdi, rax	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000897	            0x31c0	                            xor eax, eax	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000899	      0xe800000000	                          call 0x400089e	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x400089e	      0xe91effffff	                           jmp 0x40007c1	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
cref_fill_array	SWITCH,0:ELSE,0:functions,0:IF,1:CALL,2:WHILE,0:DO,0:FOR,0	29
0x40000b0	              0x55	                                push rbp	       328	ldcref.c	FUNCTION_4
0x40000b1	              0x53	                                push rbx	       328	ldcref.c	FUNCTION_4
0x40000b2	          0x4889f5	                            mov rbp, rsi	       328	ldcref.c	FUNCTION_4
0x40000b5	          0x4889fb	                            mov rbx, rdi	       328	ldcref.c	FUNCTION_4
0x40000b8	        0x4883ec08	                              sub rsp, 8	       328	ldcref.c	FUNCTION_4
0x40000bc	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000c1	            0x740f	                            je 0x40000d2	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000c3	      0xbe4b010000	                          mov esi, 0x14b	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000c8	      0xbf00000000	                              mov edi, 0	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000cd	      0xe800000000	                          call 0x40000d2	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000d2	        0x488b7308	                mov rsi, qword [rbx + 8]	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000d6	    0x488b3d000000	            mov rdi, qword [0x040000dd] 	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000dd	      0xba03000000	                              mov edx, 3	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000e2	      0xe800000000	                          call 0x40000e7	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000e7	          0x4885c0	                           test rax, rax	       334	ldcref.c	FUNCTION_4	IF_1
0x40000ea	        0x48894318	             mov qword [rbx + 0x18], rax	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000ee	            0x7420	                            je 0x4000110	       334	ldcref.c	FUNCTION_4	IF_1
0x40000f0	        0x488b4500	                    mov rax, qword [rbp]	       337	ldcref.c	FUNCTION_4
0x40000f4	          0x488918	                    mov qword [rax], rbx	       337	ldcref.c	FUNCTION_4
0x40000f7	      0x4883450008	                      add qword [rbp], 8	       339	ldcref.c	FUNCTION_4
0x40000fc	        0x4883c408	                              add rsp, 8	       342	ldcref.c	FUNCTION_4
0x4000100	      0xb801000000	                              mov eax, 1	       342	ldcref.c	FUNCTION_4
0x4000105	              0x5b	                                 pop rbx	       342	ldcref.c	FUNCTION_4
0x4000106	              0x5d	                                 pop rbp	       342	ldcref.c	FUNCTION_4
0x4000107	              0xc3	                                     ret	       342	ldcref.c	FUNCTION_4
0x4000108	     0xf1f84000000	                   nop dword [rax + rax]	       342	ldcref.c	FUNCTION_4
0x4000110	        0x488b4308	                mov rax, qword [rbx + 8]	       335	ldcref.c	FUNCTION_4	IF_1
0x4000114	        0x48894318	             mov qword [rbx + 0x18], rax	       335	ldcref.c	FUNCTION_4	IF_1
0x4000118	            0xebd6	                           jmp 0x40000f0	       335	ldcref.c	FUNCTION_4	IF_1
check_local_sym_xref	SWITCH,0:ELSE,0:functions,0:IF,7:CALL,6:WHILE,0:DO,0:FOR,3	116
0x40003b0	            0x4157	                                push r15	       508	ldcref.c	FUNCTION_9
0x40003b2	            0x4156	                                push r14	       508	ldcref.c	FUNCTION_9
0x40003b4	            0x4155	                                push r13	       508	ldcref.c	FUNCTION_9
0x40003b6	            0x4154	                                push r12	       508	ldcref.c	FUNCTION_9
0x40003b8	              0x55	                                push rbp	       508	ldcref.c	FUNCTION_9
0x40003b9	              0x53	                                push rbx	       508	ldcref.c	FUNCTION_9
0x40003ba	        0x4883ec48	                           sub rsp, 0x48	       508	ldcref.c	FUNCTION_9
0x40003be	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	       512	ldcref.c	FUNCTION_9
0x40003c2	    0x64488b042528	                mov rax, qword fs:[0x28]	       508	ldcref.c	FUNCTION_9
0x40003cb	      0x4889442438	             mov qword [rsp + 0x38], rax	       508	ldcref.c	FUNCTION_9
0x40003d0	            0x31c0	                            xor eax, eax	       508	ldcref.c	FUNCTION_9
0x40003d2	          0x4d85e4	                           test r12, r12	       513	ldcref.c	FUNCTION_9	IF_1
0x40003d5	     0xf845c010000	                            je 0x4000537	       513	ldcref.c	FUNCTION_9	IF_1
0x40003db	          0x4c89e7	                            mov rdi, r12	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40003de	      0xe800000000	                          call 0x40003e3	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40003e3	            0x85c0	                           test eax, eax	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40003e5	     0xf846b010000	                            je 0x4000556	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40003eb	    0x498b8424b000	            mov rax, qword [r12 + 0xb0] 	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40003f3	          0x4c8b30	                    mov r14, qword [rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40003f6	      0x4889442408	                mov qword [rsp + 8], rax	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40003fb	          0x4d85f6	                           test r14, r14	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40003fe	     0xf8433010000	                            je 0x4000537	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000404	         0xf1f4000	                         nop dword [rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000408	        0x418b4618	            mov eax, dword [r14 + 0x18] 	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x400040c	      0xa902700000	                        test eax, 0x7002	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000411	     0xf8509010000	                           jne 0x4000520	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000417	      0xa901010000	                         test eax, 0x101	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400041c	     0xf84fe000000	                            je 0x4000520	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000422	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000426	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400042a	          0x4885d2	                           test rdx, rdx	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400042d	     0xf84ed000000	                            je 0x4000520	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000433	          0xf6c401	                              test ah, 1	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000436	          0x488b2a	                    mov rbp, qword [rdx]	       531	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000439	    0x48c704240000	                      mov qword [rsp], 0	       532	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000441	            0x7508	                           jne 0x400044b	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000443	        0x498b4608	                mov rax, qword [r14 + 8]	       534	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000447	        0x48890424	                    mov qword [rsp], rax	       534	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x400044b	    0x488b1d000000	            mov rbx, qword [0x04000452] 	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000452	          0x4885db	                           test rbx, rbx	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000455	     0xf84c5000000	                            je 0x4000520	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x400045b	       0xf1f440000	                   nop dword [rax + rax]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000460	        0x4c8b7b08	                mov r15, qword [rbx + 8]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000464	          0x4d85ff	                           test r15, r15	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000467	            0x751e	                           jne 0x4000487	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000469	      0xe9a2000000	                           jmp 0x4000510	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x400046e	            0x6690	                                     nop	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000470	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000473	            0x85c0	                           test eax, eax	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000475	     0xf8595000000	                           jne 0x4000510	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x400047b	          0x4d8b3f	                    mov r15, qword [r15]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x400047e	          0x4d85ff	                           test r15, r15	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000481	     0xf8489000000	                            je 0x4000510	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000487	        0x498b7f08	                mov rdi, qword [r15 + 8]	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x400048b	          0x4889ee	                            mov rsi, rbp	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x400048e	      0xe800000000	                          call 0x4000493	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000493	            0x85c0	                           test eax, eax	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000495	            0x75d9	                           jne 0x4000470	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000497	          0x4c89e7	                            mov rdi, r12	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x400049a	        0x4d8b6e20	            mov r13, qword [r14 + 0x20] 	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x400049e	      0xe800000000	                          call 0x40004a3	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x40004a3	            0x85c0	                           test eax, eax	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x40004a5	            0x751e	                           jne 0x40004c5	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x40004a7	      0xbe00000000	                              mov esi, 0	       628	ldcref.c	FUNCTION_11	CALL_3
0x40004ac	            0x31ff	                            xor edi, edi	       628	ldcref.c	FUNCTION_11	CALL_3
0x40004ae	      0xba05000000	                              mov edx, 5	       628	ldcref.c	FUNCTION_11	CALL_3
0x40004b3	      0xe800000000	                          call 0x40004b8	       628	ldcref.c	FUNCTION_11	CALL_3
0x40004b8	          0x4c89e6	                            mov rsi, r12	       628	ldcref.c	FUNCTION_11	CALL_3
0x40004bb	          0x4889c7	                            mov rdi, rax	       628	ldcref.c	FUNCTION_11	CALL_3
0x40004be	            0x31c0	                            xor eax, eax	       628	ldcref.c	FUNCTION_11	CALL_3
0x40004c0	      0xe800000000	                          call 0x40004c5	       628	ldcref.c	FUNCTION_11	CALL_3
0x40004c5	        0x488b0424	                    mov rax, qword [rsp]	       630	ldcref.c	FUNCTION_11
0x40004c9	      0x488d542410	                   lea rdx, [rsp + 0x10]	       635	ldcref.c	FUNCTION_11	CALL_5
0x40004ce	      0xbe00000000	                              mov esi, 0	       635	ldcref.c	FUNCTION_11	CALL_5
0x40004d3	          0x4c89e7	                            mov rdi, r12	       635	ldcref.c	FUNCTION_11	CALL_5
0x40004d6	    0xc74424300000	               mov dword [rsp + 0x30], 0	       631	ldcref.c	FUNCTION_11
0x40004de	      0x4c896c2418	             mov qword [rsp + 0x18], r13	       632	ldcref.c	FUNCTION_11
0x40004e3	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       633	ldcref.c	FUNCTION_11
0x40004e8	      0x4889442410	             mov qword [rsp + 0x10], rax	       630	ldcref.c	FUNCTION_11
0x40004ed	    0x498b8424b000	            mov rax, qword [r12 + 0xb0] 	       634	ldcref.c	FUNCTION_11	CALL_4
0x40004f5	      0x4889442428	             mov qword [rsp + 0x28], rax	       634	ldcref.c	FUNCTION_11	CALL_4
0x40004fa	      0xe800000000	                          call 0x40004ff	       635	ldcref.c	FUNCTION_11	CALL_5
0x40004ff	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000502	            0x85c0	                           test eax, eax	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000504	     0xf8471ffffff	                            je 0x400047b	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x400050a	    0x660f1f440000	                    nop word [rax + rax]	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x4000510	          0x488b1b	                    mov rbx, qword [rbx]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000513	          0x4885db	                           test rbx, rbx	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000516	     0xf8544ffffff	                           jne 0x4000460	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x400051c	         0xf1f4000	                         nop dword [rax]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000520	    0x488344240808	                  add qword [rsp + 8], 8	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000526	      0x488b442408	                mov rax, qword [rsp + 8]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x400052b	          0x4c8b30	                    mov r14, qword [rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x400052e	          0x4d85f6	                           test r14, r14	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000531	     0xf85d1feffff	                           jne 0x4000408	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000537	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       547	ldcref.c	FUNCTION_9
0x400053c	    0x644833042528	                xor rax, qword fs:[0x28]	       547	ldcref.c	FUNCTION_9
0x4000545	            0x7532	                           jne 0x4000579	       547	ldcref.c	FUNCTION_9
0x4000547	        0x4883c448	                           add rsp, 0x48	       547	ldcref.c	FUNCTION_9
0x400054b	              0x5b	                                 pop rbx	       547	ldcref.c	FUNCTION_9
0x400054c	              0x5d	                                 pop rbp	       547	ldcref.c	FUNCTION_9
0x400054d	            0x415c	                                 pop r12	       547	ldcref.c	FUNCTION_9
0x400054f	            0x415d	                                 pop r13	       547	ldcref.c	FUNCTION_9
0x4000551	            0x415e	                                 pop r14	       547	ldcref.c	FUNCTION_9
0x4000553	            0x415f	                                 pop r15	       547	ldcref.c	FUNCTION_9
0x4000555	              0xc3	                                     ret	       547	ldcref.c	FUNCTION_9
0x4000556	            0x31ff	                            xor edi, edi	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000558	      0xba05000000	                              mov edx, 5	       517	ldcref.c	FUNCTION_9	CALL_3
0x400055d	      0xbe00000000	                              mov esi, 0	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000562	      0xe800000000	                          call 0x4000567	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000567	          0x4c89e6	                            mov rsi, r12	       517	ldcref.c	FUNCTION_9	CALL_3
0x400056a	          0x4889c7	                            mov rdi, rax	       517	ldcref.c	FUNCTION_9	CALL_3
0x400056d	            0x31c0	                            xor eax, eax	       517	ldcref.c	FUNCTION_9	CALL_3
0x400056f	      0xe800000000	                          call 0x4000574	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000574	      0xe972feffff	                           jmp 0x40003eb	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000579	      0xe800000000	                          call 0x400057e	       547	ldcref.c	FUNCTION_9
output_cref	SWITCH,0:ELSE,0:functions,0:IF,1:CALL,10:WHILE,1:DO,0:FOR,1	245
0x4000c30	            0x4157	                                push r15	       366	ldcref.c	FUNCTION_6
0x4000c32	            0x4156	                                push r14	       366	ldcref.c	FUNCTION_6
0x4000c34	      0xba05000000	                              mov edx, 5	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000c39	            0x4155	                                push r13	       366	ldcref.c	FUNCTION_6
0x4000c3b	            0x4154	                                push r12	       366	ldcref.c	FUNCTION_6
0x4000c3d	      0xbe00000000	                              mov esi, 0	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000c42	              0x55	                                push rbp	       366	ldcref.c	FUNCTION_6
0x4000c43	              0x53	                                push rbx	       366	ldcref.c	FUNCTION_6
0x4000c44	          0x4889fd	                            mov rbp, rdi	       366	ldcref.c	FUNCTION_6
0x4000c47	            0x31ff	                            xor edi, edi	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000c49	        0x4883ec18	                           sub rsp, 0x18	       366	ldcref.c	FUNCTION_6
0x4000c4d	    0x64488b042528	                mov rax, qword fs:[0x28]	       366	ldcref.c	FUNCTION_6
0x4000c56	      0x4889442408	                mov qword [rsp + 8], rax	       366	ldcref.c	FUNCTION_6
0x4000c5b	            0x31c0	                            xor eax, eax	       366	ldcref.c	FUNCTION_6
0x4000c5d	      0xe800000000	                          call 0x4000c62	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000c62	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_17
0x4000c67	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_17
0x4000c6a	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_17
0x4000c6d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_17
0x4000c6f	      0xe800000000	                          call 0x4000c74	        97	stdio2.h	CALL_17
0x4000c74	      0xba05000000	                              mov edx, 5	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000c79	            0x31ff	                            xor edi, edi	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000c7b	      0xbe00000000	                              mov esi, 0	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000c80	      0xe800000000	                          call 0x4000c85	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000c85	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_17
0x4000c88	          0x4889c3	                            mov rbx, rax	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000c8b	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_17
0x4000c8e	      0xe800000000	                          call 0x4000c93	        97	stdio2.h	CALL_17
0x4000c93	          0x4889df	                            mov rdi, rbx	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000c96	      0xe800000000	                          call 0x4000c9b	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000c9b	          0x83f831	                           cmp eax, 0x31	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000c9e	            0x89c3	                            mov ebx, eax	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000ca0	            0x7f1b	                            jg 0x4000cbd	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000ca2	    0x660f1f440000	                    nop word [rax + rax]	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000ca8	          0x4889ee	                            mov rsi, rbp	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000cab	      0xbf20000000	                           mov edi, 0x20	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000cb0	          0x83c301	                              add ebx, 1	       378	ldcref.c	FUNCTION_6	WHILE_1
0x4000cb3	      0xe800000000	                          call 0x4000cb8	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000cb8	          0x83fb32	                           cmp ebx, 0x32	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000cbb	            0x75eb	                           jne 0x4000ca8	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000cbd	            0x31ff	                            xor edi, edi	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000cbf	      0xba05000000	                              mov edx, 5	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000cc4	      0xbe00000000	                              mov esi, 0	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000cc9	      0xe800000000	                          call 0x4000cce	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000cce	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_17
0x4000cd3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_17
0x4000cd6	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_17
0x4000cd9	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_17
0x4000cdb	      0xe800000000	                          call 0x4000ce0	        97	stdio2.h	CALL_17
0x4000ce0	    0x8b1500000000	            mov edx, dword [0x04000ce6] 	       382	ldcref.c	FUNCTION_6	IF_1
0x4000ce6	            0x85d2	                           test edx, edx	       382	ldcref.c	FUNCTION_6	IF_1
0x4000ce8	     0xf84ad020000	                            je 0x4000f9b	       382	ldcref.c	FUNCTION_6	IF_1
0x4000cee	    0x488b05000000	            mov rax, qword [0x04000cf5] 	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000cf5	    0x488d3cc50000	                        lea rdi, [rax*8]	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000cfd	      0xe800000000	                          call 0x4000d02	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000d02	      0xbe00000000	                              mov esi, 0	       391	ldcref.c	FUNCTION_6
0x4000d07	          0x4889e2	                            mov rdx, rsp	       391	ldcref.c	FUNCTION_6
0x4000d0a	      0xbf00000000	                              mov edi, 0	       391	ldcref.c	FUNCTION_6
0x4000d0f	          0x4989c5	                            mov r13, rax	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000d12	        0x48890424	                    mov qword [rsp], rax	       390	ldcref.c	FUNCTION_6
0x4000d16	      0xe800000000	                          call 0x4000d1b	       391	ldcref.c	FUNCTION_6
0x4000d1b	        0x488b0424	                    mov rax, qword [rsp]	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d1f	    0x488b35000000	            mov rsi, qword [0x04000d26] 	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d26	          0x4c29e8	                            sub rax, r13	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d29	        0x48c1f803	                              sar rax, 3	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d2d	          0x4839f0	                            cmp rax, rsi	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d30	            0x7416	                            je 0x4000d48	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d32	      0xbe88010000	                          mov esi, 0x188	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d37	      0xbf00000000	                              mov edi, 0	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d3c	      0xe800000000	                          call 0x4000d41	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d41	    0x488b35000000	            mov rsi, qword [0x04000d48] 	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000d48	      0xb900000000	                              mov ecx, 0	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000d4d	      0xba08000000	                              mov edx, 8	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000d52	          0x4c89ef	                            mov rdi, r13	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000d55	      0xe800000000	                          call 0x4000d5a	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000d5a	    0x488b05000000	            mov rax, qword [0x04000d61] 	       396	ldcref.c	FUNCTION_6
0x4000d61	      0x4d8d74c500	                  lea r14, [r13 + rax*8]	       396	ldcref.c	FUNCTION_6
0x4000d66	          0x4d39f5	                            cmp r13, r14	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000d69	     0xf8385010000	                           jae 0x4000ef4	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000d6f	              0x90	                                     nop	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000d70	        0x4d8b6500	                    mov r12, qword [r13]	       398	ldcref.c	FUNCTION_6	CALL_10
0x4000d74	    0x488b3d000000	            mov rdi, qword [0x04000d7b] 	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000d7b	            0x31c9	                            xor ecx, ecx	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000d7d	            0x31d2	                            xor edx, edx	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000d7f	    0x41b801000000	                              mov r8d, 1	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000d85	      0x498b742408	                mov rsi, qword [r12 + 8]	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000d8a	      0xe800000000	                          call 0x4000d8f	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000d8f	          0x4885c0	                           test rax, rax	       412	ldcref.c	FUNCTION_7	IF_1
0x4000d92	     0xf842b020000	                            je 0x4000fc3	       412	ldcref.c	FUNCTION_7	IF_1
0x4000d98	        0x80781803	                cmp byte [rax + 0x18], 3	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x4000d9c	     0xf84a0010000	                            je 0x4000f42	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x4000da2	    0x8b0500000000	            mov eax, dword [0x04000da8] 	       435	ldcref.c	FUNCTION_7	IF_7
0x4000da8	            0x85c0	                           test eax, eax	       435	ldcref.c	FUNCTION_7	IF_7
0x4000daa	     0xf8467010000	                            je 0x4000f17	       435	ldcref.c	FUNCTION_7	IF_7
0x4000db0	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	        97	stdio2.h	CALL_17
0x4000db5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_17
0x4000dba	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_17
0x4000dbf	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_17
0x4000dc2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_17
0x4000dc4	      0xe800000000	                          call 0x4000dc9	        97	stdio2.h	CALL_17
0x4000dc9	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000dce	      0xe800000000	                          call 0x4000dd3	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000dd3	          0x8d5801	                      lea ebx, [rax + 1]	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000dd6	      0x4d8b7c2420	            mov r15, qword [r12 + 0x20] 	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000ddb	          0x4d85ff	                           test r15, r15	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000dde	     0xf84f0000000	                            je 0x4000ed4	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000de4	         0xf1f4000	                         nop dword [rax]	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000de8	      0x41f6471001	               test byte [r15 + 0x10], 1	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000ded	            0x7433	                            je 0x4000e22	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000def	          0x83fb31	                           cmp ebx, 0x31	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000df2	            0x7f19	                            jg 0x4000e0d	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000df4	         0xf1f4000	                         nop dword [rax]	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000df8	          0x4889ee	                            mov rsi, rbp	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000dfb	      0xbf20000000	                           mov edi, 0x20	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000e00	          0x83c301	                              add ebx, 1	       453	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000e03	      0xe800000000	                          call 0x4000e08	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000e08	          0x83fb32	                           cmp ebx, 0x32	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000e0b	            0x75eb	                           jne 0x4000df8	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000e0d	        0x498b5708	                mov rdx, qword [r15 + 8]	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000e11	      0xbe00000000	                              mov esi, 0	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000e16	          0x4889ef	                            mov rdi, rbp	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000e19	            0x31c0	                            xor eax, eax	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000e1b	            0x31db	                            xor ebx, ebx	       456	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000e1d	      0xe800000000	                          call 0x4000e22	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000e22	          0x4d8b3f	                    mov r15, qword [r15]	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000e25	          0x4d85ff	                           test r15, r15	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000e28	            0x75be	                           jne 0x4000de8	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000e2a	      0x4d8b7c2420	            mov r15, qword [r12 + 0x20] 	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000e2f	          0x4d85ff	                           test r15, r15	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000e32	     0xf849c000000	                            je 0x4000ed4	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000e38	     0xf1f84000000	                   nop dword [rax + rax]	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000e40	      0x41f6471002	               test byte [r15 + 0x10], 2	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000e45	            0x7433	                            je 0x4000e7a	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000e47	          0x83fb31	                           cmp ebx, 0x31	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000e4a	            0x7f19	                            jg 0x4000e65	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000e4c	         0xf1f4000	                         nop dword [rax]	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000e50	          0x4889ee	                            mov rsi, rbp	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000e53	      0xbf20000000	                           mov edi, 0x20	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000e58	          0x83c301	                              add ebx, 1	       467	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000e5b	      0xe800000000	                          call 0x4000e60	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000e60	          0x83fb32	                           cmp ebx, 0x32	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000e63	            0x75eb	                           jne 0x4000e50	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000e65	        0x498b5708	                mov rdx, qword [r15 + 8]	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000e69	      0xbe00000000	                              mov esi, 0	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000e6e	          0x4889ef	                            mov rdi, rbp	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000e71	            0x31c0	                            xor eax, eax	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000e73	            0x31db	                            xor ebx, ebx	       470	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000e75	      0xe800000000	                          call 0x4000e7a	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000e7a	          0x4d8b3f	                    mov r15, qword [r15]	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000e7d	          0x4d85ff	                           test r15, r15	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000e80	            0x75be	                           jne 0x4000e40	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000e82	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000e87	          0x4d85e4	                           test r12, r12	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e8a	            0x7448	                            je 0x4000ed4	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e8c	         0xf1f4000	                         nop dword [rax]	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e90	    0x41f644241003	               test byte [r12 + 0x10], 3	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000e96	            0x7533	                           jne 0x4000ecb	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000e98	          0x83fb31	                           cmp ebx, 0x31	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e9b	            0x7f18	                            jg 0x4000eb5	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e9d	           0xf1f00	                         nop dword [rax]	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000ea0	          0x4889ee	                            mov rsi, rbp	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000ea3	      0xbf20000000	                           mov edi, 0x20	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000ea8	          0x83c301	                              add ebx, 1	       481	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000eab	      0xe800000000	                          call 0x4000eb0	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000eb0	          0x83fb32	                           cmp ebx, 0x32	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000eb3	            0x75eb	                           jne 0x4000ea0	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000eb5	      0x498b542408	                mov rdx, qword [r12 + 8]	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000eba	      0xbe00000000	                              mov esi, 0	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000ebf	          0x4889ef	                            mov rdi, rbp	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000ec2	            0x31c0	                            xor eax, eax	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000ec4	            0x31db	                            xor ebx, ebx	       484	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000ec6	      0xe800000000	                          call 0x4000ecb	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000ecb	        0x4d8b2424	                    mov r12, qword [r12]	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000ecf	          0x4d85e4	                           test r12, r12	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000ed2	            0x75bc	                           jne 0x4000e90	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000ed4	            0x85db	                           test ebx, ebx	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000ed6	            0x740f	                            je 0x4000ee7	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000ed8	      0xbee8010000	                          mov esi, 0x1e8	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000edd	      0xbf00000000	                              mov edi, 0	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000ee2	      0xe800000000	                          call 0x4000ee7	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000ee7	        0x4983c508	                              add r13, 8	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000eeb	          0x4d39ee	                            cmp r14, r13	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000eee	     0xf877cfeffff	                            ja 0x4000d70	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000ef4	      0x488b442408	                mov rax, qword [rsp + 8]	       399	ldcref.c	FUNCTION_6
0x4000ef9	    0x644833042528	                xor rax, qword fs:[0x28]	       399	ldcref.c	FUNCTION_6
0x4000f02	     0xf85e3000000	                           jne 0x4000feb	       399	ldcref.c	FUNCTION_6
0x4000f08	        0x4883c418	                           add rsp, 0x18	       399	ldcref.c	FUNCTION_6
0x4000f0c	              0x5b	                                 pop rbx	       399	ldcref.c	FUNCTION_6
0x4000f0d	              0x5d	                                 pop rbp	       399	ldcref.c	FUNCTION_6
0x4000f0e	            0x415c	                                 pop r12	       399	ldcref.c	FUNCTION_6
0x4000f10	            0x415d	                                 pop r13	       399	ldcref.c	FUNCTION_6
0x4000f12	            0x415e	                                 pop r14	       399	ldcref.c	FUNCTION_6
0x4000f14	            0x415f	                                 pop r15	       399	ldcref.c	FUNCTION_6
0x4000f16	              0xc3	                                     ret	       399	ldcref.c	FUNCTION_6
0x4000f17	      0x498b4c2408	                mov rcx, qword [r12 + 8]	        97	stdio2.h	CALL_17
0x4000f1c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_17
0x4000f21	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_17
0x4000f26	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_17
0x4000f29	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_17
0x4000f2b	      0xe800000000	                          call 0x4000f30	        97	stdio2.h	CALL_17
0x4000f30	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000f35	      0xe800000000	                          call 0x4000f3a	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000f3a	          0x8d5801	                      lea ebx, [rax + 1]	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000f3d	      0xe994feffff	                           jmp 0x4000dd6	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000f42	        0x488b4028	            mov rax, qword [rax + 0x28] 	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000f46	      0x4883786800	               cmp qword [rax + 0x68], 0	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000f4b	            0x749a	                            je 0x4000ee7	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000f4d	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000f54	          0x4885c0	                           test rax, rax	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000f57	     0xf8445feffff	                            je 0x4000da2	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000f5d	        0xf6404508	               test byte [rax + 0x45], 8	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000f61	     0xf843bfeffff	                            je 0x4000da2	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000f67	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000f6c	          0x4885c0	                           test rax, rax	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000f6f	            0x751b	                           jne 0x4000f8c	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000f71	      0xe971ffffff	                           jmp 0x4000ee7	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000f76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000f80	          0x488b00	                    mov rax, qword [rax]	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000f83	          0x4885c0	                           test rax, rax	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000f86	     0xf845bffffff	                            je 0x4000ee7	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000f8c	        0x488b5008	                mov rdx, qword [rax + 8]	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000f90	        0xf6424508	               test byte [rdx + 0x45], 8	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000f94	            0x75ea	                           jne 0x4000f80	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000f96	      0xe907feffff	                           jmp 0x4000da2	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000f9b	            0x31ff	                            xor edi, edi	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000f9d	      0xba05000000	                              mov edx, 5	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000fa2	      0xbe00000000	                              mov esi, 0	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000fa7	      0xe800000000	                          call 0x4000fac	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000fac	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_17
0x4000fb1	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_17
0x4000fb4	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_17
0x4000fb7	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_17
0x4000fb9	      0xe800000000	                          call 0x4000fbe	        97	stdio2.h	CALL_17
0x4000fbe	      0xe931ffffff	                           jmp 0x4000ef4	        97	stdio2.h	CALL_17
0x4000fc3	      0x498b5c2408	                mov rbx, qword [r12 + 8]	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fc8	            0x31ff	                            xor edi, edi	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fca	      0xba05000000	                              mov edx, 5	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fcf	      0xbe00000000	                              mov esi, 0	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fd4	      0xe800000000	                          call 0x4000fd9	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fd9	          0x4889de	                            mov rsi, rbx	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fdc	          0x4889c7	                            mov rdi, rax	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fdf	            0x31c0	                            xor eax, eax	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fe1	      0xe800000000	                          call 0x4000fe6	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000fe6	      0xe9b7fdffff	                           jmp 0x4000da2	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000feb	      0xe800000000	              call sym.check_nocrossrefs	       399	ldcref.c	FUNCTION_6
cref_hash_newfunc	SWITCH,0:ELSE,0:functions,0:IF,3:CALL,2:WHILE,0:DO,0:FOR,0	26
0x4000040	              0x53	                                push rbx	       126	ldcref.c	FUNCTION_1
0x4000041	          0x4889f3	                            mov rbx, rsi	       126	ldcref.c	FUNCTION_1
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       126	ldcref.c	FUNCTION_1
0x4000048	          0x4885ff	                           test rdi, rdi	       131	ldcref.c	FUNCTION_1	IF_1
0x400004b	            0x7433	                            je 0x4000080	       131	ldcref.c	FUNCTION_1	IF_1
0x400004d	          0x4889de	                            mov rsi, rbx	       138	ldcref.c	FUNCTION_1
0x4000050	      0xe800000000	                          call 0x4000055	       138	ldcref.c	FUNCTION_1
0x4000055	          0x4885c0	                           test rax, rax	       140	ldcref.c	FUNCTION_1	IF_3
0x4000058	            0x7418	                            je 0x4000072	       140	ldcref.c	FUNCTION_1	IF_3
0x400005a	    0x488305000000	               add qword [0x04000062], 1	       148	ldcref.c	FUNCTION_1	IF_3
0x4000062	    0x48c740180000	               mov qword [rax + 0x18], 0	       143	ldcref.c	FUNCTION_1	IF_3
0x400006a	    0x48c740200000	               mov qword [rax + 0x20], 0	       144	ldcref.c	FUNCTION_1	IF_3
0x4000072	        0x4883c410	                           add rsp, 0x10	       152	ldcref.c	FUNCTION_1
0x4000076	              0x5b	                                 pop rbx	       152	ldcref.c	FUNCTION_1
0x4000077	              0xc3	                                     ret	       152	ldcref.c	FUNCTION_1
0x4000078	     0xf1f84000000	                   nop dword [rax + rax]	       152	ldcref.c	FUNCTION_1
0x4000080	          0x4889df	                            mov rdi, rbx	       132	ldcref.c	FUNCTION_1	IF_1
0x4000083	      0xbe28000000	                           mov esi, 0x28	       132	ldcref.c	FUNCTION_1	IF_1
0x4000088	      0x4889542408	                mov qword [rsp + 8], rdx	       132	ldcref.c	FUNCTION_1	IF_1
0x400008d	      0xe800000000	                          call 0x4000092	       132	ldcref.c	FUNCTION_1	IF_1
0x4000092	          0x4889c7	                            mov rdi, rax	       132	ldcref.c	FUNCTION_1	IF_1
0x4000095	            0x31c0	                            xor eax, eax	       135	ldcref.c	FUNCTION_1	IF_2
0x4000097	      0x488b542408	                mov rdx, qword [rsp + 8]	       134	ldcref.c	FUNCTION_1	IF_2
0x400009c	          0x4885ff	                           test rdi, rdi	       134	ldcref.c	FUNCTION_1	IF_2
0x400009f	            0x74d1	                            je 0x4000072	       134	ldcref.c	FUNCTION_1	IF_2
0x40000a1	            0xebaa	                           jmp 0x400004d	       134	ldcref.c	FUNCTION_1	IF_2
check_nocrossref	SWITCH,0:ELSE,0:functions,0:IF,5:CALL,6:WHILE,0:DO,0:FOR,3	112
0x4000580	            0x4157	                                push r15	       553	ldcref.c	FUNCTION_10
0x4000582	            0x4156	                                push r14	       553	ldcref.c	FUNCTION_10
0x4000584	            0x31d2	                            xor edx, edx	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000586	            0x4155	                                push r13	       553	ldcref.c	FUNCTION_10
0x4000588	            0x4154	                                push r12	       553	ldcref.c	FUNCTION_10
0x400058a	    0x41b801000000	                              mov r8d, 1	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000590	              0x55	                                push rbp	       553	ldcref.c	FUNCTION_10
0x4000591	              0x53	                                push rbx	       553	ldcref.c	FUNCTION_10
0x4000592	        0x4883ec58	                           sub rsp, 0x58	       553	ldcref.c	FUNCTION_10
0x4000596	        0x488b7708	                mov rsi, qword [rdi + 8]	       561	ldcref.c	FUNCTION_10	CALL_1
0x400059a	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       553	ldcref.c	FUNCTION_10
0x400059f	    0x488b3d000000	            mov rdi, qword [0x040005a6] 	       561	ldcref.c	FUNCTION_10	CALL_1
0x40005a6	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       553	ldcref.c	FUNCTION_10
0x40005af	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       553	ldcref.c	FUNCTION_10
0x40005b4	            0x31c9	                            xor ecx, ecx	       553	ldcref.c	FUNCTION_10
0x40005b6	      0xe800000000	                          call 0x40005bb	       561	ldcref.c	FUNCTION_10	CALL_1
0x40005bb	          0x4885c0	                           test rax, rax	       563	ldcref.c	FUNCTION_10	IF_1
0x40005be	     0xf843e010000	                            je 0x4000702	       563	ldcref.c	FUNCTION_10	IF_1
0x40005c4	          0x4889c5	                            mov rbp, rax	       563	ldcref.c	FUNCTION_10	IF_1
0x40005c7	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       570	ldcref.c	FUNCTION_10	IF_2
0x40005cb	          0x83e803	                              sub eax, 3	       570	ldcref.c	FUNCTION_10	IF_2
0x40005ce	            0x3c01	                               cmp al, 1	       570	ldcref.c	FUNCTION_10	IF_2
0x40005d0	            0x7628	                           jbe 0x40005fa	       570	ldcref.c	FUNCTION_10	IF_2
0x40005d2	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       593	ldcref.c	FUNCTION_10
0x40005d7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       593	ldcref.c	FUNCTION_10
0x40005e0	      0xb801000000	                              mov eax, 1	       593	ldcref.c	FUNCTION_10
0x40005e5	     0xf8543010000	                           jne 0x400072e	       593	ldcref.c	FUNCTION_10
0x40005eb	        0x4883c458	                           add rsp, 0x58	       593	ldcref.c	FUNCTION_10
0x40005ef	              0x5b	                                 pop rbx	       593	ldcref.c	FUNCTION_10
0x40005f0	              0x5d	                                 pop rbp	       593	ldcref.c	FUNCTION_10
0x40005f1	            0x415c	                                 pop r12	       593	ldcref.c	FUNCTION_10
0x40005f3	            0x415d	                                 pop r13	       593	ldcref.c	FUNCTION_10
0x40005f5	            0x415e	                                 pop r14	       593	ldcref.c	FUNCTION_10
0x40005f7	            0x415f	                                 pop r15	       593	ldcref.c	FUNCTION_10
0x40005f9	              0xc3	                                     ret	       593	ldcref.c	FUNCTION_10
0x40005fa	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       574	ldcref.c	FUNCTION_10
0x40005fe	        0x488b4068	            mov rax, qword [rax + 0x68] 	       574	ldcref.c	FUNCTION_10
0x4000602	          0x4885c0	                           test rax, rax	       575	ldcref.c	FUNCTION_10	IF_3
0x4000605	            0x74cb	                            je 0x40005d2	       575	ldcref.c	FUNCTION_10	IF_3
0x4000607	    0x4c8b35000000	            mov r14, qword [0x0400060e] 	       579	ldcref.c	FUNCTION_10	FOR_1
0x400060e	          0x488b00	                    mov rax, qword [rax]	       577	ldcref.c	FUNCTION_10	CALL_4
0x4000611	          0x4d85f6	                           test r14, r14	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000614	      0x4889442410	             mov qword [rsp + 0x10], rax	       577	ldcref.c	FUNCTION_10	CALL_4
0x4000619	            0x74b7	                            je 0x40005d2	       579	ldcref.c	FUNCTION_10	FOR_1
0x400061b	       0xf1f440000	                   nop dword [rax + rax]	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000620	        0x498b4608	                mov rax, qword [r14 + 8]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000624	          0x4885c0	                           test rax, rax	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000627	      0x4889442408	                mov qword [rsp + 8], rax	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x400062c	     0xf84bf000000	                            je 0x40006f1	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000632	    0x660f1f440000	                    nop word [rax + rax]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000638	        0x488b7808	                mov rdi, qword [rax + 8]	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x400063c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000641	      0xe800000000	                          call 0x4000646	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000646	            0x85c0	                           test eax, eax	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000648	     0xf8585000000	                           jne 0x40006d3	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x400064e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000653	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000657	          0x4885db	                           test rbx, rbx	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x400065a	            0x7477	                            je 0x40006d3	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x400065c	         0xf1f4000	                         nop dword [rax]	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000660	        0x4c8b7b08	                mov r15, qword [rbx + 8]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000664	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x4000668	        0x4c8b6d08	                mov r13, qword [rbp + 8]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x400066c	          0x4c89ff	                            mov rdi, r15	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x400066f	      0xe800000000	                          call 0x4000674	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000674	            0x85c0	                           test eax, eax	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000676	            0x751e	                           jne 0x4000696	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000678	      0xbe00000000	                              mov esi, 0	       628	ldcref.c	FUNCTION_11	CALL_3
0x400067d	            0x31ff	                            xor edi, edi	       628	ldcref.c	FUNCTION_11	CALL_3
0x400067f	      0xba05000000	                              mov edx, 5	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000684	      0xe800000000	                          call 0x4000689	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000689	          0x4c89fe	                            mov rsi, r15	       628	ldcref.c	FUNCTION_11	CALL_3
0x400068c	          0x4889c7	                            mov rdi, rax	       628	ldcref.c	FUNCTION_11	CALL_3
0x400068f	            0x31c0	                            xor eax, eax	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000691	      0xe800000000	                          call 0x4000696	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000696	    0x498b87b00000	            mov rax, qword [r15 + 0xb0] 	       634	ldcref.c	FUNCTION_11	CALL_4
0x400069d	      0x488d542420	                   lea rdx, [rsp + 0x20]	       635	ldcref.c	FUNCTION_11	CALL_5
0x40006a2	      0xbe00000000	                              mov esi, 0	       635	ldcref.c	FUNCTION_11	CALL_5
0x40006a7	          0x4c89ff	                            mov rdi, r15	       635	ldcref.c	FUNCTION_11	CALL_5
0x40006aa	      0x4c896c2420	             mov qword [rsp + 0x20], r13	       630	ldcref.c	FUNCTION_11
0x40006af	    0xc74424400100	               mov dword [rsp + 0x40], 1	       631	ldcref.c	FUNCTION_11
0x40006b7	      0x4c89642428	             mov qword [rsp + 0x28], r12	       632	ldcref.c	FUNCTION_11
0x40006bc	      0x4c89742430	             mov qword [rsp + 0x30], r14	       633	ldcref.c	FUNCTION_11
0x40006c1	      0x4889442438	             mov qword [rsp + 0x38], rax	       634	ldcref.c	FUNCTION_11	CALL_4
0x40006c6	      0xe800000000	                          call 0x40006cb	       635	ldcref.c	FUNCTION_11	CALL_5
0x40006cb	          0x488b1b	                    mov rbx, qword [rbx]	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40006ce	          0x4885db	                           test rbx, rbx	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40006d1	            0x758d	                           jne 0x4000660	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40006d3	        0x418b4610	            mov eax, dword [r14 + 0x10] 	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x40006d7	            0x85c0	                           test eax, eax	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x40006d9	            0x7516	                           jne 0x40006f1	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x40006db	      0x488b442408	                mov rax, qword [rsp + 8]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40006e0	          0x488b00	                    mov rax, qword [rax]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40006e3	          0x4885c0	                           test rax, rax	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40006e6	      0x4889442408	                mov qword [rsp + 8], rax	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40006eb	     0xf8547ffffff	                           jne 0x4000638	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40006f1	          0x4d8b36	                    mov r14, qword [r14]	       579	ldcref.c	FUNCTION_10	FOR_1
0x40006f4	          0x4d85f6	                           test r14, r14	       579	ldcref.c	FUNCTION_10	FOR_1
0x40006f7	     0xf8523ffffff	                           jne 0x4000620	       579	ldcref.c	FUNCTION_10	FOR_1
0x40006fd	      0xe9d0feffff	                           jmp 0x40005d2	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000702	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000707	            0x31ff	                            xor edi, edi	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000709	      0xba05000000	                              mov edx, 5	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400070e	      0xbe00000000	                              mov esi, 0	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000713	        0x488b5808	                mov rbx, qword [rax + 8]	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000717	      0xe800000000	                          call 0x400071c	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400071c	          0x4889c7	                            mov rdi, rax	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400071f	            0x31c0	                            xor eax, eax	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000721	          0x4889de	                            mov rsi, rbx	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000724	      0xe800000000	                          call 0x4000729	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000729	      0xe9a4feffff	                           jmp 0x40005d2	       567	ldcref.c	FUNCTION_10	IF_1
0x400072e	      0xe800000000	                          call 0x4000733	       593	ldcref.c	FUNCTION_10
check_reloc_refs	SWITCH,0:ELSE,0:functions,0:IF,7:CALL,22:WHILE,0:DO,0:FOR,2	167
0x4000120	            0x4157	                                push r15	       646	ldcref.c	FUNCTION_12
0x4000122	            0x4156	                                push r14	       646	ldcref.c	FUNCTION_12
0x4000124	            0x4155	                                push r13	       646	ldcref.c	FUNCTION_12
0x4000126	            0x4154	                                push r12	       646	ldcref.c	FUNCTION_12
0x4000128	          0x4989f4	                            mov r12, rsi	       646	ldcref.c	FUNCTION_12
0x400012b	              0x55	                                push rbp	       646	ldcref.c	FUNCTION_12
0x400012c	              0x53	                                push rbx	       646	ldcref.c	FUNCTION_12
0x400012d	          0x4889d5	                            mov rbp, rdx	       646	ldcref.c	FUNCTION_12
0x4000130	        0x4883ec48	                           sub rsp, 0x48	       646	ldcref.c	FUNCTION_12
0x4000134	        0x488b4668	            mov rax, qword [rsi + 0x68] 	       661	ldcref.c	FUNCTION_12	CALL_1
0x4000138	      0x48897c2408	                mov qword [rsp + 8], rdi	       646	ldcref.c	FUNCTION_12
0x400013d	          0x488b18	                    mov rbx, qword [rax]	       661	ldcref.c	FUNCTION_12	CALL_1
0x4000140	        0x488b4208	                mov rax, qword [rdx + 8]	       663	ldcref.c	FUNCTION_12
0x4000144	        0x488b4068	            mov rax, qword [rax + 0x68] 	       664	ldcref.c	FUNCTION_12	CALL_2
0x4000148	          0x4889df	                            mov rdi, rbx	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x400014b	          0x4c8b28	                    mov r13, qword [rax]	       664	ldcref.c	FUNCTION_12	CALL_2
0x400014e	          0x4c89ee	                            mov rsi, r13	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000151	      0xe800000000	                          call 0x4000156	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000156	            0x85c0	                           test eax, eax	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000158	            0x7452	                            je 0x40001ac	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x400015a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       670	ldcref.c	FUNCTION_12	FOR_1
0x400015e	        0x4c8b7008	                mov r14, qword [rax + 8]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000162	          0x4d85f6	                           test r14, r14	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000165	            0x7511	                           jne 0x4000178	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000167	            0xeb43	                           jmp 0x40001ac	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000169	     0xf1f80000000	                         nop dword [rax]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000170	          0x4d8b36	                    mov r14, qword [r14]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000173	          0x4d85f6	                           test r14, r14	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000176	            0x7434	                            je 0x40001ac	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000178	        0x498b7608	                mov rsi, qword [r14 + 8]	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x400017c	          0x4889df	                            mov rdi, rbx	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x400017f	      0xe800000000	                          call 0x4000184	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000184	            0x85c0	                           test eax, eax	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000186	            0x75e8	                           jne 0x4000170	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000188	        0x488b4500	                    mov rax, qword [rbp]	       685	ldcref.c	FUNCTION_12
0x400018c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       688	ldcref.c	FUNCTION_12	CALL_5
0x4000191	          0x4c89e6	                            mov rsi, r12	       688	ldcref.c	FUNCTION_12	CALL_5
0x4000194	        0x448b7520	           mov r14d, dword [rbp + 0x20] 	       686	ldcref.c	FUNCTION_12
0x4000198	      0x4889442418	             mov qword [rsp + 0x18], rax	       685	ldcref.c	FUNCTION_12
0x400019d	      0xe800000000	                          call 0x40001a2	       688	ldcref.c	FUNCTION_12	CALL_5
0x40001a2	          0x4885c0	                           test rax, rax	       689	ldcref.c	FUNCTION_12	IF_4
0x40001a5	          0x4989c7	                            mov r15, rax	       688	ldcref.c	FUNCTION_12	CALL_5
0x40001a8	            0x7811	                            js 0x40001bb	       689	ldcref.c	FUNCTION_12	IF_4
0x40001aa	            0x752f	                           jne 0x40001db	       691	ldcref.c	FUNCTION_12	IF_5
0x40001ac	        0x4883c448	                           add rsp, 0x48	       731	ldcref.c	FUNCTION_12
0x40001b0	              0x5b	                                 pop rbx	       731	ldcref.c	FUNCTION_12
0x40001b1	              0x5d	                                 pop rbp	       731	ldcref.c	FUNCTION_12
0x40001b2	            0x415c	                                 pop r12	       731	ldcref.c	FUNCTION_12
0x40001b4	            0x415d	                                 pop r13	       731	ldcref.c	FUNCTION_12
0x40001b6	            0x415e	                                 pop r14	       731	ldcref.c	FUNCTION_12
0x40001b8	            0x415f	                                 pop r15	       731	ldcref.c	FUNCTION_12
0x40001ba	              0xc3	                                     ret	       731	ldcref.c	FUNCTION_12
0x40001bb	      0xbe00000000	                              mov esi, 0	       690	ldcref.c	FUNCTION_12	CALL_7
0x40001c0	            0x31ff	                            xor edi, edi	       690	ldcref.c	FUNCTION_12	CALL_7
0x40001c2	      0xba05000000	                              mov edx, 5	       690	ldcref.c	FUNCTION_12	CALL_7
0x40001c7	      0xe800000000	                          call 0x40001cc	       690	ldcref.c	FUNCTION_12	CALL_7
0x40001cc	      0x488b742408	                mov rsi, qword [rsp + 8]	       690	ldcref.c	FUNCTION_12	CALL_7
0x40001d1	          0x4889c7	                            mov rdi, rax	       690	ldcref.c	FUNCTION_12	CALL_7
0x40001d4	            0x31c0	                            xor eax, eax	       690	ldcref.c	FUNCTION_12	CALL_7
0x40001d6	      0xe800000000	                          call 0x40001db	       690	ldcref.c	FUNCTION_12	CALL_7
0x40001db	          0x4c89ff	                            mov rdi, r15	       694	ldcref.c	FUNCTION_12	CALL_8
0x40001de	      0xe800000000	                          call 0x40001e3	       694	ldcref.c	FUNCTION_12	CALL_8
0x40001e3	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       695	ldcref.c	FUNCTION_12	CALL_9
0x40001e7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       695	ldcref.c	FUNCTION_12	CALL_9
0x40001ec	          0x4889c2	                            mov rdx, rax	       695	ldcref.c	FUNCTION_12	CALL_9
0x40001ef	          0x4c89e6	                            mov rsi, r12	       695	ldcref.c	FUNCTION_12	CALL_9
0x40001f2	      0x4889442410	             mov qword [rsp + 0x10], rax	       694	ldcref.c	FUNCTION_12	CALL_8
0x40001f7	      0xe800000000	                          call 0x40001fc	       695	ldcref.c	FUNCTION_12	CALL_9
0x40001fc	          0x4885c0	                           test rax, rax	       696	ldcref.c	FUNCTION_12	IF_6
0x40001ff	          0x4989c7	                            mov r15, rax	       695	ldcref.c	FUNCTION_12	CALL_9
0x4000202	     0xf8844010000	                            js 0x400034c	       696	ldcref.c	FUNCTION_12	IF_6
0x4000208	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       700	ldcref.c	FUNCTION_12
0x400020d	        0x4e8d1cf8	                  lea r11, [rax + r15*8]	       700	ldcref.c	FUNCTION_12
0x4000211	          0x4c39d8	                            cmp rax, r11	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000214	     0xf830e010000	                           jae 0x4000328	       701	ldcref.c	FUNCTION_12	FOR_2
0x400021a	          0x4c8b38	                    mov r15, qword [rax]	       701	ldcref.c	FUNCTION_12	FOR_2
0x400021d	          0x4d85ff	                           test r15, r15	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000220	     0xf8402010000	                            je 0x4000328	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000226	      0x48895c2428	             mov qword [rsp + 0x28], rbx	       701	ldcref.c	FUNCTION_12	FOR_2
0x400022b	      0x4c89642438	             mov qword [rsp + 0x38], r12	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000230	          0x4889c3	                            mov rbx, rax	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000233	      0x48896c2420	             mov qword [rsp + 0x20], rbp	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000238	      0x4c896c2430	             mov qword [rsp + 0x30], r13	       701	ldcref.c	FUNCTION_12	FOR_2
0x400023d	          0x4d89dc	                            mov r12, r11	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000240	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000245	            0xeb42	                           jmp 0x4000289	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000247	    0x660f1f840000	                    nop word [rax + rax]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000250	    0x41f745180101	         test dword [r13 + 0x18], 0x101 	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000258	            0x7416	                            je 0x4000270	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400025a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x400025f	        0x488b4008	                mov rax, qword [rax + 8]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000263	        0x49394520	            cmp qword [r13 + 0x20], rax 	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000267	            0x744e	                            je 0x40002b7	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000269	     0xf1f80000000	                         nop dword [rax]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000270	        0x4883c308	                              add rbx, 8	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000274	          0x4939dc	                            cmp r12, rbx	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000277	     0xf86ab000000	                           jbe 0x4000328	       701	ldcref.c	FUNCTION_12	FOR_2
0x400027d	          0x4c8b3b	                    mov r15, qword [rbx]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000280	          0x4d85ff	                           test r15, r15	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000283	     0xf849f000000	                            je 0x4000328	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000289	          0x498b07	                    mov rax, qword [r15]	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400028c	          0x4885c0	                           test rax, rax	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400028f	            0x74df	                            je 0x4000270	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000291	          0x4c8b28	                    mov r13, qword [rax]	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000294	          0x4d85ed	                           test r13, r13	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000297	            0x74d7	                            je 0x4000270	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000299	          0x4585f6	                         test r14d, r14d	       707	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400029c	            0x74b2	                            je 0x4000250	       707	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400029e	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x40002a2	    0x483d00000000	                              cmp rax, 0	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x40002a8	            0x740d	                            je 0x40002b7	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x40002aa	        0xf6402110	           test byte [rax + 0x21], 0x10 	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x40002ae	            0x7507	                           jne 0x40002b7	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x40002b0	      0x41f6451882	           test byte [r13 + 0x18], 0x82 	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40002b5	            0x74b9	                            je 0x4000270	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40002b7	          0x4885ed	                           test rbp, rbp	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40002ba	     0xf8480000000	                            je 0x4000340	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40002c0	        0x498b7d08	                mov rdi, qword [r13 + 8]	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40002c4	          0x4889ee	                            mov rsi, rbp	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40002c7	      0xe800000000	                          call 0x40002cc	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40002cc	            0x85c0	                           test eax, eax	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40002ce	           0xf94c0	                                 sete al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40002d1	            0x84c0	                             test al, al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40002d3	            0x749b	                            je 0x4000270	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40002d5	        0x4d8b4d08	                 mov r9, qword [r13 + 8]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002d9	      0xba05000000	                              mov edx, 5	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002de	      0xbe00000000	                              mov esi, 0	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002e3	            0x31ff	                            xor edi, edi	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002e5	        0x4d8b7f08	                mov r15, qword [r15 + 8]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002e9	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002ee	      0xe800000000	                          call 0x40002f3	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002f3	        0x4883ec08	                              sub rsp, 8	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002f7	          0x4889c7	                            mov rdi, rax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002fa	          0x4c89f9	                            mov rcx, r15	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40002fd	        0xff742438	                 push qword [rsp + 0x38]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000301	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000306	            0x31c0	                            xor eax, eax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000308	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400030d	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000312	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000317	      0xe800000000	                          call 0x400031c	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400031c	              0x58	                                 pop rax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400031d	              0x5a	                                 pop rdx	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400031e	      0xe94dffffff	                           jmp 0x4000270	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000323	       0xf1f440000	                   nop dword [rax + rax]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000328	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       730	ldcref.c	FUNCTION_12	CALL_22
0x400032d	        0x4883c448	                           add rsp, 0x48	       731	ldcref.c	FUNCTION_12
0x4000331	              0x5b	                                 pop rbx	       731	ldcref.c	FUNCTION_12
0x4000332	              0x5d	                                 pop rbp	       731	ldcref.c	FUNCTION_12
0x4000333	            0x415c	                                 pop r12	       731	ldcref.c	FUNCTION_12
0x4000335	            0x415d	                                 pop r13	       731	ldcref.c	FUNCTION_12
0x4000337	            0x415e	                                 pop r14	       731	ldcref.c	FUNCTION_12
0x4000339	            0x415f	                                 pop r15	       731	ldcref.c	FUNCTION_12
0x400033b	      0xe900000000	                           jmp 0x4000340	       730	ldcref.c	FUNCTION_12	CALL_22
0x4000340	        0x418b4518	            mov eax, dword [r13 + 0x18] 	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000344	          0xc1e808	                              shr eax, 8	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000347	          0x83e001	                              and eax, 1	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400034a	            0xeb85	                           jmp 0x40002d1	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400034c	            0x31ff	                            xor edi, edi	       697	ldcref.c	FUNCTION_12	CALL_11
0x400034e	      0xba05000000	                              mov edx, 5	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000353	      0xbe00000000	                              mov esi, 0	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000358	      0xe800000000	                          call 0x400035d	       697	ldcref.c	FUNCTION_12	CALL_11
0x400035d	      0x488b742408	                mov rsi, qword [rsp + 8]	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000362	          0x4889c7	                            mov rdi, rax	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000365	            0x31c0	                            xor eax, eax	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000367	      0xe800000000	                          call 0x400036c	       697	ldcref.c	FUNCTION_12	CALL_11
0x400036c	      0xe997feffff	                           jmp 0x4000208	       697	ldcref.c	FUNCTION_12	CALL_11
check_nocrossrefs	SWITCH,0:ELSE,0:functions,0:IF,1:CALL,1:WHILE,0:DO,0:FOR,0	13
0x4000ff0	    0x8b0500000000	            mov eax, dword [0x04000ff6] 	       496	ldcref.c	FUNCTION_8	IF_1
0x4000ff6	            0x85c0	                           test eax, eax	       496	ldcref.c	FUNCTION_8	IF_1
0x4000ff8	            0x7506	                           jne 0x4001000	       496	ldcref.c	FUNCTION_8	IF_1
0x4000ffa	            0xf3c3	                                     ret	       496	ldcref.c	FUNCTION_8	IF_1
0x4000ffc	         0xf1f4000	                         nop dword [rax]	       496	ldcref.c	FUNCTION_8	IF_1
0x4001000	        0x4883ec08	                              sub rsp, 8	       495	ldcref.c	FUNCTION_8
0x4001004	      0xbf00000000	                              mov edi, 0	       499	ldcref.c	FUNCTION_8
0x4001009	            0x31d2	                            xor edx, edx	       499	ldcref.c	FUNCTION_8
0x400100b	      0xbe00000000	                              mov esi, 0	       499	ldcref.c	FUNCTION_8
0x4001010	      0xe800000000	                          call 0x4001015	       499	ldcref.c	FUNCTION_8
0x4001015	      0xbf00000000	                              mov edi, 0	       501	ldcref.c	FUNCTION_8	CALL_1
0x400101a	        0x4883c408	                              add rsp, 8	       502	ldcref.c	FUNCTION_8
0x400101e	      0xe900000000	                   jmp section_end..data	       501	ldcref.c	FUNCTION_8	CALL_1
