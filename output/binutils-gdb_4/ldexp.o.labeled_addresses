set_sym_sections	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,2	28
0x4000040	    0x48817f180000	               cmp qword [rdi + 0x18], 0	      1642	ldexp.c	FUNCTION_48	IF_1
0x4000048	            0x7456	                            je 0x40000a0	      1642	ldexp.c	FUNCTION_48	IF_1
0x400004a	              0x53	                                push rbx	      1640	ldexp.c	FUNCTION_48
0x400004b	          0x4889fb	                            mov rbx, rdi	      1640	ldexp.c	FUNCTION_48
0x400004e	        0x488b7708	                mov rsi, qword [rdi + 8]	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000052	    0x488b3d000000	            mov rdi, qword [0x04000059] 	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000059	            0x31c9	                            xor ecx, ecx	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400005b	            0x31d2	                            xor edx, edx	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x400005d	    0x41b801000000	                              mov r8d, 1	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000063	      0xe800000000	                          call 0x4000068	      1645	ldexp.c	FUNCTION_48	IF_1	CALL_1
0x4000068	          0x4885c0	                           test rax, rax	      1647	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400006b	            0x7406	                            je 0x4000073	      1647	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400006d	        0x80781803	                cmp byte [rax + 0x18], 3	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000071	            0x740d	                            je 0x4000080	      1648	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000073	      0xb801000000	                              mov eax, 1	      1656	ldexp.c	FUNCTION_48
0x4000078	              0x5b	                                 pop rbx	      1656	ldexp.c	FUNCTION_48
0x4000079	              0xc3	                                     ret	      1656	ldexp.c	FUNCTION_48
0x400007a	    0x660f1f440000	                    nop word [rax + rax]	      1656	ldexp.c	FUNCTION_48
0x4000080	    0x488178280000	               cmp qword [rax + 0x28], 0	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000088	            0x75e9	                           jne 0x4000073	      1649	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400008a	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400008e	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000092	        0x48895028	             mov qword [rax + 0x28], rdx	      1652	ldexp.c	FUNCTION_48	IF_1	IF_2
0x4000096	        0x48294830	             sub qword [rax + 0x30], rcx	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400009a	            0xebd7	                           jmp 0x4000073	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x400009c	         0xf1f4000	                         nop dword [rax]	      1651	ldexp.c	FUNCTION_48	IF_1	IF_2
0x40000a0	      0xb801000000	                              mov eax, 1	      1656	ldexp.c	FUNCTION_48
0x40000a5	              0xc3	                                     ret	      1656	ldexp.c	FUNCTION_48
exp_bigintop	DO,0:functions,0:CALL,2:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	21
0x4002870	            0x4154	                                push r12	       213	ldexp.c	FUNCTION_6
0x4002872	              0x55	                                push rbp	       213	ldexp.c	FUNCTION_6
0x4002873	          0x4989fc	                            mov r12, rdi	       213	ldexp.c	FUNCTION_6
0x4002876	              0x53	                                push rbx	       213	ldexp.c	FUNCTION_6
0x4002877	      0xbf28000000	                           mov edi, 0x28	       214	ldexp.c	FUNCTION_6	CALL_1
0x400287c	          0x4889f5	                            mov rbp, rsi	       213	ldexp.c	FUNCTION_6
0x400287f	      0xe800000000	                          call 0x4002884	       214	ldexp.c	FUNCTION_6	CALL_1
0x4002884	          0x4889c3	                            mov rbx, rax	       214	ldexp.c	FUNCTION_6	CALL_1
0x4002887	    0xc70002010000	                  mov dword [rax], 0x102	       215	ldexp.c	FUNCTION_6
0x400288d	      0xe800000000	                          call 0x4002892	       216	ldexp.c	FUNCTION_6	CALL_2
0x4002892	        0x48894308	                mov qword [rbx + 8], rax	       216	ldexp.c	FUNCTION_6	CALL_2
0x4002896	    0x8b0500000000	            mov eax, dword [0x0400289c] 	       217	ldexp.c	FUNCTION_6
0x400289c	        0x4c896318	             mov qword [rbx + 0x18], r12	       218	ldexp.c	FUNCTION_6
0x40028a0	        0x48896b20	             mov qword [rbx + 0x20], rbp	       219	ldexp.c	FUNCTION_6
0x40028a4	    0xc74310070000	               mov dword [rbx + 0x10], 7	       220	ldexp.c	FUNCTION_6
0x40028ab	          0x894304	                mov dword [rbx + 4], eax	       217	ldexp.c	FUNCTION_6
0x40028ae	          0x4889d8	                            mov rax, rbx	       222	ldexp.c	FUNCTION_6
0x40028b1	              0x5b	                                 pop rbx	       222	ldexp.c	FUNCTION_6
0x40028b2	              0x5d	                                 pop rbp	       222	ldexp.c	FUNCTION_6
0x40028b3	            0x415c	                                 pop r12	       222	ldexp.c	FUNCTION_6
0x40028b5	              0xc3	                                     ret	       222	ldexp.c	FUNCTION_6
ldexp_init	DO,0:functions,0:CALL,3:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,1	19
0x4007590	        0x4883ec08	                              sub rsp, 8	      1624	ldexp.c	FUNCTION_47
0x4007594	      0xb90d000000	                            mov ecx, 0xd	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x4007599	      0xba28000000	                           mov edx, 0x28	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x400759e	      0xbe00000000	                              mov esi, 0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40075a3	      0xbf00000000	                              mov edi, 0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40075a8	      0xe800000000	                          call 0x40075ad	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40075ad	            0x85c0	                           test eax, eax	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40075af	            0x740f	                            je 0x40075c0	      1627	ldexp.c	FUNCTION_47	IF_1	CALL_1
0x40075b1	        0x4883c408	                              add rsp, 8	      1632	ldexp.c	FUNCTION_47
0x40075b5	              0xc3	                                     ret	      1632	ldexp.c	FUNCTION_47
0x40075b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1632	ldexp.c	FUNCTION_47
0x40075c0	            0x31ff	                            xor edi, edi	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40075c2	      0xba05000000	                              mov edx, 5	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40075c7	      0xbe00000000	                              mov esi, 0	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40075cc	      0xe800000000	                          call 0x40075d1	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40075d1	        0x4883c408	                              add rsp, 8	      1632	ldexp.c	FUNCTION_47
0x40075d5	          0x4889c7	                            mov rdi, rax	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40075d8	            0x31c0	                            xor eax, eax	      1631	ldexp.c	FUNCTION_47	CALL_3
0x40075da	      0xe900000000	                           jmp 0x40075df	      1631	ldexp.c	FUNCTION_47	CALL_3
exp_nameop	DO,0:functions,0:CALL,2:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	20
0x40040c0	            0x4154	                                push r12	      1328	ldexp.c	FUNCTION_35
0x40040c2	              0x55	                                push rbp	      1328	ldexp.c	FUNCTION_35
0x40040c3	          0x4189fc	                           mov r12d, edi	      1328	ldexp.c	FUNCTION_35
0x40040c6	              0x53	                                push rbx	      1328	ldexp.c	FUNCTION_35
0x40040c7	      0xbf20000000	                           mov edi, 0x20	      1329	ldexp.c	FUNCTION_35	CALL_1
0x40040cc	          0x4889f5	                            mov rbp, rsi	      1328	ldexp.c	FUNCTION_35
0x40040cf	      0xe800000000	                          call 0x40040d4	      1329	ldexp.c	FUNCTION_35	CALL_1
0x40040d4	          0x4889c3	                            mov rbx, rax	      1329	ldexp.c	FUNCTION_35	CALL_1
0x40040d7	          0x448920	                   mov dword [rax], r12d	      1331	ldexp.c	FUNCTION_35
0x40040da	      0xe800000000	                          call 0x40040df	      1332	ldexp.c	FUNCTION_35	CALL_2
0x40040df	        0x48894308	                mov qword [rbx + 8], rax	      1332	ldexp.c	FUNCTION_35	CALL_2
0x40040e3	    0x8b0500000000	            mov eax, dword [0x040040e9] 	      1333	ldexp.c	FUNCTION_35
0x40040e9	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1334	ldexp.c	FUNCTION_35
0x40040ed	    0xc74310030000	               mov dword [rbx + 0x10], 3	      1335	ldexp.c	FUNCTION_35
0x40040f4	          0x894304	                mov dword [rbx + 4], eax	      1333	ldexp.c	FUNCTION_35
0x40040f7	          0x4889d8	                            mov rax, rbx	      1338	ldexp.c	FUNCTION_35
0x40040fa	              0x5b	                                 pop rbx	      1338	ldexp.c	FUNCTION_35
0x40040fb	              0x5d	                                 pop rbp	      1338	ldexp.c	FUNCTION_35
0x40040fc	            0x415c	                                 pop r12	      1338	ldexp.c	FUNCTION_35
0x40040fe	              0xc3	                                     ret	      1338	ldexp.c	FUNCTION_35
ldexp_finalize_syms	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	4
0x40075e0	            0x31d2	                            xor edx, edx	      1661	ldexp.c	FUNCTION_49	CALL_1
0x40075e2	      0xbe00000000	                              mov esi, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x40075e7	      0xbf00000000	                              mov edi, 0	      1661	ldexp.c	FUNCTION_49	CALL_1
0x40075ec	      0xe900000000	                           jmp 0x40075f1	      1661	ldexp.c	FUNCTION_49	CALL_1
exp_get_fill	DO,1:functions,0:CALL,6:WHILE,0:SWITCH,0:FOR,0:ELSE,1:IF,6	630
0x4005e80	            0x4157	                                push r15	      1533	ldexp.c	FUNCTION_44
0x4005e82	            0x4156	                                push r14	      1533	ldexp.c	FUNCTION_44
0x4005e84	            0x4155	                                push r13	      1533	ldexp.c	FUNCTION_44
0x4005e86	            0x4154	                                push r12	      1533	ldexp.c	FUNCTION_44
0x4005e88	              0x55	                                push rbp	      1533	ldexp.c	FUNCTION_44
0x4005e89	              0x53	                                push rbx	      1533	ldexp.c	FUNCTION_44
0x4005e8a	          0x4889f3	                            mov rbx, rsi	      1533	ldexp.c	FUNCTION_44
0x4005e8d	        0x4883ec08	                              sub rsp, 8	      1533	ldexp.c	FUNCTION_44
0x4005e91	          0x4885ff	                           test rdi, rdi	      1538	ldexp.c	FUNCTION_44	IF_1
0x4005e94	     0xf84b0000000	                            je 0x4005f4a	      1538	ldexp.c	FUNCTION_44	IF_1
0x4005e9a	    0x48c705000000	               mov qword [0x04005ea5], 0	      1247	ldexp.c	FUNCTION_30
0x4005ea5	    0x48c705000000	               mov qword [0x04005eb0], 0	      1248	ldexp.c	FUNCTION_30
0x4005eb0	          0x4889fd	                            mov rbp, rdi	      1248	ldexp.c	FUNCTION_30
0x4005eb3	    0x48c705000000	               mov qword [0x04005ebe], 0	      1249	ldexp.c	FUNCTION_30
0x4005ebe	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4005ec1	          0x4989d4	                            mov r12, rdx	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4005ec4	    0xc70500000000	               mov dword [0x04005ece], 0	      1246	ldexp.c	FUNCTION_30
0x4005ece	          0x83f809	                              cmp eax, 9	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4005ed1	            0x770d	                            ja 0x4005ee0	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4005ed3	            0x89c2	                            mov edx, eax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4005ed5	    0xff24d5000000	                       jmp qword [rdx*8]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4005edc	         0xf1f4000	                         nop dword [rax]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4005ee0	      0xbecb040000	                          mov esi, 0x4cb	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4005ee5	      0xbf00000000	                              mov edi, 0	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4005eea	      0xe800000000	                          call 0x4005eef	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4005eef	    0x48c705000000	               mov qword [0x04005efa], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4005efa	    0x48c705000000	               mov qword [0x04005f05], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4005f05	    0x48c705000000	               mov qword [0x04005f10], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4005f10	    0x48c705000000	               mov qword [0x04005f1b], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4005f1b	          0x4d85e4	                           test r12, r12	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4005f1e	            0x742a	                            je 0x4005f4a	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4005f20	    0x833d00000000	               cmp dword [0x04005f27], 1	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4005f27	            0x7421	                            je 0x4005f4a	      1544	ldexp.c	FUNCTION_44	IF_2	IF_3
0x4005f29	      0xba05000000	                              mov edx, 5	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f2e	      0xbe00000000	                              mov esi, 0	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f33	            0x31ff	                            xor edi, edi	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f35	      0xe800000000	                          call 0x4005f3a	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f3a	          0x4c89e2	                            mov rdx, r12	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f3d	          0x4889c7	                            mov rdi, rax	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f40	          0x4889ee	                            mov rsi, rbp	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f43	            0x31c0	                            xor eax, eax	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f45	      0xe800000000	                          call 0x4005f4a	      1545	ldexp.c	FUNCTION_44	IF_2	IF_3	CALL_3
0x4005f4a	          0x4889d8	                            mov rax, rbx	      1547	ldexp.c	FUNCTION_44	IF_2
0x4005f4d	        0x4883c408	                              add rsp, 8	      1588	ldexp.c	FUNCTION_44
0x4005f51	              0x5b	                                 pop rbx	      1588	ldexp.c	FUNCTION_44
0x4005f52	              0x5d	                                 pop rbp	      1588	ldexp.c	FUNCTION_44
0x4005f53	            0x415c	                                 pop r12	      1588	ldexp.c	FUNCTION_44
0x4005f55	            0x415d	                                 pop r13	      1588	ldexp.c	FUNCTION_44
0x4005f57	            0x415e	                                 pop r14	      1588	ldexp.c	FUNCTION_44
0x4005f59	            0x415f	                                 pop r15	      1588	ldexp.c	FUNCTION_44
0x4005f5b	              0xc3	                                     ret	      1588	ldexp.c	FUNCTION_44
0x4005f5c	         0xf1f4000	                         nop dword [rax]	      1588	ldexp.c	FUNCTION_44
0x4005f60	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4005f64	      0xe8f7b5ffff	                call sym.exp_fold_tree_1	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4005f69	    0x833d00000000	               cmp dword [0x04005f70], 4	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4005f70	     0xf84ca040000	                            je 0x4006440	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4005f76	    0x8b0500000000	            mov eax, dword [0x04005f7c] 	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4005f7c	            0x85c0	                           test eax, eax	      1542	ldexp.c	FUNCTION_44	IF_2
0x4005f7e	            0x749b	                            je 0x4005f1b	      1542	ldexp.c	FUNCTION_44	IF_2
0x4005f80	    0x488b3d000000	            mov rdi, qword [0x04005f87] 	      1542	ldexp.c	FUNCTION_44	IF_2
0x4005f87	          0x4885ff	                           test rdi, rdi	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4005f8a	            0x7411	                            je 0x4005f9d	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4005f8c	      0xe800000000	                          call 0x4005f91	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4005f91	          0x4885c0	                           test rax, rax	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4005f94	          0x4889c3	                            mov rbx, rax	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4005f97	     0xf8523030000	                           jne 0x40062c0	      1550	ldexp.c	FUNCTION_44	IF_4	CALL_4
0x4005f9d	      0xbf13000000	                           mov edi, 0x13	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x4005fa2	      0xe800000000	                          call 0x4005fa7	      1579	ldexp.c	FUNCTION_44	ELSE_1	CALL_6
0x4005fa7	    0x488b15000000	            mov rdx, qword [0x04005fae] 	      1580	ldexp.c	FUNCTION_44	ELSE_1
0x4005fae	    0x48c700040000	                      mov qword [rax], 4	      1585	ldexp.c	FUNCTION_44	ELSE_1
0x4005fb5	            0x89d1	                            mov ecx, edx	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x4005fb7	          0x88500b	                mov byte [rax + 0xb], dl	      1584	ldexp.c	FUNCTION_44	ELSE_1
0x4005fba	          0xc1e918	                           shr ecx, 0x18	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x4005fbd	          0x884808	                  mov byte [rax + 8], cl	      1581	ldexp.c	FUNCTION_44	ELSE_1
0x4005fc0	            0x89d1	                            mov ecx, edx	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x4005fc2	          0xc1e910	                           shr ecx, 0x10	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x4005fc5	          0x884809	                  mov byte [rax + 9], cl	      1582	ldexp.c	FUNCTION_44	ELSE_1
0x4005fc8	            0x89d1	                            mov ecx, edx	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x4005fca	          0xc1e908	                              shr ecx, 8	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x4005fcd	          0x88480a	                mov byte [rax + 0xa], cl	      1583	ldexp.c	FUNCTION_44	ELSE_1
0x4005fd0	        0x4883c408	                              add rsp, 8	      1588	ldexp.c	FUNCTION_44
0x4005fd4	              0x5b	                                 pop rbx	      1588	ldexp.c	FUNCTION_44
0x4005fd5	              0x5d	                                 pop rbp	      1588	ldexp.c	FUNCTION_44
0x4005fd6	            0x415c	                                 pop r12	      1588	ldexp.c	FUNCTION_44
0x4005fd8	            0x415d	                                 pop r13	      1588	ldexp.c	FUNCTION_44
0x4005fda	            0x415e	                                 pop r14	      1588	ldexp.c	FUNCTION_44
0x4005fdc	            0x415f	                                 pop r15	      1588	ldexp.c	FUNCTION_44
0x4005fde	              0xc3	                                     ret	      1588	ldexp.c	FUNCTION_44
0x4005fdf	              0x90	                                     nop	      1588	ldexp.c	FUNCTION_44
0x4005fe0	    0x448b3d000000	           mov r15d, dword [0x04005fe7] 	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4005fe7	          0x4585ff	                         test r15d, r15d	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4005fea	     0xf84fffeffff	                            je 0x4005eef	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4005ff0	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4005ff4	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4005ff8	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4005ffc	        0x48034720	             add rax, qword [rdi + 0x20]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4006000	    0xc70500000000	               mov dword [0x0400600a], 1	       251	ldexp.c	FUNCTION_9
0x400600a	    0x48c705000000	               mov qword [0x04006015], 0	       253	ldexp.c	FUNCTION_9
0x4006015	    0x488915000000	            mov qword [0x0400601c], rdx 	       254	ldexp.c	FUNCTION_9
0x400601c	    0x488905000000	            mov qword [0x04006023], rax 	       252	ldexp.c	FUNCTION_9
0x4006023	      0xe975ffffff	                           jmp 0x4005f9d	       252	ldexp.c	FUNCTION_9
0x4006028	     0xf1f84000000	                   nop dword [rax + rax]	       252	ldexp.c	FUNCTION_9
0x4006030	      0xe8eba0ffff	                    call sym.fold_binary	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4006035	    0x8b0500000000	            mov eax, dword [0x0400603b] 	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x400603b	      0xe93cffffff	                           jmp 0x4005f7c	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4006040	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       673	ldexp.c	FUNCTION_20	CALL_1
0x4006044	    0x4c8b2d000000	            mov r13, qword [0x0400604b] 	       671	ldexp.c	FUNCTION_20
0x400604b	      0xe810b5ffff	                call sym.exp_fold_tree_1	       673	ldexp.c	FUNCTION_20	CALL_1
0x4006050	    0x448b0d000000	            mov r9d, dword [0x04006057] 	       675	ldexp.c	FUNCTION_20	IF_1
0x4006057	    0x4c892d000000	            mov qword [0x0400605e], r13 	       674	ldexp.c	FUNCTION_20
0x400605e	          0x4585c9	                           test r9d, r9d	       675	ldexp.c	FUNCTION_20	IF_1
0x4006061	     0xf84b4feffff	                            je 0x4005f1b	       675	ldexp.c	FUNCTION_20	IF_1
0x4006067	    0x48833d000000	               cmp qword [0x0400606f], 0	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x400606f	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006073	      0x480f457d20	          cmovne rdi, qword [rbp + 0x20]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006078	      0xe8e3b4ffff	                call sym.exp_fold_tree_1	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x400607d	    0x8b0500000000	            mov eax, dword [0x04006083] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006083	      0xe9f4feffff	                           jmp 0x4005f7c	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006088	     0xf1f84000000	                   nop dword [rax + rax]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006090	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4006094	      0xe8c7b4ffff	                call sym.exp_fold_tree_1	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4006099	    0x448b35000000	           mov r14d, dword [0x040060a0] 	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x40060a0	          0x4585f6	                         test r14d, r14d	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x40060a3	     0xf8472feffff	                            je 0x4005f1b	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x40060a9	          0x8b5500	                    mov edx, dword [rbp]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060ac	    0x81fa17010000	                          cmp edx, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060b2	     0xf84fc020000	                            je 0x40063b4	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060b8	     0xf8e9a040000	                           jle 0x4006558	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060be	    0x81fa40010000	                          cmp edx, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060c4	     0xf8462050000	                            je 0x400662c	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060ca	     0xf8e0e050000	                           jle 0x40065de	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060d0	    0x81fa60010000	                          cmp edx, 0x160	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060d6	     0xf8403060000	                            je 0x40066df	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060dc	            0x31f6	                            xor esi, esi	       163	ldexp.c	FUNCTION_2
0x40060de	    0x81fa67010000	                          cmp edx, 0x167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060e4	    0x488b05000000	            mov rax, qword [0x040060eb] 	       161	ldexp.c	FUNCTION_2
0x40060eb	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       162	ldexp.c	FUNCTION_2
0x40060f2	      0xbf01000000	                              mov edi, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40060f7	            0x740a	                            je 0x4006103	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060f9	      0xe975040000	                           jmp 0x4006573	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40060fe	            0x6690	                                     nop	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006100	          0x4889d1	                            mov rcx, rdx	       167	ldexp.c	FUNCTION_2	DO_1
0x4006103	        0x4883f801	                              cmp rax, 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4006107	        0x488d5101	                      lea rdx, [rcx + 1]	       167	ldexp.c	FUNCTION_2	DO_1
0x400610b	            0x7605	                           jbe 0x4006112	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x400610d	            0xa801	                              test al, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x400610f	           0xf45f7	                         cmovne esi, edi	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4006112	          0x48d1e8	                              shr rax, 1	       172	ldexp.c	FUNCTION_2
0x4006115	            0x75e9	                           jne 0x4006100	       172	ldexp.c	FUNCTION_2
0x4006117	        0x4883c102	                              add rcx, 2	       175	ldexp.c	FUNCTION_2	IF_2
0x400611b	            0x85f6	                           test esi, esi	       175	ldexp.c	FUNCTION_2	IF_2
0x400611d	    0x48c705000000	               mov qword [0x04006128], 0	       176	ldexp.c	FUNCTION_2
0x4006128	        0x480f45d1	                         cmovne rdx, rcx	       175	ldexp.c	FUNCTION_2	IF_2
0x400612c	    0x488b3d000000	            mov rdi, qword [0x04006133] 	       175	ldexp.c	FUNCTION_2	IF_2
0x4006133	    0x488915000000	            mov qword [0x0400613a], rdx 	       177	ldexp.c	FUNCTION_2
0x400613a	      0xe948feffff	                           jmp 0x4005f87	       177	ldexp.c	FUNCTION_2
0x400613f	              0x90	                                     nop	       177	ldexp.c	FUNCTION_2
0x4006140	      0xe8abbeffff	                      call sym.fold_name	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4006145	      0xe92cfeffff	                           jmp 0x4005f76	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x400614a	    0x660f1f440000	                    nop word [rax + rax]	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4006150	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4006154	          0x803e2e	                    cmp byte [rsi], 0x2e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4006157	     0xf840b030000	                            je 0x4006468	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x400615d	          0x4531ed	                          xor r13d, r13d	      1123	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4006160	          0x83f805	                              cmp eax, 5	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4006163	     0xf84af030000	                            je 0x4006518	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4006169	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x400616d	    0x488935000000	            mov qword [0x04006174], rsi 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4006174	    0x48c705000000	               mov qword [0x0400617f], 0	      1145	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x400617f	      0xe8dcb3ffff	                call sym.exp_fold_tree_1	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4006184	    0x833d00000000	               cmp dword [0x0400618b], 4	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400618b	            0x7433	                            je 0x40061c0	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400618d	    0x48833d000000	               cmp qword [0x04006195], 0	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4006195	            0x7529	                           jne 0x40061c0	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4006197	    0x660f1f840000	                    nop word [rax + rax]	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x40061a0	    0x8b0500000000	            mov eax, dword [0x040061a6] 	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x40061a6	    0x48c705000000	               mov qword [0x040061b1], 0	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x40061b1	      0xe9c6fdffff	                           jmp 0x4005f7c	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x40061b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x40061c0	        0x837d1005	               cmp dword [rbp + 0x10], 5	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x40061c4	     0xf84de010000	                            je 0x40063a8	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x40061ca	          0x4d85ed	                           test r13, r13	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x40061cd	     0xf8444050000	                            je 0x4006717	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x40061d3	    0x8b0500000000	            mov eax, dword [0x040061d9] 	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40061d9	            0x85c0	                           test eax, eax	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40061db	     0xf848f010000	                            je 0x4006370	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40061e1	    0x48833d000000	               cmp qword [0x040061e9], 0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40061e9	     0xf84a1010000	                            je 0x4006390	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40061ef	        0x4c8b7d18	            mov r15, qword [rbp + 0x18] 	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x40061f3	            0x31c9	                            xor ecx, ecx	       309	ldexp.c	FUNCTION_13
0x40061f5	      0xba01000000	                              mov edx, 1	       309	ldexp.c	FUNCTION_13
0x40061fa	      0xbf00000000	                              mov edi, 0	       309	ldexp.c	FUNCTION_13
0x40061ff	          0x4c89fe	                            mov rsi, r15	       309	ldexp.c	FUNCTION_13
0x4006202	      0xe800000000	                          call 0x4006207	       309	ldexp.c	FUNCTION_13
0x4006207	          0x4885c0	                           test rax, rax	       313	ldexp.c	FUNCTION_13	IF_1
0x400620a	          0x4989c6	                            mov r14, rax	       309	ldexp.c	FUNCTION_13
0x400620d	     0xf84fb050000	                            je 0x400680e	       313	ldexp.c	FUNCTION_13	IF_1
0x4006213	      0x41f6451908	               test byte [r13 + 0x19], 8	       319	ldexp.c	FUNCTION_13	IF_2
0x4006218	            0x7511	                           jne 0x400622b	       319	ldexp.c	FUNCTION_13	IF_2
0x400621a	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       320	ldexp.c	FUNCTION_13	IF_2
0x400621f	          0x83e803	                              sub eax, 3	       320	ldexp.c	FUNCTION_13	IF_2
0x4006222	            0x3c02	                               cmp al, 2	       320	ldexp.c	FUNCTION_13	IF_2
0x4006224	            0x7705	                            ja 0x400622b	       320	ldexp.c	FUNCTION_13	IF_2
0x4006226	      0x41804e2101	                 or byte [r14 + 0x21], 1	       324	ldexp.c	FUNCTION_13	IF_2
0x400622b	    0x833d00000000	               cmp dword [0x04006232], 4	       333	ldexp.c	FUNCTION_13	IF_4
0x4006232	    0x8b0500000000	            mov eax, dword [0x04006238] 	       331	ldexp.c	FUNCTION_13
0x4006238	    0x49c746180000	               mov qword [r14 + 0x18], 0	       332	ldexp.c	FUNCTION_13
0x4006240	        0x41884620	               mov byte [r14 + 0x20], al	       331	ldexp.c	FUNCTION_13
0x4006244	    0x488b05000000	            mov rax, qword [0x0400624b] 	       335	ldexp.c	FUNCTION_13	IF_4
0x400624b	     0xf843f030000	                            je 0x4006590	       333	ldexp.c	FUNCTION_13	IF_4
0x4006251	    0x488b15000000	            mov rdx, qword [0x04006258] 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006258	      0x41c6451803	                mov byte [r13 + 0x18], 3	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400625d	        0x49894528	             mov qword [r13 + 0x28], rax	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006261	        0x49895530	             mov qword [r13 + 0x30], rdx	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006265	          0x8b4504	                mov eax, dword [rbp + 4]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006268	      0x410fb65519	           movzx edx, byte [r13 + 0x19] 	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400626d	            0x85c0	                           test eax, eax	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400626f	           0xf94c0	                                 sete al	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006272	          0xc1e002	                              shl eax, 2	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006275	          0x83e2fb	                     and edx, 0xfffffffb	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006278	             0x9d0	                             or eax, edx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400627a	          0x83c808	                               or eax, 8	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400627d	        0x41884519	               mov byte [r13 + 0x19], al	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006281	          0x8b5528	            mov edx, dword [rbp + 0x28] 	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4006284	            0x85d2	                           test edx, edx	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4006286	     0xf8534030000	                           jne 0x40065c0	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x400628c	    0x488b15000000	            mov rdx, qword [0x04006293] 	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4006293	        0x488d42ff	                      lea rax, [rdx - 1]	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4006297	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x400629b	     0xf87fffeffff	                            ja 0x40061a0	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40062a1	    0x488b3d000000	            mov rdi, qword [0x040062a8] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40062a8	          0x4c89ee	                            mov rsi, r13	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40062ab	        0x488b4708	                mov rax, qword [rdi + 8]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40062af	    0xff90d0020000	                call qword [rax + 0x2d0]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40062b5	      0xe9e6feffff	                           jmp 0x40061a0	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40062ba	    0x660f1f440000	                    nop word [rax + rax]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40062c0	        0x488d6801	                      lea rbp, [rax + 1]	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x40062c4	          0x48d1ed	                              shr rbp, 1	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x40062c7	        0x488d7d0f	                    lea rdi, [rbp + 0xf]	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x40062cb	      0xe800000000	                          call 0x40062d0	      1554	ldexp.c	FUNCTION_44	IF_4	CALL_5
0x40062d0	    0x488b35000000	            mov rsi, qword [0x040062d7] 	      1557	ldexp.c	FUNCTION_44	IF_4
0x40062d7	        0x4c8d4008	                       lea r8, [rax + 8]	      1556	ldexp.c	FUNCTION_44	IF_4
0x40062db	          0x488928	                    mov qword [rax], rbp	      1555	ldexp.c	FUNCTION_44	IF_4
0x40062de	            0x31d2	                            xor edx, edx	      1558	ldexp.c	FUNCTION_44	IF_4
0x40062e0	        0x4883c601	                              add rsi, 1	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40062e4	         0xfb67eff	               movzx edi, byte [rsi - 1]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40062e8	          0x8d4fd0	                   lea ecx, [rdi - 0x30]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40062eb	          0x83f909	                              cmp ecx, 9	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40062ee	            0x7606	                           jbe 0x40062f6	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40062f0	          0x8d4fc9	                   lea ecx, [rdi - 0x37]	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40062f3	          0x83e10f	                            and ecx, 0xf	      1565	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x40062f6	          0xc1e204	                              shl edx, 4	      1566	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40062f9	        0x4883eb01	                              sub rbx, 1	      1568	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40062fd	             0x1ca	                            add edx, ecx	      1567	ldexp.c	FUNCTION_44	IF_4	DO_1
0x40062ff	          0xf6c301	                              test bl, 1	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4006302	            0x75dc	                           jne 0x40062e0	      1569	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4006304	          0x4885db	                           test rbx, rbx	      1575	ldexp.c	FUNCTION_44	IF_4
0x4006307	        0x498d4801	                       lea rcx, [r8 + 1]	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x400630b	          0x418810	                       mov byte [r8], dl	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x400630e	     0xf8439fcffff	                            je 0x4005f4d	      1575	ldexp.c	FUNCTION_44	IF_4
0x4006314	        0x4883c601	                              add rsi, 1	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4006318	         0xfb67eff	               movzx edi, byte [rsi - 1]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x400631c	          0x4989c8	                             mov r8, rcx	      1571	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x400631f	            0x31d2	                            xor edx, edx	      1572	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_6
0x4006321	          0x8d4fd0	                   lea ecx, [rdi - 0x30]	      1563	ldexp.c	FUNCTION_44	IF_4	DO_1
0x4006324	          0x83f909	                              cmp ecx, 9	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x4006327	            0x76cd	                           jbe 0x40062f6	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x4006329	            0xebc5	                           jmp 0x40062f0	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x400632b	       0xf1f440000	                   nop dword [rax + rax]	      1564	ldexp.c	FUNCTION_44	IF_4	DO_1	IF_5
0x4006330	    0x8b1500000000	            mov edx, dword [0x04006336] 	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4006336	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x400633a	    0xc70500000000	               mov dword [0x04006344], 1	       192	ldexp.c	FUNCTION_4
0x4006344	            0x85d2	                           test edx, edx	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4006346	     0xf85dc000000	                           jne 0x4006428	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x400634c	    0x48c705000000	               mov qword [0x04006357], 0	       193	ldexp.c	FUNCTION_4
0x4006357	    0x488905000000	            mov qword [0x0400635e], rax 	       194	ldexp.c	FUNCTION_4
0x400635e	            0x6690	                                     nop	       194	ldexp.c	FUNCTION_4
0x4006360	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4006364	    0x488905000000	            mov qword [0x0400636b], rax 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x400636b	      0xe910fcffff	                           jmp 0x4005f80	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4006370	      0x41807d1800	                cmp byte [r13 + 0x18], 0	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006375	     0xf852bfeffff	                           jne 0x40061a6	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x400637b	    0x48c705000000	               mov qword [0x04006386], 0	      1178	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006386	    0xc70500000000	               mov dword [0x04006390], 1	      1180	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006390	    0x488b05000000	            mov rax, qword [0x04006397] 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4006397	    0x488905000000	            mov qword [0x0400639e], rax 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x400639e	      0xe94cfeffff	                           jmp 0x40061ef	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40063a3	       0xf1f440000	                   nop dword [rax + rax]	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40063a8	    0xc74510060000	               mov dword [rbp + 0x10], 6	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x40063af	      0xe916feffff	                           jmp 0x40061ca	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x40063b4	    0x448b2d000000	           mov r13d, dword [0x040063bb] 	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40063bb	          0x4585ed	                         test r13d, r13d	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40063be	     0xf8459020000	                            je 0x400661d	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40063c4	    0x488b0d000000	            mov rcx, qword [0x040063cb] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x40063cb	    0x488b05000000	            mov rax, qword [0x040063d2] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x40063d2	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x40063d6	            0x760e	                           jbe 0x40063e6	      1615	ldexp.c	FUNCTION_46	IF_1
0x40063d8	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x40063dd	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x40063df	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x40063e2	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x40063e6	    0x488b15000000	            mov rdx, qword [0x040063ed] 	       260	ldexp.c	FUNCTION_10
0x40063ed	    0xc70500000000	               mov dword [0x040063f7], 1	       262	ldexp.c	FUNCTION_10
0x40063f7	    0xc70500000000	               mov dword [0x04006401], 1	       263	ldexp.c	FUNCTION_10
0x4006401	        0x482b4228	             sub rax, qword [rdx + 0x28]	       264	ldexp.c	FUNCTION_10
0x4006405	    0x48c705000000	               mov qword [0x04006410], 0	       265	ldexp.c	FUNCTION_10
0x4006410	    0x488915000000	            mov qword [0x04006417], rdx 	       266	ldexp.c	FUNCTION_10
0x4006417	    0x488905000000	            mov qword [0x0400641e], rax 	       264	ldexp.c	FUNCTION_10
0x400641e	      0xe97afbffff	                           jmp 0x4005f9d	       264	ldexp.c	FUNCTION_10
0x4006423	       0xf1f440000	                   nop dword [rax + rax]	       264	ldexp.c	FUNCTION_10
0x4006428	    0x488905000000	            mov qword [0x0400642f], rax 	       243	ldexp.c	FUNCTION_8
0x400642f	    0x48c705000000	               mov qword [0x0400643a], 0	       245	ldexp.c	FUNCTION_8
0x400643a	      0xe921ffffff	                           jmp 0x4006360	       245	ldexp.c	FUNCTION_8
0x400643f	              0x90	                                     nop	       245	ldexp.c	FUNCTION_8
0x4006440	    0x48833d000000	               cmp qword [0x04006448], 0	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4006448	     0xf8528fbffff	                           jne 0x4005f76	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x400644e	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006452	      0xbf00000000	                              mov edi, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006457	            0x31c0	                            xor eax, eax	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006459	      0xe800000000	                          call 0x400645e	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x400645e	      0xe913fbffff	                           jmp 0x4005f76	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006463	       0xf1f440000	                   nop dword [rax + rax]	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006468	        0x807e0100	                   cmp byte [rsi + 1], 0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x400646c	     0xf85ebfcffff	                           jne 0x400615d	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4006472	          0x83f804	                              cmp eax, 4	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4006475	            0x741e	                            je 0x4006495	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4006477	      0xbe00000000	                              mov esi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x400647c	            0x31ff	                            xor edi, edi	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x400647e	      0xba05000000	                              mov edx, 5	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006483	      0xe800000000	                          call 0x4006488	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006488	          0x4889ee	                            mov rsi, rbp	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x400648b	          0x4889c7	                            mov rdi, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x400648e	            0x31c0	                            xor eax, eax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006490	      0xe800000000	                          call 0x4006495	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006495	    0x448b05000000	            mov r8d, dword [0x0400649c] 	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x400649c	          0x4585c0	                           test r8d, r8d	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x400649f	     0xf844afaffff	                            je 0x4005eef	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40064a5	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x40064a9	    0xc70500000000	               mov dword [0x040064b3], 1	      1057	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40064b3	      0xe8a8b0ffff	                call sym.exp_fold_tree_1	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x40064b8	    0x833d00000000	               cmp dword [0x040064bf], 1	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40064bf	    0xc70500000000	               mov dword [0x040064c9], 0	      1059	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40064c9	     0xf8462030000	                            je 0x4006831	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40064cf	    0x8b3500000000	            mov esi, dword [0x040064d5] 	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40064d5	            0x85f6	                           test esi, esi	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40064d7	     0xf8593020000	                           jne 0x4006770	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40064dd	    0x833d00000000	               cmp dword [0x040064e4], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40064e4	     0xf8460faffff	                            je 0x4005f4a	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40064ea	      0xba05000000	                              mov edx, 5	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40064ef	      0xbe00000000	                              mov esi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40064f4	            0x31ff	                            xor edi, edi	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40064f6	      0xe800000000	                          call 0x40064fb	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40064fb	          0x4889ee	                            mov rsi, rbp	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40064fe	          0x4889c7	                            mov rdi, rax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4006501	            0x31c0	                            xor eax, eax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4006503	      0xe800000000	                          call 0x4006508	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4006508	    0x8b0500000000	            mov eax, dword [0x0400650e] 	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400650e	      0xe969faffff	                           jmp 0x4005f7c	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4006513	       0xf1f440000	                   nop dword [rax + rax]	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4006518	    0x488b3d000000	            mov rdi, qword [0x0400651f] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x400651f	            0x31c9	                            xor ecx, ecx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006521	            0x31d2	                            xor edx, edx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006523	    0x41b801000000	                              mov r8d, 1	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006529	      0xe800000000	                          call 0x400652e	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x400652e	          0x4885c0	                           test rax, rax	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006531	          0x4989c5	                            mov r13, rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006534	     0xf843cfaffff	                            je 0x4005f76	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400653a	        0x80781802	                cmp byte [rax + 0x18], 2	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400653e	            0x760a	                           jbe 0x400654a	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006540	        0xf6401904	               test byte [rax + 0x19], 4	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006544	     0xf842cfaffff	                            je 0x4005f76	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400654a	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400654e	      0xe916fcffff	                           jmp 0x4006169	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006553	       0xf1f440000	                   nop dword [rax + rax]	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006558	          0x83fa2d	                           cmp edx, 0x2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400655b	     0xf844b010000	                            je 0x40066ac	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006561	          0x83fa7e	                           cmp edx, 0x7e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006564	     0xf842f010000	                            je 0x4006699	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400656a	          0x83fa21	                           cmp edx, 0x21	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400656d	     0xf844c010000	                            je 0x40066bf	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006573	      0xbe9f010000	                          mov esi, 0x19f	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4006578	      0xbf00000000	                              mov edi, 0	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x400657d	      0xe800000000	                          call 0x4006582	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4006582	    0x8b0500000000	            mov eax, dword [0x04006588] 	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4006588	      0xe9eff9ffff	                           jmp 0x4005f7c	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x400658d	           0xf1f00	                         nop dword [rax]	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4006590	    0x8b0d00000000	            mov ecx, dword [0x04006596] 	       334	ldexp.c	FUNCTION_13	IF_4
0x4006596	            0x85c9	                           test ecx, ecx	       334	ldexp.c	FUNCTION_13	IF_4
0x4006598	     0xf84b3fcffff	                            je 0x4006251	       334	ldexp.c	FUNCTION_13	IF_4
0x400659e	    0x483d00000000	                              cmp rax, 0	       335	ldexp.c	FUNCTION_13	IF_4
0x40065a4	     0xf85a7fcffff	                           jne 0x4006251	       335	ldexp.c	FUNCTION_13	IF_4
0x40065aa	      0xe800000000	                          call 0x40065af	       336	ldexp.c	FUNCTION_13	CALL_4
0x40065af	        0x49894618	             mov qword [r14 + 0x18], rax	       336	ldexp.c	FUNCTION_13	CALL_4
0x40065b3	    0x488b05000000	            mov rax, qword [0x040065ba] 	       336	ldexp.c	FUNCTION_13	CALL_4
0x40065ba	      0xe992fcffff	                           jmp 0x4006251	       336	ldexp.c	FUNCTION_13	CALL_4
0x40065bf	              0x90	                                     nop	       336	ldexp.c	FUNCTION_13	CALL_4
0x40065c0	    0x488b3d000000	            mov rdi, qword [0x040065c7] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40065c7	          0x4c89ea	                            mov rdx, r13	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40065ca	      0xbe00000000	                              mov esi, 0	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40065cf	        0x488b4708	                mov rax, qword [rdi + 8]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40065d3	    0xff9028030000	                call qword [rax + 0x328]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40065d9	      0xe9aefcffff	                           jmp 0x400628c	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40065de	    0x81fa26010000	                          cmp edx, 0x126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40065e4	            0x758d	                           jne 0x4006573	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40065e6	    0x448b15000000	           mov r10d, dword [0x040065ed] 	       343	ldexp.c	FUNCTION_14	IF_1
0x40065ed	          0x4585d2	                         test r10d, r10d	       343	ldexp.c	FUNCTION_14	IF_1
0x40065f0	            0x742b	                            je 0x400661d	       343	ldexp.c	FUNCTION_14	IF_1
0x40065f2	    0x48813d000000	               cmp qword [0x040065fd], 0	       344	ldexp.c	FUNCTION_14	IF_1
0x40065fd	            0x751e	                           jne 0x400661d	       344	ldexp.c	FUNCTION_14	IF_1
0x40065ff	    0x8b0500000000	            mov eax, dword [0x04006605] 	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4006605	          0x8d50ff	                      lea edx, [rax - 1]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4006608	          0x83fa01	                              cmp edx, 1	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400660b	     0xf861c030000	                           jbe 0x400692d	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4006611	          0x83e804	                              sub eax, 4	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4006614	          0x83f802	                              cmp eax, 2	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4006617	     0xf8663f9ffff	                           jbe 0x4005f80	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400661d	    0xc70500000000	               mov dword [0x04006627], 0	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x4006627	      0xe9eff8ffff	                           jmp 0x4005f1b	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x400662c	    0x448b1d000000	           mov r11d, dword [0x04006633] 	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4006633	          0x4585db	                         test r11d, r11d	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4006636	            0x74e5	                            je 0x400661d	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4006638	    0x488b05000000	            mov rax, qword [0x0400663f] 	       183	ldexp.c	FUNCTION_3	IF_1
0x400663f	    0x488b0d000000	            mov rcx, qword [0x04006646] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4006646	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x4006649	            0x740b	                            je 0x4006656	       183	ldexp.c	FUNCTION_3	IF_1
0x400664b	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x400664f	    0x48030d000000	             add rcx, qword [0x04006656]	       184	ldexp.c	FUNCTION_3	IF_1
0x4006656	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x400665a	    0x48c705000000	               mov qword [0x04006665], 0	       185	ldexp.c	FUNCTION_3
0x4006665	    0xc70500000000	               mov dword [0x0400666f], 0	       186	ldexp.c	FUNCTION_3
0x400666f	    0x488b05000000	            mov rax, qword [0x04006676] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4006676	            0x760e	                           jbe 0x4006686	      1615	ldexp.c	FUNCTION_46	IF_1
0x4006678	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x400667d	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x400667f	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4006682	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4006686	    0x488905000000	            mov qword [0x0400668d], rax 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x400668d	    0x488b3d000000	            mov rdi, qword [0x04006694] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4006694	      0xe9eef8ffff	                           jmp 0x4005f87	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4006699	    0x48f715000000	                  not qword [0x040066a0]	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066a0	    0x488b3d000000	            mov rdi, qword [0x040066a7] 	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066a7	      0xe9dbf8ffff	                           jmp 0x4005f87	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066ac	    0x48f71d000000	                  neg qword [0x040066b3]	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066b3	    0x488b3d000000	            mov rdi, qword [0x040066ba] 	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066ba	      0xe9c8f8ffff	                           jmp 0x4005f87	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066bf	            0x31c0	                            xor eax, eax	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066c1	    0x48833d000000	               cmp qword [0x040066c9], 0	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066c9	    0x488b3d000000	            mov rdi, qword [0x040066d0] 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066d0	           0xf94c0	                                 sete al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066d3	    0x488905000000	            mov qword [0x040066da], rax 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066da	      0xe9a8f8ffff	                           jmp 0x4005f87	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40066df	    0x488b05000000	            mov rax, qword [0x040066e6] 	       183	ldexp.c	FUNCTION_3	IF_1
0x40066e6	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x40066e9	            0x740b	                            je 0x40066f6	       183	ldexp.c	FUNCTION_3	IF_1
0x40066eb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x40066ef	    0x480105000000	            add qword [0x040066f6], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x40066f6	    0x48c705000000	               mov qword [0x04006701], 0	       185	ldexp.c	FUNCTION_3
0x4006701	    0xc70500000000	               mov dword [0x0400670b], 0	       186	ldexp.c	FUNCTION_3
0x400670b	    0x488b3d000000	            mov rdi, qword [0x04006712] 	       186	ldexp.c	FUNCTION_3
0x4006712	      0xe970f8ffff	                           jmp 0x4005f87	       186	ldexp.c	FUNCTION_3
0x4006717	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400671b	    0x488b3d000000	            mov rdi, qword [0x04006722] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4006722	            0x31c9	                            xor ecx, ecx	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4006724	    0x41b801000000	                              mov r8d, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400672a	      0xba01000000	                              mov edx, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400672f	      0xe800000000	                          call 0x4006734	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4006734	          0x4885c0	                           test rax, rax	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x4006737	          0x4989c5	                            mov r13, rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400673a	     0xf8593faffff	                           jne 0x40061d3	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x4006740	        0x4c8b7518	            mov r14, qword [rbp + 0x18] 	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4006744	            0x31ff	                            xor edi, edi	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4006746	      0xba05000000	                              mov edx, 5	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400674b	      0xbe00000000	                              mov esi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4006750	      0xe800000000	                          call 0x4006755	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4006755	          0x4c89f6	                            mov rsi, r14	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4006758	          0x4889c7	                            mov rdi, rax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400675b	            0x31c0	                            xor eax, eax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400675d	      0xe800000000	                          call 0x4006762	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4006762	      0xe96cfaffff	                           jmp 0x40061d3	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4006767	    0x660f1f840000	                    nop word [rax + rax]	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4006770	    0x488b05000000	            mov rax, qword [0x04006777] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4006777	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400677d	     0xf8464010000	                            je 0x40068e7	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4006783	    0x488b15000000	            mov rdx, qword [0x0400678a] 	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x400678a	          0x4885d2	                           test rdx, rdx	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x400678d	     0xf848b010000	                            je 0x400691e	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4006793	    0x833d00000000	               cmp dword [0x0400679a], 2	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x400679a	            0x760c	                           jbe 0x40067a8	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x400679c	    0x483d00000000	                              cmp rax, 0	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40067a2	     0xf85d8f7ffff	                           jne 0x4005f80	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40067a8	    0x488b0d000000	            mov rcx, qword [0x040067af] 	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40067af	    0x4c8b2d000000	            mov r13, qword [0x040067b6] 	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40067b6	          0x4885c9	                           test rcx, rcx	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40067b9	     0xf843a010000	                            je 0x40068f9	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40067bf	        0x4c036928	             add r13, qword [rcx + 0x28]	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40067c3	    0x483d00000000	                              cmp rax, 0	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40067c9	    0x4c8b35000000	            mov r14, qword [0x040067d0] 	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40067d0	     0xf84fb000000	                            je 0x40068d1	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40067d6	          0x4d39ee	                            cmp r14, r13	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40067d9	     0xf86f2000000	                           jbe 0x40068d1	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40067df	      0xba05000000	                              mov edx, 5	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067e4	      0xbe00000000	                              mov esi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067e9	            0x31ff	                            xor edi, edi	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067eb	      0xe800000000	                          call 0x40067f0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067f0	          0x4c89e9	                            mov rcx, r13	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067f3	          0x4889c7	                            mov rdi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067f6	          0x4c89f2	                            mov rdx, r14	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067f9	            0x31c0	                            xor eax, eax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067fb	          0x4889ee	                            mov rsi, rbp	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40067fe	      0xe800000000	                          call 0x4006803	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4006803	    0x8b0500000000	            mov eax, dword [0x04006809] 	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4006809	      0xe96ef7ffff	                           jmp 0x4005f7c	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400680e	            0x31ff	                            xor edi, edi	       314	ldexp.c	FUNCTION_13	CALL_3
0x4006810	      0xba05000000	                              mov edx, 5	       314	ldexp.c	FUNCTION_13	CALL_3
0x4006815	      0xbe00000000	                              mov esi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x400681a	      0xe800000000	                          call 0x400681f	       314	ldexp.c	FUNCTION_13	CALL_3
0x400681f	          0x4c89fe	                            mov rsi, r15	       314	ldexp.c	FUNCTION_13	CALL_3
0x4006822	          0x4889c7	                            mov rdi, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4006825	            0x31c0	                            xor eax, eax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4006827	      0xe800000000	                          call 0x400682c	       314	ldexp.c	FUNCTION_13	CALL_3
0x400682c	      0xe9e2f9ffff	                           jmp 0x4006213	       314	ldexp.c	FUNCTION_13	CALL_3
0x4006831	    0x488b05000000	            mov rax, qword [0x04006838] 	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4006838	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400683e	     0xf848bfcffff	                            je 0x40064cf	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4006844	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400684a	     0xf847ffcffff	                            je 0x40064cf	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4006850	    0x8b3d00000000	            mov edi, dword [0x04006856] 	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4006856	            0x85ff	                           test edi, edi	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4006858	            0x746b	                            je 0x40068c5	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400685a	    0x48833d000000	               cmp qword [0x04006862], 0	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4006862	            0x7561	                           jne 0x40068c5	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4006864	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x4006868	          0x8b7110	            mov esi, dword [rcx + 0x10] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x400686b	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x400686e	     0xf848e000000	                            je 0x4006902	       931	ldexp.c	FUNCTION_23
0x4006874	            0x8b39	                    mov edi, dword [rcx]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4006876	        0x488d5118	                   lea rdx, [rcx + 0x18]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x400687a	      0xe800000000	                          call 0x400687f	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x400687f	            0x85c0	                           test eax, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4006881	     0xf8548fcffff	                           jne 0x40064cf	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4006887	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x400688b	        0x83781000	               cmp dword [rax + 0x10], 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x400688f	            0x7509	                           jne 0x400689a	       977	ldexp.c	FUNCTION_26	CALL_2
0x4006891	          0x83382b	                   cmp dword [rax], 0x2b	       975	ldexp.c	FUNCTION_26
0x4006894	     0xf84b7000000	                            je 0x4006951	       975	ldexp.c	FUNCTION_26
0x400689a	    0x813817010000	                  cmp dword [rax], 0x117	       987	ldexp.c	FUNCTION_27	IF_1
0x40068a0	     0xf8559010000	                           jne 0x40069ff	       987	ldexp.c	FUNCTION_27	IF_1
0x40068a6	        0x83781002	               cmp dword [rax + 0x10], 2	       987	ldexp.c	FUNCTION_27	IF_1
0x40068aa	     0xf854f010000	                           jne 0x40069ff	       987	ldexp.c	FUNCTION_27	IF_1
0x40068b0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       989	ldexp.c	FUNCTION_27	IF_1
0x40068b4	    0x488b05000000	            mov rax, qword [0x040068bb] 	       989	ldexp.c	FUNCTION_27	IF_1
0x40068bb	        0x83791001	               cmp dword [rcx + 0x10], 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40068bf	     0xf84e5000000	                            je 0x40069aa	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40068c5	    0x814820000020	         or dword [rax + 0x20], 0x200000	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40068cc	      0xe9fefbffff	                           jmp 0x40064cf	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40068d1	    0x4c892d000000	            mov qword [0x040068d8], r13 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40068d8	    0x488b3d000000	            mov rdi, qword [0x040068df] 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40068df	          0x4c892a	                    mov qword [rdx], r13	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40068e2	      0xe9a0f6ffff	                           jmp 0x4005f87	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40068e7	    0x833d00000000	               cmp dword [0x040068ee], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40068ee	     0xf848cf6ffff	                            je 0x4005f80	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40068f4	      0xe9f1fbffff	                           jmp 0x40064ea	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40068f9	        0x4c036828	             add r13, qword [rax + 0x28]	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x40068fd	      0xe9c1feffff	                           jmp 0x40067c3	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x4006902	      0x4883791800	               cmp qword [rcx + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4006907	     0xf8567ffffff	                           jne 0x4006874	       931	ldexp.c	FUNCTION_23
0x400690d	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4006913	     0xf856afeffff	                           jne 0x4006783	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4006919	      0xe962f6ffff	                           jmp 0x4005f80	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400691e	      0xba05000000	                              mov edx, 5	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4006923	      0xbe00000000	                              mov esi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4006928	      0xe9c7fbffff	                           jmp 0x40064f4	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400692d	    0x488b05000000	            mov rax, qword [0x04006934] 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4006934	    0xc70500000000	               mov dword [0x0400693e], 3	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400693e	    0x488b3d000000	            mov rdi, qword [0x04006945] 	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4006945	    0x488905000000	            mov qword [0x0400694c], rax 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400694c	      0xe936f6ffff	                           jmp 0x4005f87	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4006951	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       976	ldexp.c	FUNCTION_26	CALL_1
0x4006955	    0x813a03010000	                  cmp dword [rdx], 0x103	       920	ldexp.c	FUNCTION_22
0x400695b	     0xf8539ffffff	                           jne 0x400689a	       920	ldexp.c	FUNCTION_22
0x4006961	        0x837a1003	               cmp dword [rdx + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x4006965	     0xf852fffffff	                           jne 0x400689a	       920	ldexp.c	FUNCTION_22
0x400696b	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       921	ldexp.c	FUNCTION_22
0x400696f	          0x803a2e	                    cmp byte [rdx], 0x2e	       921	ldexp.c	FUNCTION_22
0x4006972	     0xf8522ffffff	                           jne 0x400689a	       921	ldexp.c	FUNCTION_22
0x4006978	        0x807a0100	                   cmp byte [rdx + 1], 0	       922	ldexp.c	FUNCTION_22
0x400697c	     0xf8518ffffff	                           jne 0x400689a	       922	ldexp.c	FUNCTION_22
0x4006982	        0x488b4020	            mov rax, qword [rax + 0x20] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4006986	          0x8b7010	            mov esi, dword [rax + 0x10] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4006989	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x400698c	            0x747d	                            je 0x4006a0b	       931	ldexp.c	FUNCTION_23
0x400698e	            0x8b38	                    mov edi, dword [rax]	       978	ldexp.c	FUNCTION_26	CALL_3
0x4006990	        0x488d5018	                   lea rdx, [rax + 0x18]	       978	ldexp.c	FUNCTION_26	CALL_3
0x4006994	      0xe800000000	                          call 0x4006999	       978	ldexp.c	FUNCTION_26	CALL_3
0x4006999	            0x85c0	                           test eax, eax	       978	ldexp.c	FUNCTION_26	CALL_3
0x400699b	     0xf852efbffff	                           jne 0x40064cf	       978	ldexp.c	FUNCTION_26	CALL_3
0x40069a1	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       978	ldexp.c	FUNCTION_26	CALL_3
0x40069a5	      0xe9f0feffff	                           jmp 0x400689a	       978	ldexp.c	FUNCTION_26	CALL_3
0x40069aa	        0x488b5118	            mov rdx, qword [rcx + 0x18] 	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x40069ae	        0x837a1000	               cmp dword [rdx + 0x10], 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x40069b2	     0xf850dffffff	                           jne 0x40068c5	       965	ldexp.c	FUNCTION_25	CALL_2
0x40069b8	    0x813a10010000	                  cmp dword [rdx], 0x110	       963	ldexp.c	FUNCTION_25
0x40069be	     0xf8501ffffff	                           jne 0x40068c5	       963	ldexp.c	FUNCTION_25
0x40069c4	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       964	ldexp.c	FUNCTION_25	CALL_1
0x40069c8	    0x813e03010000	                  cmp dword [rsi], 0x103	       920	ldexp.c	FUNCTION_22
0x40069ce	     0xf85f1feffff	                           jne 0x40068c5	       920	ldexp.c	FUNCTION_22
0x40069d4	        0x837e1003	               cmp dword [rsi + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x40069d8	     0xf85e7feffff	                           jne 0x40068c5	       920	ldexp.c	FUNCTION_22
0x40069de	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       921	ldexp.c	FUNCTION_22
0x40069e2	          0x803e2e	                    cmp byte [rsi], 0x2e	       921	ldexp.c	FUNCTION_22
0x40069e5	     0xf85dafeffff	                           jne 0x40068c5	       921	ldexp.c	FUNCTION_22
0x40069eb	        0x807e0100	                   cmp byte [rsi + 1], 0	       922	ldexp.c	FUNCTION_22
0x40069ef	     0xf85d0feffff	                           jne 0x40068c5	       922	ldexp.c	FUNCTION_22
0x40069f5	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       965	ldexp.c	FUNCTION_25	CALL_2
0x40069f9	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x40069fd	            0x741c	                            je 0x4006a1b	       931	ldexp.c	FUNCTION_23
0x40069ff	    0x488b05000000	            mov rax, qword [0x04006a06] 	       931	ldexp.c	FUNCTION_23
0x4006a06	      0xe9bafeffff	                           jmp 0x40068c5	       931	ldexp.c	FUNCTION_23
0x4006a0b	      0x4883781800	               cmp qword [rax + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4006a10	     0xf84b9faffff	                            je 0x40064cf	       931	ldexp.c	FUNCTION_23
0x4006a16	      0xe973ffffff	                           jmp 0x400698e	       931	ldexp.c	FUNCTION_23
0x4006a1b	      0x4883781800	               cmp qword [rax + 0x18], 0	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4006a20	            0x75dd	                           jne 0x40069ff	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4006a22	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4006a26	    0x488b05000000	            mov rax, qword [0x04006a2d] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4006a2d	        0x837a1007	               cmp dword [rdx + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4006a31	     0xf858efeffff	                           jne 0x40068c5	       931	ldexp.c	FUNCTION_23
0x4006a37	      0x48837a1801	               cmp qword [rdx + 0x18], 1	       931	ldexp.c	FUNCTION_23
0x4006a3c	     0xf8583feffff	                           jne 0x40068c5	       931	ldexp.c	FUNCTION_23
0x4006a42	      0xe988faffff	                           jmp 0x40064cf	       931	ldexp.c	FUNCTION_23
fold_name	DO,0:functions,0:CALL,53:WHILE,0:SWITCH,1:FOR,0:ELSE,18:IF,35	423
0x4001ff0	            0x4154	                                push r12	       683	ldexp.c	FUNCTION_21
0x4001ff2	    0x48c705000000	               mov qword [0x04001ffd], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4001ffd	              0x55	                                push rbp	       683	ldexp.c	FUNCTION_21
0x4001ffe	    0x48c705000000	               mov qword [0x04002009], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4002009	              0x53	                                push rbx	       683	ldexp.c	FUNCTION_21
0x400200a	    0x48c705000000	               mov qword [0x04002015], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4002015	          0x4889fb	                            mov rbx, rdi	       683	ldexp.c	FUNCTION_21
0x4002018	    0x48c705000000	               mov qword [0x04002023], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4002023	            0x8b07	                    mov eax, dword [rdi]	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002025	      0x3d42010000	                          cmp eax, 0x142	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400202a	            0x7e34	                           jle 0x4002060	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400202c	      0x3d4e010000	                          cmp eax, 0x14e	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002031	     0xf8401020000	                            je 0x4002238	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002037	            0x7f67	                            jg 0x40020a0	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002039	      0x3d43010000	                          cmp eax, 0x143	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400203e	     0xf8434010000	                            je 0x4002178	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002044	      0x3d44010000	                          cmp eax, 0x144	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002049	            0x7541	                           jne 0x400208c	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400204b	    0x8b3d00000000	            mov edi, dword [0x04002051] 	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x4002051	            0x85ff	                           test edi, edi	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x4002053	     0xf8587040000	                           jne 0x40024e0	       808	ldexp.c	FUNCTION_21	SWITCH_1	IF_19
0x4002059	              0x5b	                                 pop rbx	       912	ldexp.c	FUNCTION_21
0x400205a	              0x5d	                                 pop rbp	       912	ldexp.c	FUNCTION_21
0x400205b	            0x415c	                                 pop r12	       912	ldexp.c	FUNCTION_21
0x400205d	              0xc3	                                     ret	       912	ldexp.c	FUNCTION_21
0x400205e	            0x6690	                                     nop	       912	ldexp.c	FUNCTION_21
0x4002060	      0x3d41010000	                          cmp eax, 0x141	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002065	     0xf8d75020000	                           jge 0x40022e0	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400206b	      0x3d2b010000	                          cmp eax, 0x12b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002070	     0xf842a020000	                            je 0x40022a0	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002076	      0x3d3b010000	                          cmp eax, 0x13b	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400207b	     0xf847f000000	                            je 0x4002100	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002081	      0x3d03010000	                          cmp eax, 0x103	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x4002086	     0xf84a4020000	                            je 0x4002330	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x400208c	              0x5b	                                 pop rbx	       912	ldexp.c	FUNCTION_21
0x400208d	              0x5d	                                 pop rbp	       912	ldexp.c	FUNCTION_21
0x400208e	            0x415c	                                 pop r12	       912	ldexp.c	FUNCTION_21
0x4002090	      0xbe8d030000	                          mov esi, 0x38d	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x4002095	      0xbf00000000	                              mov edi, 0	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x400209a	      0xe900000000	                           jmp 0x400209f	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x400209f	              0x90	                                     nop	       909	ldexp.c	FUNCTION_21	SWITCH_1	CALL_53
0x40020a0	      0x3d50010000	                          cmp eax, 0x150	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40020a5	     0xf8435010000	                            je 0x40021e0	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40020ab	      0x3d82010000	                          cmp eax, 0x182	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40020b0	            0x75da	                           jne 0x400208c	       689	ldexp.c	FUNCTION_21	SWITCH_1
0x40020b2	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40020b6	      0xb90c000000	                            mov ecx, 0xc	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40020bb	      0xbf00000000	                              mov edi, 0	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40020c0	          0x4889ee	                            mov rsi, rbp	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40020c3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40020c5	     0xf84f5030000	                            je 0x40024c0	       899	ldexp.c	FUNCTION_21	SWITCH_1	IF_34	CALL_47
0x40020cb	      0xbf00000000	                              mov edi, 0	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40020d0	      0xb90f000000	                            mov ecx, 0xf	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40020d5	          0x4889ee	                            mov rsi, rbp	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40020d8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40020da	     0xf8560030000	                           jne 0x4002440	       901	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_17	IF_35	CALL_49
0x40020e0	    0x488b05000000	            mov rax, qword [0x040020e7] 	       243	ldexp.c	FUNCTION_8
0x40020e7	    0xc70500000000	               mov dword [0x040020f1], 1	       242	ldexp.c	FUNCTION_8
0x40020f1	    0x488905000000	            mov qword [0x040020f8], rax 	       243	ldexp.c	FUNCTION_8
0x40020f8	      0xe95cffffff	                           jmp 0x4002059	       243	ldexp.c	FUNCTION_8
0x40020fd	           0xf1f00	                         nop dword [rax]	       243	ldexp.c	FUNCTION_8
0x4002100	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4002104	    0x488b3d000000	            mov rdi, qword [0x0400210b] 	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x400210b	          0x4531c0	                            xor r8d, r8d	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x400210e	            0x31c9	                            xor ecx, ecx	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4002110	    0x41b901000000	                              mov r9d, 1	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4002116	      0xbe00000000	                              mov esi, 0	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x400211b	      0xe800000000	                          call 0x4002120	       704	ldexp.c	FUNCTION_21	SWITCH_1	CALL_4
0x4002120	          0x4885c0	                           test rax, rax	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4002123	     0xf8427050000	                            je 0x4002650	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4002129	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x400212d	          0x8d51fd	                      lea edx, [rcx - 3]	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4002130	            0x31c9	                            xor ecx, ecx	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4002132	          0x80fa02	                               cmp dl, 2	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4002135	            0x770f	                            ja 0x4002146	       709	ldexp.c	FUNCTION_21	SWITCH_1
0x4002137	        0xf6401908	               test byte [rax + 0x19], 8	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x400213b	     0xf85bf020000	                           jne 0x4002400	       712	ldexp.c	FUNCTION_21	SWITCH_1
0x4002141	      0xb901000000	                              mov ecx, 1	       694	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x4002146	              0x5b	                                 pop rbx	       912	ldexp.c	FUNCTION_21
0x4002147	    0xc70500000000	               mov dword [0x04002151], 1	       242	ldexp.c	FUNCTION_8
0x4002151	    0x48890d000000	            mov qword [0x04002158], rcx 	       243	ldexp.c	FUNCTION_8
0x4002158	              0x5d	                                 pop rbp	       912	ldexp.c	FUNCTION_21
0x4002159	    0x48c705000000	               mov qword [0x04002164], 0	       244	ldexp.c	FUNCTION_8
0x4002164	    0x48c705000000	               mov qword [0x0400216f], 0	       245	ldexp.c	FUNCTION_8
0x400216f	            0x415c	                                 pop r12	       912	ldexp.c	FUNCTION_21
0x4002171	              0xc3	                                     ret	       912	ldexp.c	FUNCTION_21
0x4002172	    0x660f1f440000	                    nop word [rax + rax]	       912	ldexp.c	FUNCTION_21
0x4002178	    0x448b05000000	            mov r8d, dword [0x0400217f] 	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x400217f	          0x4585c0	                           test r8d, r8d	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x4002182	     0xf84d1feffff	                            je 0x4002059	       790	ldexp.c	FUNCTION_21	SWITCH_1	IF_15
0x4002188	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x400218c	            0x31d2	                            xor edx, edx	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x400218e	            0x31f6	                            xor esi, esi	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x4002190	      0xe800000000	                          call 0x4002195	       794	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	CALL_22
0x4002195	          0x4885c0	                           test rax, rax	       795	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16
0x4002198	     0xf8492040000	                            je 0x4002630	       795	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	IF_16
0x400219e	    0xf68090000000	               test byte [rax + 0x90], 1	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x40021a5	     0xf84aefeffff	                            je 0x4002059	       802	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x40021ab	        0x488b4038	            mov rax, qword [rax + 0x38] 	       803	ldexp.c	FUNCTION_21	SWITCH_1	IF_15	ELSE_9	IF_18
0x40021af	    0x48c705000000	               mov qword [0x040021ba], 0	       252	ldexp.c	FUNCTION_9
0x40021ba	    0xc70500000000	               mov dword [0x040021c4], 1	       251	ldexp.c	FUNCTION_9
0x40021c4	    0x48c705000000	               mov qword [0x040021cf], 0	       253	ldexp.c	FUNCTION_9
0x40021cf	    0x488905000000	            mov qword [0x040021d6], rax 	       254	ldexp.c	FUNCTION_9
0x40021d6	      0xe97efeffff	                           jmp 0x4002059	       254	ldexp.c	FUNCTION_9
0x40021db	       0xf1f440000	                   nop dword [rax + rax]	       254	ldexp.c	FUNCTION_9
0x40021e0	    0x8b1500000000	            mov edx, dword [0x040021e6] 	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x40021e6	            0x85d2	                           test edx, edx	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x40021e8	     0xf846bfeffff	                            je 0x4002059	       868	ldexp.c	FUNCTION_21	SWITCH_1	IF_30
0x40021ee	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x40021f2	            0x31f6	                            xor esi, esi	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x40021f4	      0xe800000000	                          call 0x40021f9	       872	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_39
0x40021f9	          0x4885c0	                           test rax, rax	       873	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	IF_31
0x40021fc	     0xf841e050000	                            je 0x4002720	       873	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	IF_31
0x4002202	        0x488b4028	            mov rax, qword [rax + 0x28] 	       874	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	CALL_40
0x4002206	              0x5b	                                 pop rbx	       912	ldexp.c	FUNCTION_21
0x4002207	    0xc70500000000	               mov dword [0x04002211], 1	       242	ldexp.c	FUNCTION_8
0x4002211	    0x488905000000	            mov qword [0x04002218], rax 	       243	ldexp.c	FUNCTION_8
0x4002218	              0x5d	                                 pop rbp	       912	ldexp.c	FUNCTION_21
0x4002219	    0x48c705000000	               mov qword [0x04002224], 0	       244	ldexp.c	FUNCTION_8
0x4002224	    0x48c705000000	               mov qword [0x0400222f], 0	       245	ldexp.c	FUNCTION_8
0x400222f	            0x415c	                                 pop r12	       912	ldexp.c	FUNCTION_21
0x4002231	              0xc3	                                     ret	       912	ldexp.c	FUNCTION_21
0x4002232	    0x660f1f440000	                    nop word [rax + rax]	       912	ldexp.c	FUNCTION_21
0x4002238	    0x8b0500000000	            mov eax, dword [0x0400223e] 	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x400223e	            0x85c0	                           test eax, eax	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4002240	     0xf8413feffff	                            je 0x4002059	       884	ldexp.c	FUNCTION_21	SWITCH_1	IF_32
0x4002246	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x400224a	            0x31f6	                            xor esi, esi	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x400224c	      0xe800000000	                          call 0x4002251	       888	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_43
0x4002251	          0x4885c0	                           test rax, rax	       889	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	IF_33
0x4002254	     0xf84c6040000	                            je 0x4002720	       889	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	IF_33
0x400225a	    0x488b15000000	            mov rdx, qword [0x04002261] 	       260	ldexp.c	FUNCTION_10
0x4002261	        0x488b4020	            mov rax, qword [rax + 0x20] 	       890	ldexp.c	FUNCTION_21	SWITCH_1	IF_32	CALL_44
0x4002265	    0xc70500000000	               mov dword [0x0400226f], 1	       262	ldexp.c	FUNCTION_10
0x400226f	    0xc70500000000	               mov dword [0x04002279], 1	       263	ldexp.c	FUNCTION_10
0x4002279	        0x482b4228	             sub rax, qword [rdx + 0x28]	       264	ldexp.c	FUNCTION_10
0x400227d	    0x48c705000000	               mov qword [0x04002288], 0	       265	ldexp.c	FUNCTION_10
0x4002288	    0x488915000000	            mov qword [0x0400228f], rdx 	       266	ldexp.c	FUNCTION_10
0x400228f	    0x488905000000	            mov qword [0x04002296], rax 	       264	ldexp.c	FUNCTION_10
0x4002296	      0xe9befdffff	                           jmp 0x4002059	       264	ldexp.c	FUNCTION_10
0x400229b	       0xf1f440000	                   nop dword [rax + rax]	       264	ldexp.c	FUNCTION_10
0x40022a0	    0x8b1500000000	            mov edx, dword [0x040022a6] 	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x40022a6	            0x85d2	                           test edx, edx	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x40022a8	     0xf84abfdffff	                            je 0x4002059	       692	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x40022ae	            0x31c0	                            xor eax, eax	       694	ldexp.c	FUNCTION_21	SWITCH_1	IF_1
0x40022b0	          0x83fa01	                              cmp edx, 1	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x40022b3	     0xf844dffffff	                            je 0x4002206	       697	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	IF_2
0x40022b9	    0x488b3d000000	            mov rdi, qword [0x040022c0] 	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40022c0	      0xbe00000000	                              mov esi, 0	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40022c5	        0x488b4708	                mov rax, qword [rdi + 8]	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40022c9	    0xff90a0020000	                call qword [rax + 0x2a0]	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40022cf	            0x4898	                                    cdqe	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40022d1	      0xe930ffffff	                           jmp 0x4002206	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40022d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       698	ldexp.c	FUNCTION_21	SWITCH_1	IF_1	CALL_2
0x40022e0	    0x8b0d00000000	            mov ecx, dword [0x040022e6] 	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x40022e6	            0x85c9	                           test ecx, ecx	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x40022e8	     0xf846bfdffff	                            je 0x4002059	       836	ldexp.c	FUNCTION_21	SWITCH_1	IF_25
0x40022ee	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x40022f2	            0x31d2	                            xor edx, edx	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x40022f4	            0x31f6	                            xor esi, esi	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x40022f6	      0xe800000000	                          call 0x40022fb	       840	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	CALL_32
0x40022fb	          0x4885c0	                           test rax, rax	       841	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26
0x40022fe	     0xf8453030000	                            je 0x4002657	       841	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26
0x4002304	        0x488b4038	            mov rax, qword [rax + 0x38] 	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x4002308	          0x4885c0	                           test rax, rax	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x400230b	     0xf8474030000	                            je 0x4002685	       849	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28
0x4002311	    0x813b41010000	                  cmp dword [rbx], 0x141	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4002317	     0xf844a040000	                            je 0x4002767	       853	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x400231d	          0x8b4870	            mov ecx, dword [rax + 0x70] 	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4002320	      0xb801000000	                              mov eax, 1	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4002325	          0x48d3e0	                             shl rax, cl	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4002328	      0xe9d9feffff	                           jmp 0x4002206	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x400232d	           0xf1f00	                         nop dword [rax]	       857	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	ELSE_13
0x4002330	    0x488b3d000000	            mov rdi, qword [0x04002337] 	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x4002337	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x400233b	          0x4885ff	                           test rdi, rdi	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x400233e	            0x7410	                            je 0x4002350	       719	ldexp.c	FUNCTION_21	SWITCH_1	IF_3
0x4002340	          0x4889ee	                            mov rsi, rbp	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4002343	      0xe800000000	                          call 0x4002348	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4002348	            0x85c0	                           test eax, eax	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x400234a	     0xf8448020000	                            je 0x4002598	       720	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_7
0x4002350	        0x807d002e	                    cmp byte [rbp], 0x2e	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4002354	     0xf840e010000	                            je 0x4002468	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x400235a	    0x488b3d000000	            mov rdi, qword [0x04002361] 	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4002361	          0x4531c0	                            xor r8d, r8d	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4002364	          0x4889ea	                            mov rdx, rbp	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4002367	    0x41b901000000	                              mov r9d, 1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400236d	      0xb901000000	                              mov ecx, 1	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4002372	      0xbe00000000	                              mov esi, 0	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4002377	      0xe800000000	                          call 0x400237c	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x400237c	          0x4885c0	                           test rax, rax	       744	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_6
0x400237f	          0x4889c5	                            mov rbp, rax	       740	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_11
0x4002382	     0xf8478030000	                            je 0x4002700	       744	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_6
0x4002388	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x400238c	          0x8d50fd	                      lea edx, [rax - 3]	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x400238f	          0x80fa01	                               cmp dl, 1	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4002392	     0xf8648020000	                           jbe 0x40025e0	       746	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x4002398	    0x8b1500000000	            mov edx, dword [0x0400239e] 	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x400239e	          0x83fa04	                              cmp edx, 4	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40023a1	            0x7419	                            je 0x40023bc	       769	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40023a3	          0x83fa01	                              cmp edx, 1	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40023a6	     0xf84ac010000	                            je 0x4002558	       770	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40023ac	    0x448b0d000000	            mov r9d, dword [0x040023b3] 	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40023b3	          0x4585c9	                           test r9d, r9d	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40023b6	     0xf849c010000	                            je 0x4002558	       771	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11
0x40023bc	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023c0	      0xba05000000	                              mov edx, 5	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023c5	      0xbe00000000	                              mov esi, 0	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023ca	            0x31ff	                            xor edi, edi	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023cc	      0xe800000000	                          call 0x40023d1	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023d1	          0x4c89e2	                            mov rdx, r12	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023d4	          0x4889c7	                            mov rdi, rax	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023d7	          0x4889de	                            mov rsi, rbx	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023da	            0x31c0	                            xor eax, eax	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023dc	      0xe800000000	                          call 0x40023e1	       772	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_6	IF_11	CALL_20
0x40023e1	    0x48833d000000	               cmp qword [0x040023e9], 0	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x40023e9	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x40023f0	        0x480f45e8	                         cmovne rbp, rax	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x40023f4	    0x48892d000000	            mov qword [0x040023fb], rbp 	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x40023fb	      0xe959fcffff	                           jmp 0x4002059	       783	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	IF_14
0x4002400	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       298	ldexp.c	FUNCTION_12
0x4002404	            0x31c9	                            xor ecx, ecx	       298	ldexp.c	FUNCTION_12
0x4002406	            0x31d2	                            xor edx, edx	       298	ldexp.c	FUNCTION_12
0x4002408	      0xbf00000000	                              mov edi, 0	       298	ldexp.c	FUNCTION_12
0x400240d	      0xe800000000	                          call 0x4002412	       298	ldexp.c	FUNCTION_12
0x4002412	          0x4885c0	                           test rax, rax	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x4002415	     0xf8426fdffff	                            je 0x4002141	       713	ldexp.c	FUNCTION_21	SWITCH_1	CALL_6
0x400241b	        0xf6402101	               test byte [rax + 0x21], 1	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400241f	     0xf851cfdffff	                           jne 0x4002141	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4002425	     0xfb60d000000	           movzx ecx, byte [0x0400242c] 	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400242c	          0x384820	               cmp byte [rax + 0x20], cl	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400242f	           0xf94c1	                                 sete cl	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4002432	           0xfb6c9	                           movzx ecx, cl	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4002435	      0xe90cfdffff	                           jmp 0x4002146	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x400243a	    0x660f1f440000	                    nop word [rax + rax]	       714	ldexp.c	FUNCTION_21	SWITCH_1
0x4002440	      0xba05000000	                              mov edx, 5	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x4002445	      0xbe00000000	                              mov esi, 0	       904	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_18	CALL_52
0x400244a	            0x31ff	                            xor edi, edi	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x400244c	      0xe800000000	                          call 0x4002451	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002451	          0x4889ea	                            mov rdx, rbp	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002454	          0x4889de	                            mov rsi, rbx	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002457	          0x4889c7	                            mov rdi, rax	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x400245a	              0x5b	                                 pop rbx	       912	ldexp.c	FUNCTION_21
0x400245b	              0x5d	                                 pop rbp	       912	ldexp.c	FUNCTION_21
0x400245c	            0x415c	                                 pop r12	       912	ldexp.c	FUNCTION_21
0x400245e	            0x31c0	                            xor eax, eax	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002460	      0xe900000000	                           jmp 0x4002465	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002465	           0xf1f00	                         nop dword [rax]	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002468	        0x807d0100	                   cmp byte [rbp + 1], 0	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x400246c	     0xf85e8feffff	                           jne 0x400235a	       736	ldexp.c	FUNCTION_21	SWITCH_1	IF_5
0x4002472	    0x488b15000000	            mov rdx, qword [0x04002479] 	       260	ldexp.c	FUNCTION_10
0x4002479	    0x488b05000000	            mov rax, qword [0x04002480] 	       264	ldexp.c	FUNCTION_10
0x4002480	    0xc70500000000	               mov dword [0x0400248a], 1	       262	ldexp.c	FUNCTION_10
0x400248a	    0xc70500000000	               mov dword [0x04002494], 1	       263	ldexp.c	FUNCTION_10
0x4002494	        0x482b4228	             sub rax, qword [rdx + 0x28]	       264	ldexp.c	FUNCTION_10
0x4002498	    0x48c705000000	               mov qword [0x040024a3], 0	       265	ldexp.c	FUNCTION_10
0x40024a3	    0x488915000000	            mov qword [0x040024aa], rdx 	       266	ldexp.c	FUNCTION_10
0x40024aa	    0x488905000000	            mov qword [0x040024b1], rax 	       264	ldexp.c	FUNCTION_10
0x40024b1	      0xe9a3fbffff	                           jmp 0x4002059	       264	ldexp.c	FUNCTION_10
0x40024b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       264	ldexp.c	FUNCTION_10
0x40024c0	    0x488b05000000	            mov rax, qword [0x040024c7] 	       243	ldexp.c	FUNCTION_8
0x40024c7	    0xc70500000000	               mov dword [0x040024d1], 1	       242	ldexp.c	FUNCTION_8
0x40024d1	    0x488905000000	            mov qword [0x040024d8], rax 	       243	ldexp.c	FUNCTION_8
0x40024d8	      0xe97cfbffff	                           jmp 0x4002059	       243	ldexp.c	FUNCTION_8
0x40024dd	           0xf1f00	                         nop dword [rax]	       243	ldexp.c	FUNCTION_8
0x40024e0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x40024e4	            0x31d2	                            xor edx, edx	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x40024e6	            0x31f6	                            xor esi, esi	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x40024e8	      0xe800000000	                          call 0x40024ed	       812	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	CALL_26
0x40024ed	          0x4885c0	                           test rax, rax	       813	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20
0x40024f0	     0xf843a010000	                            je 0x4002630	       813	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20
0x40024f6	    0xf68090000000	               test byte [rax + 0x90], 2	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x40024fd	     0xf8456fbffff	                            je 0x4002059	       820	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22
0x4002503	        0x488b7860	            mov rdi, qword [rax + 0x60] 	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x4002507	          0x4885ff	                           test rdi, rdi	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x400250a	     0xf8423020000	                            je 0x4002733	       822	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	IF_23
0x4002510	      0xe84bf0ffff	                call sym.exp_fold_tree_1	       826	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	CALL_30
0x4002515	    0x8b3500000000	            mov esi, dword [0x0400251b] 	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x400251b	            0x85f6	                           test esi, esi	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x400251d	     0xf8436fbffff	                            je 0x4002059	       827	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	ELSE_11	IF_24
0x4002523	    0x488b05000000	            mov rax, qword [0x0400252a] 	       183	ldexp.c	FUNCTION_3	IF_1
0x400252a	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x400252d	            0x740b	                            je 0x400253a	       183	ldexp.c	FUNCTION_3	IF_1
0x400252f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4002533	    0x480105000000	            add qword [0x0400253a], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x400253a	    0x48c705000000	               mov qword [0x04002545], 0	       185	ldexp.c	FUNCTION_3
0x4002545	    0xc70500000000	               mov dword [0x0400254f], 0	       186	ldexp.c	FUNCTION_3
0x400254f	      0xe905fbffff	                           jmp 0x4002059	       186	ldexp.c	FUNCTION_3
0x4002554	         0xf1f4000	                         nop dword [rax]	       186	ldexp.c	FUNCTION_3
0x4002558	            0x84c0	                             test al, al	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x400255a	     0xf8581feffff	                           jne 0x40023e1	       775	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4002560	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4002565	        0xc6451801	                mov byte [rbp + 0x18], 1	       777	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4002569	    0x48c745280000	               mov qword [rbp + 0x28], 0	       778	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12
0x4002571	     0xf856afeffff	                           jne 0x40023e1	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4002577	    0x488b3d000000	            mov rdi, qword [0x0400257e] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x400257e	        0x483b6f30	            cmp rbp, qword [rdi + 0x30] 	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4002582	     0xf8459feffff	                            je 0x40023e1	       779	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	IF_13
0x4002588	          0x4889ee	                            mov rsi, rbp	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x400258b	      0xe800000000	                          call 0x4002590	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4002590	      0xe94cfeffff	                           jmp 0x40023e1	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4002595	           0xf1f00	                         nop dword [rax]	       780	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_7	IF_12	CALL_21
0x4002598	    0x488b3d000000	            mov rdi, qword [0x0400259f] 	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x400259f	          0x4531c0	                            xor r8d, r8d	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40025a2	            0x31c9	                            xor ecx, ecx	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40025a4	    0x41b901000000	                              mov r9d, 1	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40025aa	          0x4889ea	                            mov rdx, rbp	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40025ad	      0xbe00000000	                              mov esi, 0	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40025b2	      0xe800000000	                          call 0x40025b7	       724	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	CALL_8
0x40025b7	          0x4885c0	                           test rax, rax	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025ba	            0x7410	                            je 0x40025cc	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025bc	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025c0	          0x8d51fd	                      lea edx, [rcx - 3]	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025c3	          0x80fa01	                               cmp dl, 1	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025c6	     0xf86e9000000	                           jbe 0x40026b5	       729	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025cc	    0x48c705000000	               mov qword [0x040025d7], 0	       734	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025d7	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       734	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025db	      0xe970fdffff	                           jmp 0x4002350	       734	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40025e0	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40025e4	        0x488b4268	            mov rax, qword [rdx + 0x68] 	       751	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7
0x40025e8	          0x4885c0	                           test rax, rax	       752	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8
0x40025eb	     0xf8495010000	                            je 0x4002786	       752	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8
0x40025f1	    0x483d00000000	                              cmp rax, 0	       761	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40025f7	     0xf84a5010000	                            je 0x40027a2	       761	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40025fd	        0x488b5260	            mov rdx, qword [rdx + 0x60] 	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x4002601	        0x48035530	             add rdx, qword [rbp + 0x30]	       766	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_5	CALL_18
0x4002605	    0x48c705000000	               mov qword [0x04002610], 0	       253	ldexp.c	FUNCTION_9
0x4002610	    0xc70500000000	               mov dword [0x0400261a], 1	       251	ldexp.c	FUNCTION_9
0x400261a	    0x488905000000	            mov qword [0x04002621], rax 	       254	ldexp.c	FUNCTION_9
0x4002621	    0x488915000000	            mov qword [0x04002628], rdx 	       252	ldexp.c	FUNCTION_9
0x4002628	      0xe9b4fdffff	                           jmp 0x40023e1	       252	ldexp.c	FUNCTION_9
0x400262d	           0xf1f00	                         nop dword [rax]	       252	ldexp.c	FUNCTION_9
0x4002630	    0x833d00000000	               cmp dword [0x04002637], 4	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x4002637	     0xf851cfaffff	                           jne 0x4002059	       815	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21
0x400263d	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4002641	      0xba05000000	                              mov edx, 5	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4002646	      0xbe00000000	                              mov esi, 0	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x400264b	      0xe9fafdffff	                           jmp 0x400244a	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4002650	            0x31c9	                            xor ecx, ecx	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4002652	      0xe9effaffff	                           jmp 0x4002146	       816	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	IF_20	IF_21	CALL_28
0x4002657	    0x833d00000000	               cmp dword [0x0400265e], 4	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x400265e	            0x7525	                           jne 0x4002685	       843	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27
0x4002660	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4002664	      0xba05000000	                              mov edx, 5	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4002669	      0xbe00000000	                              mov esi, 0	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400266e	            0x31ff	                            xor edi, edi	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4002670	      0xe800000000	                          call 0x4002675	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4002675	          0x4889ea	                            mov rdx, rbp	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4002678	          0x4889c7	                            mov rdi, rax	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400267b	          0x4889de	                            mov rsi, rbx	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x400267e	            0x31c0	                            xor eax, eax	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4002680	      0xe800000000	                          call 0x4002685	       844	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	IF_26	IF_27	CALL_34
0x4002685	    0xc70500000000	               mov dword [0x0400268f], 1	       242	ldexp.c	FUNCTION_8
0x400268f	    0x48c705000000	               mov qword [0x0400269a], 0	       243	ldexp.c	FUNCTION_8
0x400269a	    0x48c705000000	               mov qword [0x040026a5], 0	       244	ldexp.c	FUNCTION_8
0x40026a5	    0x48c705000000	               mov qword [0x040026b0], 0	       245	ldexp.c	FUNCTION_8
0x40026b0	      0xe9a4f9ffff	                           jmp 0x4002059	       245	ldexp.c	FUNCTION_8
0x40026b5	    0x488178280000	               cmp qword [rax + 0x28], 0	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40026bd	     0xf8509ffffff	                           jne 0x40025cc	       731	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40026c3	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       298	ldexp.c	FUNCTION_12
0x40026c7	            0x31c9	                            xor ecx, ecx	       298	ldexp.c	FUNCTION_12
0x40026c9	            0x31d2	                            xor edx, edx	       298	ldexp.c	FUNCTION_12
0x40026cb	      0xbf00000000	                              mov edi, 0	       298	ldexp.c	FUNCTION_12
0x40026d0	      0xe800000000	                          call 0x40026d5	       298	ldexp.c	FUNCTION_12
0x40026d5	          0x4885c0	                           test rax, rax	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x40026d8	     0xf84eefeffff	                            je 0x40025cc	       732	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4	CALL_9
0x40026de	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40026e2	    0x380500000000	               cmp byte [0x040026e8], al	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40026e8	     0xf85defeffff	                           jne 0x40025cc	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40026ee	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40026f2	      0xe959fcffff	                           jmp 0x4002350	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x40026f7	    0x660f1f840000	                    nop word [rax + rax]	       728	ldexp.c	FUNCTION_21	SWITCH_1	IF_3	IF_4
0x4002700	            0x31ff	                            xor edi, edi	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x4002702	      0xba05000000	                              mov edx, 5	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x4002707	      0xbe00000000	                              mov esi, 0	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x400270c	      0xe800000000	                          call 0x4002711	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x4002711	          0x4889c7	                            mov rdi, rax	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x4002714	            0x31c0	                            xor eax, eax	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x4002716	      0xe800000000	                          call 0x400271b	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x400271b	      0xe9c1fcffff	                           jmp 0x40023e1	       745	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	CALL_13
0x4002720	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002724	      0xba05000000	                              mov edx, 5	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002729	      0xbe00000000	                              mov esi, 0	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x400272e	      0xe917fdffff	                           jmp 0x400244a	       876	ldexp.c	FUNCTION_21	SWITCH_1	IF_30	ELSE_15	CALL_42
0x4002733	        0x488b4038	            mov rax, qword [rax + 0x38] 	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x4002737	    0x48c705000000	               mov qword [0x04002742], 0	       195	ldexp.c	FUNCTION_4
0x4002742	        0x488b4030	            mov rax, qword [rax + 0x30] 	       823	ldexp.c	FUNCTION_21	SWITCH_1	IF_19	ELSE_10	IF_22	CALL_29
0x4002746	    0xc70500000000	               mov dword [0x04002750], 1	       192	ldexp.c	FUNCTION_4
0x4002750	    0x48c705000000	               mov qword [0x0400275b], 0	       193	ldexp.c	FUNCTION_4
0x400275b	    0x488905000000	            mov qword [0x04002762], rax 	       194	ldexp.c	FUNCTION_4
0x4002762	      0xe9f2f8ffff	                           jmp 0x4002059	       194	ldexp.c	FUNCTION_4
0x4002767	        0x488b5838	            mov rbx, qword [rax + 0x38] 	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x400276b	    0x488b3d000000	            mov rdi, qword [0x04002772] 	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x4002772	      0xe800000000	                          call 0x4002777	       855	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	CALL_36
0x4002777	            0x31d2	                            xor edx, edx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4002779	            0x89c1	                            mov ecx, eax	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x400277b	          0x4889d8	                            mov rax, rbx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x400277e	          0x48f7f1	                                 div rcx	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4002781	      0xe980faffff	                           jmp 0x4002206	       854	ldexp.c	FUNCTION_21	SWITCH_1	IF_25	ELSE_12	IF_28	IF_29
0x4002786	    0x833d00000000	               cmp dword [0x0400278d], 1	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x400278d	            0x7654	                           jbe 0x40027e3	       754	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	IF_9
0x400278f	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4002793	      0xba05000000	                              mov edx, 5	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x4002798	      0xbe00000000	                              mov esi, 0	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x400279d	      0xe928fcffff	                           jmp 0x40023ca	       757	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	ELSE_3	CALL_16
0x40027a2	    0x48813d000000	               cmp qword [0x040027ad], 0	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40027ad	            0x7460	                            je 0x400280f	       762	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40027af	        0x488b4260	            mov rax, qword [rdx + 0x60] 	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40027b3	        0x48034530	             add rax, qword [rbp + 0x30]	       764	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x40027b7	    0x48c705000000	               mov qword [0x040027c2], 0	       244	ldexp.c	FUNCTION_8
0x40027c2	    0xc70500000000	               mov dword [0x040027cc], 1	       242	ldexp.c	FUNCTION_8
0x40027cc	    0x48c705000000	               mov qword [0x040027d7], 0	       245	ldexp.c	FUNCTION_8
0x40027d7	    0x488905000000	            mov qword [0x040027de], rax 	       243	ldexp.c	FUNCTION_8
0x40027de	      0xe9fefbffff	                           jmp 0x40023e1	       243	ldexp.c	FUNCTION_8
0x40027e3	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       755	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	IF_8	CALL_14
0x40027e7	    0x48c705000000	               mov qword [0x040027f2], 0	       253	ldexp.c	FUNCTION_9
0x40027f2	    0xc70500000000	               mov dword [0x040027fc], 1	       251	ldexp.c	FUNCTION_9
0x40027fc	    0x488915000000	            mov qword [0x04002803], rdx 	       254	ldexp.c	FUNCTION_9
0x4002803	    0x488905000000	            mov qword [0x0400280a], rax 	       252	ldexp.c	FUNCTION_9
0x400280a	      0xe9d2fbffff	                           jmp 0x40023e1	       252	ldexp.c	FUNCTION_9
0x400280f	    0x833d00000000	               cmp dword [0x04002816], 0	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x4002816	     0xf84e1fdffff	                            je 0x40025fd	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
0x400281c	            0xeb91	                           jmp 0x40027af	       763	ldexp.c	FUNCTION_21	SWITCH_1	ELSE_1	ELSE_2	IF_7	ELSE_4	IF_10
exp_assert	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	19
0x40041f0	              0x55	                                push rbp	      1387	ldexp.c	FUNCTION_40
0x40041f1	              0x53	                                push rbx	      1387	ldexp.c	FUNCTION_40
0x40041f2	          0x4889fb	                            mov rbx, rdi	      1387	ldexp.c	FUNCTION_40
0x40041f5	      0xbf28000000	                           mov edi, 0x28	      1390	ldexp.c	FUNCTION_40	CALL_1
0x40041fa	          0x4889f5	                            mov rbp, rsi	      1387	ldexp.c	FUNCTION_40
0x40041fd	        0x4883ec08	                              sub rsp, 8	      1387	ldexp.c	FUNCTION_40
0x4004201	      0xe800000000	                          call 0x4004206	      1390	ldexp.c	FUNCTION_40	CALL_1
0x4004206	    0xc70021000000	                   mov dword [rax], 0x21	      1391	ldexp.c	FUNCTION_40
0x400420c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1392	ldexp.c	FUNCTION_40
0x4004210	        0x48895008	                mov qword [rax + 8], rdx	      1392	ldexp.c	FUNCTION_40
0x4004214	          0x8b5304	                mov edx, dword [rbx + 4]	      1393	ldexp.c	FUNCTION_40
0x4004217	    0xc74010080000	               mov dword [rax + 0x10], 8	      1394	ldexp.c	FUNCTION_40
0x400421e	        0x48895818	             mov qword [rax + 0x18], rbx	      1395	ldexp.c	FUNCTION_40
0x4004222	        0x48896820	             mov qword [rax + 0x20], rbp	      1396	ldexp.c	FUNCTION_40
0x4004226	          0x895004	                mov dword [rax + 4], edx	      1393	ldexp.c	FUNCTION_40
0x4004229	        0x4883c408	                              add rsp, 8	      1398	ldexp.c	FUNCTION_40
0x400422d	              0x5b	                                 pop rbx	      1398	ldexp.c	FUNCTION_40
0x400422e	              0x5d	                                 pop rbp	      1398	ldexp.c	FUNCTION_40
0x400422f	              0xc3	                                     ret	      1398	ldexp.c	FUNCTION_40
exp_provide	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	21
0x40041a0	            0x4154	                                push r12	      1379	ldexp.c	FUNCTION_39
0x40041a2	              0x55	                                push rbp	      1379	ldexp.c	FUNCTION_39
0x40041a3	          0x4989fc	                            mov r12, rdi	      1379	ldexp.c	FUNCTION_39
0x40041a6	              0x53	                                push rbx	      1379	ldexp.c	FUNCTION_39
0x40041a7	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x40041ac	          0x4889f3	                            mov rbx, rsi	      1379	ldexp.c	FUNCTION_39
0x40041af	            0x89d5	                            mov ebp, edx	      1379	ldexp.c	FUNCTION_39
0x40041b1	      0xe800000000	                          call 0x40041b6	      1348	ldexp.c	FUNCTION_36	CALL_1
0x40041b6	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x40041bc	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x40041c0	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x40041c4	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x40041c7	    0xc74010050000	               mov dword [rax + 0x10], 5	      1352	ldexp.c	FUNCTION_36
0x40041ce	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x40041d2	        0x4c896018	             mov qword [rax + 0x18], r12	      1354	ldexp.c	FUNCTION_36
0x40041d6	          0x896828	             mov dword [rax + 0x28], ebp	      1355	ldexp.c	FUNCTION_36
0x40041d9	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x40041dc	              0x5b	                                 pop rbx	      1381	ldexp.c	FUNCTION_39
0x40041dd	              0x5d	                                 pop rbp	      1381	ldexp.c	FUNCTION_39
0x40041de	            0x415c	                                 pop r12	      1381	ldexp.c	FUNCTION_39
0x40041e0	              0xc3	                                     ret	      1381	ldexp.c	FUNCTION_39
exp_get_value_int	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	569
0x4005370	            0x4157	                                push r15	      1527	ldexp.c	FUNCTION_43
0x4005372	            0x4156	                                push r14	      1527	ldexp.c	FUNCTION_43
0x4005374	            0x4155	                                push r13	      1527	ldexp.c	FUNCTION_43
0x4005376	            0x4154	                                push r12	      1527	ldexp.c	FUNCTION_43
0x4005378	              0x55	                                push rbp	      1527	ldexp.c	FUNCTION_43
0x4005379	              0x53	                                push rbx	      1527	ldexp.c	FUNCTION_43
0x400537a	          0x4863ee	                         movsxd rbp, esi	      1528	ldexp.c	FUNCTION_43	CALL_1
0x400537d	        0x4883ec08	                              sub rsp, 8	      1527	ldexp.c	FUNCTION_43
0x4005381	          0x4885ff	                           test rdi, rdi	      1513	ldexp.c	FUNCTION_42	IF_1
0x4005384	     0xf8499000000	                            je 0x4005423	      1513	ldexp.c	FUNCTION_42	IF_1
0x400538a	    0x48c705000000	               mov qword [0x04005395], 0	      1247	ldexp.c	FUNCTION_30
0x4005395	    0x48c705000000	               mov qword [0x040053a0], 0	      1248	ldexp.c	FUNCTION_30
0x40053a0	          0x4989d4	                            mov r12, rdx	      1248	ldexp.c	FUNCTION_30
0x40053a3	    0x48c705000000	               mov qword [0x040053ae], 0	      1249	ldexp.c	FUNCTION_30
0x40053ae	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40053b1	          0x4889fb	                            mov rbx, rdi	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40053b4	    0xc70500000000	               mov dword [0x040053be], 0	      1246	ldexp.c	FUNCTION_30
0x40053be	          0x83f809	                              cmp eax, 9	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40053c1	     0xf8799030000	                            ja 0x4005760	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40053c7	            0x89c2	                            mov edx, eax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40053c9	    0xff24d5000000	                       jmp qword [rdx*8]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x40053d0	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x40053d4	      0xe887c1ffff	                call sym.exp_fold_tree_1	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x40053d9	    0x833d00000000	               cmp dword [0x040053e0], 4	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x40053e0	     0xf849a040000	                            je 0x4005880	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x40053e6	    0x8b0500000000	            mov eax, dword [0x040053ec] 	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x40053ec	            0x85c0	                           test eax, eax	      1516	ldexp.c	FUNCTION_42	IF_1	IF_2
0x40053ee	     0xf8557030000	                           jne 0x400574b	      1516	ldexp.c	FUNCTION_42	IF_1	IF_2
0x40053f4	          0x4d85e4	                           test r12, r12	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x40053f7	            0x742a	                            je 0x4005423	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x40053f9	    0x833d00000000	               cmp dword [0x04005400], 1	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4005400	            0x7421	                            je 0x4005423	      1518	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3
0x4005402	      0xba05000000	                              mov edx, 5	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4005407	      0xbe00000000	                              mov esi, 0	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x400540c	            0x31ff	                            xor edi, edi	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x400540e	      0xe800000000	                          call 0x4005413	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4005413	          0x4c89e2	                            mov rdx, r12	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4005416	          0x4889c7	                            mov rdi, rax	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4005419	          0x4889de	                            mov rsi, rbx	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x400541c	            0x31c0	                            xor eax, eax	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x400541e	      0xe800000000	                          call 0x4005423	      1519	ldexp.c	FUNCTION_42	IF_1	ELSE_1	IF_3	CALL_3
0x4005423	        0x4883c408	                              add rsp, 8	      1529	ldexp.c	FUNCTION_43
0x4005427	            0x89e8	                            mov eax, ebp	      1529	ldexp.c	FUNCTION_43
0x4005429	              0x5b	                                 pop rbx	      1529	ldexp.c	FUNCTION_43
0x400542a	              0x5d	                                 pop rbp	      1529	ldexp.c	FUNCTION_43
0x400542b	            0x415c	                                 pop r12	      1529	ldexp.c	FUNCTION_43
0x400542d	            0x415d	                                 pop r13	      1529	ldexp.c	FUNCTION_43
0x400542f	            0x415e	                                 pop r14	      1529	ldexp.c	FUNCTION_43
0x4005431	            0x415f	                                 pop r15	      1529	ldexp.c	FUNCTION_43
0x4005433	              0xc3	                                     ret	      1529	ldexp.c	FUNCTION_43
0x4005434	         0xf1f4000	                         nop dword [rax]	      1529	ldexp.c	FUNCTION_43
0x4005438	    0x448b3d000000	           mov r15d, dword [0x0400543f] 	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400543f	          0x4585ff	                         test r15d, r15d	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4005442	     0xf8427030000	                            je 0x400576f	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4005448	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400544c	        0x488b6860	            mov rbp, qword [rax + 0x60] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4005450	        0x48036f20	             add rbp, qword [rdi + 0x20]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4005454	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4005458	    0xc70500000000	               mov dword [0x04005462], 1	       251	ldexp.c	FUNCTION_9
0x4005462	    0x48c705000000	               mov qword [0x0400546d], 0	       253	ldexp.c	FUNCTION_9
0x400546d	    0x48892d000000	            mov qword [0x04005474], rbp 	       252	ldexp.c	FUNCTION_9
0x4005474	    0x488915000000	            mov qword [0x0400547b], rdx 	       254	ldexp.c	FUNCTION_9
0x400547b	            0xeba6	                           jmp 0x4005423	       254	ldexp.c	FUNCTION_9
0x400547d	           0xf1f00	                         nop dword [rax]	       254	ldexp.c	FUNCTION_9
0x4005480	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       673	ldexp.c	FUNCTION_20	CALL_1
0x4005484	    0x4c8b2d000000	            mov r13, qword [0x0400548b] 	       671	ldexp.c	FUNCTION_20
0x400548b	      0xe8d0c0ffff	                call sym.exp_fold_tree_1	       673	ldexp.c	FUNCTION_20	CALL_1
0x4005490	    0x448b0d000000	            mov r9d, dword [0x04005497] 	       675	ldexp.c	FUNCTION_20	IF_1
0x4005497	    0x4c892d000000	            mov qword [0x0400549e], r13 	       674	ldexp.c	FUNCTION_20
0x400549e	          0x4585c9	                           test r9d, r9d	       675	ldexp.c	FUNCTION_20	IF_1
0x40054a1	     0xf844dffffff	                            je 0x40053f4	       675	ldexp.c	FUNCTION_20	IF_1
0x40054a7	    0x48833d000000	               cmp qword [0x040054af], 0	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40054af	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40054b3	      0x480f457b20	          cmovne rdi, qword [rbx + 0x20]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40054b8	      0xe8a3c0ffff	                call sym.exp_fold_tree_1	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40054bd	    0x8b0500000000	            mov eax, dword [0x040054c3] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40054c3	      0xe924ffffff	                           jmp 0x40053ec	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40054c8	     0xf1f84000000	                   nop dword [rax + rax]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x40054d0	      0xe84bacffff	                    call sym.fold_binary	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x40054d5	    0x8b0500000000	            mov eax, dword [0x040054db] 	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x40054db	      0xe90cffffff	                           jmp 0x40053ec	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x40054e0	      0xe80bcbffff	                      call sym.fold_name	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x40054e5	      0xe9fcfeffff	                           jmp 0x40053e6	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x40054ea	    0x660f1f440000	                    nop word [rax + rax]	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x40054f0	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40054f4	          0x803e2e	                    cmp byte [rsi], 0x2e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40054f7	     0xf84b3030000	                            je 0x40058b0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40054fd	          0x4531ed	                          xor r13d, r13d	      1123	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4005500	          0x83f805	                              cmp eax, 5	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4005503	     0xf844f040000	                            je 0x4005958	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4005509	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x400550d	    0x488935000000	            mov qword [0x04005514], rsi 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4005514	    0x48c705000000	               mov qword [0x0400551f], 0	      1145	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x400551f	      0xe83cc0ffff	                call sym.exp_fold_tree_1	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4005524	    0x833d00000000	               cmp dword [0x0400552b], 4	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400552b	     0xf84df000000	                            je 0x4005610	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4005531	    0x48833d000000	               cmp qword [0x04005539], 0	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4005539	     0xf85d1000000	                           jne 0x4005610	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x400553f	              0x90	                                     nop	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4005540	    0x8b0500000000	            mov eax, dword [0x04005546] 	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4005546	    0x48c705000000	               mov qword [0x04005551], 0	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4005551	      0xe996feffff	                           jmp 0x40053ec	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4005556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4005560	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4005564	      0xe8f7bfffff	                call sym.exp_fold_tree_1	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4005569	    0x448b35000000	           mov r14d, dword [0x04005570] 	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4005570	          0x4585f6	                         test r14d, r14d	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4005573	     0xf847bfeffff	                            je 0x40053f4	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4005579	            0x8b03	                    mov eax, dword [rbx]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400557b	      0x3d17010000	                          cmp eax, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005580	     0xf845e020000	                            je 0x40057e4	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005586	     0xf8e0c040000	                           jle 0x4005998	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400558c	      0x3d40010000	                          cmp eax, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005591	     0xf84d4040000	                            je 0x4005a6b	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005597	     0xf8e81040000	                           jle 0x4005a1e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400559d	      0x3d60010000	                          cmp eax, 0x160	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40055a2	     0xf8446050000	                            je 0x4005aee	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40055a8	            0x31f6	                            xor esi, esi	       163	ldexp.c	FUNCTION_2
0x40055aa	      0x3d67010000	                          cmp eax, 0x167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40055af	    0x488b15000000	            mov rdx, qword [0x040055b6] 	       161	ldexp.c	FUNCTION_2
0x40055b6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       162	ldexp.c	FUNCTION_2
0x40055bd	      0xbf01000000	                              mov edi, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40055c2	            0x740f	                            je 0x40055d3	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40055c4	      0xe9ea030000	                           jmp 0x40059b3	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40055c9	     0xf1f80000000	                         nop dword [rax]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40055d0	          0x4889e9	                            mov rcx, rbp	       167	ldexp.c	FUNCTION_2	DO_1
0x40055d3	        0x4883fa01	                              cmp rdx, 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40055d7	        0x488d6901	                      lea rbp, [rcx + 1]	       167	ldexp.c	FUNCTION_2	DO_1
0x40055db	            0x7606	                           jbe 0x40055e3	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40055dd	          0xf6c201	                              test dl, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40055e0	           0xf45f7	                         cmovne esi, edi	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x40055e3	          0x48d1ea	                              shr rdx, 1	       172	ldexp.c	FUNCTION_2
0x40055e6	            0x75e8	                           jne 0x40055d0	       172	ldexp.c	FUNCTION_2
0x40055e8	        0x4883c102	                              add rcx, 2	       175	ldexp.c	FUNCTION_2	IF_2
0x40055ec	            0x85f6	                           test esi, esi	       175	ldexp.c	FUNCTION_2	IF_2
0x40055ee	    0x48c705000000	               mov qword [0x040055f9], 0	       176	ldexp.c	FUNCTION_2
0x40055f9	        0x480f45e9	                         cmovne rbp, rcx	       175	ldexp.c	FUNCTION_2	IF_2
0x40055fd	    0x48892d000000	            mov qword [0x04005604], rbp 	       177	ldexp.c	FUNCTION_2
0x4005604	      0xe91afeffff	                           jmp 0x4005423	       177	ldexp.c	FUNCTION_2
0x4005609	     0xf1f80000000	                         nop dword [rax]	       177	ldexp.c	FUNCTION_2
0x4005610	        0x837b1005	               cmp dword [rbx + 0x10], 5	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4005614	     0xf84be010000	                            je 0x40057d8	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x400561a	          0x4d85ed	                           test r13, r13	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x400561d	     0xf8436050000	                            je 0x4005b59	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4005623	    0x8b0500000000	            mov eax, dword [0x04005629] 	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4005629	            0x85c0	                           test eax, eax	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x400562b	     0xf846f010000	                            je 0x40057a0	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4005631	    0x48833d000000	               cmp qword [0x04005639], 0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4005639	     0xf8481010000	                            je 0x40057c0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x400563f	        0x4c8b7b18	            mov r15, qword [rbx + 0x18] 	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4005643	            0x31c9	                            xor ecx, ecx	       309	ldexp.c	FUNCTION_13
0x4005645	      0xba01000000	                              mov edx, 1	       309	ldexp.c	FUNCTION_13
0x400564a	      0xbf00000000	                              mov edi, 0	       309	ldexp.c	FUNCTION_13
0x400564f	          0x4c89fe	                            mov rsi, r15	       309	ldexp.c	FUNCTION_13
0x4005652	      0xe800000000	                          call 0x4005657	       309	ldexp.c	FUNCTION_13
0x4005657	          0x4885c0	                           test rax, rax	       313	ldexp.c	FUNCTION_13	IF_1
0x400565a	          0x4989c6	                            mov r14, rax	       309	ldexp.c	FUNCTION_13
0x400565d	     0xf84eb050000	                            je 0x4005c4e	       313	ldexp.c	FUNCTION_13	IF_1
0x4005663	      0x41f6451908	               test byte [r13 + 0x19], 8	       319	ldexp.c	FUNCTION_13	IF_2
0x4005668	            0x7511	                           jne 0x400567b	       319	ldexp.c	FUNCTION_13	IF_2
0x400566a	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       320	ldexp.c	FUNCTION_13	IF_2
0x400566f	          0x83e803	                              sub eax, 3	       320	ldexp.c	FUNCTION_13	IF_2
0x4005672	            0x3c02	                               cmp al, 2	       320	ldexp.c	FUNCTION_13	IF_2
0x4005674	            0x7705	                            ja 0x400567b	       320	ldexp.c	FUNCTION_13	IF_2
0x4005676	      0x41804e2101	                 or byte [r14 + 0x21], 1	       324	ldexp.c	FUNCTION_13	IF_2
0x400567b	    0x833d00000000	               cmp dword [0x04005682], 4	       333	ldexp.c	FUNCTION_13	IF_4
0x4005682	    0x8b0500000000	            mov eax, dword [0x04005688] 	       331	ldexp.c	FUNCTION_13
0x4005688	    0x49c746180000	               mov qword [r14 + 0x18], 0	       332	ldexp.c	FUNCTION_13
0x4005690	        0x41884620	               mov byte [r14 + 0x20], al	       331	ldexp.c	FUNCTION_13
0x4005694	    0x488b05000000	            mov rax, qword [0x0400569b] 	       335	ldexp.c	FUNCTION_13	IF_4
0x400569b	     0xf842f030000	                            je 0x40059d0	       333	ldexp.c	FUNCTION_13	IF_4
0x40056a1	    0x488b15000000	            mov rdx, qword [0x040056a8] 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056a8	      0x41c6451803	                mov byte [r13 + 0x18], 3	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056ad	        0x49894528	             mov qword [r13 + 0x28], rax	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056b1	        0x49895530	             mov qword [r13 + 0x30], rdx	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056b5	          0x8b4304	                mov eax, dword [rbx + 4]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056b8	      0x410fb65519	           movzx edx, byte [r13 + 0x19] 	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056bd	            0x85c0	                           test eax, eax	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056bf	           0xf94c0	                                 sete al	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056c2	          0xc1e002	                              shl eax, 2	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056c5	          0x83e2fb	                     and edx, 0xfffffffb	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056c8	             0x9d0	                             or eax, edx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056ca	          0x83c808	                               or eax, 8	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056cd	        0x41884519	               mov byte [r13 + 0x19], al	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40056d1	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40056d4	            0x85d2	                           test edx, edx	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40056d6	     0xf8524030000	                           jne 0x4005a00	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40056dc	    0x488b15000000	            mov rdx, qword [0x040056e3] 	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40056e3	        0x488d42ff	                      lea rax, [rdx - 1]	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40056e7	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40056eb	     0xf874ffeffff	                            ja 0x4005540	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40056f1	    0x488b3d000000	            mov rdi, qword [0x040056f8] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40056f8	          0x4c89ee	                            mov rsi, r13	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40056fb	        0x488b4708	                mov rax, qword [rdi + 8]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40056ff	    0xff90d0020000	                call qword [rax + 0x2d0]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4005705	      0xe936feffff	                           jmp 0x4005540	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x400570a	    0x660f1f440000	                    nop word [rax + rax]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4005710	    0x8b1500000000	            mov edx, dword [0x04005716] 	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4005716	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x400571a	    0xc70500000000	               mov dword [0x04005724], 1	       192	ldexp.c	FUNCTION_4
0x4005724	            0x85d2	                           test edx, edx	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4005726	     0xf8534010000	                           jne 0x4005860	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x400572c	    0x48c705000000	               mov qword [0x04005737], 0	       193	ldexp.c	FUNCTION_4
0x4005737	    0x488905000000	            mov qword [0x0400573e], rax 	       194	ldexp.c	FUNCTION_4
0x400573e	            0x6690	                                     nop	       194	ldexp.c	FUNCTION_4
0x4005740	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4005744	    0x488905000000	            mov qword [0x0400574b], rax 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x400574b	    0x488b2d000000	            mov rbp, qword [0x04005752] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4005752	      0xe9ccfcffff	                           jmp 0x4005423	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4005757	    0x660f1f840000	                    nop word [rax + rax]	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4005760	      0xbecb040000	                          mov esi, 0x4cb	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4005765	      0xbf00000000	                              mov edi, 0	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x400576a	      0xe800000000	                          call 0x400576f	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x400576f	    0x48c705000000	               mov qword [0x0400577a], 0	        90	string3.h	FUNCTION_54	CALL_6
0x400577a	    0x48c705000000	               mov qword [0x04005785], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4005785	    0x48c705000000	               mov qword [0x04005790], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4005790	    0x48c705000000	               mov qword [0x0400579b], 0	        90	string3.h	FUNCTION_54	CALL_6
0x400579b	      0xe954fcffff	                           jmp 0x40053f4	        90	string3.h	FUNCTION_54	CALL_6
0x40057a0	      0x41807d1800	                cmp byte [r13 + 0x18], 0	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40057a5	     0xf859bfdffff	                           jne 0x4005546	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40057ab	    0x48c705000000	               mov qword [0x040057b6], 0	      1178	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40057b6	    0xc70500000000	               mov dword [0x040057c0], 1	      1180	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40057c0	    0x488b05000000	            mov rax, qword [0x040057c7] 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40057c7	    0x488905000000	            mov qword [0x040057ce], rax 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40057ce	      0xe96cfeffff	                           jmp 0x400563f	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40057d3	       0xf1f440000	                   nop dword [rax + rax]	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40057d8	    0xc74310060000	               mov dword [rbx + 0x10], 6	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x40057df	      0xe936feffff	                           jmp 0x400561a	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x40057e4	    0x448b2d000000	           mov r13d, dword [0x040057eb] 	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40057eb	          0x4585ed	                         test r13d, r13d	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40057ee	     0xf8468020000	                            je 0x4005a5c	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40057f4	    0x488b0d000000	            mov rcx, qword [0x040057fb] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x40057fb	    0x488b2d000000	            mov rbp, qword [0x04005802] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4005802	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4005806	            0x7611	                           jbe 0x4005819	      1615	ldexp.c	FUNCTION_46	IF_1
0x4005808	      0x488d4429ff	                lea rax, [rcx + rbp - 1]	      1619	ldexp.c	FUNCTION_46
0x400580d	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x400580f	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4005812	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4005816	          0x4889c5	                            mov rbp, rax	      1619	ldexp.c	FUNCTION_46
0x4005819	    0x488b05000000	            mov rax, qword [0x04005820] 	       260	ldexp.c	FUNCTION_10
0x4005820	    0xc70500000000	               mov dword [0x0400582a], 1	       262	ldexp.c	FUNCTION_10
0x400582a	    0xc70500000000	               mov dword [0x04005834], 1	       263	ldexp.c	FUNCTION_10
0x4005834	        0x482b6828	             sub rbp, qword [rax + 0x28]	       264	ldexp.c	FUNCTION_10
0x4005838	    0x48c705000000	               mov qword [0x04005843], 0	       265	ldexp.c	FUNCTION_10
0x4005843	    0x488905000000	            mov qword [0x0400584a], rax 	       266	ldexp.c	FUNCTION_10
0x400584a	    0x48892d000000	            mov qword [0x04005851], rbp 	       264	ldexp.c	FUNCTION_10
0x4005851	      0xe9cdfbffff	                           jmp 0x4005423	       264	ldexp.c	FUNCTION_10
0x4005856	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       264	ldexp.c	FUNCTION_10
0x4005860	    0x488905000000	            mov qword [0x04005867], rax 	       243	ldexp.c	FUNCTION_8
0x4005867	    0x48c705000000	               mov qword [0x04005872], 0	       245	ldexp.c	FUNCTION_8
0x4005872	      0xe9c9feffff	                           jmp 0x4005740	       245	ldexp.c	FUNCTION_8
0x4005877	    0x660f1f840000	                    nop word [rax + rax]	       245	ldexp.c	FUNCTION_8
0x4005880	    0x48833d000000	               cmp qword [0x04005888], 0	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4005888	     0xf8558fbffff	                           jne 0x40053e6	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x400588e	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4005892	            0x31c0	                            xor eax, eax	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4005894	      0xbf00000000	                              mov edi, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4005899	      0xe800000000	                          call 0x400589e	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x400589e	    0x8b0500000000	            mov eax, dword [0x040058a4] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x40058a4	      0xe943fbffff	                           jmp 0x40053ec	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x40058a9	     0xf1f80000000	                         nop dword [rax]	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x40058b0	        0x807e0100	                   cmp byte [rsi + 1], 0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40058b4	     0xf8543fcffff	                           jne 0x40054fd	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x40058ba	          0x83f804	                              cmp eax, 4	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x40058bd	            0x741e	                            je 0x40058dd	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x40058bf	      0xbe00000000	                              mov esi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40058c4	            0x31ff	                            xor edi, edi	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40058c6	      0xba05000000	                              mov edx, 5	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40058cb	      0xe800000000	                          call 0x40058d0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40058d0	          0x4889de	                            mov rsi, rbx	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40058d3	          0x4889c7	                            mov rdi, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40058d6	            0x31c0	                            xor eax, eax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40058d8	      0xe800000000	                          call 0x40058dd	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x40058dd	    0x448b05000000	            mov r8d, dword [0x040058e4] 	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40058e4	          0x4585c0	                           test r8d, r8d	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40058e7	     0xf8482feffff	                            je 0x400576f	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40058ed	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x40058f1	    0xc70500000000	               mov dword [0x040058fb], 1	      1057	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x40058fb	      0xe860bcffff	                call sym.exp_fold_tree_1	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4005900	    0x833d00000000	               cmp dword [0x04005907], 1	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005907	    0xc70500000000	               mov dword [0x04005911], 0	      1059	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4005911	     0xf845a030000	                            je 0x4005c71	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005917	    0x8b3500000000	            mov esi, dword [0x0400591d] 	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400591d	            0x85f6	                           test esi, esi	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400591f	     0xf858b020000	                           jne 0x4005bb0	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4005925	    0x833d00000000	               cmp dword [0x0400592c], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x400592c	     0xf84f1faffff	                            je 0x4005423	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4005932	      0xba05000000	                              mov edx, 5	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4005937	      0xbe00000000	                              mov esi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x400593c	            0x31ff	                            xor edi, edi	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400593e	      0xe800000000	                          call 0x4005943	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005943	          0x4889de	                            mov rsi, rbx	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005946	          0x4889c7	                            mov rdi, rax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005949	            0x31c0	                            xor eax, eax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400594b	      0xe800000000	                          call 0x4005950	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005950	      0xe991faffff	                           jmp 0x40053e6	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005955	           0xf1f00	                         nop dword [rax]	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005958	    0x488b3d000000	            mov rdi, qword [0x0400595f] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x400595f	            0x31c9	                            xor ecx, ecx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4005961	            0x31d2	                            xor edx, edx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4005963	    0x41b801000000	                              mov r8d, 1	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4005969	      0xe800000000	                          call 0x400596e	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x400596e	          0x4885c0	                           test rax, rax	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4005971	          0x4989c5	                            mov r13, rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4005974	     0xf846cfaffff	                            je 0x40053e6	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400597a	        0x80781802	                cmp byte [rax + 0x18], 2	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400597e	            0x760a	                           jbe 0x400598a	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4005980	        0xf6401904	               test byte [rax + 0x19], 4	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4005984	     0xf845cfaffff	                            je 0x40053e6	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400598a	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x400598e	      0xe976fbffff	                           jmp 0x4005509	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4005993	       0xf1f440000	                   nop dword [rax + rax]	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4005998	          0x83f82d	                           cmp eax, 0x2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400599b	     0xf84a2010000	                            je 0x4005b43	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40059a1	          0x83f87e	                           cmp eax, 0x7e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40059a4	     0xf8483010000	                            je 0x4005b2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40059aa	          0x83f821	                           cmp eax, 0x21	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40059ad	     0xf8421010000	                            je 0x4005ad4	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40059b3	      0xbe9f010000	                          mov esi, 0x19f	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x40059b8	      0xbf00000000	                              mov edi, 0	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x40059bd	      0xe800000000	                          call 0x40059c2	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x40059c2	      0xe91ffaffff	                           jmp 0x40053e6	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x40059c7	    0x660f1f840000	                    nop word [rax + rax]	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x40059d0	    0x8b0d00000000	            mov ecx, dword [0x040059d6] 	       334	ldexp.c	FUNCTION_13	IF_4
0x40059d6	            0x85c9	                           test ecx, ecx	       334	ldexp.c	FUNCTION_13	IF_4
0x40059d8	     0xf84c3fcffff	                            je 0x40056a1	       334	ldexp.c	FUNCTION_13	IF_4
0x40059de	    0x483d00000000	                              cmp rax, 0	       335	ldexp.c	FUNCTION_13	IF_4
0x40059e4	     0xf85b7fcffff	                           jne 0x40056a1	       335	ldexp.c	FUNCTION_13	IF_4
0x40059ea	      0xe800000000	                          call 0x40059ef	       336	ldexp.c	FUNCTION_13	CALL_4
0x40059ef	        0x49894618	             mov qword [r14 + 0x18], rax	       336	ldexp.c	FUNCTION_13	CALL_4
0x40059f3	    0x488b05000000	            mov rax, qword [0x040059fa] 	       336	ldexp.c	FUNCTION_13	CALL_4
0x40059fa	      0xe9a2fcffff	                           jmp 0x40056a1	       336	ldexp.c	FUNCTION_13	CALL_4
0x40059ff	              0x90	                                     nop	       336	ldexp.c	FUNCTION_13	CALL_4
0x4005a00	    0x488b3d000000	            mov rdi, qword [0x04005a07] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4005a07	          0x4c89ea	                            mov rdx, r13	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4005a0a	      0xbe00000000	                              mov esi, 0	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4005a0f	        0x488b4708	                mov rax, qword [rdi + 8]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4005a13	    0xff9028030000	                call qword [rax + 0x328]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4005a19	      0xe9befcffff	                           jmp 0x40056dc	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4005a1e	      0x3d26010000	                          cmp eax, 0x126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005a23	            0x758e	                           jne 0x40059b3	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005a25	    0x448b15000000	           mov r10d, dword [0x04005a2c] 	       343	ldexp.c	FUNCTION_14	IF_1
0x4005a2c	          0x4585d2	                         test r10d, r10d	       343	ldexp.c	FUNCTION_14	IF_1
0x4005a2f	            0x742b	                            je 0x4005a5c	       343	ldexp.c	FUNCTION_14	IF_1
0x4005a31	    0x48813d000000	               cmp qword [0x04005a3c], 0	       344	ldexp.c	FUNCTION_14	IF_1
0x4005a3c	            0x751e	                           jne 0x4005a5c	       344	ldexp.c	FUNCTION_14	IF_1
0x4005a3e	    0x8b0500000000	            mov eax, dword [0x04005a44] 	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4005a44	          0x8d50ff	                      lea edx, [rax - 1]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4005a47	          0x83fa01	                              cmp edx, 1	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4005a4a	     0xf861d030000	                           jbe 0x4005d6d	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4005a50	          0x83e804	                              sub eax, 4	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4005a53	          0x83f802	                              cmp eax, 2	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4005a56	     0xf86effcffff	                           jbe 0x400574b	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4005a5c	    0xc70500000000	               mov dword [0x04005a66], 0	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x4005a66	      0xe989f9ffff	                           jmp 0x40053f4	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x4005a6b	    0x448b1d000000	           mov r11d, dword [0x04005a72] 	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4005a72	          0x4585db	                         test r11d, r11d	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4005a75	            0x74e5	                            je 0x4005a5c	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4005a77	    0x488b05000000	            mov rax, qword [0x04005a7e] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4005a7e	    0x488b0d000000	            mov rcx, qword [0x04005a85] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4005a85	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x4005a88	            0x740b	                            je 0x4005a95	       183	ldexp.c	FUNCTION_3	IF_1
0x4005a8a	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4005a8e	    0x48030d000000	             add rcx, qword [0x04005a95]	       184	ldexp.c	FUNCTION_3	IF_1
0x4005a95	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4005a99	    0x48c705000000	               mov qword [0x04005aa4], 0	       185	ldexp.c	FUNCTION_3
0x4005aa4	    0xc70500000000	               mov dword [0x04005aae], 0	       186	ldexp.c	FUNCTION_3
0x4005aae	    0x488b2d000000	            mov rbp, qword [0x04005ab5] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4005ab5	            0x7611	                           jbe 0x4005ac8	      1615	ldexp.c	FUNCTION_46	IF_1
0x4005ab7	      0x488d440dff	                lea rax, [rbp + rcx - 1]	      1619	ldexp.c	FUNCTION_46
0x4005abc	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4005abe	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4005ac1	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4005ac5	          0x4889c5	                            mov rbp, rax	      1619	ldexp.c	FUNCTION_46
0x4005ac8	    0x48892d000000	            mov qword [0x04005acf], rbp 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4005acf	      0xe94ff9ffff	                           jmp 0x4005423	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4005ad4	            0x31ed	                            xor ebp, ebp	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005ad6	    0x48833d000000	               cmp qword [0x04005ade], 0	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005ade	        0x400f94c5	                                sete bpl	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005ae2	    0x48892d000000	            mov qword [0x04005ae9], rbp 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005ae9	      0xe935f9ffff	                           jmp 0x4005423	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005aee	    0x488b05000000	            mov rax, qword [0x04005af5] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4005af5	    0x488b2d000000	            mov rbp, qword [0x04005afc] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4005afc	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x4005aff	            0x7412	                            je 0x4005b13	       183	ldexp.c	FUNCTION_3	IF_1
0x4005b01	        0x488b6828	            mov rbp, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4005b05	    0x48032d000000	             add rbp, qword [0x04005b0c]	       184	ldexp.c	FUNCTION_3	IF_1
0x4005b0c	    0x48892d000000	            mov qword [0x04005b13], rbp 	       184	ldexp.c	FUNCTION_3	IF_1
0x4005b13	    0x48c705000000	               mov qword [0x04005b1e], 0	       185	ldexp.c	FUNCTION_3
0x4005b1e	    0xc70500000000	               mov dword [0x04005b28], 0	       186	ldexp.c	FUNCTION_3
0x4005b28	      0xe9f6f8ffff	                           jmp 0x4005423	       186	ldexp.c	FUNCTION_3
0x4005b2d	    0x488b2d000000	            mov rbp, qword [0x04005b34] 	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005b34	          0x48f7d5	                                 not rbp	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005b37	    0x48892d000000	            mov qword [0x04005b3e], rbp 	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005b3e	      0xe9e0f8ffff	                           jmp 0x4005423	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005b43	    0x488b2d000000	            mov rbp, qword [0x04005b4a] 	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005b4a	          0x48f7dd	                                 neg rbp	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005b4d	    0x48892d000000	            mov qword [0x04005b54], rbp 	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005b54	      0xe9caf8ffff	                           jmp 0x4005423	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4005b59	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4005b5d	    0x488b3d000000	            mov rdi, qword [0x04005b64] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4005b64	            0x31c9	                            xor ecx, ecx	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4005b66	    0x41b801000000	                              mov r8d, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4005b6c	      0xba01000000	                              mov edx, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4005b71	      0xe800000000	                          call 0x4005b76	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4005b76	          0x4885c0	                           test rax, rax	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x4005b79	          0x4989c5	                            mov r13, rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4005b7c	     0xf85a1faffff	                           jne 0x4005623	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x4005b82	        0x4c8b7318	            mov r14, qword [rbx + 0x18] 	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005b86	            0x31ff	                            xor edi, edi	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005b88	      0xba05000000	                              mov edx, 5	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005b8d	      0xbe00000000	                              mov esi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005b92	      0xe800000000	                          call 0x4005b97	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005b97	          0x4c89f6	                            mov rsi, r14	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005b9a	          0x4889c7	                            mov rdi, rax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005b9d	            0x31c0	                            xor eax, eax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005b9f	      0xe800000000	                          call 0x4005ba4	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005ba4	      0xe97afaffff	                           jmp 0x4005623	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005ba9	     0xf1f80000000	                         nop dword [rax]	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4005bb0	    0x488b05000000	            mov rax, qword [0x04005bb7] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4005bb7	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4005bbd	     0xf8464010000	                            je 0x4005d27	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4005bc3	    0x488b15000000	            mov rdx, qword [0x04005bca] 	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4005bca	          0x4885d2	                           test rdx, rdx	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4005bcd	     0xf848b010000	                            je 0x4005d5e	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4005bd3	    0x833d00000000	               cmp dword [0x04005bda], 2	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4005bda	            0x760c	                           jbe 0x4005be8	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4005bdc	    0x483d00000000	                              cmp rax, 0	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4005be2	     0xf8563fbffff	                           jne 0x400574b	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4005be8	    0x488b0d000000	            mov rcx, qword [0x04005bef] 	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4005bef	    0x4c8b2d000000	            mov r13, qword [0x04005bf6] 	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4005bf6	          0x4885c9	                           test rcx, rcx	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4005bf9	     0xf843a010000	                            je 0x4005d39	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4005bff	        0x4c036928	             add r13, qword [rcx + 0x28]	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4005c03	    0x4c8b35000000	            mov r14, qword [0x04005c0a] 	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4005c0a	          0x4d39ee	                            cmp r14, r13	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4005c0d	     0xf86fe000000	                           jbe 0x4005d11	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4005c13	    0x483d00000000	                              cmp rax, 0	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4005c19	     0xf84f2000000	                            je 0x4005d11	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4005c1f	      0xba05000000	                              mov edx, 5	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c24	      0xbe00000000	                              mov esi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c29	            0x31ff	                            xor edi, edi	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c2b	      0xe800000000	                          call 0x4005c30	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c30	          0x4c89e9	                            mov rcx, r13	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c33	          0x4889c7	                            mov rdi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c36	          0x4c89f2	                            mov rdx, r14	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c39	            0x31c0	                            xor eax, eax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c3b	          0x4889de	                            mov rsi, rbx	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c3e	      0xe800000000	                          call 0x4005c43	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c43	    0x8b0500000000	            mov eax, dword [0x04005c49] 	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c49	      0xe99ef7ffff	                           jmp 0x40053ec	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4005c4e	            0x31ff	                            xor edi, edi	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c50	      0xba05000000	                              mov edx, 5	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c55	      0xbe00000000	                              mov esi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c5a	      0xe800000000	                          call 0x4005c5f	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c5f	          0x4c89fe	                            mov rsi, r15	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c62	          0x4889c7	                            mov rdi, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c65	            0x31c0	                            xor eax, eax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c67	      0xe800000000	                          call 0x4005c6c	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c6c	      0xe9f2f9ffff	                           jmp 0x4005663	       314	ldexp.c	FUNCTION_13	CALL_3
0x4005c71	    0x488b05000000	            mov rax, qword [0x04005c78] 	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005c78	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005c7e	     0xf8493fcffff	                            je 0x4005917	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005c84	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005c8a	     0xf8487fcffff	                            je 0x4005917	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005c90	    0x8b3d00000000	            mov edi, dword [0x04005c96] 	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005c96	            0x85ff	                           test edi, edi	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005c98	            0x746b	                            je 0x4005d05	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005c9a	    0x48833d000000	               cmp qword [0x04005ca2], 0	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005ca2	            0x7561	                           jne 0x4005d05	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005ca4	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x4005ca8	          0x8b7110	            mov esi, dword [rcx + 0x10] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x4005cab	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x4005cae	     0xf848e000000	                            je 0x4005d42	       931	ldexp.c	FUNCTION_23
0x4005cb4	            0x8b39	                    mov edi, dword [rcx]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4005cb6	        0x488d5118	                   lea rdx, [rcx + 0x18]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4005cba	      0xe800000000	                          call 0x4005cbf	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4005cbf	            0x85c0	                           test eax, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4005cc1	     0xf8550fcffff	                           jne 0x4005917	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4005cc7	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x4005ccb	        0x83781000	               cmp dword [rax + 0x10], 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x4005ccf	            0x7509	                           jne 0x4005cda	       977	ldexp.c	FUNCTION_26	CALL_2
0x4005cd1	          0x83382b	                   cmp dword [rax], 0x2b	       975	ldexp.c	FUNCTION_26
0x4005cd4	     0xf84b0000000	                            je 0x4005d8a	       975	ldexp.c	FUNCTION_26
0x4005cda	    0x813817010000	                  cmp dword [rax], 0x117	       987	ldexp.c	FUNCTION_27	IF_1
0x4005ce0	     0xf8552010000	                           jne 0x4005e38	       987	ldexp.c	FUNCTION_27	IF_1
0x4005ce6	        0x83781002	               cmp dword [rax + 0x10], 2	       987	ldexp.c	FUNCTION_27	IF_1
0x4005cea	     0xf8548010000	                           jne 0x4005e38	       987	ldexp.c	FUNCTION_27	IF_1
0x4005cf0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       989	ldexp.c	FUNCTION_27	IF_1
0x4005cf4	    0x488b05000000	            mov rax, qword [0x04005cfb] 	       989	ldexp.c	FUNCTION_27	IF_1
0x4005cfb	        0x83791001	               cmp dword [rcx + 0x10], 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4005cff	     0xf84de000000	                            je 0x4005de3	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4005d05	    0x814820000020	         or dword [rax + 0x20], 0x200000	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005d0c	      0xe906fcffff	                           jmp 0x4005917	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4005d11	    0x4c892d000000	            mov qword [0x04005d18], r13 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4005d18	          0x4c892a	                    mov qword [rdx], r13	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4005d1b	    0x488b2d000000	            mov rbp, qword [0x04005d22] 	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4005d22	      0xe9fcf6ffff	                           jmp 0x4005423	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4005d27	    0x833d00000000	               cmp dword [0x04005d2e], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4005d2e	     0xf85fefbffff	                           jne 0x4005932	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4005d34	      0xe912faffff	                           jmp 0x400574b	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4005d39	        0x4c036828	             add r13, qword [rax + 0x28]	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x4005d3d	      0xe9c1feffff	                           jmp 0x4005c03	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x4005d42	      0x4883791800	               cmp qword [rcx + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4005d47	     0xf8567ffffff	                           jne 0x4005cb4	       931	ldexp.c	FUNCTION_23
0x4005d4d	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4005d53	     0xf856afeffff	                           jne 0x4005bc3	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4005d59	      0xe9edf9ffff	                           jmp 0x400574b	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4005d5e	      0xba05000000	                              mov edx, 5	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005d63	      0xbe00000000	                              mov esi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005d68	      0xe9cffbffff	                           jmp 0x400593c	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4005d6d	    0x488b2d000000	            mov rbp, qword [0x04005d74] 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4005d74	    0xc70500000000	               mov dword [0x04005d7e], 3	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4005d7e	    0x48892d000000	            mov qword [0x04005d85], rbp 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4005d85	      0xe999f6ffff	                           jmp 0x4005423	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4005d8a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       976	ldexp.c	FUNCTION_26	CALL_1
0x4005d8e	        0x837a1003	               cmp dword [rdx + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x4005d92	     0xf8542ffffff	                           jne 0x4005cda	       920	ldexp.c	FUNCTION_22
0x4005d98	    0x813a03010000	                  cmp dword [rdx], 0x103	       920	ldexp.c	FUNCTION_22
0x4005d9e	     0xf8536ffffff	                           jne 0x4005cda	       920	ldexp.c	FUNCTION_22
0x4005da4	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       921	ldexp.c	FUNCTION_22
0x4005da8	          0x803a2e	                    cmp byte [rdx], 0x2e	       921	ldexp.c	FUNCTION_22
0x4005dab	     0xf8529ffffff	                           jne 0x4005cda	       921	ldexp.c	FUNCTION_22
0x4005db1	        0x807a0100	                   cmp byte [rdx + 1], 0	       922	ldexp.c	FUNCTION_22
0x4005db5	     0xf851fffffff	                           jne 0x4005cda	       922	ldexp.c	FUNCTION_22
0x4005dbb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4005dbf	          0x8b7010	            mov esi, dword [rax + 0x10] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4005dc2	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x4005dc5	            0x747d	                            je 0x4005e44	       931	ldexp.c	FUNCTION_23
0x4005dc7	            0x8b38	                    mov edi, dword [rax]	       978	ldexp.c	FUNCTION_26	CALL_3
0x4005dc9	        0x488d5018	                   lea rdx, [rax + 0x18]	       978	ldexp.c	FUNCTION_26	CALL_3
0x4005dcd	      0xe800000000	                          call 0x4005dd2	       978	ldexp.c	FUNCTION_26	CALL_3
0x4005dd2	            0x85c0	                           test eax, eax	       978	ldexp.c	FUNCTION_26	CALL_3
0x4005dd4	     0xf853dfbffff	                           jne 0x4005917	       978	ldexp.c	FUNCTION_26	CALL_3
0x4005dda	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       978	ldexp.c	FUNCTION_26	CALL_3
0x4005dde	      0xe9f7feffff	                           jmp 0x4005cda	       978	ldexp.c	FUNCTION_26	CALL_3
0x4005de3	        0x488b5118	            mov rdx, qword [rcx + 0x18] 	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4005de7	        0x837a1000	               cmp dword [rdx + 0x10], 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x4005deb	     0xf8514ffffff	                           jne 0x4005d05	       965	ldexp.c	FUNCTION_25	CALL_2
0x4005df1	    0x813a10010000	                  cmp dword [rdx], 0x110	       963	ldexp.c	FUNCTION_25
0x4005df7	     0xf8508ffffff	                           jne 0x4005d05	       963	ldexp.c	FUNCTION_25
0x4005dfd	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       964	ldexp.c	FUNCTION_25	CALL_1
0x4005e01	    0x813e03010000	                  cmp dword [rsi], 0x103	       920	ldexp.c	FUNCTION_22
0x4005e07	     0xf85f8feffff	                           jne 0x4005d05	       920	ldexp.c	FUNCTION_22
0x4005e0d	        0x837e1003	               cmp dword [rsi + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x4005e11	     0xf85eefeffff	                           jne 0x4005d05	       920	ldexp.c	FUNCTION_22
0x4005e17	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       921	ldexp.c	FUNCTION_22
0x4005e1b	          0x803e2e	                    cmp byte [rsi], 0x2e	       921	ldexp.c	FUNCTION_22
0x4005e1e	     0xf85e1feffff	                           jne 0x4005d05	       921	ldexp.c	FUNCTION_22
0x4005e24	        0x807e0100	                   cmp byte [rsi + 1], 0	       922	ldexp.c	FUNCTION_22
0x4005e28	     0xf85d7feffff	                           jne 0x4005d05	       922	ldexp.c	FUNCTION_22
0x4005e2e	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       965	ldexp.c	FUNCTION_25	CALL_2
0x4005e32	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4005e36	            0x741c	                            je 0x4005e54	       931	ldexp.c	FUNCTION_23
0x4005e38	    0x488b05000000	            mov rax, qword [0x04005e3f] 	       931	ldexp.c	FUNCTION_23
0x4005e3f	      0xe9c1feffff	                           jmp 0x4005d05	       931	ldexp.c	FUNCTION_23
0x4005e44	      0x4883781800	               cmp qword [rax + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4005e49	     0xf84c8faffff	                            je 0x4005917	       931	ldexp.c	FUNCTION_23
0x4005e4f	      0xe973ffffff	                           jmp 0x4005dc7	       931	ldexp.c	FUNCTION_23
0x4005e54	      0x4883781800	               cmp qword [rax + 0x18], 0	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4005e59	            0x75dd	                           jne 0x4005e38	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4005e5b	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4005e5f	    0x488b05000000	            mov rax, qword [0x04005e66] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4005e66	        0x837a1007	               cmp dword [rdx + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4005e6a	     0xf8595feffff	                           jne 0x4005d05	       931	ldexp.c	FUNCTION_23
0x4005e70	      0x48837a1801	               cmp qword [rdx + 0x18], 1	       931	ldexp.c	FUNCTION_23
0x4005e75	     0xf858afeffff	                           jne 0x4005d05	       931	ldexp.c	FUNCTION_23
0x4005e7b	      0xe997faffff	                           jmp 0x4005917	       931	ldexp.c	FUNCTION_23
fold_binary	DO,0:functions,0:CALL,17:WHILE,0:SWITCH,1:FOR,1:ELSE,3:IF,13	1036
0x4000120	            0x4156	                                push r14	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000122	            0x4155	                                push r13	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000124	            0x4154	                                push r12	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000126	              0x55	                                push rbp	       527	ldexp.c	ELSE_3	FUNCTION_19
0x4000127	          0x4889fd	                            mov rbp, rdi	       527	ldexp.c	ELSE_3	FUNCTION_19
0x400012a	              0x53	                                push rbx	       527	ldexp.c	ELSE_3	FUNCTION_19
0x400012b	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	       529	ldexp.c	ELSE_3	FUNCTION_19	CALL_1
0x400012f	          0x4885db	                           test rbx, rbx	      1000	ldexp.c	FUNCTION_28	IF_1
0x4000132	     0xf84e7050000	                            je 0x400071f	      1000	ldexp.c	FUNCTION_28	IF_1
0x4000138	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x400013b	          0x83f809	                              cmp eax, 9	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x400013e	     0xf87cc050000	                            ja 0x4000710	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4000144	            0x89c2	                            mov edx, eax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4000146	    0xff24d5000000	                       jmp qword [rdx*8]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x400014d	           0xf1f00	                         nop dword [rax]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4000150	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4000154	      0xe807140000	                call sym.exp_fold_tree_1	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4000159	    0x833d00000000	               cmp dword [0x04000160], 4	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4000160	     0xf841a0a0000	                            je 0x4000b80	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4000166	    0x448b25000000	           mov r12d, dword [0x0400016d] 	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x400016d	          0x4585e4	                         test r12d, r12d	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000170	     0xf847a050000	                            je 0x40006f0	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000176	    0x817d00310100	                  cmp dword [rbp], 0x131	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x400017d	     0xf84bd030000	                            je 0x4000540	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000183	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x4000187	    0x4c8b2d000000	            mov r13, qword [0x0400018e] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x400018e	    0x488b1d000000	            mov rbx, qword [0x04000195] 	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000195	      0xe8c6130000	                call sym.exp_fold_tree_1	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x400019a	    0x442125000000	            and dword [0x040001a1], r12d	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x40001a1	     0xf8464040000	                            je 0x400060b	       563	ldexp.c	ELSE_3	FUNCTION_19	IF_4
0x40001a7	    0x488b35000000	            mov rsi, qword [0x040001ae] 	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x40001ae	          0x4839de	                            cmp rsi, rbx	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x40001b1	            0x743e	                            je 0x40001f1	       565	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5
0x40001b3	          0x4885f6	                           test rsi, rsi	       569	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x40001b6	     0xf8414070000	                            je 0x40008d0	       569	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x40001bc	          0x4885db	                           test rbx, rbx	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x40001bf	     0xf848b070000	                            je 0x4000950	       570	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x40001c5	        0x488b4628	            mov rax, qword [rsi + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x40001c9	    0x480105000000	            add qword [0x040001d0], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x40001d0	      0xbe00000000	                              mov esi, 0	       574	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x40001d5	        0x4c036b28	             add r13, qword [rbx + 0x28]	       573	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x40001d9	    0x48c705000000	               mov qword [0x040001e4], 0	       185	ldexp.c	FUNCTION_3
0x40001e4	          0x4889f3	                            mov rbx, rsi	       574	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	IF_6
0x40001e7	    0xc70500000000	               mov dword [0x040001f1], 0	       186	ldexp.c	FUNCTION_3
0x40001f1	          0x8b4500	                    mov eax, dword [rbp]	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40001f4	      0x3d0e010000	                          cmp eax, 0x10e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40001f9	     0xf84560b0000	                            je 0x4000d55	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40001ff	     0xf8f4b050000	                            jg 0x4000750	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000205	          0x83f82f	                           cmp eax, 0x2f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000208	     0xf845c0b0000	                            je 0x4000d6a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400020e	     0xf8e7c060000	                           jle 0x4000890	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000214	          0x83f85e	                           cmp eax, 0x5e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000217	     0xf84c30c0000	                            je 0x4000ee0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400021d	     0xf8e05080000	                           jle 0x4000a28	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000223	          0x83f87c	                           cmp eax, 0x7c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000226	     0xf84290d0000	                            je 0x4000f55	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400022c	      0x3d0d010000	                          cmp eax, 0x10d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000231	     0xf85f6080000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000237	          0x4d85ed	                           test r13, r13	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400023a	      0xb801000000	                              mov eax, 1	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400023f	            0x750d	                           jne 0x400024e	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000241	            0x31c0	                            xor eax, eax	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000243	    0x48833d000000	               cmp qword [0x0400024b], 0	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400024b	           0xf95c0	                                setne al	       620	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400024e	    0x488905000000	            mov qword [0x04000255], rax 	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000255	      0xe9e2060000	                           jmp 0x400093c	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400025a	    0x660f1f440000	                    nop word [rax + rax]	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000260	    0x8b0500000000	            mov eax, dword [0x04000266] 	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4000266	            0x85c0	                           test eax, eax	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4000268	     0xf84b1040000	                            je 0x400071f	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400026e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4000272	    0x41bc01000000	                             mov r12d, 1	       254	ldexp.c	FUNCTION_9
0x4000278	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400027c	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4000280	        0x48034320	             add rax, qword [rbx + 0x20]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4000284	    0xc70500000000	               mov dword [0x0400028e], 1	       251	ldexp.c	FUNCTION_9
0x400028e	    0x48c705000000	               mov qword [0x04000299], 0	       253	ldexp.c	FUNCTION_9
0x4000299	    0x488915000000	            mov qword [0x040002a0], rdx 	       254	ldexp.c	FUNCTION_9
0x40002a0	    0x488905000000	            mov qword [0x040002a7], rax 	       252	ldexp.c	FUNCTION_9
0x40002a7	      0xe9cafeffff	                           jmp 0x4000176	       252	ldexp.c	FUNCTION_9
0x40002ac	         0xf1f4000	                         nop dword [rax]	       252	ldexp.c	FUNCTION_9
0x40002b0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x40002b4	      0xe8a7120000	                call sym.exp_fold_tree_1	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x40002b9	    0x448b25000000	           mov r12d, dword [0x040002c0] 	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x40002c0	          0x4585e4	                         test r12d, r12d	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x40002c3	     0xf8427040000	                            je 0x40006f0	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x40002c9	            0x8b13	                    mov edx, dword [rbx]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002cb	    0x81fa17010000	                          cmp edx, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002d1	     0xf84900e0000	                            je 0x4001167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002d7	     0xf8e83070000	                           jle 0x4000a60	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002dd	    0x81fa40010000	                          cmp edx, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002e3	     0xf84b80d0000	                            je 0x40010a1	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002e9	     0xf8e7a0d0000	                           jle 0x4001069	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002ef	    0x81fa60010000	                          cmp edx, 0x160	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002f5	     0xf840a0e0000	                            je 0x4001105	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40002fb	            0x31f6	                            xor esi, esi	       163	ldexp.c	FUNCTION_2
0x40002fd	    0x81fa67010000	                          cmp edx, 0x167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000303	    0x488b05000000	            mov rax, qword [0x0400030a] 	       161	ldexp.c	FUNCTION_2
0x400030a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       162	ldexp.c	FUNCTION_2
0x4000311	      0xbf01000000	                              mov edi, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4000316	            0x740b	                            je 0x4000323	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000318	      0xe95e070000	                           jmp 0x4000a7b	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400031d	           0xf1f00	                         nop dword [rax]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000320	          0x4889d1	                            mov rcx, rdx	       167	ldexp.c	FUNCTION_2	DO_1
0x4000323	        0x4883f801	                              cmp rax, 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4000327	        0x488d5101	                      lea rdx, [rcx + 1]	       167	ldexp.c	FUNCTION_2	DO_1
0x400032b	            0x7605	                           jbe 0x4000332	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x400032d	            0xa801	                              test al, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x400032f	           0xf45f7	                         cmovne esi, edi	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4000332	          0x48d1e8	                              shr rax, 1	       172	ldexp.c	FUNCTION_2
0x4000335	            0x75e9	                           jne 0x4000320	       172	ldexp.c	FUNCTION_2
0x4000337	        0x4883c102	                              add rcx, 2	       175	ldexp.c	FUNCTION_2	IF_2
0x400033b	            0x85f6	                           test esi, esi	       175	ldexp.c	FUNCTION_2	IF_2
0x400033d	    0x48c705000000	               mov qword [0x04000348], 0	       176	ldexp.c	FUNCTION_2
0x4000348	        0x480f45d1	                         cmovne rdx, rcx	       175	ldexp.c	FUNCTION_2	IF_2
0x400034c	    0x488915000000	            mov qword [0x04000353], rdx 	       177	ldexp.c	FUNCTION_2
0x4000353	      0xe91efeffff	                           jmp 0x4000176	       177	ldexp.c	FUNCTION_2
0x4000358	     0xf1f84000000	                   nop dword [rax + rax]	       177	ldexp.c	FUNCTION_2
0x4000360	          0x4889df	                            mov rdi, rbx	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4000363	      0xe8881c0000	                      call sym.fold_name	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4000368	      0xe9f9fdffff	                           jmp 0x4000166	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x400036d	           0xf1f00	                         nop dword [rax]	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4000370	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000374	          0x803e2e	                    cmp byte [rsi], 0x2e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000377	     0xf8433080000	                            je 0x4000bb0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x400037d	          0x4531ed	                          xor r13d, r13d	      1123	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4000380	          0x83f805	                              cmp eax, 5	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4000383	     0xf8447090000	                            je 0x4000cd0	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4000389	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x400038d	    0x488935000000	            mov qword [0x04000394], rsi 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4000394	    0x48c705000000	               mov qword [0x0400039f], 0	      1145	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x400039f	      0xe8bc110000	                call sym.exp_fold_tree_1	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x40003a4	    0x833d00000000	               cmp dword [0x040003ab], 4	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x40003ab	            0x740e	                            je 0x40003bb	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x40003ad	    0x48833d000000	               cmp qword [0x040003b5], 0	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x40003b5	     0xf841e010000	                            je 0x40004d9	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x40003bb	        0x837b1005	               cmp dword [rbx + 0x10], 5	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x40003bf	     0xf844b090000	                            je 0x4000d10	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x40003c5	          0x4d85ed	                           test r13, r13	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x40003c8	     0xf840c0e0000	                            je 0x40011da	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x40003ce	    0x448b25000000	           mov r12d, dword [0x040003d5] 	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40003d5	          0x4585e4	                         test r12d, r12d	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40003d8	     0xf85f2050000	                           jne 0x40009d0	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40003de	      0x41807d1800	                cmp byte [r13 + 0x18], 0	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40003e3	     0xf85f7000000	                           jne 0x40004e0	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40003e9	    0x48c705000000	               mov qword [0x040003f4], 0	      1178	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40003f4	    0xc70500000000	               mov dword [0x040003fe], 1	      1180	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x40003fe	    0x488b05000000	            mov rax, qword [0x04000405] 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4000405	    0x488905000000	            mov qword [0x0400040c], rax 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x400040c	         0xf1f4000	                         nop dword [rax]	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4000410	        0x4c8b7318	            mov r14, qword [rbx + 0x18] 	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4000414	            0x31c9	                            xor ecx, ecx	       309	ldexp.c	FUNCTION_13
0x4000416	      0xba01000000	                              mov edx, 1	       309	ldexp.c	FUNCTION_13
0x400041b	      0xbf00000000	                              mov edi, 0	       309	ldexp.c	FUNCTION_13
0x4000420	          0x4c89f6	                            mov rsi, r14	       309	ldexp.c	FUNCTION_13
0x4000423	      0xe800000000	                          call 0x4000428	       309	ldexp.c	FUNCTION_13
0x4000428	          0x4885c0	                           test rax, rax	       313	ldexp.c	FUNCTION_13	IF_1
0x400042b	          0x4989c4	                            mov r12, rax	       309	ldexp.c	FUNCTION_13
0x400042e	     0xf84360e0000	                            je 0x400126a	       313	ldexp.c	FUNCTION_13	IF_1
0x4000434	      0x41f6451908	               test byte [r13 + 0x19], 8	       319	ldexp.c	FUNCTION_13	IF_2
0x4000439	            0x7512	                           jne 0x400044d	       319	ldexp.c	FUNCTION_13	IF_2
0x400043b	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       320	ldexp.c	FUNCTION_13	IF_2
0x4000440	          0x83e803	                              sub eax, 3	       320	ldexp.c	FUNCTION_13	IF_2
0x4000443	            0x3c02	                               cmp al, 2	       320	ldexp.c	FUNCTION_13	IF_2
0x4000445	            0x7706	                            ja 0x400044d	       320	ldexp.c	FUNCTION_13	IF_2
0x4000447	    0x41804c242101	                 or byte [r12 + 0x21], 1	       324	ldexp.c	FUNCTION_13	IF_2
0x400044d	    0x833d00000000	               cmp dword [0x04000454], 4	       333	ldexp.c	FUNCTION_13	IF_4
0x4000454	    0x8b0500000000	            mov eax, dword [0x0400045a] 	       331	ldexp.c	FUNCTION_13
0x400045a	    0x49c744241800	               mov qword [r12 + 0x18], 0	       332	ldexp.c	FUNCTION_13
0x4000463	      0x4188442420	               mov byte [r12 + 0x20], al	       331	ldexp.c	FUNCTION_13
0x4000468	    0x488b05000000	            mov rax, qword [0x0400046f] 	       335	ldexp.c	FUNCTION_13	IF_4
0x400046f	     0xf84f50a0000	                            je 0x4000f6a	       333	ldexp.c	FUNCTION_13	IF_4
0x4000475	    0x488b15000000	            mov rdx, qword [0x0400047c] 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400047c	        0x49894528	             mov qword [r13 + 0x28], rax	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4000480	      0x41c6451803	                mov byte [r13 + 0x18], 3	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4000485	        0x49895530	             mov qword [r13 + 0x30], rdx	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4000489	        0x448b4b04	                mov r9d, dword [rbx + 4]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400048d	      0x410fb65519	           movzx edx, byte [r13 + 0x19] 	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4000492	          0x4585c9	                           test r9d, r9d	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4000495	           0xf94c0	                                 sete al	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4000498	          0xc1e002	                              shl eax, 2	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400049b	          0x83e2fb	                     and edx, 0xfffffffb	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x400049e	             0x9d0	                             or eax, edx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40004a0	          0x83c808	                               or eax, 8	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40004a3	        0x41884519	               mov byte [r13 + 0x19], al	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x40004a7	        0x448b5328	           mov r10d, dword [rbx + 0x28] 	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40004ab	          0x4585d2	                         test r10d, r10d	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40004ae	     0xf851b0b0000	                           jne 0x4000fcf	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x40004b4	    0x488b15000000	            mov rdx, qword [0x040004bb] 	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40004bb	        0x488d42ff	                      lea rax, [rdx - 1]	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40004bf	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40004c3	            0x7714	                            ja 0x40004d9	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x40004c5	    0x488b3d000000	            mov rdi, qword [0x040004cc] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40004cc	          0x4c89ee	                            mov rsi, r13	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40004cf	        0x488b4708	                mov rax, qword [rdi + 8]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40004d3	    0xff90d0020000	                call qword [rax + 0x2d0]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40004d9	    0x448b25000000	           mov r12d, dword [0x040004e0] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x40004e0	    0x48c705000000	               mov qword [0x040004eb], 0	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x40004eb	      0xe97dfcffff	                           jmp 0x400016d	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x40004f0	    0x48813d000000	               cmp qword [0x040004fb], 0	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x40004fb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x40004ff	     0xf849b0a0000	                            je 0x4000fa0	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000505	    0xc70500000000	               mov dword [0x0400050f], 1	       242	ldexp.c	FUNCTION_8
0x400050f	    0x488905000000	            mov qword [0x04000516], rax 	       243	ldexp.c	FUNCTION_8
0x4000516	    0x48c705000000	               mov qword [0x04000521], 0	       245	ldexp.c	FUNCTION_8
0x4000521	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4000525	    0x41bc01000000	                             mov r12d, 1	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x400052b	    0x488905000000	            mov qword [0x04000532], rax 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4000532	    0x817d00310100	                  cmp dword [rbp], 0x131	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000539	     0xf8544fcffff	                           jne 0x4000183	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x400053f	              0x90	                                     nop	       535	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000540	    0x488b1d000000	            mov rbx, qword [0x04000547] 	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000547	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x400054b	          0x4885db	                           test rbx, rbx	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x400054e	        0x488b6818	            mov rbp, qword [rax + 0x18] 	       542	ldexp.c	ELSE_3	FUNCTION_19	IF_1
0x4000552	            0x7518	                           jne 0x400056c	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000554	      0xe9b2000000	                           jmp 0x400060b	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000559	     0xf1f80000000	                         nop dword [rax]	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000560	          0x488b1b	                    mov rbx, qword [rbx]	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000563	          0x4885db	                           test rbx, rbx	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x4000566	     0xf849f000000	                            je 0x400060b	       543	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1
0x400056c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000570	          0x4889ee	                            mov rsi, rbp	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000573	      0xe800000000	                          call 0x4000578	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x4000578	            0x85c0	                           test eax, eax	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x400057a	            0x75e4	                           jne 0x4000560	       544	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	CALL_2
0x400057c	        0x448b4318	            mov r8d, dword [rbx + 0x18] 	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000580	          0x4585c0	                           test r8d, r8d	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000583	            0x7543	                           jne 0x40005c8	       546	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000585	    0x8b3d00000000	            mov edi, dword [0x0400058b] 	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x400058b	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x400058f	            0x85ff	                           test edi, edi	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000591	            0x7439	                            je 0x40005cc	       547	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000593	            0x31d2	                            xor edx, edx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000595	          0x4889c8	                            mov rax, rcx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x4000598	    0x48f735000000	                  div qword [0x0400059f]	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x400059f	          0x4885d2	                           test rdx, rdx	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x40005a2	            0x7428	                            je 0x40005cc	       548	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3
0x40005a4	      0xbe00000000	                              mov esi, 0	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005a9	            0x31ff	                            xor edi, edi	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005ab	      0xba05000000	                              mov edx, 5	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005b0	      0xe800000000	                          call 0x40005b5	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005b5	          0x4889ee	                            mov rsi, rbp	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005b8	          0x4889c7	                            mov rdi, rax	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005bb	            0x31c0	                            xor eax, eax	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005bd	      0xe800000000	                          call 0x40005c2	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005c2	    0x660f1f440000	                    nop word [rax + rax]	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005c8	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       549	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40005cc	    0x488b05000000	            mov rax, qword [0x040005d3] 	       260	ldexp.c	FUNCTION_10
0x40005d3	    0xc74318010000	               mov dword [rbx + 0x18], 1	       552	ldexp.c	ELSE_3	FUNCTION_19	IF_1	FOR_1	IF_2
0x40005da	    0xc70500000000	               mov dword [0x040005e4], 1	       262	ldexp.c	FUNCTION_10
0x40005e4	    0xc70500000000	               mov dword [0x040005ee], 1	       263	ldexp.c	FUNCTION_10
0x40005ee	        0x482b4828	             sub rcx, qword [rax + 0x28]	       264	ldexp.c	FUNCTION_10
0x40005f2	    0x48c705000000	               mov qword [0x040005fd], 0	       265	ldexp.c	FUNCTION_10
0x40005fd	    0x488905000000	            mov qword [0x04000604], rax 	       266	ldexp.c	FUNCTION_10
0x4000604	    0x48890d000000	            mov qword [0x0400060b], rcx 	       264	ldexp.c	FUNCTION_10
0x400060b	              0x5b	                                 pop rbx	       666	ldexp.c	FUNCTION_19	ELSE_3
0x400060c	              0x5d	                                 pop rbp	       666	ldexp.c	FUNCTION_19	ELSE_3
0x400060d	            0x415c	                                 pop r12	       666	ldexp.c	FUNCTION_19	ELSE_3
0x400060f	            0x415d	                                 pop r13	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000611	            0x415e	                                 pop r14	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000613	              0xc3	                                     ret	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000614	         0xf1f4000	                         nop dword [rax]	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000618	          0x4889df	                            mov rdi, rbx	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x400061b	      0xe800fbffff	                    call sym.fold_binary	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000620	    0x448b25000000	           mov r12d, dword [0x04000627] 	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000627	      0xe941fbffff	                           jmp 0x400016d	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x400062c	         0xf1f4000	                         nop dword [rax]	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000630	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       673	ldexp.c	FUNCTION_20	CALL_1
0x4000634	    0x4c8b25000000	            mov r12, qword [0x0400063b] 	       671	ldexp.c	FUNCTION_20
0x400063b	      0xe8200f0000	                call sym.exp_fold_tree_1	       673	ldexp.c	FUNCTION_20	CALL_1
0x4000640	    0x448b2d000000	           mov r13d, dword [0x04000647] 	       675	ldexp.c	FUNCTION_20	IF_1
0x4000647	    0x4c8925000000	            mov qword [0x0400064e], r12 	       674	ldexp.c	FUNCTION_20
0x400064e	          0x4585ed	                         test r13d, r13d	       675	ldexp.c	FUNCTION_20	IF_1
0x4000651	     0xf8499000000	                            je 0x40006f0	       675	ldexp.c	FUNCTION_20	IF_1
0x4000657	    0x48833d000000	               cmp qword [0x0400065f], 0	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x400065f	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000663	      0x480f457b20	          cmovne rdi, qword [rbx + 0x20]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000668	      0xe8f30e0000	                call sym.exp_fold_tree_1	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x400066d	    0x448b25000000	           mov r12d, dword [0x04000674] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000674	      0xe9f4faffff	                           jmp 0x400016d	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4000679	    0x488b05000000	            mov rax, qword [0x04000680] 	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000680	    0x448b25000000	           mov r12d, dword [0x04000687] 	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000687	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400068d	            0x7449	                            je 0x40006d8	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400068f	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000695	            0x7441	                            je 0x40006d8	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000697	          0x4585e4	                         test r12d, r12d	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400069a	     0xf84160d0000	                            je 0x40013b6	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40006a0	    0x48833d000000	               cmp qword [0x040006a8], 0	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40006a8	     0xf85080d0000	                           jne 0x40013b6	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40006ae	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x40006b2	          0x8b7110	            mov esi, dword [rcx + 0x10] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x40006b5	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x40006b8	     0xf848e0d0000	                            je 0x400144c	       931	ldexp.c	FUNCTION_23
0x40006be	            0x8b39	                    mov edi, dword [rcx]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40006c0	        0x488d5118	                   lea rdx, [rcx + 0x18]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40006c4	      0xe800000000	                          call 0x40006c9	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40006c9	            0x85c0	                           test eax, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40006cb	     0xf84a80c0000	                            je 0x4001379	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40006d1	    0x448b25000000	           mov r12d, dword [0x040006d8] 	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x40006d8	          0x4585e4	                         test r12d, r12d	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40006db	     0xf85ac0b0000	                           jne 0x400128d	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40006e1	    0x833d00000000	               cmp dword [0x040006e8], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40006e8	     0xf85bf0b0000	                           jne 0x40012ad	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40006ee	            0x6690	                                     nop	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40006f0	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x40006f4	      0xe8670e0000	                call sym.exp_fold_tree_1	       560	ldexp.c	ELSE_3	FUNCTION_19	CALL_6
0x40006f9	              0x5b	                                 pop rbx	       666	ldexp.c	FUNCTION_19	ELSE_3
0x40006fa	    0xc70500000000	               mov dword [0x04000704], 0	       561	ldexp.c	ELSE_3	FUNCTION_19
0x4000704	              0x5d	                                 pop rbp	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000705	            0x415c	                                 pop r12	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000707	            0x415d	                                 pop r13	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000709	            0x415e	                                 pop r14	       666	ldexp.c	FUNCTION_19	ELSE_3
0x400070b	              0xc3	                                     ret	       666	ldexp.c	FUNCTION_19	ELSE_3
0x400070c	         0xf1f4000	                         nop dword [rax]	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000710	      0xbecb040000	                          mov esi, 0x4cb	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4000715	      0xbf00000000	                              mov edi, 0	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x400071a	      0xe800000000	                          call 0x400071f	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x400071f	    0x48c705000000	               mov qword [0x0400072a], 0	        90	string3.h	FUNCTION_54	CALL_6
0x400072a	    0x48c705000000	               mov qword [0x04000735], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4000735	    0x48c705000000	               mov qword [0x04000740], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4000740	    0x48c705000000	               mov qword [0x0400074b], 0	        90	string3.h	FUNCTION_54	CALL_6
0x400074b	            0xeba3	                           jmp 0x40006f0	        90	string3.h	FUNCTION_54	CALL_6
0x400074d	           0xf1f00	                         nop dword [rax]	        90	string3.h	FUNCTION_54	CALL_6
0x4000750	      0x3d14010000	                          cmp eax, 0x114	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000755	     0xf84c2070000	                            je 0x4000f1d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400075b	            0x7f4b	                            jg 0x40007a8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400075d	      0x3d11010000	                          cmp eax, 0x111	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000762	     0xf840b070000	                            je 0x4000e73	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000768	     0xf8e7a020000	                           jle 0x40009e8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400076e	      0x3d12010000	                          cmp eax, 0x112	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000773	     0xf841d070000	                            je 0x4000e96	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000779	      0x3d13010000	                          cmp eax, 0x113	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400077e	     0xf85a9030000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000784	    0x488b0d000000	            mov rcx, qword [0x0400078b] 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400078b	          0x49d3e5	                             shl r13, cl	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400078e	          0x4839de	                            cmp rsi, rbx	       436	ldexp.c	FUNCTION_16	IF_1
0x4000791	    0x4c892d000000	            mov qword [0x04000798], r13 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000798	     0xf856dfeffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x400079e	      0xe988010000	                           jmp 0x400092b	       436	ldexp.c	FUNCTION_16	IF_1
0x40007a3	       0xf1f440000	                   nop dword [rax + rax]	       436	ldexp.c	FUNCTION_16	IF_1
0x40007a8	      0x3d25010000	                          cmp eax, 0x125	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40007ad	     0xf84ec050000	                            je 0x4000d9f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40007b3	     0xf8fe7010000	                            jg 0x40009a0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40007b9	      0x3d17010000	                          cmp eax, 0x117	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40007be	     0xf8458050000	                            je 0x4000d1c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40007c4	      0x3d24010000	                          cmp eax, 0x124	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40007c9	     0xf855e030000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40007cf	    0x8b0d00000000	            mov ecx, dword [0x040007d5] 	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x40007d5	    0xc70500000000	               mov dword [0x040007df], 1	       450	ldexp.c	ELSE_1	FUNCTION_17
0x40007df	            0x85c9	                           test ecx, ecx	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x40007e1	     0xf8412ffffff	                            je 0x40006f9	       451	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x40007e7	    0x48813d000000	               cmp qword [0x040007f2], 0	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x40007f2	     0xf8501ffffff	                           jne 0x40006f9	       452	ldexp.c	ELSE_1	FUNCTION_17	IF_1
0x40007f8	    0x488b0d000000	            mov rcx, qword [0x040007ff] 	       459	ldexp.c	FUNCTION_17	CALL_1
0x40007ff	        0x4983fd01	                              cmp r13, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000803	    0x488b35000000	            mov rsi, qword [0x0400080a] 	       457	ldexp.c	FUNCTION_17
0x400080a	          0x4889c8	                            mov rax, rcx	      1616	ldexp.c	FUNCTION_46	IF_1
0x400080d	            0x760e	                           jbe 0x400081d	      1615	ldexp.c	FUNCTION_46	IF_1
0x400080f	      0x498d440dff	                lea rax, [r13 + rcx - 1]	      1619	ldexp.c	FUNCTION_46
0x4000814	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4000816	          0x49f7f5	                                 div r13	      1619	ldexp.c	FUNCTION_46
0x4000819	        0x490fafc5	                           imul rax, r13	      1619	ldexp.c	FUNCTION_46
0x400081d	    0x8b1500000000	            mov edx, dword [0x04000823] 	       460	ldexp.c	FUNCTION_17	IF_2
0x4000823	    0x488905000000	            mov qword [0x0400082a], rax 	       459	ldexp.c	FUNCTION_17	CALL_1
0x400082a	          0x83fa04	                              cmp edx, 4	       460	ldexp.c	FUNCTION_17	IF_2
0x400082d	     0xf84d10b0000	                            je 0x4001404	       460	ldexp.c	FUNCTION_17	IF_2
0x4000833	          0x83fa05	                              cmp edx, 5	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x4000836	     0xf84a50b0000	                            je 0x40013e1	       462	ldexp.c	FUNCTION_17	ELSE_2	IF_3
0x400083c	        0x498d7dff	                      lea rdi, [r13 - 1]	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000840	          0x4821f9	                            and rcx, rdi	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000843	          0x4801c8	                            add rax, rcx	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000846	          0x83fa06	                              cmp edx, 6	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x4000849	    0x488905000000	            mov qword [0x04000850], rax 	       470	ldexp.c	FUNCTION_17	ELSE_3
0x4000850	     0xf84b5fdffff	                            je 0x400060b	       471	ldexp.c	FUNCTION_17	ELSE_3	IF_5
0x4000856	            0x85d2	                           test edx, edx	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000858	     0xf859bfeffff	                           jne 0x40006f9	       475	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400085e	    0xc70500000000	               mov dword [0x04000868], 1	       477	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000868	    0x488905000000	            mov qword [0x0400086f], rax 	       478	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400086f	    0x488935000000	            mov qword [0x04000876], rsi 	       479	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000876	    0x4c892d000000	            mov qword [0x0400087d], r13 	       480	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400087d	    0x48c705000000	               mov qword [0x04000888], 0	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000888	      0xe97efdffff	                           jmp 0x400060b	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x400088d	           0xf1f00	                         nop dword [rax]	       481	ldexp.c	FUNCTION_17	ELSE_3	ELSE_4	IF_6
0x4000890	          0x83f82a	                           cmp eax, 0x2a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000893	     0xf8425060000	                            je 0x4000ebe	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000899	     0xf8ea5020000	                           jle 0x4000b44	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400089f	          0x83f82b	                           cmp eax, 0x2b	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008a2	     0xf845b060000	                            je 0x4000f03	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008a8	          0x83f82d	                           cmp eax, 0x2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008ab	     0xf857c020000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008b1	    0x4c2b2d000000	             sub r13, qword [0x040008b8]	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008b8	          0x4839de	                            cmp rsi, rbx	       436	ldexp.c	FUNCTION_16	IF_1
0x40008bb	    0x4c892d000000	            mov qword [0x040008c2], r13 	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008c2	     0xf8543fdffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x40008c8	            0xeb61	                           jmp 0x400092b	       436	ldexp.c	FUNCTION_16	IF_1
0x40008ca	    0x660f1f440000	                    nop word [rax + rax]	       436	ldexp.c	FUNCTION_16	IF_1
0x40008d0	    0x48891d000000	            mov qword [0x040008d7], rbx 	       580	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x40008d7	          0x8b4500	                    mov eax, dword [rbp]	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008da	      0x3d0e010000	                          cmp eax, 0x10e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008df	     0xf8470040000	                            je 0x4000d55	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008e5	     0xf8f05020000	                            jg 0x4000af0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008eb	          0x83f82f	                           cmp eax, 0x2f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008ee	     0xf8471040000	                            je 0x4000d65	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008f4	     0xf8f42060000	                            jg 0x4000f3c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008fa	          0x83f82a	                           cmp eax, 0x2a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40008fd	     0xf84b6050000	                            je 0x4000eb9	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000903	     0xf8fec050000	                            jg 0x4000ef5	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000909	          0x83f825	                           cmp eax, 0x25	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400090c	     0xf841e0a0000	                            je 0x4001330	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000912	          0x83f826	                           cmp eax, 0x26	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000915	     0xf8512020000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400091b	    0x4c212d000000	             and qword [0x04000922], r13	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000922	          0x4885db	                           test rbx, rbx	       436	ldexp.c	FUNCTION_16	IF_1
0x4000925	     0xf85e0fcffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x400092b	    0x48813d000000	               cmp qword [0x04000936], 0	       438	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4000936	     0xf84be090000	                            je 0x40012fa	       438	ldexp.c	FUNCTION_16	IF_1	IF_2
0x400093c	    0x48c705000000	               mov qword [0x04000947], 0	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000947	      0xe9bffcffff	                           jmp 0x400060b	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400094c	         0xf1f4000	                         nop dword [rax]	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000950	          0x8b4500	                    mov eax, dword [rbp]	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000953	      0x3d0e010000	                          cmp eax, 0x10e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000958	     0xf84f7030000	                            je 0x4000d55	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400095e	     0xf8f3c010000	                            jg 0x4000aa0	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000964	          0x83f82f	                           cmp eax, 0x2f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000967	     0xf84fd030000	                            je 0x4000d6a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400096d	     0xf8f7a060000	                            jg 0x4000fed	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000973	          0x83f82a	                           cmp eax, 0x2a	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000976	     0xf845b090000	                            je 0x40012d7	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400097c	     0xf8fae080000	                            jg 0x4001230	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000982	          0x83f825	                           cmp eax, 0x25	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000985	     0xf84c2010000	                            je 0x4000b4d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400098b	          0x83f826	                           cmp eax, 0x26	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400098e	     0xf8599010000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000994	    0x4c212d000000	             and qword [0x0400099b], r13	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400099b	      0xe96bfcffff	                           jmp 0x400060b	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009a0	      0x3d45010000	                          cmp eax, 0x145	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009a5	     0xf8498030000	                            je 0x4000d43	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009ab	      0x3d46010000	                          cmp eax, 0x146	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009b0	     0xf8577010000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009b6	    0x4c392d000000	            cmp qword [0x040009bd], r13 	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x40009bd	     0xf8648fcffff	                           jbe 0x400060b	       646	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_13
0x40009c3	    0x4c892d000000	            mov qword [0x040009ca], r13 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009ca	      0xe93cfcffff	                           jmp 0x400060b	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009cf	              0x90	                                     nop	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009d0	    0x48833d000000	               cmp qword [0x040009d8], 0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40009d8	     0xf8532faffff	                           jne 0x4000410	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40009de	      0xe91bfaffff	                           jmp 0x40003fe	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40009e3	       0xf1f440000	                   nop dword [rax + rax]	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x40009e8	      0x3d0f010000	                          cmp eax, 0x10f	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009ed	     0xf849b030000	                            je 0x4000d8e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009f3	      0x3d10010000	                          cmp eax, 0x110	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009f8	     0xf852f010000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40009fe	            0x31c0	                            xor eax, eax	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a00	    0x4c392d000000	            cmp qword [0x04000a07], r13 	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a07	    0x48c705000000	               mov qword [0x04000a12], 0	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a12	           0xf95c0	                                setne al	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a15	    0x488905000000	            mov qword [0x04000a1c], rax 	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a1c	      0xe9eafbffff	                           jmp 0x400060b	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a21	     0xf1f80000000	                         nop dword [rax]	       614	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a28	          0x83f83c	                           cmp eax, 0x3c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a2b	     0xf841f040000	                            je 0x4000e50	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a31	          0x83f83e	                           cmp eax, 0x3e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a34	     0xf85f3000000	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a3a	            0x31c0	                            xor eax, eax	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a3c	    0x4c392d000000	            cmp qword [0x04000a43], r13 	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a43	    0x48c705000000	               mov qword [0x04000a4e], 0	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a4e	           0xf92c0	                                 setb al	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a51	    0x488905000000	            mov qword [0x04000a58], rax 	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a58	      0xe9aefbffff	                           jmp 0x400060b	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a5d	           0xf1f00	                         nop dword [rax]	       616	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000a60	          0x83fa2d	                           cmp edx, 0x2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000a63	     0xf84f2060000	                            je 0x400115b	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000a69	          0x83fa7e	                           cmp edx, 0x7e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000a6c	     0xf84dd060000	                            je 0x400114f	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000a72	          0x83fa21	                           cmp edx, 0x21	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000a75	     0xf84bb060000	                            je 0x4001136	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4000a7b	      0xbe9f010000	                          mov esi, 0x19f	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000a80	      0xbf00000000	                              mov edi, 0	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000a85	      0xe800000000	                          call 0x4000a8a	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000a8a	    0x448b25000000	           mov r12d, dword [0x04000a91] 	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000a91	      0xe9d7f6ffff	                           jmp 0x400016d	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000a96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4000aa0	      0x3d14010000	                          cmp eax, 0x114	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000aa5	     0xf8440080000	                            je 0x40012eb	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000aab	     0xf8ff7fcffff	                            jg 0x40007a8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ab1	      0x3d11010000	                          cmp eax, 0x111	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ab6	     0xf84b7030000	                            je 0x4000e73	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000abc	     0xf8e26ffffff	                           jle 0x40009e8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ac2	      0x3d12010000	                          cmp eax, 0x112	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ac7	     0xf84c9030000	                            je 0x4000e96	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000acd	      0x3d13010000	                          cmp eax, 0x113	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ad2	            0x7559	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ad4	    0x488b0d000000	            mov rcx, qword [0x04000adb] 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000adb	          0x49d3e5	                             shl r13, cl	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ade	    0x4c892d000000	            mov qword [0x04000ae5], r13 	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ae5	      0xe921fbffff	                           jmp 0x400060b	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000aea	    0x660f1f440000	                    nop word [rax + rax]	       608	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000af0	      0x3d14010000	                          cmp eax, 0x114	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000af5	     0xf841d040000	                            je 0x4000f18	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000afb	     0xf8fa7fcffff	                            jg 0x40007a8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b01	      0x3d11010000	                          cmp eax, 0x111	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b06	     0xf8467030000	                            je 0x4000e73	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b0c	     0xf8ed6feffff	                           jle 0x40009e8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b12	      0x3d12010000	                          cmp eax, 0x112	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b17	     0xf8479030000	                            je 0x4000e96	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b1d	          0x4889de	                            mov rsi, rbx	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000b20	            0x31db	                            xor ebx, ebx	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000b22	      0x3d13010000	                          cmp eax, 0x113	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b27	     0xf8457fcffff	                            je 0x4000784	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b2d	              0x5b	                                 pop rbx	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000b2e	              0x5d	                                 pop rbp	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000b2f	            0x415c	                                 pop r12	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000b31	            0x415d	                                 pop r13	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000b33	            0x415e	                                 pop r14	       666	ldexp.c	FUNCTION_19	ELSE_3
0x4000b35	      0xbe97020000	                          mov esi, 0x297	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4000b3a	      0xbf00000000	                              mov edi, 0	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4000b3f	      0xe900000000	                           jmp 0x4000b44	       663	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_17
0x4000b44	          0x83f825	                           cmp eax, 0x25	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b47	     0xf8508070000	                           jne 0x4001255	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000b4d	    0x488b0d000000	            mov rcx, qword [0x04000b54] 	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000b54	          0x4885c9	                           test rcx, rcx	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000b57	     0xf84ef040000	                            je 0x400104c	       623	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000b5d	          0x4c89e8	                            mov rax, r13	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000b60	            0x4899	                                     cqo	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000b62	          0x48f7f9	                                idiv rcx	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000b65	    0x488915000000	            mov qword [0x04000b6c], rdx 	       624	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_8
0x4000b6c	          0x4839f3	                            cmp rbx, rsi	       436	ldexp.c	FUNCTION_16	IF_1
0x4000b6f	     0xf8596faffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000b75	      0xe9b1fdffff	                           jmp 0x400092b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000b7a	    0x660f1f440000	                    nop word [rax + rax]	       436	ldexp.c	FUNCTION_16	IF_1
0x4000b80	    0x48833d000000	               cmp qword [0x04000b88], 0	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4000b88	     0xf85d8f5ffff	                           jne 0x4000166	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4000b8e	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4000b92	      0xbf00000000	                              mov edi, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4000b97	            0x31c0	                            xor eax, eax	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4000b99	      0xe800000000	                          call 0x4000b9e	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4000b9e	    0x448b25000000	           mov r12d, dword [0x04000ba5] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4000ba5	      0xe9c3f5ffff	                           jmp 0x400016d	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4000baa	    0x660f1f440000	                    nop word [rax + rax]	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4000bb0	        0x807e0100	                   cmp byte [rsi + 1], 0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000bb4	     0xf85c3f7ffff	                           jne 0x400037d	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4000bba	          0x83f804	                              cmp eax, 4	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4000bbd	            0x741e	                            je 0x4000bdd	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4000bbf	      0xbe00000000	                              mov esi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000bc4	            0x31ff	                            xor edi, edi	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000bc6	      0xba05000000	                              mov edx, 5	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000bcb	      0xe800000000	                          call 0x4000bd0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000bd0	          0x4889de	                            mov rsi, rbx	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000bd3	          0x4889c7	                            mov rdi, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000bd6	            0x31c0	                            xor eax, eax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000bd8	      0xe800000000	                          call 0x4000bdd	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4000bdd	    0x448b25000000	           mov r12d, dword [0x04000be4] 	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000be4	          0x4585e4	                         test r12d, r12d	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000be7	     0xf8432fbffff	                            je 0x400071f	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000bed	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4000bf1	    0xc70500000000	               mov dword [0x04000bfb], 1	      1057	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000bfb	      0xe860090000	                call sym.exp_fold_tree_1	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4000c00	    0x833d00000000	               cmp dword [0x04000c07], 1	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000c07	    0xc70500000000	               mov dword [0x04000c11], 0	      1059	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4000c11	     0xf8462faffff	                            je 0x4000679	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4000c17	    0x448b25000000	           mov r12d, dword [0x04000c1e] 	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000c1e	          0x4585e4	                         test r12d, r12d	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000c21	     0xf8486060000	                            je 0x40012ad	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000c27	    0x488b05000000	            mov rax, qword [0x04000c2e] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000c2e	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000c34	     0xf8473060000	                            je 0x40012ad	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4000c3a	    0x488b15000000	            mov rdx, qword [0x04000c41] 	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4000c41	          0x4885d2	                           test rdx, rdx	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4000c44	     0xf84cd070000	                            je 0x4001417	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4000c4a	    0x833d00000000	               cmp dword [0x04000c51], 2	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000c51	            0x760c	                           jbe 0x4000c5f	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000c53	    0x483d00000000	                              cmp rax, 0	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000c59	     0xf8517f5ffff	                           jne 0x4000176	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000c5f	    0x488b0d000000	            mov rcx, qword [0x04000c66] 	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4000c66	    0x4c8b2d000000	            mov r13, qword [0x04000c6d] 	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4000c6d	          0x4885c9	                           test rcx, rcx	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4000c70	     0xf84cd070000	                            je 0x4001443	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4000c76	        0x4c036928	             add r13, qword [rcx + 0x28]	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4000c7a	    0x483d00000000	                              cmp rax, 0	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000c80	    0x4c8b35000000	            mov r14, qword [0x04000c87] 	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000c87	     0xf84dd060000	                            je 0x400136a	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000c8d	          0x4d39ee	                            cmp r14, r13	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000c90	     0xf86d4060000	                           jbe 0x400136a	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4000c96	      0xba05000000	                              mov edx, 5	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000c9b	      0xbe00000000	                              mov esi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000ca0	            0x31ff	                            xor edi, edi	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000ca2	      0xe800000000	                          call 0x4000ca7	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000ca7	          0x4c89e9	                            mov rcx, r13	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000caa	          0x4889c7	                            mov rdi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000cad	          0x4c89f2	                            mov rdx, r14	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000cb0	          0x4889de	                            mov rsi, rbx	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000cb3	            0x31c0	                            xor eax, eax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000cb5	      0xe800000000	                          call 0x4000cba	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000cba	    0x448b25000000	           mov r12d, dword [0x04000cc1] 	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000cc1	      0xe9a7f4ffff	                           jmp 0x400016d	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000cc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4000cd0	    0x488b3d000000	            mov rdi, qword [0x04000cd7] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000cd7	            0x31c9	                            xor ecx, ecx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000cd9	            0x31d2	                            xor edx, edx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000cdb	    0x41b801000000	                              mov r8d, 1	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000ce1	      0xe800000000	                          call 0x4000ce6	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000ce6	          0x4885c0	                           test rax, rax	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000ce9	          0x4989c5	                            mov r13, rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4000cec	     0xf8474f4ffff	                            je 0x4000166	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000cf2	        0x80781802	                cmp byte [rax + 0x18], 2	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000cf6	            0x760a	                           jbe 0x4000d02	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000cf8	        0xf6401904	               test byte [rax + 0x19], 4	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000cfc	     0xf8464f4ffff	                            je 0x4000166	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000d02	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000d06	      0xe97ef6ffff	                           jmp 0x4000389	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000d0b	       0xf1f440000	                   nop dword [rax + rax]	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4000d10	    0xc74310060000	               mov dword [rbx + 0x10], 6	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4000d17	      0xe9a9f6ffff	                           jmp 0x40003c5	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4000d1c	    0x488b0d000000	            mov rcx, qword [0x04000d23] 	       651	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_14
0x4000d23	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000d27	     0xf8696fcffff	                           jbe 0x40009c3	      1615	ldexp.c	FUNCTION_46	IF_1
0x4000d2d	      0x4a8d4429ff	                lea rax, [rcx + r13 - 1]	      1619	ldexp.c	FUNCTION_46
0x4000d32	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4000d34	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4000d37	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4000d3b	          0x4989c5	                            mov r13, rax	      1619	ldexp.c	FUNCTION_46
0x4000d3e	      0xe980fcffff	                           jmp 0x40009c3	      1619	ldexp.c	FUNCTION_46
0x4000d43	    0x4c392d000000	            cmp qword [0x04000d4a], r13 	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000d4a	     0xf8273fcffff	                            jb 0x40009c3	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000d50	      0xe9b6f8ffff	                           jmp 0x400060b	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000d55	            0x31c0	                            xor eax, eax	       641	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	IF_12
0x4000d57	          0x4d85ed	                           test r13, r13	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d5a	     0xf84eef4ffff	                            je 0x400024e	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d60	      0xe9dcf4ffff	                           jmp 0x4000241	       619	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d65	          0x4889de	                            mov rsi, rbx	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000d68	            0x31db	                            xor ebx, ebx	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000d6a	    0x488b0d000000	            mov rcx, qword [0x04000d71] 	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000d71	          0x4885c9	                           test rcx, rcx	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000d74	     0xf8497020000	                            je 0x4001011	       632	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000d7a	          0x4c89e8	                            mov rax, r13	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000d7d	            0x4899	                                     cqo	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000d7f	          0x48f7f9	                                idiv rcx	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000d82	    0x488905000000	            mov qword [0x04000d89], rax 	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000d89	      0xe9defdffff	                           jmp 0x4000b6c	       633	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	IF_10
0x4000d8e	            0x31c0	                            xor eax, eax	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d90	    0x4c392d000000	            cmp qword [0x04000d97], r13 	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d97	           0xf94c0	                                 sete al	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d9a	      0xe9aff4ffff	                           jmp 0x400024e	       613	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000d9f	    0x8b1500000000	            mov edx, dword [0x04000da5] 	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000da5	    0x488b05000000	            mov rax, qword [0x04000dac] 	       495	ldexp.c	ELSE_5	FUNCTION_18
0x4000dac	    0xc70500000000	               mov dword [0x04000db6], 2	       494	ldexp.c	ELSE_5	FUNCTION_18
0x4000db6	            0x85d2	                           test edx, edx	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000db8	    0x488905000000	            mov qword [0x04000dbf], rax 	       495	ldexp.c	ELSE_5	FUNCTION_18
0x4000dbf	     0xf8434f9ffff	                            je 0x40006f9	       496	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000dc5	    0x48813d000000	               cmp qword [0x04000dd0], 0	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000dd0	     0xf8523f9ffff	                           jne 0x40006f9	       497	ldexp.c	ELSE_5	FUNCTION_18	IF_1
0x4000dd6	    0x8b0d00000000	            mov ecx, dword [0x04000ddc] 	       499	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000ddc	          0x83f901	                              cmp ecx, 1	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000ddf	          0x8d79fc	                      lea edi, [rcx - 4]	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000de2	           0xf94c2	                                 sete dl	       500	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000de5	          0x83f904	                              cmp ecx, 4	       501	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000de8	        0x400f94c6	                                sete sil	       501	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000dec	          0x83ff02	                              cmp edi, 2	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000def	     0xf8645050000	                           jbe 0x400133a	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000df5	            0x84d2	                             test dl, dl	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000df7	     0xf84fcf8ffff	                            je 0x40006f9	       502	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2
0x4000dfd	        0x4a8d3428	                    lea rsi, [rax + r13]	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e01	          0x83f904	                              cmp ecx, 4	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e04	    0x488935000000	            mov qword [0x04000e0b], rsi 	       506	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4000e0b	     0xf853a050000	                           jne 0x400134b	       508	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e11	    0x488b15000000	            mov rdx, qword [0x04000e18] 	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e18	        0x488d7aff	                      lea rdi, [rdx - 1]	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e1c	          0x4885f7	                           test rdi, rsi	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e1f	     0xf8426050000	                            je 0x400134b	       509	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e25	      0x488d4c32ff	                lea rcx, [rdx + rsi - 1]	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e2a	          0x48f7da	                                 neg rdx	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e2d	          0x4821ca	                            and rdx, rcx	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e30	    0x488915000000	            mov qword [0x04000e37], rdx 	       512	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e37	          0x4829c2	                            sub rdx, rax	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e3a	    0x488915000000	            mov qword [0x04000e41], rdx 	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e41	      0xe9c5f7ffff	                           jmp 0x400060b	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       513	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_4
0x4000e50	            0x31c0	                            xor eax, eax	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e52	    0x4c392d000000	            cmp qword [0x04000e59], r13 	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e59	    0x48c705000000	               mov qword [0x04000e64], 0	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e64	           0xf97c0	                                 seta al	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e67	    0x488905000000	            mov qword [0x04000e6e], rax 	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e6e	      0xe998f7ffff	                           jmp 0x400060b	       615	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e73	            0x31c0	                            xor eax, eax	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e75	    0x4c392d000000	            cmp qword [0x04000e7c], r13 	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e7c	    0x48c705000000	               mov qword [0x04000e87], 0	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e87	           0xf93c0	                                setae al	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e8a	    0x488905000000	            mov qword [0x04000e91], rax 	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e91	      0xe975f7ffff	                           jmp 0x400060b	       617	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e96	            0x31c0	                            xor eax, eax	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e98	    0x4c392d000000	            cmp qword [0x04000e9f], r13 	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000e9f	    0x48c705000000	               mov qword [0x04000eaa], 0	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000eaa	           0xf96c0	                                setbe al	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ead	    0x488905000000	            mov qword [0x04000eb4], rax 	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000eb4	      0xe952f7ffff	                           jmp 0x400060b	       618	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000eb9	          0x4889de	                            mov rsi, rbx	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000ebc	            0x31db	                            xor ebx, ebx	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000ebe	    0x4c0faf2d0000	            imul r13, qword [0x04000ec6]	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ec6	          0x4839de	                            cmp rsi, rbx	       436	ldexp.c	FUNCTION_16	IF_1
0x4000ec9	    0x4c892d000000	            mov qword [0x04000ed0], r13 	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ed0	     0xf8535f7ffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000ed6	      0xe950faffff	                           jmp 0x400092b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000edb	          0x4889de	                            mov rsi, rbx	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000ede	            0x31db	                            xor ebx, ebx	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000ee0	    0x4c312d000000	             xor qword [0x04000ee7], r13	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ee7	          0x4839de	                            cmp rsi, rbx	       436	ldexp.c	FUNCTION_16	IF_1
0x4000eea	     0xf851bf7ffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000ef0	      0xe936faffff	                           jmp 0x400092b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000ef5	          0x4889de	                            mov rsi, rbx	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000ef8	            0x31db	                            xor ebx, ebx	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000efa	          0x83f82b	                           cmp eax, 0x2b	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000efd	     0xf85a5f9ffff	                           jne 0x40008a8	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f03	    0x4c012d000000	            add qword [0x04000f0a], r13 	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f0a	          0x4839de	                            cmp rsi, rbx	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f0d	     0xf85f8f6ffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f13	      0xe913faffff	                           jmp 0x400092b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f18	          0x4889de	                            mov rsi, rbx	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000f1b	            0x31db	                            xor ebx, ebx	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000f1d	    0x488b0d000000	            mov rcx, qword [0x04000f24] 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f24	          0x49d3ed	                             shr r13, cl	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f27	          0x4839de	                            cmp rsi, rbx	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f2a	    0x4c892d000000	            mov qword [0x04000f31], r13 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f31	     0xf85d4f6ffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f37	      0xe9eff9ffff	                           jmp 0x400092b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f3c	          0x83f85e	                           cmp eax, 0x5e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f3f	            0x749a	                            je 0x4000edb	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f41	     0xf8ee1faffff	                           jle 0x4000a28	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f47	          0x83f87c	                           cmp eax, 0x7c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f4a	     0xf85dcf2ffff	                           jne 0x400022c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f50	          0x4889de	                            mov rsi, rbx	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4000f53	            0x31db	                            xor ebx, ebx	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4000f55	    0x4c092d000000	              or qword [0x04000f5c], r13	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000f5c	          0x4839de	                            cmp rsi, rbx	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f5f	     0xf85a6f6ffff	                           jne 0x400060b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f65	      0xe9c1f9ffff	                           jmp 0x400092b	       436	ldexp.c	FUNCTION_16	IF_1
0x4000f6a	    0x448b1d000000	           mov r11d, dword [0x04000f71] 	       334	ldexp.c	FUNCTION_13	IF_4
0x4000f71	          0x4585db	                         test r11d, r11d	       334	ldexp.c	FUNCTION_13	IF_4
0x4000f74	     0xf84fbf4ffff	                            je 0x4000475	       334	ldexp.c	FUNCTION_13	IF_4
0x4000f7a	    0x483d00000000	                              cmp rax, 0	       335	ldexp.c	FUNCTION_13	IF_4
0x4000f80	     0xf85eff4ffff	                           jne 0x4000475	       335	ldexp.c	FUNCTION_13	IF_4
0x4000f86	      0xe800000000	                          call 0x4000f8b	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000f8b	      0x4989442418	             mov qword [r12 + 0x18], rax	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000f90	    0x488b05000000	            mov rax, qword [0x04000f97] 	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000f97	      0xe9d9f4ffff	                           jmp 0x4000475	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000f9c	         0xf1f4000	                         nop dword [rax]	       336	ldexp.c	FUNCTION_13	CALL_4
0x4000fa0	    0x8b1500000000	            mov edx, dword [0x04000fa6] 	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000fa6	            0x85d2	                           test edx, edx	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000fa8	     0xf8557f5ffff	                           jne 0x4000505	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4000fae	    0xc70500000000	               mov dword [0x04000fb8], 1	       192	ldexp.c	FUNCTION_4
0x4000fb8	    0x48c705000000	               mov qword [0x04000fc3], 0	       193	ldexp.c	FUNCTION_4
0x4000fc3	    0x488905000000	            mov qword [0x04000fca], rax 	       194	ldexp.c	FUNCTION_4
0x4000fca	      0xe952f5ffff	                           jmp 0x4000521	       194	ldexp.c	FUNCTION_4
0x4000fcf	    0x488b3d000000	            mov rdi, qword [0x04000fd6] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000fd6	          0x4c89ea	                            mov rdx, r13	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000fd9	      0xbe00000000	                              mov esi, 0	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000fde	        0x488b4708	                mov rax, qword [rdi + 8]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000fe2	    0xff9028030000	                call qword [rax + 0x328]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000fe8	      0xe9c7f4ffff	                           jmp 0x40004b4	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4000fed	          0x83f85e	                           cmp eax, 0x5e	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ff0	     0xf8422030000	                            je 0x4001318	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ff6	     0xf8e2cfaffff	                           jle 0x4000a28	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000ffc	          0x83f87c	                           cmp eax, 0x7c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4000fff	     0xf8527f2ffff	                           jne 0x400022c	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001005	    0x4c092d000000	              or qword [0x0400100c], r13	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400100c	      0xe9faf5ffff	                           jmp 0x400060b	       612	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001011	    0x833d00000000	               cmp dword [0x04001018], 1	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x4001018	     0xf844efbffff	                            je 0x4000b6c	       635	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	IF_11
0x400101e	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001022	      0xba05000000	                              mov edx, 5	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001027	      0xbe00000000	                              mov esi, 0	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400102c	            0x31ff	                            xor edi, edi	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400102e	      0xe800000000	                          call 0x4001033	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001033	          0x4889ee	                            mov rsi, rbp	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001036	          0x4889c7	                            mov rdi, rax	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001039	            0x31c0	                            xor eax, eax	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400103b	      0xe800000000	                          call 0x4001040	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001040	    0x488b35000000	            mov rsi, qword [0x04001047] 	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x4001047	      0xe920fbffff	                           jmp 0x4000b6c	       636	ldexp.c	FUNCTION_19	IF_4	SWITCH_1	ELSE_3	CALL_12
0x400104c	    0x833d00000000	               cmp dword [0x04001053], 1	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001053	     0xf8413fbffff	                            je 0x4000b6c	       626	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001059	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x400105d	      0xba05000000	                              mov edx, 5	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001062	      0xbe00000000	                              mov esi, 0	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001067	            0xebc3	                           jmp 0x400102c	       627	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1	ELSE_2	IF_9
0x4001069	    0x81fa26010000	                          cmp edx, 0x126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400106f	     0xf8506faffff	                           jne 0x4000a7b	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001075	    0x448b35000000	           mov r14d, dword [0x0400107c] 	       343	ldexp.c	FUNCTION_14	IF_1
0x400107c	          0x4585f6	                         test r14d, r14d	       343	ldexp.c	FUNCTION_14	IF_1
0x400107f	            0x7411	                            je 0x4001092	       343	ldexp.c	FUNCTION_14	IF_1
0x4001081	    0x48813d000000	               cmp qword [0x0400108c], 0	       344	ldexp.c	FUNCTION_14	IF_1
0x400108c	     0xf8430030000	                            je 0x40013c2	       344	ldexp.c	FUNCTION_14	IF_1
0x4001092	    0xc70500000000	               mov dword [0x0400109c], 0	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x400109c	      0xe94ff6ffff	                           jmp 0x40006f0	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x40010a1	    0x8b0500000000	            mov eax, dword [0x040010a7] 	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40010a7	            0x85c0	                           test eax, eax	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40010a9	            0x74e7	                            je 0x4001092	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40010ab	    0x488b05000000	            mov rax, qword [0x040010b2] 	       183	ldexp.c	FUNCTION_3	IF_1
0x40010b2	    0x488b0d000000	            mov rcx, qword [0x040010b9] 	       183	ldexp.c	FUNCTION_3	IF_1
0x40010b9	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x40010bc	            0x740b	                            je 0x40010c9	       183	ldexp.c	FUNCTION_3	IF_1
0x40010be	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x40010c2	    0x48030d000000	             add rcx, qword [0x040010c9]	       184	ldexp.c	FUNCTION_3	IF_1
0x40010c9	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x40010cd	    0x48c705000000	               mov qword [0x040010d8], 0	       185	ldexp.c	FUNCTION_3
0x40010d8	    0xc70500000000	               mov dword [0x040010e2], 0	       186	ldexp.c	FUNCTION_3
0x40010e2	    0x488b05000000	            mov rax, qword [0x040010e9] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x40010e9	            0x760e	                           jbe 0x40010f9	      1615	ldexp.c	FUNCTION_46	IF_1
0x40010eb	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x40010f0	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x40010f2	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x40010f5	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x40010f9	    0x488905000000	            mov qword [0x04001100], rax 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4001100	      0xe971f0ffff	                           jmp 0x4000176	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4001105	    0x488b05000000	            mov rax, qword [0x0400110c] 	       183	ldexp.c	FUNCTION_3	IF_1
0x400110c	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x400110f	            0x740b	                            je 0x400111c	       183	ldexp.c	FUNCTION_3	IF_1
0x4001111	        0x488b4028	            mov rax, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4001115	    0x480105000000	            add qword [0x0400111c], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x400111c	    0x48c705000000	               mov qword [0x04001127], 0	       185	ldexp.c	FUNCTION_3
0x4001127	    0xc70500000000	               mov dword [0x04001131], 0	       186	ldexp.c	FUNCTION_3
0x4001131	      0xe940f0ffff	                           jmp 0x4000176	       186	ldexp.c	FUNCTION_3
0x4001136	            0x31c0	                            xor eax, eax	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001138	    0x48833d000000	               cmp qword [0x04001140], 0	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001140	           0xf94c0	                                 sete al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001143	    0x488905000000	            mov qword [0x0400114a], rax 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400114a	      0xe927f0ffff	                           jmp 0x4000176	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400114f	    0x48f715000000	                  not qword [0x04001156]	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001156	      0xe91bf0ffff	                           jmp 0x4000176	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400115b	    0x48f71d000000	                  neg qword [0x04001162]	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001162	      0xe90ff0ffff	                           jmp 0x4000176	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4001167	    0x8b0500000000	            mov eax, dword [0x0400116d] 	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x400116d	            0x85c0	                           test eax, eax	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x400116f	     0xf841dffffff	                            je 0x4001092	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x4001175	    0x488b0d000000	            mov rcx, qword [0x0400117c] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x400117c	    0x488b05000000	            mov rax, qword [0x04001183] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4001183	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4001187	            0x760e	                           jbe 0x4001197	      1615	ldexp.c	FUNCTION_46	IF_1
0x4001189	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x400118e	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4001190	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4001193	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x4001197	    0x488b15000000	            mov rdx, qword [0x0400119e] 	       260	ldexp.c	FUNCTION_10
0x400119e	    0xc70500000000	               mov dword [0x040011a8], 1	       262	ldexp.c	FUNCTION_10
0x40011a8	    0x41bc01000000	                             mov r12d, 1	       266	ldexp.c	FUNCTION_10
0x40011ae	    0xc70500000000	               mov dword [0x040011b8], 1	       263	ldexp.c	FUNCTION_10
0x40011b8	        0x482b4228	             sub rax, qword [rdx + 0x28]	       264	ldexp.c	FUNCTION_10
0x40011bc	    0x48c705000000	               mov qword [0x040011c7], 0	       265	ldexp.c	FUNCTION_10
0x40011c7	    0x488915000000	            mov qword [0x040011ce], rdx 	       266	ldexp.c	FUNCTION_10
0x40011ce	    0x488905000000	            mov qword [0x040011d5], rax 	       264	ldexp.c	FUNCTION_10
0x40011d5	      0xe99cefffff	                           jmp 0x4000176	       264	ldexp.c	FUNCTION_10
0x40011da	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011de	    0x488b3d000000	            mov rdi, qword [0x040011e5] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011e5	            0x31c9	                            xor ecx, ecx	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011e7	    0x41b801000000	                              mov r8d, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011ed	      0xba01000000	                              mov edx, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011f2	      0xe800000000	                          call 0x40011f7	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011f7	          0x4885c0	                           test rax, rax	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40011fa	          0x4989c5	                            mov r13, rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40011fd	     0xf85cbf1ffff	                           jne 0x40003ce	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x4001203	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4001207	            0x31ff	                            xor edi, edi	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4001209	      0xba05000000	                              mov edx, 5	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400120e	      0xbe00000000	                              mov esi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4001213	      0xe800000000	                          call 0x4001218	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4001218	          0x4c89e6	                            mov rsi, r12	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400121b	          0x4889c7	                            mov rdi, rax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400121e	            0x31c0	                            xor eax, eax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4001220	      0xe800000000	                          call 0x4001225	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4001225	      0xe9a4f1ffff	                           jmp 0x40003ce	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400122a	    0x660f1f440000	                    nop word [rax + rax]	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4001230	          0x83f82b	                           cmp eax, 0x2b	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001233	     0xf84eb000000	                            je 0x4001324	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001239	          0x83f82d	                           cmp eax, 0x2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400123c	     0xf85ebf8ffff	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001242	    0x4c2b2d000000	             sub r13, qword [0x04001249]	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001249	    0x4c892d000000	            mov qword [0x04001250], r13 	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001250	      0xe9b6f3ffff	                           jmp 0x400060b	       607	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001255	          0x83f826	                           cmp eax, 0x26	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001258	     0xf85cff8ffff	                           jne 0x4000b2d	       589	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400125e	    0x4c212d000000	             and qword [0x04001265], r13	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001265	      0xe9c1f6ffff	                           jmp 0x400092b	       610	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400126a	            0x31ff	                            xor edi, edi	       314	ldexp.c	FUNCTION_13	CALL_3
0x400126c	      0xba05000000	                              mov edx, 5	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001271	      0xbe00000000	                              mov esi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001276	      0xe800000000	                          call 0x400127b	       314	ldexp.c	FUNCTION_13	CALL_3
0x400127b	          0x4c89f6	                            mov rsi, r14	       314	ldexp.c	FUNCTION_13	CALL_3
0x400127e	          0x4889c7	                            mov rdi, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001281	            0x31c0	                            xor eax, eax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001283	      0xe800000000	                          call 0x4001288	       314	ldexp.c	FUNCTION_13	CALL_3
0x4001288	      0xe9a7f1ffff	                           jmp 0x4000434	       314	ldexp.c	FUNCTION_13	CALL_3
0x400128d	    0x488b05000000	            mov rax, qword [0x04001294] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001294	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400129a	     0xf859af9ffff	                           jne 0x4000c3a	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40012a0	    0x833d00000000	               cmp dword [0x040012a7], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40012a7	     0xf84c9eeffff	                            je 0x4000176	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40012ad	      0xba05000000	                              mov edx, 5	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40012b2	      0xbe00000000	                              mov esi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40012b7	            0x31ff	                            xor edi, edi	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40012b9	      0xe800000000	                          call 0x40012be	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40012be	          0x4889de	                            mov rsi, rbx	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40012c1	          0x4889c7	                            mov rdi, rax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40012c4	            0x31c0	                            xor eax, eax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40012c6	      0xe800000000	                          call 0x40012cb	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40012cb	    0x448b25000000	           mov r12d, dword [0x040012d2] 	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40012d2	      0xe996eeffff	                           jmp 0x400016d	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40012d7	    0x4c0faf2d0000	            imul r13, qword [0x040012df]	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012df	    0x4c892d000000	            mov qword [0x040012e6], r13 	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012e6	      0xe920f3ffff	                           jmp 0x400060b	       606	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012eb	    0x488b0d000000	            mov rcx, qword [0x040012f2] 	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012f2	          0x49d3ed	                             shr r13, cl	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012f5	      0xe9c9f6ffff	                           jmp 0x40009c3	       609	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x40012fa	    0x8b3500000000	            mov esi, dword [0x04001300] 	       439	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4001300	            0x85f6	                           test esi, esi	       439	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4001302	     0xf8534f6ffff	                           jne 0x400093c	       439	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4001308	    0x48c705000000	               mov qword [0x04001313], 0	       441	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4001313	      0xe9f3f2ffff	                           jmp 0x400060b	       441	ldexp.c	FUNCTION_16	IF_1	IF_2
0x4001318	    0x4c312d000000	             xor qword [0x0400131f], r13	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400131f	      0xe9e7f2ffff	                           jmp 0x400060b	       611	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001324	    0x4c012d000000	            add qword [0x0400132b], r13 	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x400132b	      0xe9dbf2ffff	                           jmp 0x400060b	       605	ldexp.c	ELSE_3	FUNCTION_19	IF_4	SWITCH_1
0x4001330	          0x4889de	                            mov rsi, rbx	       559	ldexp.c	ELSE_3	FUNCTION_19
0x4001333	            0x31db	                            xor ebx, ebx	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x4001335	      0xe913f8ffff	                           jmp 0x4000b4d	       583	ldexp.c	ELSE_3	FUNCTION_19	IF_4	IF_5	ELSE_1	IF_7
0x400133a	            0x84d2	                             test dl, dl	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x400133c	     0xf85bbfaffff	                           jne 0x4000dfd	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4001342	          0x4084f6	                           test sil, sil	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4001345	     0xf85b2faffff	                           jne 0x4000dfd	       504	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_3
0x400134b	          0x83f901	                              cmp ecx, 1	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x400134e	    0x4c892d000000	            mov qword [0x04001355], r13 	       516	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	ELSE_2
0x4001355	     0xf85b0f2ffff	                           jne 0x400060b	       518	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x400135b	    0xc70500000000	               mov dword [0x04001365], 2	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x4001365	      0xe9a1f2ffff	                           jmp 0x400060b	       519	ldexp.c	ELSE_5	FUNCTION_18	ELSE_1	IF_2	IF_5
0x400136a	    0x4c892d000000	            mov qword [0x04001371], r13 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4001371	          0x4c892a	                    mov qword [rdx], r13	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4001374	      0xe9fdedffff	                           jmp 0x4000176	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4001379	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x400137d	        0x83781000	               cmp dword [rax + 0x10], 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001381	            0x7509	                           jne 0x400138c	       977	ldexp.c	FUNCTION_26	CALL_2
0x4001383	          0x83382b	                   cmp dword [rax], 0x2b	       975	ldexp.c	FUNCTION_26
0x4001386	     0xf84dc000000	                            je 0x4001468	       975	ldexp.c	FUNCTION_26
0x400138c	    0x813817010000	                  cmp dword [rax], 0x117	       987	ldexp.c	FUNCTION_27	IF_1
0x4001392	            0x7514	                           jne 0x40013a8	       987	ldexp.c	FUNCTION_27	IF_1
0x4001394	        0x83781002	               cmp dword [rax + 0x10], 2	       987	ldexp.c	FUNCTION_27	IF_1
0x4001398	            0x750e	                           jne 0x40013a8	       987	ldexp.c	FUNCTION_27	IF_1
0x400139a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       989	ldexp.c	FUNCTION_27	IF_1
0x400139e	        0x837a1001	               cmp dword [rdx + 0x10], 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40013a2	     0xf841d010000	                            je 0x40014c5	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40013a8	    0x488b05000000	            mov rax, qword [0x040013af] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40013af	    0x448b25000000	           mov r12d, dword [0x040013b6] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40013b6	    0x814820000020	         or dword [rax + 0x20], 0x200000	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40013bd	      0xe916f3ffff	                           jmp 0x40006d8	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40013c2	    0x8b0500000000	            mov eax, dword [0x040013c8] 	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40013c8	          0x8d50ff	                      lea edx, [rax - 1]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40013cb	          0x83fa01	                              cmp edx, 1	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40013ce	            0x7656	                           jbe 0x4001426	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40013d0	          0x83e804	                              sub eax, 4	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x40013d3	          0x83f802	                              cmp eax, 2	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x40013d6	     0xf869aedffff	                           jbe 0x4000176	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x40013dc	      0xe9b1fcffff	                           jmp 0x4001092	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x40013e1	          0x4c39ee	                            cmp rsi, r13	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40013e4	     0xf8321f2ffff	                           jae 0x400060b	       464	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40013ea	      0x488d540eff	                lea rdx, [rsi + rcx - 1]	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40013ef	          0x4929f5	                            sub r13, rsi	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40013f2	          0x4c21ea	                            and rdx, r13	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40013f5	          0x4801d0	                            add rax, rdx	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40013f8	    0x488905000000	            mov qword [0x040013ff], rax 	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x40013ff	      0xe907f2ffff	                           jmp 0x400060b	       465	ldexp.c	FUNCTION_17	ELSE_2	IF_3	IF_4
0x4001404	    0x488b05000000	            mov rax, qword [0x0400140b] 	       461	ldexp.c	FUNCTION_17	IF_2
0x400140b	    0x488905000000	            mov qword [0x04001412], rax 	       461	ldexp.c	FUNCTION_17	IF_2
0x4001412	      0xe9f4f1ffff	                           jmp 0x400060b	       461	ldexp.c	FUNCTION_17	IF_2
0x4001417	      0xba05000000	                              mov edx, 5	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400141c	      0xbe00000000	                              mov esi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001421	      0xe991feffff	                           jmp 0x40012b7	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4001426	    0x488b05000000	            mov rax, qword [0x0400142d] 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400142d	    0xc70500000000	               mov dword [0x04001437], 3	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001437	    0x488905000000	            mov qword [0x0400143e], rax 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400143e	      0xe933edffff	                           jmp 0x4000176	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4001443	        0x4c036828	             add r13, qword [rax + 0x28]	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x4001447	      0xe92ef8ffff	                           jmp 0x4000c7a	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x400144c	      0x4883791800	               cmp qword [rcx + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4001451	     0xf8567f2ffff	                           jne 0x40006be	       931	ldexp.c	FUNCTION_23
0x4001457	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400145d	     0xf8413edffff	                            je 0x4000176	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001463	      0xe9d2f7ffff	                           jmp 0x4000c3a	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4001468	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       976	ldexp.c	FUNCTION_26	CALL_1
0x400146c	    0x813a03010000	                  cmp dword [rdx], 0x103	       920	ldexp.c	FUNCTION_22
0x4001472	     0xf8514ffffff	                           jne 0x400138c	       920	ldexp.c	FUNCTION_22
0x4001478	        0x837a1003	               cmp dword [rdx + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x400147c	     0xf850affffff	                           jne 0x400138c	       920	ldexp.c	FUNCTION_22
0x4001482	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       921	ldexp.c	FUNCTION_22
0x4001486	          0x803a2e	                    cmp byte [rdx], 0x2e	       921	ldexp.c	FUNCTION_22
0x4001489	     0xf85fdfeffff	                           jne 0x400138c	       921	ldexp.c	FUNCTION_22
0x400148f	        0x807a0100	                   cmp byte [rdx + 1], 0	       922	ldexp.c	FUNCTION_22
0x4001493	     0xf85f3feffff	                           jne 0x400138c	       922	ldexp.c	FUNCTION_22
0x4001499	        0x488b4020	            mov rax, qword [rax + 0x20] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x400149d	          0x8b7010	            mov esi, dword [rax + 0x10] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x40014a0	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x40014a3	     0xf849e000000	                            je 0x4001547	       931	ldexp.c	FUNCTION_23
0x40014a9	            0x8b38	                    mov edi, dword [rax]	       978	ldexp.c	FUNCTION_26	CALL_3
0x40014ab	        0x488d5018	                   lea rdx, [rax + 0x18]	       978	ldexp.c	FUNCTION_26	CALL_3
0x40014af	      0xe800000000	                          call 0x40014b4	       978	ldexp.c	FUNCTION_26	CALL_3
0x40014b4	            0x85c0	                           test eax, eax	       978	ldexp.c	FUNCTION_26	CALL_3
0x40014b6	     0xf8515f2ffff	                           jne 0x40006d1	       978	ldexp.c	FUNCTION_26	CALL_3
0x40014bc	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       978	ldexp.c	FUNCTION_26	CALL_3
0x40014c0	      0xe9c7feffff	                           jmp 0x400138c	       978	ldexp.c	FUNCTION_26	CALL_3
0x40014c5	        0x488b4218	            mov rax, qword [rdx + 0x18] 	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x40014c9	        0x83781000	               cmp dword [rax + 0x10], 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x40014cd	     0xf85d5feffff	                           jne 0x40013a8	       965	ldexp.c	FUNCTION_25	CALL_2
0x40014d3	    0x813810010000	                  cmp dword [rax], 0x110	       963	ldexp.c	FUNCTION_25
0x40014d9	     0xf85c9feffff	                           jne 0x40013a8	       963	ldexp.c	FUNCTION_25
0x40014df	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       964	ldexp.c	FUNCTION_25	CALL_1
0x40014e3	    0x813903010000	                  cmp dword [rcx], 0x103	       920	ldexp.c	FUNCTION_22
0x40014e9	     0xf85b9feffff	                           jne 0x40013a8	       920	ldexp.c	FUNCTION_22
0x40014ef	        0x83791003	               cmp dword [rcx + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x40014f3	     0xf85affeffff	                           jne 0x40013a8	       920	ldexp.c	FUNCTION_22
0x40014f9	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	       921	ldexp.c	FUNCTION_22
0x40014fd	          0x80392e	                    cmp byte [rcx], 0x2e	       921	ldexp.c	FUNCTION_22
0x4001500	     0xf85a2feffff	                           jne 0x40013a8	       921	ldexp.c	FUNCTION_22
0x4001506	        0x80790100	                   cmp byte [rcx + 1], 0	       922	ldexp.c	FUNCTION_22
0x400150a	     0xf8598feffff	                           jne 0x40013a8	       922	ldexp.c	FUNCTION_22
0x4001510	        0x488b4020	            mov rax, qword [rax + 0x20] 	       965	ldexp.c	FUNCTION_25	CALL_2
0x4001514	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4001518	     0xf858afeffff	                           jne 0x40013a8	       931	ldexp.c	FUNCTION_23
0x400151e	      0x4883781800	               cmp qword [rax + 0x18], 0	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001523	     0xf857ffeffff	                           jne 0x40013a8	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4001529	        0x488b4228	            mov rax, qword [rdx + 0x28] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x400152d	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4001531	     0xf8571feffff	                           jne 0x40013a8	       931	ldexp.c	FUNCTION_23
0x4001537	      0x4883781801	               cmp qword [rax + 0x18], 1	       931	ldexp.c	FUNCTION_23
0x400153c	     0xf8566feffff	                           jne 0x40013a8	       931	ldexp.c	FUNCTION_23
0x4001542	      0xe98af1ffff	                           jmp 0x40006d1	       931	ldexp.c	FUNCTION_23
0x4001547	      0x4883781800	               cmp qword [rax + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x400154c	     0xf8557ffffff	                           jne 0x40014a9	       931	ldexp.c	FUNCTION_23
0x4001552	      0xe97af1ffff	                           jmp 0x40006d1	       931	ldexp.c	FUNCTION_23
exp_unop	DO,0:functions,0:CALL,2:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,1	46
0x4003ff0	              0x55	                                push rbp	      1309	ldexp.c	FUNCTION_34
0x4003ff1	              0x53	                                push rbx	      1309	ldexp.c	FUNCTION_34
0x4003ff2	            0x89fd	                            mov ebp, edi	      1309	ldexp.c	FUNCTION_34
0x4003ff4	          0x4889f3	                            mov rbx, rsi	      1309	ldexp.c	FUNCTION_34
0x4003ff7	      0xbf28000000	                           mov edi, 0x28	      1310	ldexp.c	FUNCTION_34	CALL_1
0x4003ffc	        0x4883ec18	                           sub rsp, 0x18	      1309	ldexp.c	FUNCTION_34
0x4004000	      0xe800000000	                          call 0x4004005	      1310	ldexp.c	FUNCTION_34	CALL_1
0x4004005	            0x8928	                    mov dword [rax], ebp	      1312	ldexp.c	FUNCTION_34
0x4004007	        0x488b5308	                mov rdx, qword [rbx + 8]	      1313	ldexp.c	FUNCTION_34
0x400400b	        0x48895008	                mov qword [rax + 8], rdx	      1313	ldexp.c	FUNCTION_34
0x400400f	          0x8b5304	                mov edx, dword [rbx + 4]	      1314	ldexp.c	FUNCTION_34
0x4004012	        0x48895818	             mov qword [rax + 0x18], rbx	      1315	ldexp.c	FUNCTION_34
0x4004016	    0xc74010020000	               mov dword [rax + 0x10], 2	      1316	ldexp.c	FUNCTION_34
0x400401d	          0x895004	                mov dword [rax + 4], edx	      1314	ldexp.c	FUNCTION_34
0x4004020	        0x837b1007	               cmp dword [rbx + 0x10], 7	      1317	ldexp.c	FUNCTION_34	IF_1
0x4004024	            0x740a	                            je 0x4004030	      1317	ldexp.c	FUNCTION_34	IF_1
0x4004026	        0x4883c418	                           add rsp, 0x18	      1324	ldexp.c	FUNCTION_34
0x400402a	              0x5b	                                 pop rbx	      1324	ldexp.c	FUNCTION_34
0x400402b	              0x5d	                                 pop rbp	      1324	ldexp.c	FUNCTION_34
0x400402c	              0xc3	                                     ret	      1324	ldexp.c	FUNCTION_34
0x400402d	           0xf1f00	                         nop dword [rax]	      1324	ldexp.c	FUNCTION_34
0x4004030	    0x81fd17010000	                          cmp ebp, 0x117	      1319	ldexp.c	FUNCTION_34	IF_1
0x4004036	            0x74ee	                            je 0x4004026	      1319	ldexp.c	FUNCTION_34	IF_1
0x4004038	            0x89ea	                            mov edx, ebp	      1321	ldexp.c	FUNCTION_34	IF_1
0x400403a	          0x83e2df	                     and edx, 0xffffffdf	      1321	ldexp.c	FUNCTION_34	IF_1
0x400403d	    0x81fa40010000	                          cmp edx, 0x140	      1321	ldexp.c	FUNCTION_34	IF_1
0x4004043	            0x74e1	                            je 0x4004026	      1321	ldexp.c	FUNCTION_34	IF_1
0x4004045	    0x81fd26010000	                          cmp ebp, 0x126	      1321	ldexp.c	FUNCTION_34	IF_1
0x400404b	            0x74d9	                            je 0x4004026	      1321	ldexp.c	FUNCTION_34	IF_1
0x400404d	          0x4889c7	                            mov rdi, rax	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4004050	      0x4889442408	                mov qword [rsp + 8], rax	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4004055	    0xc70500000000	               mov dword [0x0400405f], 0	      1246	ldexp.c	FUNCTION_30
0x400405f	    0x48c705000000	               mov qword [0x0400406a], 0	      1247	ldexp.c	FUNCTION_30
0x400406a	    0x48c705000000	               mov qword [0x04004075], 0	      1248	ldexp.c	FUNCTION_30
0x4004075	    0x48c705000000	               mov qword [0x04004080], 0	      1249	ldexp.c	FUNCTION_30
0x4004080	      0xe8dbd4ffff	                call sym.exp_fold_tree_1	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4004085	    0x8b0500000000	            mov eax, dword [0x0400408b] 	      1257	ldexp.c	FUNCTION_31	IF_1
0x400408b	            0x85c0	                           test eax, eax	      1257	ldexp.c	FUNCTION_31	IF_1
0x400408d	      0x488b442408	                mov rax, qword [rsp + 8]	      1257	ldexp.c	FUNCTION_31	IF_1
0x4004092	            0x7492	                            je 0x4004026	      1257	ldexp.c	FUNCTION_31	IF_1
0x4004094	    0xc70002010000	                  mov dword [rax], 0x102	      1259	ldexp.c	FUNCTION_31	IF_1
0x400409a	    0x488b15000000	            mov rdx, qword [0x040040a1] 	      1260	ldexp.c	FUNCTION_31	IF_1
0x40040a1	    0x48c740200000	               mov qword [rax + 0x20], 0	      1261	ldexp.c	FUNCTION_31	IF_1
0x40040a9	    0xc74010070000	               mov dword [rax + 0x10], 7	      1262	ldexp.c	FUNCTION_31	IF_1
0x40040b0	        0x48895018	             mov qword [rax + 0x18], rdx	      1260	ldexp.c	FUNCTION_31	IF_1
0x40040b4	      0xe96dffffff	                           jmp 0x4004026	      1260	ldexp.c	FUNCTION_31	IF_1
exp_fold_tree	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	572
0x4002910	            0x4155	                                push r13	      1235	ldexp.c	FUNCTION_29
0x4002912	            0x4154	                                push r12	      1235	ldexp.c	FUNCTION_29
0x4002914	              0x55	                                push rbp	      1235	ldexp.c	FUNCTION_29
0x4002915	              0x53	                                push rbx	      1235	ldexp.c	FUNCTION_29
0x4002916	        0x4883ec08	                              sub rsp, 8	      1235	ldexp.c	FUNCTION_29
0x400291a	          0x488b02	                    mov rax, qword [rdx]	      1237	ldexp.c	FUNCTION_29
0x400291d	          0x4885ff	                           test rdi, rdi	      1000	ldexp.c	FUNCTION_28	IF_1
0x4002920	    0xc70500000000	               mov dword [0x0400292a], 0	      1236	ldexp.c	FUNCTION_29
0x400292a	    0x488915000000	            mov qword [0x04002931], rdx 	      1238	ldexp.c	FUNCTION_29
0x4002931	    0x488935000000	            mov qword [0x04002938], rsi 	      1239	ldexp.c	FUNCTION_29
0x4002938	    0x488905000000	            mov qword [0x0400293f], rax 	      1237	ldexp.c	FUNCTION_29
0x400293f	     0xf8452030000	                            je 0x4002c97	      1000	ldexp.c	FUNCTION_28	IF_1
0x4002945	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4002948	          0x4889fb	                            mov rbx, rdi	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x400294b	          0x83f809	                              cmp eax, 9	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x400294e	     0xf8734030000	                            ja 0x4002c88	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4002954	            0x89c2	                            mov edx, eax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4002956	    0xff24d5000000	                       jmp qword [rdx*8]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x400295d	           0xf1f00	                         nop dword [rax]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4002960	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4002964	      0xe8f7ebffff	                call sym.exp_fold_tree_1	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4002969	    0x833d00000000	               cmp dword [0x04002970], 4	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4002970	     0xf84ca030000	                            je 0x4002d40	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4002976	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x400297a	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x400297b	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x400297c	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x400297e	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x4002980	              0xc3	                                     ret	      1241	ldexp.c	FUNCTION_29
0x4002981	     0xf1f80000000	                         nop dword [rax]	      1241	ldexp.c	FUNCTION_29
0x4002988	    0x8b0500000000	            mov eax, dword [0x0400298e] 	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400298e	            0x85c0	                           test eax, eax	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4002990	     0xf8401030000	                            je 0x4002c97	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4002996	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400299a	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x400299e	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x40029a2	        0x48034720	             add rax, qword [rdi + 0x20]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x40029a6	    0xc70500000000	               mov dword [0x040029b0], 1	       251	ldexp.c	FUNCTION_9
0x40029b0	    0x48c705000000	               mov qword [0x040029bb], 0	       253	ldexp.c	FUNCTION_9
0x40029bb	    0x488915000000	            mov qword [0x040029c2], rdx 	       254	ldexp.c	FUNCTION_9
0x40029c2	    0x488905000000	            mov qword [0x040029c9], rax 	       252	ldexp.c	FUNCTION_9
0x40029c9	            0xebab	                           jmp 0x4002976	       252	ldexp.c	FUNCTION_9
0x40029cb	       0xf1f440000	                   nop dword [rax + rax]	       252	ldexp.c	FUNCTION_9
0x40029d0	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x40029d4	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x40029d5	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x40029d6	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x40029d8	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x40029da	      0xe941d7ffff	                     jmp sym.fold_binary	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x40029df	              0x90	                                     nop	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x40029e0	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       673	ldexp.c	FUNCTION_20	CALL_1
0x40029e4	    0x488b2d000000	            mov rbp, qword [0x040029eb] 	       671	ldexp.c	FUNCTION_20
0x40029eb	      0xe870ebffff	                call sym.exp_fold_tree_1	       673	ldexp.c	FUNCTION_20	CALL_1
0x40029f0	    0x448b1d000000	           mov r11d, dword [0x040029f7] 	       675	ldexp.c	FUNCTION_20	IF_1
0x40029f7	    0x48892d000000	            mov qword [0x040029fe], rbp 	       674	ldexp.c	FUNCTION_20
0x40029fe	          0x4585db	                         test r11d, r11d	       675	ldexp.c	FUNCTION_20	IF_1
0x4002a01	     0xf846fffffff	                            je 0x4002976	       675	ldexp.c	FUNCTION_20	IF_1
0x4002a07	    0x48833d000000	               cmp qword [0x04002a0f], 0	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4002a0f	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4002a13	      0x480f457b20	          cmovne rdi, qword [rbx + 0x20]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4002a18	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x4002a1c	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x4002a1d	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x4002a1e	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x4002a20	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x4002a22	      0xe939ebffff	                 jmp sym.exp_fold_tree_1	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4002a27	    0x660f1f840000	                    nop word [rax + rax]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4002a30	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4002a34	      0xe827ebffff	                call sym.exp_fold_tree_1	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4002a39	    0x448b2d000000	           mov r13d, dword [0x04002a40] 	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4002a40	          0x4585ed	                         test r13d, r13d	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4002a43	     0xf842dffffff	                            je 0x4002976	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4002a49	            0x8b13	                    mov edx, dword [rbx]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a4b	    0x81fa17010000	                          cmp edx, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a51	     0xf8403060000	                            je 0x400305a	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a57	     0xf8eab020000	                           jle 0x4002d08	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a5d	    0x81fa40010000	                          cmp edx, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a63	     0xf848d050000	                            je 0x4002ff6	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a69	     0xf8eef040000	                           jle 0x4002f5e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a6f	    0x81fa60010000	                          cmp edx, 0x160	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a75	     0xf8419050000	                            je 0x4002f94	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a7b	            0x31f6	                            xor esi, esi	       163	ldexp.c	FUNCTION_2
0x4002a7d	    0x81fa67010000	                          cmp edx, 0x167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a83	    0x488b05000000	            mov rax, qword [0x04002a8a] 	       161	ldexp.c	FUNCTION_2
0x4002a8a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       162	ldexp.c	FUNCTION_2
0x4002a91	      0xbf01000000	                              mov edi, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4002a96	            0x740b	                            je 0x4002aa3	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a98	      0xe986020000	                           jmp 0x4002d23	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002a9d	           0xf1f00	                         nop dword [rax]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002aa0	          0x4889d1	                            mov rcx, rdx	       167	ldexp.c	FUNCTION_2	DO_1
0x4002aa3	        0x4883f801	                              cmp rax, 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4002aa7	        0x488d5101	                      lea rdx, [rcx + 1]	       167	ldexp.c	FUNCTION_2	DO_1
0x4002aab	            0x7605	                           jbe 0x4002ab2	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4002aad	            0xa801	                              test al, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4002aaf	           0xf45f7	                         cmovne esi, edi	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4002ab2	          0x48d1e8	                              shr rax, 1	       172	ldexp.c	FUNCTION_2
0x4002ab5	            0x75e9	                           jne 0x4002aa0	       172	ldexp.c	FUNCTION_2
0x4002ab7	        0x4883c102	                              add rcx, 2	       175	ldexp.c	FUNCTION_2	IF_2
0x4002abb	            0x85f6	                           test esi, esi	       175	ldexp.c	FUNCTION_2	IF_2
0x4002abd	    0x48c705000000	               mov qword [0x04002ac8], 0	       176	ldexp.c	FUNCTION_2
0x4002ac8	        0x480f45d1	                         cmovne rdx, rcx	       175	ldexp.c	FUNCTION_2	IF_2
0x4002acc	    0x488915000000	            mov qword [0x04002ad3], rdx 	       177	ldexp.c	FUNCTION_2
0x4002ad3	      0xe99efeffff	                           jmp 0x4002976	       177	ldexp.c	FUNCTION_2
0x4002ad8	     0xf1f84000000	                   nop dword [rax + rax]	       177	ldexp.c	FUNCTION_2
0x4002ae0	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x4002ae4	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x4002ae5	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x4002ae6	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x4002ae8	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x4002aea	      0xe901f5ffff	                       jmp sym.fold_name	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4002aef	              0x90	                                     nop	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4002af0	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4002af4	          0x803e2e	                    cmp byte [rsi], 0x2e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4002af7	     0xf8473020000	                            je 0x4002d70	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4002afd	            0x31ed	                            xor ebp, ebp	      1123	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002aff	          0x83f805	                              cmp eax, 5	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4002b02	     0xf8480030000	                            je 0x4002e88	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4002b08	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4002b0c	    0x488935000000	            mov qword [0x04002b13], rsi 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002b13	    0x48c705000000	               mov qword [0x04002b1e], 0	      1145	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002b1e	      0xe83deaffff	                call sym.exp_fold_tree_1	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4002b23	    0x833d00000000	               cmp dword [0x04002b2a], 4	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4002b2a	            0x740e	                            je 0x4002b3a	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4002b2c	    0x48833d000000	               cmp qword [0x04002b34], 0	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4002b34	     0xf84ef000000	                            je 0x4002c29	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4002b3a	        0x837b1005	               cmp dword [rbx + 0x10], 5	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4002b3e	     0xf8484030000	                            je 0x4002ec8	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4002b44	          0x4885ed	                           test rbp, rbp	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4002b47	     0xf847c050000	                            je 0x40030c9	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4002b4d	    0x8b3d00000000	            mov edi, dword [0x04002b53] 	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4002b53	            0x85ff	                           test edi, edi	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4002b55	     0xf8475010000	                            je 0x4002cd0	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4002b5b	    0x48833d000000	               cmp qword [0x04002b63], 0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002b63	     0xf8486010000	                            je 0x4002cef	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002b69	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4002b6d	            0x31c9	                            xor ecx, ecx	       309	ldexp.c	FUNCTION_13
0x4002b6f	      0xba01000000	                              mov edx, 1	       309	ldexp.c	FUNCTION_13
0x4002b74	      0xbf00000000	                              mov edi, 0	       309	ldexp.c	FUNCTION_13
0x4002b79	          0x4c89ee	                            mov rsi, r13	       309	ldexp.c	FUNCTION_13
0x4002b7c	      0xe800000000	                          call 0x4002b81	       309	ldexp.c	FUNCTION_13
0x4002b81	          0x4885c0	                           test rax, rax	       313	ldexp.c	FUNCTION_13	IF_1
0x4002b84	          0x4989c4	                            mov r12, rax	       309	ldexp.c	FUNCTION_13
0x4002b87	     0xf848c050000	                            je 0x4003119	       313	ldexp.c	FUNCTION_13	IF_1
0x4002b8d	        0xf6451908	               test byte [rbp + 0x19], 8	       319	ldexp.c	FUNCTION_13	IF_2
0x4002b91	            0x7511	                           jne 0x4002ba4	       319	ldexp.c	FUNCTION_13	IF_2
0x4002b93	         0xfb64518	           movzx eax, byte [rbp + 0x18] 	       320	ldexp.c	FUNCTION_13	IF_2
0x4002b97	          0x83e803	                              sub eax, 3	       320	ldexp.c	FUNCTION_13	IF_2
0x4002b9a	            0x3c02	                               cmp al, 2	       320	ldexp.c	FUNCTION_13	IF_2
0x4002b9c	            0x7706	                            ja 0x4002ba4	       320	ldexp.c	FUNCTION_13	IF_2
0x4002b9e	    0x41804c242101	                 or byte [r12 + 0x21], 1	       324	ldexp.c	FUNCTION_13	IF_2
0x4002ba4	    0x833d00000000	               cmp dword [0x04002bab], 4	       333	ldexp.c	FUNCTION_13	IF_4
0x4002bab	    0x8b0500000000	            mov eax, dword [0x04002bb1] 	       331	ldexp.c	FUNCTION_13
0x4002bb1	    0x49c744241800	               mov qword [r12 + 0x18], 0	       332	ldexp.c	FUNCTION_13
0x4002bba	      0x4188442420	               mov byte [r12 + 0x20], al	       331	ldexp.c	FUNCTION_13
0x4002bbf	    0x488b05000000	            mov rax, qword [0x04002bc6] 	       335	ldexp.c	FUNCTION_13	IF_4
0x4002bc6	     0xf840c030000	                            je 0x4002ed8	       333	ldexp.c	FUNCTION_13	IF_4
0x4002bcc	    0x488b15000000	            mov rdx, qword [0x04002bd3] 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bd3	        0x48894528	            mov qword [rbp + 0x28], rax 	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bd7	        0xc6451803	                mov byte [rbp + 0x18], 3	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bdb	        0x48895530	            mov qword [rbp + 0x30], rdx 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bdf	          0x8b5304	                mov edx, dword [rbx + 4]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002be2	            0x85d2	                           test edx, edx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002be4	         0xfb65519	           movzx edx, byte [rbp + 0x19] 	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002be8	           0xf94c0	                                 sete al	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002beb	          0xc1e002	                              shl eax, 2	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bee	          0x83e2fb	                     and edx, 0xfffffffb	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bf1	             0x9d0	                             or eax, edx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bf3	          0x83c808	                               or eax, 8	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bf6	          0x884519	               mov byte [rbp + 0x19], al	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4002bf9	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4002bfc	            0x85c9	                           test ecx, ecx	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4002bfe	     0xf853c030000	                           jne 0x4002f40	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4002c04	    0x488b15000000	            mov rdx, qword [0x04002c0b] 	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4002c0b	        0x488d42ff	                      lea rax, [rdx - 1]	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4002c0f	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4002c13	            0x7714	                            ja 0x4002c29	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4002c15	    0x488b3d000000	            mov rdi, qword [0x04002c1c] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4002c1c	          0x4889ee	                            mov rsi, rbp	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4002c1f	        0x488b4708	                mov rax, qword [rdi + 8]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4002c23	    0xff90d0020000	                call qword [rax + 0x2d0]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4002c29	    0x48c705000000	               mov qword [0x04002c34], 0	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002c34	      0xe93dfdffff	                           jmp 0x4002976	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002c39	     0xf1f80000000	                         nop dword [rax]	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4002c40	    0x4881fe000000	                              cmp rsi, 0	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4002c47	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4002c4b	     0xf84bf020000	                            je 0x4002f10	      1009	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4002c51	    0xc70500000000	               mov dword [0x04002c5b], 1	       242	ldexp.c	FUNCTION_8
0x4002c5b	    0x488905000000	            mov qword [0x04002c62], rax 	       243	ldexp.c	FUNCTION_8
0x4002c62	    0x48c705000000	               mov qword [0x04002c6d], 0	       245	ldexp.c	FUNCTION_8
0x4002c6d	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4002c71	    0x488905000000	            mov qword [0x04002c78], rax 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4002c78	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x4002c7c	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x4002c7d	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x4002c7e	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x4002c80	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x4002c82	              0xc3	                                     ret	      1241	ldexp.c	FUNCTION_29
0x4002c83	       0xf1f440000	                   nop dword [rax + rax]	      1241	ldexp.c	FUNCTION_29
0x4002c88	      0xbecb040000	                          mov esi, 0x4cb	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4002c8d	      0xbf00000000	                              mov edi, 0	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4002c92	      0xe800000000	                          call 0x4002c97	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4002c97	    0x48c705000000	               mov qword [0x04002ca2], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4002ca2	    0x48c705000000	               mov qword [0x04002cad], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4002cad	    0x48c705000000	               mov qword [0x04002cb8], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4002cb8	    0x48c705000000	               mov qword [0x04002cc3], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4002cc3	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x4002cc7	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x4002cc8	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x4002cc9	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x4002ccb	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x4002ccd	              0xc3	                                     ret	      1241	ldexp.c	FUNCTION_29
0x4002cce	            0x6690	                                     nop	      1241	ldexp.c	FUNCTION_29
0x4002cd0	        0x807d1800	                cmp byte [rbp + 0x18], 0	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4002cd4	     0xf854fffffff	                           jne 0x4002c29	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4002cda	    0x48c705000000	               mov qword [0x04002ce5], 0	      1178	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4002ce5	    0xc70500000000	               mov dword [0x04002cef], 1	      1180	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4002cef	    0x488b05000000	            mov rax, qword [0x04002cf6] 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002cf6	    0x488905000000	            mov qword [0x04002cfd], rax 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002cfd	      0xe967feffff	                           jmp 0x4002b69	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002d02	    0x660f1f440000	                    nop word [rax + rax]	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4002d08	          0x83fa2d	                           cmp edx, 0x2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002d0b	     0xf84d9020000	                            je 0x4002fea	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002d11	          0x83fa7e	                           cmp edx, 0x7e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002d14	     0xf84c4020000	                            je 0x4002fde	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002d1a	          0x83fa21	                           cmp edx, 0x21	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002d1d	     0xf84a2020000	                            je 0x4002fc5	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002d23	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x4002d27	      0xbe9f010000	                          mov esi, 0x19f	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4002d2c	      0xbf00000000	                              mov edi, 0	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4002d31	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x4002d32	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x4002d33	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x4002d35	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x4002d37	      0xe900000000	                           jmp 0x4002d3c	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4002d3c	         0xf1f4000	                         nop dword [rax]	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4002d40	    0x48833d000000	               cmp qword [0x04002d48], 0	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4002d48	     0xf8528fcffff	                           jne 0x4002976	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4002d4e	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4002d52	      0xbf00000000	                              mov edi, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4002d57	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x4002d5b	            0x31c0	                            xor eax, eax	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4002d5d	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x4002d5e	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x4002d5f	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x4002d61	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x4002d63	      0xe900000000	                           jmp 0x4002d68	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4002d68	     0xf1f84000000	                   nop dword [rax + rax]	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4002d70	        0x807e0100	                   cmp byte [rsi + 1], 0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4002d74	     0xf8583fdffff	                           jne 0x4002afd	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4002d7a	          0x83f804	                              cmp eax, 4	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4002d7d	            0x741e	                            je 0x4002d9d	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4002d7f	      0xbe00000000	                              mov esi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002d84	            0x31ff	                            xor edi, edi	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002d86	      0xba05000000	                              mov edx, 5	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002d8b	      0xe800000000	                          call 0x4002d90	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002d90	          0x4889de	                            mov rsi, rbx	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002d93	          0x4889c7	                            mov rdi, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002d96	            0x31c0	                            xor eax, eax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002d98	      0xe800000000	                          call 0x4002d9d	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4002d9d	    0x448b15000000	           mov r10d, dword [0x04002da4] 	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002da4	          0x4585d2	                         test r10d, r10d	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002da7	     0xf84eafeffff	                            je 0x4002c97	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002dad	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4002db1	    0xc70500000000	               mov dword [0x04002dbb], 1	      1057	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002dbb	      0xe8a0e7ffff	                call sym.exp_fold_tree_1	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4002dc0	    0x833d00000000	               cmp dword [0x04002dc7], 1	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002dc7	    0xc70500000000	               mov dword [0x04002dd1], 0	      1059	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4002dd1	     0xf8465030000	                            je 0x400313c	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4002dd7	    0x8b0500000000	            mov eax, dword [0x04002ddd] 	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002ddd	            0x85c0	                           test eax, eax	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002ddf	     0xf84d0030000	                            je 0x40031b5	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002de5	    0x488b05000000	            mov rax, qword [0x04002dec] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002dec	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002df2	     0xf84bd030000	                            je 0x40031b5	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4002df8	    0x488b15000000	            mov rdx, qword [0x04002dff] 	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4002dff	          0x4885d2	                           test rdx, rdx	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4002e02	     0xf84d9040000	                            je 0x40032e1	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x4002e08	    0x833d00000000	               cmp dword [0x04002e0f], 2	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4002e0f	            0x760c	                           jbe 0x4002e1d	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4002e11	    0x483d00000000	                              cmp rax, 0	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4002e17	     0xf8559fbffff	                           jne 0x4002976	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4002e1d	    0x488b0d000000	            mov rcx, qword [0x04002e24] 	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4002e24	    0x488b2d000000	            mov rbp, qword [0x04002e2b] 	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x4002e2b	          0x4885c9	                           test rcx, rcx	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4002e2e	     0xf8487040000	                            je 0x40032bb	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4002e34	        0x48036928	             add rbp, qword [rcx + 0x28]	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x4002e38	    0x4c8b25000000	            mov r12, qword [0x04002e3f] 	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002e3f	          0x4939ec	                            cmp r12, rbp	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002e42	     0xf860f040000	                           jbe 0x4003257	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002e48	    0x483d00000000	                              cmp rax, 0	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002e4e	     0xf8403040000	                            je 0x4003257	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x4002e54	      0xba05000000	                              mov edx, 5	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e59	      0xbe00000000	                              mov esi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e5e	            0x31ff	                            xor edi, edi	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e60	      0xe800000000	                          call 0x4002e65	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e65	        0x4883c408	                              add rsp, 8	      1241	ldexp.c	FUNCTION_29
0x4002e69	          0x4889e9	                            mov rcx, rbp	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e6c	          0x4c89e2	                            mov rdx, r12	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e6f	          0x4889de	                            mov rsi, rbx	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e72	          0x4889c7	                            mov rdi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e75	            0x31c0	                            xor eax, eax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e77	              0x5b	                                 pop rbx	      1241	ldexp.c	FUNCTION_29
0x4002e78	              0x5d	                                 pop rbp	      1241	ldexp.c	FUNCTION_29
0x4002e79	            0x415c	                                 pop r12	      1241	ldexp.c	FUNCTION_29
0x4002e7b	            0x415d	                                 pop r13	      1241	ldexp.c	FUNCTION_29
0x4002e7d	      0xe900000000	                           jmp 0x4002e82	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e82	    0x660f1f440000	                    nop word [rax + rax]	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4002e88	    0x488b3d000000	            mov rdi, qword [0x04002e8f] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4002e8f	            0x31c9	                            xor ecx, ecx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4002e91	            0x31d2	                            xor edx, edx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4002e93	    0x41b801000000	                              mov r8d, 1	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4002e99	      0xe800000000	                          call 0x4002e9e	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4002e9e	          0x4885c0	                           test rax, rax	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002ea1	          0x4889c5	                            mov rbp, rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4002ea4	     0xf84ccfaffff	                            je 0x4002976	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002eaa	        0x80781802	                cmp byte [rax + 0x18], 2	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002eae	            0x760a	                           jbe 0x4002eba	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002eb0	        0xf6401904	               test byte [rax + 0x19], 4	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002eb4	     0xf84bcfaffff	                            je 0x4002976	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002eba	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002ebe	      0xe945fcffff	                           jmp 0x4002b08	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002ec3	       0xf1f440000	                   nop dword [rax + rax]	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4002ec8	    0xc74310060000	               mov dword [rbx + 0x10], 6	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4002ecf	      0xe970fcffff	                           jmp 0x4002b44	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4002ed4	         0xf1f4000	                         nop dword [rax]	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4002ed8	    0x8b3500000000	            mov esi, dword [0x04002ede] 	       334	ldexp.c	FUNCTION_13	IF_4
0x4002ede	            0x85f6	                           test esi, esi	       334	ldexp.c	FUNCTION_13	IF_4
0x4002ee0	     0xf84e6fcffff	                            je 0x4002bcc	       334	ldexp.c	FUNCTION_13	IF_4
0x4002ee6	    0x483d00000000	                              cmp rax, 0	       335	ldexp.c	FUNCTION_13	IF_4
0x4002eec	     0xf85dafcffff	                           jne 0x4002bcc	       335	ldexp.c	FUNCTION_13	IF_4
0x4002ef2	      0xe800000000	                          call 0x4002ef7	       336	ldexp.c	FUNCTION_13	CALL_4
0x4002ef7	      0x4989442418	             mov qword [r12 + 0x18], rax	       336	ldexp.c	FUNCTION_13	CALL_4
0x4002efc	    0x488b05000000	            mov rax, qword [0x04002f03] 	       336	ldexp.c	FUNCTION_13	CALL_4
0x4002f03	      0xe9c4fcffff	                           jmp 0x4002bcc	       336	ldexp.c	FUNCTION_13	CALL_4
0x4002f08	     0xf1f84000000	                   nop dword [rax + rax]	       336	ldexp.c	FUNCTION_13	CALL_4
0x4002f10	    0x8b1500000000	            mov edx, dword [0x04002f16] 	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4002f16	            0x85d2	                           test edx, edx	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4002f18	     0xf8533fdffff	                           jne 0x4002c51	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4002f1e	    0xc70500000000	               mov dword [0x04002f28], 1	       192	ldexp.c	FUNCTION_4
0x4002f28	    0x48c705000000	               mov qword [0x04002f33], 0	       193	ldexp.c	FUNCTION_4
0x4002f33	    0x488905000000	            mov qword [0x04002f3a], rax 	       194	ldexp.c	FUNCTION_4
0x4002f3a	      0xe92efdffff	                           jmp 0x4002c6d	       194	ldexp.c	FUNCTION_4
0x4002f3f	              0x90	                                     nop	       194	ldexp.c	FUNCTION_4
0x4002f40	    0x488b3d000000	            mov rdi, qword [0x04002f47] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4002f47	          0x4889ea	                            mov rdx, rbp	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4002f4a	      0xbe00000000	                              mov esi, 0	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4002f4f	        0x488b4708	                mov rax, qword [rdi + 8]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4002f53	    0xff9028030000	                call qword [rax + 0x328]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4002f59	      0xe9a6fcffff	                           jmp 0x4002c04	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x4002f5e	    0x81fa26010000	                          cmp edx, 0x126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002f64	     0xf85b9fdffff	                           jne 0x4002d23	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002f6a	    0x8b1d00000000	            mov ebx, dword [0x04002f70] 	       343	ldexp.c	FUNCTION_14	IF_1
0x4002f70	            0x85db	                           test ebx, ebx	       343	ldexp.c	FUNCTION_14	IF_1
0x4002f72	            0x7411	                            je 0x4002f85	       343	ldexp.c	FUNCTION_14	IF_1
0x4002f74	    0x48813d000000	               cmp qword [0x04002f7f], 0	       344	ldexp.c	FUNCTION_14	IF_1
0x4002f7f	     0xf84e1020000	                            je 0x4003266	       344	ldexp.c	FUNCTION_14	IF_1
0x4002f85	    0xc70500000000	               mov dword [0x04002f8f], 0	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x4002f8f	      0xe9e2f9ffff	                           jmp 0x4002976	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x4002f94	    0x488b05000000	            mov rax, qword [0x04002f9b] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4002f9b	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x4002f9e	            0x740b	                            je 0x4002fab	       183	ldexp.c	FUNCTION_3	IF_1
0x4002fa0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4002fa4	    0x480105000000	            add qword [0x04002fab], rax 	       184	ldexp.c	FUNCTION_3	IF_1
0x4002fab	    0x48c705000000	               mov qword [0x04002fb6], 0	       185	ldexp.c	FUNCTION_3
0x4002fb6	    0xc70500000000	               mov dword [0x04002fc0], 0	       186	ldexp.c	FUNCTION_3
0x4002fc0	      0xe9b1f9ffff	                           jmp 0x4002976	       186	ldexp.c	FUNCTION_3
0x4002fc5	            0x31c0	                            xor eax, eax	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002fc7	    0x48833d000000	               cmp qword [0x04002fcf], 0	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002fcf	           0xf94c0	                                 sete al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002fd2	    0x488905000000	            mov qword [0x04002fd9], rax 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002fd9	      0xe998f9ffff	                           jmp 0x4002976	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002fde	    0x48f715000000	                  not qword [0x04002fe5]	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002fe5	      0xe98cf9ffff	                           jmp 0x4002976	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002fea	    0x48f71d000000	                  neg qword [0x04002ff1]	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002ff1	      0xe980f9ffff	                           jmp 0x4002976	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4002ff6	    0x8b2d00000000	            mov ebp, dword [0x04002ffc] 	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4002ffc	            0x85ed	                           test ebp, ebp	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4002ffe	            0x7485	                            je 0x4002f85	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x4003000	    0x488b05000000	            mov rax, qword [0x04003007] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4003007	    0x488b0d000000	            mov rcx, qword [0x0400300e] 	       183	ldexp.c	FUNCTION_3	IF_1
0x400300e	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x4003011	            0x740b	                            je 0x400301e	       183	ldexp.c	FUNCTION_3	IF_1
0x4003013	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4003017	    0x48030d000000	             add rcx, qword [0x0400301e]	       184	ldexp.c	FUNCTION_3	IF_1
0x400301e	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4003022	    0x48c705000000	               mov qword [0x0400302d], 0	       185	ldexp.c	FUNCTION_3
0x400302d	    0xc70500000000	               mov dword [0x04003037], 0	       186	ldexp.c	FUNCTION_3
0x4003037	    0x488b05000000	            mov rax, qword [0x0400303e] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x400303e	            0x760e	                           jbe 0x400304e	      1615	ldexp.c	FUNCTION_46	IF_1
0x4003040	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x4003045	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4003047	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x400304a	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x400304e	    0x488905000000	            mov qword [0x04003055], rax 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x4003055	      0xe91cf9ffff	                           jmp 0x4002976	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x400305a	    0x448b25000000	           mov r12d, dword [0x04003061] 	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x4003061	          0x4585e4	                         test r12d, r12d	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x4003064	     0xf841bffffff	                            je 0x4002f85	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x400306a	    0x488b0d000000	            mov rcx, qword [0x04003071] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4003071	    0x488b05000000	            mov rax, qword [0x04003078] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x4003078	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x400307c	            0x760e	                           jbe 0x400308c	      1615	ldexp.c	FUNCTION_46	IF_1
0x400307e	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x4003083	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4003085	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4003088	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x400308c	    0x488b15000000	            mov rdx, qword [0x04003093] 	       260	ldexp.c	FUNCTION_10
0x4003093	    0xc70500000000	               mov dword [0x0400309d], 1	       262	ldexp.c	FUNCTION_10
0x400309d	    0xc70500000000	               mov dword [0x040030a7], 1	       263	ldexp.c	FUNCTION_10
0x40030a7	        0x482b4228	             sub rax, qword [rdx + 0x28]	       264	ldexp.c	FUNCTION_10
0x40030ab	    0x48c705000000	               mov qword [0x040030b6], 0	       265	ldexp.c	FUNCTION_10
0x40030b6	    0x488915000000	            mov qword [0x040030bd], rdx 	       266	ldexp.c	FUNCTION_10
0x40030bd	    0x488905000000	            mov qword [0x040030c4], rax 	       264	ldexp.c	FUNCTION_10
0x40030c4	      0xe9adf8ffff	                           jmp 0x4002976	       264	ldexp.c	FUNCTION_10
0x40030c9	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40030cd	    0x488b3d000000	            mov rdi, qword [0x040030d4] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40030d4	            0x31c9	                            xor ecx, ecx	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40030d6	    0x41b801000000	                              mov r8d, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40030dc	      0xba01000000	                              mov edx, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40030e1	      0xe800000000	                          call 0x40030e6	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40030e6	          0x4885c0	                           test rax, rax	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40030e9	          0x4889c5	                            mov rbp, rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x40030ec	     0xf855bfaffff	                           jne 0x4002b4d	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x40030f2	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40030f6	            0x31ff	                            xor edi, edi	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40030f8	      0xba05000000	                              mov edx, 5	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x40030fd	      0xbe00000000	                              mov esi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4003102	      0xe800000000	                          call 0x4003107	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4003107	          0x4c89e6	                            mov rsi, r12	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400310a	          0x4889c7	                            mov rdi, rax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400310d	            0x31c0	                            xor eax, eax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400310f	      0xe800000000	                          call 0x4003114	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4003114	      0xe934faffff	                           jmp 0x4002b4d	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4003119	            0x31ff	                            xor edi, edi	       314	ldexp.c	FUNCTION_13	CALL_3
0x400311b	      0xba05000000	                              mov edx, 5	       314	ldexp.c	FUNCTION_13	CALL_3
0x4003120	      0xbe00000000	                              mov esi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x4003125	      0xe800000000	                          call 0x400312a	       314	ldexp.c	FUNCTION_13	CALL_3
0x400312a	          0x4c89ee	                            mov rsi, r13	       314	ldexp.c	FUNCTION_13	CALL_3
0x400312d	          0x4889c7	                            mov rdi, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4003130	            0x31c0	                            xor eax, eax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4003132	      0xe800000000	                          call 0x4003137	       314	ldexp.c	FUNCTION_13	CALL_3
0x4003137	      0xe951faffff	                           jmp 0x4002b8d	       314	ldexp.c	FUNCTION_13	CALL_3
0x400313c	    0x488b05000000	            mov rax, qword [0x04003143] 	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003143	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003149	     0xf844e010000	                            je 0x400329d	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400314f	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003155	     0xf8442010000	                            je 0x400329d	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400315b	    0x448b0d000000	            mov r9d, dword [0x04003162] 	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003162	          0x4585c9	                           test r9d, r9d	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003165	     0xf84e0000000	                            je 0x400324b	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400316b	    0x48833d000000	               cmp qword [0x04003173], 0	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003173	     0xf85d2000000	                           jne 0x400324b	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003179	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x400317d	          0x8b7110	            mov esi, dword [rcx + 0x10] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x4003180	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x4003183	     0xf8467010000	                            je 0x40032f0	       931	ldexp.c	FUNCTION_23
0x4003189	            0x8b39	                    mov edi, dword [rcx]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x400318b	        0x488d5118	                   lea rdx, [rcx + 0x18]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x400318f	      0xe800000000	                          call 0x4003194	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4003194	            0x85c0	                           test eax, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4003196	            0x7439	                            je 0x40031d1	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4003198	    0x448b05000000	            mov r8d, dword [0x0400319f] 	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400319f	          0x4585c0	                           test r8d, r8d	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40031a2	     0xf85dd000000	                           jne 0x4003285	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40031a8	    0x833d00000000	               cmp dword [0x040031af], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40031af	     0xf84c1f7ffff	                            je 0x4002976	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x40031b5	      0xba05000000	                              mov edx, 5	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40031ba	      0xbe00000000	                              mov esi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40031bf	            0x31ff	                            xor edi, edi	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40031c1	      0xe800000000	                          call 0x40031c6	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40031c6	          0x4889de	                            mov rsi, rbx	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40031c9	          0x4889c7	                            mov rdi, rax	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40031cc	      0xe986fbffff	                           jmp 0x4002d57	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x40031d1	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x40031d5	        0x83781000	               cmp dword [rax + 0x10], 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x40031d9	            0x7509	                           jne 0x40031e4	       977	ldexp.c	FUNCTION_26	CALL_2
0x40031db	          0x83382b	                   cmp dword [rax], 0x2b	       975	ldexp.c	FUNCTION_26
0x40031de	     0xf8418010000	                            je 0x40032fc	       975	ldexp.c	FUNCTION_26
0x40031e4	        0x83781002	               cmp dword [rax + 0x10], 2	       987	ldexp.c	FUNCTION_27	IF_1
0x40031e8	            0x755a	                           jne 0x4003244	       987	ldexp.c	FUNCTION_27	IF_1
0x40031ea	    0x813817010000	                  cmp dword [rax], 0x117	       987	ldexp.c	FUNCTION_27	IF_1
0x40031f0	            0x7552	                           jne 0x4003244	       987	ldexp.c	FUNCTION_27	IF_1
0x40031f2	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       989	ldexp.c	FUNCTION_27	IF_1
0x40031f6	    0x488b05000000	            mov rax, qword [0x040031fd] 	       989	ldexp.c	FUNCTION_27	IF_1
0x40031fd	        0x83791001	               cmp dword [rcx + 0x10], 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4003201	            0x7548	                           jne 0x400324b	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4003203	        0x488b5118	            mov rdx, qword [rcx + 0x18] 	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4003207	        0x837a1000	               cmp dword [rdx + 0x10], 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x400320b	            0x753e	                           jne 0x400324b	       965	ldexp.c	FUNCTION_25	CALL_2
0x400320d	    0x813a10010000	                  cmp dword [rdx], 0x110	       963	ldexp.c	FUNCTION_25
0x4003213	            0x7536	                           jne 0x400324b	       963	ldexp.c	FUNCTION_25
0x4003215	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       964	ldexp.c	FUNCTION_25	CALL_1
0x4003219	    0x813e03010000	                  cmp dword [rsi], 0x103	       920	ldexp.c	FUNCTION_22
0x400321f	            0x752a	                           jne 0x400324b	       920	ldexp.c	FUNCTION_22
0x4003221	        0x837e1003	               cmp dword [rsi + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x4003225	            0x7524	                           jne 0x400324b	       920	ldexp.c	FUNCTION_22
0x4003227	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       921	ldexp.c	FUNCTION_22
0x400322b	          0x803e2e	                    cmp byte [rsi], 0x2e	       921	ldexp.c	FUNCTION_22
0x400322e	            0x751b	                           jne 0x400324b	       921	ldexp.c	FUNCTION_22
0x4003230	        0x807e0100	                   cmp byte [rsi + 1], 0	       922	ldexp.c	FUNCTION_22
0x4003234	            0x7515	                           jne 0x400324b	       922	ldexp.c	FUNCTION_22
0x4003236	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       965	ldexp.c	FUNCTION_25	CALL_2
0x400323a	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x400323e	     0xf8411010000	                            je 0x4003355	       931	ldexp.c	FUNCTION_23
0x4003244	    0x488b05000000	            mov rax, qword [0x0400324b] 	       931	ldexp.c	FUNCTION_23
0x400324b	    0x814820000020	         or dword [rax + 0x20], 0x200000	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003252	      0xe941ffffff	                           jmp 0x4003198	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4003257	    0x48892d000000	            mov qword [0x0400325e], rbp 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x400325e	          0x48892a	                    mov qword [rdx], rbp	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4003261	      0xe910f7ffff	                           jmp 0x4002976	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x4003266	    0x8b0500000000	            mov eax, dword [0x0400326c] 	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400326c	          0x8d50ff	                      lea edx, [rax - 1]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400326f	          0x83fa01	                              cmp edx, 1	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4003272	            0x7650	                           jbe 0x40032c4	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4003274	          0x83e804	                              sub eax, 4	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4003277	          0x83f802	                              cmp eax, 2	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400327a	     0xf86f6f6ffff	                           jbe 0x4002976	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4003280	      0xe900fdffff	                           jmp 0x4002f85	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4003285	    0x488b05000000	            mov rax, qword [0x0400328c] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400328c	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4003292	     0xf8410ffffff	                            je 0x40031a8	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4003298	      0xe95bfbffff	                           jmp 0x4002df8	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400329d	    0x833d00000000	               cmp dword [0x040032a4], 0	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40032a4	     0xf84ccf6ffff	                            je 0x4002976	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40032aa	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40032b0	     0xf84c0f6ffff	                            je 0x4002976	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40032b6	      0xe93dfbffff	                           jmp 0x4002df8	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x40032bb	        0x48036828	             add rbp, qword [rax + 0x28]	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x40032bf	      0xe974fbffff	                           jmp 0x4002e38	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x40032c4	    0x488b05000000	            mov rax, qword [0x040032cb] 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40032cb	    0xc70500000000	               mov dword [0x040032d5], 3	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40032d5	    0x488905000000	            mov qword [0x040032dc], rax 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40032dc	      0xe995f6ffff	                           jmp 0x4002976	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40032e1	      0xba05000000	                              mov edx, 5	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40032e6	      0xbe00000000	                              mov esi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40032eb	      0xe9cffeffff	                           jmp 0x40031bf	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x40032f0	      0x4883791800	               cmp qword [rcx + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x40032f5	            0x74b3	                            je 0x40032aa	       931	ldexp.c	FUNCTION_23
0x40032f7	      0xe98dfeffff	                           jmp 0x4003189	       931	ldexp.c	FUNCTION_23
0x40032fc	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       976	ldexp.c	FUNCTION_26	CALL_1
0x4003300	        0x837a1003	               cmp dword [rdx + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x4003304	     0xf85dafeffff	                           jne 0x40031e4	       920	ldexp.c	FUNCTION_22
0x400330a	    0x813a03010000	                  cmp dword [rdx], 0x103	       920	ldexp.c	FUNCTION_22
0x4003310	     0xf85cefeffff	                           jne 0x40031e4	       920	ldexp.c	FUNCTION_22
0x4003316	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       921	ldexp.c	FUNCTION_22
0x400331a	          0x803a2e	                    cmp byte [rdx], 0x2e	       921	ldexp.c	FUNCTION_22
0x400331d	     0xf85c1feffff	                           jne 0x40031e4	       921	ldexp.c	FUNCTION_22
0x4003323	        0x807a0100	                   cmp byte [rdx + 1], 0	       922	ldexp.c	FUNCTION_22
0x4003327	     0xf85b7feffff	                           jne 0x40031e4	       922	ldexp.c	FUNCTION_22
0x400332d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4003331	          0x8b7010	            mov esi, dword [rax + 0x10] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x4003334	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x4003337	            0x744c	                            je 0x4003385	       931	ldexp.c	FUNCTION_23
0x4003339	            0x8b38	                    mov edi, dword [rax]	       978	ldexp.c	FUNCTION_26	CALL_3
0x400333b	        0x488d5018	                   lea rdx, [rax + 0x18]	       978	ldexp.c	FUNCTION_26	CALL_3
0x400333f	      0xe800000000	                          call 0x4003344	       978	ldexp.c	FUNCTION_26	CALL_3
0x4003344	            0x85c0	                           test eax, eax	       978	ldexp.c	FUNCTION_26	CALL_3
0x4003346	     0xf854cfeffff	                           jne 0x4003198	       978	ldexp.c	FUNCTION_26	CALL_3
0x400334c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       978	ldexp.c	FUNCTION_26	CALL_3
0x4003350	      0xe98ffeffff	                           jmp 0x40031e4	       978	ldexp.c	FUNCTION_26	CALL_3
0x4003355	      0x4883781800	               cmp qword [rax + 0x18], 0	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x400335a	     0xf85e4feffff	                           jne 0x4003244	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x4003360	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4003364	    0x488b05000000	            mov rax, qword [0x0400336b] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x400336b	        0x837a1007	               cmp dword [rdx + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x400336f	     0xf85d6feffff	                           jne 0x400324b	       931	ldexp.c	FUNCTION_23
0x4003375	      0x48837a1801	               cmp qword [rdx + 0x18], 1	       931	ldexp.c	FUNCTION_23
0x400337a	     0xf85cbfeffff	                           jne 0x400324b	       931	ldexp.c	FUNCTION_23
0x4003380	      0xe913feffff	                           jmp 0x4003198	       931	ldexp.c	FUNCTION_23
0x4003385	      0x4883781800	               cmp qword [rax + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x400338a	            0x75ad	                           jne 0x4003339	       931	ldexp.c	FUNCTION_23
0x400338c	      0xe907feffff	                           jmp 0x4003198	       931	ldexp.c	FUNCTION_23
exp_relop	DO,0:functions,0:CALL,2:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	21
0x40028c0	            0x4154	                                push r12	       228	ldexp.c	FUNCTION_7
0x40028c2	              0x55	                                push rbp	       228	ldexp.c	FUNCTION_7
0x40028c3	          0x4989fc	                            mov r12, rdi	       228	ldexp.c	FUNCTION_7
0x40028c6	              0x53	                                push rbx	       228	ldexp.c	FUNCTION_7
0x40028c7	      0xbf28000000	                           mov edi, 0x28	       229	ldexp.c	FUNCTION_7	CALL_1
0x40028cc	          0x4889f5	                            mov rbp, rsi	       228	ldexp.c	FUNCTION_7
0x40028cf	      0xe800000000	                          call 0x40028d4	       229	ldexp.c	FUNCTION_7	CALL_1
0x40028d4	          0x4889c3	                            mov rbx, rax	       229	ldexp.c	FUNCTION_7	CALL_1
0x40028d7	    0xc7006e010000	                  mov dword [rax], 0x16e	       230	ldexp.c	FUNCTION_7
0x40028dd	      0xe800000000	                          call 0x40028e2	       231	ldexp.c	FUNCTION_7	CALL_2
0x40028e2	        0x48894308	                mov qword [rbx + 8], rax	       231	ldexp.c	FUNCTION_7	CALL_2
0x40028e6	    0x8b0500000000	            mov eax, dword [0x040028ec] 	       232	ldexp.c	FUNCTION_7
0x40028ec	    0xc74310090000	               mov dword [rbx + 0x10], 9	       233	ldexp.c	FUNCTION_7
0x40028f3	        0x4c896318	             mov qword [rbx + 0x18], r12	       234	ldexp.c	FUNCTION_7
0x40028f7	        0x48896b20	             mov qword [rbx + 0x20], rbp	       235	ldexp.c	FUNCTION_7
0x40028fb	          0x894304	                mov dword [rbx + 4], eax	       232	ldexp.c	FUNCTION_7
0x40028fe	          0x4889d8	                            mov rax, rbx	       237	ldexp.c	FUNCTION_7
0x4002901	              0x5b	                                 pop rbx	       237	ldexp.c	FUNCTION_7
0x4002902	              0x5d	                                 pop rbp	       237	ldexp.c	FUNCTION_7
0x4002903	            0x415c	                                 pop r12	       237	ldexp.c	FUNCTION_7
0x4002905	              0xc3	                                     ret	       237	ldexp.c	FUNCTION_7
ldexp_finish	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	2
0x4007600	      0xbf00000000	                              mov edi, 0	      1667	ldexp.c	FUNCTION_50	CALL_1
0x4007605	      0xe900000000	                   jmp section_end..data	      1667	ldexp.c	FUNCTION_50	CALL_1
exp_trinop	DO,0:functions,0:CALL,2:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,1	50
0x4003f10	            0x4155	                                push r13	      1290	ldexp.c	FUNCTION_33
0x4003f12	            0x4154	                                push r12	      1290	ldexp.c	FUNCTION_33
0x4003f14	          0x4189fd	                           mov r13d, edi	      1290	ldexp.c	FUNCTION_33
0x4003f17	              0x55	                                push rbp	      1290	ldexp.c	FUNCTION_33
0x4003f18	              0x53	                                push rbx	      1290	ldexp.c	FUNCTION_33
0x4003f19	      0xbf30000000	                           mov edi, 0x30	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4003f1e	          0x4889f3	                            mov rbx, rsi	      1290	ldexp.c	FUNCTION_33
0x4003f21	          0x4889d5	                            mov rbp, rdx	      1290	ldexp.c	FUNCTION_33
0x4003f24	          0x4989cc	                            mov r12, rcx	      1290	ldexp.c	FUNCTION_33
0x4003f27	        0x4883ec18	                           sub rsp, 0x18	      1290	ldexp.c	FUNCTION_33
0x4003f2b	      0xe800000000	                          call 0x4003f30	      1291	ldexp.c	FUNCTION_33	CALL_1
0x4003f30	          0x448928	                   mov dword [rax], r13d	      1293	ldexp.c	FUNCTION_33
0x4003f33	        0x488b5308	                mov rdx, qword [rbx + 8]	      1294	ldexp.c	FUNCTION_33
0x4003f37	        0x48895008	                mov qword [rax + 8], rdx	      1294	ldexp.c	FUNCTION_33
0x4003f3b	          0x8b5304	                mov edx, dword [rbx + 4]	      1295	ldexp.c	FUNCTION_33
0x4003f3e	        0x48896820	             mov qword [rax + 0x20], rbp	      1296	ldexp.c	FUNCTION_33
0x4003f42	        0x48895818	             mov qword [rax + 0x18], rbx	      1297	ldexp.c	FUNCTION_33
0x4003f46	        0x4c896028	             mov qword [rax + 0x28], r12	      1298	ldexp.c	FUNCTION_33
0x4003f4a	    0xc74010010000	               mov dword [rax + 0x10], 1	      1299	ldexp.c	FUNCTION_33
0x4003f51	          0x895004	                mov dword [rax + 4], edx	      1295	ldexp.c	FUNCTION_33
0x4003f54	        0x837b1007	               cmp dword [rbx + 0x10], 7	      1300	ldexp.c	FUNCTION_33	IF_1
0x4003f58	            0x740e	                            je 0x4003f68	      1300	ldexp.c	FUNCTION_33	IF_1
0x4003f5a	        0x4883c418	                           add rsp, 0x18	      1305	ldexp.c	FUNCTION_33
0x4003f5e	              0x5b	                                 pop rbx	      1305	ldexp.c	FUNCTION_33
0x4003f5f	              0x5d	                                 pop rbp	      1305	ldexp.c	FUNCTION_33
0x4003f60	            0x415c	                                 pop r12	      1305	ldexp.c	FUNCTION_33
0x4003f62	            0x415d	                                 pop r13	      1305	ldexp.c	FUNCTION_33
0x4003f64	              0xc3	                                     ret	      1305	ldexp.c	FUNCTION_33
0x4003f65	           0xf1f00	                         nop dword [rax]	      1305	ldexp.c	FUNCTION_33
0x4003f68	        0x837d1007	               cmp dword [rbp + 0x10], 7	      1301	ldexp.c	FUNCTION_33	IF_1
0x4003f6c	            0x75ec	                           jne 0x4003f5a	      1301	ldexp.c	FUNCTION_33	IF_1
0x4003f6e	    0x41837c241007	               cmp dword [r12 + 0x10], 7	      1302	ldexp.c	FUNCTION_33	IF_1
0x4003f74	            0x75e4	                           jne 0x4003f5a	      1302	ldexp.c	FUNCTION_33	IF_1
0x4003f76	          0x4889c7	                            mov rdi, rax	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4003f79	      0x4889442408	                mov qword [rsp + 8], rax	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4003f7e	    0xc70500000000	               mov dword [0x04003f88], 0	      1246	ldexp.c	FUNCTION_30
0x4003f88	    0x48c705000000	               mov qword [0x04003f93], 0	      1247	ldexp.c	FUNCTION_30
0x4003f93	    0x48c705000000	               mov qword [0x04003f9e], 0	      1248	ldexp.c	FUNCTION_30
0x4003f9e	    0x48c705000000	               mov qword [0x04003fa9], 0	      1249	ldexp.c	FUNCTION_30
0x4003fa9	      0xe8b2d5ffff	                call sym.exp_fold_tree_1	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4003fae	    0x8b0500000000	            mov eax, dword [0x04003fb4] 	      1257	ldexp.c	FUNCTION_31	IF_1
0x4003fb4	            0x85c0	                           test eax, eax	      1257	ldexp.c	FUNCTION_31	IF_1
0x4003fb6	      0x488b442408	                mov rax, qword [rsp + 8]	      1257	ldexp.c	FUNCTION_31	IF_1
0x4003fbb	            0x749d	                            je 0x4003f5a	      1257	ldexp.c	FUNCTION_31	IF_1
0x4003fbd	    0xc70002010000	                  mov dword [rax], 0x102	      1259	ldexp.c	FUNCTION_31	IF_1
0x4003fc3	    0x488b15000000	            mov rdx, qword [0x04003fca] 	      1260	ldexp.c	FUNCTION_31	IF_1
0x4003fca	    0x48c740200000	               mov qword [rax + 0x20], 0	      1261	ldexp.c	FUNCTION_31	IF_1
0x4003fd2	    0xc74010070000	               mov dword [rax + 0x10], 7	      1262	ldexp.c	FUNCTION_31	IF_1
0x4003fd9	        0x48895018	             mov qword [rax + 0x18], rdx	      1260	ldexp.c	FUNCTION_31	IF_1
0x4003fdd	      0xe978ffffff	                           jmp 0x4003f5a	      1260	ldexp.c	FUNCTION_31	IF_1
exp_assign	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	21
0x4004100	            0x4154	                                push r12	      1363	ldexp.c	FUNCTION_37
0x4004102	              0x55	                                push rbp	      1363	ldexp.c	FUNCTION_37
0x4004103	          0x4989fc	                            mov r12, rdi	      1363	ldexp.c	FUNCTION_37
0x4004106	              0x53	                                push rbx	      1363	ldexp.c	FUNCTION_37
0x4004107	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x400410c	          0x4889f3	                            mov rbx, rsi	      1363	ldexp.c	FUNCTION_37
0x400410f	            0x89d5	                            mov ebp, edx	      1363	ldexp.c	FUNCTION_37
0x4004111	      0xe800000000	                          call 0x4004116	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4004116	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x400411c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x4004120	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x4004124	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x4004127	    0xc74010040000	               mov dword [rax + 0x10], 4	      1352	ldexp.c	FUNCTION_36
0x400412e	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x4004132	        0x4c896018	             mov qword [rax + 0x18], r12	      1354	ldexp.c	FUNCTION_36
0x4004136	          0x896828	             mov dword [rax + 0x28], ebp	      1355	ldexp.c	FUNCTION_36
0x4004139	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x400413c	              0x5b	                                 pop rbx	      1365	ldexp.c	FUNCTION_37
0x400413d	              0x5d	                                 pop rbp	      1365	ldexp.c	FUNCTION_37
0x400413e	            0x415c	                                 pop r12	      1365	ldexp.c	FUNCTION_37
0x4004140	              0xc3	                                     ret	      1365	ldexp.c	FUNCTION_37
exp_get_abs_int	DO,0:functions,0:CALL,3:WHILE,0:SWITCH,0:FOR,0:ELSE,1:IF,4	584
0x4006a50	            0x4157	                                push r15	      1592	ldexp.c	FUNCTION_45
0x4006a52	            0x4156	                                push r14	      1592	ldexp.c	FUNCTION_45
0x4006a54	            0x4155	                                push r13	      1592	ldexp.c	FUNCTION_45
0x4006a56	            0x4154	                                push r12	      1592	ldexp.c	FUNCTION_45
0x4006a58	              0x55	                                push rbp	      1592	ldexp.c	FUNCTION_45
0x4006a59	              0x53	                                push rbx	      1592	ldexp.c	FUNCTION_45
0x4006a5a	            0x89f3	                            mov ebx, esi	      1592	ldexp.c	FUNCTION_45
0x4006a5c	        0x4883ec08	                              sub rsp, 8	      1592	ldexp.c	FUNCTION_45
0x4006a60	          0x4885ff	                           test rdi, rdi	      1593	ldexp.c	FUNCTION_45	IF_1
0x4006a63	     0xf84ae000000	                            je 0x4006b17	      1593	ldexp.c	FUNCTION_45	IF_1
0x4006a69	    0x48c705000000	               mov qword [0x04006a74], 0	      1247	ldexp.c	FUNCTION_30
0x4006a74	    0x48c705000000	               mov qword [0x04006a7f], 0	      1248	ldexp.c	FUNCTION_30
0x4006a7f	          0x4889fd	                            mov rbp, rdi	      1248	ldexp.c	FUNCTION_30
0x4006a82	    0x48c705000000	               mov qword [0x04006a8d], 0	      1249	ldexp.c	FUNCTION_30
0x4006a8d	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4006a90	          0x4989d4	                            mov r12, rdx	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4006a93	    0xc70500000000	               mov dword [0x04006a9d], 0	      1246	ldexp.c	FUNCTION_30
0x4006a9d	          0x83f809	                              cmp eax, 9	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4006aa0	     0xf87fa030000	                            ja 0x4006ea0	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4006aa6	            0x89c2	                            mov edx, eax	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4006aa8	    0xff24d5000000	                       jmp qword [rdx*8]	      1006	ldexp.c	FUNCTION_28	SWITCH_1
0x4006aaf	      0x3d26010000	                          cmp eax, 0x126	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006ab4	     0xf85a5050000	                           jne 0x400705f	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006aba	    0x448b15000000	           mov r10d, dword [0x04006ac1] 	       343	ldexp.c	FUNCTION_14	IF_1
0x4006ac1	          0x4585d2	                         test r10d, r10d	       343	ldexp.c	FUNCTION_14	IF_1
0x4006ac4	            0x7411	                            je 0x4006ad7	       343	ldexp.c	FUNCTION_14	IF_1
0x4006ac6	    0x48813d000000	               cmp qword [0x04006ad1], 0	       344	ldexp.c	FUNCTION_14	IF_1
0x4006ad1	     0xf8420090000	                            je 0x40073f7	       344	ldexp.c	FUNCTION_14	IF_1
0x4006ad7	    0xc70500000000	               mov dword [0x04006ae1], 0	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x4006ae1	     0xf1f80000000	                         nop dword [rax]	       376	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	ELSE_1
0x4006ae8	          0x4d85e4	                           test r12, r12	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4006aeb	            0x742a	                            je 0x4006b17	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4006aed	    0x833d00000000	               cmp dword [0x04006af4], 1	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4006af4	            0x7421	                            je 0x4006b17	      1603	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4
0x4006af6	      0xba05000000	                              mov edx, 5	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006afb	      0xbe00000000	                              mov esi, 0	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006b00	            0x31ff	                            xor edi, edi	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006b02	      0xe800000000	                          call 0x4006b07	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006b07	          0x4c89e2	                            mov rdx, r12	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006b0a	          0x4889c7	                            mov rdi, rax	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006b0d	          0x4889ee	                            mov rsi, rbp	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006b10	            0x31c0	                            xor eax, eax	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006b12	      0xe800000000	                          call 0x4006b17	      1605	ldexp.c	FUNCTION_45	IF_1	ELSE_1	IF_4	CALL_3
0x4006b17	          0x4863c3	                         movsxd rax, ebx	      1609	ldexp.c	FUNCTION_45
0x4006b1a	        0x4883c408	                              add rsp, 8	      1610	ldexp.c	FUNCTION_45
0x4006b1e	              0x5b	                                 pop rbx	      1610	ldexp.c	FUNCTION_45
0x4006b1f	              0x5d	                                 pop rbp	      1610	ldexp.c	FUNCTION_45
0x4006b20	            0x415c	                                 pop r12	      1610	ldexp.c	FUNCTION_45
0x4006b22	            0x415d	                                 pop r13	      1610	ldexp.c	FUNCTION_45
0x4006b24	            0x415e	                                 pop r14	      1610	ldexp.c	FUNCTION_45
0x4006b26	            0x415f	                                 pop r15	      1610	ldexp.c	FUNCTION_45
0x4006b28	              0xc3	                                     ret	      1610	ldexp.c	FUNCTION_45
0x4006b29	     0xf1f80000000	                         nop dword [rax]	      1610	ldexp.c	FUNCTION_45
0x4006b30	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4006b34	      0xe827aaffff	                call sym.exp_fold_tree_1	      1029	ldexp.c	FUNCTION_28	SWITCH_1	CALL_6
0x4006b39	    0x833d00000000	               cmp dword [0x04006b40], 4	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4006b40	     0xf850f010000	                           jne 0x4006c55	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4006b46	    0x48833d000000	               cmp qword [0x04006b4e], 0	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4006b4e	     0xf8501010000	                           jne 0x4006c55	      1030	ldexp.c	FUNCTION_28	SWITCH_1	IF_4
0x4006b54	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006b58	            0x31c0	                            xor eax, eax	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006b5a	      0xbf00000000	                              mov edi, 0	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006b5f	      0xe800000000	                          call 0x4006b64	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006b64	    0x8b0500000000	            mov eax, dword [0x04006b6a] 	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006b6a	      0xe9c4000000	                           jmp 0x4006c33	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006b6f	              0x90	                                     nop	      1031	ldexp.c	FUNCTION_28	SWITCH_1	CALL_7
0x4006b70	    0x448b3d000000	           mov r15d, dword [0x04006b77] 	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4006b77	          0x4585ff	                         test r15d, r15d	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4006b7a	     0xf842f030000	                            je 0x4006eaf	      1018	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4006b80	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4006b84	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1020	ldexp.c	FUNCTION_28	SWITCH_1	IF_3
0x4006b88	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4006b8c	        0x48034720	             add rax, qword [rdi + 0x20]	      1021	ldexp.c	FUNCTION_28	SWITCH_1	IF_3	CALL_4
0x4006b90	    0xc70500000000	               mov dword [0x04006b9a], 1	       251	ldexp.c	FUNCTION_9
0x4006b9a	    0x48c705000000	               mov qword [0x04006ba5], 0	       253	ldexp.c	FUNCTION_9
0x4006ba5	    0x488915000000	            mov qword [0x04006bac], rdx 	       254	ldexp.c	FUNCTION_9
0x4006bac	    0x488905000000	            mov qword [0x04006bb3], rax 	       252	ldexp.c	FUNCTION_9
0x4006bb3	       0xf1f440000	                   nop dword [rax + rax]	       252	ldexp.c	FUNCTION_9
0x4006bb8	          0x4885d2	                           test rdx, rdx	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4006bbb	     0xf8459ffffff	                            je 0x4006b1a	      1599	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4006bc1	        0x48034228	             add rax, qword [rdx + 0x28]	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4006bc5	    0x488905000000	            mov qword [0x04006bcc], rax 	      1600	ldexp.c	FUNCTION_45	IF_1	IF_2	IF_3
0x4006bcc	        0x4883c408	                              add rsp, 8	      1610	ldexp.c	FUNCTION_45
0x4006bd0	              0x5b	                                 pop rbx	      1610	ldexp.c	FUNCTION_45
0x4006bd1	              0x5d	                                 pop rbp	      1610	ldexp.c	FUNCTION_45
0x4006bd2	            0x415c	                                 pop r12	      1610	ldexp.c	FUNCTION_45
0x4006bd4	            0x415d	                                 pop r13	      1610	ldexp.c	FUNCTION_45
0x4006bd6	            0x415e	                                 pop r14	      1610	ldexp.c	FUNCTION_45
0x4006bd8	            0x415f	                                 pop r15	      1610	ldexp.c	FUNCTION_45
0x4006bda	              0xc3	                                     ret	      1610	ldexp.c	FUNCTION_45
0x4006bdb	       0xf1f440000	                   nop dword [rax + rax]	      1610	ldexp.c	FUNCTION_45
0x4006be0	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       673	ldexp.c	FUNCTION_20	CALL_1
0x4006be4	    0x4c8b2d000000	            mov r13, qword [0x04006beb] 	       671	ldexp.c	FUNCTION_20
0x4006beb	      0xe870a9ffff	                call sym.exp_fold_tree_1	       673	ldexp.c	FUNCTION_20	CALL_1
0x4006bf0	    0x448b0d000000	            mov r9d, dword [0x04006bf7] 	       675	ldexp.c	FUNCTION_20	IF_1
0x4006bf7	    0x4c892d000000	            mov qword [0x04006bfe], r13 	       674	ldexp.c	FUNCTION_20
0x4006bfe	          0x4585c9	                           test r9d, r9d	       675	ldexp.c	FUNCTION_20	IF_1
0x4006c01	     0xf84e1feffff	                            je 0x4006ae8	       675	ldexp.c	FUNCTION_20	IF_1
0x4006c07	    0x48833d000000	               cmp qword [0x04006c0f], 0	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006c0f	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006c13	      0x480f457d20	          cmovne rdi, qword [rbp + 0x20]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006c18	      0xe843a9ffff	                call sym.exp_fold_tree_1	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006c1d	    0x8b0500000000	            mov eax, dword [0x04006c23] 	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006c23	            0xeb0e	                           jmp 0x4006c33	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006c25	           0xf1f00	                         nop dword [rax]	       676	ldexp.c	FUNCTION_20	IF_1	CALL_2
0x4006c28	      0xe8f394ffff	                    call sym.fold_binary	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4006c2d	    0x8b0500000000	            mov eax, dword [0x04006c33] 	      1039	ldexp.c	FUNCTION_28	SWITCH_1	CALL_9
0x4006c33	            0x85c0	                           test eax, eax	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4006c35	     0xf84adfeffff	                            je 0x4006ae8	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4006c3b	    0x488b15000000	            mov rdx, qword [0x04006c42] 	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4006c42	    0x488b05000000	            mov rax, qword [0x04006c49] 	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4006c49	      0xe96affffff	                           jmp 0x4006bb8	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4006c4e	            0x6690	                                     nop	      1597	ldexp.c	FUNCTION_45	IF_1	IF_2
0x4006c50	      0xe89bb3ffff	                      call sym.fold_name	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4006c55	    0x8b0500000000	            mov eax, dword [0x04006c5b] 	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4006c5b	            0xebd6	                           jmp 0x4006c33	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4006c5d	           0xf1f00	                         nop dword [rax]	      1223	ldexp.c	FUNCTION_28	SWITCH_1	CALL_33
0x4006c60	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4006c64	      0xe8f7a8ffff	                call sym.exp_fold_tree_1	       367	ldexp.c	ELSE_3	FUNCTION_15	CALL_1
0x4006c69	    0x448b35000000	           mov r14d, dword [0x04006c70] 	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4006c70	          0x4585f6	                         test r14d, r14d	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4006c73	     0xf846ffeffff	                            je 0x4006ae8	       368	ldexp.c	ELSE_3	FUNCTION_15	IF_1
0x4006c79	          0x8b4500	                    mov eax, dword [rbp]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006c7c	      0x3d17010000	                          cmp eax, 0x117	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006c81	     0xf8409050000	                            je 0x4007190	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006c87	     0xf8ebb030000	                           jle 0x4007048	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006c8d	      0x3d40010000	                          cmp eax, 0x140	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006c92	     0xf8456040000	                            je 0x40070ee	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006c98	     0xf8e11feffff	                           jle 0x4006aaf	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006c9e	      0x3d60010000	                          cmp eax, 0x160	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006ca3	     0xf844f050000	                            je 0x40071f8	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006ca9	            0x31f6	                            xor esi, esi	       163	ldexp.c	FUNCTION_2
0x4006cab	      0x3d67010000	                          cmp eax, 0x167	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006cb0	    0x488b15000000	            mov rdx, qword [0x04006cb7] 	       161	ldexp.c	FUNCTION_2
0x4006cb7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       162	ldexp.c	FUNCTION_2
0x4006cbe	      0xbf01000000	                              mov edi, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4006cc3	            0x740e	                            je 0x4006cd3	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006cc5	      0xe995030000	                           jmp 0x400705f	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006cca	    0x660f1f440000	                    nop word [rax + rax]	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4006cd0	          0x4889c1	                            mov rcx, rax	       167	ldexp.c	FUNCTION_2	DO_1
0x4006cd3	        0x4883fa01	                              cmp rdx, 1	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4006cd7	        0x488d4101	                      lea rax, [rcx + 1]	       167	ldexp.c	FUNCTION_2	DO_1
0x4006cdb	            0x7606	                           jbe 0x4006ce3	       169	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4006cdd	          0xf6c201	                              test dl, 1	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4006ce0	           0xf45f7	                         cmovne esi, edi	       170	ldexp.c	FUNCTION_2	DO_1	IF_1
0x4006ce3	          0x48d1ea	                              shr rdx, 1	       172	ldexp.c	FUNCTION_2
0x4006ce6	            0x75e8	                           jne 0x4006cd0	       172	ldexp.c	FUNCTION_2
0x4006ce8	        0x4883c102	                              add rcx, 2	       175	ldexp.c	FUNCTION_2	IF_2
0x4006cec	            0x85f6	                           test esi, esi	       175	ldexp.c	FUNCTION_2	IF_2
0x4006cee	    0x48c705000000	               mov qword [0x04006cf9], 0	       176	ldexp.c	FUNCTION_2
0x4006cf9	        0x480f45c1	                         cmovne rax, rcx	       175	ldexp.c	FUNCTION_2	IF_2
0x4006cfd	    0x488905000000	            mov qword [0x04006d04], rax 	       177	ldexp.c	FUNCTION_2
0x4006d04	      0xe911feffff	                           jmp 0x4006b1a	       177	ldexp.c	FUNCTION_2
0x4006d09	     0xf1f80000000	                         nop dword [rax]	       177	ldexp.c	FUNCTION_2
0x4006d10	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4006d14	          0x803e2e	                    cmp byte [rsi], 0x2e	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4006d17	     0xf8483020000	                            je 0x4006fa0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4006d1d	          0x4531ed	                          xor r13d, r13d	      1123	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4006d20	          0x83f805	                              cmp eax, 5	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4006d23	     0xf840f020000	                            je 0x4006f38	      1125	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15
0x4006d29	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4006d2d	    0x488935000000	            mov qword [0x04006d34], rsi 	      1144	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4006d34	    0x48c705000000	               mov qword [0x04006d3f], 0	      1145	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4006d3f	      0xe81ca8ffff	                call sym.exp_fold_tree_1	      1146	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	CALL_26
0x4006d44	    0x833d00000000	               cmp dword [0x04006d4b], 4	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4006d4b	            0x7433	                            je 0x4006d80	      1156	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4006d4d	    0x48833d000000	               cmp qword [0x04006d55], 0	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4006d55	            0x7529	                           jne 0x4006d80	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4006d57	    0x660f1f840000	                    nop word [rax + rax]	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4006d60	    0x8b0500000000	            mov eax, dword [0x04006d66] 	      1157	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17
0x4006d66	    0x48c705000000	               mov qword [0x04006d71], 0	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4006d71	      0xe9bdfeffff	                           jmp 0x4006c33	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4006d76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1218	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8
0x4006d80	        0x837d1005	               cmp dword [rbp + 0x10], 5	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4006d84	     0xf84ee010000	                            je 0x4006f78	      1159	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4006d8a	          0x4d85ed	                           test r13, r13	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4006d8d	     0xf849a040000	                            je 0x400722d	      1162	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19
0x4006d93	    0x8b0500000000	            mov eax, dword [0x04006d99] 	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006d99	            0x85c0	                           test eax, eax	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006d9b	     0xf857f010000	                           jne 0x4006f20	      1175	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006da1	      0x41807d1800	                cmp byte [r13 + 0x18], 0	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006da6	            0x75be	                           jne 0x4006d66	      1176	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006da8	    0x48c705000000	               mov qword [0x04006db3], 0	      1178	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006db3	    0xc70500000000	               mov dword [0x04006dbd], 1	      1180	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_21
0x4006dbd	    0x488b05000000	            mov rax, qword [0x04006dc4] 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4006dc4	    0x488905000000	            mov qword [0x04006dcb], rax 	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4006dcb	       0xf1f440000	                   nop dword [rax + rax]	      1186	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4006dd0	        0x4c8b7d18	            mov r15, qword [rbp + 0x18] 	      1187	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_24	CALL_30
0x4006dd4	            0x31c9	                            xor ecx, ecx	       309	ldexp.c	FUNCTION_13
0x4006dd6	      0xba01000000	                              mov edx, 1	       309	ldexp.c	FUNCTION_13
0x4006ddb	      0xbf00000000	                              mov edi, 0	       309	ldexp.c	FUNCTION_13
0x4006de0	          0x4c89fe	                            mov rsi, r15	       309	ldexp.c	FUNCTION_13
0x4006de3	      0xe800000000	                          call 0x4006de8	       309	ldexp.c	FUNCTION_13
0x4006de8	          0x4885c0	                           test rax, rax	       313	ldexp.c	FUNCTION_13	IF_1
0x4006deb	          0x4989c6	                            mov r14, rax	       309	ldexp.c	FUNCTION_13
0x4006dee	     0xf842a050000	                            je 0x400731e	       313	ldexp.c	FUNCTION_13	IF_1
0x4006df4	      0x41f6451908	               test byte [r13 + 0x19], 8	       319	ldexp.c	FUNCTION_13	IF_2
0x4006df9	            0x7511	                           jne 0x4006e0c	       319	ldexp.c	FUNCTION_13	IF_2
0x4006dfb	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       320	ldexp.c	FUNCTION_13	IF_2
0x4006e00	          0x83e803	                              sub eax, 3	       320	ldexp.c	FUNCTION_13	IF_2
0x4006e03	            0x3c02	                               cmp al, 2	       320	ldexp.c	FUNCTION_13	IF_2
0x4006e05	            0x7705	                            ja 0x4006e0c	       320	ldexp.c	FUNCTION_13	IF_2
0x4006e07	      0x41804e2101	                 or byte [r14 + 0x21], 1	       324	ldexp.c	FUNCTION_13	IF_2
0x4006e0c	    0x833d00000000	               cmp dword [0x04006e13], 4	       333	ldexp.c	FUNCTION_13	IF_4
0x4006e13	    0x8b0500000000	            mov eax, dword [0x04006e19] 	       331	ldexp.c	FUNCTION_13
0x4006e19	    0x49c746180000	               mov qword [r14 + 0x18], 0	       332	ldexp.c	FUNCTION_13
0x4006e21	        0x41884620	               mov byte [r14 + 0x20], al	       331	ldexp.c	FUNCTION_13
0x4006e25	    0x488b05000000	            mov rax, qword [0x04006e2c] 	       335	ldexp.c	FUNCTION_13	IF_4
0x4006e2c	     0xf8446020000	                            je 0x4007078	       333	ldexp.c	FUNCTION_13	IF_4
0x4006e32	    0x488b15000000	            mov rdx, qword [0x04006e39] 	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e39	      0x41c6451803	                mov byte [r13 + 0x18], 3	      1198	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e3e	        0x49894528	             mov qword [r13 + 0x28], rax	      1200	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e42	        0x49895530	             mov qword [r13 + 0x30], rdx	      1199	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e46	          0x8b4504	                mov eax, dword [rbp + 4]	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e49	      0x410fb65519	           movzx edx, byte [r13 + 0x19] 	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e4e	            0x85c0	                           test eax, eax	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e50	           0xf94c0	                                 sete al	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e53	          0xc1e002	                              shl eax, 2	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e56	          0x83e2fb	                     and edx, 0xfffffffb	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e59	             0x9d0	                             or eax, edx	      1201	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e5b	          0x83c808	                               or eax, 8	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e5e	        0x41884519	               mov byte [r13 + 0x19], al	      1202	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22
0x4006e62	          0x8b5528	            mov edx, dword [rbp + 0x28] 	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4006e65	            0x85d2	                           test edx, edx	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4006e67	     0xf8543020000	                           jne 0x40070b0	      1203	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25
0x4006e6d	    0x488b15000000	            mov rdx, qword [0x04006e74] 	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4006e74	        0x488d42ff	                      lea rax, [rdx - 1]	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4006e78	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4006e7c	     0xf87defeffff	                            ja 0x4006d60	      1211	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26
0x4006e82	    0x488b3d000000	            mov rdi, qword [0x04006e89] 	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4006e89	          0x4c89ee	                            mov rsi, r13	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4006e8c	        0x488b4708	                mov rax, qword [rdi + 8]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4006e90	    0xff90d0020000	                call qword [rax + 0x2d0]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4006e96	      0xe9c5feffff	                           jmp 0x4006d60	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4006e9b	       0xf1f440000	                   nop dword [rax + rax]	      1214	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_26	CALL_32
0x4006ea0	      0xbecb040000	                          mov esi, 0x4cb	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4006ea5	      0xbf00000000	                              mov edi, 0	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4006eaa	      0xe800000000	                          call 0x4006eaf	      1227	ldexp.c	FUNCTION_28	SWITCH_1	CALL_34
0x4006eaf	    0x48c705000000	               mov qword [0x04006eba], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4006eba	    0x48c705000000	               mov qword [0x04006ec5], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4006ec5	    0x48c705000000	               mov qword [0x04006ed0], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4006ed0	    0x48c705000000	               mov qword [0x04006edb], 0	        90	string3.h	FUNCTION_54	CALL_6
0x4006edb	      0xe908fcffff	                           jmp 0x4006ae8	        90	string3.h	FUNCTION_54	CALL_6
0x4006ee0	    0x8b1500000000	            mov edx, dword [0x04006ee6] 	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4006ee6	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1011	ldexp.c	FUNCTION_28	SWITCH_1	CALL_2
0x4006eea	    0xc70500000000	               mov dword [0x04006ef4], 1	       192	ldexp.c	FUNCTION_4
0x4006ef4	            0x85d2	                           test edx, edx	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4006ef6	     0xf8588000000	                           jne 0x4006f84	      1010	ldexp.c	FUNCTION_28	SWITCH_1	IF_2
0x4006efc	    0x48c705000000	               mov qword [0x04006f07], 0	       193	ldexp.c	FUNCTION_4
0x4006f07	    0x488905000000	            mov qword [0x04006f0e], rax 	       194	ldexp.c	FUNCTION_4
0x4006f0e	            0x6690	                                     nop	       194	ldexp.c	FUNCTION_4
0x4006f10	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4006f14	    0x488905000000	            mov qword [0x04006f1b], rax 	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4006f1b	      0xe91bfdffff	                           jmp 0x4006c3b	      1014	ldexp.c	FUNCTION_28	SWITCH_1
0x4006f20	    0x48833d000000	               cmp qword [0x04006f28], 0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4006f28	     0xf85a2feffff	                           jne 0x4006dd0	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4006f2e	      0xe98afeffff	                           jmp 0x4006dbd	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4006f33	       0xf1f440000	                   nop dword [rax + rax]	      1185	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_23
0x4006f38	    0x488b3d000000	            mov rdi, qword [0x04006f3f] 	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006f3f	            0x31c9	                            xor ecx, ecx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006f41	            0x31d2	                            xor edx, edx	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006f43	    0x41b801000000	                              mov r8d, 1	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006f49	      0xe800000000	                          call 0x4006f4e	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006f4e	          0x4885c0	                           test rax, rax	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f51	          0x4989c5	                            mov r13, rax	      1127	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	CALL_25
0x4006f54	     0xf84fbfcffff	                            je 0x4006c55	      1129	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f5a	        0x80781802	                cmp byte [rax + 0x18], 2	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f5e	            0x760a	                           jbe 0x4006f6a	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f60	        0xf6401904	               test byte [rax + 0x19], 4	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f64	     0xf84ebfcffff	                            je 0x4006c55	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f6a	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f6e	      0xe9b6fdffff	                           jmp 0x4006d29	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f73	       0xf1f440000	                   nop dword [rax + rax]	      1130	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_15	IF_16
0x4006f78	    0xc74510060000	               mov dword [rbp + 0x10], 6	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4006f7f	      0xe906feffff	                           jmp 0x4006d8a	      1160	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_18
0x4006f84	    0x488905000000	            mov qword [0x04006f8b], rax 	       243	ldexp.c	FUNCTION_8
0x4006f8b	    0x48c705000000	               mov qword [0x04006f96], 0	       245	ldexp.c	FUNCTION_8
0x4006f96	      0xe975ffffff	                           jmp 0x4006f10	       245	ldexp.c	FUNCTION_8
0x4006f9b	       0xf1f440000	                   nop dword [rax + rax]	       245	ldexp.c	FUNCTION_8
0x4006fa0	        0x807e0100	                   cmp byte [rsi + 1], 0	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4006fa4	     0xf8573fdffff	                           jne 0x4006d1d	      1049	ldexp.c	FUNCTION_28	SWITCH_1	IF_5
0x4006faa	          0x83f804	                              cmp eax, 4	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4006fad	            0x741e	                            je 0x4006fcd	      1051	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6
0x4006faf	      0xbe00000000	                              mov esi, 0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006fb4	            0x31ff	                            xor edi, edi	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006fb6	      0xba05000000	                              mov edx, 5	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006fbb	      0xe800000000	                          call 0x4006fc0	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006fc0	          0x4889ee	                            mov rsi, rbp	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006fc3	          0x4889c7	                            mov rdi, rax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006fc6	            0x31c0	                            xor eax, eax	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006fc8	      0xe800000000	                          call 0x4006fcd	      1052	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_6	CALL_12
0x4006fcd	    0x448b05000000	            mov r8d, dword [0x04006fd4] 	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4006fd4	          0x4585c0	                           test r8d, r8d	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4006fd7	     0xf84d2feffff	                            je 0x4006eaf	      1054	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4006fdd	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4006fe1	    0xc70500000000	               mov dword [0x04006feb], 1	      1057	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4006feb	      0xe870a5ffff	                call sym.exp_fold_tree_1	      1058	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	CALL_13
0x4006ff0	    0x833d00000000	               cmp dword [0x04006ff7], 1	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4006ff7	    0xc70500000000	               mov dword [0x04007001], 0	      1059	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7
0x4007001	     0xf843a030000	                            je 0x4007341	      1070	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4007007	    0x8b3500000000	            mov esi, dword [0x0400700d] 	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400700d	            0x85f6	                           test esi, esi	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400700f	     0xf856b020000	                           jne 0x4007280	      1081	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4007015	    0x833d00000000	               cmp dword [0x0400701c], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x400701c	     0xf84f5faffff	                            je 0x4006b17	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4007022	      0xba05000000	                              mov edx, 5	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x4007027	      0xbe00000000	                              mov esi, 0	      1085	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10	CALL_19
0x400702c	            0x31ff	                            xor edi, edi	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400702e	      0xe800000000	                          call 0x4007033	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4007033	          0x4889ee	                            mov rsi, rbp	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4007036	          0x4889c7	                            mov rdi, rax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4007039	            0x31c0	                            xor eax, eax	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400703b	      0xe800000000	                          call 0x4007040	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4007040	      0xe910fcffff	                           jmp 0x4006c55	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4007045	           0xf1f00	                         nop dword [rax]	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4007048	          0x83f82d	                           cmp eax, 0x2d	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400704b	     0xf8422010000	                            je 0x4007173	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4007051	          0x83f87e	                           cmp eax, 0x7e	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4007054	     0xf84fc000000	                            je 0x4007156	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400705a	          0x83f821	                           cmp eax, 0x21	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400705d	            0x746f	                            je 0x40070ce	       370	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400705f	      0xbe9f010000	                          mov esi, 0x19f	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4007064	      0xbf00000000	                              mov edi, 0	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4007069	      0xe800000000	                          call 0x400706e	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x400706e	      0xe9e2fbffff	                           jmp 0x4006c55	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4007073	       0xf1f440000	                   nop dword [rax + rax]	       415	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_9
0x4007078	    0x8b0d00000000	            mov ecx, dword [0x0400707e] 	       334	ldexp.c	FUNCTION_13	IF_4
0x400707e	            0x85c9	                           test ecx, ecx	       334	ldexp.c	FUNCTION_13	IF_4
0x4007080	     0xf84acfdffff	                            je 0x4006e32	       334	ldexp.c	FUNCTION_13	IF_4
0x4007086	    0x483d00000000	                              cmp rax, 0	       335	ldexp.c	FUNCTION_13	IF_4
0x400708c	     0xf85a0fdffff	                           jne 0x4006e32	       335	ldexp.c	FUNCTION_13	IF_4
0x4007092	      0xe800000000	                          call 0x4007097	       336	ldexp.c	FUNCTION_13	CALL_4
0x4007097	        0x49894618	             mov qword [r14 + 0x18], rax	       336	ldexp.c	FUNCTION_13	CALL_4
0x400709b	    0x488b05000000	            mov rax, qword [0x040070a2] 	       336	ldexp.c	FUNCTION_13	CALL_4
0x40070a2	      0xe98bfdffff	                           jmp 0x4006e32	       336	ldexp.c	FUNCTION_13	CALL_4
0x40070a7	    0x660f1f840000	                    nop word [rax + rax]	       336	ldexp.c	FUNCTION_13	CALL_4
0x40070b0	    0x488b3d000000	            mov rdi, qword [0x040070b7] 	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40070b7	          0x4c89ea	                            mov rdx, r13	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40070ba	      0xbe00000000	                              mov esi, 0	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40070bf	        0x488b4708	                mov rax, qword [rdi + 8]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40070c3	    0xff9028030000	                call qword [rax + 0x328]	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40070c9	      0xe99ffdffff	                           jmp 0x4006e6d	      1204	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_22	IF_25	CALL_31
0x40070ce	            0x31c0	                            xor eax, eax	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40070d0	    0x48833d000000	               cmp qword [0x040070d8], 0	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40070d8	    0x488b15000000	            mov rdx, qword [0x040070df] 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40070df	           0xf94c0	                                 sete al	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40070e2	    0x488905000000	            mov qword [0x040070e9], rax 	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40070e9	      0xe9cafaffff	                           jmp 0x4006bb8	       392	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x40070ee	    0x448b1d000000	           mov r11d, dword [0x040070f5] 	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40070f5	          0x4585db	                         test r11d, r11d	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40070f8	     0xf84d9f9ffff	                            je 0x4006ad7	       401	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3
0x40070fe	    0x488b05000000	            mov rax, qword [0x04007105] 	       183	ldexp.c	FUNCTION_3	IF_1
0x4007105	    0x488b0d000000	            mov rcx, qword [0x0400710c] 	       183	ldexp.c	FUNCTION_3	IF_1
0x400710c	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x400710f	            0x740b	                            je 0x400711c	       183	ldexp.c	FUNCTION_3	IF_1
0x4007111	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x4007115	    0x48030d000000	             add rcx, qword [0x0400711c]	       184	ldexp.c	FUNCTION_3	IF_1
0x400711c	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x4007120	    0x48c705000000	               mov qword [0x0400712b], 0	       185	ldexp.c	FUNCTION_3
0x400712b	    0xc70500000000	               mov dword [0x04007135], 0	       186	ldexp.c	FUNCTION_3
0x4007135	    0x488b05000000	            mov rax, qword [0x0400713c] 	       404	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_3	CALL_7
0x400713c	            0x760e	                           jbe 0x400714c	      1615	ldexp.c	FUNCTION_46	IF_1
0x400713e	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x4007143	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x4007145	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x4007148	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x400714c	      0xba00000000	                              mov edx, 0	       266	ldexp.c	FUNCTION_10
0x4007151	      0xe96bfaffff	                           jmp 0x4006bc1	       266	ldexp.c	FUNCTION_10
0x4007156	    0x488b05000000	            mov rax, qword [0x0400715d] 	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400715d	    0x488b15000000	            mov rdx, qword [0x04007164] 	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4007164	          0x48f7d0	                                 not rax	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4007167	    0x488905000000	            mov qword [0x0400716e], rax 	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400716e	      0xe945faffff	                           jmp 0x4006bb8	       388	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4007173	    0x488b05000000	            mov rax, qword [0x0400717a] 	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400717a	    0x488b15000000	            mov rdx, qword [0x04007181] 	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4007181	          0x48f7d8	                                 neg rax	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4007184	    0x488905000000	            mov qword [0x0400718b], rax 	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x400718b	      0xe928faffff	                           jmp 0x4006bb8	       396	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1
0x4007190	    0x448b2d000000	           mov r13d, dword [0x04007197] 	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x4007197	          0x4585ed	                         test r13d, r13d	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x400719a	     0xf8437f9ffff	                            je 0x4006ad7	       373	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	IF_2
0x40071a0	    0x488b0d000000	            mov rcx, qword [0x040071a7] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x40071a7	    0x488b05000000	            mov rax, qword [0x040071ae] 	       374	ldexp.c	ELSE_3	FUNCTION_15	IF_1	SWITCH_1	CALL_3
0x40071ae	        0x4883f901	                              cmp rcx, 1	      1615	ldexp.c	FUNCTION_46	IF_1
0x40071b2	            0x760e	                           jbe 0x40071c2	      1615	ldexp.c	FUNCTION_46	IF_1
0x40071b4	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      1619	ldexp.c	FUNCTION_46
0x40071b9	            0x31d2	                            xor edx, edx	      1619	ldexp.c	FUNCTION_46
0x40071bb	          0x48f7f1	                                 div rcx	      1619	ldexp.c	FUNCTION_46
0x40071be	        0x480fafc1	                           imul rax, rcx	      1619	ldexp.c	FUNCTION_46
0x40071c2	    0x488b15000000	            mov rdx, qword [0x040071c9] 	       260	ldexp.c	FUNCTION_10
0x40071c9	    0xc70500000000	               mov dword [0x040071d3], 1	       262	ldexp.c	FUNCTION_10
0x40071d3	    0xc70500000000	               mov dword [0x040071dd], 1	       263	ldexp.c	FUNCTION_10
0x40071dd	        0x482b4228	             sub rax, qword [rdx + 0x28]	       264	ldexp.c	FUNCTION_10
0x40071e1	    0x48c705000000	               mov qword [0x040071ec], 0	       265	ldexp.c	FUNCTION_10
0x40071ec	    0x488915000000	            mov qword [0x040071f3], rdx 	       266	ldexp.c	FUNCTION_10
0x40071f3	      0xe9c9f9ffff	                           jmp 0x4006bc1	       266	ldexp.c	FUNCTION_10
0x40071f8	    0x488b05000000	            mov rax, qword [0x040071ff] 	       183	ldexp.c	FUNCTION_3	IF_1
0x40071ff	          0x4885c0	                           test rax, rax	       183	ldexp.c	FUNCTION_3	IF_1
0x4007202	     0xf840e020000	                            je 0x4007416	       183	ldexp.c	FUNCTION_3	IF_1
0x4007208	        0x488b4028	            mov rax, qword [rax + 0x28] 	       184	ldexp.c	FUNCTION_3	IF_1
0x400720c	    0x480305000000	             add rax, qword [0x04007213]	       184	ldexp.c	FUNCTION_3	IF_1
0x4007213	    0x48c705000000	               mov qword [0x0400721e], 0	       185	ldexp.c	FUNCTION_3
0x400721e	    0xc70500000000	               mov dword [0x04007228], 0	       186	ldexp.c	FUNCTION_3
0x4007228	      0xe91fffffff	                           jmp 0x400714c	       186	ldexp.c	FUNCTION_3
0x400722d	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4007231	    0x488b3d000000	            mov rdi, qword [0x04007238] 	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4007238	            0x31c9	                            xor ecx, ecx	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400723a	    0x41b801000000	                              mov r8d, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4007240	      0xba01000000	                              mov edx, 1	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4007245	      0xe800000000	                          call 0x400724a	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x400724a	          0x4885c0	                           test rax, rax	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x400724d	          0x4989c5	                            mov r13, rax	      1164	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	CALL_27
0x4007250	     0xf853dfbffff	                           jne 0x4006d93	      1166	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20
0x4007256	        0x4c8b7518	            mov r14, qword [rbp + 0x18] 	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400725a	            0x31ff	                            xor edi, edi	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400725c	      0xba05000000	                              mov edx, 5	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4007261	      0xbe00000000	                              mov esi, 0	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4007266	      0xe800000000	                          call 0x400726b	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400726b	          0x4c89f6	                            mov rsi, r14	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400726e	          0x4889c7	                            mov rdi, rax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4007271	            0x31c0	                            xor eax, eax	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4007273	      0xe800000000	                          call 0x4007278	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4007278	      0xe916fbffff	                           jmp 0x4006d93	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x400727d	           0xf1f00	                         nop dword [rax]	      1167	ldexp.c	FUNCTION_28	SWITCH_1	ELSE_8	IF_17	IF_19	IF_20	CALL_29
0x4007280	    0x488b05000000	            mov rax, qword [0x04007287] 	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4007287	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400728d	     0xf848f010000	                            je 0x4007422	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4007293	    0x488b0d000000	            mov rcx, qword [0x0400729a] 	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x400729a	          0x4885c9	                           test rcx, rcx	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x400729d	     0xf849a010000	                            je 0x400743d	      1088	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11
0x40072a3	    0x833d00000000	               cmp dword [0x040072aa], 2	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40072aa	            0x760c	                           jbe 0x40072b8	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40072ac	    0x483d00000000	                              cmp rax, 0	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40072b2	     0xf8583f9ffff	                           jne 0x4006c3b	      1097	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40072b8	    0x488b15000000	            mov rdx, qword [0x040072bf] 	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40072bf	    0x4c8b2d000000	            mov r13, qword [0x040072c6] 	      1101	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12
0x40072c6	          0x4885d2	                           test rdx, rdx	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40072c9	     0xf8465010000	                            je 0x4007434	      1102	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40072cf	        0x4c036a28	             add r13, qword [rdx + 0x28]	      1103	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_13
0x40072d3	    0x4c8b35000000	            mov r14, qword [0x040072da] 	      1106	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40072da	          0x4d39ee	                            cmp r14, r13	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40072dd	     0xf86fe000000	                           jbe 0x40073e1	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40072e3	    0x483d00000000	                              cmp rax, 0	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40072e9	     0xf84f2000000	                            je 0x40073e1	      1107	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14
0x40072ef	      0xba05000000	                              mov edx, 5	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40072f4	      0xbe00000000	                              mov esi, 0	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40072f9	            0x31ff	                            xor edi, edi	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x40072fb	      0xe800000000	                          call 0x4007300	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4007300	          0x4c89e9	                            mov rcx, r13	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4007303	          0x4889c7	                            mov rdi, rax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4007306	          0x4c89f2	                            mov rdx, r14	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4007309	            0x31c0	                            xor eax, eax	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400730b	          0x4889ee	                            mov rsi, rbp	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400730e	      0xe800000000	                          call 0x4007313	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4007313	    0x8b0500000000	            mov eax, dword [0x04007319] 	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x4007319	      0xe915f9ffff	                           jmp 0x4006c33	      1108	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	IF_14	CALL_23
0x400731e	            0x31ff	                            xor edi, edi	       314	ldexp.c	FUNCTION_13	CALL_3
0x4007320	      0xba05000000	                              mov edx, 5	       314	ldexp.c	FUNCTION_13	CALL_3
0x4007325	      0xbe00000000	                              mov esi, 0	       314	ldexp.c	FUNCTION_13	CALL_3
0x400732a	      0xe800000000	                          call 0x400732f	       314	ldexp.c	FUNCTION_13	CALL_3
0x400732f	          0x4c89fe	                            mov rsi, r15	       314	ldexp.c	FUNCTION_13	CALL_3
0x4007332	          0x4889c7	                            mov rdi, rax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4007335	            0x31c0	                            xor eax, eax	       314	ldexp.c	FUNCTION_13	CALL_3
0x4007337	      0xe800000000	                          call 0x400733c	       314	ldexp.c	FUNCTION_13	CALL_3
0x400733c	      0xe9b3faffff	                           jmp 0x4006df4	       314	ldexp.c	FUNCTION_13	CALL_3
0x4007341	    0x488b05000000	            mov rax, qword [0x04007348] 	      1071	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4007348	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400734e	     0xf84b3fcffff	                            je 0x4007007	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4007354	    0x483d00000000	                              cmp rax, 0	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400735a	     0xf84a7fcffff	                            je 0x4007007	      1072	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4007360	    0x8b3d00000000	            mov edi, dword [0x04007366] 	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4007366	            0x85ff	                           test edi, edi	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4007368	            0x746b	                            je 0x40073d5	      1073	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x400736a	    0x48833d000000	               cmp qword [0x04007372], 0	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4007372	            0x7561	                           jne 0x40073d5	      1074	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x4007374	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x4007378	          0x8b7110	            mov esi, dword [rcx + 0x10] 	      1075	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_14
0x400737b	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x400737e	     0xf84ec000000	                            je 0x4007470	       931	ldexp.c	FUNCTION_23
0x4007384	            0x8b39	                    mov edi, dword [rcx]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4007386	        0x488d5118	                   lea rdx, [rcx + 0x18]	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x400738a	      0xe800000000	                          call 0x400738f	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x400738f	            0x85c0	                           test eax, eax	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4007391	     0xf8570fcffff	                           jne 0x4007007	      1076	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_15
0x4007397	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1077	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8	CALL_16
0x400739b	        0x83781000	               cmp dword [rax + 0x10], 0	       977	ldexp.c	FUNCTION_26	CALL_2
0x400739f	            0x7509	                           jne 0x40073aa	       977	ldexp.c	FUNCTION_26	CALL_2
0x40073a1	          0x83382b	                   cmp dword [rax], 0x2b	       975	ldexp.c	FUNCTION_26
0x40073a4	     0xf84e2000000	                            je 0x400748c	       975	ldexp.c	FUNCTION_26
0x40073aa	    0x813817010000	                  cmp dword [rax], 0x117	       987	ldexp.c	FUNCTION_27	IF_1
0x40073b0	     0xf8584010000	                           jne 0x400753a	       987	ldexp.c	FUNCTION_27	IF_1
0x40073b6	        0x83781002	               cmp dword [rax + 0x10], 2	       987	ldexp.c	FUNCTION_27	IF_1
0x40073ba	     0xf857a010000	                           jne 0x400753a	       987	ldexp.c	FUNCTION_27	IF_1
0x40073c0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       989	ldexp.c	FUNCTION_27	IF_1
0x40073c4	    0x488b05000000	            mov rax, qword [0x040073cb] 	       989	ldexp.c	FUNCTION_27	IF_1
0x40073cb	        0x83791001	               cmp dword [rcx + 0x10], 1	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40073cf	     0xf8410010000	                            je 0x40074e5	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x40073d5	    0x814820000020	         or dword [rax + 0x20], 0x200000	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40073dc	      0xe926fcffff	                           jmp 0x4007007	      1079	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_8
0x40073e1	    0x4c892d000000	            mov qword [0x040073e8], r13 	      1113	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40073e8	          0x4c8929	                    mov qword [rcx], r13	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40073eb	    0x488b05000000	            mov rax, qword [0x040073f2] 	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40073f2	      0xe9c1f7ffff	                           jmp 0x4006bb8	      1114	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_6
0x40073f7	    0x8b0500000000	            mov eax, dword [0x040073fd] 	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x40073fd	          0x8d50ff	                      lea edx, [rax - 1]	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4007400	          0x83fa01	                              cmp edx, 1	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4007403	            0x7647	                           jbe 0x400744c	       348	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4007405	          0x83e804	                              sub eax, 4	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4007408	          0x83f802	                              cmp eax, 2	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400740b	     0xf862af8ffff	                           jbe 0x4006c3b	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4007411	      0xe9c1f6ffff	                           jmp 0x4006ad7	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4007416	    0x488b05000000	            mov rax, qword [0x0400741d] 	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x400741d	      0xe9f1fdffff	                           jmp 0x4007213	       354	ldexp.c	FUNCTION_14	ELSE_2	IF_3
0x4007422	    0x833d00000000	               cmp dword [0x04007429], 1	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4007429	     0xf85f3fbffff	                           jne 0x4007022	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x400742f	      0xe907f8ffff	                           jmp 0x4006c3b	      1084	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9	IF_10
0x4007434	        0x4c036828	             add r13, qword [rax + 0x28]	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x4007438	      0xe996feffff	                           jmp 0x40072d3	      1105	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_4	IF_12	ELSE_5
0x400743d	      0xba05000000	                              mov edx, 5	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4007442	      0xbe00000000	                              mov esi, 0	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x4007447	      0xe9e0fbffff	                           jmp 0x400702c	      1089	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	ELSE_3	IF_11	CALL_21
0x400744c	    0x488b05000000	            mov rax, qword [0x04007453] 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4007453	    0xc70500000000	               mov dword [0x0400745d], 3	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400745d	    0x488b15000000	            mov rdx, qword [0x04007464] 	       351	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4007464	    0x488905000000	            mov qword [0x0400746b], rax 	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x400746b	      0xe948f7ffff	                           jmp 0x4006bb8	       352	ldexp.c	FUNCTION_14	ELSE_1	IF_2
0x4007470	      0x4883791800	               cmp qword [rcx + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x4007475	     0xf8509ffffff	                           jne 0x4007384	       931	ldexp.c	FUNCTION_23
0x400747b	    0x483d00000000	                              cmp rax, 0	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4007481	     0xf850cfeffff	                           jne 0x4007293	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x4007487	      0xe9aff7ffff	                           jmp 0x4006c3b	      1082	ldexp.c	FUNCTION_28	SWITCH_1	IF_5	IF_7	IF_9
0x400748c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       976	ldexp.c	FUNCTION_26	CALL_1
0x4007490	    0x813a03010000	                  cmp dword [rdx], 0x103	       920	ldexp.c	FUNCTION_22
0x4007496	     0xf850effffff	                           jne 0x40073aa	       920	ldexp.c	FUNCTION_22
0x400749c	        0x837a1003	               cmp dword [rdx + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x40074a0	     0xf8504ffffff	                           jne 0x40073aa	       920	ldexp.c	FUNCTION_22
0x40074a6	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       921	ldexp.c	FUNCTION_22
0x40074aa	          0x803a2e	                    cmp byte [rdx], 0x2e	       921	ldexp.c	FUNCTION_22
0x40074ad	     0xf85f7feffff	                           jne 0x40073aa	       921	ldexp.c	FUNCTION_22
0x40074b3	        0x807a0100	                   cmp byte [rdx + 1], 0	       922	ldexp.c	FUNCTION_22
0x40074b7	     0xf85edfeffff	                           jne 0x40073aa	       922	ldexp.c	FUNCTION_22
0x40074bd	        0x488b4020	            mov rax, qword [rax + 0x20] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x40074c1	          0x8b7010	            mov esi, dword [rax + 0x10] 	       977	ldexp.c	FUNCTION_26	CALL_2
0x40074c4	          0x83fe07	                              cmp esi, 7	       931	ldexp.c	FUNCTION_23
0x40074c7	            0x747d	                            je 0x4007546	       931	ldexp.c	FUNCTION_23
0x40074c9	            0x8b38	                    mov edi, dword [rax]	       978	ldexp.c	FUNCTION_26	CALL_3
0x40074cb	        0x488d5018	                   lea rdx, [rax + 0x18]	       978	ldexp.c	FUNCTION_26	CALL_3
0x40074cf	      0xe800000000	                          call 0x40074d4	       978	ldexp.c	FUNCTION_26	CALL_3
0x40074d4	            0x85c0	                           test eax, eax	       978	ldexp.c	FUNCTION_26	CALL_3
0x40074d6	     0xf852bfbffff	                           jne 0x4007007	       978	ldexp.c	FUNCTION_26	CALL_3
0x40074dc	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       978	ldexp.c	FUNCTION_26	CALL_3
0x40074e0	      0xe9c5feffff	                           jmp 0x40073aa	       978	ldexp.c	FUNCTION_26	CALL_3
0x40074e5	        0x488b5118	            mov rdx, qword [rcx + 0x18] 	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x40074e9	        0x837a1000	               cmp dword [rdx + 0x10], 0	       965	ldexp.c	FUNCTION_25	CALL_2
0x40074ed	     0xf85e2feffff	                           jne 0x40073d5	       965	ldexp.c	FUNCTION_25	CALL_2
0x40074f3	    0x813a10010000	                  cmp dword [rdx], 0x110	       963	ldexp.c	FUNCTION_25
0x40074f9	     0xf85d6feffff	                           jne 0x40073d5	       963	ldexp.c	FUNCTION_25
0x40074ff	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       964	ldexp.c	FUNCTION_25	CALL_1
0x4007503	        0x837e1003	               cmp dword [rsi + 0x10], 3	       920	ldexp.c	FUNCTION_22
0x4007507	     0xf85c8feffff	                           jne 0x40073d5	       920	ldexp.c	FUNCTION_22
0x400750d	    0x813e03010000	                  cmp dword [rsi], 0x103	       920	ldexp.c	FUNCTION_22
0x4007513	     0xf85bcfeffff	                           jne 0x40073d5	       920	ldexp.c	FUNCTION_22
0x4007519	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       921	ldexp.c	FUNCTION_22
0x400751d	          0x803e2e	                    cmp byte [rsi], 0x2e	       921	ldexp.c	FUNCTION_22
0x4007520	     0xf85affeffff	                           jne 0x40073d5	       921	ldexp.c	FUNCTION_22
0x4007526	        0x807e0100	                   cmp byte [rsi + 1], 0	       922	ldexp.c	FUNCTION_22
0x400752a	     0xf85a5feffff	                           jne 0x40073d5	       922	ldexp.c	FUNCTION_22
0x4007530	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       965	ldexp.c	FUNCTION_25	CALL_2
0x4007534	        0x83781007	               cmp dword [rax + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x4007538	            0x741c	                            je 0x4007556	       931	ldexp.c	FUNCTION_23
0x400753a	    0x488b05000000	            mov rax, qword [0x04007541] 	       931	ldexp.c	FUNCTION_23
0x4007541	      0xe98ffeffff	                           jmp 0x40073d5	       931	ldexp.c	FUNCTION_23
0x4007546	      0x4883781800	               cmp qword [rax + 0x18], 0	       931	ldexp.c	FUNCTION_23
0x400754b	     0xf84b6faffff	                            je 0x4007007	       931	ldexp.c	FUNCTION_23
0x4007551	      0xe973ffffff	                           jmp 0x40074c9	       931	ldexp.c	FUNCTION_23
0x4007556	      0x4883781800	               cmp qword [rax + 0x18], 0	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x400755b	            0x75dd	                           jne 0x400753a	       991	ldexp.c	FUNCTION_27	IF_1	CALL_1
0x400755d	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4007561	    0x488b05000000	            mov rax, qword [0x04007568] 	       992	ldexp.c	FUNCTION_27	IF_1	CALL_2
0x4007568	        0x837a1007	               cmp dword [rdx + 0x10], 7	       931	ldexp.c	FUNCTION_23
0x400756c	     0xf8563feffff	                           jne 0x40073d5	       931	ldexp.c	FUNCTION_23
0x4007572	      0x48837a1801	               cmp qword [rdx + 0x18], 1	       931	ldexp.c	FUNCTION_23
0x4007577	     0xf8558feffff	                           jne 0x40073d5	       931	ldexp.c	FUNCTION_23
0x400757d	      0xe985faffff	                           jmp 0x4007007	       931	ldexp.c	FUNCTION_23
exp_print_tree	DO,0:functions,0:CALL,34:WHILE,0:SWITCH,2:FOR,0:ELSE,2:IF,8	361
0x4004230	            0x4154	                                push r12	      1402	ldexp.c	FUNCTION_41
0x4004232	              0x55	                                push rbp	      1402	ldexp.c	FUNCTION_41
0x4004233	              0x53	                                push rbx	      1402	ldexp.c	FUNCTION_41
0x4004234	          0x4889fb	                            mov rbx, rdi	      1402	ldexp.c	FUNCTION_41
0x4004237	    0x488b3d000000	            mov rdi, qword [0x0400423e] 	      1405	ldexp.c	FUNCTION_41	IF_1
0x400423e	          0x4885ff	                           test rdi, rdi	      1405	ldexp.c	FUNCTION_41	IF_1
0x4004241	     0xf84a9010000	                            je 0x40043f0	      1405	ldexp.c	FUNCTION_41	IF_1
0x4004247	          0x4885db	                           test rbx, rbx	      1408	ldexp.c	FUNCTION_41	IF_2
0x400424a	     0xf8480050000	                            je 0x40047d0	      1408	ldexp.c	FUNCTION_41	IF_2
0x4004250	        0x837b1009	               cmp dword [rbx + 0x10], 9	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4004254	     0xf8756030000	                            ja 0x40045b0	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x400425a	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x400425d	    0xff24c5000000	                       jmp qword [rax*8]	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4004264	         0xf1f4000	                         nop dword [rax]	      1414	ldexp.c	FUNCTION_41	SWITCH_1
0x4004268	          0x4889f9	                            mov rcx, rdi	        97	stdio2.h	CALL_14
0x400426b	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_14
0x4004270	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4004275	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x400427a	      0xe800000000	                          call 0x400427f	        97	stdio2.h	CALL_14
0x400427f	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_31
0x4004283	      0xe800000000	                          call 0x4004288	      1490	ldexp.c	FUNCTION_41	SWITCH_1	CALL_31
0x4004288	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	        97	stdio2.h	CALL_14
0x400428c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4004291	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x4004292	              0x5d	                                 pop rbp	      1508	ldexp.c	FUNCTION_41
0x4004293	            0x415c	                                 pop r12	      1508	ldexp.c	FUNCTION_41
0x4004295	    0x488b3d000000	            mov rdi, qword [0x0400429c] 	        97	stdio2.h	CALL_14
0x400429c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40042a1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40042a3	      0xe900000000	                           jmp 0x40042a8	        97	stdio2.h	CALL_14
0x40042a8	     0xf1f84000000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_14
0x40042b0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x40042b4	    0x488bb0f00000	            mov rsi, qword [rax + 0xf0] 	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x40042bb	          0x4885f6	                           test rsi, rsi	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x40042be	            0x7410	                            je 0x40042d0	      1420	ldexp.c	FUNCTION_41	SWITCH_1	IF_3
0x40042c0	            0x31c0	                            xor eax, eax	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x40042c2	      0xbf00000000	                              mov edi, 0	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x40042c7	      0xe800000000	                          call 0x40042cc	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x40042cc	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1421	ldexp.c	FUNCTION_41	SWITCH_1	CALL_3
0x40042d0	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x40042d4	          0x488b30	                    mov rsi, qword [rax]	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x40042d7	      0xbf00000000	                              mov edi, 0	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x40042dc	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40042dd	              0x5d	                                 pop rbp	      1508	ldexp.c	FUNCTION_41
0x40042de	            0x415c	                                 pop r12	      1508	ldexp.c	FUNCTION_41
0x40042e0	            0x31c0	                            xor eax, eax	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x40042e2	      0xe900000000	                           jmp 0x40042e7	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x40042e7	    0x660f1f840000	                    nop word [rax + rax]	      1422	ldexp.c	FUNCTION_41	SWITCH_1	CALL_4
0x40042f0	            0x8b33	                    mov esi, dword [rbx]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40042f2	    0x8d8ee9feffff	                  lea ecx, [rsi - 0x117]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40042f8	          0x83f92f	                           cmp ecx, 0x2f	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x40042fb	     0xf871f030000	                            ja 0x4004620	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004301	      0xb801000000	                              mov eax, 1	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004306	    0x48ba01600000	              movabs rdx, 0xc00000006001	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004310	          0x48d3e0	                             shl rax, cl	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004313	          0x4885d0	                           test rax, rdx	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004316	     0xf8504040000	                           jne 0x4004720	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x400431c	      0xa900000004	                     test eax, obj.expld	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004321	     0xf84f9020000	                            je 0x4004620	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004327	            0x31c0	                            xor eax, eax	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004329	            0xeb13	                           jmp 0x400433e	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x400432b	       0xf1f440000	                   nop dword [rax + rax]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004330	        0x4883c001	                              add rax, 1	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004334	        0x4883f833	                           cmp rax, 0x33	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4004338	     0xf84f2040000	                            je 0x4004830	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x400433e	          0x4889c2	                            mov rdx, rax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004341	            0x89c1	                            mov ecx, eax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004343	        0x48c1e204	                              shl rdx, 4	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004347	    0x3bb200000000	                    cmp esi, dword [rdx]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400434d	            0x75e1	                           jne 0x4004330	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400434f	        0x48c1e104	                              shl rcx, 4	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004353	          0x4889fe	                            mov rsi, rdi	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004356	    0x488bb9000000	                    mov rdi, qword [rcx]	       148	ldexp.c	FUNCTION_1	CALL_4
0x400435d	      0xe800000000	                          call 0x4004362	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004362	    0x488b0d000000	            mov rcx, qword [0x04004369] 	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4004369	      0xba03000000	                              mov edx, 3	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x400436e	      0xbe01000000	                              mov esi, 1	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4004373	      0xbf00000000	                              mov edi, 0	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x4004378	      0xe800000000	                          call 0x400437d	      1450	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_11
0x400437d	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4004381	      0xe800000000	                          call 0x4004386	      1451	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_12
0x4004386	    0x488b0d000000	            mov rcx, qword [0x0400438d] 	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x400438d	      0xba03000000	                              mov edx, 3	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4004392	      0xbe01000000	                              mov esi, 1	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4004397	      0xbf00000000	                              mov edi, 0	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x400439c	      0xe9b2010000	                           jmp 0x4004553	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x40043a1	     0xf1f80000000	                         nop dword [rax]	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x40043a8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x40043ac	      0xe800000000	                          call 0x40043b1	      1472	ldexp.c	FUNCTION_41	SWITCH_1	CALL_23
0x40043b1	    0x488b35000000	            mov rsi, qword [0x040043b8] 	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40043b8	      0xbf3f000000	                           mov edi, 0x3f	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40043bd	      0xe800000000	                          call 0x40043c2	      1473	ldexp.c	FUNCTION_41	SWITCH_1	CALL_24
0x40043c2	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x40043c6	      0xe800000000	                          call 0x40043cb	      1474	ldexp.c	FUNCTION_41	SWITCH_1	CALL_25
0x40043cb	    0x488b35000000	            mov rsi, qword [0x040043d2] 	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x40043d2	      0xbf3a000000	                           mov edi, 0x3a	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x40043d7	      0xe800000000	                          call 0x40043dc	      1475	ldexp.c	FUNCTION_41	SWITCH_1	CALL_26
0x40043dc	    0x488b3d000000	            mov rdi, qword [0x040043e3] 	      1405	ldexp.c	FUNCTION_41	IF_1
0x40043e3	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      1476	ldexp.c	FUNCTION_41	SWITCH_1	CALL_27
0x40043e7	          0x4885ff	                           test rdi, rdi	      1405	ldexp.c	FUNCTION_41	IF_1
0x40043ea	     0xf8557feffff	                           jne 0x4004247	      1405	ldexp.c	FUNCTION_41	IF_1
0x40043f0	    0x488b3d000000	            mov rdi, qword [0x040043f7] 	      1406	ldexp.c	FUNCTION_41	IF_1
0x40043f7	    0x48893d000000	            mov qword [0x040043fe], rdi 	      1406	ldexp.c	FUNCTION_41	IF_1
0x40043fe	      0xe944feffff	                           jmp 0x4004247	      1406	ldexp.c	FUNCTION_41	IF_1
0x4004403	       0xf1f440000	                   nop dword [rax + rax]	      1406	ldexp.c	FUNCTION_41	IF_1
0x4004408	            0x8b0b	                    mov ecx, dword [rbx]	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x400440a	            0x31c0	                            xor eax, eax	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x400440c	    0x81f903010000	                          cmp ecx, 0x103	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4004412	            0x751a	                           jne 0x400442e	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4004414	      0xe9c7030000	                           jmp 0x40047e0	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4004419	     0xf1f80000000	                         nop dword [rax]	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4004420	        0x4883c001	                              add rax, 1	      1495	ldexp.c	FUNCTION_41	SWITCH_1	IF_7
0x4004424	        0x4883f833	                           cmp rax, 0x33	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4004428	     0xf847a020000	                            je 0x40046a8	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x400442e	          0x4889c2	                            mov rdx, rax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004431	        0x48c1e204	                              shl rdx, 4	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004435	    0x3b8a00000000	                    cmp ecx, dword [rdx]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400443b	            0x75e3	                           jne 0x4004420	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400443d	            0x89c0	                            mov eax, eax	       148	ldexp.c	FUNCTION_1	CALL_4
0x400443f	          0x4889fe	                            mov rsi, rdi	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004442	        0x48c1e004	                              shl rax, 4	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004446	    0x488bb8000000	                    mov rdi, qword [rax]	       148	ldexp.c	FUNCTION_1	CALL_4
0x400444d	      0xe800000000	                          call 0x4004452	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004452	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x4004456	          0x4885c9	                           test rcx, rcx	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x4004459	     0xf8461020000	                            je 0x40046c0	      1500	ldexp.c	FUNCTION_41	SWITCH_1	ELSE_2	IF_8
0x400445f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4004464	      0xe928feffff	                           jmp 0x4004291	        97	stdio2.h	CALL_14
0x4004469	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_14
0x4004470	          0x4889fe	                            mov rsi, rdi	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4004473	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x4004477	      0xe800000000	                          call 0x400447c	      1425	ldexp.c	FUNCTION_41	SWITCH_1	CALL_5
0x400447c	          0x448b23	                   mov r12d, dword [rbx]	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x400447f	            0x31c0	                            xor eax, eax	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4004481	            0xeb13	                           jmp 0x4004496	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4004483	       0xf1f440000	                   nop dword [rax + rax]	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x4004488	        0x4883c001	                              add rax, 1	      1426	ldexp.c	FUNCTION_41	SWITCH_1	CALL_6
0x400448c	        0x4883f833	                           cmp rax, 0x33	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4004490	     0xf8432010000	                            je 0x40045c8	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4004496	          0x4889c2	                            mov rdx, rax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004499	            0x89c5	                            mov ebp, eax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400449b	        0x48c1e204	                              shl rdx, 4	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400449f	    0x443ba2000000	                   cmp r12d, dword [rdx]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x40044a6	            0x75e0	                           jne 0x4004488	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x40044a8	    0x488b35000000	            mov rsi, qword [0x040044af] 	       145	ldexp.c	FUNCTION_1	CALL_2
0x40044af	      0xbf20000000	                           mov edi, 0x20	       145	ldexp.c	FUNCTION_1	CALL_2
0x40044b4	        0x48c1e504	                              shl rbp, 4	       148	ldexp.c	FUNCTION_1	CALL_4
0x40044b8	      0xe800000000	                          call 0x40044bd	       145	ldexp.c	FUNCTION_1	CALL_2
0x40044bd	    0x488b35000000	            mov rsi, qword [0x040044c4] 	       148	ldexp.c	FUNCTION_1	CALL_4
0x40044c4	    0x488bbd000000	                    mov rdi, qword [rbp]	       148	ldexp.c	FUNCTION_1	CALL_4
0x40044cb	      0xe800000000	                          call 0x40044d0	       148	ldexp.c	FUNCTION_1	CALL_4
0x40044d0	    0x488b35000000	            mov rsi, qword [0x040044d7] 	       155	ldexp.c	FUNCTION_1	CALL_6
0x40044d7	      0xbf20000000	                           mov edi, 0x20	       155	ldexp.c	FUNCTION_1	CALL_6
0x40044dc	      0xe800000000	                          call 0x40044e1	       155	ldexp.c	FUNCTION_1	CALL_6
0x40044e1	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1427	ldexp.c	FUNCTION_41	SWITCH_1	CALL_7
0x40044e5	      0xe94dfdffff	                           jmp 0x4004237	      1428	ldexp.c	FUNCTION_41	SWITCH_1
0x40044ea	    0x660f1f440000	                    nop word [rax + rax]	      1428	ldexp.c	FUNCTION_41	SWITCH_1
0x40044f0	            0x8b0b	                    mov ecx, dword [rbx]	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x40044f2	            0x31c0	                            xor eax, eax	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x40044f4	            0xeb18	                           jmp 0x400450e	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x40044f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x4004500	        0x4883c001	                              add rax, 1	      1479	ldexp.c	FUNCTION_41	SWITCH_1	CALL_28
0x4004504	        0x4883f833	                           cmp rax, 0x33	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4004508	     0xf84f2000000	                            je 0x4004600	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x400450e	          0x4889c2	                            mov rdx, rax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004511	        0x48c1e204	                              shl rdx, 4	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004515	    0x3b8a00000000	                    cmp ecx, dword [rdx]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400451b	            0x75e3	                           jne 0x4004500	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400451d	            0x89c0	                            mov eax, eax	       148	ldexp.c	FUNCTION_1	CALL_4
0x400451f	          0x4889fe	                            mov rsi, rdi	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004522	        0x48c1e004	                              shl rax, 4	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004526	    0x488bb8000000	                    mov rdi, qword [rax]	       148	ldexp.c	FUNCTION_1	CALL_4
0x400452d	      0xe800000000	                          call 0x4004532	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004532	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x4004537	     0xf8483010000	                            je 0x40046c0	      1480	ldexp.c	FUNCTION_41	SWITCH_1	IF_6
0x400453d	    0x488b0d000000	            mov rcx, qword [0x04004544] 	        97	stdio2.h	CALL_14
0x4004544	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_14
0x4004549	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400454e	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x4004553	      0xe800000000	                          call 0x4004558	      1452	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_13
0x4004558	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x400455c	            0xeb1b	                           jmp 0x4004579	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x400455e	            0x6690	                                     nop	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x4004560	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	        97	stdio2.h	CALL_14
0x4004564	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4004569	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400456e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4004570	      0xe800000000	                          call 0x4004575	        97	stdio2.h	CALL_14
0x4004575	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1432	ldexp.c	FUNCTION_41	SWITCH_1	CALL_8
0x4004579	      0xe800000000	                          call 0x400457e	      1453	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_14
0x400457e	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x400457f	              0x5d	                                 pop rbp	      1508	ldexp.c	FUNCTION_41
0x4004580	            0x415c	                                 pop r12	      1508	ldexp.c	FUNCTION_41
0x4004582	    0x488b35000000	            mov rsi, qword [0x04004589] 	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4004589	      0xbf29000000	                           mov edi, 0x29	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x400458e	      0xe900000000	                           jmp 0x4004593	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4004593	       0xf1f440000	                   nop dword [rax + rax]	      1454	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2	CALL_15
0x4004598	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x400459c	      0xbf00000000	                              mov edi, 0	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40045a1	            0x31c0	                            xor eax, eax	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40045a3	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40045a4	              0x5d	                                 pop rbp	      1508	ldexp.c	FUNCTION_41
0x40045a5	            0x415c	                                 pop r12	      1508	ldexp.c	FUNCTION_41
0x40045a7	      0xe900000000	                           jmp 0x40045ac	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40045ac	         0xf1f4000	                         nop dword [rax]	      1417	ldexp.c	FUNCTION_41	SWITCH_1	CALL_2
0x40045b0	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40045b1	              0x5d	                                 pop rbp	      1508	ldexp.c	FUNCTION_41
0x40045b2	            0x415c	                                 pop r12	      1508	ldexp.c	FUNCTION_41
0x40045b4	      0xbee1050000	                          mov esi, 0x5e1	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x40045b9	      0xbf00000000	                              mov edi, 0	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x40045be	      0xe900000000	                           jmp 0x40045c3	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x40045c3	       0xf1f440000	                   nop dword [rax + rax]	      1505	ldexp.c	FUNCTION_41	SWITCH_1	CALL_34
0x40045c8	    0x488b35000000	            mov rsi, qword [0x040045cf] 	       145	ldexp.c	FUNCTION_1	CALL_2
0x40045cf	      0xbf20000000	                           mov edi, 0x20	       145	ldexp.c	FUNCTION_1	CALL_2
0x40045d4	      0xe800000000	                          call 0x40045d9	       145	ldexp.c	FUNCTION_1	CALL_2
0x40045d9	        0x4183fc7e	                          cmp r12d, 0x7e	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40045dd	     0xf8ffd000000	                            jg 0x40046e0	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40045e3	    0x488b35000000	            mov rsi, qword [0x040045ea] 	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40045ea	          0x4489e7	                           mov edi, r12d	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40045ed	      0xe800000000	                          call 0x40045f2	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40045f2	      0xe9d9feffff	                           jmp 0x40044d0	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40045f7	    0x660f1f840000	                    nop word [rax + rax]	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x4004600	          0x83f97e	                           cmp ecx, 0x7e	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x4004603	     0xf8fbf000000	                            jg 0x40046c8	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x4004609	          0x4889fe	                            mov rsi, rdi	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x400460c	            0x89cf	                            mov edi, ecx	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x400460e	      0xe800000000	                          call 0x4004613	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x4004613	      0xe91affffff	                           jmp 0x4004532	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x4004618	     0xf1f84000000	                   nop dword [rax + rax]	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x4004620	          0x4889fe	                            mov rsi, rdi	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4004623	      0xbf28000000	                           mov edi, 0x28	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4004628	      0xe800000000	                          call 0x400462d	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x400462d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4004631	      0xe800000000	                          call 0x4004636	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4004636	          0x448b23	                   mov r12d, dword [rbx]	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4004639	            0x31c0	                            xor eax, eax	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x400463b	            0xeb11	                           jmp 0x400464e	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x400463d	           0xf1f00	                         nop dword [rax]	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4004640	        0x4883c001	                              add rax, 1	      1467	ldexp.c	FUNCTION_41	SWITCH_1	CALL_20
0x4004644	        0x4883f833	                           cmp rax, 0x33	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4004648	     0xf8457010000	                            je 0x40047a5	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x400464e	          0x4889c2	                            mov rdx, rax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004651	            0x89c5	                            mov ebp, eax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004653	        0x48c1e204	                              shl rdx, 4	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004657	    0x443ba2000000	                   cmp r12d, dword [rdx]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400465e	            0x75e0	                           jne 0x4004640	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004660	    0x488b35000000	            mov rsi, qword [0x04004667] 	       145	ldexp.c	FUNCTION_1	CALL_2
0x4004667	      0xbf20000000	                           mov edi, 0x20	       145	ldexp.c	FUNCTION_1	CALL_2
0x400466c	        0x48c1e504	                              shl rbp, 4	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004670	      0xe800000000	                          call 0x4004675	       145	ldexp.c	FUNCTION_1	CALL_2
0x4004675	    0x488b35000000	            mov rsi, qword [0x0400467c] 	       148	ldexp.c	FUNCTION_1	CALL_4
0x400467c	    0x488bbd000000	                    mov rdi, qword [rbp]	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004683	      0xe800000000	                          call 0x4004688	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004688	    0x488b35000000	            mov rsi, qword [0x0400468f] 	       155	ldexp.c	FUNCTION_1	CALL_6
0x400468f	      0xbf20000000	                           mov edi, 0x20	       155	ldexp.c	FUNCTION_1	CALL_6
0x4004694	      0xe800000000	                          call 0x4004699	       155	ldexp.c	FUNCTION_1	CALL_6
0x4004699	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x400469d	      0xe9d7feffff	                           jmp 0x4004579	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x40046a2	    0x660f1f440000	                    nop word [rax + rax]	      1468	ldexp.c	FUNCTION_41	SWITCH_1	CALL_21
0x40046a8	          0x83f97e	                           cmp ecx, 0x7e	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40046ab	            0x7f53	                            jg 0x4004700	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40046ad	          0x4889fe	                            mov rsi, rdi	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40046b0	            0x89cf	                            mov edi, ecx	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40046b2	      0xe800000000	                          call 0x40046b7	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40046b7	      0xe996fdffff	                           jmp 0x4004452	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40046bc	         0xf1f4000	                         nop dword [rax]	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40046c0	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40046c1	              0x5d	                                 pop rbp	      1508	ldexp.c	FUNCTION_41
0x40046c2	            0x415c	                                 pop r12	      1508	ldexp.c	FUNCTION_41
0x40046c4	              0xc3	                                     ret	      1508	ldexp.c	FUNCTION_41
0x40046c5	           0xf1f00	                         nop dword [rax]	      1508	ldexp.c	FUNCTION_41
0x40046c8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40046cd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40046d2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40046d4	      0xe800000000	                          call 0x40046d9	        97	stdio2.h	CALL_14
0x40046d9	      0xe954feffff	                           jmp 0x4004532	        97	stdio2.h	CALL_14
0x40046de	            0x6690	                                     nop	        97	stdio2.h	CALL_14
0x40046e0	    0x488b3d000000	            mov rdi, qword [0x040046e7] 	        97	stdio2.h	CALL_14
0x40046e7	          0x4489e1	                           mov ecx, r12d	        97	stdio2.h	CALL_14
0x40046ea	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x40046ef	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x40046f4	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x40046f6	      0xe800000000	                          call 0x40046fb	        97	stdio2.h	CALL_14
0x40046fb	      0xe9d0fdffff	                           jmp 0x40044d0	        97	stdio2.h	CALL_14
0x4004700	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4004705	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400470a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x400470c	      0xe800000000	                          call 0x4004711	        97	stdio2.h	CALL_14
0x4004711	      0xe93cfdffff	                           jmp 0x4004452	        97	stdio2.h	CALL_14
0x4004716	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        97	stdio2.h	CALL_14
0x4004720	            0x31c0	                            xor eax, eax	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004722	            0xeb12	                           jmp 0x4004736	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004724	         0xf1f4000	                         nop dword [rax]	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x4004728	        0x4883c001	                              add rax, 1	      1437	ldexp.c	FUNCTION_41	SWITCH_1	SWITCH_2
0x400472c	        0x4883f833	                           cmp rax, 0x33	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4004730	     0xf84e2000000	                            je 0x4004818	       140	ldexp.c	FUNCTION_1	FOR_1	CALL_1
0x4004736	          0x4889c2	                            mov rdx, rax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004739	            0x89c1	                            mov ecx, eax	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400473b	        0x48c1e204	                              shl rdx, 4	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x400473f	    0x3bb200000000	                    cmp esi, dword [rdx]	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004745	            0x75e1	                           jne 0x4004728	       141	ldexp.c	FUNCTION_1	FOR_1	IF_1
0x4004747	        0x48c1e104	                              shl rcx, 4	       148	ldexp.c	FUNCTION_1	CALL_4
0x400474b	          0x4889fe	                            mov rsi, rdi	       148	ldexp.c	FUNCTION_1	CALL_4
0x400474e	    0x488bb9000000	                    mov rdi, qword [rcx]	       148	ldexp.c	FUNCTION_1	CALL_4
0x4004755	      0xe800000000	                          call 0x400475a	       148	ldexp.c	FUNCTION_1	CALL_4
0x400475a	    0x488b35000000	            mov rsi, qword [0x04004761] 	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4004761	      0xbf20000000	                           mov edi, 0x20	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x4004766	      0xe800000000	                          call 0x400476b	      1460	ldexp.c	FUNCTION_41	SWITCH_1	IF_4	CALL_17
0x400476b	    0x488b35000000	            mov rsi, qword [0x04004772] 	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4004772	      0xbf28000000	                           mov edi, 0x28	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x4004777	      0xe800000000	                          call 0x400477c	      1462	ldexp.c	FUNCTION_41	SWITCH_1	CALL_18
0x400477c	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4004780	      0xe800000000	                          call 0x4004785	      1463	ldexp.c	FUNCTION_41	SWITCH_1	CALL_19
0x4004785	    0x488b0d000000	            mov rcx, qword [0x0400478c] 	        97	stdio2.h	CALL_14
0x400478c	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_14
0x4004791	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4004796	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x400479b	      0xe800000000	                          call 0x40047a0	        97	stdio2.h	CALL_14
0x40047a0	      0xe9f4feffff	                           jmp 0x4004699	        97	stdio2.h	CALL_14
0x40047a5	    0x488b35000000	            mov rsi, qword [0x040047ac] 	       145	ldexp.c	FUNCTION_1	CALL_2
0x40047ac	      0xbf20000000	                           mov edi, 0x20	       145	ldexp.c	FUNCTION_1	CALL_2
0x40047b1	      0xe800000000	                          call 0x40047b6	       145	ldexp.c	FUNCTION_1	CALL_2
0x40047b6	        0x4183fc7e	                          cmp r12d, 0x7e	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40047ba	            0x7f3c	                            jg 0x40047f8	       149	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40047bc	    0x488b35000000	            mov rsi, qword [0x040047c3] 	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40047c3	          0x4489e7	                           mov edi, r12d	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40047c6	      0xe800000000	                          call 0x40047cb	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40047cb	      0xe9b8feffff	                           jmp 0x4004688	       150	ldexp.c	FUNCTION_1	ELSE_1	IF_4
0x40047d0	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40047d1	              0x5d	                                 pop rbp	      1508	ldexp.c	FUNCTION_41
0x40047d2	            0x415c	                                 pop r12	      1508	ldexp.c	FUNCTION_41
0x40047d4	      0xbf00000000	                              mov edi, 0	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40047d9	            0x31c0	                            xor eax, eax	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40047db	      0xe900000000	                           jmp 0x40047e0	      1410	ldexp.c	FUNCTION_41	IF_2	CALL_1
0x40047e0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x40047e4	          0x4889fe	                            mov rsi, rdi	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x40047e7	              0x5b	                                 pop rbx	      1508	ldexp.c	FUNCTION_41
0x40047e8	              0x5d	                                 pop rbp	      1508	ldexp.c	FUNCTION_41
0x40047e9	            0x415c	                                 pop r12	      1508	ldexp.c	FUNCTION_41
0x40047eb	          0x4889c7	                            mov rdi, rax	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x40047ee	      0xe900000000	                           jmp 0x40047f3	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x40047f3	       0xf1f440000	                   nop dword [rax + rax]	      1496	ldexp.c	FUNCTION_41	SWITCH_1	CALL_32
0x40047f8	    0x488b3d000000	            mov rdi, qword [0x040047ff] 	        97	stdio2.h	CALL_14
0x40047ff	          0x4489e1	                           mov ecx, r12d	        97	stdio2.h	CALL_14
0x4004802	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4004807	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400480c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x400480e	      0xe800000000	                          call 0x4004813	        97	stdio2.h	CALL_14
0x4004813	      0xe970feffff	                           jmp 0x4004688	        97	stdio2.h	CALL_14
0x4004818	            0x89f1	                            mov ecx, esi	        97	stdio2.h	CALL_14
0x400481a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x400481f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4004824	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x4004826	      0xe800000000	                          call 0x400482b	        97	stdio2.h	CALL_14
0x400482b	      0xe92affffff	                           jmp 0x400475a	        97	stdio2.h	CALL_14
0x4004830	            0x89f1	                            mov ecx, esi	        97	stdio2.h	CALL_14
0x4004832	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4004837	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400483c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_14
0x400483e	      0xe800000000	                          call 0x4004843	        97	stdio2.h	CALL_14
0x4004843	      0xe91afbffff	                           jmp 0x4004362	        97	stdio2.h	CALL_14
exp_defsym	DO,0:functions,0:CALL,1:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	20
0x4004150	              0x55	                                push rbp	      1371	ldexp.c	FUNCTION_38
0x4004151	              0x53	                                push rbx	      1371	ldexp.c	FUNCTION_38
0x4004152	          0x4889fd	                            mov rbp, rdi	      1371	ldexp.c	FUNCTION_38
0x4004155	          0x4889f3	                            mov rbx, rsi	      1371	ldexp.c	FUNCTION_38
0x4004158	      0xbf30000000	                           mov edi, 0x30	      1348	ldexp.c	FUNCTION_36	CALL_1
0x400415d	        0x4883ec08	                              sub rsp, 8	      1371	ldexp.c	FUNCTION_38
0x4004161	      0xe800000000	                          call 0x4004166	      1348	ldexp.c	FUNCTION_36	CALL_1
0x4004166	    0xc7003d000000	                   mov dword [rax], 0x3d	      1349	ldexp.c	FUNCTION_36
0x400416c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1350	ldexp.c	FUNCTION_36
0x4004170	        0x48895008	                mov qword [rax + 8], rdx	      1350	ldexp.c	FUNCTION_36
0x4004174	          0x8b5304	                mov edx, dword [rbx + 4]	      1351	ldexp.c	FUNCTION_36
0x4004177	    0xc74010040000	               mov dword [rax + 0x10], 4	      1352	ldexp.c	FUNCTION_36
0x400417e	        0x48895820	             mov qword [rax + 0x20], rbx	      1353	ldexp.c	FUNCTION_36
0x4004182	        0x48896818	             mov qword [rax + 0x18], rbp	      1354	ldexp.c	FUNCTION_36
0x4004186	    0xc74028000000	               mov dword [rax + 0x28], 0	      1355	ldexp.c	FUNCTION_36
0x400418d	          0x895004	                mov dword [rax + 4], edx	      1351	ldexp.c	FUNCTION_36
0x4004190	        0x4883c408	                              add rsp, 8	      1373	ldexp.c	FUNCTION_38
0x4004194	              0x5b	                                 pop rbx	      1373	ldexp.c	FUNCTION_38
0x4004195	              0x5d	                                 pop rbp	      1373	ldexp.c	FUNCTION_38
0x4004196	              0xc3	                                     ret	      1373	ldexp.c	FUNCTION_38
exp_binop	DO,0:functions,0:CALL,2:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,1	49
0x4003e30	            0x4154	                                push r12	      1270	ldexp.c	FUNCTION_32
0x4003e32	              0x55	                                push rbp	      1270	ldexp.c	FUNCTION_32
0x4003e33	          0x4189fc	                           mov r12d, edi	      1270	ldexp.c	FUNCTION_32
0x4003e36	              0x53	                                push rbx	      1270	ldexp.c	FUNCTION_32
0x4003e37	      0xbf28000000	                           mov edi, 0x28	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4003e3c	          0x4889f3	                            mov rbx, rsi	      1270	ldexp.c	FUNCTION_32
0x4003e3f	          0x4889d5	                            mov rbp, rdx	      1270	ldexp.c	FUNCTION_32
0x4003e42	        0x4883ec10	                           sub rsp, 0x10	      1270	ldexp.c	FUNCTION_32
0x4003e46	      0xe800000000	                          call 0x4003e4b	      1271	ldexp.c	FUNCTION_32	CALL_1
0x4003e4b	          0x448920	                   mov dword [rax], r12d	      1273	ldexp.c	FUNCTION_32
0x4003e4e	        0x488b5308	                mov rdx, qword [rbx + 8]	      1274	ldexp.c	FUNCTION_32
0x4003e52	        0x48895008	                mov qword [rax + 8], rdx	      1274	ldexp.c	FUNCTION_32
0x4003e56	          0x8b5304	                mov edx, dword [rbx + 4]	      1275	ldexp.c	FUNCTION_32
0x4003e59	        0x48895818	             mov qword [rax + 0x18], rbx	      1276	ldexp.c	FUNCTION_32
0x4003e5d	        0x48896820	             mov qword [rax + 0x20], rbp	      1277	ldexp.c	FUNCTION_32
0x4003e61	    0xc74010000000	               mov dword [rax + 0x10], 0	      1278	ldexp.c	FUNCTION_32
0x4003e68	          0x895004	                mov dword [rax + 4], edx	      1275	ldexp.c	FUNCTION_32
0x4003e6b	        0x837b1007	               cmp dword [rbx + 0x10], 7	      1279	ldexp.c	FUNCTION_32	IF_1
0x4003e6f	            0x740f	                            je 0x4003e80	      1279	ldexp.c	FUNCTION_32	IF_1
0x4003e71	        0x4883c410	                           add rsp, 0x10	      1286	ldexp.c	FUNCTION_32
0x4003e75	              0x5b	                                 pop rbx	      1286	ldexp.c	FUNCTION_32
0x4003e76	              0x5d	                                 pop rbp	      1286	ldexp.c	FUNCTION_32
0x4003e77	            0x415c	                                 pop r12	      1286	ldexp.c	FUNCTION_32
0x4003e79	              0xc3	                                     ret	      1286	ldexp.c	FUNCTION_32
0x4003e7a	    0x660f1f440000	                    nop word [rax + rax]	      1286	ldexp.c	FUNCTION_32
0x4003e80	        0x837d1007	               cmp dword [rbp + 0x10], 7	      1280	ldexp.c	FUNCTION_32	IF_1
0x4003e84	            0x75eb	                           jne 0x4003e71	      1280	ldexp.c	FUNCTION_32	IF_1
0x4003e86	    0x418d9424dcfe	                  lea edx, [r12 - 0x124]	      1283	ldexp.c	FUNCTION_32	IF_1
0x4003e8e	          0x83fa01	                              cmp edx, 1	      1283	ldexp.c	FUNCTION_32	IF_1
0x4003e91	            0x76de	                           jbe 0x4003e71	      1283	ldexp.c	FUNCTION_32	IF_1
0x4003e93	    0x4181fc170100	                         cmp r12d, 0x117	      1283	ldexp.c	FUNCTION_32	IF_1
0x4003e9a	            0x74d5	                            je 0x4003e71	      1283	ldexp.c	FUNCTION_32	IF_1
0x4003e9c	          0x4889c7	                            mov rdi, rax	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4003e9f	      0x4889442408	                mov qword [rsp + 8], rax	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4003ea4	    0xc70500000000	               mov dword [0x04003eae], 0	      1246	ldexp.c	FUNCTION_30
0x4003eae	    0x48c705000000	               mov qword [0x04003eb9], 0	      1247	ldexp.c	FUNCTION_30
0x4003eb9	    0x48c705000000	               mov qword [0x04003ec4], 0	      1248	ldexp.c	FUNCTION_30
0x4003ec4	    0x48c705000000	               mov qword [0x04003ecf], 0	      1249	ldexp.c	FUNCTION_30
0x4003ecf	      0xe88cd6ffff	                call sym.exp_fold_tree_1	      1250	ldexp.c	FUNCTION_30	CALL_1
0x4003ed4	    0x8b0500000000	            mov eax, dword [0x04003eda] 	      1257	ldexp.c	FUNCTION_31	IF_1
0x4003eda	            0x85c0	                           test eax, eax	      1257	ldexp.c	FUNCTION_31	IF_1
0x4003edc	      0x488b442408	                mov rax, qword [rsp + 8]	      1257	ldexp.c	FUNCTION_31	IF_1
0x4003ee1	            0x748e	                            je 0x4003e71	      1257	ldexp.c	FUNCTION_31	IF_1
0x4003ee3	    0xc70002010000	                  mov dword [rax], 0x102	      1259	ldexp.c	FUNCTION_31	IF_1
0x4003ee9	    0x488b15000000	            mov rdx, qword [0x04003ef0] 	      1260	ldexp.c	FUNCTION_31	IF_1
0x4003ef0	    0x48c740200000	               mov qword [rax + 0x20], 0	      1261	ldexp.c	FUNCTION_31	IF_1
0x4003ef8	    0xc74010070000	               mov dword [rax + 0x10], 7	      1262	ldexp.c	FUNCTION_31	IF_1
0x4003eff	        0x48895018	             mov qword [rax + 0x18], rdx	      1260	ldexp.c	FUNCTION_31	IF_1
0x4003f03	      0xe969ffffff	                           jmp 0x4003e71	      1260	ldexp.c	FUNCTION_31	IF_1
exp_intop	DO,0:functions,0:CALL,2:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,0	20
0x4002820	              0x55	                                push rbp	       200	ldexp.c	FUNCTION_5
0x4002821	              0x53	                                push rbx	       200	ldexp.c	FUNCTION_5
0x4002822	          0x4889fd	                            mov rbp, rdi	       200	ldexp.c	FUNCTION_5
0x4002825	      0xbf28000000	                           mov edi, 0x28	       201	ldexp.c	FUNCTION_5	CALL_1
0x400282a	        0x4883ec08	                              sub rsp, 8	       200	ldexp.c	FUNCTION_5
0x400282e	      0xe800000000	                          call 0x4002833	       201	ldexp.c	FUNCTION_5	CALL_1
0x4002833	          0x4889c3	                            mov rbx, rax	       201	ldexp.c	FUNCTION_5	CALL_1
0x4002836	    0xc70002010000	                  mov dword [rax], 0x102	       202	ldexp.c	FUNCTION_5
0x400283c	      0xe800000000	                          call 0x4002841	       203	ldexp.c	FUNCTION_5	CALL_2
0x4002841	        0x48894308	                mov qword [rbx + 8], rax	       203	ldexp.c	FUNCTION_5	CALL_2
0x4002845	    0x8b0500000000	            mov eax, dword [0x0400284b] 	       204	ldexp.c	FUNCTION_5
0x400284b	        0x48896b18	             mov qword [rbx + 0x18], rbp	       205	ldexp.c	FUNCTION_5
0x400284f	    0x48c743200000	               mov qword [rbx + 0x20], 0	       206	ldexp.c	FUNCTION_5
0x4002857	    0xc74310070000	               mov dword [rbx + 0x10], 7	       207	ldexp.c	FUNCTION_5
0x400285e	          0x894304	                mov dword [rbx + 4], eax	       204	ldexp.c	FUNCTION_5
0x4002861	        0x4883c408	                              add rsp, 8	       209	ldexp.c	FUNCTION_5
0x4002865	          0x4889d8	                            mov rax, rbx	       209	ldexp.c	FUNCTION_5
0x4002868	              0x5b	                                 pop rbx	       209	ldexp.c	FUNCTION_5
0x4002869	              0x5d	                                 pop rbp	       209	ldexp.c	FUNCTION_5
0x400286a	              0xc3	                                     ret	       209	ldexp.c	FUNCTION_5
definedness_newfunc	DO,0:functions,0:CALL,3:WHILE,0:SWITCH,0:FOR,0:ELSE,0:IF,2	30
0x40000b0	          0x4885ff	                           test rdi, rdi	       278	ldexp.c	FUNCTION_11	IF_1
0x40000b3	          0x4889f8	                            mov rax, rdi	       275	ldexp.c	FUNCTION_11
0x40000b6	            0x7410	                            je 0x40000c8	       278	ldexp.c	FUNCTION_11	IF_1
0x40000b8	        0x806721fe	             and byte [rdi + 0x21], 0xfe	       285	ldexp.c	FUNCTION_11
0x40000bc	        0xc6472000	                mov byte [rdi + 0x20], 0	       286	ldexp.c	FUNCTION_11
0x40000c0	              0xc3	                                     ret	       288	ldexp.c	FUNCTION_11
0x40000c1	     0xf1f80000000	                         nop dword [rax]	       288	ldexp.c	FUNCTION_11
0x40000c8	              0x53	                                push rbx	       275	ldexp.c	FUNCTION_11
0x40000c9	          0x4889f7	                            mov rdi, rsi	       275	ldexp.c	FUNCTION_11
0x40000cc	      0xbe28000000	                           mov esi, 0x28	       279	ldexp.c	FUNCTION_11	IF_1
0x40000d1	          0x4889d3	                            mov rbx, rdx	       279	ldexp.c	FUNCTION_11	IF_1
0x40000d4	      0xe800000000	                          call 0x40000d9	       279	ldexp.c	FUNCTION_11	IF_1
0x40000d9	          0x4885c0	                           test rax, rax	       282	ldexp.c	FUNCTION_11	IF_2
0x40000dc	            0x7533	                           jne 0x4000111	       282	ldexp.c	FUNCTION_11	IF_2
0x40000de	      0xba05000000	                              mov edx, 5	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000e3	            0x31ff	                            xor edi, edi	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000e5	      0xbe00000000	                              mov esi, 0	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000ea	      0xe800000000	                          call 0x40000ef	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000ef	          0x4889de	                            mov rsi, rbx	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000f2	          0x4889c7	                            mov rdi, rax	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000f5	            0x31c0	                            xor eax, eax	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000f7	      0xe800000000	                          call 0x40000fc	       283	ldexp.c	FUNCTION_11	CALL_3
0x40000fc	     0xfb704252000	                  movzx eax, word [0x20]	       285	ldexp.c	FUNCTION_11
0x4000104	          0x80e4fe	                            and ah, 0xfe	       285	ldexp.c	FUNCTION_11
0x4000107	    0x668904252000	                     mov word [0x20], ax	       285	ldexp.c	FUNCTION_11
0x400010f	             0xf0b	                                     ud2	       285	ldexp.c	FUNCTION_11
0x4000111	        0x806021fe	             and byte [rax + 0x21], 0xfe	       285	ldexp.c	FUNCTION_11
0x4000115	        0xc6402000	                mov byte [rax + 0x20], 0	       286	ldexp.c	FUNCTION_11
0x4000119	              0x5b	                                 pop rbx	       288	ldexp.c	FUNCTION_11
0x400011a	              0xc3	                                     ret	       288	ldexp.c	FUNCTION_11
