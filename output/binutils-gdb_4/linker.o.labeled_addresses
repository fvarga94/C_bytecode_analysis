_bfd_generic_link_add_symbols	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,1:FOR,0:CALL,4	1030
0x4000ea0	            0x4157	                                push r15	       841	linker.c	FUNCTION_15
0x4000ea2	            0x4156	                                push r14	       841	linker.c	FUNCTION_15
0x4000ea4	          0x4989ff	                            mov r15, rdi	       841	linker.c	FUNCTION_15
0x4000ea7	            0x4155	                                push r13	       841	linker.c	FUNCTION_15
0x4000ea9	            0x4154	                                push r12	       841	linker.c	FUNCTION_15
0x4000eab	          0x4989f6	                            mov r14, rsi	       841	linker.c	FUNCTION_15
0x4000eae	              0x55	                                push rbp	       841	linker.c	FUNCTION_15
0x4000eaf	              0x53	                                push rbx	       841	linker.c	FUNCTION_15
0x4000eb0	        0x4883ec78	                           sub rsp, 0x78	       841	linker.c	FUNCTION_15
0x4000eb4	    0x64488b042528	                mov rax, qword fs:[0x28]	       841	linker.c	FUNCTION_15
0x4000ebd	      0x4889442468	             mov qword [rsp + 0x68], rax	       841	linker.c	FUNCTION_15
0x4000ec2	            0x31c0	                            xor eax, eax	       841	linker.c	FUNCTION_15
0x4000ec4	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000ec8	          0x83e007	                              and eax, 7	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000ecb	            0x3c01	                               cmp al, 1	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000ecd	            0x7461	                            je 0x4000f30	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000ecf	            0x3c02	                               cmp al, 2	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000ed1	            0x752d	                           jne 0x4000f00	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4000ed3	        0x807f4700	                cmp byte [rdi + 0x47], 0	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000ed7	     0xf89e3040000	                           jns 0x40013c0	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000edd	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       913	linker.c	FUNCTION_17	CALL_5
0x4000ee4	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       913	linker.c	FUNCTION_17	CALL_5
0x4000ee8	          0x4885ff	                           test rdi, rdi	       914	linker.c	FUNCTION_17	IF_3
0x4000eeb	     0xf855f020000	                           jne 0x4001150	       914	linker.c	FUNCTION_17	IF_3
0x4000ef1	      0xb801000000	                              mov eax, 1	      1009	linker.c	FUNCTION_17
0x4000ef6	            0xeb14	                           jmp 0x4000f0c	      1009	linker.c	FUNCTION_17
0x4000ef8	     0xf1f84000000	                   nop dword [rax + rax]	      1009	linker.c	FUNCTION_17
0x4000f00	      0xbf03000000	                              mov edi, 3	       854	linker.c	FUNCTION_15	SWITCH_1	CALL_4
0x4000f05	      0xe800000000	                          call 0x4000f0a	       854	linker.c	FUNCTION_15	SWITCH_1	CALL_4
0x4000f0a	            0x31c0	                            xor eax, eax	       855	linker.c	FUNCTION_15	SWITCH_1
0x4000f0c	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       859	linker.c	FUNCTION_15
0x4000f11	    0x644833342528	                xor rsi, qword fs:[0x28]	       859	linker.c	FUNCTION_15
0x4000f1a	     0xf858c100000	                           jne 0x4001fac	       859	linker.c	FUNCTION_15
0x4000f20	        0x4883c478	                           add rsp, 0x78	       859	linker.c	FUNCTION_15
0x4000f24	              0x5b	                                 pop rbx	       859	linker.c	FUNCTION_15
0x4000f25	              0x5d	                                 pop rbp	       859	linker.c	FUNCTION_15
0x4000f26	            0x415c	                                 pop r12	       859	linker.c	FUNCTION_15
0x4000f28	            0x415d	                                 pop r13	       859	linker.c	FUNCTION_15
0x4000f2a	            0x415e	                                 pop r14	       859	linker.c	FUNCTION_15
0x4000f2c	            0x415f	                                 pop r15	       859	linker.c	FUNCTION_15
0x4000f2e	              0xc3	                                     ret	       859	linker.c	FUNCTION_15
0x4000f2f	              0x90	                                     nop	       859	linker.c	FUNCTION_15
0x4000f30	    0x488b97b00000	            mov rdx, qword [rdi + 0xb0] 	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000f37	          0x4885d2	                           test rdx, rdx	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000f3a	     0xf84910d0000	                            je 0x4001cd1	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000f40	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000f46	      0x4889542408	                mov qword [rsp + 8], rdx	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000f4b	          0x4889d1	                            mov rcx, rdx	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000f4e	        0x488d04c1	                  lea rax, [rcx + rax*8]	      1142	linker.c	FUNCTION_19
0x4000f52	          0x4839c8	                            cmp rax, rcx	      1143	linker.c	FUNCTION_19	FOR_1
0x4000f55	      0x4889442428	             mov qword [rsp + 0x28], rax	      1142	linker.c	FUNCTION_19
0x4000f5a	            0x7695	                           jbe 0x4000ef1	      1143	linker.c	FUNCTION_19	FOR_1
0x4000f5c	      0x488b442408	                mov rax, qword [rsp + 8]	      1147	linker.c	FUNCTION_19	FOR_1
0x4000f61	          0x488b28	                    mov rbp, qword [rax]	      1147	linker.c	FUNCTION_19	FOR_1
0x4000f64	          0x8b5d18	            mov ebx, dword [rbp + 0x18] 	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4000f67	        0x4c8b6d20	            mov r13, qword [rbp + 0x20] 	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4000f6b	    0xf7c382380000	                        test ebx, 0x3882	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4000f71	            0x753d	                           jne 0x4000fb0	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4000f73	    0x4981fd000000	                              cmp r13, 0	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x4000f7a	     0xf84f0020000	                            je 0x4001270	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x4000f80	      0x41f6452110	           test byte [r13 + 0x21], 0x10 	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4000f85	            0x7529	                           jne 0x4000fb0	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4000f87	    0x4981fd000000	                              cmp r13, 0	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4000f8e	            0x7420	                            je 0x4000fb0	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4000f90	    0x488344240808	                  add qword [rsp + 8], 8	      1143	linker.c	FUNCTION_19	FOR_1
0x4000f96	      0x488b442408	                mov rax, qword [rsp + 8]	      1143	linker.c	FUNCTION_19	FOR_1
0x4000f9b	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      1143	linker.c	FUNCTION_19	FOR_1
0x4000fa0	            0x77ba	                            ja 0x4000f5c	      1143	linker.c	FUNCTION_19	FOR_1
0x4000fa2	      0xe94affffff	                           jmp 0x4000ef1	      1143	linker.c	FUNCTION_19	FOR_1
0x4000fa7	    0x660f1f840000	                    nop word [rax + rax]	      1143	linker.c	FUNCTION_19	FOR_1
0x4000fb0	        0x488b4508	                mov rax, qword [rbp + 8]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4000fb4	          0x4189dc	                           mov r12d, ebx	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4000fb7	    0x4181e4002000	                        and r12d, 0x2000	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4000fbe	      0x4889442418	             mov qword [rsp + 0x18], rax	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4000fc3	     0xf840f010000	                            je 0x40010d8	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4000fc9	          0x4889c6	                            mov rsi, rax	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4000fcc	      0x488b442408	                mov rax, qword [rsp + 8]	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4000fd1	      0x4889742420	             mov qword [rsp + 0x20], rsi	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4000fd6	        0x4883c008	                              add rax, 8	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4000fda	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4000fdf	            0x7617	                           jbe 0x4000ff8	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4000fe1	      0x488b742408	                mov rsi, qword [rsp + 8]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4000fe6	      0x4889442408	                mov qword [rsp + 8], rax	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4000feb	        0x488b5608	                mov rdx, qword [rsi + 8]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4000fef	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4000ff3	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4000ff8	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4000ffc	          0x4d85ed	                           test r13, r13	      1381	linker.c	FUNCTION_21	CALL_1
0x4000fff	      0x4889442410	             mov qword [rsp + 0x10], rax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001004	     0xf842d010000	                            je 0x4001137	      1381	linker.c	FUNCTION_21	CALL_1
0x400100a	    0x4981fd000000	                              cmp r13, 0	      1383	linker.c	FUNCTION_21	IF_1	CALL_2
0x4001011	     0xf8499020000	                            je 0x40012b0	      1383	linker.c	FUNCTION_21	IF_1	CALL_2
0x4001017	          0x4585e4	                         test r12d, r12d	      1384	linker.c	FUNCTION_21	IF_1
0x400101a	     0xf8590020000	                           jne 0x40012b0	      1384	linker.c	FUNCTION_21	IF_1
0x4001020	          0xf6c710	                           test bh, 0x10	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x4001023	     0xf85bf030000	                           jne 0x40013e8	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x4001029	          0xf6c708	                              test bh, 8	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x400102c	     0xf85c6030000	                           jne 0x40013f8	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001032	    0x4981fd000000	                              cmp r13, 0	      1399	linker.c	FUNCTION_21	ELSE_3	IF_5	CALL_4
0x4001039	     0xf84540e0000	                            je 0x4001e93	      1399	linker.c	FUNCTION_21	ELSE_3	IF_5	CALL_4
0x400103f	          0xf6c380	                           test bl, 0x80	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001042	     0xf85610d0000	                           jne 0x4001da9	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001048	      0x41f6452110	           test byte [r13 + 0x21], 0x10 	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x400104d	     0xf84a50e0000	                            je 0x4001ef8	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x4001053	        0x410fb606	                   movzx eax, byte [r14]	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x4001057	          0x4531db	                          xor r11d, r11d	      1378	linker.c	FUNCTION_21
0x400105a	    0xc74424300400	               mov dword [rsp + 0x30], 4	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x4001062	          0x83e003	                              and eax, 3	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x4001065	            0x3c02	                               cmp al, 2	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x4001067	     0xf8472020000	                            je 0x40012df	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x400106d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x4001072	          0x80385f	                    cmp byte [rax], 0x5f	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x4001075	     0xf8564020000	                           jne 0x40012df	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x400107b	        0x8078015f	                cmp byte [rax + 1], 0x5f	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x400107f	     0xf855a020000	                           jne 0x40012df	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x4001085	            0x31f6	                            xor esi, esi	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001087	        0x8078025f	                cmp byte [rax + 2], 0x5f	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x400108b	      0xbf00000000	                              mov edi, 0	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001090	      0xb90f000000	                            mov ecx, 0xf	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001095	        0x400f94c6	                                sete sil	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001099	          0x4801c6	                            add rsi, rax	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x400109c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x400109e	     0xf853b020000	                           jne 0x40012df	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40010a4	      0xba05000000	                              mov edx, 5	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40010a9	      0xbe00000000	                              mov esi, 0	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40010ae	      0xbf00000000	                              mov edi, 0	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40010b3	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40010b8	      0xe800000000	                          call 0x40010bd	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40010bd	          0x4c89fe	                            mov rsi, r15	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40010c0	          0x4889c7	                            mov rdi, rax	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40010c3	            0x31c0	                            xor eax, eax	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40010c5	      0xe800000000	                          call 0x40010ca	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40010ca	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40010cf	      0xe90b020000	                           jmp 0x40012df	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40010d4	         0xf1f4000	                         nop dword [rax]	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40010d8	    0x4981fd000000	                              cmp r13, 0	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x40010df	     0xf845b0c0000	                            je 0x4001d40	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x40010e5	          0xf6c710	                           test bh, 0x10	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x40010e8	      0x4889442420	             mov qword [rsp + 0x20], rax	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x40010ed	            0x7433	                            je 0x4001122	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x40010ef	      0x488b742408	                mov rsi, qword [rsp + 8]	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x40010f4	          0x4889f0	                            mov rax, rsi	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x40010f7	        0x4883c008	                              add rax, 8	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x40010fb	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001100	     0xf86ee070000	                           jbe 0x40018f4	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001106	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x400110b	        0x488b5608	                mov rdx, qword [rsi + 8]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x400110f	      0x4889442408	                mov qword [rsp + 8], rax	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001114	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001119	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x400111d	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001122	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001126	          0x4d85ed	                           test r13, r13	      1381	linker.c	FUNCTION_21	CALL_1
0x4001129	      0x4889442410	             mov qword [rsp + 0x10], rax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x400112e	     0xf85ecfeffff	                           jne 0x4001020	      1381	linker.c	FUNCTION_21	CALL_1
0x4001134	          0x4531e4	                          xor r12d, r12d	      1381	linker.c	FUNCTION_21	CALL_1
0x4001137	      0xbe65050000	                          mov esi, 0x565	      1381	linker.c	FUNCTION_21	CALL_1
0x400113c	      0xbf00000000	                              mov edi, 0	      1381	linker.c	FUNCTION_21	CALL_1
0x4001141	          0x4531ed	                          xor r13d, r13d	      1381	linker.c	FUNCTION_21	CALL_1
0x4001144	      0xe800000000	                          call 0x4001149	      1381	linker.c	FUNCTION_21	CALL_1
0x4001149	      0xe9c9feffff	                           jmp 0x4001017	      1381	linker.c	FUNCTION_21	CALL_1
0x400114e	            0x6690	                                     nop	      1381	linker.c	FUNCTION_21	CALL_1
0x4001150	      0xe800000000	                          call 0x4001155	       917	linker.c	FUNCTION_17	CALL_6
0x4001155	          0x4885c0	                           test rax, rax	       918	linker.c	FUNCTION_17	IF_4
0x4001158	      0x4889442408	                mov qword [rsp + 8], rax	       917	linker.c	FUNCTION_17	CALL_6
0x400115d	     0xf84a7fdffff	                            je 0x4000f0a	       918	linker.c	FUNCTION_17	IF_4
0x4001163	      0x4c897c2450	             mov qword [rsp + 0x50], r15	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001168	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x400116d	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4001174	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4001178	        0x488b4020	            mov rax, qword [rax + 0x20] 	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x400117c	        0x48c1e004	                              shl rax, 4	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4001180	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4001185	          0x4801c8	                            add rax, rcx	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4001188	          0x4839c1	                            cmp rcx, rax	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x400118b	      0x4889442410	             mov qword [rsp + 0x10], rax	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4001190	     0xf83c9000000	                           jae 0x400125f	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001196	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x400119d	          0x4889cb	                            mov rbx, rcx	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011a0	            0x31ed	                            xor ebp, ebp	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011a2	    0x48c744241800	               mov qword [rsp + 0x18], 0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011ab	    0xc74424400000	               mov dword [rsp + 0x40], 0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011b3	          0x4531ed	                          xor r13d, r13d	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011b6	          0x4d89fc	                            mov r12, r15	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011b9	     0xf1f80000000	                         nop dword [rax]	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x40011c0	          0x4589ef	                          mov r15d, r13d	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x40011c3	      0x4c037c2408	                add r15, qword [rsp + 8]	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x40011c8	        0x41803f00	                       cmp byte [r15], 0	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x40011cc	            0x7572	                           jne 0x4001240	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x40011ce	            0x85ed	                           test ebp, ebp	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x40011d0	            0x7406	                            je 0x40011d8	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x40011d2	        0x4c396308	                cmp qword [rbx + 8], r12	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x40011d6	            0x745a	                            je 0x4001232	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x40011d8	          0x488b33	                    mov rsi, qword [rbx]	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x40011db	          0x4885f6	                           test rsi, rsi	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x40011de	     0xf847c0a0000	                            je 0x4001c60	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x40011e4	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x40011e8	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x40011eb	     0xf8467070000	                            je 0x4001958	       498	linker.c	FUNCTION_3	IF_1
0x40011f1	            0x31c9	                            xor ecx, ecx	       501	linker.c	FUNCTION_3
0x40011f3	            0x31d2	                            xor edx, edx	       501	linker.c	FUNCTION_3
0x40011f5	      0xe800000000	                          call 0x40011fa	       501	linker.c	FUNCTION_3
0x40011fa	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x40011fd	     0xf8455070000	                            je 0x4001958	       504	linker.c	FUNCTION_3	IF_2
0x4001203	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001207	          0x8d4afa	                      lea ecx, [rdx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400120a	          0x80f901	                               cmp cl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400120d	            0x7711	                            ja 0x4001220	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400120f	              0x90	                                     nop	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001210	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001214	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001218	          0x8d4afa	                      lea ecx, [rdx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400121b	          0x80f901	                               cmp cl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400121e	            0x76f0	                           jbe 0x4001210	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001220	            0x89d0	                            mov eax, edx	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001222	          0x83e0fb	                     and eax, 0xfffffffb	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001225	            0x3c01	                               cmp al, 1	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001227	     0xf84a3070000	                            je 0x40019d0	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x400122d	          0x80fa02	                               cmp dl, 2	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4001230	            0x740e	                            je 0x4001240	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4001232	        0x41c60701	                       mov byte [r15], 1	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4001236	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4001240	        0x4883c310	                           add rbx, 0x10	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001244	        0x4183c501	                             add r13d, 1	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001248	      0x48395c2410	            cmp qword [rsp + 0x10], rbx 	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x400124d	     0xf876dffffff	                            ja 0x40011c0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001253	        0x8b542440	            mov edx, dword [rsp + 0x40] 	      1006	linker.c	FUNCTION_17	WHILE_1
0x4001257	            0x85d2	                           test edx, edx	      1006	linker.c	FUNCTION_17	WHILE_1
0x4001259	     0xf8509ffffff	                           jne 0x4001168	      1006	linker.c	FUNCTION_17	WHILE_1
0x400125f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1008	linker.c	FUNCTION_17	CALL_14
0x4001264	      0xe800000000	                          call 0x4001269	      1008	linker.c	FUNCTION_17	CALL_14
0x4001269	      0xe983fcffff	                           jmp 0x4000ef1	      1008	linker.c	FUNCTION_17	CALL_14
0x400126e	            0x6690	                                     nop	      1008	linker.c	FUNCTION_17	CALL_14
0x4001270	        0x488b4508	                mov rax, qword [rbp + 8]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001274	          0x4189dc	                           mov r12d, ebx	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001277	    0x4181e4002000	                        and r12d, 0x2000	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x400127e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001283	     0xf84da0b0000	                            je 0x4001e63	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001289	      0x488b442408	                mov rax, qword [rsp + 8]	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x400128e	        0x4883c008	                              add rax, 8	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001292	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001297	     0xf8744fdffff	                            ja 0x4000fe1	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x400129d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012a1	      0x4889442410	             mov qword [rsp + 0x10], rax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x40012a6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x40012ab	      0x4889442420	             mov qword [rsp + 0x20], rax	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x40012b0	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40012b5	          0x4531c9	                            xor r9d, r9d	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40012b8	          0x4531c0	                            xor r8d, r8d	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40012bb	      0xb901000000	                              mov ecx, 1	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40012c0	          0x4c89f6	                            mov rsi, r14	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40012c3	          0x4c89ff	                            mov rdi, r15	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40012c6	      0xe800000000	                          call 0x40012cb	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40012cb	          0x4885c0	                           test rax, rax	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x40012ce	          0x4989c3	                            mov r11, rax	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40012d1	     0xf8433fcffff	                            je 0x4000f0a	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x40012d7	    0xc74424300500	               mov dword [rsp + 0x30], 5	      1386	linker.c	FUNCTION_21	IF_1
0x40012df	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x40012e3	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x40012e6	     0xf841efcffff	                            je 0x4000f0a	       498	linker.c	FUNCTION_3	IF_1
0x40012ec	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       498	linker.c	FUNCTION_3	IF_1
0x40012f2	     0xf8412fcffff	                            je 0x4000f0a	       498	linker.c	FUNCTION_3	IF_1
0x40012f8	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       501	linker.c	FUNCTION_3
0x40012fd	            0x31c9	                            xor ecx, ecx	       501	linker.c	FUNCTION_3
0x40012ff	      0xba01000000	                              mov edx, 1	       501	linker.c	FUNCTION_3
0x4001304	      0x4c895c2438	             mov qword [rsp + 0x38], r11	       501	linker.c	FUNCTION_3
0x4001309	      0xe800000000	                          call 0x400130e	       501	linker.c	FUNCTION_3
0x400130e	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	       501	linker.c	FUNCTION_3
0x4001313	          0x4989c4	                            mov r12, rax	       501	linker.c	FUNCTION_3
0x4001316	          0x4d85e4	                           test r12, r12	      1429	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001319	     0xf84ebfbffff	                            je 0x4000f0a	      1429	linker.c	FUNCTION_21	ELSE_8	IF_12
0x400131f	      0x41f6460101	                  test byte [r14 + 1], 1	      1437	linker.c	FUNCTION_21	IF_14
0x4001324	            0x7526	                           jne 0x400134c	      1437	linker.c	FUNCTION_21	IF_14
0x4001326	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      1438	linker.c	FUNCTION_21	IF_14
0x400132a	          0x4885ff	                           test rdi, rdi	      1438	linker.c	FUNCTION_21	IF_14
0x400132d	            0x7451	                            je 0x4001380	      1438	linker.c	FUNCTION_21	IF_14
0x400132f	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001334	            0x31c9	                            xor ecx, ecx	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001336	            0x31d2	                            xor edx, edx	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001338	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x400133d	      0xe800000000	                          call 0x4001342	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001342	          0x4885c0	                           test rax, rax	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001345	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x400134a	            0x7434	                            je 0x4001380	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x400134c	        0x4883ec08	                              sub rsp, 8	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001350	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001354	          0x4c89f9	                            mov rcx, r15	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001357	              0x53	                                push rbx	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001358	          0x4c89da	                            mov rdx, r11	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400135b	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001360	          0x4c89e6	                            mov rsi, r12	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001363	          0x4d89e8	                             mov r8, r13	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001366	          0x4c89f7	                            mov rdi, r14	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001369	      0x4c895c2448	             mov qword [rsp + 0x48], r11	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400136e	          0xff5050	                 call qword [rax + 0x50]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001371	              0x59	                                 pop rcx	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001372	            0x85c0	                           test eax, eax	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001374	              0x5e	                                 pop rsi	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001375	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400137a	     0xf848afbffff	                            je 0x4000f0a	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001380	    0x410fb6742418	           movzx esi, byte [r12 + 0x18] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001386	      0x4863442430	         movsxd rax, dword [rsp + 0x30] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400138b	          0x4c89e3	                            mov rbx, r12	      1702	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x400138e	    0x41ba01000000	                             mov r10d, 1	      1454	linker.c	FUNCTION_21	DO_1
0x4001394	         0xfb64b19	           movzx ecx, byte [rbx + 0x19] 	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x4001398	        0x400fb6d6	                          movzx edx, sil	      1454	linker.c	FUNCTION_21	DO_1
0x400139c	          0xf6c108	                              test cl, 8	      1454	linker.c	FUNCTION_21	DO_1
0x400139f	        0x490f45d2	                         cmovne rdx, r10	      1454	linker.c	FUNCTION_21	DO_1
0x40013a3	        0x488d14c2	                  lea rdx, [rdx + rax*8]	      1459	linker.c	FUNCTION_21	DO_1
0x40013a7	    0x8b1495000000	                  mov edx, dword [rdx*4]	      1459	linker.c	FUNCTION_21	DO_1
0x40013ae	          0x83fa14	                           cmp edx, 0x14	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40013b1	     0xf8739010000	                            ja 0x40014f0	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40013b7	            0x89d7	                            mov edi, edx	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40013b9	    0xff24fd000000	                       jmp qword [rdi*8]	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40013c0	            0x31f6	                            xor esi, esi	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40013c2	      0xe800000000	                          call 0x40013c7	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40013c7	          0x4885c0	                           test rax, rax	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40013ca	     0xf8421fbffff	                            je 0x4000ef1	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40013d0	      0xbf08000000	                              mov edi, 8	       909	linker.c	FUNCTION_17	IF_1	CALL_4
0x40013d5	      0xe800000000	                          call 0x40013da	       909	linker.c	FUNCTION_17	IF_1	CALL_4
0x40013da	            0x31c0	                            xor eax, eax	       910	linker.c	FUNCTION_17	IF_1
0x40013dc	      0xe92bfbffff	                           jmp 0x4000f0c	       910	linker.c	FUNCTION_17	IF_1
0x40013e1	     0xf1f80000000	                         nop dword [rax]	       910	linker.c	FUNCTION_17	IF_1
0x40013e8	          0x4531db	                          xor r11d, r11d	      1378	linker.c	FUNCTION_21
0x40013eb	    0xc74424300600	               mov dword [rsp + 0x30], 6	      1396	linker.c	FUNCTION_21	ELSE_1	IF_3
0x40013f3	      0xe9e7feffff	                           jmp 0x40012df	      1396	linker.c	FUNCTION_21	ELSE_1	IF_3
0x40013f8	          0x4531db	                          xor r11d, r11d	      1378	linker.c	FUNCTION_21
0x40013fb	    0xc74424300700	               mov dword [rsp + 0x30], 7	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001403	      0xe9d7feffff	                           jmp 0x40012df	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001408	     0xf1f84000000	                   nop dword [rax + rax]	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001410	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001415	            0x7511	                           jne 0x4001428	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001417	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x400141b	        0x483b5a30	            cmp rbx, qword [rdx + 0x30] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x400141f	            0x7407	                            je 0x4001428	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001421	        0x48895b20	             mov qword [rbx + 0x20], rbx	      1743	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001425	           0xf1f00	                         nop dword [rax]	      1743	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001428	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400142c	         0xfb67318	           movzx esi, byte [rbx + 0x18] 	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001430	      0xe95fffffff	                           jmp 0x4001394	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001435	           0xf1f00	                         nop dword [rax]	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001438	        0x4080fe05	                              cmp sil, 5	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400143c	            0x7423	                            je 0x4001461	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400143e	      0xbe8a060000	                          mov esi, 0x68a	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001443	      0xbf00000000	                              mov edi, 0	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001448	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400144d	      0x4489542430	            mov dword [rsp + 0x30], r10d	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001452	      0xe800000000	                          call 0x4001457	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001457	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400145c	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001461	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001465	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400146a	          0x4531c0	                            xor r8d, r8d	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400146d	      0x4489542430	            mov dword [rsp + 0x30], r10d	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001472	      0xb906000000	                              mov ecx, 6	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001477	          0x4c89fa	                            mov rdx, r15	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400147a	          0x4889de	                            mov rsi, rbx	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400147d	          0x4c89f7	                            mov rdi, r14	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001480	          0xff5010	                 call qword [rax + 0x10]	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001483	      0x4c63542430	         movsxd r10, dword [rsp + 0x30] 	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001488	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400148d	      0x410fb64318	           movzx eax, byte [r11 + 0x18] 	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001492	            0x3c06	                               cmp al, 6	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001494	     0xf847e070000	                            je 0x4001c18	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x400149a	            0x84c0	                             test al, al	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x400149c	     0xf840e070000	                            je 0x4001bb0	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40014a2	        0x807b1800	                cmp byte [rbx + 0x18], 0	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x40014a6	     0xf849c040000	                            je 0x4001948	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x40014ac	        0xc6431806	                mov byte [rbx + 0x18], 6	      1706	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014b0	        0x4c895b28	             mov qword [rbx + 0x28], r11	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014b4	      0xbe06000000	                              mov esi, 6	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014b9	            0x31c0	                            xor eax, eax	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014bb	      0xe9d4feffff	                           jmp 0x4001394	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014c0	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40014c4	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40014c9	        0x488b7808	                mov rdi, qword [rax + 8]	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40014cd	      0xe800000000	                          call 0x40014d2	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40014d2	            0x85c0	                           test eax, eax	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40014d4	            0x741a	                            je 0x40014f0	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x40014d6	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014da	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014df	          0x4c89e9	                            mov rcx, r13	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014e2	          0x4c89fa	                            mov rdx, r15	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014e5	          0x4889de	                            mov rsi, rbx	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014e8	          0x4c89f7	                            mov rdi, r14	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014eb	          0xff5008	                    call qword [rax + 8]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014ee	            0x6690	                                     nop	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40014f0	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40014f3	          0xf6c408	                              test ah, 8	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40014f6	     0xf8494000000	                            je 0x4001590	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x40014fc	    0x41807c241800	                cmp byte [r12 + 0x18], 0	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001502	     0xf8588000000	                           jne 0x4001590	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001508	    0x48c745280000	               mov qword [rbp + 0x28], 0	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001510	      0xe97bfaffff	                           jmp 0x4000f90	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001515	           0xf1f00	                         nop dword [rax]	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001518	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400151c	            0x31ff	                            xor edi, edi	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400151e	        0x488b5308	                mov rdx, qword [rbx + 8]	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001522	          0x4889c6	                            mov rsi, rax	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001525	          0xff5008	                    call qword [rax + 8]	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001528	          0x4885c0	                           test rax, rax	      1770	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x400152b	          0x4989c4	                            mov r12, rax	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400152e	     0xf84d6f9ffff	                            je 0x4000f0a	      1770	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001534	          0x488b03	                    mov rax, qword [rbx]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001537	          0x4c89e2	                            mov rdx, r12	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x400153a	          0x4889de	                            mov rsi, rbx	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x400153d	        0x49890424	                    mov qword [r12], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001541	        0x488b4308	                mov rax, qword [rbx + 8]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001545	      0x4989442408	                mov qword [r12 + 8], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400154a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400154e	      0x4989442410	             mov qword [r12 + 0x10], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001553	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001557	      0x4989442418	             mov qword [r12 + 0x18], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400155c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001560	      0x49895c2428	             mov qword [r12 + 0x28], rbx	      1774	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001565	    0x41c644241807	                mov byte [r12 + 0x18], 7	      1773	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400156b	      0x4989442420	             mov qword [r12 + 0x20], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001570	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4001575	      0x4989442430	             mov qword [r12 + 0x30], rax	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x400157a	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x400157e	      0xe800000000	                          call 0x4001583	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x4001583	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001586	          0xf6c408	                              test ah, 8	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001589	     0xf856dffffff	                           jne 0x40014fc	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x400158f	              0x90	                                     nop	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001590	        0x498b5650	            mov rdx, qword [r14 + 0x50] 	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001594	        0x498b7708	                mov rsi, qword [r15 + 8]	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001598	        0x48397208	                cmp qword [rdx + 8], rsi	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x400159c	     0xf84c0070000	                            je 0x4001d62	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x40015a2	        0x4c896528	            mov qword [rbp + 0x28], r12 	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x40015a6	      0xe9e5f9ffff	                           jmp 0x4000f90	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x40015ab	       0xf1f440000	                   nop dword [rax + rax]	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x40015b0	        0x4080fe05	                              cmp sil, 5	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40015b4	            0x740f	                            je 0x40015c5	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40015b6	      0xbe50060000	                          mov esi, 0x650	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40015bb	      0xbf00000000	                              mov edi, 0	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40015c0	      0xe800000000	                          call 0x40015c5	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x40015c5	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015c9	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015ce	      0xb905000000	                              mov ecx, 5	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015d3	          0x4c89fa	                            mov rdx, r15	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015d6	          0x4889de	                            mov rsi, rbx	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015d9	          0x4c89f7	                            mov rdi, r14	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015dc	          0xff5010	                 call qword [rax + 0x10]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015df	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x40015e4	        0x48394330	            cmp qword [rbx + 0x30], rax 	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x40015e8	     0xf8302ffffff	                           jae 0x40014f0	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x40015ee	        0x48894330	             mov qword [rbx + 0x30], rax	      1623	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x40015f2	          0x4889c7	                            mov rdi, rax	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x40015f5	      0xe800000000	                          call 0x40015fa	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x40015fa	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x40015fe	          0x83f804	                              cmp eax, 4	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001601	      0xb904000000	                              mov ecx, 4	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001606	           0xf47c1	                          cmova eax, ecx	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001609	    0x4981fd000000	                              cmp r13, 0	      1636	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001610	            0x8902	                    mov dword [rdx], eax	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001612	     0xf84ad080000	                            je 0x4001ec5	      1636	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001618	    0x4d3bbdf00000	            cmp r15, qword [r13 + 0xf0] 	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x400161f	     0xf849a060000	                            je 0x4001cbf	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001625	        0x498b7500	                    mov rsi, qword [r13]	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001629	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x400162e	          0x4c89ff	                            mov rdi, r15	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001631	      0xe800000000	                          call 0x4001636	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x4001636	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x400163b	        0x48894208	                mov qword [rdx + 8], rax	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x400163f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001643	        0x488b4008	                mov rax, qword [rax + 8]	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001647	        0x83482001	                or dword [rax + 0x20], 1	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x400164b	      0xe9a0feffff	                           jmp 0x40014f0	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x4001650	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001654	          0x4885f6	                           test rsi, rsi	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001657	     0xf84cbfdffff	                            je 0x4001428	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400165d	      0x41f6474620	           test byte [r15 + 0x46], 0x20 	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001662	     0xf85c0fdffff	                           jne 0x4001428	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001668	      0x4889442440	             mov qword [rsp + 0x40], rax	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400166d	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001671	          0x4531c9	                            xor r9d, r9d	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001674	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001679	      0x4489542430	            mov dword [rsp + 0x30], r10d	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400167e	          0x4531c0	                            xor r8d, r8d	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001681	        0x488b5308	                mov rdx, qword [rbx + 8]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001685	          0x4c89f9	                            mov rcx, r15	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001688	          0x4c89f7	                            mov rdi, r14	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400168b	          0xff5028	                 call qword [rax + 0x28]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400168e	    0x48c743300000	               mov qword [rbx + 0x30], 0	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001696	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400169b	      0x4c8b5c2438	            mov r11, qword [rsp + 0x38] 	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x40016a0	      0x4c63542430	         movsxd r10, dword [rsp + 0x30] 	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x40016a5	      0xe97efdffff	                           jmp 0x4001428	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x40016aa	    0x660f1f440000	                    nop word [rax + rax]	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x40016b0	      0x41f6460102	                  test byte [r14 + 1], 2	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016b5	            0x7511	                           jne 0x40016c8	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016b7	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016bc	            0x7513	                           jne 0x40016d1	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016be	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016c2	        0x483b5830	            cmp rbx, qword [rax + 0x30] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016c6	            0x7409	                            je 0x40016d1	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016c8	          0x83e103	                              and ecx, 3	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016cb	     0xf8447feffff	                            je 0x4001518	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016d1	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016d5	        0x4080fe07	                              cmp sil, 7	      1328	linker.c	FUNCTION_20	WHILE_1
0x40016d9	          0x4889da	                            mov rdx, rbx	      1328	linker.c	FUNCTION_20	WHILE_1
0x40016dc	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40016e0	            0x7514	                           jne 0x40016f6	      1328	linker.c	FUNCTION_20	WHILE_1
0x40016e2	    0x660f1f440000	                    nop word [rax + rax]	      1328	linker.c	FUNCTION_20	WHILE_1
0x40016e8	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1329	linker.c	FUNCTION_20	WHILE_1
0x40016ec	         0xfb67218	           movzx esi, byte [rdx + 0x18] 	      1328	linker.c	FUNCTION_20	WHILE_1
0x40016f0	        0x4080fe07	                              cmp sil, 7	      1328	linker.c	FUNCTION_20	WHILE_1
0x40016f4	            0x74f2	                            je 0x40016e8	      1328	linker.c	FUNCTION_20	WHILE_1
0x40016f6	        0x4080fe05	                              cmp sil, 5	      1330	linker.c	FUNCTION_20	SWITCH_1
0x40016fa	     0xf873e020000	                            ja 0x400193e	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001700	    0xff24f5000000	                       jmp qword [rsi*8]	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001707	    0x660f1f840000	                    nop word [rax + rax]	      1330	linker.c	FUNCTION_20	SWITCH_1
0x4001710	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001714	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001719	          0x4d89e8	                             mov r8, r13	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400171c	          0x4c89f9	                            mov rcx, r15	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400171f	      0xba2b020000	                          mov edx, 0x22b	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001724	          0x4889de	                            mov rsi, rbx	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001727	          0x4c89f7	                            mov rdi, r14	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400172a	          0xff5018	                 call qword [rax + 0x18]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400172d	      0xe9befdffff	                           jmp 0x40014f0	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001732	    0x660f1f440000	                    nop word [rax + rax]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001738	        0x4080fe05	                              cmp sil, 5	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x400173c	            0x740f	                            je 0x400174d	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x400173e	      0xbecd050000	                          mov esi, 0x5cd	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001743	      0xbf00000000	                              mov edi, 0	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001748	      0xe800000000	                          call 0x400174d	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x400174d	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001751	          0x4531c0	                            xor r8d, r8d	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001754	      0xb903000000	                              mov ecx, 3	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001759	          0x4c89fa	                            mov rdx, r15	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400175c	          0x4889de	                            mov rsi, rbx	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400175f	          0x4c89f7	                            mov rdi, r14	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001762	          0xff5010	                 call qword [rax + 0x10]	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001765	      0xb803000000	                              mov eax, 3	      1499	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400176a	          0x884318	               mov byte [rbx + 0x18], al	      1499	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400176d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001772	        0x4c896b28	             mov qword [rbx + 0x28], r13	      1500	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001776	        0x806319f3	             and byte [rbx + 0x19], 0xf3	      1503	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400177a	        0x48894330	             mov qword [rbx + 0x30], rax	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400177e	      0xe96dfdffff	                           jmp 0x40014f0	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001783	       0xf1f440000	                   nop dword [rax + rax]	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001788	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400178c	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001791	      0xb905000000	                              mov ecx, 5	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001796	          0x4c89fa	                            mov rdx, r15	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001799	          0x4889de	                            mov rsi, rbx	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400179c	          0x4c89f7	                            mov rdi, r14	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400179f	          0xff5010	                 call qword [rax + 0x10]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017a2	      0xe949fdffff	                           jmp 0x40014f0	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017a7	    0x660f1f840000	                    nop word [rax + rax]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017b0	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x40017b5	     0xf8535fdffff	                           jne 0x40014f0	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x40017bb	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x40017bf	        0x483b5830	            cmp rbx, qword [rax + 0x30] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x40017c3	     0xf8427fdffff	                            je 0x40014f0	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x40017c9	        0x48895b20	             mov qword [rbx + 0x20], rbx	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x40017cd	      0xe91efdffff	                           jmp 0x40014f0	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x40017d2	    0x660f1f440000	                    nop word [rax + rax]	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x40017d8	          0x4084f6	                           test sil, sil	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x40017db	     0xf8490040000	                            je 0x4001c71	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x40017e1	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40017e5	        0xc6431805	                mov byte [rbx + 0x18], 5	      1559	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017e9	      0xbe10000000	                           mov esi, 0x10	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40017ee	      0xe800000000	                          call 0x40017f3	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x40017f3	          0x4885c0	                           test rax, rax	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x40017f6	        0x48894328	             mov qword [rbx + 0x28], rax	      1560	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017fa	     0xf840af7ffff	                            je 0x4000f0a	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x4001800	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1566	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001805	        0x48894330	             mov qword [rbx + 0x30], rax	      1566	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001809	          0x4889c7	                            mov rdi, rax	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x400180c	      0xe800000000	                          call 0x4001811	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x4001811	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001815	          0x83f804	                              cmp eax, 4	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001818	      0xb904000000	                              mov ecx, 4	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400181d	           0xf47c1	                          cmova eax, ecx	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001820	    0x4981fd000000	                              cmp r13, 0	      1589	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x4001827	            0x8902	                    mov dword [rdx], eax	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001829	     0xf8455060000	                            je 0x4001e84	      1589	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x400182f	    0x4d3bbdf00000	            cmp r15, qword [r13 + 0xf0] 	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001836	     0xf847a040000	                            je 0x4001cb6	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x400183c	        0x498b7500	                    mov rsi, qword [r13]	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001840	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001845	          0x4c89ff	                            mov rdi, r15	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001848	      0xe800000000	                          call 0x400184d	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x400184d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001852	        0x48894208	                mov qword [rdx + 8], rax	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x4001856	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x400185a	        0x488b4008	                mov rax, qword [rax + 8]	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x400185e	        0x83482001	                or dword [rax + 0x20], 1	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x4001862	        0x806319f3	             and byte [rbx + 0x19], 0xf3	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001866	      0xe985fcffff	                           jmp 0x40014f0	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400186b	       0xf1f440000	                   nop dword [rax + rax]	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001870	          0x83fa04	                              cmp edx, 4	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001873	      0xb804000000	                              mov eax, 4	      1497	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001878	     0xf84ecfeffff	                            je 0x400176a	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x400187e	      0xe9e2feffff	                           jmp 0x4001765	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001883	       0xf1f440000	                   nop dword [rax + rax]	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001888	        0xc6431802	                mov byte [rbx + 0x18], 2	      1478	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400188c	        0x4c897b28	             mov qword [rbx + 0x28], r15	      1479	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001890	      0xe95bfcffff	                           jmp 0x40014f0	      1479	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001895	           0xf1f00	                         nop dword [rax]	      1479	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001898	      0x48837b2000	               cmp qword [rbx + 0x20], 0	       669	linker.c	FUNCTION_7	CALL_1
0x400189d	        0x4c897b28	             mov qword [rbx + 0x28], r15	      1472	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40018a1	        0xc6431801	                mov byte [rbx + 0x18], 1	      1471	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40018a5	        0x4d8b6e28	            mov r13, qword [r14 + 0x28] 	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x40018a9	            0x740f	                            je 0x40018ba	       669	linker.c	FUNCTION_7	CALL_1
0x40018ab	      0xbe9d020000	                          mov esi, 0x29d	       669	linker.c	FUNCTION_7	CALL_1
0x40018b0	      0xbf00000000	                              mov edi, 0	       669	linker.c	FUNCTION_7	CALL_1
0x40018b5	      0xe800000000	                          call 0x40018ba	       669	linker.c	FUNCTION_7	CALL_1
0x40018ba	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       670	linker.c	FUNCTION_7	IF_1
0x40018be	          0x4885c0	                           test rax, rax	       670	linker.c	FUNCTION_7	IF_1
0x40018c1	            0x7404	                            je 0x40018c7	       670	linker.c	FUNCTION_7	IF_1
0x40018c3	        0x48895820	             mov qword [rax + 0x20], rbx	       671	linker.c	FUNCTION_7	IF_1
0x40018c7	      0x49837d2800	               cmp qword [r13 + 0x28], 0	       672	linker.c	FUNCTION_7	IF_2
0x40018cc	     0xf84f6030000	                            je 0x4001cc8	       672	linker.c	FUNCTION_7	IF_2
0x40018d2	        0x49895d30	             mov qword [r13 + 0x30], rbx	       674	linker.c	FUNCTION_7
0x40018d6	      0xe915fcffff	                           jmp 0x40014f0	       674	linker.c	FUNCTION_7
0x40018db	       0xf1f440000	                   nop dword [rax + rax]	       674	linker.c	FUNCTION_7
0x40018e0	      0xba00000000	                              mov edx, 0	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018e5	      0xbeb7050000	                          mov esi, 0x5b7	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018ea	      0xbf00000000	                              mov edi, 0	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018ef	      0xe800000000	                          call 0x40018f4	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40018f4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x40018f9	      0x4889442420	             mov qword [rsp + 0x20], rax	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x40018fe	      0xe91ff8ffff	                           jmp 0x4001122	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001903	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1341	linker.c	FUNCTION_20	SWITCH_1
0x4001907	        0x488b5208	                mov rdx, qword [rdx + 8]	      1341	linker.c	FUNCTION_20	SWITCH_1
0x400190b	    0x488b8af00000	            mov rcx, qword [rdx + 0xf0] 	      1341	linker.c	FUNCTION_20	SWITCH_1
0x4001912	        0x488b5308	                mov rdx, qword [rbx + 8]	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001916	          0x4531c9	                            xor r9d, r9d	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001919	          0x4531c0	                            xor r8d, r8d	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x400191c	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001921	          0x4c89f7	                            mov rdi, r14	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001924	            0xffd0	                                call rax	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001926	      0xe9c5fbffff	                           jmp 0x40014f0	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x400192b	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1339	linker.c	FUNCTION_20	SWITCH_1
0x400192f	    0x488b8af00000	            mov rcx, qword [rdx + 0xf0] 	      1339	linker.c	FUNCTION_20	SWITCH_1
0x4001936	            0xebda	                           jmp 0x4001912	      1339	linker.c	FUNCTION_20	SWITCH_1
0x4001938	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      1336	linker.c	FUNCTION_20	SWITCH_1
0x400193c	            0xebd4	                           jmp 0x4001912	      1336	linker.c	FUNCTION_20	SWITCH_1
0x400193e	            0x31c9	                            xor ecx, ecx	      1333	linker.c	FUNCTION_20	SWITCH_1
0x4001940	            0xebd0	                           jmp 0x4001912	      1333	linker.c	FUNCTION_20	SWITCH_1
0x4001942	    0x660f1f440000	                    nop word [rax + rax]	      1333	linker.c	FUNCTION_20	SWITCH_1
0x4001948	        0xc6431806	                mov byte [rbx + 0x18], 6	      1706	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400194c	        0x4c895b28	             mov qword [rbx + 0x28], r11	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001950	      0xe99bfbffff	                           jmp 0x40014f0	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001955	           0xf1f00	                         nop dword [rax]	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001958	    0x418b86a80000	            mov eax, dword [r14 + 0xa8] 	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x400195f	            0x85c0	                           test eax, eax	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4001961	     0xf84d9f8ffff	                            je 0x4001240	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4001967	          0x488b03	                    mov rax, qword [rbx]	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x400196a	      0xbf00000000	                              mov edi, 0	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x400196f	      0xb906000000	                              mov ecx, 6	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4001974	          0x4889c6	                            mov rsi, rax	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4001977	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4001979	     0xf85c1f8ffff	                           jne 0x4001240	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x400197f	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4001983	        0x488d7006	                      lea rsi, [rax + 6]	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4001987	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x400198a	     0xf84b0f8ffff	                            je 0x4001240	       498	linker.c	FUNCTION_3	IF_1
0x4001990	          0x4885f6	                           test rsi, rsi	       498	linker.c	FUNCTION_3	IF_1
0x4001993	     0xf84a7f8ffff	                            je 0x4001240	       498	linker.c	FUNCTION_3	IF_1
0x4001999	            0x31c9	                            xor ecx, ecx	       501	linker.c	FUNCTION_3
0x400199b	            0x31d2	                            xor edx, edx	       501	linker.c	FUNCTION_3
0x400199d	      0xe800000000	                          call 0x40019a2	       501	linker.c	FUNCTION_3
0x40019a2	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x40019a5	     0xf8495f8ffff	                            je 0x4001240	       504	linker.c	FUNCTION_3	IF_2
0x40019ab	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019af	          0x8d4afa	                      lea ecx, [rdx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019b2	          0x80f901	                               cmp cl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019b5	     0xf8765f8ffff	                            ja 0x4001220	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019bb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019bf	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019c3	          0x8d4afa	                      lea ecx, [rdx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019c6	          0x80f901	                               cmp cl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019c9	            0x76f0	                           jbe 0x40019bb	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019cb	      0xe950f8ffff	                           jmp 0x4001220	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40019d0	        0x488b4308	                mov rax, qword [rbx + 8]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x40019d4	          0x4c39e0	                            cmp rax, r12	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x40019d7	      0x4889442420	             mov qword [rsp + 0x20], rax	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x40019dc	            0x7430	                            je 0x4001a0e	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x40019de	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x40019e3	          0x4889c6	                            mov rsi, rax	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x40019e6	      0xe800000000	                          call 0x40019eb	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x40019eb	          0x4885c0	                           test rax, rax	       974	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13
0x40019ee	      0x4889442418	             mov qword [rsp + 0x18], rax	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x40019f3	     0xf8467020000	                            je 0x4001c60	       974	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13
0x40019f9	      0xbe01000000	                              mov esi, 1	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x40019fe	          0x4889c7	                            mov rdi, rax	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4001a01	      0xe800000000	                          call 0x4001a06	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4001a06	            0x85c0	                           test eax, eax	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4001a08	     0xf8452020000	                            je 0x4001c60	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4001a0e	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001a12	        0x488b4030	            mov rax, qword [rax + 0x30] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001a16	      0x4889442430	             mov qword [rsp + 0x30], rax	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001a1b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001a20	    0x488b88b00000	            mov rcx, qword [rax + 0xb0] 	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001a27	      0x4889442460	             mov qword [rsp + 0x60], rax	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001a2c	          0x4885c9	                           test rcx, rcx	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001a2f	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001a34	          0x4989cf	                            mov r15, rcx	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001a37	     0xf84d5040000	                            je 0x4001f12	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4001a3d	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1033	linker.c	FUNCTION_18	CALL_3
0x4001a43	        0x498d2cc7	                  lea rbp, [r15 + rax*8]	      1033	linker.c	FUNCTION_18	CALL_3
0x4001a47	          0x4c39fd	                            cmp rbp, r15	      1034	linker.c	FUNCTION_18	FOR_1
0x4001a4a	     0xf8650050000	                           jbe 0x4001fa0	      1034	linker.c	FUNCTION_18	FOR_1
0x4001a50	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      1034	linker.c	FUNCTION_18	FOR_1
0x4001a55	      0x44896c2438	            mov dword [rsp + 0x38], r13d	      1034	linker.c	FUNCTION_18	FOR_1
0x4001a5a	    0x660f1f440000	                    nop word [rax + rax]	      1034	linker.c	FUNCTION_18	FOR_1
0x4001a60	          0x498b1f	                    mov rbx, qword [r15]	      1038	linker.c	FUNCTION_18	FOR_1
0x4001a63	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4001a67	        0xf6402110	           test byte [rax + 0x21], 0x10 	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4001a6b	            0x7509	                           jne 0x4001a76	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4001a6d	    0xf74318822000	        test dword [rbx + 0x18], 0x2082 	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4001a74	            0x747a	                            je 0x4001af0	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4001a76	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4001a7a	        0x488b7308	                mov rsi, qword [rbx + 8]	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4001a7e	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x4001a81	            0x746d	                            je 0x4001af0	       498	linker.c	FUNCTION_3	IF_1
0x4001a83	          0x4885f6	                           test rsi, rsi	       498	linker.c	FUNCTION_3	IF_1
0x4001a86	            0x7468	                            je 0x4001af0	       498	linker.c	FUNCTION_3	IF_1
0x4001a88	            0x31c9	                            xor ecx, ecx	       501	linker.c	FUNCTION_3
0x4001a8a	            0x31d2	                            xor edx, edx	       501	linker.c	FUNCTION_3
0x4001a8c	      0xe800000000	                          call 0x4001a91	       501	linker.c	FUNCTION_3
0x4001a91	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x4001a94	          0x4989c4	                            mov r12, rax	       501	linker.c	FUNCTION_3
0x4001a97	            0x7457	                            je 0x4001af0	       504	linker.c	FUNCTION_3	IF_2
0x4001a99	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001a9d	          0x8d50fa	                      lea edx, [rax - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001aa0	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001aa3	            0x7716	                            ja 0x4001abb	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001aa5	           0xf1f00	                         nop dword [rax]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001aa8	      0x4d8b642428	            mov r12, qword [r12 + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001aad	    0x410fb6442418	           movzx eax, byte [r12 + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001ab3	          0x8d50fa	                      lea edx, [rax - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001ab6	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001ab9	            0x76ed	                           jbe 0x4001aa8	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4001abb	            0x89c2	                            mov edx, eax	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4001abd	          0x83e2fb	                     and edx, 0xfffffffb	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4001ac0	          0x80fa01	                               cmp dl, 1	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4001ac3	            0x752b	                           jne 0x4001af0	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4001ac5	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4001ac9	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4001acd	     0xf84e6020000	                            je 0x4001db9	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x4001ad3	            0x3c01	                               cmp al, 1	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x4001ad5	            0x7441	                            je 0x4001b18	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x4001ad7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4001adb	        0x48034228	             add rax, qword [rdx + 0x28]	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4001adf	      0x493b442430	            cmp rax, qword [r12 + 0x30] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4001ae4	            0x760a	                           jbe 0x4001af0	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4001ae6	      0x4989442430	             mov qword [r12 + 0x30], rax	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4001aeb	       0xf1f440000	                   nop dword [rax + rax]	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4001af0	        0x4983c708	                              add r15, 8	      1034	linker.c	FUNCTION_18	FOR_1
0x4001af4	          0x4c39fd	                            cmp rbp, r15	      1034	linker.c	FUNCTION_18	FOR_1
0x4001af7	     0xf8763ffffff	                            ja 0x4001a60	      1034	linker.c	FUNCTION_18	FOR_1
0x4001afd	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1034	linker.c	FUNCTION_18	FOR_1
0x4001b02	      0x448b6c2438	           mov r13d, dword [rsp + 0x38] 	      1034	linker.c	FUNCTION_18	FOR_1
0x4001b07	            0x31ed	                            xor ebp, ebp	      1034	linker.c	FUNCTION_18	FOR_1
0x4001b09	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001b0e	      0xe92df7ffff	                           jmp 0x4001240	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001b13	       0xf1f440000	                   nop dword [rax + rax]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001b18	      0x4d8b6c2428	            mov r13, qword [r12 + 0x28] 	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4001b1d	          0x4d85ed	                           test r13, r13	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4001b20	     0xf8493020000	                            je 0x4001db9	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x4001b26	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4001b2a	    0x41c644241805	                mov byte [r12 + 0x18], 5	      1092	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b30	      0xbe10000000	                           mov esi, 0x10	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4001b35	      0xe800000000	                          call 0x4001b3a	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4001b3a	          0x4885c0	                           test rax, rax	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4001b3d	      0x4989442428	             mov qword [r12 + 0x28], rax	      1093	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b42	     0xf8418010000	                            je 0x4001c60	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4001b48	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4001b4c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4001b50	        0x48037828	             add rdi, qword [rax + 0x28]	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4001b54	      0x49897c2430	             mov qword [r12 + 0x30], rdi	      1100	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b59	      0xe800000000	                          call 0x4001b5e	      1102	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_12
0x4001b5e	      0x498b4c2428	            mov rcx, qword [r12 + 0x28] 	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b63	          0x83f804	                              cmp eax, 4	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b66	      0xbe04000000	                              mov esi, 4	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b6b	           0xf47c6	                          cmova eax, esi	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b6e	            0x8901	                    mov dword [rcx], eax	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b70	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4001b74	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4001b79	    0x483d00000000	                              cmp rax, 0	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4001b7f	     0xf844f030000	                            je 0x4001ed4	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4001b85	          0x488b30	                    mov rsi, qword [rax]	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4001b88	          0x4c89ef	                            mov rdi, r13	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4001b8b	      0xe800000000	                          call 0x4001b90	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4001b90	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4001b95	        0x48894108	                mov qword [rcx + 8], rax	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4001b99	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001b9e	        0x488b4008	                mov rax, qword [rax + 8]	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001ba2	        0x83482001	                or dword [rax + 0x20], 1	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001ba6	      0xe945ffffff	                           jmp 0x4001af0	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001bab	       0xf1f440000	                   nop dword [rax + rax]	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4001bb0	      0x49837b2000	               cmp qword [r11 + 0x20], 0	       669	linker.c	FUNCTION_7	CALL_1
0x4001bb5	        0x4d897b28	             mov qword [r11 + 0x28], r15	      1692	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001bb9	      0x41c6431801	                mov byte [r11 + 0x18], 1	      1691	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x4001bbe	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x4001bc2	            0x742d	                            je 0x4001bf1	       669	linker.c	FUNCTION_7	CALL_1
0x4001bc4	      0xbe9d020000	                          mov esi, 0x29d	       669	linker.c	FUNCTION_7	CALL_1
0x4001bc9	      0xbf00000000	                              mov edi, 0	       669	linker.c	FUNCTION_7	CALL_1
0x4001bce	      0x4c895c2440	             mov qword [rsp + 0x40], r11	       669	linker.c	FUNCTION_7	CALL_1
0x4001bd3	      0x4489542438	            mov dword [rsp + 0x38], r10d	       669	linker.c	FUNCTION_7	CALL_1
0x4001bd8	      0x4889442430	             mov qword [rsp + 0x30], rax	       669	linker.c	FUNCTION_7	CALL_1
0x4001bdd	      0xe800000000	                          call 0x4001be2	       669	linker.c	FUNCTION_7	CALL_1
0x4001be2	      0x4c63542438	         movsxd r10, dword [rsp + 0x38] 	       669	linker.c	FUNCTION_7	CALL_1
0x4001be7	      0x4c8b5c2440	            mov r11, qword [rsp + 0x40] 	       669	linker.c	FUNCTION_7	CALL_1
0x4001bec	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       669	linker.c	FUNCTION_7	CALL_1
0x4001bf1	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       670	linker.c	FUNCTION_7	IF_1
0x4001bf5	          0x4885d2	                           test rdx, rdx	       670	linker.c	FUNCTION_7	IF_1
0x4001bf8	            0x7404	                            je 0x4001bfe	       670	linker.c	FUNCTION_7	IF_1
0x4001bfa	        0x4c895a20	             mov qword [rdx + 0x20], r11	       671	linker.c	FUNCTION_7	IF_1
0x4001bfe	      0x4883782800	               cmp qword [rax + 0x28], 0	       672	linker.c	FUNCTION_7	IF_2
0x4001c03	     0xf8450010000	                            je 0x4001d59	       672	linker.c	FUNCTION_7	IF_2
0x4001c09	        0x4c895830	             mov qword [rax + 0x30], r11	       674	linker.c	FUNCTION_7
0x4001c0d	      0xe990f8ffff	                           jmp 0x40014a2	       674	linker.c	FUNCTION_7
0x4001c12	    0x660f1f440000	                    nop word [rax + rax]	       674	linker.c	FUNCTION_7
0x4001c18	        0x493b5b28	            cmp rbx, qword [r11 + 0x28] 	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001c1c	     0xf8580f8ffff	                           jne 0x40014a2	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001c22	      0xba05000000	                              mov edx, 5	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001c27	      0xbe00000000	                              mov esi, 0	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001c2c	      0xbf00000000	                              mov edi, 0	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001c31	      0xe800000000	                          call 0x4001c36	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001c36	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001c3b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001c40	          0x4889c7	                            mov rdi, rax	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001c43	          0x4c89fe	                            mov rsi, r15	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001c46	            0x31c0	                            xor eax, eax	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001c48	      0xe800000000	                          call 0x4001c4d	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x4001c4d	      0xbf05000000	                              mov edi, 5	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x4001c52	      0xe800000000	                          call 0x4001c57	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x4001c57	      0xe9aef2ffff	                           jmp 0x4000f0a	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x4001c5c	         0xf1f4000	                         nop dword [rax]	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x4001c60	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1012	linker.c	FUNCTION_17	CALL_15
0x4001c65	      0xe800000000	                          call 0x4001c6a	      1012	linker.c	FUNCTION_17	CALL_15
0x4001c6a	            0x31c0	                            xor eax, eax	      1013	linker.c	FUNCTION_17
0x4001c6c	      0xe99bf2ffff	                           jmp 0x4000f0c	      1013	linker.c	FUNCTION_17
0x4001c71	      0x48837b2000	               cmp qword [rbx + 0x20], 0	       669	linker.c	FUNCTION_7	CALL_1
0x4001c76	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001c7a	            0x7419	                            je 0x4001c95	       669	linker.c	FUNCTION_7	CALL_1
0x4001c7c	      0xbe9d020000	                          mov esi, 0x29d	       669	linker.c	FUNCTION_7	CALL_1
0x4001c81	      0xbf00000000	                              mov edi, 0	       669	linker.c	FUNCTION_7	CALL_1
0x4001c86	      0x4889442418	             mov qword [rsp + 0x18], rax	       669	linker.c	FUNCTION_7	CALL_1
0x4001c8b	      0xe800000000	                          call 0x4001c90	       669	linker.c	FUNCTION_7	CALL_1
0x4001c90	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       669	linker.c	FUNCTION_7	CALL_1
0x4001c95	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       670	linker.c	FUNCTION_7	IF_1
0x4001c99	          0x4885d2	                           test rdx, rdx	       670	linker.c	FUNCTION_7	IF_1
0x4001c9c	            0x7404	                            je 0x4001ca2	       670	linker.c	FUNCTION_7	IF_1
0x4001c9e	        0x48895a20	             mov qword [rdx + 0x20], rbx	       671	linker.c	FUNCTION_7	IF_1
0x4001ca2	      0x4883782800	               cmp qword [rax + 0x28], 0	       672	linker.c	FUNCTION_7	IF_2
0x4001ca7	     0xf8442020000	                            je 0x4001eef	       672	linker.c	FUNCTION_7	IF_2
0x4001cad	        0x48895830	             mov qword [rax + 0x30], rbx	       674	linker.c	FUNCTION_7
0x4001cb1	      0xe92bfbffff	                           jmp 0x40017e1	       674	linker.c	FUNCTION_7
0x4001cb6	        0x4c896a08	                mov qword [rdx + 8], r13	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001cba	      0xe9a3fbffff	                           jmp 0x4001862	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x4001cbf	        0x4c896a08	                mov qword [rdx + 8], r13	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x4001cc3	      0xe928f8ffff	                           jmp 0x40014f0	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x4001cc8	        0x49895d28	             mov qword [r13 + 0x28], rbx	       673	linker.c	FUNCTION_7	IF_2
0x4001ccc	      0xe901fcffff	                           jmp 0x40018d2	       673	linker.c	FUNCTION_7	IF_2
0x4001cd1	        0x488b4708	                mov rax, qword [rdi + 8]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4001cd5	    0xff90f0010000	                call qword [rax + 0x1f0]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4001cdb	          0x4885c0	                           test rax, rax	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x4001cde	          0x4889c3	                            mov rbx, rax	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4001ce1	     0xf8823f2ffff	                            js 0x4000f0a	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x4001ce7	          0x4889c6	                            mov rsi, rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4001cea	          0x4c89ff	                            mov rdi, r15	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4001ced	      0xe800000000	                          call 0x4001cf2	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4001cf2	          0x4885c0	                           test rax, rax	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4001cf5	    0x498987b00000	             mov qword [r15 + 0xb0], rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4001cfc	            0x7509	                           jne 0x4001d07	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4001cfe	          0x4885db	                           test rbx, rbx	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4001d01	     0xf8503f2ffff	                           jne 0x4000f0a	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4001d07	        0x498b5708	                mov rdx, qword [r15 + 8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001d0b	          0x4889c6	                            mov rsi, rax	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001d0e	          0x4c89ff	                            mov rdi, r15	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001d11	    0xff92f8010000	                call qword [rdx + 0x1f8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001d17	          0x4885c0	                           test rax, rax	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4001d1a	          0x4889c2	                            mov rdx, rax	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001d1d	     0xf88e7f1ffff	                            js 0x4000f0a	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4001d23	    0x498bb7b00000	            mov rsi, qword [r15 + 0xb0] 	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4001d2a	            0x89c0	                            mov eax, eax	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001d2c	    0x418997b80000	             mov dword [r15 + 0xb8], edx	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001d33	      0x4889742408	                mov qword [rsp + 8], rsi	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001d38	          0x4889f1	                            mov rcx, rsi	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001d3b	      0xe90ef2ffff	                           jmp 0x4000f4e	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001d40	      0x488b442408	                mov rax, qword [rsp + 8]	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001d45	        0x4883c008	                              add rax, 8	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001d49	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001d4e	     0xf878df2ffff	                            ja 0x4000fe1	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001d54	      0xe944f5ffff	                           jmp 0x400129d	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001d59	        0x4c895828	             mov qword [rax + 0x28], r11	       673	linker.c	FUNCTION_7	IF_2
0x4001d5d	      0xe9a7feffff	                           jmp 0x4001c09	       673	linker.c	FUNCTION_7	IF_2
0x4001d62	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001d67	          0x4885d2	                           test rdx, rdx	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001d6a	     0xf8414020000	                            je 0x4001f84	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001d70	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001d74	    0x4881f9000000	                              cmp rcx, 0	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001d7b	     0xf8421f8ffff	                            je 0x40015a2	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001d81	        0xf6412110	           test byte [rcx + 0x21], 0x10 	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001d85	     0xf847d010000	                            je 0x4001f08	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001d8b	    0x48817a200000	               cmp qword [rdx + 0x20], 0	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001d93	     0xf8509f8ffff	                           jne 0x40015a2	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001d99	      0x49896c2440	             mov qword [r12 + 0x40], rbp	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001d9e	          0x80cc02	                                or ah, 2	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001da1	          0x894518	            mov dword [rbp + 0x18], eax 	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001da4	      0xe9f9f7ffff	                           jmp 0x40015a2	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001da9	          0x4531db	                          xor r11d, r11d	      1378	linker.c	FUNCTION_21
0x4001dac	    0xc74424300300	               mov dword [rsp + 0x30], 3	      1407	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001db4	      0xe926f5ffff	                           jmp 0x40012df	      1407	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001db9	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001dbd	          0x4989dc	                            mov r12, rbx	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001dc0	      0x448b6c2438	           mov r13d, dword [rsp + 0x38] 	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001dc5	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001dca	      0x498b542408	                mov rdx, qword [r12 + 8]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001dcf	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001dd4	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001dd9	          0x4c89f7	                            mov rdi, r14	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001ddc	            0xff10	                        call qword [rax]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001dde	            0x85c0	                           test eax, eax	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001de0	     0xf847afeffff	                            je 0x4001c60	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x4001de6	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4001deb	          0x4c89f6	                            mov rsi, r14	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4001dee	        0x488b4708	                mov rax, qword [rdi + 8]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4001df2	    0xff90c0020000	                call qword [rax + 0x2c0]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4001df8	            0x85c0	                           test eax, eax	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001dfa	     0xf8460feffff	                            je 0x4001c60	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001e00	          0x4489e8	                           mov eax, r13d	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001e03	          0x4489ea	                           mov edx, r13d	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001e06	      0x488b742408	                mov rsi, qword [rsp + 8]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001e0b	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001e10	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001e15	            0xeb1d	                           jmp 0x4001e34	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001e17	    0x660f1f840000	                    nop word [rax + rax]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4001e20	          0x8d50ff	                      lea edx, [rax - 1]	       998	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4001e23	          0x4889d1	                            mov rcx, rdx	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001e26	          0x4889d0	                            mov rax, rdx	       998	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4001e29	        0x48c1e104	                              shl rcx, 4	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001e2d	      0x4c3b440f08	          cmp r8, qword [rdi + rcx + 8] 	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001e32	            0x7508	                           jne 0x4001e3c	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x4001e34	            0x85c0	                           test eax, eax	       996	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x4001e36	        0xc6041601	                 mov byte [rsi + rdx], 1	       995	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x4001e3a	            0x75e4	                           jne 0x4001e20	       996	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x4001e3c	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4001e40	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001e45	      0xbd01000000	                              mov ebp, 1	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001e4a	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001e4f	        0x483b7030	            cmp rsi, qword [rax + 0x30] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001e53	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001e57	           0xf45c5	                         cmovne eax, ebp	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001e5a	        0x89442440	             mov dword [rsp + 0x40], eax	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001e5e	      0xe9ddf3ffff	                           jmp 0x4001240	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001e63	          0xf6c710	                           test bh, 0x10	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001e66	     0xf8583f2ffff	                           jne 0x40010ef	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001e6c	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e70	      0x4889442410	             mov qword [rsp + 0x10], rax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001e75	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001e7a	      0x4889442420	             mov qword [rsp + 0x20], rax	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001e7f	      0xe99cf1ffff	                           jmp 0x4001020	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001e84	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001e89	      0xbe00000000	                              mov esi, 0	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001e8e	      0xe9b2f9ffff	                           jmp 0x4001845	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x4001e93	            0x89d8	                            mov eax, ebx	      1404	linker.c	FUNCTION_21	ELSE_3	IF_5	ELSE_4
0x4001e95	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001e9a	          0x4531c9	                            xor r9d, r9d	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001e9d	          0xc1e807	                              shr eax, 7	      1404	linker.c	FUNCTION_21	ELSE_3	IF_5	ELSE_4
0x4001ea0	          0x4531c0	                            xor r8d, r8d	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001ea3	      0xb901000000	                              mov ecx, 1	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001ea8	          0x83e001	                              and eax, 1	      1404	linker.c	FUNCTION_21	ELSE_3	IF_5	ELSE_4
0x4001eab	          0x4c89f6	                            mov rsi, r14	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001eae	          0x4c89ff	                            mov rdi, r15	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001eb1	        0x89442430	             mov dword [rsp + 0x30], eax	      1404	linker.c	FUNCTION_21	ELSE_3	IF_5	ELSE_4
0x4001eb5	      0xe800000000	                          call 0x4001eba	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001eba	          0x4531db	                          xor r11d, r11d	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001ebd	          0x4989c4	                            mov r12, rax	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001ec0	      0xe951f4ffff	                           jmp 0x4001316	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001ec5	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001eca	      0xbe00000000	                              mov esi, 0	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001ecf	      0xe95af7ffff	                           jmp 0x400162e	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001ed4	      0xbe00000000	                              mov esi, 0	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001ed9	          0x4c89ef	                            mov rdi, r13	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001edc	      0xe800000000	                          call 0x4001ee1	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001ee1	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001ee6	        0x48894108	                mov qword [rcx + 8], rax	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001eea	      0xe9aafcffff	                           jmp 0x4001b99	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4001eef	        0x48895828	             mov qword [rax + 0x28], rbx	       673	linker.c	FUNCTION_7	IF_2
0x4001ef3	      0xe9b5fdffff	                           jmp 0x4001cad	       673	linker.c	FUNCTION_7	IF_2
0x4001ef8	          0x4531db	                          xor r11d, r11d	      1378	linker.c	FUNCTION_21
0x4001efb	    0xc74424300200	               mov dword [rsp + 0x30], 2	      1419	linker.c	FUNCTION_21	ELSE_7
0x4001f03	      0xe9d7f3ffff	                           jmp 0x40012df	      1419	linker.c	FUNCTION_21	ELSE_7
0x4001f08	      0x49896c2440	             mov qword [r12 + 0x40], rbp	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001f0d	      0xe990f6ffff	                           jmp 0x40015a2	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001f12	          0x4989c7	                            mov r15, rax	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4001f15	        0x488b4008	                mov rax, qword [rax + 8]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4001f19	          0x4c89ff	                            mov rdi, r15	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4001f1c	    0xff90f0010000	                call qword [rax + 0x1f0]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4001f22	          0x4885c0	                           test rax, rax	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x4001f25	          0x4889c5	                            mov rbp, rax	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4001f28	     0xf8832fdffff	                            js 0x4001c60	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x4001f2e	          0x4889c6	                            mov rsi, rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4001f31	          0x4c89ff	                            mov rdi, r15	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4001f34	      0xe800000000	                          call 0x4001f39	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4001f39	          0x4885c0	                           test rax, rax	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4001f3c	    0x498987b00000	             mov qword [r15 + 0xb0], rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4001f43	            0x7509	                           jne 0x4001f4e	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4001f45	          0x4885ed	                           test rbp, rbp	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4001f48	     0xf8512fdffff	                           jne 0x4001c60	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4001f4e	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001f53	          0x4889c6	                            mov rsi, rax	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001f56	        0x498b5708	                mov rdx, qword [r15 + 8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001f5a	          0x4c89ff	                            mov rdi, r15	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001f5d	    0xff92f8010000	                call qword [rdx + 0x1f8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4001f63	          0x4885c0	                           test rax, rax	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4001f66	     0xf88f4fcffff	                            js 0x4001c60	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4001f6c	    0x418987b80000	             mov dword [r15 + 0xb8], eax	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001f73	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001f78	    0x4c8bb8b00000	            mov r15, qword [rax + 0xb0] 	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001f7f	      0xe9b9faffff	                           jmp 0x4001a3d	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4001f84	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001f88	      0x49896c2440	             mov qword [r12 + 0x40], rbp	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001f8d	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001f91	     0xf8507feffff	                           jne 0x4001d9e	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001f97	      0xe906f6ffff	                           jmp 0x40015a2	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001f9c	         0xf1f4000	                         nop dword [rax]	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001fa0	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001fa5	            0x31ed	                            xor ebp, ebp	      1034	linker.c	FUNCTION_18	FOR_1
0x4001fa7	      0xe994f2ffff	                           jmp 0x4001240	      1034	linker.c	FUNCTION_18	FOR_1
0x4001fac	      0xe800000000	                          call 0x4001fb1	       859	linker.c	FUNCTION_15
_bfd_generic_section_already_linked	functions,0:WHILE,0:DO,0:ELSE,0:IF,4:SWITCH,0:FOR,0:CALL,6	192
0x4004630	            0x4156	                                push r14	      2907	linker.c	FUNCTION_41
0x4004632	            0x4155	                                push r13	      2907	linker.c	FUNCTION_41
0x4004634	            0x4154	                                push r12	      2907	linker.c	FUNCTION_41
0x4004636	              0x55	                                push rbp	      2907	linker.c	FUNCTION_41
0x4004637	            0x31ed	                            xor ebp, ebp	      2913	linker.c	FUNCTION_41	IF_1
0x4004639	              0x53	                                push rbx	      2907	linker.c	FUNCTION_41
0x400463a	        0x4883ec20	                           sub rsp, 0x20	      2907	linker.c	FUNCTION_41
0x400463e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2907	linker.c	FUNCTION_41
0x4004647	      0x4889442418	             mov qword [rsp + 0x18], rax	      2907	linker.c	FUNCTION_41
0x400464c	            0x31c0	                            xor eax, eax	      2907	linker.c	FUNCTION_41
0x400464e	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      2912	linker.c	FUNCTION_41	IF_1
0x4004651	      0xa900000200	                       test eax, 0x20000	      2912	linker.c	FUNCTION_41	IF_1
0x4004656	            0x7407	                            je 0x400465f	      2912	linker.c	FUNCTION_41	IF_1
0x4004658	      0xa900000002	                     test eax, 0x2000000	      2916	linker.c	FUNCTION_41	IF_2
0x400465d	            0x7429	                            je 0x4004688	      2916	linker.c	FUNCTION_41	IF_2
0x400465f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2948	linker.c	FUNCTION_41
0x4004664	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2948	linker.c	FUNCTION_41
0x400466d	            0x89e8	                            mov eax, ebp	      2948	linker.c	FUNCTION_41
0x400466f	     0xf8595020000	                           jne 0x400490a	      2948	linker.c	FUNCTION_41
0x4004675	        0x4883c420	                           add rsp, 0x20	      2948	linker.c	FUNCTION_41
0x4004679	              0x5b	                                 pop rbx	      2948	linker.c	FUNCTION_41
0x400467a	              0x5d	                                 pop rbp	      2948	linker.c	FUNCTION_41
0x400467b	            0x415c	                                 pop r12	      2948	linker.c	FUNCTION_41
0x400467d	            0x415d	                                 pop r13	      2948	linker.c	FUNCTION_41
0x400467f	            0x415e	                                 pop r14	      2948	linker.c	FUNCTION_41
0x4004681	              0xc3	                                     ret	      2948	linker.c	FUNCTION_41
0x4004682	    0x660f1f440000	                    nop word [rax + rax]	      2948	linker.c	FUNCTION_41
0x4004688	          0x4889f3	                            mov rbx, rsi	      2948	linker.c	FUNCTION_41
0x400468b	          0x488b36	                    mov rsi, qword [rsi]	      2753	linker.c	FUNCTION_35
0x400468e	            0x31c9	                            xor ecx, ecx	      2753	linker.c	FUNCTION_35
0x4004690	          0x4989d4	                            mov r12, rdx	      2753	linker.c	FUNCTION_35
0x4004693	      0xbf00000000	                              mov edi, 0	      2753	linker.c	FUNCTION_35
0x4004698	      0xba01000000	                              mov edx, 1	      2753	linker.c	FUNCTION_35
0x400469d	      0xe800000000	                          call 0x40046a2	      2753	linker.c	FUNCTION_35
0x40046a2	        0x4c8b6818	            mov r13, qword [rax + 0x18] 	      2936	linker.c	FUNCTION_41
0x40046a6	          0x4989c6	                            mov r14, rax	      2753	linker.c	FUNCTION_35
0x40046a9	          0x4d85ed	                           test r13, r13	      2937	linker.c	FUNCTION_41	IF_3
0x40046ac	            0x747a	                            je 0x4004728	      2937	linker.c	FUNCTION_41	IF_3
0x40046ae	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046b1	      0x2500000c00	                        and eax, 0xc0000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046b6	      0x3d00000400	                        cmp eax, 0x40000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046bb	     0xf845f010000	                            je 0x4004820	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046c1	     0xf8689000000	                           jbe 0x4004750	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046c7	      0x3d00000800	                        cmp eax, 0x80000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046cc	     0xf84ee000000	                            je 0x40047c0	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046d2	      0x3d00000c00	                        cmp eax, 0xc0000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046d7	     0xf85a3000000	                           jne 0x4004780	      2817	linker.c	FUNCTION_40	SWITCH_1
0x40046dd	        0x498b4508	                mov rax, qword [r13 + 8]	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x40046e1	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x40046e8	        0xf6424620	           test byte [rdx + 0x46], 0x20 	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x40046ec	            0x751a	                           jne 0x4004708	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x40046ee	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x40046f2	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x40046f6	     0xf85e7000000	                           jne 0x40047e3	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x40046fc	          0x4885d2	                           test rdx, rdx	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x40046ff	     0xf8537010000	                           jne 0x400483c	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4004705	           0xf1f00	                         nop dword [rax]	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4004708	    0x48c743680000	               mov qword [rbx + 0x68], 0	      2896	linker.c	FUNCTION_40
0x4004710	    0x488983c80000	             mov qword [rbx + 0xc8], rax	      2897	linker.c	FUNCTION_40
0x4004717	      0xbd01000000	                              mov ebp, 1	      2898	linker.c	FUNCTION_40
0x400471c	      0xe93effffff	                           jmp 0x400465f	      2898	linker.c	FUNCTION_40
0x4004721	     0xf1f80000000	                         nop dword [rax]	      2898	linker.c	FUNCTION_40
0x4004728	      0xbe10000000	                           mov esi, 0x10	      2767	linker.c	FUNCTION_36
0x400472d	      0xbf00000000	                              mov edi, 0	      2767	linker.c	FUNCTION_36
0x4004732	      0xe800000000	                          call 0x4004737	      2767	linker.c	FUNCTION_36
0x4004737	          0x4885c0	                           test rax, rax	      2769	linker.c	FUNCTION_36	IF_1
0x400473a	            0x7458	                            je 0x4004794	      2769	linker.c	FUNCTION_36	IF_1
0x400473c	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      2772	linker.c	FUNCTION_36
0x4004740	        0x48895808	                mov qword [rax + 8], rbx	      2771	linker.c	FUNCTION_36
0x4004744	          0x488910	                    mov qword [rax], rdx	      2772	linker.c	FUNCTION_36
0x4004747	        0x49894618	             mov qword [r14 + 0x18], rax	      2773	linker.c	FUNCTION_36
0x400474b	      0xe90fffffff	                           jmp 0x400465f	      2773	linker.c	FUNCTION_36
0x4004750	            0x85c0	                           test eax, eax	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4004752	            0x752c	                           jne 0x4004780	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4004754	    0x488b83f00000	            mov rax, qword [rbx + 0xf0] 	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x400475b	        0xf6404840	           test byte [rax + 0x48], 0x40 	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x400475f	        0x498b4508	                mov rax, qword [r13 + 8]	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4004763	            0x74a3	                            je 0x4004708	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4004765	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x400476c	        0xf6424620	           test byte [rdx + 0x46], 0x20 	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4004770	            0x7496	                            je 0x4004708	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4004772	        0x49895d08	                mov qword [r13 + 8], rbx	      2832	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4004776	      0xe9e4feffff	                           jmp 0x400465f	      2832	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x400477b	       0xf1f440000	                   nop dword [rax + rax]	      2832	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4004780	      0xba00000000	                              mov edx, 0	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4004785	      0xbe040b0000	                          mov esi, 0xb04	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x400478a	      0xbf00000000	                              mov edi, 0	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x400478f	      0xe800000000	                          call 0x4004794	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4004794	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2946	linker.c	FUNCTION_41	CALL_6
0x4004799	      0xba05000000	                              mov edx, 5	      2946	linker.c	FUNCTION_41	CALL_6
0x400479e	      0xbe00000000	                              mov esi, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x40047a3	      0xbf00000000	                              mov edi, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x40047a8	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2946	linker.c	FUNCTION_41	CALL_6
0x40047ac	      0xe800000000	                          call 0x40047b1	      2946	linker.c	FUNCTION_41	CALL_6
0x40047b1	          0x4889c7	                            mov rdi, rax	      2946	linker.c	FUNCTION_41	CALL_6
0x40047b4	            0x31c0	                            xor eax, eax	      2946	linker.c	FUNCTION_41	CALL_6
0x40047b6	            0xffd3	                                call rbx	      2946	linker.c	FUNCTION_41	CALL_6
0x40047b8	      0xe9a2feffff	                           jmp 0x400465f	      2946	linker.c	FUNCTION_41	CALL_6
0x40047bd	           0xf1f00	                         nop dword [rax]	      2946	linker.c	FUNCTION_41	CALL_6
0x40047c0	        0x498b4508	                mov rax, qword [r13 + 8]	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x40047c4	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x40047cb	        0xf6424620	           test byte [rdx + 0x46], 0x20 	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x40047cf	     0xf8533ffffff	                           jne 0x4004708	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x40047d5	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x40047d9	        0x48397b38	            cmp qword [rbx + 0x38], rdi 	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x40047dd	     0xf8425ffffff	                            je 0x4004708	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x40047e3	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x40047e8	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x40047ef	      0xba05000000	                              mov edx, 5	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x40047f4	      0xbe00000000	                              mov esi, 0	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x40047f9	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x40047fd	      0xbf00000000	                              mov edi, 0	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4004802	      0xe800000000	                          call 0x4004807	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4004807	          0x4889da	                            mov rdx, rbx	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x400480a	          0x4889c7	                            mov rdi, rax	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x400480d	          0x4c89e6	                            mov rsi, r12	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4004810	            0x31c0	                            xor eax, eax	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4004812	            0xffd5	                                call rbp	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4004814	        0x498b4508	                mov rax, qword [r13 + 8]	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4004818	      0xe9ebfeffff	                           jmp 0x4004708	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x400481d	           0xf1f00	                         nop dword [rax]	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4004820	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4004825	      0xba05000000	                              mov edx, 5	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x400482a	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x4004831	      0xbe00000000	                              mov esi, 0	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x4004836	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x400483a	            0xebc1	                           jmp 0x40047fd	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x400483c	    0x488bbbf00000	            mov rdi, qword [rbx + 0xf0] 	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4004843	      0x488d542408	                      lea rdx, [rsp + 8]	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4004848	          0x4889de	                            mov rsi, rbx	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x400484b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2864	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4004854	      0xe800000000	                          call 0x4004859	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4004859	            0x85c0	                           test eax, eax	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x400485b	            0x755b	                           jne 0x40048b8	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x400485d	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4004862	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4004869	      0xba05000000	                              mov edx, 5	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x400486e	      0xbe00000000	                              mov esi, 0	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4004873	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4004877	      0xbf00000000	                              mov edi, 0	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x400487c	      0xe800000000	                          call 0x4004881	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4004881	          0x4889da	                            mov rdx, rbx	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004884	          0x4889c7	                            mov rdi, rax	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004887	          0x4c89e6	                            mov rsi, r12	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400488a	            0x31c0	                            xor eax, eax	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400488c	            0xffd5	                                call rbp	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400488e	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004893	          0x4885ed	                           test rbp, rbp	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4004896	            0x7408	                            je 0x40048a0	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4004898	          0x4889ef	                            mov rdi, rbp	      2884	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_17
0x400489b	      0xe800000000	                          call 0x40048a0	      2884	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_17
0x40048a0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x40048a5	          0x4885ff	                           test rdi, rdi	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x40048a8	            0x7405	                            je 0x40048af	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x40048aa	      0xe800000000	                          call 0x40048af	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x40048af	        0x498b4508	                mov rax, qword [r13 + 8]	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x40048b3	      0xe950feffff	                           jmp 0x4004708	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x40048b8	        0x498b7508	                mov rsi, qword [r13 + 8]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x40048bc	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x40048c1	    0x488bbef00000	            mov rdi, qword [rsi + 0xf0] 	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x40048c8	      0xe800000000	                          call 0x40048cd	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x40048cd	            0x85c0	                           test eax, eax	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x40048cf	            0x743e	                            je 0x400490f	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x40048d1	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x40048d6	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x40048da	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x40048df	          0x4889ef	                            mov rdi, rbp	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x40048e2	      0xe800000000	                          call 0x40048e7	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x40048e7	            0x85c0	                           test eax, eax	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x40048e9	            0x74a8	                            je 0x4004893	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x40048eb	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x40048f0	      0xba05000000	                              mov edx, 5	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x40048f5	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x40048fc	      0xbe00000000	                              mov esi, 0	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4004901	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4004905	      0xe96dffffff	                           jmp 0x4004877	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x400490a	      0xe800000000	                          call 0x400490f	      2948	linker.c	FUNCTION_41
0x400490f	        0x498b6d08	                mov rbp, qword [r13 + 8]	      2876	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8
0x4004913	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4004918	      0xba05000000	                              mov edx, 5	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x400491d	      0xbe00000000	                              mov esi, 0	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4004922	      0xbf00000000	                              mov edi, 0	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4004927	    0x4c8bb5f00000	            mov r14, qword [rbp + 0xf0] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x400492e	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4004932	      0xe800000000	                          call 0x4004937	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4004937	          0x4889ea	                            mov rdx, rbp	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x400493a	          0x4889c7	                            mov rdi, rax	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x400493d	            0x31c0	                            xor eax, eax	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x400493f	          0x4c89f6	                            mov rsi, r14	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4004942	          0x41ffd4	                                call r12	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4004945	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x400494a	      0xe944ffffff	                           jmp 0x4004893	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
_bfd_generic_link_hash_newfunc	functions,0:WHILE,0:DO,0:ELSE,0:IF,3:SWITCH,0:FOR,0:CALL,2	32
0x40000d0	              0x53	                                push rbx	       722	linker.c	ELSE_2	FUNCTION_9
0x40000d1	          0x4889f3	                            mov rbx, rsi	       722	linker.c	ELSE_2	FUNCTION_9
0x40000d4	        0x4883ec10	                           sub rsp, 0x10	       722	linker.c	ELSE_2	FUNCTION_9
0x40000d8	          0x4885ff	                           test rdi, rdi	       725	linker.c	ELSE_2	FUNCTION_9	IF_1
0x40000db	            0x7453	                            je 0x4000130	       725	linker.c	ELSE_2	FUNCTION_9	IF_1
0x40000dd	          0x4889de	                            mov rsi, rbx	       442	linker.c	FUNCTION_1	CALL_2
0x40000e0	      0xe800000000	                          call 0x40000e5	       442	linker.c	FUNCTION_1	CALL_2
0x40000e5	          0x4889c2	                            mov rdx, rax	       442	linker.c	FUNCTION_1	CALL_2
0x40000e8	            0x31c0	                            xor eax, eax	       443	linker.c	FUNCTION_1	IF_3
0x40000ea	          0x4885d2	                           test rdx, rdx	       443	linker.c	FUNCTION_1	IF_3
0x40000ed	            0x7432	                            je 0x4000121	       443	linker.c	FUNCTION_1	IF_3
0x40000ef	    0x48c742180000	               mov qword [rdx + 0x18], 0	        90	string3.h	FUNCTION_69	CALL_6
0x40000f7	    0x48c742200000	               mov qword [rdx + 0x20], 0	        90	string3.h	FUNCTION_69	CALL_6
0x40000ff	          0x4889d0	                            mov rax, rdx	       742	linker.c	ELSE_2	FUNCTION_9	IF_3
0x4000102	    0x48c742280000	               mov qword [rdx + 0x28], 0	        90	string3.h	FUNCTION_69	CALL_6
0x400010a	    0x48c742300000	               mov qword [rdx + 0x30], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4000112	    0xc74238000000	               mov dword [rdx + 0x38], 0	       741	linker.c	ELSE_2	FUNCTION_9	IF_3
0x4000119	    0x48c742400000	               mov qword [rdx + 0x40], 0	       742	linker.c	ELSE_2	FUNCTION_9	IF_3
0x4000121	        0x4883c410	                           add rsp, 0x10	       746	linker.c	ELSE_2	FUNCTION_9
0x4000125	              0x5b	                                 pop rbx	       746	linker.c	ELSE_2	FUNCTION_9
0x4000126	              0xc3	                                     ret	       746	linker.c	ELSE_2	FUNCTION_9
0x4000127	    0x660f1f840000	                    nop word [rax + rax]	       746	linker.c	ELSE_2	FUNCTION_9
0x4000130	          0x4889df	                            mov rdi, rbx	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000133	      0xbe48000000	                           mov esi, 0x48	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000138	      0x4889542408	                mov qword [rsp + 8], rdx	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x400013d	      0xe800000000	                          call 0x4000142	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000142	          0x4885c0	                           test rax, rax	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x4000145	          0x4889c7	                            mov rdi, rax	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x4000148	      0x488b542408	                mov rdx, qword [rsp + 8]	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x400014d	            0x758e	                           jne 0x40000dd	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x400014f	            0x31c0	                            xor eax, eax	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x4000151	            0xebce	                           jmp 0x4000121	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
_bfd_nolink_bfd_link_hash_table_create	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	1
0x4004ff0	      0xe900000000	                           jmp 0x4004ff5	      3459	linker.c	FUNCTION_59	CALL_1
already_linked_newfunc	functions,0:WHILE,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0:CALL,1	9
0x4000040	        0x4883ec08	                              sub rsp, 8	      2781	linker.c	FUNCTION_37
0x4000044	          0x4889f7	                            mov rdi, rsi	      2781	linker.c	FUNCTION_37
0x4000047	      0xbe20000000	                           mov esi, 0x20	      2782	linker.c	FUNCTION_37
0x400004c	      0xe800000000	                          call 0x4000051	      2782	linker.c	FUNCTION_37
0x4000051	          0x4885c0	                           test rax, rax	      2786	linker.c	FUNCTION_37	IF_1
0x4000054	            0x7408	                            je 0x400005e	      2786	linker.c	FUNCTION_37	IF_1
0x4000056	    0x48c740180000	               mov qword [rax + 0x18], 0	      2789	linker.c	FUNCTION_37
0x400005e	        0x4883c408	                              add rsp, 8	      2792	linker.c	FUNCTION_37
0x4000062	              0xc3	                                     ret	      2792	linker.c	FUNCTION_37
_bfd_nolink_bfd_define_start_stop	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	2
0x4005050	    0x488bbaf00000	            mov rdi, qword [rdx + 0xf0] 	      3504	linker.c	FUNCTION_65	CALL_1
0x4005057	      0xe900000000	                   jmp section_end..data	      3504	linker.c	FUNCTION_65	CALL_1
_bfd_generic_link_hash_table_free	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,3	25
0x4000070	              0x55	                                push rbp	       771	linker.c	FUNCTION_11
0x4000071	              0x53	                                push rbx	       771	linker.c	FUNCTION_11
0x4000072	          0x4889fb	                            mov rbx, rdi	       771	linker.c	FUNCTION_11
0x4000075	        0x4883ec08	                              sub rsp, 8	       771	linker.c	FUNCTION_11
0x4000079	        0xf6474804	               test byte [rdi + 0x48], 4	       774	linker.c	FUNCTION_11	CALL_1
0x400007d	            0x7439	                            je 0x40000b8	       774	linker.c	FUNCTION_11	CALL_1
0x400007f	    0x488baff00000	            mov rbp, qword [rdi + 0xf0] 	       774	linker.c	FUNCTION_11	CALL_1
0x4000086	          0x4885ed	                           test rbp, rbp	       774	linker.c	FUNCTION_11	CALL_1
0x4000089	            0x742d	                            je 0x40000b8	       774	linker.c	FUNCTION_11	CALL_1
0x400008b	          0x4889ef	                            mov rdi, rbp	       776	linker.c	FUNCTION_11	CALL_2
0x400008e	      0xe800000000	                          call 0x4000093	       776	linker.c	FUNCTION_11	CALL_2
0x4000093	          0x4889ef	                            mov rdi, rbp	       777	linker.c	FUNCTION_11	CALL_3
0x4000096	      0xe800000000	                          call 0x400009b	       777	linker.c	FUNCTION_11	CALL_3
0x400009b	    0x48c783f00000	               mov qword [rbx + 0xf0], 0	       778	linker.c	FUNCTION_11
0x40000a6	        0x806348fb	             and byte [rbx + 0x48], 0xfb	       779	linker.c	FUNCTION_11
0x40000aa	        0x4883c408	                              add rsp, 8	       780	linker.c	FUNCTION_11
0x40000ae	              0x5b	                                 pop rbx	       780	linker.c	FUNCTION_11
0x40000af	              0x5d	                                 pop rbp	       780	linker.c	FUNCTION_11
0x40000b0	              0xc3	                                     ret	       780	linker.c	FUNCTION_11
0x40000b1	     0xf1f80000000	                         nop dword [rax]	       780	linker.c	FUNCTION_11
0x40000b8	      0xbe06030000	                          mov esi, 0x306	       774	linker.c	FUNCTION_11	CALL_1
0x40000bd	      0xbf00000000	                              mov edi, 0	       774	linker.c	FUNCTION_11	CALL_1
0x40000c2	      0xe800000000	                          call 0x40000c7	       774	linker.c	FUNCTION_11	CALL_1
0x40000c7	    0x488babf00000	            mov rbp, qword [rbx + 0xf0] 	       774	linker.c	FUNCTION_11	CALL_1
0x40000ce	            0xebbb	                           jmp 0x400008b	       774	linker.c	FUNCTION_11	CALL_1
_bfd_generic_final_link	functions,0:WHILE,0:DO,0:ELSE,1:IF,14:SWITCH,1:FOR,7:CALL,17	430
0x4003b90	            0x4157	                                push r15	      1807	linker.c	FUNCTION_22
0x4003b92	            0x4156	                                push r14	      1807	linker.c	FUNCTION_22
0x4003b94	            0x4155	                                push r13	      1807	linker.c	FUNCTION_22
0x4003b96	            0x4154	                                push r12	      1807	linker.c	FUNCTION_22
0x4003b98	          0x4989f4	                            mov r12, rsi	      1807	linker.c	FUNCTION_22
0x4003b9b	              0x55	                                push rbp	      1807	linker.c	FUNCTION_22
0x4003b9c	              0x53	                                push rbx	      1807	linker.c	FUNCTION_22
0x4003b9d	          0x4889fd	                            mov rbp, rdi	      1807	linker.c	FUNCTION_22
0x4003ba0	        0x4883ec48	                           sub rsp, 0x48	      1807	linker.c	FUNCTION_22
0x4003ba4	    0x488b8f900000	            mov rcx, qword [rdi + 0x90] 	      1819	linker.c	FUNCTION_22	FOR_1
0x4003bab	    0x48c787b00000	               mov qword [rdi + 0xb0], 0	      1814	linker.c	FUNCTION_22	CALL_1
0x4003bb6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1807	linker.c	FUNCTION_22
0x4003bbf	      0x4889442438	             mov qword [rsp + 0x38], rax	      1807	linker.c	FUNCTION_22
0x4003bc4	            0x31c0	                            xor eax, eax	      1807	linker.c	FUNCTION_22
0x4003bc6	    0xc787b8000000	               mov dword [rdi + 0xb8], 0	      1815	linker.c	FUNCTION_22	CALL_2
0x4003bd0	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1816	linker.c	FUNCTION_22
0x4003bd9	          0x4885c9	                           test rcx, rcx	      1819	linker.c	FUNCTION_22	FOR_1
0x4003bdc	            0x7439	                            je 0x4003c17	      1819	linker.c	FUNCTION_22	FOR_1
0x4003bde	            0x6690	                                     nop	      1819	linker.c	FUNCTION_22	FOR_1
0x4003be0	    0x488b81080100	           mov rax, qword [rcx + 0x108] 	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003be7	          0x4885c0	                           test rax, rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003bea	            0x750c	                           jne 0x4003bf8	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003bec	            0xeb20	                           jmp 0x4003c0e	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003bee	            0x6690	                                     nop	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003bf0	          0x488b00	                    mov rax, qword [rax]	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003bf3	          0x4885c0	                           test rax, rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003bf6	            0x7416	                            je 0x4003c0e	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003bf8	        0x83780801	                  cmp dword [rax + 8], 1	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4003bfc	            0x75f2	                           jne 0x4003bf0	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4003bfe	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4003c02	        0x804a2402	                 or byte [rdx + 0x24], 2	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4003c06	          0x488b00	                    mov rax, qword [rax]	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003c09	          0x4885c0	                           test rax, rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003c0c	            0x75ea	                           jne 0x4003bf8	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4003c0e	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      1819	linker.c	FUNCTION_22	FOR_1
0x4003c12	          0x4885c9	                           test rcx, rcx	      1819	linker.c	FUNCTION_22	FOR_1
0x4003c15	            0x75c9	                           jne 0x4003be0	      1819	linker.c	FUNCTION_22	FOR_1
0x4003c17	      0x498b5c2460	            mov rbx, qword [r12 + 0x60] 	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c1c	      0x4c8d6c2418	                   lea r13, [rsp + 0x18]	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c21	          0x4885db	                           test rbx, rbx	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c24	            0x7530	                           jne 0x4003c56	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c26	      0xe99a000000	                           jmp 0x4003cc5	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c2b	       0xf1f440000	                   nop dword [rax + rax]	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c30	      0x4c8d6c2418	                   lea r13, [rsp + 0x18]	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c35	          0x4c89e2	                            mov rdx, r12	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c38	          0x4889de	                            mov rsi, rbx	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c3b	          0x4889ef	                            mov rdi, rbp	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c3e	          0x4c89e9	                            mov rcx, r13	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c41	      0xe8bac8ffff	call sym._bfd_generic_link_output_symbols.part.4	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c46	            0x85c0	                           test eax, eax	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x4003c48	            0x7456	                            je 0x4003ca0	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x4003c4a	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c51	          0x4885db	                           test rbx, rbx	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c54	            0x746f	                            je 0x4003cc5	      1825	linker.c	FUNCTION_22	FOR_3
0x4003c56	    0x4883bbb00000	               cmp qword [rbx + 0xb0], 0	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4003c5e	            0x75d0	                           jne 0x4003c30	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4003c60	        0x488b4308	                mov rax, qword [rbx + 8]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4003c64	          0x4889df	                            mov rdi, rbx	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4003c67	    0xff90f0010000	                call qword [rax + 0x1f0]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4003c6d	          0x4885c0	                           test rax, rax	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x4003c70	          0x4989c5	                            mov r13, rax	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x4003c73	            0x782b	                            js 0x4003ca0	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x4003c75	          0x4889c6	                            mov rsi, rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4003c78	          0x4889df	                            mov rdi, rbx	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4003c7b	      0xe800000000	                          call 0x4003c80	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4003c80	          0x4885c0	                           test rax, rax	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4003c83	    0x488983b00000	             mov qword [rbx + 0xb0], rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x4003c8a	     0xf859f020000	                           jne 0x4003f2f	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4003c90	          0x4d85ed	                           test r13, r13	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4003c93	     0xf8496020000	                            je 0x4003f2f	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4003c99	     0xf1f80000000	                         nop dword [rax]	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x4003ca0	            0x31c0	                            xor eax, eax	      1827	linker.c	FUNCTION_22	FOR_3	IF_2
0x4003ca2	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1927	linker.c	FUNCTION_22
0x4003ca7	    0x644833342528	                xor rsi, qword fs:[0x28]	      1927	linker.c	FUNCTION_22
0x4003cb0	     0xf85d9050000	                           jne 0x400428f	      1927	linker.c	FUNCTION_22
0x4003cb6	        0x4883c448	                           add rsp, 0x48	      1927	linker.c	FUNCTION_22
0x4003cba	              0x5b	                                 pop rbx	      1927	linker.c	FUNCTION_22
0x4003cbb	              0x5d	                                 pop rbp	      1927	linker.c	FUNCTION_22
0x4003cbc	            0x415c	                                 pop r12	      1927	linker.c	FUNCTION_22
0x4003cbe	            0x415d	                                 pop r13	      1927	linker.c	FUNCTION_22
0x4003cc0	            0x415e	                                 pop r14	      1927	linker.c	FUNCTION_22
0x4003cc2	            0x415f	                                 pop r15	      1927	linker.c	FUNCTION_22
0x4003cc4	              0xc3	                                     ret	      1927	linker.c	FUNCTION_22
0x4003cc5	      0x4c896c2430	             mov qword [rsp + 0x30], r13	      1832	linker.c	FUNCTION_22
0x4003cca	      0x4d8b6c2428	            mov r13, qword [r12 + 0x28] 	      1833	linker.c	FUNCTION_22	CALL_5
0x4003ccf	          0x4531f6	                          xor r14d, r14d	       650	linker.c	FUNCTION_6	FOR_1
0x4003cd2	      0x4c89642420	             mov qword [rsp + 0x20], r12	      1830	linker.c	FUNCTION_22
0x4003cd7	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      1831	linker.c	FUNCTION_22
0x4003cdc	      0x410fb64524	           movzx eax, byte [r13 + 0x24] 	       649	linker.c	FUNCTION_6
0x4003ce1	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       650	linker.c	FUNCTION_6	FOR_1
0x4003ce5	          0x83c801	                               or eax, 1	       649	linker.c	FUNCTION_6
0x4003ce8	            0x85d2	                           test edx, edx	       650	linker.c	FUNCTION_6	FOR_1
0x4003cea	        0x41884524	               mov byte [r13 + 0x24], al	       649	linker.c	FUNCTION_6
0x4003cee	            0x7452	                            je 0x4003d42	       650	linker.c	FUNCTION_6	FOR_1
0x4003cf0	        0x498b4d00	                    mov rcx, qword [r13]	       654	linker.c	FUNCTION_6	FOR_1
0x4003cf4	          0x4489f0	                           mov eax, r14d	       654	linker.c	FUNCTION_6	FOR_1
0x4003cf7	        0x488b1cc1	            mov rbx, qword [rcx + rax*8]	       654	linker.c	FUNCTION_6	FOR_1
0x4003cfb	          0x4885db	                           test rbx, rbx	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4003cfe	            0x7522	                           jne 0x4003d22	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4003d00	      0xe99f030000	                           jmp 0x40040a4	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4003d05	           0xf1f00	                         nop dword [rax]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4003d08	      0x488d742420	                   lea rsi, [rsp + 0x20]	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d0d	      0xe800000000	                          call 0x4003d12	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d12	            0x85c0	                           test eax, eax	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d14	            0x7427	                            je 0x4003d3d	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d16	          0x488b1b	                    mov rbx, qword [rbx]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4003d19	          0x4885db	                           test rbx, rbx	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4003d1c	     0xf847e030000	                            je 0x40040a0	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4003d22	        0x807b1807	                cmp byte [rbx + 0x18], 7	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d26	          0x4889df	                            mov rdi, rbx	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d29	            0x75dd	                           jne 0x4003d08	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d2b	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d2f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d34	      0xe800000000	                          call 0x4003d39	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d39	            0x85c0	                           test eax, eax	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d3b	            0x75d9	                           jne 0x4003d16	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d3d	      0x410fb64524	           movzx eax, byte [r13 + 0x24] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4003d42	          0x83e0fe	                     and eax, 0xfffffffe	       660	linker.c	FUNCTION_6
0x4003d45	        0x41884524	               mov byte [r13 + 0x24], al	       660	linker.c	FUNCTION_6
0x4003d49	    0x8b95b8000000	            mov edx, dword [rbp + 0xb8] 	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x4003d4f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x4003d54	          0x4839c2	                            cmp rdx, rax	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x4003d57	     0xf8393010000	                           jae 0x4003ef0	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x4003d5d	    0x488b85b00000	            mov rax, qword [rbp + 0xb0] 	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x4003d64	    0x48c704d00000	              mov qword [rax + rdx*8], 0	      1951	linker.c	FUNCTION_23	CALL_6
0x4003d6c	      0x410fb60424	                   movzx eax, byte [r12]	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4003d71	          0x83e003	                              and eax, 3	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4003d74	            0x3c02	                               cmp al, 2	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4003d76	     0xf84af030000	                            je 0x400412b	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4003d7c	    0x4c8bad900000	            mov r13, qword [rbp + 0x90] 	      1903	linker.c	FUNCTION_22	FOR_6
0x4003d83	          0x4d85ed	                           test r13, r13	      1903	linker.c	FUNCTION_22	FOR_6
0x4003d86	     0xf8459010000	                            je 0x4003ee5	      1903	linker.c	FUNCTION_22	FOR_6
0x4003d8c	    0x498b9d080100	           mov rbx, qword [r13 + 0x108] 	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003d93	          0x4885db	                           test rbx, rbx	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003d96	            0x753f	                           jne 0x4003dd7	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003d98	      0xe93b010000	                           jmp 0x4003ed8	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003d9d	           0xf1f00	                         nop dword [rax]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003da0	          0x4889d9	                            mov rcx, rbx	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003da3	          0x4c89ea	                            mov rdx, r13	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003da6	          0x4c89e6	                            mov rsi, r12	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003da9	          0x4889ef	                            mov rdi, rbp	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003dac	     0xf82a6010000	                            jb 0x4003f58	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4003db2	          0x83e803	                              sub eax, 3	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4003db5	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4003db8	     0xf879a010000	                            ja 0x4003f58	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4003dbe	      0xe800000000	                          call 0x4003dc3	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4003dc3	            0x85c0	                           test eax, eax	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4003dc5	     0xf84d5feffff	                            je 0x4003ca0	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4003dcb	          0x488b1b	                    mov rbx, qword [rbx]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003dce	          0x4885db	                           test rbx, rbx	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003dd1	     0xf8401010000	                            je 0x4003ed8	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003dd7	          0x8b4308	                mov eax, dword [rbx + 8]	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4003dda	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4003ddd	            0x75c1	                           jne 0x4003da0	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4003ddf	      0x41f6452101	               test byte [r13 + 0x21], 1	      2532	linker.c	FUNCTION_31	CALL_1
0x4003de4	     0xf8437020000	                            je 0x4004021	      2532	linker.c	FUNCTION_31	CALL_1
0x4003dea	        0x4c8b7320	            mov r14, qword [rbx + 0x20] 	      2534	linker.c	FUNCTION_31
0x4003dee	      0x49837e3800	               cmp qword [r14 + 0x38], 0	      2536	linker.c	FUNCTION_31	IF_1
0x4003df3	            0x74d6	                            je 0x4003dcb	      2536	linker.c	FUNCTION_31	IF_1
0x4003df5	        0x4d396e68	            cmp qword [r14 + 0x68], r13 	      2539	linker.c	FUNCTION_31	CALL_2
0x4003df9	    0x498b86f00000	            mov rax, qword [r14 + 0xf0] 	      2535	linker.c	FUNCTION_31
0x4003e00	        0x48890424	                    mov qword [rsp], rax	      2535	linker.c	FUNCTION_31
0x4003e04	            0x740f	                            je 0x4003e15	      2539	linker.c	FUNCTION_31	CALL_2
0x4003e06	      0xbeeb090000	                          mov esi, 0x9eb	      2539	linker.c	FUNCTION_31	CALL_2
0x4003e0b	      0xbf00000000	                              mov edi, 0	      2539	linker.c	FUNCTION_31	CALL_2
0x4003e10	      0xe800000000	                          call 0x4003e15	      2539	linker.c	FUNCTION_31	CALL_2
0x4003e15	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2540	linker.c	FUNCTION_31	CALL_3
0x4003e19	        0x49394660	            cmp qword [r14 + 0x60], rax 	      2540	linker.c	FUNCTION_31	CALL_3
0x4003e1d	            0x740f	                            je 0x4003e2e	      2540	linker.c	FUNCTION_31	CALL_3
0x4003e1f	      0xbeec090000	                          mov esi, 0x9ec	      2540	linker.c	FUNCTION_31	CALL_3
0x4003e24	      0xbf00000000	                              mov edi, 0	      2540	linker.c	FUNCTION_31	CALL_3
0x4003e29	      0xe800000000	                          call 0x4003e2e	      2540	linker.c	FUNCTION_31	CALL_3
0x4003e2e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2541	linker.c	FUNCTION_31	CALL_4
0x4003e32	        0x49394638	            cmp qword [r14 + 0x38], rax 	      2541	linker.c	FUNCTION_31	CALL_4
0x4003e36	            0x740f	                            je 0x4003e47	      2541	linker.c	FUNCTION_31	CALL_4
0x4003e38	      0xbeed090000	                          mov esi, 0x9ed	      2541	linker.c	FUNCTION_31	CALL_4
0x4003e3d	      0xbf00000000	                              mov edi, 0	      2541	linker.c	FUNCTION_31	CALL_4
0x4003e42	      0xe800000000	                          call 0x4003e47	      2541	linker.c	FUNCTION_31	CALL_4
0x4003e47	      0x410fb60424	                   movzx eax, byte [r12]	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4003e4c	          0x83e003	                              and eax, 3	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4003e4f	            0x3c02	                               cmp al, 2	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4003e51	     0xf84de010000	                            je 0x4004035	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4003e57	        0x418b4520	            mov eax, dword [r13 + 0x20] 	      2613	linker.c	FUNCTION_31	IF_9
0x4003e5b	      0x2500001002	                      and eax, 0x2100000	      2613	linker.c	FUNCTION_31	IF_9
0x4003e60	      0x3d00000002	                      cmp eax, 0x2000000	      2613	linker.c	FUNCTION_31	IF_9
0x4003e65	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      2614	linker.c	FUNCTION_31	IF_9
0x4003e69	     0xf8501010000	                           jne 0x4003f70	      2613	linker.c	FUNCTION_31	IF_9
0x4003e6f	          0x4885c0	                           test rax, rax	      2614	linker.c	FUNCTION_31	IF_9
0x4003e72	     0xf84f8000000	                            je 0x4003f70	      2614	linker.c	FUNCTION_31	IF_9
0x4003e78	        0xf6454740	           test byte [rbp + 0x47], 0x40 	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4003e7c	     0xf8464020000	                            je 0x40040e6	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4003e82	    0x498b95b00000	            mov rdx, qword [r13 + 0xb0] 	      2623	linker.c	FUNCTION_31	IF_9
0x4003e89	          0x4885d2	                           test rdx, rdx	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4003e8c	     0xf84e1030000	                            je 0x4004273	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4003e92	        0x4d8b7e60	            mov r15, qword [r14 + 0x60] 	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003e96	          0x4d85ff	                           test r15, r15	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003e99	     0xf856c020000	                           jne 0x400410b	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4003e9f	          0x4889ef	                            mov rdi, rbp	      2645	linker.c	FUNCTION_31	CALL_34
0x4003ea2	        0x48891424	                    mov qword [rsp], rdx	      2645	linker.c	FUNCTION_31	CALL_34
0x4003ea6	      0xe800000000	                          call 0x4003eab	      2645	linker.c	FUNCTION_31	CALL_34
0x4003eab	            0x89c1	                            mov ecx, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ead	        0x4d8b4638	              mov r8, qword [r14 + 0x38]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003eb1	        0x488b1424	                    mov rdx, qword [rsp]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003eb5	        0x490fafcf	                           imul rcx, r15	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003eb9	          0x4c89ee	                            mov rsi, r13	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ebc	          0x4889ef	                            mov rdi, rbp	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ebf	      0xe800000000	                          call 0x4003ec4	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ec4	            0x85c0	                           test eax, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ec6	     0xf84d4fdffff	                            je 0x4003ca0	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ecc	          0x488b1b	                    mov rbx, qword [rbx]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003ecf	          0x4885db	                           test rbx, rbx	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003ed2	     0xf85fffeffff	                           jne 0x4003dd7	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4003ed8	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1903	linker.c	FUNCTION_22	FOR_6
0x4003edc	          0x4d85ed	                           test r13, r13	      1903	linker.c	FUNCTION_22	FOR_6
0x4003edf	     0xf85a7feffff	                           jne 0x4003d8c	      1903	linker.c	FUNCTION_22	FOR_6
0x4003ee5	      0xb801000000	                              mov eax, 1	      1926	linker.c	FUNCTION_22
0x4003eea	      0xe9b3fdffff	                           jmp 0x4003ca2	      1926	linker.c	FUNCTION_22
0x4003eef	              0x90	                                     nop	      1926	linker.c	FUNCTION_22
0x4003ef0	          0x4885c0	                           test rax, rax	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x4003ef3	     0xf85dd010000	                           jne 0x40040d6	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x4003ef9	      0xbee0030000	                          mov esi, 0x3e0	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x4003efe	      0xba7c000000	                           mov edx, 0x7c	      1940	linker.c	FUNCTION_23	IF_1	IF_2
0x4003f03	    0x488bbdb00000	            mov rdi, qword [rbp + 0xb0] 	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x4003f0a	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x4003f0f	      0xe800000000	                          call 0x4003f14	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x4003f14	          0x4885c0	                           test rax, rax	      1946	linker.c	FUNCTION_23	IF_1	IF_3
0x4003f17	     0xf8483fdffff	                            je 0x4003ca0	      1946	linker.c	FUNCTION_23	IF_1	IF_3
0x4003f1d	    0x488985b00000	            mov qword [rbp + 0xb0], rax 	      1948	linker.c	FUNCTION_23	IF_1	CALL_4
0x4003f24	    0x8b95b8000000	            mov edx, dword [rbp + 0xb8] 	      1948	linker.c	FUNCTION_23	IF_1	CALL_4
0x4003f2a	      0xe935feffff	                           jmp 0x4003d64	      1948	linker.c	FUNCTION_23	IF_1	CALL_4
0x4003f2f	        0x488b5308	                mov rdx, qword [rbx + 8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4003f33	          0x4889c6	                            mov rsi, rax	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4003f36	          0x4889df	                            mov rdi, rbx	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4003f39	    0xff92f8010000	                call qword [rdx + 0x1f8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x4003f3f	          0x4885c0	                           test rax, rax	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4003f42	     0xf8858fdffff	                            js 0x4003ca0	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x4003f48	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4003f4e	      0xe9ddfcffff	                           jmp 0x4003c30	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4003f53	       0xf1f440000	                   nop dword [rax + rax]	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x4003f58	      0xe800000000	                          call 0x4003f5d	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003f5d	            0x85c0	                           test eax, eax	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003f5f	     0xf8566feffff	                           jne 0x4003dcb	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003f65	      0xe936fdffff	                           jmp 0x4003ca0	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003f6a	    0x660f1f440000	                    nop word [rax + rax]	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x4003f70	        0x49394640	            cmp qword [r14 + 0x40], rax 	      2630	linker.c	FUNCTION_31	ELSE_3
0x4003f74	      0x490f434640	          cmovae rax, qword [r14 + 0x40]	      2630	linker.c	FUNCTION_31	ELSE_3
0x4003f79	          0x4889c7	                            mov rdi, rax	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4003f7c	          0x4989c7	                            mov r15, rax	      2630	linker.c	FUNCTION_31	ELSE_3
0x4003f7f	      0xe800000000	                          call 0x4003f84	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4003f84	          0x4885c0	                           test rax, rax	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003f87	          0x4989c2	                            mov r10, rax	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4003f8a	            0x7509	                           jne 0x4003f95	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003f8c	          0x4d85ff	                           test r15, r15	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003f8f	     0xf850bfdffff	                           jne 0x4003ca0	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4003f95	      0x410fb60424	                   movzx eax, byte [r12]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003f9a	          0x4c89d1	                            mov rcx, r10	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003f9d	          0x4889da	                            mov rdx, rbx	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fa0	          0x4c89e6	                            mov rsi, r12	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fa3	          0x4889ef	                            mov rdi, rbp	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fa6	          0x83e003	                              and eax, 3	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fa9	            0x3c02	                               cmp al, 2	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fab	        0x488b0424	                    mov rax, qword [rsp]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003faf	        0x4c891424	                    mov qword [rsp], r10	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fb3	        0x410f94c0	                                sete r8b	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fb7	        0x450fb6c0	                          movzx r8d, r8b	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fbb	    0x4c8b88b00000	              mov r9, qword [rax + 0xb0]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fc2	      0xe800000000	                          call 0x4003fc7	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4003fc7	          0x4885c0	                           test rax, rax	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003fca	      0x4889442408	                mov qword [rsp + 8], rax	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003fcf	        0x4c8b1424	                    mov r10, qword [rsp]	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003fd3	     0xf84e7000000	                            je 0x40040c0	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003fd9	        0x4d8b7e60	            mov r15, qword [r14 + 0x60] 	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4003fdd	          0x4889ef	                            mov rdi, rbp	      2645	linker.c	FUNCTION_31	CALL_34
0x4003fe0	      0xe800000000	                          call 0x4003fe5	      2645	linker.c	FUNCTION_31	CALL_34
0x4003fe5	            0x89c1	                            mov ecx, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003fe7	        0x4d8b4638	              mov r8, qword [r14 + 0x38]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003feb	      0x488b542408	                mov rdx, qword [rsp + 8]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ff0	        0x490fafcf	                           imul rcx, r15	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ff4	          0x4c89ee	                            mov rsi, r13	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ff7	          0x4889ef	                            mov rdi, rbp	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003ffa	      0xe800000000	                          call 0x4003fff	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4003fff	            0x85c0	                           test eax, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4004001	        0x4c8b1424	                    mov r10, qword [rsp]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4004005	     0xf84b5000000	                            je 0x40040c0	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x400400b	          0x4d85d2	                           test r10, r10	      2650	linker.c	FUNCTION_31	IF_15
0x400400e	     0xf84b7fdffff	                            je 0x4003dcb	      2650	linker.c	FUNCTION_31	IF_15
0x4004014	          0x4c89d7	                            mov rdi, r10	      2651	linker.c	FUNCTION_31	CALL_36
0x4004017	      0xe800000000	                          call 0x400401c	      2651	linker.c	FUNCTION_31	CALL_36
0x400401c	      0xe9aafdffff	                           jmp 0x4003dcb	      2651	linker.c	FUNCTION_31	CALL_36
0x4004021	      0xbee4090000	                          mov esi, 0x9e4	      2532	linker.c	FUNCTION_31	CALL_1
0x4004026	      0xbf00000000	                              mov edi, 0	      2532	linker.c	FUNCTION_31	CALL_1
0x400402b	      0xe800000000	                          call 0x4004030	      2532	linker.c	FUNCTION_31	CALL_1
0x4004030	      0xe9b5fdffff	                           jmp 0x4003dea	      2532	linker.c	FUNCTION_31	CALL_1
0x4004035	    0x418b86880000	            mov eax, dword [r14 + 0x88] 	      2544	linker.c	FUNCTION_31	IF_2
0x400403c	            0x85c0	                           test eax, eax	      2544	linker.c	FUNCTION_31	IF_2
0x400403e	     0xf8413feffff	                            je 0x4003e57	      2544	linker.c	FUNCTION_31	IF_2
0x4004044	    0x4983bd800000	               cmp qword [r13 + 0x80], 0	      2545	linker.c	FUNCTION_31	IF_2
0x400404c	     0xf8505feffff	                           jne 0x4003e57	      2545	linker.c	FUNCTION_31	IF_2
0x4004052	        0x488b4508	                mov rax, qword [rbp + 8]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4004056	      0xba05000000	                              mov edx, 5	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x400405b	      0xbe00000000	                              mov esi, 0	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4004060	      0xbf00000000	                              mov edi, 0	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4004065	          0x488b28	                    mov rbp, qword [rax]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4004068	        0x488b0424	                    mov rax, qword [rsp]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x400406c	        0x488b4008	                mov rax, qword [rax + 8]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4004070	          0x488b18	                    mov rbx, qword [rax]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4004073	      0xe800000000	                          call 0x4004078	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4004078	          0x4889ea	                            mov rdx, rbp	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x400407b	          0x4889c7	                            mov rdi, rax	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x400407e	            0x31c0	                            xor eax, eax	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4004080	          0x4889de	                            mov rsi, rbx	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4004083	      0xe800000000	                          call 0x4004088	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4004088	      0xbf03000000	                              mov edi, 3	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x400408d	      0xe800000000	                          call 0x4004092	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x4004092	      0xe909fcffff	                           jmp 0x4003ca0	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x4004097	    0x660f1f840000	                    nop word [rax + rax]	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x40040a0	        0x418b5518	            mov edx, dword [r13 + 0x18] 	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x40040a4	        0x4183c601	                             add r14d, 1	       650	linker.c	FUNCTION_6	FOR_1
0x40040a8	          0x4139d6	                           cmp r14d, edx	       650	linker.c	FUNCTION_6	FOR_1
0x40040ab	     0xf823ffcffff	                            jb 0x4003cf0	       650	linker.c	FUNCTION_6	FOR_1
0x40040b1	      0xe987fcffff	                           jmp 0x4003d3d	       650	linker.c	FUNCTION_6	FOR_1
0x40040b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       650	linker.c	FUNCTION_6	FOR_1
0x40040c0	          0x4d85d2	                           test r10, r10	      2655	linker.c	FUNCTION_31	IF_16
0x40040c3	     0xf84d7fbffff	                            je 0x4003ca0	      2655	linker.c	FUNCTION_31	IF_16
0x40040c9	          0x4c89d7	                            mov rdi, r10	      2656	linker.c	FUNCTION_31	CALL_37
0x40040cc	      0xe800000000	                          call 0x40040d1	      2656	linker.c	FUNCTION_31	CALL_37
0x40040d1	      0xe9cafbffff	                           jmp 0x4003ca0	      2656	linker.c	FUNCTION_31	CALL_37
0x40040d6	        0x488d1400	                    lea rdx, [rax + rax]	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x40040da	        0x48c1e004	                              shl rax, 4	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x40040de	          0x4889c6	                            mov rsi, rax	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x40040e1	      0xe91dfeffff	                           jmp 0x4003f03	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x40040e6	            0x31c9	                            xor ecx, ecx	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x40040e8	    0x41b801000000	                              mov r8d, 1	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x40040ee	      0xba00000000	                              mov edx, 0	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x40040f3	          0x4c89ee	                            mov rsi, r13	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x40040f6	          0x4889ef	                            mov rdi, rbp	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x40040f9	      0xe800000000	                          call 0x40040fe	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x40040fe	            0x85c0	                           test eax, eax	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4004100	     0xf849afbffff	                            je 0x4003ca0	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4004106	      0xe977fdffff	                           jmp 0x4003e82	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x400410b	      0xbe410a0000	                          mov esi, 0xa41	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4004110	      0xbf00000000	                              mov edi, 0	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4004115	        0x48891424	                    mov qword [rsp], rdx	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4004119	      0xe800000000	                          call 0x400411e	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x400411e	        0x4d8b7e60	            mov r15, qword [r14 + 0x60] 	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4004122	        0x488b1424	                    mov rdx, qword [rsp]	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4004126	      0xe974fdffff	                           jmp 0x4003e9f	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x400412b	    0x4c8bad900000	            mov r13, qword [rbp + 0x90] 	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4004132	          0x4d85ed	                           test r13, r13	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4004135	     0xf84aafdffff	                            je 0x4003ee5	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x400413b	    0x498b9d080100	           mov rbx, qword [r13 + 0x108] 	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004142	    0x41c785880000	               mov dword [r13 + 0x88], 0	      1848	linker.c	FUNCTION_22	IF_4	FOR_4
0x400414d	          0x4885db	                           test rbx, rbx	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004150	            0x7513	                           jne 0x4004165	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004152	            0xeb67	                           jmp 0x40041bb	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004154	         0xf1f4000	                         nop dword [rax]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004158	          0x83f801	                              cmp eax, 1	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x400415b	            0x7473	                            je 0x40041d0	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x400415d	          0x488b1b	                    mov rbx, qword [rbx]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004160	          0x4885db	                           test rbx, rbx	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004163	            0x741b	                            je 0x4004180	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004165	          0x8b4308	                mov eax, dword [rbx + 8]	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4004168	          0x8d50fd	                      lea edx, [rax - 3]	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x400416b	          0x83fa01	                              cmp edx, 1	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x400416e	            0x77e8	                            ja 0x4004158	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4004170	          0x488b1b	                    mov rbx, qword [rbx]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004173	    0x418385880000	               add dword [r13 + 0x88], 1	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x400417b	          0x4885db	                           test rbx, rbx	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x400417e	            0x75e5	                           jne 0x4004165	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4004180	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4004187	            0x85c0	                           test eax, eax	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4004189	            0x7430	                            je 0x40041bb	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x400418b	    0x488d34c50000	                        lea rsi, [rax*8]	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4004193	          0x4889ef	                            mov rdi, rbp	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4004196	      0xe800000000	                          call 0x400419b	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x400419b	          0x4885c0	                           test rax, rax	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x400419e	    0x498985800000	             mov qword [r13 + 0x80], rax	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x40041a5	     0xf84f5faffff	                            je 0x4003ca0	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x40041ab	      0x41834d2004	                or dword [r13 + 0x20], 4	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x40041b0	    0x41c785880000	               mov dword [r13 + 0x88], 0	      1897	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x40041bb	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x40041bf	          0x4d85ed	                           test r13, r13	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x40041c2	     0xf8573ffffff	                           jne 0x400413b	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x40041c8	      0xe9affbffff	                           jmp 0x4003d7c	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x40041cd	           0xf1f00	                         nop dword [rax]	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x40041d0	        0x4c8b7320	            mov r14, qword [rbx + 0x20] 	      1863	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40041d4	    0x4d8bbef00000	            mov r15, qword [r14 + 0xf0] 	      1864	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40041db	          0x4c89f6	                            mov rsi, r14	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x40041de	          0x4c89ff	                            mov rdi, r15	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x40041e1	      0xe800000000	                          call 0x40041e6	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x40041e6	          0x4885c0	                           test rax, rax	      1867	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x40041e9	     0xf88b1faffff	                            js 0x4003ca0	      1867	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x40041ef	          0x4889c7	                            mov rdi, rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x40041f2	        0x48890424	                    mov qword [rsp], rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x40041f6	      0xe800000000	                          call 0x40041fb	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x40041fb	          0x4885c0	                           test rax, rax	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x40041fe	          0x4989c0	                             mov r8, rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4004201	            0x750d	                           jne 0x4004210	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4004203	        0x488b1424	                    mov rdx, qword [rsp]	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4004207	          0x4885d2	                           test rdx, rdx	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x400420a	     0xf8590faffff	                           jne 0x4003ca0	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4004210	    0x498b8fb00000	            mov rcx, qword [r15 + 0xb0] 	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4004217	          0x4c89c2	                             mov rdx, r8	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x400421a	          0x4c89f6	                            mov rsi, r14	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x400421d	          0x4c89ff	                            mov rdi, r15	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4004220	      0x4c89442408	                 mov qword [rsp + 8], r8	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4004225	      0xe800000000	                          call 0x400422a	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x400422a	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x400422f	        0x48890424	                    mov qword [rsp], rax	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x4004233	          0x4c89c7	                             mov rdi, r8	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x4004236	      0xe800000000	                          call 0x400423b	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x400423b	        0x488b0424	                    mov rax, qword [rsp]	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x400423f	          0x4885c0	                           test rax, rax	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x4004242	     0xf8858faffff	                            js 0x4003ca0	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x4004248	    0x418b96880000	            mov edx, dword [r14 + 0x88] 	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x400424f	          0x4839c2	                            cmp rdx, rax	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4004252	            0x7413	                            je 0x4004267	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4004254	      0xbe59070000	                          mov esi, 0x759	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4004259	      0xbf00000000	                              mov edi, 0	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x400425e	      0xe800000000	                          call 0x4004263	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4004263	        0x488b0424	                    mov rax, qword [rsp]	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x4004267	    0x410185880000	             add dword [r13 + 0x88], eax	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x400426e	      0xe9eafeffff	                           jmp 0x400415d	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4004273	      0xbe400a0000	                          mov esi, 0xa40	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4004278	      0xbf00000000	                              mov edi, 0	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x400427d	        0x48891424	                    mov qword [rsp], rdx	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4004281	      0xe800000000	                          call 0x4004286	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4004286	        0x488b1424	                    mov rdx, qword [rsp]	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x400428a	      0xe903fcffff	                           jmp 0x4003e92	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x400428f	      0xe800000000	                          call 0x4004294	      1927	linker.c	FUNCTION_22
_bfd_generic_verify_endian_match	functions,0:WHILE,0:DO,0:ELSE,1:IF,2:SWITCH,0:FOR,0:CALL,6	34
0x4004f20	        0x488b5650	            mov rdx, qword [rsi + 0x50] 	      3389	linker.c	FUNCTION_52	IF_1
0x4004f24	        0x488b4708	                mov rax, qword [rdi + 8]	      3389	linker.c	FUNCTION_52	IF_1
0x4004f28	        0x488b5208	                mov rdx, qword [rdx + 8]	      3389	linker.c	FUNCTION_52	IF_1
0x4004f2c	          0x8b400c	              mov eax, dword [rax + 0xc]	      3389	linker.c	FUNCTION_52	IF_1
0x4004f2f	          0x8b520c	              mov edx, dword [rdx + 0xc]	      3389	linker.c	FUNCTION_52	IF_1
0x4004f32	          0x83f802	                              cmp eax, 2	      3391	linker.c	FUNCTION_52	IF_1
0x4004f35	        0x400f95c6	                               setne sil	      3391	linker.c	FUNCTION_52	IF_1
0x4004f39	            0x39d0	                            cmp eax, edx	      3391	linker.c	FUNCTION_52	IF_1
0x4004f3b	           0xf95c1	                                setne cl	      3391	linker.c	FUNCTION_52	IF_1
0x4004f3e	          0x4084ce	                            test sil, cl	      3391	linker.c	FUNCTION_52	IF_1
0x4004f41	            0x7445	                            je 0x4004f88	      3391	linker.c	FUNCTION_52	IF_1
0x4004f43	          0x83fa02	                              cmp edx, 2	      3391	linker.c	FUNCTION_52	IF_1
0x4004f46	            0x7440	                            je 0x4004f88	      3391	linker.c	FUNCTION_52	IF_1
0x4004f48	            0x85c0	                           test eax, eax	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4004f4a	              0x53	                                push rbx	      3386	linker.c	FUNCTION_52
0x4004f4b	      0xba05000000	                              mov edx, 5	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004f50	          0x4889fb	                            mov rbx, rdi	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004f53	      0xbe00000000	                              mov esi, 0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4004f58	            0x7405	                            je 0x4004f5f	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4004f5a	      0xbe00000000	                              mov esi, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004f5f	      0xbf00000000	                              mov edi, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004f64	      0xe800000000	                          call 0x4004f69	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004f69	          0x4889de	                            mov rsi, rbx	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004f6c	          0x4889c7	                            mov rdi, rax	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004f6f	            0x31c0	                            xor eax, eax	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004f71	      0xe800000000	                          call 0x4004f76	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4004f76	      0xbf03000000	                              mov edi, 3	      3399	linker.c	FUNCTION_52	IF_1	CALL_6
0x4004f7b	      0xe800000000	                          call 0x4004f80	      3399	linker.c	FUNCTION_52	IF_1	CALL_6
0x4004f80	            0x31c0	                            xor eax, eax	      3400	linker.c	FUNCTION_52	IF_1
0x4004f82	              0x5b	                                 pop rbx	      3404	linker.c	FUNCTION_52
0x4004f83	              0xc3	                                     ret	      3404	linker.c	FUNCTION_52
0x4004f84	         0xf1f4000	                         nop dword [rax]	      3404	linker.c	FUNCTION_52
0x4004f88	      0xb801000000	                              mov eax, 1	      3403	linker.c	FUNCTION_52
0x4004f8d	              0xc3	                                     ret	      3403	linker.c	FUNCTION_52
_bfd_generic_reloc_link_order	functions,0:WHILE,0:DO,0:ELSE,2:IF,9:SWITCH,1:FOR,0:CALL,16	190
0x40030f0	            0x4157	                                push r15	      2314	linker.c	FUNCTION_27
0x40030f2	            0x4156	                                push r14	      2314	linker.c	FUNCTION_27
0x40030f4	            0x4155	                                push r13	      2314	linker.c	FUNCTION_27
0x40030f6	            0x4154	                                push r12	      2314	linker.c	FUNCTION_27
0x40030f8	              0x55	                                push rbp	      2314	linker.c	FUNCTION_27
0x40030f9	              0x53	                                push rbx	      2314	linker.c	FUNCTION_27
0x40030fa	        0x4883ec18	                           sub rsp, 0x18	      2314	linker.c	FUNCTION_27
0x40030fe	           0xfb606	                   movzx eax, byte [rsi]	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4003101	          0x83e003	                              and eax, 3	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4003104	            0x3c02	                               cmp al, 2	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4003106	     0xf8569020000	                           jne 0x4003375	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x400310c	    0x4883ba800000	               cmp qword [rdx + 0x80], 0	      2319	linker.c	FUNCTION_27	IF_2
0x4003114	          0x4989d4	                            mov r12, rdx	      2319	linker.c	FUNCTION_27	IF_2
0x4003117	     0xf846c020000	                            je 0x4003389	      2319	linker.c	FUNCTION_27	IF_2
0x400311d	          0x4989f6	                            mov r14, rsi	      2319	linker.c	FUNCTION_27	IF_2
0x4003120	      0xbe20000000	                           mov esi, 0x20	      2322	linker.c	FUNCTION_27	CALL_4
0x4003125	          0x4989fd	                            mov r13, rdi	      2322	linker.c	FUNCTION_27	CALL_4
0x4003128	          0x4889cd	                            mov rbp, rcx	      2322	linker.c	FUNCTION_27	CALL_4
0x400312b	      0xe800000000	                          call 0x4003130	      2322	linker.c	FUNCTION_27	CALL_4
0x4003130	          0x4885c0	                           test rax, rax	      2323	linker.c	FUNCTION_27	IF_3
0x4003133	          0x4889c3	                            mov rbx, rax	      2322	linker.c	FUNCTION_27	CALL_4
0x4003136	     0xf84ed000000	                            je 0x4003229	      2323	linker.c	FUNCTION_27	IF_3
0x400313c	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2326	linker.c	FUNCTION_27
0x4003140	          0x4c89ef	                            mov rdi, r13	      2327	linker.c	FUNCTION_27	CALL_5
0x4003143	        0x48894308	                mov qword [rbx + 8], rax	      2326	linker.c	FUNCTION_27
0x4003147	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2327	linker.c	FUNCTION_27	CALL_5
0x400314b	            0x8b30	                    mov esi, dword [rax]	      2327	linker.c	FUNCTION_27	CALL_5
0x400314d	      0xe800000000	                          call 0x4003152	      2327	linker.c	FUNCTION_27	CALL_5
0x4003152	          0x4885c0	                           test rax, rax	      2328	linker.c	FUNCTION_27	IF_4
0x4003155	        0x48894318	             mov qword [rbx + 0x18], rax	      2327	linker.c	FUNCTION_27	CALL_5
0x4003159	     0xf84f9010000	                            je 0x4003358	      2328	linker.c	FUNCTION_27	IF_4
0x400315f	        0x837d0803	                  cmp dword [rbp + 8], 3	      2335	linker.c	FUNCTION_27	IF_5
0x4003163	     0xf8487000000	                            je 0x40031f0	      2335	linker.c	FUNCTION_27	IF_5
0x4003169	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2342	linker.c	FUNCTION_27	ELSE_1	CALL_7
0x400316d	          0x4531c0	                            xor r8d, r8d	      2341	linker.c	FUNCTION_27	ELSE_1
0x4003170	            0x31c9	                            xor ecx, ecx	      2341	linker.c	FUNCTION_27	ELSE_1
0x4003172	    0x41b901000000	                              mov r9d, 1	      2341	linker.c	FUNCTION_27	ELSE_1
0x4003178	          0x4c89f6	                            mov rsi, r14	      2341	linker.c	FUNCTION_27	ELSE_1
0x400317b	          0x4c89ef	                            mov rdi, r13	      2341	linker.c	FUNCTION_27	ELSE_1
0x400317e	        0x488b5008	                mov rdx, qword [rax + 8]	      2341	linker.c	FUNCTION_27	ELSE_1
0x4003182	      0xe800000000	                          call 0x4003187	      2341	linker.c	FUNCTION_27	ELSE_1
0x4003187	          0x4885c0	                           test rax, rax	      2345	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400318a	     0xf84f8000000	                            je 0x4003288	      2345	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003190	          0x8b7038	            mov esi, dword [rax + 0x38] 	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003193	            0x85f6	                           test esi, esi	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003195	     0xf84ed000000	                            je 0x4003288	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400319b	        0x4883c040	                           add rax, 0x40	      2353	linker.c	FUNCTION_27	ELSE_1
0x400319f	          0x488903	                    mov qword [rbx], rax	      2353	linker.c	FUNCTION_27	ELSE_1
0x40031a2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2353	linker.c	FUNCTION_27	ELSE_1
0x40031a6	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      2358	linker.c	FUNCTION_27	IF_7
0x40031a9	            0x85c9	                           test ecx, ecx	      2358	linker.c	FUNCTION_27	IF_7
0x40031ab	            0x755c	                           jne 0x4003209	      2358	linker.c	FUNCTION_27	IF_7
0x40031ad	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2359	linker.c	FUNCTION_27	IF_7
0x40031b1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2359	linker.c	FUNCTION_27	IF_7
0x40031b5	        0x48894310	             mov qword [rbx + 0x10], rax	      2359	linker.c	FUNCTION_27	IF_7
0x40031b9	    0x418b8c248800	            mov ecx, dword [r12 + 0x88] 	      2401	linker.c	FUNCTION_27
0x40031c1	    0x498b94248000	            mov rdx, qword [r12 + 0x80] 	      2401	linker.c	FUNCTION_27
0x40031c9	          0x4889c8	                            mov rax, rcx	      2401	linker.c	FUNCTION_27
0x40031cc	        0x48891cca	            mov qword [rdx + rcx*8], rbx	      2401	linker.c	FUNCTION_27
0x40031d0	          0x83c001	                              add eax, 1	      2402	linker.c	FUNCTION_27
0x40031d3	    0x418984248800	             mov dword [r12 + 0x88], eax	      2402	linker.c	FUNCTION_27
0x40031db	        0x4883c418	                           add rsp, 0x18	      2405	linker.c	FUNCTION_27
0x40031df	      0xb801000000	                              mov eax, 1	      2404	linker.c	FUNCTION_27
0x40031e4	              0x5b	                                 pop rbx	      2405	linker.c	FUNCTION_27
0x40031e5	              0x5d	                                 pop rbp	      2405	linker.c	FUNCTION_27
0x40031e6	            0x415c	                                 pop r12	      2405	linker.c	FUNCTION_27
0x40031e8	            0x415d	                                 pop r13	      2405	linker.c	FUNCTION_27
0x40031ea	            0x415e	                                 pop r14	      2405	linker.c	FUNCTION_27
0x40031ec	            0x415f	                                 pop r15	      2405	linker.c	FUNCTION_27
0x40031ee	              0xc3	                                     ret	      2405	linker.c	FUNCTION_27
0x40031ef	              0x90	                                     nop	      2405	linker.c	FUNCTION_27
0x40031f0	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      2336	linker.c	FUNCTION_27	IF_5
0x40031f4	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      2358	linker.c	FUNCTION_27	IF_7
0x40031f7	        0x488b5208	                mov rdx, qword [rdx + 8]	      2336	linker.c	FUNCTION_27	IF_5
0x40031fb	            0x85c9	                           test ecx, ecx	      2358	linker.c	FUNCTION_27	IF_7
0x40031fd	    0x488b92000100	           mov rdx, qword [rdx + 0x100] 	      2336	linker.c	FUNCTION_27	IF_5
0x4003204	          0x488913	                    mov qword [rbx], rdx	      2336	linker.c	FUNCTION_27	IF_5
0x4003207	            0x74a4	                            je 0x40031ad	      2358	linker.c	FUNCTION_27	IF_7
0x4003209	          0x4889c7	                            mov rdi, rax	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x400320c	      0xe800000000	                          call 0x4003211	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4003211	          0x4189c7	                           mov r15d, eax	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4003214	          0x4c89ff	                            mov rdi, r15	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x4003217	      0xe800000000	                          call 0x400321c	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x400321c	          0x4885c0	                           test rax, rax	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x400321f	          0x4989c2	                            mov r10, rax	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x4003222	            0x751c	                           jne 0x4003240	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x4003224	          0x4d85ff	                           test r15, r15	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x4003227	            0x7417	                            je 0x4003240	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x4003229	            0x31c0	                            xor eax, eax	      2331	linker.c	FUNCTION_27	IF_4
0x400322b	        0x4883c418	                           add rsp, 0x18	      2405	linker.c	FUNCTION_27
0x400322f	              0x5b	                                 pop rbx	      2405	linker.c	FUNCTION_27
0x4003230	              0x5d	                                 pop rbp	      2405	linker.c	FUNCTION_27
0x4003231	            0x415c	                                 pop r12	      2405	linker.c	FUNCTION_27
0x4003233	            0x415d	                                 pop r13	      2405	linker.c	FUNCTION_27
0x4003235	            0x415e	                                 pop r14	      2405	linker.c	FUNCTION_27
0x4003237	            0x415f	                                 pop r15	      2405	linker.c	FUNCTION_27
0x4003239	              0xc3	                                     ret	      2405	linker.c	FUNCTION_27
0x400323a	    0x660f1f440000	                    nop word [rax + rax]	      2405	linker.c	FUNCTION_27
0x4003240	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2373	linker.c	FUNCTION_27	ELSE_2
0x4003244	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4003248	          0x4c89d1	                            mov rcx, r10	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x400324b	          0x4c89ee	                            mov rsi, r13	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x400324e	      0x4c89542408	                mov qword [rsp + 8], r10	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4003253	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4003257	      0xe800000000	                          call 0x400325c	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x400325c	          0x83f802	                              cmp eax, 2	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400325f	      0x4c8b542408	                mov r10, qword [rsp + 8]	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003264	     0xf8497000000	                            je 0x4003301	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400326a	          0x83f803	                              cmp eax, 3	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400326d	            0x7451	                            je 0x40032c0	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400326f	      0xba00000000	                              mov edx, 0	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x4003274	      0xbe4d090000	                          mov esi, 0x94d	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x4003279	      0xbf00000000	                              mov edi, 0	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x400327e	      0xe800000000	                          call 0x4003283	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x4003283	       0xf1f440000	                   nop dword [rax + rax]	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x4003288	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400328c	          0x4c89f7	                            mov rdi, r14	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400328f	          0x4531c0	                            xor r8d, r8d	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003292	            0x31c9	                            xor ecx, ecx	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003294	            0x31d2	                            xor edx, edx	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4003296	        0x488b7008	                mov rsi, qword [rax + 8]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400329a	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400329e	          0xff5048	                 call qword [rax + 0x48]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40032a1	      0xbf11000000	                           mov edi, 0x11	      2350	linker.c	FUNCTION_27	ELSE_1	IF_6	CALL_8
0x40032a6	      0xe800000000	                          call 0x40032ab	      2350	linker.c	FUNCTION_27	ELSE_1	IF_6	CALL_8
0x40032ab	        0x4883c418	                           add rsp, 0x18	      2405	linker.c	FUNCTION_27
0x40032af	            0x31c0	                            xor eax, eax	      2351	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40032b1	              0x5b	                                 pop rbx	      2405	linker.c	FUNCTION_27
0x40032b2	              0x5d	                                 pop rbp	      2405	linker.c	FUNCTION_27
0x40032b3	            0x415c	                                 pop r12	      2405	linker.c	FUNCTION_27
0x40032b5	            0x415d	                                 pop r13	      2405	linker.c	FUNCTION_27
0x40032b7	            0x415e	                                 pop r14	      2405	linker.c	FUNCTION_27
0x40032b9	            0x415f	                                 pop r15	      2405	linker.c	FUNCTION_27
0x40032bb	              0xc3	                                     ret	      2405	linker.c	FUNCTION_27
0x40032bc	         0xf1f4000	                         nop dword [rax]	      2405	linker.c	FUNCTION_27
0x40032c0	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032c4	        0x837d0803	                  cmp dword [rbp + 8], 3	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032c8	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032cc	        0x4c8b5838	            mov r11, qword [rax + 0x38] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032d0	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032d4	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032d8	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032dc	     0xf8487000000	                            je 0x4003369	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032e2	        0x488b5008	                mov rdx, qword [rax + 8]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032e6	      0x4c89542408	                mov qword [rsp + 8], r10	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032eb	          0x4531c9	                            xor r9d, r9d	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032ee	            0x6a00	                                  push 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032f0	            0x31f6	                            xor esi, esi	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032f2	            0x6a00	                                  push 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032f4	          0x4c89f7	                            mov rdi, r14	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032f7	          0x41ffd3	                                call r11	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032fa	              0x58	                                 pop rax	      2390	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032fb	              0x5a	                                 pop rdx	      2390	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40032fc	      0x4c8b542408	                mov r10, qword [rsp + 8]	      2390	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003301	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4003305	          0x4c89ef	                            mov rdi, r13	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4003308	      0x4c89542408	                mov qword [rsp + 8], r10	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x400330d	      0xe800000000	                          call 0x4003312	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x4003312	            0x89c1	                            mov ecx, eax	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4003314	      0x4c8b542408	                mov r10, qword [rsp + 8]	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4003319	          0x4d89f8	                             mov r8, r15	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x400331c	        0x480fafcd	                           imul rcx, rbp	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4003320	          0x4c89e6	                            mov rsi, r12	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4003323	          0x4c89ef	                            mov rdi, r13	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4003326	          0x4c89d2	                            mov rdx, r10	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4003329	      0xe800000000	                          call 0x400332e	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x400332e	      0x4c8b542408	                mov r10, qword [rsp + 8]	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x4003333	            0x89c5	                            mov ebp, eax	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4003335	          0x4c89d7	                            mov rdi, r10	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x4003338	      0xe800000000	                          call 0x400333d	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x400333d	            0x85ed	                           test ebp, ebp	      2395	linker.c	FUNCTION_27	ELSE_2	IF_9
0x400333f	     0xf84e4feffff	                            je 0x4003229	      2395	linker.c	FUNCTION_27	ELSE_2	IF_9
0x4003345	    0x48c743100000	               mov qword [rbx + 0x10], 0	      2398	linker.c	FUNCTION_27	ELSE_2
0x400334d	      0xe967feffff	                           jmp 0x40031b9	      2398	linker.c	FUNCTION_27	ELSE_2
0x4003352	    0x660f1f440000	                    nop word [rax + rax]	      2398	linker.c	FUNCTION_27	ELSE_2
0x4003358	      0xbf11000000	                           mov edi, 0x11	      2330	linker.c	FUNCTION_27	IF_4	CALL_6
0x400335d	      0xe800000000	                          call 0x4003362	      2330	linker.c	FUNCTION_27	IF_4	CALL_6
0x4003362	            0x31c0	                            xor eax, eax	      2331	linker.c	FUNCTION_27	IF_4
0x4003364	      0xe9c2feffff	                           jmp 0x400322b	      2331	linker.c	FUNCTION_27	IF_4
0x4003369	        0x488b4008	                mov rax, qword [rax + 8]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400336d	          0x488b10	                    mov rdx, qword [rax]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003370	      0xe971ffffff	                           jmp 0x40032e6	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4003375	      0xba00000000	                              mov edx, 0	      2318	linker.c	FUNCTION_27	CALL_2
0x400337a	      0xbe0e090000	                          mov esi, 0x90e	      2318	linker.c	FUNCTION_27	CALL_2
0x400337f	      0xbf00000000	                              mov edi, 0	      2318	linker.c	FUNCTION_27	CALL_2
0x4003384	      0xe800000000	                          call 0x4003389	      2318	linker.c	FUNCTION_27	CALL_2
0x4003389	      0xba00000000	                              mov edx, 0	      2320	linker.c	FUNCTION_27	CALL_3
0x400338e	      0xbe10090000	                          mov esi, 0x910	      2320	linker.c	FUNCTION_27	CALL_3
0x4003393	      0xbf00000000	                              mov edi, 0	      2320	linker.c	FUNCTION_27	CALL_3
0x4003398	      0xe800000000	                          call 0x400339d	      2320	linker.c	FUNCTION_27	CALL_3
bfd_section_already_linked_table_free	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	2
0x4004380	      0xbf00000000	                              mov edi, 0	      2806	linker.c	FUNCTION_39	CALL_1
0x4004385	      0xe900000000	                           jmp 0x400438a	      2806	linker.c	FUNCTION_39	CALL_1
unwrap_hash_lookup	functions,0:WHILE,0:DO,0:ELSE,0:IF,5:SWITCH,0:FOR,0:CALL,4	78
0x4000b20	            0x4156	                                push r14	       606	linker.c	FUNCTION_5
0x4000b22	            0x4155	                                push r13	       606	linker.c	FUNCTION_5
0x4000b24	            0x4154	                                push r12	       606	linker.c	FUNCTION_5
0x4000b26	              0x55	                                push rbp	       606	linker.c	FUNCTION_5
0x4000b27	          0x4889d5	                            mov rbp, rdx	       606	linker.c	FUNCTION_5
0x4000b2a	              0x53	                                push rbx	       606	linker.c	FUNCTION_5
0x4000b2b	        0x488b5a08	                mov rbx, qword [rdx + 8]	       607	linker.c	FUNCTION_5
0x4000b2f	          0x4989fc	                            mov r12, rdi	       606	linker.c	FUNCTION_5
0x4000b32	        0x488b5608	                mov rdx, qword [rsi + 8]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000b36	           0xfb603	                   movzx eax, byte [rbx]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000b39	          0x3a421c	               cmp al, byte [rdx + 0x1c]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000b3c	            0x7422	                            je 0x4000b60	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000b3e	          0x3a4709	                  cmp al, byte [rdi + 9]	       610	linker.c	FUNCTION_5	IF_1
0x4000b41	            0x741d	                            je 0x4000b60	       610	linker.c	FUNCTION_5	IF_1
0x4000b43	      0xbf00000000	                              mov edi, 0	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000b48	      0xb907000000	                              mov ecx, 7	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000b4d	          0x4889de	                            mov rsi, rbx	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000b50	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000b52	            0x741c	                            je 0x4000b70	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000b54	              0x5b	                                 pop rbx	       632	linker.c	FUNCTION_5
0x4000b55	          0x4889e8	                            mov rax, rbp	       632	linker.c	FUNCTION_5
0x4000b58	              0x5d	                                 pop rbp	       632	linker.c	FUNCTION_5
0x4000b59	            0x415c	                                 pop r12	       632	linker.c	FUNCTION_5
0x4000b5b	            0x415d	                                 pop r13	       632	linker.c	FUNCTION_5
0x4000b5d	            0x415e	                                 pop r14	       632	linker.c	FUNCTION_5
0x4000b5f	              0xc3	                                     ret	       632	linker.c	FUNCTION_5
0x4000b60	        0x4883c301	                              add rbx, 1	       611	linker.c	FUNCTION_5	IF_1
0x4000b64	            0xebdd	                           jmp 0x4000b43	       611	linker.c	FUNCTION_5	IF_1
0x4000b66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       611	linker.c	FUNCTION_5	IF_1
0x4000b70	        0x4c8d6b07	                      lea r13, [rbx + 7]	       615	linker.c	FUNCTION_5	IF_2
0x4000b74	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000b79	            0x31c9	                            xor ecx, ecx	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000b7b	            0x31d2	                            xor edx, edx	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000b7d	          0x4c89ee	                            mov rsi, r13	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000b80	      0xe800000000	                          call 0x4000b85	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000b85	          0x4885c0	                           test rax, rax	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000b88	            0x74ca	                            je 0x4000b54	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x4000b8a	        0x488b4508	                mov rax, qword [rbp + 8]	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000b8e	          0x4839c3	                            cmp rbx, rax	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000b91	            0x744d	                            je 0x4000be0	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000b93	           0xfb600	                   movzx eax, byte [rax]	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000b96	      0x440fb67306	              movzx r14d, byte [rbx + 6]	       623	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000b9b	        0x4c8d6b06	                      lea r13, [rbx + 6]	       622	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000b9f	          0x884306	                  mov byte [rbx + 6], al	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x4000ba2	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000ba7	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x4000baa	            0x742c	                            je 0x4000bd8	       498	linker.c	FUNCTION_3	IF_1
0x4000bac	          0x4d85ed	                           test r13, r13	       498	linker.c	FUNCTION_3	IF_1
0x4000baf	            0x7427	                            je 0x4000bd8	       498	linker.c	FUNCTION_3	IF_1
0x4000bb1	            0x31c9	                            xor ecx, ecx	       501	linker.c	FUNCTION_3
0x4000bb3	            0x31d2	                            xor edx, edx	       501	linker.c	FUNCTION_3
0x4000bb5	          0x4c89ee	                            mov rsi, r13	       501	linker.c	FUNCTION_3
0x4000bb8	      0xe800000000	                          call 0x4000bbd	       501	linker.c	FUNCTION_3
0x4000bbd	          0x4889c5	                            mov rbp, rax	       501	linker.c	FUNCTION_3
0x4000bc0	          0x4584f6	                         test r14b, r14b	       627	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000bc3	            0x748f	                            je 0x4000b54	       627	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000bc5	        0x45887500	                    mov byte [r13], r14b	       628	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000bc9	          0x4889e8	                            mov rax, rbp	       632	linker.c	FUNCTION_5
0x4000bcc	              0x5b	                                 pop rbx	       632	linker.c	FUNCTION_5
0x4000bcd	              0x5d	                                 pop rbp	       632	linker.c	FUNCTION_5
0x4000bce	            0x415c	                                 pop r12	       632	linker.c	FUNCTION_5
0x4000bd0	            0x415d	                                 pop r13	       632	linker.c	FUNCTION_5
0x4000bd2	            0x415e	                                 pop r14	       632	linker.c	FUNCTION_5
0x4000bd4	              0xc3	                                     ret	       632	linker.c	FUNCTION_5
0x4000bd5	           0xf1f00	                         nop dword [rax]	       632	linker.c	FUNCTION_5
0x4000bd8	            0x31ed	                            xor ebp, ebp	       499	linker.c	FUNCTION_3	IF_1
0x4000bda	            0xebe4	                           jmp 0x4000bc0	       499	linker.c	FUNCTION_3	IF_1
0x4000bdc	         0xf1f4000	                         nop dword [rax]	       499	linker.c	FUNCTION_3	IF_1
0x4000be0	          0x4d85ed	                           test r13, r13	       498	linker.c	FUNCTION_3	IF_1
0x4000be3	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000be8	            0x740e	                            je 0x4000bf8	       498	linker.c	FUNCTION_3	IF_1
0x4000bea	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x4000bed	            0x7409	                            je 0x4000bf8	       498	linker.c	FUNCTION_3	IF_1
0x4000bef	          0x4531f6	                          xor r14d, r14d	       619	linker.c	FUNCTION_5	IF_2	IF_3
0x4000bf2	            0xebbd	                           jmp 0x4000bb1	       619	linker.c	FUNCTION_5	IF_2	IF_3
0x4000bf4	         0xf1f4000	                         nop dword [rax]	       619	linker.c	FUNCTION_5	IF_2	IF_3
0x4000bf8	            0x31ed	                            xor ebp, ebp	       499	linker.c	FUNCTION_3	IF_1
0x4000bfa	      0xe955ffffff	                           jmp 0x4000b54	       631	linker.c	FUNCTION_5
bfd_section_already_linked_table_init	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	5
0x4004360	      0xb92a000000	                           mov ecx, 0x2a	      2797	linker.c	FUNCTION_38	CALL_1
0x4004365	      0xba20000000	                           mov edx, 0x20	      2797	linker.c	FUNCTION_38	CALL_1
0x400436a	      0xbe00000000	                              mov esi, 0	      2797	linker.c	FUNCTION_38	CALL_1
0x400436f	      0xbf00000000	                              mov edi, 0	      2797	linker.c	FUNCTION_38	CALL_1
0x4004374	      0xe900000000	                           jmp 0x4004379	      2797	linker.c	FUNCTION_38	CALL_1
_bfd_nolink_bfd_link_just_syms	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,0	1
0x4005000	            0xf3c3	                                     ret	      3465	linker.c	FUNCTION_60
bfd_hide_sym_by_version	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	14
0x4004eb0	        0x4883ec18	                           sub rsp, 0x18	      3300	linker.c	FUNCTION_49
0x4004eb4	      0x488d542404	                      lea rdx, [rsp + 4]	      3302	linker.c	FUNCTION_49	CALL_1
0x4004eb9	    0xc74424040000	                  mov dword [rsp + 4], 0	      3301	linker.c	FUNCTION_49
0x4004ec1	    0x64488b042528	                mov rax, qword fs:[0x28]	      3300	linker.c	FUNCTION_49
0x4004eca	      0x4889442408	                mov qword [rsp + 8], rax	      3300	linker.c	FUNCTION_49
0x4004ecf	            0x31c0	                            xor eax, eax	      3300	linker.c	FUNCTION_49
0x4004ed1	      0xe800000000	                          call 0x4004ed6	      3302	linker.c	FUNCTION_49	CALL_1
0x4004ed6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3304	linker.c	FUNCTION_49
0x4004edb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3304	linker.c	FUNCTION_49
0x4004ee4	        0x8b442404	                mov eax, dword [rsp + 4]	      3304	linker.c	FUNCTION_49
0x4004ee8	            0x7505	                           jne 0x4004eef	      3304	linker.c	FUNCTION_49
0x4004eea	        0x4883c418	                           add rsp, 0x18	      3304	linker.c	FUNCTION_49
0x4004eee	              0xc3	                                     ret	      3304	linker.c	FUNCTION_49
0x4004eef	      0xe800000000	                          call 0x4004ef4	      3304	linker.c	FUNCTION_49
_bfd_generic_link_hide_symbol	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,0	1
0x4004c90	            0xf3c3	                                     ret	      3136	linker.c	FUNCTION_46
_bfd_fix_excluded_sec_syms	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	79
0x4004ab0	            0x4156	                                push r14	      3050	linker.c	FUNCTION_44
0x4004ab2	            0x4155	                                push r13	      3050	linker.c	FUNCTION_44
0x4004ab4	            0x4154	                                push r12	      3050	linker.c	FUNCTION_44
0x4004ab6	              0x55	                                push rbp	      3050	linker.c	FUNCTION_44
0x4004ab7	              0x53	                                push rbx	      3050	linker.c	FUNCTION_44
0x4004ab8	        0x4c8b7628	            mov r14, qword [rsi + 0x28] 	      3051	linker.c	FUNCTION_44	CALL_1
0x4004abc	      0x410fb64624	           movzx eax, byte [r14 + 0x24] 	       649	linker.c	FUNCTION_6
0x4004ac1	        0x418b5618	            mov edx, dword [r14 + 0x18] 	       650	linker.c	FUNCTION_6	FOR_1
0x4004ac5	          0x83c801	                               or eax, 1	       649	linker.c	FUNCTION_6
0x4004ac8	            0x85d2	                           test edx, edx	       650	linker.c	FUNCTION_6	FOR_1
0x4004aca	        0x41884624	               mov byte [r14 + 0x24], al	       649	linker.c	FUNCTION_6
0x4004ace	     0xf84ae000000	                            je 0x4004b82	       650	linker.c	FUNCTION_6	FOR_1
0x4004ad4	          0x4d8b2e	                    mov r13, qword [r14]	       650	linker.c	FUNCTION_6	FOR_1
0x4004ad7	          0x8d42ff	                      lea eax, [rdx - 1]	       650	linker.c	FUNCTION_6	FOR_1
0x4004ada	          0x4889fb	                            mov rbx, rdi	       650	linker.c	FUNCTION_6	FOR_1
0x4004add	      0x498d6cc508	              lea rbp, [r13 + rax*8 + 8]	       650	linker.c	FUNCTION_6	FOR_1
0x4004ae2	        0x4d8b5500	                    mov r10, qword [r13]	       654	linker.c	FUNCTION_6	FOR_1
0x4004ae6	          0x4d85d2	                           test r10, r10	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004ae9	            0x750d	                           jne 0x4004af8	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004aeb	      0xe980000000	                           jmp 0x4004b70	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004af0	          0x4d8b12	                    mov r10, qword [r10]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004af3	          0x4d85d2	                           test r10, r10	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004af6	            0x7478	                            je 0x4004b70	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004af8	      0x410fb64218	           movzx eax, byte [r10 + 0x18] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4004afd	          0x4d89d3	                            mov r11, r10	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4004b00	            0x3c07	                               cmp al, 7	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4004b02	     0xf8490000000	                            je 0x4004b98	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4004b08	          0x83e803	                              sub eax, 3	      3027	linker.c	FUNCTION_43	IF_1
0x4004b0b	            0x3c01	                               cmp al, 1	      3027	linker.c	FUNCTION_43	IF_1
0x4004b0d	            0x77e1	                            ja 0x4004af0	      3027	linker.c	FUNCTION_43	IF_1
0x4004b0f	        0x498b4328	            mov rax, qword [r11 + 0x28] 	      3030	linker.c	FUNCTION_43	IF_1
0x4004b13	          0x4885c0	                           test rax, rax	      3031	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b16	            0x74d8	                            je 0x4004af0	      3031	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b18	        0x488b7068	            mov rsi, qword [rax + 0x68] 	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b1c	          0x4885f6	                           test rsi, rsi	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b1f	            0x74cf	                            je 0x4004af0	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b21	        0xf6462180	           test byte [rsi + 0x21], 0x80 	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b25	            0x74c9	                            je 0x4004af0	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b27	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004b2b	          0x4885d2	                           test rdx, rdx	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004b2e	     0xf847c000000	                            je 0x4004bb0	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004b34	        0x48397218	            cmp qword [rdx + 0x18], rsi 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004b38	           0xf95c2	                                setne dl	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004b3b	            0x84d2	                             test dl, dl	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004b3d	            0x74b1	                            je 0x4004af0	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004b3f	        0x4c8b6060	            mov r12, qword [rax + 0x60] 	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b43	        0x4d036330	             add r12, qword [r11 + 0x30]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b47	          0x4889df	                            mov rdi, rbx	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4004b4a	        0x4c036628	             add r12, qword [rsi + 0x28]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b4e	        0x4d896330	             mov qword [r11 + 0x30], r12	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b52	          0x4c89e2	                            mov rdx, r12	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4004b55	      0xe800000000	                          call 0x4004b5a	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4004b5a	        0x4c2b6028	             sub r12, qword [rax + 0x28]	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b5e	        0x49894328	             mov qword [r11 + 0x28], rax	      3041	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b62	        0x4d896330	             mov qword [r11 + 0x30], r12	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x4004b66	          0x4d8b12	                    mov r10, qword [r10]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004b69	          0x4d85d2	                           test r10, r10	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004b6c	            0x758a	                           jne 0x4004af8	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004b6e	            0x6690	                                     nop	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004b70	        0x4983c508	                              add r13, 8	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4004b74	          0x4939ed	                            cmp r13, rbp	       650	linker.c	FUNCTION_6	FOR_1
0x4004b77	     0xf8565ffffff	                           jne 0x4004ae2	       650	linker.c	FUNCTION_6	FOR_1
0x4004b7d	      0x410fb64624	           movzx eax, byte [r14 + 0x24] 	       650	linker.c	FUNCTION_6	FOR_1
0x4004b82	          0x83e0fe	                     and eax, 0xfffffffe	       660	linker.c	FUNCTION_6
0x4004b85	        0x41884624	               mov byte [r14 + 0x24], al	       660	linker.c	FUNCTION_6
0x4004b89	              0x5b	                                 pop rbx	      3052	linker.c	FUNCTION_44
0x4004b8a	              0x5d	                                 pop rbp	      3052	linker.c	FUNCTION_44
0x4004b8b	            0x415c	                                 pop r12	      3052	linker.c	FUNCTION_44
0x4004b8d	            0x415d	                                 pop r13	      3052	linker.c	FUNCTION_44
0x4004b8f	            0x415e	                                 pop r14	      3052	linker.c	FUNCTION_44
0x4004b91	              0xc3	                                     ret	      3052	linker.c	FUNCTION_44
0x4004b92	    0x660f1f440000	                    nop word [rax + rax]	      3052	linker.c	FUNCTION_44
0x4004b98	        0x4d8b5a28	            mov r11, qword [r10 + 0x28] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4004b9c	      0x410fb64318	           movzx eax, byte [r11 + 0x18] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4004ba1	      0xe962ffffff	                           jmp 0x4004b08	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4004ba6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4004bb0	    0x4839b3980000	            cmp qword [rbx + 0x98], rsi 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004bb7	           0xf95c2	                                setne dl	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4004bba	      0xe97cffffff	                           jmp 0x4004b3b	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
_bfd_generic_link_hash_table_create	functions,0:WHILE,0:DO,0:ELSE,0:IF,2:SWITCH,0:FOR,0:CALL,3	43
0x4000d50	            0x4154	                                push r12	       752	linker.c	FUNCTION_10
0x4000d52	              0x55	                                push rbp	       752	linker.c	FUNCTION_10
0x4000d53	          0x4889fd	                            mov rbp, rdi	       752	linker.c	FUNCTION_10
0x4000d56	              0x53	                                push rbx	       752	linker.c	FUNCTION_10
0x4000d57	      0xbf48000000	                           mov edi, 0x48	       756	linker.c	FUNCTION_10	CALL_1
0x4000d5c	      0xe800000000	                          call 0x4000d61	       756	linker.c	FUNCTION_10	CALL_1
0x4000d61	          0x4885c0	                           test rax, rax	       757	linker.c	FUNCTION_10	IF_1
0x4000d64	            0x747a	                            je 0x4000de0	       757	linker.c	FUNCTION_10	IF_1
0x4000d66	        0xf6454804	               test byte [rbp + 0x48], 4	       469	linker.c	FUNCTION_2	CALL_1
0x4000d6a	          0x4889c3	                            mov rbx, rax	       469	linker.c	FUNCTION_2	CALL_1
0x4000d6d	          0x4989c4	                            mov r12, rax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000d70	            0x750a	                           jne 0x4000d7c	       469	linker.c	FUNCTION_2	CALL_1
0x4000d72	    0x4883bdf00000	               cmp qword [rbp + 0xf0], 0	       469	linker.c	FUNCTION_2	CALL_1
0x4000d7a	            0x740f	                            je 0x4000d8b	       469	linker.c	FUNCTION_2	CALL_1
0x4000d7c	      0xbed5010000	                          mov esi, 0x1d5	       469	linker.c	FUNCTION_2	CALL_1
0x4000d81	      0xbf00000000	                              mov edi, 0	       469	linker.c	FUNCTION_2	CALL_1
0x4000d86	      0xe800000000	                          call 0x4000d8b	       469	linker.c	FUNCTION_2	CALL_1
0x4000d8b	    0x48c743280000	               mov qword [rbx + 0x28], 0	       470	linker.c	FUNCTION_2
0x4000d93	    0x48c743300000	               mov qword [rbx + 0x30], 0	       471	linker.c	FUNCTION_2
0x4000d9b	      0xba48000000	                           mov edx, 0x48	       474	linker.c	FUNCTION_2	CALL_2
0x4000da0	    0xc74340000000	               mov dword [rbx + 0x40], 0	       472	linker.c	FUNCTION_2
0x4000da7	      0xbe00000000	                              mov esi, 0	       474	linker.c	FUNCTION_2	CALL_2
0x4000dac	          0x4889df	                            mov rdi, rbx	       474	linker.c	FUNCTION_2	CALL_2
0x4000daf	      0xe800000000	                          call 0x4000db4	       474	linker.c	FUNCTION_2	CALL_2
0x4000db4	            0x85c0	                           test eax, eax	       475	linker.c	FUNCTION_2	IF_1
0x4000db6	            0x7420	                            je 0x4000dd8	       475	linker.c	FUNCTION_2	IF_1
0x4000db8	    0x48c743380000	               mov qword [rbx + 0x38], 0	       478	linker.c	FUNCTION_2	IF_1
0x4000dc0	        0x804d4804	                 or byte [rbp + 0x48], 4	       480	linker.c	FUNCTION_2	IF_1
0x4000dc4	          0x4c89e0	                            mov rax, r12	       767	linker.c	FUNCTION_10
0x4000dc7	    0x48899df00000	            mov qword [rbp + 0xf0], rbx 	       479	linker.c	FUNCTION_2	IF_1
0x4000dce	              0x5b	                                 pop rbx	       767	linker.c	FUNCTION_10
0x4000dcf	              0x5d	                                 pop rbp	       767	linker.c	FUNCTION_10
0x4000dd0	            0x415c	                                 pop r12	       767	linker.c	FUNCTION_10
0x4000dd2	              0xc3	                                     ret	       767	linker.c	FUNCTION_10
0x4000dd3	       0xf1f440000	                   nop dword [rax + rax]	       767	linker.c	FUNCTION_10
0x4000dd8	          0x4889df	                            mov rdi, rbx	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x4000ddb	      0xe800000000	                          call 0x4000de0	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x4000de0	          0x4531e4	                          xor r12d, r12d	       764	linker.c	FUNCTION_10	IF_2
0x4000de3	          0x4c89e0	                            mov rax, r12	       767	linker.c	FUNCTION_10
0x4000de6	              0x5b	                                 pop rbx	       767	linker.c	FUNCTION_10
0x4000de7	              0x5d	                                 pop rbp	       767	linker.c	FUNCTION_10
0x4000de8	            0x415c	                                 pop r12	       767	linker.c	FUNCTION_10
0x4000dea	              0xc3	                                     ret	       767	linker.c	FUNCTION_10
bfd_link_repair_undef_list	functions,0:WHILE,1:DO,0:ELSE,2:IF,3:SWITCH,0:FOR,0:CALL,0	26
0x4000cf0	        0x488d7728	                   lea rsi, [rdi + 0x28]	       689	linker.c	FUNCTION_8
0x4000cf4	          0x4889f2	                            mov rdx, rsi	       689	linker.c	FUNCTION_8
0x4000cf7	    0x660f1f840000	                    nop word [rax + rax]	       689	linker.c	FUNCTION_8
0x4000d00	          0x488b02	                    mov rax, qword [rdx]	       690	linker.c	FUNCTION_8	WHILE_1
0x4000d03	          0x4885c0	                           test rax, rax	       690	linker.c	FUNCTION_8	WHILE_1
0x4000d06	            0x743c	                            je 0x4000d44	       690	linker.c	FUNCTION_8	WHILE_1
0x4000d08	        0xf64018fd	           test byte [rax + 0x18], 0xfd 	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000d0c	            0x752a	                           jne 0x4000d38	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000d0e	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000d12	          0x48890a	                    mov qword [rdx], rcx	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000d15	    0x48c740200000	               mov qword [rax + 0x20], 0	       698	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000d1d	        0x483b4730	            cmp rax, qword [rdi + 0x30] 	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000d21	            0x75dd	                           jne 0x4000d00	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x4000d23	          0x4839f2	                            cmp rdx, rsi	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000d26	            0x741e	                            je 0x4000d46	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000d28	        0x4883ea20	                           sub rdx, 0x20	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000d2c	        0x48895730	             mov qword [rdi + 0x30], rdx	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000d30	              0xc3	                                     ret	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000d31	     0xf1f80000000	                         nop dword [rax]	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000d38	        0x488d5020	                   lea rdx, [rax + 0x20]	       712	linker.c	FUNCTION_8	WHILE_1	ELSE_2
0x4000d3c	          0x488b02	                    mov rax, qword [rdx]	       690	linker.c	FUNCTION_8	WHILE_1
0x4000d3f	          0x4885c0	                           test rax, rax	       690	linker.c	FUNCTION_8	WHILE_1
0x4000d42	            0x75c4	                           jne 0x4000d08	       690	linker.c	FUNCTION_8	WHILE_1
0x4000d44	            0xf3c3	                                     ret	       690	linker.c	FUNCTION_8	WHILE_1
0x4000d46	    0x48c747300000	               mov qword [rdi + 0x30], 0	       702	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000d4e	              0xc3	                                     ret	       702	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
_bfd_nearby_section	functions,0:WHILE,0:DO,0:ELSE,6:IF,13:SWITCH,0:FOR,2:CALL,2	96
0x4004950	        0x4c8b4618	              mov r8, qword [rsi + 0x18]	      2959	linker.c	FUNCTION_42	FOR_1
0x4004954	          0x4d85c0	                             test r8, r8	      2959	linker.c	FUNCTION_42	FOR_1
0x4004957	     0xf8420010000	                            je 0x4004a7d	      2959	linker.c	FUNCTION_42	FOR_1
0x400495d	          0x4c89c0	                             mov rax, r8	      2959	linker.c	FUNCTION_42	FOR_1
0x4004960	            0xeb1a	                           jmp 0x400497c	      2959	linker.c	FUNCTION_42	FOR_1
0x4004962	    0x660f1f440000	                    nop word [rax + rax]	      2959	linker.c	FUNCTION_42	FOR_1
0x4004968	        0x48394118	            cmp qword [rcx + 0x18], rax 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x400496c	           0xf94c1	                                 sete cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x400496f	            0x84c9	                             test cl, cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004971	            0x752d	                           jne 0x40049a0	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004973	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2959	linker.c	FUNCTION_42	FOR_1
0x4004977	          0x4885c0	                           test rax, rax	      2959	linker.c	FUNCTION_42	FOR_1
0x400497a	            0x7424	                            je 0x40049a0	      2959	linker.c	FUNCTION_42	FOR_1
0x400497c	        0xf6402180	           test byte [rax + 0x21], 0x80 	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x4004980	            0x75f1	                           jne 0x4004973	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x4004982	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004986	          0x4885c9	                           test rcx, rcx	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004989	            0x75dd	                           jne 0x4004968	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x400498b	    0x483987980000	            cmp qword [rdi + 0x98], rax 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004992	           0xf94c1	                                 sete cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004995	            0x84c9	                             test cl, cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004997	            0x74da	                            je 0x4004973	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4004999	     0xf1f80000000	                         nop dword [rax]	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x40049a0	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      2967	linker.c	FUNCTION_42	IF_2
0x40049a4	          0x4885c9	                           test rcx, rcx	      2970	linker.c	FUNCTION_42	FOR_2
0x40049a7	            0x7450	                            je 0x40049f9	      2970	linker.c	FUNCTION_42	FOR_2
0x40049a9	     0xf1f80000000	                         nop dword [rax]	      2970	linker.c	FUNCTION_42	FOR_2
0x40049b0	        0x448b4120	            mov r8d, dword [rcx + 0x20] 	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40049b4	    0x41f7c0008000	                        test r8d, 0x8000	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40049bb	            0x751f	                           jne 0x40049dc	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40049bd	        0x4c8b4910	              mov r9, qword [rcx + 0x10]	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40049c1	          0x4d85c9	                             test r9, r9	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40049c4	            0x742a	                            je 0x40049f0	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40049c6	        0x49394918	              cmp qword [r9 + 0x18], rcx	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40049ca	            0x7444	                            je 0x4004a10	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40049cc	          0x4c89c9	                             mov rcx, r9	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40049cf	        0x448b4120	            mov r8d, dword [rcx + 0x20] 	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40049d3	    0x41f7c0008000	                        test r8d, 0x8000	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40049da	            0x74e1	                            je 0x40049bd	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40049dc	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x40049e0	          0x4885c9	                           test rcx, rcx	      2970	linker.c	FUNCTION_42	FOR_2
0x40049e3	            0x75cb	                           jne 0x40049b0	      2970	linker.c	FUNCTION_42	FOR_2
0x40049e5	            0xeb12	                           jmp 0x40049f9	      2970	linker.c	FUNCTION_42	FOR_2
0x40049e7	    0x660f1f840000	                    nop word [rax + rax]	      2970	linker.c	FUNCTION_42	FOR_2
0x40049f0	    0x48398f980000	            cmp qword [rdi + 0x98], rcx 	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40049f7	            0x7417	                            je 0x4004a10	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x40049f9	          0x4885c0	                           test rax, rax	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x40049fc	      0xba00000000	                              mov edx, 0	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4004a01	        0x480f44c2	                          cmove rax, rdx	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4004a05	              0xc3	                                     ret	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4004a06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4004a10	          0x4885c0	                           test rax, rax	      2979	linker.c	FUNCTION_42	IF_4
0x4004a13	            0x7433	                            je 0x4004a48	      2979	linker.c	FUNCTION_42	IF_4
0x4004a15	        0x448b4820	            mov r9d, dword [rax + 0x20] 	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004a19	          0x4489c7	                            mov edi, r8d	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004a1c	          0x4431cf	                            xor edi, r9d	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004a1f	    0xf7c703040000	                         test edi, 0x403	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004a25	            0x7431	                            je 0x4004a58	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4004a27	          0x8b5620	            mov edx, dword [rsi + 0x20] 	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a2a	          0x4431c2	                            xor edx, r8d	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a2d	    0x81e201040000	                          and edx, 0x401	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a33	            0x751b	                           jne 0x4004a50	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a35	        0x4183e102	                              and r9d, 2	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a39	            0x740d	                            je 0x4004a48	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a3b	        0x4183e002	                              and r8d, 2	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a3f	        0x480f45c1	                         cmovne rax, rcx	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a43	              0xc3	                                     ret	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a44	         0xf1f4000	                         nop dword [rax]	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4004a48	          0x4889c8	                            mov rax, rcx	      2979	linker.c	FUNCTION_42	IF_4
0x4004a4b	              0xc3	                                     ret	      2979	linker.c	FUNCTION_42	IF_4
0x4004a4c	         0xf1f4000	                         nop dword [rax]	      2979	linker.c	FUNCTION_42	IF_4
0x4004a50	            0xf3c3	                                     ret	      3018	linker.c	FUNCTION_42
0x4004a52	    0x660f1f440000	                    nop word [rax + rax]	      3018	linker.c	FUNCTION_42
0x4004a58	        0x40f6c708	                             test dil, 8	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4004a5c	            0x7512	                           jne 0x4004a70	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4004a5e	          0x83e710	                           and edi, 0x10	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x4004a61	            0x743d	                            je 0x4004aa0	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x4004a63	        0x44334620	             xor r8d, dword [rsi + 0x20]	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4004a67	        0x4183e010	                           and r8d, 0x10	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4004a6b	        0x480f44c1	                          cmove rax, rcx	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4004a6f	              0xc3	                                     ret	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4004a70	        0x44334620	             xor r8d, dword [rsi + 0x20]	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004a74	        0x4183e008	                              and r8d, 8	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004a78	        0x480f44c1	                          cmove rax, rcx	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004a7c	              0xc3	                                     ret	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4004a7d	    0x488b86f00000	            mov rax, qword [rsi + 0xf0] 	      2969	linker.c	FUNCTION_42	ELSE_1
0x4004a84	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	      2969	linker.c	FUNCTION_42	ELSE_1
0x4004a8b	            0x31c0	                            xor eax, eax	      2970	linker.c	FUNCTION_42	FOR_2
0x4004a8d	          0x4885c9	                           test rcx, rcx	      2970	linker.c	FUNCTION_42	FOR_2
0x4004a90	     0xf851affffff	                           jne 0x40049b0	      2970	linker.c	FUNCTION_42	FOR_2
0x4004a96	      0xb800000000	                              mov eax, 0	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4004a9b	              0xc3	                                     ret	      3017	linker.c	FUNCTION_42
0x4004a9c	         0xf1f4000	                         nop dword [rax]	      3017	linker.c	FUNCTION_42
0x4004aa0	        0x48395128	            cmp qword [rcx + 0x28], rdx 	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
0x4004aa4	        0x480f46c1	                         cmovbe rax, rcx	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
0x4004aa8	              0xc3	                                     ret	      3013	linker.c	FUNCTION_42	ELSE_6	IF_13
bfd_find_version_for_sym	functions,0:WHILE,2:DO,0:ELSE,2:IF,13:SWITCH,0:FOR,1:CALL,2	127
0x4004d10	            0x4157	                                push r15	      3197	linker.c	FUNCTION_48
0x4004d12	            0x4156	                                push r14	      3197	linker.c	FUNCTION_48
0x4004d14	            0x4155	                                push r13	      3197	linker.c	FUNCTION_48
0x4004d16	            0x4154	                                push r12	      3197	linker.c	FUNCTION_48
0x4004d18	              0x55	                                push rbp	      3197	linker.c	FUNCTION_48
0x4004d19	              0x53	                                push rbx	      3197	linker.c	FUNCTION_48
0x4004d1a	        0x4883ec28	                           sub rsp, 0x28	      3197	linker.c	FUNCTION_48
0x4004d1e	          0x4885ff	                           test rdi, rdi	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d21	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3197	linker.c	FUNCTION_48
0x4004d26	     0xf846c010000	                            je 0x4004e98	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d2c	          0x4989ff	                            mov r15, rdi	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d2f	          0x4889f3	                            mov rbx, rsi	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d32	    0x48c744240800	                  mov qword [rsp + 8], 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d3b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d44	            0x31ed	                            xor ebp, ebp	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d46	          0x4531e4	                          xor r12d, r12d	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d49	          0x4531f6	                          xor r14d, r14d	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d4c	         0xf1f4000	                         nop dword [rax]	      3207	linker.c	FUNCTION_48	FOR_1
0x4004d50	      0x49837f1800	               cmp qword [r15 + 0x18], 0	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4004d55	            0x7469	                            je 0x4004dc0	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4004d57	        0x4d8d6f18	                   lea r13, [r15 + 0x18]	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4004d5b	            0x31c0	                            xor eax, eax	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4004d5d	            0xeb3a	                           jmp 0x4004d99	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4004d5f	              0x90	                                     nop	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4004d60	        0x488b7008	                mov rsi, qword [rax + 8]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d64	          0x803e2a	                    cmp byte [rsi], 0x2a	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d67	            0x754b	                           jne 0x4004db4	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d69	        0x807e0100	                   cmp byte [rsi + 1], 0	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d6d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d72	        0x490f44cf	                          cmove rcx, r15	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d76	        0x4d0f45e7	                         cmovne r12, r15	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d7a	      0x48894c2408	                mov qword [rsp + 8], rcx	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d7f	          0x83e202	                              and edx, 2	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004d82	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004d86	        0x490f45ef	                         cmovne rbp, r15	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004d8a	          0x83ca04	                               or edx, 4	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004d8d	          0x885010	               mov byte [rax + 0x10], dl	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004d90	          0x83e201	                              and edx, 1	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4004d93	     0xf85af000000	                           jne 0x4004e48	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4004d99	          0x4889da	                            mov rdx, rbx	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004d9c	          0x4889c6	                            mov rsi, rax	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004d9f	          0x4c89ef	                            mov rdi, r13	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004da2	        0x41ff5768	                 call qword [r15 + 0x68]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004da6	          0x4885c0	                           test rax, rax	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004da9	            0x7415	                            je 0x4004dc0	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4004dab	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004daf	          0xf6c201	                              test dl, 1	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004db2	            0x74ac	                            je 0x4004d60	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004db4	          0x4d89fc	                            mov r12, r15	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004db7	            0xebc6	                           jmp 0x4004d7f	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004db9	     0xf1f80000000	                         nop dword [rax]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4004dc0	            0x31c0	                            xor eax, eax	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004dc2	      0x49837f3800	               cmp qword [r15 + 0x38], 0	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004dc7	        0x4d8d6f38	                   lea r13, [r15 + 0x38]	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004dcb	            0x746b	                            je 0x4004e38	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004dcd	           0xf1f00	                         nop dword [rax]	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4004dd0	          0x4889da	                            mov rdx, rbx	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4004dd3	          0x4889c6	                            mov rsi, rax	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4004dd6	          0x4c89ef	                            mov rdi, r13	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4004dd9	        0x41ff5768	                 call qword [r15 + 0x68]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4004ddd	          0x4885c0	                           test rax, rax	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4004de0	            0x7456	                            je 0x4004e38	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4004de2	        0xf6401001	               test byte [rax + 0x10], 1	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004de6	            0x7420	                            je 0x4004e08	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004de8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3276	linker.c	FUNCTION_48	IF_13
0x4004ded	    0xc70001000000	                      mov dword [rax], 1	      3276	linker.c	FUNCTION_48	IF_13
0x4004df3	          0x4c89f8	                            mov rax, r15	      3277	linker.c	FUNCTION_48	IF_13
0x4004df6	        0x4883c428	                           add rsp, 0x28	      3281	linker.c	FUNCTION_48
0x4004dfa	              0x5b	                                 pop rbx	      3281	linker.c	FUNCTION_48
0x4004dfb	              0x5d	                                 pop rbp	      3281	linker.c	FUNCTION_48
0x4004dfc	            0x415c	                                 pop r12	      3281	linker.c	FUNCTION_48
0x4004dfe	            0x415d	                                 pop r13	      3281	linker.c	FUNCTION_48
0x4004e00	            0x415e	                                 pop r14	      3281	linker.c	FUNCTION_48
0x4004e02	            0x415f	                                 pop r15	      3281	linker.c	FUNCTION_48
0x4004e04	              0xc3	                                     ret	      3281	linker.c	FUNCTION_48
0x4004e05	           0xf1f00	                         nop dword [rax]	      3281	linker.c	FUNCTION_48
0x4004e08	        0x488b5008	                mov rdx, qword [rax + 8]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e0c	          0x803a2a	                    cmp byte [rdx], 0x2a	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e0f	            0x751f	                           jne 0x4004e30	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e11	        0x807a0100	                   cmp byte [rdx + 1], 0	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e15	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e1a	        0x490f44cf	                          cmove rcx, r15	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e1e	        0x4d0f45f7	                         cmovne r14, r15	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e22	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e27	            0xeba7	                           jmp 0x4004dd0	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e29	     0xf1f80000000	                         nop dword [rax]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e30	          0x4d89fe	                            mov r14, r15	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e33	            0xeb9b	                           jmp 0x4004dd0	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e35	           0xf1f00	                         nop dword [rax]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4004e38	          0x4d8b3f	                    mov r15, qword [r15]	      3207	linker.c	FUNCTION_48	FOR_1
0x4004e3b	          0x4d85ff	                           test r15, r15	      3207	linker.c	FUNCTION_48	FOR_1
0x4004e3e	     0xf850cffffff	                           jne 0x4004d50	      3207	linker.c	FUNCTION_48	FOR_1
0x4004e44	         0xf1f4000	                         nop dword [rax]	      3207	linker.c	FUNCTION_48	FOR_1
0x4004e48	          0x4d85f6	                           test r14, r14	      3258	linker.c	FUNCTION_48	IF_10
0x4004e4b	           0xf94c2	                                 sete dl	      3258	linker.c	FUNCTION_48	IF_10
0x4004e4e	          0x4d85e4	                           test r12, r12	      3258	linker.c	FUNCTION_48	IF_10
0x4004e51	           0xf94c0	                                 sete al	      3258	linker.c	FUNCTION_48	IF_10
0x4004e54	            0x20d0	                              and al, dl	      3258	linker.c	FUNCTION_48	IF_10
0x4004e56	            0x7507	                           jne 0x4004e5f	      3258	linker.c	FUNCTION_48	IF_10
0x4004e58	            0x89d0	                            mov eax, edx	      3258	linker.c	FUNCTION_48	IF_10
0x4004e5a	      0x4c89642408	                mov qword [rsp + 8], r12	      3258	linker.c	FUNCTION_48	IF_10
0x4004e5f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3261	linker.c	FUNCTION_48	IF_11
0x4004e64	          0x4885c9	                           test rcx, rcx	      3261	linker.c	FUNCTION_48	IF_11
0x4004e67	            0x7436	                            je 0x4004e9f	      3261	linker.c	FUNCTION_48	IF_11
0x4004e69	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3267	linker.c	FUNCTION_48	IF_11
0x4004e6e	            0x31c0	                            xor eax, eax	      3267	linker.c	FUNCTION_48	IF_11
0x4004e70	          0x4839e9	                            cmp rcx, rbp	      3267	linker.c	FUNCTION_48	IF_11
0x4004e73	           0xf94c0	                                 sete al	      3267	linker.c	FUNCTION_48	IF_11
0x4004e76	            0x8907	                    mov dword [rdi], eax	      3267	linker.c	FUNCTION_48	IF_11
0x4004e78	        0x4883c428	                           add rsp, 0x28	      3281	linker.c	FUNCTION_48
0x4004e7c	          0x4889c8	                            mov rax, rcx	      3268	linker.c	FUNCTION_48	IF_11
0x4004e7f	              0x5b	                                 pop rbx	      3281	linker.c	FUNCTION_48
0x4004e80	              0x5d	                                 pop rbp	      3281	linker.c	FUNCTION_48
0x4004e81	            0x415c	                                 pop r12	      3281	linker.c	FUNCTION_48
0x4004e83	            0x415d	                                 pop r13	      3281	linker.c	FUNCTION_48
0x4004e85	            0x415e	                                 pop r14	      3281	linker.c	FUNCTION_48
0x4004e87	            0x415f	                                 pop r15	      3281	linker.c	FUNCTION_48
0x4004e89	              0xc3	                                     ret	      3281	linker.c	FUNCTION_48
0x4004e8a	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      3281	linker.c	FUNCTION_48
0x4004e8f	          0x4d85ff	                           test r15, r15	      3274	linker.c	FUNCTION_48	IF_13
0x4004e92	     0xf8550ffffff	                           jne 0x4004de8	      3274	linker.c	FUNCTION_48	IF_13
0x4004e98	            0x31c0	                            xor eax, eax	      3280	linker.c	FUNCTION_48
0x4004e9a	      0xe957ffffff	                           jmp 0x4004df6	      3280	linker.c	FUNCTION_48
0x4004e9f	            0x84c0	                             test al, al	      3271	linker.c	FUNCTION_48	IF_12
0x4004ea1	            0x75e7	                           jne 0x4004e8a	      3271	linker.c	FUNCTION_48	IF_12
0x4004ea3	          0x4d89f7	                            mov r15, r14	      3271	linker.c	FUNCTION_48	IF_12
0x4004ea6	      0xe93dffffff	                           jmp 0x4004de8	      3271	linker.c	FUNCTION_48	IF_12
bfd_section_already_linked_table_traverse	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,3	4
0x40042e0	          0x4889f2	                            mov rdx, rsi	      2743	linker.c	FUNCTION_34
0x40042e3	          0x4889fe	                            mov rsi, rdi	      2744	linker.c	FUNCTION_34	CALL_2
0x40042e6	      0xbf00000000	                              mov edi, 0	      2744	linker.c	FUNCTION_34	CALL_2
0x40042eb	      0xe900000000	jmp sym.bfd_section_already_linked_table_lookup	      2744	linker.c	FUNCTION_34	CALL_2
_bfd_nolink_bfd_lookup_section_flags	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	2
0x4004fc0	    0x488bbaf00000	            mov rdi, qword [rdx + 0xf0] 	      3440	linker.c	FUNCTION_56	CALL_1
0x4004fc7	      0xe900000000	                           jmp 0x4004fcc	      3440	linker.c	FUNCTION_56	CALL_1
_bfd_nolink_bfd_relax_section	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	1
0x4004fa0	      0xe900000000	                           jmp 0x4004fa5	      3419	linker.c	FUNCTION_54	CALL_1
_bfd_generic_link_just_syms	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,0	8
0x4000e70	         0xfb74724	           movzx eax, word [rdi + 0x24] 	       821	linker.c	FUNCTION_13
0x4000e74	    0x48c747680000	               mov qword [rdi + 0x68], 0	       822	linker.c	FUNCTION_13
0x4000e7c	        0x66257ffc	                          and ax, 0xfc7f	       821	linker.c	FUNCTION_13
0x4000e80	          0x80cc02	                                or ah, 2	       821	linker.c	FUNCTION_13
0x4000e83	        0x66894724	               mov word [rdi + 0x24], ax	       821	linker.c	FUNCTION_13
0x4000e87	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       823	linker.c	FUNCTION_13
0x4000e8b	        0x48894760	             mov qword [rdi + 0x60], rax	       823	linker.c	FUNCTION_13
0x4000e8f	              0xc3	                                     ret	       823	linker.c	FUNCTION_13
bfd_generic_define_common_symbol	functions,0:WHILE,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0:CALL,3	61
0x4004bc0	            0x4157	                                push r15	      3076	linker.c	FUNCTION_45
0x4004bc2	            0x4156	                                push r14	      3076	linker.c	FUNCTION_45
0x4004bc4	            0x4155	                                push r13	      3076	linker.c	FUNCTION_45
0x4004bc6	            0x4154	                                push r12	      3076	linker.c	FUNCTION_45
0x4004bc8	          0x4989d4	                            mov r12, rdx	      3076	linker.c	FUNCTION_45
0x4004bcb	              0x55	                                push rbp	      3076	linker.c	FUNCTION_45
0x4004bcc	              0x53	                                push rbx	      3076	linker.c	FUNCTION_45
0x4004bcd	          0x4889fb	                            mov rbx, rdi	      3076	linker.c	FUNCTION_45
0x4004bd0	        0x4883ec08	                              sub rsp, 8	      3076	linker.c	FUNCTION_45
0x4004bd4	          0x4885d2	                           test rdx, rdx	      3081	linker.c	FUNCTION_45	CALL_1
0x4004bd7	            0x7406	                            je 0x4004bdf	      3081	linker.c	FUNCTION_45	CALL_1
0x4004bd9	        0x807a1805	                cmp byte [rdx + 0x18], 5	      3081	linker.c	FUNCTION_45	CALL_1
0x4004bdd	            0x740f	                            je 0x4004bee	      3081	linker.c	FUNCTION_45	CALL_1
0x4004bdf	      0xbe090c0000	                          mov esi, 0xc09	      3081	linker.c	FUNCTION_45	CALL_1
0x4004be4	      0xbf00000000	                              mov edi, 0	      3081	linker.c	FUNCTION_45	CALL_1
0x4004be9	      0xe800000000	                          call 0x4004bee	      3081	linker.c	FUNCTION_45	CALL_1
0x4004bee	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      3084	linker.c	FUNCTION_45
0x4004bf3	          0x4889df	                            mov rdi, rbx	      3089	linker.c	FUNCTION_45	CALL_2
0x4004bf6	      0x4d8b6c2430	            mov r13, qword [r12 + 0x30] 	      3083	linker.c	FUNCTION_45
0x4004bfb	          0x448b30	                   mov r14d, dword [rax]	      3084	linker.c	FUNCTION_45
0x4004bfe	        0x488b6808	                mov rbp, qword [rax + 8]	      3085	linker.c	FUNCTION_45
0x4004c02	      0xe800000000	                          call 0x4004c07	      3089	linker.c	FUNCTION_45	CALL_2
0x4004c07	          0x4489f1	                           mov ecx, r14d	      3089	linker.c	FUNCTION_45	CALL_2
0x4004c0a	            0xd3e0	                             shl eax, cl	      3089	linker.c	FUNCTION_45	CALL_2
0x4004c0c	          0x4189c7	                           mov r15d, eax	      3089	linker.c	FUNCTION_45	CALL_2
0x4004c0f	          0x4c89fb	                            mov rbx, r15	      3089	linker.c	FUNCTION_45	CALL_2
0x4004c12	          0x48f7db	                                 neg rbx	      3089	linker.c	FUNCTION_45	CALL_2
0x4004c15	            0x85c0	                           test eax, eax	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c17	            0x740b	                            je 0x4004c24	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c19	          0x4c89f8	                            mov rax, r15	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c1c	          0x4821d8	                            and rax, rbx	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c1f	          0x4939c7	                            cmp r15, rax	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c22	            0x740f	                            je 0x4004c33	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c24	      0xbe120c0000	                          mov esi, 0xc12	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c29	      0xbf00000000	                              mov edi, 0	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c2e	      0xe800000000	                          call 0x4004c33	      3090	linker.c	FUNCTION_45	CALL_3
0x4004c33	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3092	linker.c	FUNCTION_45
0x4004c37	      0x498d4407ff	                lea rax, [r15 + rax - 1]	      3092	linker.c	FUNCTION_45
0x4004c3c	          0x4821d8	                            and rax, rbx	      3092	linker.c	FUNCTION_45
0x4004c3f	        0x443b7570	           cmp r14d, dword [rbp + 0x70] 	      3095	linker.c	FUNCTION_45	IF_1
0x4004c43	        0x48894538	            mov qword [rbp + 0x38], rax 	      3092	linker.c	FUNCTION_45
0x4004c47	            0x7604	                           jbe 0x4004c4d	      3095	linker.c	FUNCTION_45	IF_1
0x4004c49	        0x44897570	           mov dword [rbp + 0x70], r14d 	      3096	linker.c	FUNCTION_45	IF_1
0x4004c4d	      0x4989442430	             mov qword [r12 + 0x30], rax	      3101	linker.c	FUNCTION_45
0x4004c52	          0x4c01e8	                            add rax, r13	      3104	linker.c	FUNCTION_45
0x4004c55	      0x49896c2428	             mov qword [r12 + 0x28], rbp	      3100	linker.c	FUNCTION_45
0x4004c5a	    0x41c644241803	                mov byte [r12 + 0x18], 3	      3099	linker.c	FUNCTION_45
0x4004c60	        0x48894538	            mov qword [rbp + 0x38], rax 	      3104	linker.c	FUNCTION_45
0x4004c64	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3109	linker.c	FUNCTION_45
0x4004c67	          0x80e4ef	                            and ah, 0xef	      3109	linker.c	FUNCTION_45
0x4004c6a	          0x83c801	                               or eax, 1	      3109	linker.c	FUNCTION_45
0x4004c6d	          0x894520	            mov dword [rbp + 0x20], eax 	      3109	linker.c	FUNCTION_45
0x4004c70	        0x4883c408	                              add rsp, 8	      3111	linker.c	FUNCTION_45
0x4004c74	      0xb801000000	                              mov eax, 1	      3111	linker.c	FUNCTION_45
0x4004c79	              0x5b	                                 pop rbx	      3111	linker.c	FUNCTION_45
0x4004c7a	              0x5d	                                 pop rbp	      3111	linker.c	FUNCTION_45
0x4004c7b	            0x415c	                                 pop r12	      3111	linker.c	FUNCTION_45
0x4004c7d	            0x415d	                                 pop r13	      3111	linker.c	FUNCTION_45
0x4004c7f	            0x415e	                                 pop r14	      3111	linker.c	FUNCTION_45
0x4004c81	            0x415f	                                 pop r15	      3111	linker.c	FUNCTION_45
0x4004c83	              0xc3	                                     ret	      3111	linker.c	FUNCTION_45
_bfd_count_link_order_relocs	functions,0:WHILE,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,1:CALL,0	15
0x40042a0	            0x31c0	                            xor eax, eax	      2670	linker.c	FUNCTION_32	FOR_1
0x40042a2	          0x4885ff	                           test rdi, rdi	      2670	linker.c	FUNCTION_32	FOR_1
0x40042a5	            0x7424	                            je 0x40042cb	      2670	linker.c	FUNCTION_32	FOR_1
0x40042a7	    0x660f1f840000	                    nop word [rax + rax]	      2670	linker.c	FUNCTION_32	FOR_1
0x40042b0	          0x8b4f08	                mov ecx, dword [rdi + 8]	      2670	linker.c	FUNCTION_32	FOR_1
0x40042b3	          0x488b3f	                    mov rdi, qword [rdi]	      2670	linker.c	FUNCTION_32	FOR_1
0x40042b6	          0x8d51fd	                      lea edx, [rcx - 3]	      2670	linker.c	FUNCTION_32	FOR_1
0x40042b9	          0x83fa02	                              cmp edx, 2	      2670	linker.c	FUNCTION_32	FOR_1
0x40042bc	           0xf92c2	                                 setb dl	      2670	linker.c	FUNCTION_32	FOR_1
0x40042bf	           0xfb6d2	                           movzx edx, dl	      2670	linker.c	FUNCTION_32	FOR_1
0x40042c2	             0x1d0	                            add eax, edx	      2670	linker.c	FUNCTION_32	FOR_1
0x40042c4	          0x4885ff	                           test rdi, rdi	      2670	linker.c	FUNCTION_32	FOR_1
0x40042c7	            0x75e7	                           jne 0x40042b0	      2670	linker.c	FUNCTION_32	FOR_1
0x40042c9	            0xf3c3	                                     ret	      2670	linker.c	FUNCTION_32	FOR_1
0x40042cb	            0xf3c3	                                     ret	      2678	linker.c	FUNCTION_32
bfd_link_check_relocs	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	3
0x4004f00	        0x488b4708	                mov rax, qword [rdi + 8]	      3324	linker.c	FUNCTION_50	CALL_1
0x4004f04	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      3324	linker.c	FUNCTION_50	CALL_1
0x4004f0b	            0xffe0	                                 jmp rax	      3324	linker.c	FUNCTION_50	CALL_1
bfd_new_link_order	functions,0:WHILE,0:DO,0:ELSE,1:IF,2:SWITCH,0:FOR,0:CALL,1	21
0x40033a0	              0x53	                                push rbx	      2411	linker.c	FUNCTION_28
0x40033a1	          0x4889f3	                            mov rbx, rsi	      2411	linker.c	FUNCTION_28
0x40033a4	      0xbe30000000	                           mov esi, 0x30	      2415	linker.c	FUNCTION_28	CALL_1
0x40033a9	      0xe800000000	                          call 0x40033ae	      2415	linker.c	FUNCTION_28	CALL_1
0x40033ae	          0x4885c0	                           test rax, rax	      2416	linker.c	FUNCTION_28	IF_1
0x40033b1	            0x7435	                            je 0x40033e8	      2416	linker.c	FUNCTION_28	IF_1
0x40033b3	    0xc74008000000	                  mov dword [rax + 8], 0	      2419	linker.c	FUNCTION_28
0x40033ba	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	      2421	linker.c	FUNCTION_28	IF_2
0x40033c1	          0x4885d2	                           test rdx, rdx	      2421	linker.c	FUNCTION_28	IF_2
0x40033c4	            0x7412	                            je 0x40033d8	      2421	linker.c	FUNCTION_28	IF_2
0x40033c6	          0x488902	                    mov qword [rdx], rax	      2422	linker.c	FUNCTION_28	IF_2
0x40033c9	    0x488983100100	            mov qword [rbx + 0x110], rax	      2425	linker.c	FUNCTION_28	ELSE_1
0x40033d0	              0x5b	                                 pop rbx	      2428	linker.c	FUNCTION_28	ELSE_1
0x40033d1	              0xc3	                                     ret	      2428	linker.c	FUNCTION_28	ELSE_1
0x40033d2	    0x660f1f440000	                    nop word [rax + rax]	      2428	linker.c	FUNCTION_28	ELSE_1
0x40033d8	    0x488983080100	            mov qword [rbx + 0x108], rax	      2424	linker.c	FUNCTION_28	ELSE_1
0x40033df	            0xebe8	                           jmp 0x40033c9	      2424	linker.c	FUNCTION_28	ELSE_1
0x40033e1	     0xf1f80000000	                         nop dword [rax]	      2424	linker.c	FUNCTION_28	ELSE_1
0x40033e8	            0x31c0	                            xor eax, eax	      2417	linker.c	FUNCTION_28	IF_1
0x40033ea	              0x5b	                                 pop rbx	      2428	linker.c	FUNCTION_28	ELSE_1
0x40033eb	              0xc3	                                     ret	      2428	linker.c	FUNCTION_28	ELSE_1
_bfd_generic_link_check_relocs	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,0	2
0x4004f10	      0xb801000000	                              mov eax, 1	      3347	linker.c	FUNCTION_51
0x4004f15	              0xc3	                                     ret	      3347	linker.c	FUNCTION_51
bfd_wrapped_link_hash_lookup	functions,0:WHILE,0:DO,0:ELSE,0:IF,6:SWITCH,0:FOR,0:CALL,16	164
0x40002b0	            0x4157	                                push r15	       525	linker.c	FUNCTION_4
0x40002b2	            0x4156	                                push r14	       525	linker.c	FUNCTION_4
0x40002b4	          0x4189ce	                           mov r14d, ecx	       525	linker.c	FUNCTION_4
0x40002b7	            0x4155	                                push r13	       525	linker.c	FUNCTION_4
0x40002b9	            0x4154	                                push r12	       525	linker.c	FUNCTION_4
0x40002bb	          0x4989f4	                            mov r12, rsi	       525	linker.c	FUNCTION_4
0x40002be	              0x55	                                push rbp	       525	linker.c	FUNCTION_4
0x40002bf	              0x53	                                push rbx	       525	linker.c	FUNCTION_4
0x40002c0	          0x4489cd	                            mov ebp, r9d	       525	linker.c	FUNCTION_4
0x40002c3	          0x4889d3	                            mov rbx, rdx	       525	linker.c	FUNCTION_4
0x40002c6	        0x4883ec18	                           sub rsp, 0x18	       525	linker.c	FUNCTION_4
0x40002ca	        0x488b4640	            mov rax, qword [rsi + 0x40] 	       528	linker.c	FUNCTION_4	IF_1
0x40002ce	          0x4885c0	                           test rax, rax	       528	linker.c	FUNCTION_4	IF_1
0x40002d1	     0xf8407010000	                            je 0x40003de	       528	linker.c	FUNCTION_4	IF_1
0x40002d7	        0x440fb62a	                  movzx r13d, byte [rdx]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40002db	        0x488b5708	                mov rdx, qword [rdi + 8]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40002df	        0x443a6a1c	            cmp r13b, byte [rdx + 0x1c] 	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40002e3	     0xf84df000000	                            je 0x40003c8	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40002e9	        0x443a6e09	                cmp r13b, byte [rsi + 9]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40002ed	     0xf84d5000000	                            je 0x40003c8	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40002f3	          0x4989df	                            mov r15, rbx	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40002f6	          0x4531ed	                          xor r13d, r13d	       531	linker.c	FUNCTION_4	IF_1
0x40002f9	            0x31c9	                            xor ecx, ecx	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40002fb	            0x31d2	                            xor edx, edx	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40002fd	          0x4c89fe	                            mov rsi, r15	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000300	          0x4889c7	                            mov rdi, rax	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000303	      0x448944240c	              mov dword [rsp + 0xc], r8d	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000308	      0xe800000000	                          call 0x400030d	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x400030d	          0x4885c0	                           test rax, rax	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000310	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000315	     0xf84bd000000	                            je 0x40003d8	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x400031b	          0x4c89ff	                            mov rdi, r15	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x400031e	      0xe800000000	                          call 0x4000323	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x4000323	        0x488d7809	                      lea rdi, [rax + 9]	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x4000327	      0xe800000000	                          call 0x400032c	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x400032c	          0x4885c0	                           test rax, rax	       553	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x400032f	          0x4889c3	                            mov rbx, rax	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x4000332	     0xf84c0010000	                            je 0x40004f8	       553	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x4000338	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_76	CALL_3
0x400033b	          0x448828	                    mov byte [rax], r13b	       556	linker.c	FUNCTION_4	IF_1	IF_3
0x400033e	        0xc6400100	                   mov byte [rax + 1], 0	       557	linker.c	FUNCTION_4	IF_1	IF_3
0x4000342	      0xe800000000	                          call 0x4000347	       148	string3.h	FUNCTION_76	CALL_3
0x4000347	    0x48be5f5f7772	            movabs rsi, 0x5f706172775f5f	       148	string3.h	FUNCTION_76	CALL_3
0x4000351	      0x488d7c0307	                lea rdi, [rbx + rax + 7]	       148	string3.h	FUNCTION_76	CALL_3
0x4000356	        0x48893403	              mov qword [rbx + rax], rsi	       148	string3.h	FUNCTION_76	CALL_3
0x400035a	          0x4c89fe	                            mov rsi, r15	       148	string3.h	FUNCTION_76	CALL_3
0x400035d	      0xe800000000	                          call 0x4000362	       148	string3.h	FUNCTION_76	CALL_3
0x4000362	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000367	          0x4531e4	                          xor r12d, r12d	       499	linker.c	FUNCTION_3	IF_1
0x400036a	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x400036d	            0x743c	                            je 0x40003ab	       498	linker.c	FUNCTION_3	IF_1
0x400036f	      0xb901000000	                              mov ecx, 1	       501	linker.c	FUNCTION_3
0x4000374	          0x4489f2	                           mov edx, r14d	       501	linker.c	FUNCTION_3
0x4000377	          0x4889de	                            mov rsi, rbx	       501	linker.c	FUNCTION_3
0x400037a	      0xe800000000	                          call 0x400037f	       501	linker.c	FUNCTION_3
0x400037f	            0x85ed	                           test ebp, ebp	       504	linker.c	FUNCTION_3	IF_2
0x4000381	            0x7425	                            je 0x40003a8	       504	linker.c	FUNCTION_3	IF_2
0x4000383	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x4000386	            0x7420	                            je 0x40003a8	       504	linker.c	FUNCTION_3	IF_2
0x4000388	         0xfb67018	           movzx esi, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400038c	          0x8d56fa	                      lea edx, [rsi - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400038f	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000392	            0x7714	                            ja 0x40003a8	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000394	         0xf1f4000	                         nop dword [rax]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000398	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400039c	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40003a0	          0x8d51fa	                      lea edx, [rcx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40003a3	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40003a6	            0x76f0	                           jbe 0x4000398	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40003a8	          0x4989c4	                            mov r12, rax	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40003ab	          0x4889df	                            mov rdi, rbx	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x40003ae	      0xe800000000	                          call 0x40003b3	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x40003b3	        0x4883c418	                           add rsp, 0x18	       597	linker.c	FUNCTION_4
0x40003b7	          0x4c89e0	                            mov rax, r12	       597	linker.c	FUNCTION_4
0x40003ba	              0x5b	                                 pop rbx	       597	linker.c	FUNCTION_4
0x40003bb	              0x5d	                                 pop rbp	       597	linker.c	FUNCTION_4
0x40003bc	            0x415c	                                 pop r12	       597	linker.c	FUNCTION_4
0x40003be	            0x415d	                                 pop r13	       597	linker.c	FUNCTION_4
0x40003c0	            0x415e	                                 pop r14	       597	linker.c	FUNCTION_4
0x40003c2	            0x415f	                                 pop r15	       597	linker.c	FUNCTION_4
0x40003c4	              0xc3	                                     ret	       597	linker.c	FUNCTION_4
0x40003c5	           0xf1f00	                         nop dword [rax]	       597	linker.c	FUNCTION_4
0x40003c8	        0x4c8d7b01	                      lea r15, [rbx + 1]	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x40003cc	      0xe928ffffff	                           jmp 0x40002f9	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x40003d1	     0xf1f80000000	                         nop dword [rax]	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x40003d8	        0x41803f5f	                    cmp byte [r15], 0x5f	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x40003dc	            0x7452	                            je 0x4000430	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x40003de	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       596	linker.c	FUNCTION_4	CALL_16
0x40003e3	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x40003e6	     0xf840c010000	                            je 0x40004f8	       498	linker.c	FUNCTION_3	IF_1
0x40003ec	          0x4885db	                           test rbx, rbx	       498	linker.c	FUNCTION_3	IF_1
0x40003ef	     0xf8403010000	                            je 0x40004f8	       498	linker.c	FUNCTION_3	IF_1
0x40003f5	          0x4489c1	                            mov ecx, r8d	       501	linker.c	FUNCTION_3
0x40003f8	          0x4489f2	                           mov edx, r14d	       501	linker.c	FUNCTION_3
0x40003fb	          0x4889de	                            mov rsi, rbx	       501	linker.c	FUNCTION_3
0x40003fe	      0xe800000000	                          call 0x4000403	       501	linker.c	FUNCTION_3
0x4000403	            0x85ed	                           test ebp, ebp	       504	linker.c	FUNCTION_3	IF_2
0x4000405	            0x7405	                            je 0x400040c	       504	linker.c	FUNCTION_3	IF_2
0x4000407	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x400040a	            0x7510	                           jne 0x400041c	       504	linker.c	FUNCTION_3	IF_2
0x400040c	          0x4989c4	                            mov r12, rax	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400040f	            0xeba2	                           jmp 0x40003b3	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000411	     0xf1f80000000	                         nop dword [rax]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000418	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400041c	         0xfb67018	           movzx esi, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000420	          0x8d56fa	                      lea edx, [rsi - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000423	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000426	            0x76f0	                           jbe 0x4000418	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000428	          0x4989c4	                            mov r12, rax	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400042b	            0xeb86	                           jmp 0x40003b3	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400042d	           0xf1f00	                         nop dword [rax]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000430	      0xbf00000000	                              mov edi, 0	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x4000435	      0xb907000000	                              mov ecx, 7	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x400043a	          0x4c89fe	                            mov rsi, r15	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x400043d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x400043f	            0x759d	                           jne 0x40003de	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x4000441	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x4000446	        0x4983c707	                              add r15, 7	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x400044a	            0x31c9	                            xor ecx, ecx	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x400044c	            0x31d2	                            xor edx, edx	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x400044e	          0x4c89fe	                            mov rsi, r15	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x4000451	      0x448944240c	              mov dword [rsp + 0xc], r8d	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x4000456	      0xe800000000	                          call 0x400045b	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x400045b	          0x4885c0	                           test rax, rax	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x400045e	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x4000463	     0xf8475ffffff	                            je 0x40003de	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x4000469	          0x4c89ff	                            mov rdi, r15	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x400046c	      0xe800000000	                          call 0x4000471	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x4000471	        0x488d7802	                      lea rdi, [rax + 2]	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x4000475	      0xe800000000	                          call 0x400047a	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x400047a	          0x4885c0	                           test rax, rax	       582	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x400047d	          0x4889c3	                            mov rbx, rax	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x4000480	            0x7476	                            je 0x40004f8	       582	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x4000482	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_76	CALL_3
0x4000485	          0x448828	                    mov byte [rax], r13b	       585	linker.c	FUNCTION_4	IF_1	IF_5
0x4000488	        0xc6400100	                   mov byte [rax + 1], 0	       586	linker.c	FUNCTION_4	IF_1	IF_5
0x400048c	          0x4c89fe	                            mov rsi, r15	       148	string3.h	FUNCTION_76	CALL_3
0x400048f	      0xe800000000	                          call 0x4000494	       148	string3.h	FUNCTION_76	CALL_3
0x4000494	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000499	          0x4531e4	                          xor r12d, r12d	       499	linker.c	FUNCTION_3	IF_1
0x400049c	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x400049f	     0xf8406ffffff	                            je 0x40003ab	       498	linker.c	FUNCTION_3	IF_1
0x40004a5	      0xb901000000	                              mov ecx, 1	       501	linker.c	FUNCTION_3
0x40004aa	          0x4489f2	                           mov edx, r14d	       501	linker.c	FUNCTION_3
0x40004ad	          0x4889de	                            mov rsi, rbx	       501	linker.c	FUNCTION_3
0x40004b0	      0xe800000000	                          call 0x40004b5	       501	linker.c	FUNCTION_3
0x40004b5	            0x85ed	                           test ebp, ebp	       504	linker.c	FUNCTION_3	IF_2
0x40004b7	     0xf84ebfeffff	                            je 0x40003a8	       504	linker.c	FUNCTION_3	IF_2
0x40004bd	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x40004c0	     0xf84e2feffff	                            je 0x40003a8	       504	linker.c	FUNCTION_3	IF_2
0x40004c6	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004ca	          0x8d51fa	                      lea edx, [rcx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004cd	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004d0	     0xf87d2feffff	                            ja 0x40003a8	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004e0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004e4	         0xfb67018	           movzx esi, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004e8	          0x8d56fa	                      lea edx, [rsi - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004eb	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004ee	            0x76f0	                           jbe 0x40004e0	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004f0	      0xe9b3feffff	                           jmp 0x40003a8	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004f5	           0xf1f00	                         nop dword [rax]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x40004f8	          0x4531e4	                          xor r12d, r12d	       554	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x40004fb	      0xe9b3feffff	                           jmp 0x40003b3	       554	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
bfd_generic_define_start_stop	functions,0:WHILE,0:DO,0:ELSE,0:IF,1:SWITCH,0:FOR,0:CALL,1	37
0x4004ca0	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	      3163	linker.c	FUNCTION_47	CALL_1
0x4004ca4	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x4004ca7	            0x745f	                            je 0x4004d08	       498	linker.c	FUNCTION_3	IF_1
0x4004ca9	          0x4885f6	                           test rsi, rsi	       498	linker.c	FUNCTION_3	IF_1
0x4004cac	            0x745a	                            je 0x4004d08	       498	linker.c	FUNCTION_3	IF_1
0x4004cae	              0x53	                                push rbx	      3160	linker.c	FUNCTION_47
0x4004caf	            0x31c9	                            xor ecx, ecx	       501	linker.c	FUNCTION_3
0x4004cb1	          0x4889d3	                            mov rbx, rdx	       501	linker.c	FUNCTION_3
0x4004cb4	            0x31d2	                            xor edx, edx	       501	linker.c	FUNCTION_3
0x4004cb6	      0xe800000000	                          call 0x4004cbb	       501	linker.c	FUNCTION_3
0x4004cbb	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x4004cbe	            0x7440	                            je 0x4004d00	       504	linker.c	FUNCTION_3	IF_2
0x4004cc0	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004cc4	          0x8d51fa	                      lea edx, [rcx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004cc7	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004cca	            0x7715	                            ja 0x4004ce1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004ccc	         0xf1f4000	                         nop dword [rax]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004cd0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004cd4	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004cd8	          0x8d71fa	                      lea esi, [rcx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004cdb	        0x4080fe01	                              cmp sil, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004cdf	            0x76ef	                           jbe 0x4004cd0	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4004ce1	          0x83e901	                              sub ecx, 1	      3165	linker.c	FUNCTION_47	IF_1
0x4004ce4	          0x80f901	                               cmp cl, 1	      3165	linker.c	FUNCTION_47	IF_1
0x4004ce7	            0x7717	                            ja 0x4004d00	      3165	linker.c	FUNCTION_47	IF_1
0x4004ce9	        0xc6401803	                mov byte [rax + 0x18], 3	      3168	linker.c	FUNCTION_47	IF_1
0x4004ced	        0x48895828	             mov qword [rax + 0x28], rbx	      3169	linker.c	FUNCTION_47	IF_1
0x4004cf1	    0x48c740300000	               mov qword [rax + 0x30], 0	      3170	linker.c	FUNCTION_47	IF_1
0x4004cf9	              0x5b	                                 pop rbx	      3174	linker.c	FUNCTION_47
0x4004cfa	              0xc3	                                     ret	      3174	linker.c	FUNCTION_47
0x4004cfb	       0xf1f440000	                   nop dword [rax + rax]	      3174	linker.c	FUNCTION_47
0x4004d00	            0x31c0	                            xor eax, eax	      3173	linker.c	FUNCTION_47
0x4004d02	              0x5b	                                 pop rbx	      3174	linker.c	FUNCTION_47
0x4004d03	              0xc3	                                     ret	      3174	linker.c	FUNCTION_47
0x4004d04	         0xf1f4000	                         nop dword [rax]	      3174	linker.c	FUNCTION_47
0x4004d08	            0x31c0	                            xor eax, eax	      3173	linker.c	FUNCTION_47
0x4004d0a	              0xc3	                                     ret	      3174	linker.c	FUNCTION_47
_bfd_nolink_bfd_get_relocated_section_contents	functions,0:WHILE,0:DO,0:ELSE,0:IF,0:SWITCH,0:FOR,0:CALL,1	1
0x4004fb0	      0xe900000000	                           jmp 0x4004fb5	      3431	linker.c	FUNCTION_55	CALL_1
