add_debug_prefix_map	ELSE,0:WHILE,0:IF,1:SWITCH,0:DO,0:functions,0:CALL,7:FOR,0	41
0x4000040	            0x4154	                                push r12	        45	remap.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        45	remap.c	FUNCTION_1
0x4000043	      0xbe3d000000	                           mov esi, 0x3d	        50	remap.c	FUNCTION_1	CALL_1
0x4000048	              0x53	                                push rbx	        45	remap.c	FUNCTION_1
0x4000049	          0x4989fc	                            mov r12, rdi	        45	remap.c	FUNCTION_1
0x400004c	      0xe800000000	                          call 0x4000051	        50	remap.c	FUNCTION_1	CALL_1
0x4000051	          0x4885c0	                           test rax, rax	        51	remap.c	FUNCTION_1	IF_1
0x4000054	            0x745d	                            je 0x40000b3	        51	remap.c	FUNCTION_1	IF_1
0x4000056	      0xbf28000000	                           mov edi, 0x28	        56	remap.c	FUNCTION_1	CALL_4
0x400005b	          0x4889c3	                            mov rbx, rax	        56	remap.c	FUNCTION_1	CALL_4
0x400005e	      0xe800000000	                          call 0x4000063	        56	remap.c	FUNCTION_1	CALL_4
0x4000063	          0x4c89e7	                            mov rdi, r12	        57	remap.c	FUNCTION_1	CALL_5
0x4000066	          0x4889c5	                            mov rbp, rax	        56	remap.c	FUNCTION_1	CALL_4
0x4000069	      0xe800000000	                          call 0x400006e	        57	remap.c	FUNCTION_1	CALL_5
0x400006e	          0x4889da	                            mov rdx, rbx	        59	remap.c	FUNCTION_1
0x4000071	        0x4883c301	                              add rbx, 1	        61	remap.c	FUNCTION_1
0x4000075	        0x48894500	                    mov qword [rbp], rax	        58	remap.c	FUNCTION_1
0x4000079	          0x4c29e2	                            sub rdx, r12	        59	remap.c	FUNCTION_1
0x400007c	          0x4889df	                            mov rdi, rbx	        62	remap.c	FUNCTION_1	CALL_6
0x400007f	        0x48895510	            mov qword [rbp + 0x10], rdx 	        59	remap.c	FUNCTION_1
0x4000083	        0xc6041000	                 mov byte [rax + rdx], 0	        60	remap.c	FUNCTION_1
0x4000087	      0xe800000000	                          call 0x400008c	        62	remap.c	FUNCTION_1	CALL_6
0x400008c	          0x4889df	                            mov rdi, rbx	        63	remap.c	FUNCTION_1	CALL_7
0x400008f	        0x48894508	                mov qword [rbp + 8], rax	        62	remap.c	FUNCTION_1	CALL_6
0x4000093	      0xe800000000	                          call 0x4000098	        63	remap.c	FUNCTION_1	CALL_7
0x4000098	        0x48894518	            mov qword [rbp + 0x18], rax 	        63	remap.c	FUNCTION_1	CALL_7
0x400009c	    0x488b05000000	            mov rax, qword [0x040000a3] 	        64	remap.c	FUNCTION_1
0x40000a3	    0x48892d000000	            mov qword [0x040000aa], rbp 	        65	remap.c	FUNCTION_1
0x40000aa	        0x48894520	            mov qword [rbp + 0x20], rax 	        64	remap.c	FUNCTION_1
0x40000ae	              0x5b	                                 pop rbx	        66	remap.c	FUNCTION_1
0x40000af	              0x5d	                                 pop rbp	        66	remap.c	FUNCTION_1
0x40000b0	            0x415c	                                 pop r12	        66	remap.c	FUNCTION_1
0x40000b2	              0xc3	                                     ret	        66	remap.c	FUNCTION_1
0x40000b3	      0xbe00000000	                              mov esi, 0	        53	remap.c	FUNCTION_1	IF_1	CALL_3
0x40000b8	            0x31ff	                            xor edi, edi	        53	remap.c	FUNCTION_1	IF_1	CALL_3
0x40000ba	      0xba05000000	                              mov edx, 5	        53	remap.c	FUNCTION_1	IF_1	CALL_3
0x40000bf	      0xe800000000	                          call 0x40000c4	        53	remap.c	FUNCTION_1	IF_1	CALL_3
0x40000c4	          0x4c89e6	                            mov rsi, r12	        53	remap.c	FUNCTION_1	IF_1	CALL_3
0x40000c7	          0x4889c7	                            mov rdi, rax	        53	remap.c	FUNCTION_1	IF_1	CALL_3
0x40000ca	            0x31c0	                            xor eax, eax	        53	remap.c	FUNCTION_1	IF_1	CALL_3
0x40000cc	      0xe800000000	                          call 0x40000d1	        53	remap.c	FUNCTION_1	IF_1	CALL_3
remap_debug_filename	ELSE,0:WHILE,0:IF,1:SWITCH,0:DO,0:functions,0:CALL,3:FOR,1	32
0x40000e0	              0x55	                                push rbp	        74	remap.c	FUNCTION_2
0x40000e1	              0x53	                                push rbx	        74	remap.c	FUNCTION_2
0x40000e2	          0x4889fd	                            mov rbp, rdi	        74	remap.c	FUNCTION_2
0x40000e5	        0x4883ec08	                              sub rsp, 8	        74	remap.c	FUNCTION_2
0x40000e9	    0x488b1d000000	            mov rbx, qword [0x040000f0] 	        77	remap.c	FUNCTION_2	FOR_1
0x40000f0	          0x4885db	                           test rbx, rbx	        77	remap.c	FUNCTION_2	FOR_1
0x40000f3	            0x7514	                           jne 0x4000109	        77	remap.c	FUNCTION_2	FOR_1
0x40000f5	            0xeb41	                           jmp 0x4000138	        77	remap.c	FUNCTION_2	FOR_1
0x40000f7	    0x660f1f840000	                    nop word [rax + rax]	        77	remap.c	FUNCTION_2	FOR_1
0x4000100	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	        77	remap.c	FUNCTION_2	FOR_1
0x4000104	          0x4885db	                           test rbx, rbx	        77	remap.c	FUNCTION_2	FOR_1
0x4000107	            0x742f	                            je 0x4000138	        77	remap.c	FUNCTION_2	FOR_1
0x4000109	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	        78	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400010d	          0x488b33	                    mov rsi, qword [rbx]	        78	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000110	          0x4889ef	                            mov rdi, rbp	        78	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000113	      0xe800000000	                          call 0x4000118	        78	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000118	            0x85c0	                           test eax, eax	        78	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400011a	            0x75e4	                           jne 0x4000100	        78	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400011c	          0x4889ee	                            mov rsi, rbp	        81	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x400011f	        0x488b7b08	                mov rdi, qword [rbx + 8]	        81	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000123	        0x48037310	             add rsi, qword [rbx + 0x10]	        81	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000127	        0x4883c408	                              add rsp, 8	        85	remap.c	FUNCTION_2
0x400012b	            0x31d2	                            xor edx, edx	        81	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x400012d	              0x5b	                                 pop rbx	        85	remap.c	FUNCTION_2
0x400012e	              0x5d	                                 pop rbp	        85	remap.c	FUNCTION_2
0x400012f	      0xe900000000	                           jmp 0x4000134	        81	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000134	         0xf1f4000	                         nop dword [rax]	        81	remap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000138	        0x4883c408	                              add rsp, 8	        85	remap.c	FUNCTION_2
0x400013c	          0x4889ef	                            mov rdi, rbp	        84	remap.c	FUNCTION_2	CALL_3
0x400013f	              0x5b	                                 pop rbx	        85	remap.c	FUNCTION_2
0x4000140	              0x5d	                                 pop rbp	        85	remap.c	FUNCTION_2
0x4000141	      0xe900000000	                    jmp section_end..bss	        84	remap.c	FUNCTION_2	CALL_3
