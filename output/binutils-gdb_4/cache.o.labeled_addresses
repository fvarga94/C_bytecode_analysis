bfd_cache_close_all	FOR,0:IF,0:SWITCH,0:DO,0:ELSE,0:WHILE,1:functions,0:CALL,1	52
0x40003d0	              0x55	                                push rbp	       574	cache.c	FUNCTION_18
0x40003d1	              0x53	                                push rbx	       574	cache.c	FUNCTION_18
0x40003d2	      0xbb01000000	                              mov ebx, 1	       577	cache.c	FUNCTION_18	WHILE_1
0x40003d7	        0x4883ec08	                              sub rsp, 8	       574	cache.c	FUNCTION_18
0x40003db	    0x488b2d000000	            mov rbp, qword [0x040003e2] 	       577	cache.c	FUNCTION_18	WHILE_1
0x40003e2	          0x4885ed	                           test rbp, rbp	       577	cache.c	FUNCTION_18	WHILE_1
0x40003e5	            0x745b	                            je 0x4000442	       577	cache.c	FUNCTION_18	WHILE_1
0x40003e7	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       577	cache.c	FUNCTION_18	WHILE_1
0x40003eb	            0xeb06	                           jmp 0x40003f3	       577	cache.c	FUNCTION_18	WHILE_1
0x40003ed	           0xf1f00	                         nop dword [rax]	       577	cache.c	FUNCTION_18	WHILE_1
0x40003f0	          0x83e301	                              and ebx, 1	       549	cache.c	FUNCTION_17	IF_2
0x40003f3	    0x48817d180000	               cmp qword [rbp + 0x18], 0	       546	cache.c	FUNCTION_17	IF_1
0x40003fb	            0x75f3	                           jne 0x40003f0	       546	cache.c	FUNCTION_17	IF_1
0x40003fd	          0x4885ff	                           test rdi, rdi	       549	cache.c	FUNCTION_17	IF_2
0x4000400	            0x74ee	                            je 0x40003f0	       549	cache.c	FUNCTION_17	IF_2
0x4000402	      0xe800000000	                          call 0x4000407	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x4000407	          0x83e301	                              and ebx, 1	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x400040a	            0x85c0	                           test eax, eax	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x400040c	            0x7542	                           jne 0x4000450	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x400040e	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       152	cache.c	FUNCTION_3
0x4000412	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       152	cache.c	FUNCTION_3
0x4000416	        0x48895028	             mov qword [rax + 0x28], rdx	       152	cache.c	FUNCTION_3
0x400041a	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       153	cache.c	FUNCTION_3
0x400041e	        0x48894220	             mov qword [rdx + 0x20], rax	       153	cache.c	FUNCTION_3
0x4000422	    0x488b05000000	            mov rax, qword [0x04000429] 	       154	cache.c	FUNCTION_3	IF_1
0x4000429	          0x4839c5	                            cmp rbp, rax	       154	cache.c	FUNCTION_3	IF_1
0x400042c	            0x7432	                            je 0x4000460	       154	cache.c	FUNCTION_3	IF_1
0x400042e	    0x832d00000000	               sub dword [0x04000435], 1	       180	cache.c	FUNCTION_4
0x4000435	          0x4885c0	                           test rax, rax	       577	cache.c	FUNCTION_18	WHILE_1
0x4000438	    0x48c745100000	               mov qword [rbp + 0x10], 0	       179	cache.c	FUNCTION_4
0x4000440	            0x753e	                           jne 0x4000480	       577	cache.c	FUNCTION_18	WHILE_1
0x4000442	        0x4883c408	                              add rsp, 8	       581	cache.c	FUNCTION_18
0x4000446	            0x89d8	                            mov eax, ebx	       581	cache.c	FUNCTION_18
0x4000448	              0x5b	                                 pop rbx	       581	cache.c	FUNCTION_18
0x4000449	              0x5d	                                 pop rbp	       581	cache.c	FUNCTION_18
0x400044a	              0xc3	                                     ret	       581	cache.c	FUNCTION_18
0x400044b	       0xf1f440000	                   nop dword [rax + rax]	       581	cache.c	FUNCTION_18
0x4000450	      0xbf01000000	                              mov edi, 1	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x4000455	            0x31db	                            xor ebx, ebx	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x4000457	      0xe800000000	                          call 0x400045c	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x400045c	            0xebb0	                           jmp 0x400040e	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x400045e	            0x6690	                                     nop	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x4000460	          0x4839d5	                            cmp rbp, rdx	       157	cache.c	FUNCTION_3	IF_1	IF_2
0x4000463	            0x740c	                            je 0x4000471	       157	cache.c	FUNCTION_3	IF_1	IF_2
0x4000465	    0x488915000000	            mov qword [0x0400046c], rdx 	       156	cache.c	FUNCTION_3	IF_1
0x400046c	          0x4889d0	                            mov rax, rdx	       156	cache.c	FUNCTION_3	IF_1
0x400046f	            0xebbd	                           jmp 0x400042e	       156	cache.c	FUNCTION_3	IF_1
0x4000471	    0x48c705000000	               mov qword [0x0400047c], 0	       158	cache.c	FUNCTION_3	IF_1	IF_2
0x400047c	            0x31c0	                            xor eax, eax	       158	cache.c	FUNCTION_3	IF_1	IF_2
0x400047e	            0xebae	                           jmp 0x400042e	       158	cache.c	FUNCTION_3	IF_1	IF_2
0x4000480	          0x4889c5	                            mov rbp, rax	       158	cache.c	FUNCTION_3	IF_1	IF_2
0x4000483	      0xe95fffffff	                           jmp 0x40003e7	       158	cache.c	FUNCTION_3	IF_1	IF_2
bfd_cache_init	FOR,0:IF,2:SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,4	134
0x40000d0	              0x55	                                push rbp	       514	cache.c	FUNCTION_16
0x40000d1	              0x53	                                push rbx	       514	cache.c	FUNCTION_16
0x40000d2	          0x4889fd	                            mov rbp, rdi	       514	cache.c	FUNCTION_16
0x40000d5	        0x4883ec28	                           sub rsp, 0x28	       514	cache.c	FUNCTION_16
0x40000d9	    0x64488b042528	                mov rax, qword fs:[0x28]	       514	cache.c	FUNCTION_16
0x40000e2	      0x4889442418	             mov qword [rsp + 0x18], rax	       514	cache.c	FUNCTION_16
0x40000e7	            0x31c0	                            xor eax, eax	       514	cache.c	FUNCTION_16
0x40000e9	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       515	cache.c	FUNCTION_16	CALL_1
0x40000ee	     0xf840c020000	                            je 0x4000300	       515	cache.c	FUNCTION_16	CALL_1
0x40000f4	    0x8b0500000000	            mov eax, dword [0x040000fa] 	        78	cache.c	FUNCTION_1	IF_1
0x40000fa	            0x85c0	                           test eax, eax	        78	cache.c	FUNCTION_1	IF_1
0x40000fc	            0x7472	                            je 0x4000170	        78	cache.c	FUNCTION_1	IF_1
0x40000fe	    0x390500000000	            cmp dword [0x04000104], eax 	       516	cache.c	FUNCTION_16	IF_1	CALL_2
0x4000104	    0x488b05000000	            mov rax, qword [0x0400010b] 	       193	cache.c	FUNCTION_5	IF_1
0x400010b	     0xf8d9f000000	                           jge 0x40001b0	       516	cache.c	FUNCTION_16	IF_1	CALL_2
0x4000111	          0x4885c0	                           test rax, rax	       132	cache.c	FUNCTION_2	IF_1
0x4000114	    0x48c745180000	               mov qword [rbp + 0x18], 0	       521	cache.c	FUNCTION_16
0x400011c	     0xf84ce010000	                            je 0x40002f0	       132	cache.c	FUNCTION_2	IF_1
0x4000122	        0x48894528	            mov qword [rbp + 0x28], rax 	       139	cache.c	FUNCTION_2	ELSE_1
0x4000126	        0x488b4020	            mov rax, qword [rax + 0x20] 	       140	cache.c	FUNCTION_2	ELSE_1
0x400012a	        0x48894520	            mov qword [rbp + 0x20], rax 	       140	cache.c	FUNCTION_2	ELSE_1
0x400012e	        0x48896828	             mov qword [rax + 0x28], rbp	       141	cache.c	FUNCTION_2	ELSE_1
0x4000132	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       142	cache.c	FUNCTION_2	ELSE_1
0x4000136	        0x48896820	             mov qword [rax + 0x20], rbp	       142	cache.c	FUNCTION_2	ELSE_1
0x400013a	    0x830500000000	               add dword [0x04000141], 1	       523	cache.c	FUNCTION_16
0x4000141	    0x48892d000000	            mov qword [0x04000148], rbp 	       144	cache.c	FUNCTION_2
0x4000148	      0xb801000000	                              mov eax, 1	       524	cache.c	FUNCTION_16
0x400014d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       525	cache.c	FUNCTION_16
0x4000152	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       525	cache.c	FUNCTION_16
0x400015b	     0xf85c7010000	                           jne 0x4000328	       525	cache.c	FUNCTION_16
0x4000161	        0x4883c428	                           add rsp, 0x28	       525	cache.c	FUNCTION_16
0x4000165	              0x5b	                                 pop rbx	       525	cache.c	FUNCTION_16
0x4000166	              0x5d	                                 pop rbp	       525	cache.c	FUNCTION_16
0x4000167	              0xc3	                                     ret	       525	cache.c	FUNCTION_16
0x4000168	     0xf1f84000000	                   nop dword [rax + rax]	       525	cache.c	FUNCTION_16
0x4000170	          0x4889e6	                            mov rsi, rsp	        99	cache.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000173	      0xbf07000000	                              mov edi, 7	        99	cache.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000178	      0xe800000000	                          call 0x400017d	        99	cache.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x400017d	            0x85c0	                           test eax, eax	        99	cache.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x400017f	     0xf85db000000	                           jne 0x4000260	        99	cache.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000185	        0x488b0424	                    mov rax, qword [rsp]	       100	cache.c	FUNCTION_1	IF_1	IF_2
0x4000189	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       100	cache.c	FUNCTION_1	IF_1	IF_2
0x400018d	     0xf84cd000000	                            je 0x4000260	       100	cache.c	FUNCTION_1	IF_1	IF_2
0x4000193	        0x48c1e803	                              shr rax, 3	       105	cache.c	FUNCTION_1	IF_1	CALL_2
0x4000197	      0xba0a000000	                            mov edx, 0xa	       111	cache.c	FUNCTION_1	IF_1
0x400019c	          0x83f80a	                            cmp eax, 0xa	       111	cache.c	FUNCTION_1	IF_1
0x400019f	           0xf4cc2	                          cmovl eax, edx	       111	cache.c	FUNCTION_1	IF_1
0x40001a2	    0x890500000000	            mov dword [0x040001a8], eax 	       111	cache.c	FUNCTION_1	IF_1
0x40001a8	      0xe951ffffff	                           jmp 0x40000fe	       111	cache.c	FUNCTION_1	IF_1
0x40001ad	           0xf1f00	                         nop dword [rax]	       111	cache.c	FUNCTION_1	IF_1
0x40001b0	          0x4885c0	                           test rax, rax	       193	cache.c	FUNCTION_5	IF_1
0x40001b3	     0xf842f010000	                            je 0x40002e8	       193	cache.c	FUNCTION_5	IF_1
0x40001b9	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       197	cache.c	FUNCTION_5	ELSE_1	FOR_1
0x40001bd	        0xf6434702	               test byte [rbx + 0x47], 2	       197	cache.c	FUNCTION_5	ELSE_1	FOR_1
0x40001c1	            0x740f	                            je 0x40001d2	       197	cache.c	FUNCTION_5	ELSE_1	FOR_1
0x40001c3	            0xeb23	                           jmp 0x40001e8	       197	cache.c	FUNCTION_5	ELSE_1	FOR_1
0x40001c5	           0xf1f00	                         nop dword [rax]	       197	cache.c	FUNCTION_5	ELSE_1	FOR_1
0x40001c8	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       199	cache.c	FUNCTION_5	ELSE_1	FOR_1
0x40001cc	        0xf6434702	               test byte [rbx + 0x47], 2	       197	cache.c	FUNCTION_5	ELSE_1	FOR_1
0x40001d0	            0x7516	                           jne 0x40001e8	       197	cache.c	FUNCTION_5	ELSE_1	FOR_1
0x40001d2	          0x4839d8	                            cmp rax, rbx	       201	cache.c	FUNCTION_5	ELSE_1	FOR_1	IF_2
0x40001d5	            0x75f1	                           jne 0x40001c8	       201	cache.c	FUNCTION_5	ELSE_1	FOR_1	IF_2
0x40001d7	    0x48c745180000	               mov qword [rbp + 0x18], 0	       521	cache.c	FUNCTION_16
0x40001df	      0xe93effffff	                           jmp 0x4000122	       521	cache.c	FUNCTION_16
0x40001e4	         0xf1f4000	                         nop dword [rax]	       521	cache.c	FUNCTION_16
0x40001e8	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       215	cache.c	FUNCTION_5	CALL_1
0x40001ec	      0xe800000000	                          call 0x40001f1	       215	cache.c	FUNCTION_5	CALL_1
0x40001f1	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x40001f5	        0x48894330	             mov qword [rbx + 0x30], rax	       215	cache.c	FUNCTION_5	CALL_1
0x40001f9	      0xe800000000	                          call 0x40001fe	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x40001fe	            0x85c0	                           test eax, eax	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x4000200	            0x757e	                           jne 0x4000280	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x4000202	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       152	cache.c	FUNCTION_3
0x4000206	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       152	cache.c	FUNCTION_3
0x400020a	      0xb901000000	                              mov ecx, 1	       170	cache.c	FUNCTION_4	IF_1
0x400020f	        0x48895028	             mov qword [rax + 0x28], rdx	       152	cache.c	FUNCTION_3
0x4000213	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       153	cache.c	FUNCTION_3
0x4000217	        0x48894220	             mov qword [rdx + 0x20], rax	       153	cache.c	FUNCTION_3
0x400021b	    0x488b05000000	            mov rax, qword [0x04000222] 	       154	cache.c	FUNCTION_3	IF_1
0x4000222	          0x4839c3	                            cmp rbx, rax	       154	cache.c	FUNCTION_3	IF_1
0x4000225	     0xf85e9000000	                           jne 0x4000314	       154	cache.c	FUNCTION_3	IF_1
0x400022b	          0x4839d3	                            cmp rbx, rdx	       157	cache.c	FUNCTION_3	IF_1	IF_2
0x400022e	     0xf848d000000	                            je 0x40002c1	       157	cache.c	FUNCTION_3	IF_1	IF_2
0x4000234	    0x832d00000000	               sub dword [0x0400023b], 1	       180	cache.c	FUNCTION_4
0x400023b	            0x85c9	                           test ecx, ecx	       518	cache.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400023d	    0x488915000000	            mov qword [0x04000244], rdx 	       156	cache.c	FUNCTION_3	IF_1
0x4000244	    0x48c743100000	               mov qword [rbx + 0x10], 0	       179	cache.c	FUNCTION_4
0x400024c	     0xf85db000000	                           jne 0x400032d	       518	cache.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4000252	            0x31c0	                            xor eax, eax	       519	cache.c	FUNCTION_16	IF_1	IF_2
0x4000254	      0xe9f4feffff	                           jmp 0x400014d	       519	cache.c	FUNCTION_16	IF_1	IF_2
0x4000259	     0xf1f80000000	                         nop dword [rax]	       519	cache.c	FUNCTION_16	IF_1	IF_2
0x4000260	      0xbf04000000	                              mov edi, 4	       105	cache.c	FUNCTION_1	IF_1	CALL_2
0x4000265	      0xe800000000	                          call 0x400026a	       105	cache.c	FUNCTION_1	IF_1	CALL_2
0x400026a	        0x488d5007	                      lea rdx, [rax + 7]	       105	cache.c	FUNCTION_1	IF_1	CALL_2
0x400026e	          0x4885c0	                           test rax, rax	       105	cache.c	FUNCTION_1	IF_1	CALL_2
0x4000271	        0x480f48c2	                          cmovs rax, rdx	       105	cache.c	FUNCTION_1	IF_1	CALL_2
0x4000275	      0xe919ffffff	                           jmp 0x4000193	       105	cache.c	FUNCTION_1	IF_1	CALL_2
0x400027a	    0x660f1f440000	                    nop word [rax + rax]	       105	cache.c	FUNCTION_1	IF_1	CALL_2
0x4000280	      0xbf01000000	                              mov edi, 1	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x4000285	      0xe800000000	                          call 0x400028a	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x400028a	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       152	cache.c	FUNCTION_3
0x400028e	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       152	cache.c	FUNCTION_3
0x4000292	    0x483b1d000000	            cmp rbx, qword [0x04000299] 	       154	cache.c	FUNCTION_3	IF_1
0x4000299	        0x48895028	             mov qword [rax + 0x28], rdx	       152	cache.c	FUNCTION_3
0x400029d	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       153	cache.c	FUNCTION_3
0x40002a1	        0x48894220	             mov qword [rdx + 0x20], rax	       153	cache.c	FUNCTION_3
0x40002a5	     0xf848a000000	                            je 0x4000335	       154	cache.c	FUNCTION_3	IF_1
0x40002ab	    0x48c743100000	               mov qword [rbx + 0x10], 0	       179	cache.c	FUNCTION_4
0x40002b3	    0x832d00000000	               sub dword [0x040002ba], 1	       180	cache.c	FUNCTION_4
0x40002ba	            0x31c0	                            xor eax, eax	       519	cache.c	FUNCTION_16	IF_1	IF_2
0x40002bc	      0xe98cfeffff	                           jmp 0x400014d	       519	cache.c	FUNCTION_16	IF_1	IF_2
0x40002c1	    0x832d00000000	               sub dword [0x040002c8], 1	       180	cache.c	FUNCTION_4
0x40002c8	            0x85c9	                           test ecx, ecx	       518	cache.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40002ca	    0x48c705000000	               mov qword [0x040002d5], 0	       158	cache.c	FUNCTION_3	IF_1	IF_2
0x40002d5	    0x48c743100000	               mov qword [rbx + 0x10], 0	       179	cache.c	FUNCTION_4
0x40002dd	     0xf846fffffff	                            je 0x4000252	       518	cache.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40002e3	       0xf1f440000	                   nop dword [rax + rax]	       518	cache.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x40002e8	    0x48c745180000	               mov qword [rbp + 0x18], 0	       521	cache.c	FUNCTION_16
0x40002f0	        0x48896d28	            mov qword [rbp + 0x28], rbp 	       134	cache.c	FUNCTION_2	IF_1
0x40002f4	        0x48896d20	            mov qword [rbp + 0x20], rbp 	       135	cache.c	FUNCTION_2	IF_1
0x40002f8	      0xe93dfeffff	                           jmp 0x400013a	       135	cache.c	FUNCTION_2	IF_1
0x40002fd	           0xf1f00	                         nop dword [rax]	       135	cache.c	FUNCTION_2	IF_1
0x4000300	      0xbe03020000	                          mov esi, 0x203	       515	cache.c	FUNCTION_16	CALL_1
0x4000305	      0xbf00000000	                              mov edi, 0	       515	cache.c	FUNCTION_16	CALL_1
0x400030a	      0xe800000000	                          call 0x400030f	       515	cache.c	FUNCTION_16	CALL_1
0x400030f	      0xe9e0fdffff	                           jmp 0x40000f4	       515	cache.c	FUNCTION_16	CALL_1
0x4000314	    0x48c743100000	               mov qword [rbx + 0x10], 0	       179	cache.c	FUNCTION_4
0x400031c	    0x832d00000000	               sub dword [0x04000323], 1	       180	cache.c	FUNCTION_4
0x4000323	      0xe9e9fdffff	                           jmp 0x4000111	       180	cache.c	FUNCTION_4
0x4000328	      0xe800000000	                          call 0x400032d	       525	cache.c	FUNCTION_16
0x400032d	          0x4889d0	                            mov rax, rdx	       525	cache.c	FUNCTION_16
0x4000330	      0xe9a2feffff	                           jmp 0x40001d7	       525	cache.c	FUNCTION_16
0x4000335	            0x31c9	                            xor ecx, ecx	       173	cache.c	FUNCTION_4	ELSE_1
0x4000337	      0xe9effeffff	                           jmp 0x400022b	       173	cache.c	FUNCTION_4	ELSE_1
cache_bflush	FOR,0:IF,2:SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,2	65
0x4000bd0	        0x4883ec18	                           sub rsp, 0x18	       416	cache.c	FUNCTION_13
0x4000bd4	    0x488b0d000000	            mov rcx, qword [0x04000bdb] 	       418	cache.c	FUNCTION_13
0x4000bdb	          0x4839f9	                            cmp rcx, rdi	       418	cache.c	FUNCTION_13
0x4000bde	     0xf8484000000	                            je 0x4000c68	       418	cache.c	FUNCTION_13
0x4000be4	        0xf6474601	               test byte [rdi + 0x46], 1	       241	cache.c	FUNCTION_6	IF_1
0x4000be8	          0x4889fa	                            mov rdx, rdi	       241	cache.c	FUNCTION_6	IF_1
0x4000beb	            0x7414	                            je 0x4000c01	       241	cache.c	FUNCTION_6	IF_1
0x4000bed	      0xe9bd000000	                           jmp 0x4000caf	       241	cache.c	FUNCTION_6	IF_1
0x4000bf2	    0x660f1f440000	                    nop word [rax + rax]	       241	cache.c	FUNCTION_6	IF_1
0x4000bf8	        0xf6404801	               test byte [rax + 0x48], 1	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000bfc	            0x750f	                           jne 0x4000c0d	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000bfe	          0x4889c2	                            mov rdx, rax	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000c01	    0x488b82d00000	            mov rax, qword [rdx + 0xd0] 	       244	cache.c	FUNCTION_6	WHILE_1
0x4000c08	          0x4885c0	                           test rax, rax	       244	cache.c	FUNCTION_6	WHILE_1
0x4000c0b	            0x75eb	                           jne 0x4000bf8	       244	cache.c	FUNCTION_6	WHILE_1
0x4000c0d	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       248	cache.c	FUNCTION_6	IF_2
0x4000c11	          0x4885ff	                           test rdi, rdi	       248	cache.c	FUNCTION_6	IF_2
0x4000c14	     0xf848e000000	                            je 0x4000ca8	       248	cache.c	FUNCTION_6	IF_2
0x4000c1a	          0x4839d1	                            cmp rcx, rdx	       251	cache.c	FUNCTION_6	IF_2	IF_3
0x4000c1d	            0x7438	                            je 0x4000c57	       251	cache.c	FUNCTION_6	IF_2	IF_3
0x4000c1f	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       152	cache.c	FUNCTION_3
0x4000c23	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       152	cache.c	FUNCTION_3
0x4000c27	          0x4885c9	                           test rcx, rcx	       132	cache.c	FUNCTION_2	IF_1
0x4000c2a	        0x48897028	             mov qword [rax + 0x28], rsi	       152	cache.c	FUNCTION_3
0x4000c2e	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       153	cache.c	FUNCTION_3
0x4000c32	        0x48894620	             mov qword [rsi + 0x20], rax	       153	cache.c	FUNCTION_3
0x4000c36	            0x7460	                            je 0x4000c98	       132	cache.c	FUNCTION_2	IF_1
0x4000c38	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       140	cache.c	FUNCTION_2	ELSE_1
0x4000c3c	        0x48894a28	             mov qword [rdx + 0x28], rcx	       139	cache.c	FUNCTION_2	ELSE_1
0x4000c40	        0x48894220	             mov qword [rdx + 0x20], rax	       140	cache.c	FUNCTION_2	ELSE_1
0x4000c44	        0x48895028	             mov qword [rax + 0x28], rdx	       141	cache.c	FUNCTION_2	ELSE_1
0x4000c48	        0x488b4228	            mov rax, qword [rdx + 0x28] 	       142	cache.c	FUNCTION_2	ELSE_1
0x4000c4c	        0x48895020	             mov qword [rax + 0x20], rdx	       142	cache.c	FUNCTION_2	ELSE_1
0x4000c50	    0x488915000000	            mov qword [0x04000c57], rdx 	       144	cache.c	FUNCTION_2
0x4000c57	      0xe800000000	                          call 0x4000c5c	       422	cache.c	FUNCTION_13	CALL_1
0x4000c5c	            0x85c0	                           test eax, eax	       423	cache.c	FUNCTION_13	IF_2
0x4000c5e	            0x781c	                            js 0x4000c7c	       423	cache.c	FUNCTION_13	IF_2
0x4000c60	        0x4883c418	                           add rsp, 0x18	       426	cache.c	FUNCTION_13
0x4000c64	              0xc3	                                     ret	       426	cache.c	FUNCTION_13
0x4000c65	           0xf1f00	                         nop dword [rax]	       426	cache.c	FUNCTION_13
0x4000c68	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       418	cache.c	FUNCTION_13
0x4000c6c	            0x31c0	                            xor eax, eax	       421	cache.c	FUNCTION_13	IF_1
0x4000c6e	          0x4885ff	                           test rdi, rdi	       420	cache.c	FUNCTION_13	IF_1
0x4000c71	            0x74ed	                            je 0x4000c60	       420	cache.c	FUNCTION_13	IF_1
0x4000c73	      0xe800000000	                          call 0x4000c78	       422	cache.c	FUNCTION_13	CALL_1
0x4000c78	            0x85c0	                           test eax, eax	       423	cache.c	FUNCTION_13	IF_2
0x4000c7a	            0x79e4	                           jns 0x4000c60	       423	cache.c	FUNCTION_13	IF_2
0x4000c7c	      0xbf01000000	                              mov edi, 1	       424	cache.c	FUNCTION_13	CALL_2
0x4000c81	        0x8944240c	              mov dword [rsp + 0xc], eax	       424	cache.c	FUNCTION_13	CALL_2
0x4000c85	      0xe800000000	                          call 0x4000c8a	       424	cache.c	FUNCTION_13	CALL_2
0x4000c8a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       424	cache.c	FUNCTION_13	CALL_2
0x4000c8e	        0x4883c418	                           add rsp, 0x18	       426	cache.c	FUNCTION_13
0x4000c92	              0xc3	                                     ret	       426	cache.c	FUNCTION_13
0x4000c93	       0xf1f440000	                   nop dword [rax + rax]	       426	cache.c	FUNCTION_13
0x4000c98	        0x48895228	             mov qword [rdx + 0x28], rdx	       134	cache.c	FUNCTION_2	IF_1
0x4000c9c	        0x48895220	             mov qword [rdx + 0x20], rdx	       135	cache.c	FUNCTION_2	IF_1
0x4000ca0	            0xebae	                           jmp 0x4000c50	       135	cache.c	FUNCTION_2	IF_1
0x4000ca2	    0x660f1f440000	                    nop word [rax + rax]	       135	cache.c	FUNCTION_2	IF_1
0x4000ca8	            0x31c0	                            xor eax, eax	       421	cache.c	FUNCTION_13	IF_1
0x4000caa	        0x4883c418	                           add rsp, 0x18	       426	cache.c	FUNCTION_13
0x4000cae	              0xc3	                                     ret	       426	cache.c	FUNCTION_13
0x4000caf	      0xba00000000	                              mov edx, 0	       242	cache.c	FUNCTION_6	CALL_1
0x4000cb4	      0xbef2000000	                           mov esi, 0xf2	       242	cache.c	FUNCTION_6	CALL_1
0x4000cb9	      0xbf00000000	                              mov edi, 0	       242	cache.c	FUNCTION_6	CALL_1
0x4000cbe	      0xe800000000	                          call 0x4000cc3	       242	cache.c	FUNCTION_6	CALL_1
cache_bclose	FOR,0:IF,0:SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1	36
0x4000040	            0x31c0	                            xor eax, eax	       546	cache.c	FUNCTION_17	IF_1
0x4000042	    0x48817f180000	               cmp qword [rdi + 0x18], 0	       546	cache.c	FUNCTION_17	IF_1
0x400004a	            0x7404	                            je 0x4000050	       546	cache.c	FUNCTION_17	IF_1
0x400004c	              0xc3	                                     ret	       412	cache.c	FUNCTION_12
0x400004d	           0xf1f00	                         nop dword [rax]	       412	cache.c	FUNCTION_12
0x4000050	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       549	cache.c	FUNCTION_17	IF_2
0x4000054	          0x4885d2	                           test rdx, rdx	       549	cache.c	FUNCTION_17	IF_2
0x4000057	            0x74f3	                            je 0x400004c	       549	cache.c	FUNCTION_17	IF_2
0x4000059	              0x53	                                push rbx	       410	cache.c	FUNCTION_12
0x400005a	          0x4889fb	                            mov rbx, rdi	       410	cache.c	FUNCTION_12
0x400005d	          0x4889d7	                            mov rdi, rdx	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x4000060	      0xe800000000	                          call 0x4000065	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x4000065	            0x85c0	                           test eax, eax	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x4000067	            0x7537	                           jne 0x40000a0	       169	cache.c	FUNCTION_4	IF_1	CALL_1
0x4000069	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       152	cache.c	FUNCTION_3
0x400006d	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       152	cache.c	FUNCTION_3
0x4000071	    0x483b1d000000	            cmp rbx, qword [0x04000078] 	       154	cache.c	FUNCTION_3	IF_1
0x4000078	        0x48894a28	             mov qword [rdx + 0x28], rcx	       152	cache.c	FUNCTION_3
0x400007c	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       153	cache.c	FUNCTION_3
0x4000080	        0x48895120	             mov qword [rcx + 0x20], rdx	       153	cache.c	FUNCTION_3
0x4000084	            0x7432	                            je 0x40000b8	       154	cache.c	FUNCTION_3	IF_1
0x4000086	    0x48c743100000	               mov qword [rbx + 0x10], 0	       179	cache.c	FUNCTION_4
0x400008e	    0x832d00000000	               sub dword [0x04000095], 1	       180	cache.c	FUNCTION_4
0x4000095	              0x5b	                                 pop rbx	       412	cache.c	FUNCTION_12
0x4000096	              0xc3	                                     ret	       412	cache.c	FUNCTION_12
0x4000097	    0x660f1f840000	                    nop word [rax + rax]	       412	cache.c	FUNCTION_12
0x40000a0	      0xbf01000000	                              mov edi, 1	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x40000a5	      0xe800000000	                          call 0x40000aa	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x40000aa	      0xb8ffffffff	                     mov eax, 0xffffffff	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x40000af	            0xebb8	                           jmp 0x4000069	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x40000b1	     0xf1f80000000	                         nop dword [rax]	       174	cache.c	FUNCTION_4	ELSE_1	CALL_2
0x40000b8	          0x4839cb	                            cmp rbx, rcx	       156	cache.c	FUNCTION_3	IF_1
0x40000bb	      0xba00000000	                              mov edx, 0	       156	cache.c	FUNCTION_3	IF_1
0x40000c0	        0x480f44ca	                          cmove rcx, rdx	       156	cache.c	FUNCTION_3	IF_1
0x40000c4	    0x48890d000000	            mov qword [0x040000cb], rcx 	       156	cache.c	FUNCTION_3	IF_1
0x40000cb	            0xebb9	                           jmp 0x4000086	       156	cache.c	FUNCTION_3	IF_1
cache_bread	FOR,0:IF,3:SWITCH,0:DO,0:ELSE,0:WHILE,1:functions,0:CALL,1	85
0x4000a10	            0x4157	                                push r15	       356	cache.c	FUNCTION_10
0x4000a12	            0x4156	                                push r14	       356	cache.c	FUNCTION_10
0x4000a14	            0x4155	                                push r13	       356	cache.c	FUNCTION_10
0x4000a16	            0x4154	                                push r12	       356	cache.c	FUNCTION_10
0x4000a18	              0x55	                                push rbp	       356	cache.c	FUNCTION_10
0x4000a19	              0x53	                                push rbx	       356	cache.c	FUNCTION_10
0x4000a1a	        0x4883ec18	                           sub rsp, 0x18	       356	cache.c	FUNCTION_10
0x4000a1e	          0x4885d2	                           test rdx, rdx	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a21	     0xf8ef3000000	                           jle 0x4000b1a	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a27	          0x4889d5	                            mov rbp, rdx	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a2a	      0x4889742408	                mov qword [rsp + 8], rsi	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a2f	          0x4989fc	                            mov r12, rdi	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a32	          0x4531ff	                          xor r15d, r15d	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a35	            0xeb40	                           jmp 0x4000a77	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a37	    0x660f1f840000	                    nop word [rax + rax]	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a40	            0x31f6	                            xor esi, esi	       320	cache.c	FUNCTION_9
0x4000a42	          0x4c89e7	                            mov rdi, r12	       320	cache.c	FUNCTION_9
0x4000a45	      0xe8a6fcffff	        call sym.bfd_cache_lookup_worker	       320	cache.c	FUNCTION_9
0x4000a4a	          0x4989c5	                            mov r13, rax	       320	cache.c	FUNCTION_9
0x4000a4d	          0x4889eb	                            mov rbx, rbp	       365	cache.c	FUNCTION_10	WHILE_1
0x4000a50	      0xb800008000	                       mov eax, 0x800000	       365	cache.c	FUNCTION_10	WHILE_1
0x4000a55	          0x4c29fb	                            sub rbx, r15	       365	cache.c	FUNCTION_10	WHILE_1
0x4000a58	    0x4881fb000080	                       cmp rbx, 0x800000	       365	cache.c	FUNCTION_10	WHILE_1
0x4000a5f	        0x480f4fd8	                          cmovg rbx, rax	       365	cache.c	FUNCTION_10	WHILE_1
0x4000a63	          0x4d85ed	                           test r13, r13	       321	cache.c	FUNCTION_9	IF_2
0x4000a66	            0x7528	                           jne 0x4000a90	       321	cache.c	FUNCTION_9	IF_2
0x4000a68	          0x4d85ff	                           test r15, r15	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000a6b	            0x754e	                           jne 0x4000abb	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000a6d	          0x4885db	                           test rbx, rbx	       384	cache.c	FUNCTION_10	WHILE_1	IF_3
0x4000a70	            0x7f49	                            jg 0x4000abb	       384	cache.c	FUNCTION_10	WHILE_1	IF_3
0x4000a72	          0x4c39fd	                            cmp rbp, r15	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a75	            0x7e44	                           jle 0x4000abb	       362	cache.c	FUNCTION_10	WHILE_1
0x4000a77	    0x4c3b25000000	            cmp r12, qword [0x04000a7e] 	       320	cache.c	FUNCTION_9
0x4000a7e	            0x75c0	                           jne 0x4000a40	       320	cache.c	FUNCTION_9
0x4000a80	      0x4d8b6c2410	            mov r13, qword [r12 + 0x10] 	       320	cache.c	FUNCTION_9
0x4000a85	            0xebc6	                           jmp 0x4000a4d	       320	cache.c	FUNCTION_9
0x4000a87	    0x660f1f840000	                    nop word [rax + rax]	       320	cache.c	FUNCTION_9
0x4000a90	      0x488b442408	                mov rax, qword [rsp + 8]	       295	stdio2.h	FUNCTION_34	CALL_9
0x4000a95	          0x4c89e9	                            mov rcx, r13	       295	stdio2.h	FUNCTION_34	CALL_9
0x4000a98	          0x4889da	                            mov rdx, rbx	       295	stdio2.h	FUNCTION_34	CALL_9
0x4000a9b	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_34	CALL_9
0x4000aa0	        0x4a8d3c38	                    lea rdi, [rax + r15]	       295	stdio2.h	FUNCTION_34	CALL_9
0x4000aa4	      0xe800000000	                          call 0x4000aa9	       295	stdio2.h	FUNCTION_34	CALL_9
0x4000aa9	          0x4839d8	                            cmp rax, rbx	       341	cache.c	FUNCTION_9	IF_4	CALL_5
0x4000aac	          0x4989c6	                            mov r14, rax	       295	stdio2.h	FUNCTION_34	CALL_9
0x4000aaf	            0x7c27	                            jl 0x4000ad8	       341	cache.c	FUNCTION_9	IF_4	CALL_5
0x4000ab1	          0x4885c0	                           test rax, rax	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000ab4	            0x7f1a	                            jg 0x4000ad0	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000ab6	          0x4d85ff	                           test r15, r15	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000ab9	            0x7415	                            je 0x4000ad0	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000abb	        0x4883c418	                           add rsp, 0x18	       389	cache.c	FUNCTION_10
0x4000abf	          0x4c89f8	                            mov rax, r15	       389	cache.c	FUNCTION_10
0x4000ac2	              0x5b	                                 pop rbx	       389	cache.c	FUNCTION_10
0x4000ac3	              0x5d	                                 pop rbp	       389	cache.c	FUNCTION_10
0x4000ac4	            0x415c	                                 pop r12	       389	cache.c	FUNCTION_10
0x4000ac6	            0x415d	                                 pop r13	       389	cache.c	FUNCTION_10
0x4000ac8	            0x415e	                                 pop r14	       389	cache.c	FUNCTION_10
0x4000aca	            0x415f	                                 pop r15	       389	cache.c	FUNCTION_10
0x4000acc	              0xc3	                                     ret	       389	cache.c	FUNCTION_10
0x4000acd	           0xf1f00	                         nop dword [rax]	       389	cache.c	FUNCTION_10
0x4000ad0	          0x4d01f7	                            add r15, r14	       382	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000ad3	            0xeb9d	                           jmp 0x4000a72	       382	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000ad5	           0xf1f00	                         nop dword [rax]	       382	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000ad8	          0x4c89ef	                            mov rdi, r13	       341	cache.c	FUNCTION_9	IF_4	CALL_5
0x4000adb	      0xe800000000	                          call 0x4000ae0	       341	cache.c	FUNCTION_9	IF_4	CALL_5
0x4000ae0	            0x85c0	                           test eax, eax	       341	cache.c	FUNCTION_9	IF_4	CALL_5
0x4000ae2	            0x7524	                           jne 0x4000b08	       341	cache.c	FUNCTION_9	IF_4	CALL_5
0x4000ae4	      0xbf12000000	                           mov edi, 0x12	       350	cache.c	FUNCTION_9	CALL_7
0x4000ae9	      0xe800000000	                          call 0x4000aee	       350	cache.c	FUNCTION_9	CALL_7
0x4000aee	          0x4d85f6	                           test r14, r14	       350	cache.c	FUNCTION_9	CALL_7
0x4000af1	           0xf9fc0	                                 setg al	       350	cache.c	FUNCTION_9	CALL_7
0x4000af4	          0x4d85ff	                           test r15, r15	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000af7	            0x7404	                            je 0x4000afd	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000af9	            0x84c0	                             test al, al	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000afb	            0x74be	                            je 0x4000abb	       381	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000afd	          0x4d01f7	                            add r15, r14	       382	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000b00	            0xebb9	                           jmp 0x4000abb	       382	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000b02	    0x660f1f440000	                    nop word [rax + rax]	       382	cache.c	FUNCTION_10	WHILE_1	IF_2
0x4000b08	      0xbf01000000	                              mov edi, 1	       343	cache.c	FUNCTION_9	IF_4	CALL_6
0x4000b0d	      0xe800000000	                          call 0x4000b12	       343	cache.c	FUNCTION_9	IF_4	CALL_6
0x4000b12	          0x4d85f6	                           test r14, r14	       343	cache.c	FUNCTION_9	IF_4	CALL_6
0x4000b15	           0xf9fc0	                                 setg al	       343	cache.c	FUNCTION_9	IF_4	CALL_6
0x4000b18	            0xebda	                           jmp 0x4000af4	       343	cache.c	FUNCTION_9	IF_4	CALL_6
0x4000b1a	          0x4531ff	                          xor r15d, r15d	       357	cache.c	FUNCTION_10
0x4000b1d	            0xeb9c	                           jmp 0x4000abb	       357	cache.c	FUNCTION_10
cache_bseek	FOR,0:IF,1:SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1	103
0x4000cd0	            0x4156	                                push r14	       289	cache.c	FUNCTION_8
0x4000cd2	            0x4155	                                push r13	       289	cache.c	FUNCTION_8
0x4000cd4	          0x4989f6	                            mov r14, rsi	       289	cache.c	FUNCTION_8
0x4000cd7	            0x4154	                                push r12	       289	cache.c	FUNCTION_8
0x4000cd9	          0x4189d4	                           mov r12d, edx	       289	cache.c	FUNCTION_8
0x4000cdc	    0x488b15000000	            mov rdx, qword [0x04000ce3] 	       290	cache.c	FUNCTION_8
0x4000ce3	              0x55	                                push rbp	       289	cache.c	FUNCTION_8
0x4000ce4	              0x53	                                push rbx	       289	cache.c	FUNCTION_8
0x4000ce5	          0x4839fa	                            cmp rdx, rdi	       290	cache.c	FUNCTION_8
0x4000ce8	     0xf8492000000	                            je 0x4000d80	       290	cache.c	FUNCTION_8
0x4000cee	          0x4531ed	                          xor r13d, r13d	       290	cache.c	FUNCTION_8
0x4000cf1	        0x4183fc01	                             cmp r12d, 1	       290	cache.c	FUNCTION_8
0x4000cf5	          0x4889fd	                            mov rbp, rdi	       290	cache.c	FUNCTION_8
0x4000cf8	        0x410f95c5	                              setne r13b	       290	cache.c	FUNCTION_8
0x4000cfc	          0x4501ed	                          add r13d, r13d	       290	cache.c	FUNCTION_8
0x4000cff	        0xf6474601	               test byte [rdi + 0x46], 1	       241	cache.c	FUNCTION_6	IF_1
0x4000d03	     0xf8516010000	                           jne 0x4000e1f	       241	cache.c	FUNCTION_6	IF_1
0x4000d09	          0x4889fb	                            mov rbx, rdi	       241	cache.c	FUNCTION_6	IF_1
0x4000d0c	            0xeb0b	                           jmp 0x4000d19	       241	cache.c	FUNCTION_6	IF_1
0x4000d0e	            0x6690	                                     nop	       241	cache.c	FUNCTION_6	IF_1
0x4000d10	        0xf6404801	               test byte [rax + 0x48], 1	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000d14	            0x750f	                           jne 0x4000d25	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000d16	          0x4889c3	                            mov rbx, rax	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000d19	    0x488b83d00000	            mov rax, qword [rbx + 0xd0] 	       244	cache.c	FUNCTION_6	WHILE_1
0x4000d20	          0x4885c0	                           test rax, rax	       244	cache.c	FUNCTION_6	WHILE_1
0x4000d23	            0x75eb	                           jne 0x4000d10	       244	cache.c	FUNCTION_6	WHILE_1
0x4000d25	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       248	cache.c	FUNCTION_6	IF_2
0x4000d29	          0x4885ff	                           test rdi, rdi	       248	cache.c	FUNCTION_6	IF_2
0x4000d2c	            0x7472	                            je 0x4000da0	       248	cache.c	FUNCTION_6	IF_2
0x4000d2e	          0x4839da	                            cmp rdx, rbx	       251	cache.c	FUNCTION_6	IF_2	IF_3
0x4000d31	            0x7438	                            je 0x4000d6b	       251	cache.c	FUNCTION_6	IF_2	IF_3
0x4000d33	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       152	cache.c	FUNCTION_3
0x4000d37	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       152	cache.c	FUNCTION_3
0x4000d3b	          0x4885d2	                           test rdx, rdx	       132	cache.c	FUNCTION_2	IF_1
0x4000d3e	        0x48894828	             mov qword [rax + 0x28], rcx	       152	cache.c	FUNCTION_3
0x4000d42	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       153	cache.c	FUNCTION_3
0x4000d46	        0x48894120	             mov qword [rcx + 0x20], rax	       153	cache.c	FUNCTION_3
0x4000d4a	            0x7474	                            je 0x4000dc0	       132	cache.c	FUNCTION_2	IF_1
0x4000d4c	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       140	cache.c	FUNCTION_2	ELSE_1
0x4000d50	        0x48895328	             mov qword [rbx + 0x28], rdx	       139	cache.c	FUNCTION_2	ELSE_1
0x4000d54	        0x48894320	             mov qword [rbx + 0x20], rax	       140	cache.c	FUNCTION_2	ELSE_1
0x4000d58	        0x48895828	             mov qword [rax + 0x28], rbx	       141	cache.c	FUNCTION_2	ELSE_1
0x4000d5c	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       142	cache.c	FUNCTION_2	ELSE_1
0x4000d60	        0x48895820	             mov qword [rax + 0x20], rbx	       142	cache.c	FUNCTION_2	ELSE_1
0x4000d64	    0x48891d000000	            mov qword [0x04000d6b], rbx 	       144	cache.c	FUNCTION_2
0x4000d6b	              0x5b	                                 pop rbx	       294	cache.c	FUNCTION_8
0x4000d6c	          0x4489e2	                           mov edx, r12d	       293	cache.c	FUNCTION_8	CALL_1
0x4000d6f	          0x4c89f6	                            mov rsi, r14	       293	cache.c	FUNCTION_8	CALL_1
0x4000d72	              0x5d	                                 pop rbp	       294	cache.c	FUNCTION_8
0x4000d73	            0x415c	                                 pop r12	       294	cache.c	FUNCTION_8
0x4000d75	            0x415d	                                 pop r13	       294	cache.c	FUNCTION_8
0x4000d77	            0x415e	                                 pop r14	       294	cache.c	FUNCTION_8
0x4000d79	      0xe900000000	                           jmp 0x4000d7e	       293	cache.c	FUNCTION_8	CALL_1
0x4000d7e	            0x6690	                                     nop	       293	cache.c	FUNCTION_8	CALL_1
0x4000d80	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       290	cache.c	FUNCTION_8
0x4000d84	          0x4885ff	                           test rdi, rdi	       291	cache.c	FUNCTION_8	IF_1
0x4000d87	            0x75e2	                           jne 0x4000d6b	       291	cache.c	FUNCTION_8	IF_1
0x4000d89	              0x5b	                                 pop rbx	       294	cache.c	FUNCTION_8
0x4000d8a	      0xb8ffffffff	                     mov eax, 0xffffffff	       294	cache.c	FUNCTION_8
0x4000d8f	              0x5d	                                 pop rbp	       294	cache.c	FUNCTION_8
0x4000d90	            0x415c	                                 pop r12	       294	cache.c	FUNCTION_8
0x4000d92	            0x415d	                                 pop r13	       294	cache.c	FUNCTION_8
0x4000d94	            0x415e	                                 pop r14	       294	cache.c	FUNCTION_8
0x4000d96	              0xc3	                                     ret	       294	cache.c	FUNCTION_8
0x4000d97	    0x660f1f840000	                    nop word [rax + rax]	       294	cache.c	FUNCTION_8
0x4000da0	          0x4889df	                            mov rdi, rbx	       262	cache.c	FUNCTION_6	IF_5	CALL_5
0x4000da3	      0xe800000000	                          call 0x4000da8	       262	cache.c	FUNCTION_6	IF_5	CALL_5
0x4000da8	          0x4885c0	                           test rax, rax	       262	cache.c	FUNCTION_6	IF_5	CALL_5
0x4000dab	            0x743a	                            je 0x4000de7	       262	cache.c	FUNCTION_6	IF_5	CALL_5
0x4000dad	          0x4585ed	                         test r13d, r13d	       264	cache.c	FUNCTION_6	ELSE_1	IF_6
0x4000db0	            0x7418	                            je 0x4000dca	       264	cache.c	FUNCTION_6	ELSE_1	IF_6
0x4000db2	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       270	cache.c	FUNCTION_6	ELSE_2
0x4000db6	            0xebcc	                           jmp 0x4000d84	       270	cache.c	FUNCTION_6	ELSE_2
0x4000db8	     0xf1f84000000	                   nop dword [rax + rax]	       270	cache.c	FUNCTION_6	ELSE_2
0x4000dc0	        0x48895b28	             mov qword [rbx + 0x28], rbx	       134	cache.c	FUNCTION_2	IF_1
0x4000dc4	        0x48895b20	             mov qword [rbx + 0x20], rbx	       135	cache.c	FUNCTION_2	IF_1
0x4000dc8	            0xeb9a	                           jmp 0x4000d64	       135	cache.c	FUNCTION_2	IF_1
0x4000dca	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000dce	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000dd2	            0x31d2	                            xor edx, edx	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000dd4	      0xe800000000	                          call 0x4000dd9	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000dd9	            0x85c0	                           test eax, eax	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000ddb	            0x74d5	                            je 0x4000db2	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000ddd	      0xbf01000000	                              mov edi, 1	       268	cache.c	FUNCTION_6	ELSE_1	IF_6
0x4000de2	      0xe800000000	                          call 0x4000de7	       268	cache.c	FUNCTION_6	ELSE_1	IF_6
0x4000de7	      0xe800000000	                          call 0x4000dec	       273	cache.c	FUNCTION_6	CALL_9
0x4000dec	            0x89c7	                            mov edi, eax	       273	cache.c	FUNCTION_6	CALL_9
0x4000dee	      0xe800000000	                          call 0x4000df3	       273	cache.c	FUNCTION_6	CALL_9
0x4000df3	      0xba05000000	                              mov edx, 5	       273	cache.c	FUNCTION_6	CALL_9
0x4000df8	          0x4889c3	                            mov rbx, rax	       273	cache.c	FUNCTION_6	CALL_9
0x4000dfb	      0xbe00000000	                              mov esi, 0	       273	cache.c	FUNCTION_6	CALL_9
0x4000e00	      0xbf00000000	                              mov edi, 0	       273	cache.c	FUNCTION_6	CALL_9
0x4000e05	      0xe800000000	                          call 0x4000e0a	       273	cache.c	FUNCTION_6	CALL_9
0x4000e0a	          0x4889da	                            mov rdx, rbx	       273	cache.c	FUNCTION_6	CALL_9
0x4000e0d	          0x4889c7	                            mov rdi, rax	       273	cache.c	FUNCTION_6	CALL_9
0x4000e10	          0x4889ee	                            mov rsi, rbp	       273	cache.c	FUNCTION_6	CALL_9
0x4000e13	            0x31c0	                            xor eax, eax	       273	cache.c	FUNCTION_6	CALL_9
0x4000e15	      0xe800000000	                          call 0x4000e1a	       273	cache.c	FUNCTION_6	CALL_9
0x4000e1a	      0xe96affffff	                           jmp 0x4000d89	       273	cache.c	FUNCTION_6	CALL_9
0x4000e1f	      0xba00000000	                              mov edx, 0	       242	cache.c	FUNCTION_6	CALL_1
0x4000e24	      0xbef2000000	                           mov esi, 0xf2	       242	cache.c	FUNCTION_6	CALL_1
0x4000e29	      0xbf00000000	                              mov edi, 0	       242	cache.c	FUNCTION_6	CALL_1
0x4000e2e	      0xe800000000	                          call 0x4000e33	       242	cache.c	FUNCTION_6	CALL_1
cache_bmmap	FOR,0:IF,5:SWITCH,0:DO,0:ELSE,2:WHILE,0:functions,0:CALL,6	89
0x4000830	            0x4157	                                push r15	       451	cache.c	FUNCTION_15
0x4000832	            0x4156	                                push r14	       451	cache.c	FUNCTION_15
0x4000834	            0x4155	                                push r13	       451	cache.c	FUNCTION_15
0x4000836	            0x4154	                                push r12	       451	cache.c	FUNCTION_15
0x4000838	              0x55	                                push rbp	       451	cache.c	FUNCTION_15
0x4000839	              0x53	                                push rbx	       451	cache.c	FUNCTION_15
0x400083a	        0x4883ec18	                           sub rsp, 0x18	       451	cache.c	FUNCTION_15
0x400083e	        0xf6474601	               test byte [rdi + 0x46], 1	       454	cache.c	FUNCTION_15	IF_1
0x4000842	        0x48893424	                    mov qword [rsp], rsi	       451	cache.c	FUNCTION_15
0x4000846	     0xf8530010000	                           jne 0x400097c	       454	cache.c	FUNCTION_15	IF_1
0x400084c	    0x483b3d000000	            cmp rdi, qword [0x04000853] 	       464	cache.c	FUNCTION_15	ELSE_1
0x4000853	          0x4989fc	                            mov r12, rdi	       464	cache.c	FUNCTION_15	ELSE_1
0x4000856	          0x4989d7	                            mov r15, rdx	       464	cache.c	FUNCTION_15	ELSE_1
0x4000859	          0x4189cd	                           mov r13d, ecx	       464	cache.c	FUNCTION_15	ELSE_1
0x400085c	          0x4589c6	                           mov r14d, r8d	       464	cache.c	FUNCTION_15	ELSE_1
0x400085f	          0x4c89cd	                             mov rbp, r9	       464	cache.c	FUNCTION_15	ELSE_1
0x4000862	     0xf84f0000000	                            je 0x4000958	       464	cache.c	FUNCTION_15	ELSE_1
0x4000868	      0xbe04000000	                              mov esi, 4	       464	cache.c	FUNCTION_15	ELSE_1
0x400086d	      0xe87efeffff	        call sym.bfd_cache_lookup_worker	       464	cache.c	FUNCTION_15	ELSE_1
0x4000872	          0x4889c7	                            mov rdi, rax	       464	cache.c	FUNCTION_15	ELSE_1
0x4000875	          0x4885ff	                           test rdi, rdi	       465	cache.c	FUNCTION_15	ELSE_1	IF_2
0x4000878	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       466	cache.c	FUNCTION_15	ELSE_1	IF_2
0x400087f	     0xf8484000000	                            je 0x4000909	       465	cache.c	FUNCTION_15	ELSE_1	IF_2
0x4000885	    0x488b1d000000	            mov rbx, qword [0x0400088c] 	       468	cache.c	FUNCTION_15	ELSE_1	IF_3
0x400088c	          0x4885db	                           test rbx, rbx	       468	cache.c	FUNCTION_15	ELSE_1	IF_3
0x400088f	     0xf848b000000	                            je 0x4000920	       468	cache.c	FUNCTION_15	ELSE_1	IF_3
0x4000895	    0x498b8424d000	            mov rax, qword [r12 + 0xd0] 	       472	cache.c	FUNCTION_15	ELSE_1	IF_4
0x400089d	          0x4885c0	                           test rax, rax	       472	cache.c	FUNCTION_15	ELSE_1	IF_4
0x40008a0	            0x740a	                            je 0x40008ac	       472	cache.c	FUNCTION_15	ELSE_1	IF_4
0x40008a2	        0xf6404801	               test byte [rax + 0x48], 1	       473	cache.c	FUNCTION_15	ELSE_1	IF_4	CALL_3
0x40008a6	     0xf849c000000	                            je 0x4000948	       473	cache.c	FUNCTION_15	ELSE_1	IF_4	CALL_3
0x40008ac	          0x4889d8	                            mov rax, rbx	       477	cache.c	FUNCTION_15	ELSE_1
0x40008af	        0x498d141f	                    lea rdx, [r15 + rbx]	       478	cache.c	FUNCTION_15	ELSE_1
0x40008b3	          0x4889e9	                            mov rcx, rbp	       478	cache.c	FUNCTION_15	ELSE_1
0x40008b6	          0x48f7d0	                                 not rax	       477	cache.c	FUNCTION_15	ELSE_1
0x40008b9	          0x4989c1	                             mov r9, rax	       477	cache.c	FUNCTION_15	ELSE_1
0x40008bc	          0x4921e9	                             and r9, rbp	       477	cache.c	FUNCTION_15	ELSE_1
0x40008bf	          0x4c29c9	                             sub rcx, r9	       478	cache.c	FUNCTION_15	ELSE_1
0x40008c2	      0x4c894c2408	                 mov qword [rsp + 8], r9	       478	cache.c	FUNCTION_15	ELSE_1
0x40008c7	        0x4c8d3c11	                    lea r15, [rcx + rdx]	       478	cache.c	FUNCTION_15	ELSE_1
0x40008cb	          0x4921c7	                            and r15, rax	       478	cache.c	FUNCTION_15	ELSE_1
0x40008ce	      0xe800000000	                          call 0x40008d3	       480	cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40008d3	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       480	cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40008d8	        0x488b3c24	                    mov rdi, qword [rsp]	       480	cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40008dc	          0x4189c0	                            mov r8d, eax	       480	cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40008df	          0x4489f1	                           mov ecx, r14d	       480	cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40008e2	          0x4489ea	                           mov edx, r13d	       480	cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40008e5	          0x4c89fe	                            mov rsi, r15	       480	cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40008e8	      0xe800000000	                          call 0x40008ed	       480	cache.c	FUNCTION_15	ELSE_1	CALL_5
0x40008ed	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       481	cache.c	FUNCTION_15	ELSE_1	IF_5
0x40008f1	            0x7475	                            je 0x4000968	       481	cache.c	FUNCTION_15	ELSE_1	IF_5
0x40008f3	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       485	cache.c	FUNCTION_15	ELSE_1	ELSE_2
0x40008f8	          0x4821eb	                            and rbx, rbp	       487	cache.c	FUNCTION_15	ELSE_1	ELSE_2
0x40008fb	          0x488902	                    mov qword [rdx], rax	       485	cache.c	FUNCTION_15	ELSE_1	ELSE_2
0x40008fe	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	       486	cache.c	FUNCTION_15	ELSE_1	ELSE_2
0x4000903	          0x4801d8	                            add rax, rbx	       487	cache.c	FUNCTION_15	ELSE_1	ELSE_2
0x4000906	          0x4c893a	                    mov qword [rdx], r15	       486	cache.c	FUNCTION_15	ELSE_1	ELSE_2
0x4000909	        0x4883c418	                           add rsp, 0x18	       493	cache.c	FUNCTION_15
0x400090d	              0x5b	                                 pop rbx	       493	cache.c	FUNCTION_15
0x400090e	              0x5d	                                 pop rbp	       493	cache.c	FUNCTION_15
0x400090f	            0x415c	                                 pop r12	       493	cache.c	FUNCTION_15
0x4000911	            0x415d	                                 pop r13	       493	cache.c	FUNCTION_15
0x4000913	            0x415e	                                 pop r14	       493	cache.c	FUNCTION_15
0x4000915	            0x415f	                                 pop r15	       493	cache.c	FUNCTION_15
0x4000917	              0xc3	                                     ret	       493	cache.c	FUNCTION_15
0x4000918	     0xf1f84000000	                   nop dword [rax + rax]	       493	cache.c	FUNCTION_15
0x4000920	      0x48897c2408	                mov qword [rsp + 8], rdi	       493	cache.c	FUNCTION_15
0x4000925	      0xe800000000	                          call 0x400092a	       469	cache.c	FUNCTION_15	ELSE_1	CALL_2
0x400092a	          0x8d58ff	                      lea ebx, [rax - 1]	       469	cache.c	FUNCTION_15	ELSE_1	CALL_2
0x400092d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       469	cache.c	FUNCTION_15	ELSE_1	CALL_2
0x4000932	          0x4863db	                         movsxd rbx, ebx	       469	cache.c	FUNCTION_15	ELSE_1	CALL_2
0x4000935	    0x48891d000000	            mov qword [0x0400093c], rbx 	       469	cache.c	FUNCTION_15	ELSE_1	CALL_2
0x400093c	      0xe954ffffff	                           jmp 0x4000895	       469	cache.c	FUNCTION_15	ELSE_1	CALL_2
0x4000941	     0xf1f80000000	                         nop dword [rax]	       469	cache.c	FUNCTION_15	ELSE_1	CALL_2
0x4000948	      0x49036c2458	             add rbp, qword [r12 + 0x58]	       474	cache.c	FUNCTION_15	ELSE_1	IF_4
0x400094d	      0xe95affffff	                           jmp 0x40008ac	       474	cache.c	FUNCTION_15	ELSE_1	IF_4
0x4000952	    0x660f1f440000	                    nop word [rax + rax]	       474	cache.c	FUNCTION_15	ELSE_1	IF_4
0x4000958	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       464	cache.c	FUNCTION_15	ELSE_1
0x400095c	      0xe914ffffff	                           jmp 0x4000875	       464	cache.c	FUNCTION_15	ELSE_1
0x4000961	     0xf1f80000000	                         nop dword [rax]	       464	cache.c	FUNCTION_15	ELSE_1
0x4000968	      0xbf01000000	                              mov edi, 1	       482	cache.c	FUNCTION_15	ELSE_1	CALL_6
0x400096d	        0x48890424	                    mov qword [rsp], rax	       482	cache.c	FUNCTION_15	ELSE_1	CALL_6
0x4000971	      0xe800000000	                          call 0x4000976	       482	cache.c	FUNCTION_15	ELSE_1	CALL_6
0x4000976	        0x488b0424	                    mov rax, qword [rsp]	       482	cache.c	FUNCTION_15	ELSE_1	CALL_6
0x400097a	            0xeb8d	                           jmp 0x4000909	       482	cache.c	FUNCTION_15	ELSE_1	CALL_6
0x400097c	      0xba00000000	                              mov edx, 0	       455	cache.c	FUNCTION_15	CALL_1
0x4000981	      0xbec7010000	                          mov esi, 0x1c7	       455	cache.c	FUNCTION_15	CALL_1
0x4000986	      0xbf00000000	                              mov edi, 0	       455	cache.c	FUNCTION_15	CALL_1
0x400098b	      0xe800000000	                    call sym.cache_bstat	       455	cache.c	FUNCTION_15	CALL_1
cache_btell	FOR,0:IF,1:SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,1	49
0x4000b20	    0x488b0d000000	            mov rcx, qword [0x04000b27] 	       281	cache.c	FUNCTION_7
0x4000b27	          0x4889fe	                            mov rsi, rdi	       280	cache.c	FUNCTION_7
0x4000b2a	          0x4839f9	                            cmp rcx, rdi	       281	cache.c	FUNCTION_7
0x4000b2d	            0x7471	                            je 0x4000ba0	       281	cache.c	FUNCTION_7
0x4000b2f	        0xf6474601	               test byte [rdi + 0x46], 1	       241	cache.c	FUNCTION_6	IF_1
0x4000b33	     0xf8581000000	                           jne 0x4000bba	       241	cache.c	FUNCTION_6	IF_1
0x4000b39	          0x4889fa	                            mov rdx, rdi	       241	cache.c	FUNCTION_6	IF_1
0x4000b3c	            0xeb0b	                           jmp 0x4000b49	       241	cache.c	FUNCTION_6	IF_1
0x4000b3e	            0x6690	                                     nop	       241	cache.c	FUNCTION_6	IF_1
0x4000b40	        0xf6404801	               test byte [rax + 0x48], 1	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000b44	            0x750f	                           jne 0x4000b55	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000b46	          0x4889c2	                            mov rdx, rax	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000b49	    0x488b82d00000	            mov rax, qword [rdx + 0xd0] 	       244	cache.c	FUNCTION_6	WHILE_1
0x4000b50	          0x4885c0	                           test rax, rax	       244	cache.c	FUNCTION_6	WHILE_1
0x4000b53	            0x75eb	                           jne 0x4000b40	       244	cache.c	FUNCTION_6	WHILE_1
0x4000b55	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       248	cache.c	FUNCTION_6	IF_2
0x4000b59	          0x4885ff	                           test rdi, rdi	       248	cache.c	FUNCTION_6	IF_2
0x4000b5c	            0x744b	                            je 0x4000ba9	       248	cache.c	FUNCTION_6	IF_2
0x4000b5e	          0x4839d1	                            cmp rcx, rdx	       251	cache.c	FUNCTION_6	IF_2	IF_3
0x4000b61	            0x7438	                            je 0x4000b9b	       251	cache.c	FUNCTION_6	IF_2	IF_3
0x4000b63	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       152	cache.c	FUNCTION_3
0x4000b67	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       152	cache.c	FUNCTION_3
0x4000b6b	          0x4885c9	                           test rcx, rcx	       132	cache.c	FUNCTION_2	IF_1
0x4000b6e	        0x48897028	             mov qword [rax + 0x28], rsi	       152	cache.c	FUNCTION_3
0x4000b72	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       153	cache.c	FUNCTION_3
0x4000b76	        0x48894620	             mov qword [rsi + 0x20], rax	       153	cache.c	FUNCTION_3
0x4000b7a	            0x7434	                            je 0x4000bb0	       132	cache.c	FUNCTION_2	IF_1
0x4000b7c	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       140	cache.c	FUNCTION_2	ELSE_1
0x4000b80	        0x48894a28	             mov qword [rdx + 0x28], rcx	       139	cache.c	FUNCTION_2	ELSE_1
0x4000b84	        0x48894220	             mov qword [rdx + 0x20], rax	       140	cache.c	FUNCTION_2	ELSE_1
0x4000b88	        0x48895028	             mov qword [rax + 0x28], rdx	       141	cache.c	FUNCTION_2	ELSE_1
0x4000b8c	        0x488b4228	            mov rax, qword [rdx + 0x28] 	       142	cache.c	FUNCTION_2	ELSE_1
0x4000b90	        0x48895020	             mov qword [rax + 0x20], rdx	       142	cache.c	FUNCTION_2	ELSE_1
0x4000b94	    0x488915000000	            mov qword [0x04000b9b], rdx 	       144	cache.c	FUNCTION_2
0x4000b9b	      0xe900000000	                           jmp 0x4000ba0	       284	cache.c	FUNCTION_7	CALL_1
0x4000ba0	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       281	cache.c	FUNCTION_7
0x4000ba4	          0x4885ff	                           test rdi, rdi	       282	cache.c	FUNCTION_7	IF_1
0x4000ba7	            0x75f2	                           jne 0x4000b9b	       282	cache.c	FUNCTION_7	IF_1
0x4000ba9	        0x488b4630	            mov rax, qword [rsi + 0x30] 	       283	cache.c	FUNCTION_7	IF_1
0x4000bad	              0xc3	                                     ret	       285	cache.c	FUNCTION_7
0x4000bae	            0x6690	                                     nop	       285	cache.c	FUNCTION_7
0x4000bb0	        0x48895228	             mov qword [rdx + 0x28], rdx	       134	cache.c	FUNCTION_2	IF_1
0x4000bb4	        0x48895220	             mov qword [rdx + 0x20], rdx	       135	cache.c	FUNCTION_2	IF_1
0x4000bb8	            0xebda	                           jmp 0x4000b94	       135	cache.c	FUNCTION_2	IF_1
0x4000bba	              0x50	                                push rax	       280	cache.c	FUNCTION_7
0x4000bbb	      0xba00000000	                              mov edx, 0	       242	cache.c	FUNCTION_6	CALL_1
0x4000bc0	      0xbef2000000	                           mov esi, 0xf2	       242	cache.c	FUNCTION_6	CALL_1
0x4000bc5	      0xbf00000000	                              mov edi, 0	       242	cache.c	FUNCTION_6	CALL_1
0x4000bca	      0xe800000000	                          call 0x4000bcf	       242	cache.c	FUNCTION_6	CALL_1
cache_bwrite	FOR,0:IF,2:SWITCH,0:DO,0:ELSE,0:WHILE,0:functions,0:CALL,3	115
0x4000e40	            0x4156	                                push r14	       393	cache.c	FUNCTION_11
0x4000e42	            0x4155	                                push r13	       393	cache.c	FUNCTION_11
0x4000e44	          0x4989d5	                            mov r13, rdx	       393	cache.c	FUNCTION_11
0x4000e47	    0x488b15000000	            mov rdx, qword [0x04000e4e] 	       395	cache.c	FUNCTION_11
0x4000e4e	            0x4154	                                push r12	       393	cache.c	FUNCTION_11
0x4000e50	          0x4989f6	                            mov r14, rsi	       393	cache.c	FUNCTION_11
0x4000e53	              0x55	                                push rbp	       393	cache.c	FUNCTION_11
0x4000e54	              0x53	                                push rbx	       393	cache.c	FUNCTION_11
0x4000e55	          0x4839fa	                            cmp rdx, rdi	       395	cache.c	FUNCTION_11
0x4000e58	     0xf84c2000000	                            je 0x4000f20	       395	cache.c	FUNCTION_11
0x4000e5e	        0xf6474601	               test byte [rdi + 0x46], 1	       241	cache.c	FUNCTION_6	IF_1
0x4000e62	          0x4889fd	                            mov rbp, rdi	       241	cache.c	FUNCTION_6	IF_1
0x4000e65	     0xf8556010000	                           jne 0x4000fc1	       241	cache.c	FUNCTION_6	IF_1
0x4000e6b	          0x4889fb	                            mov rbx, rdi	       241	cache.c	FUNCTION_6	IF_1
0x4000e6e	            0xeb09	                           jmp 0x4000e79	       241	cache.c	FUNCTION_6	IF_1
0x4000e70	        0xf6404801	               test byte [rax + 0x48], 1	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000e74	            0x750f	                           jne 0x4000e85	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000e76	          0x4889c3	                            mov rbx, rax	       245	cache.c	FUNCTION_6	WHILE_1	CALL_2
0x4000e79	    0x488b83d00000	            mov rax, qword [rbx + 0xd0] 	       244	cache.c	FUNCTION_6	WHILE_1
0x4000e80	          0x4885c0	                           test rax, rax	       244	cache.c	FUNCTION_6	WHILE_1
0x4000e83	            0x75eb	                           jne 0x4000e70	       244	cache.c	FUNCTION_6	WHILE_1
0x4000e85	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	       248	cache.c	FUNCTION_6	IF_2
0x4000e89	          0x4d85e4	                           test r12, r12	       248	cache.c	FUNCTION_6	IF_2
0x4000e8c	     0xf84be000000	                            je 0x4000f50	       248	cache.c	FUNCTION_6	IF_2
0x4000e92	          0x4839da	                            cmp rdx, rbx	       251	cache.c	FUNCTION_6	IF_2	IF_3
0x4000e95	            0x743c	                            je 0x4000ed3	       251	cache.c	FUNCTION_6	IF_2	IF_3
0x4000e97	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       152	cache.c	FUNCTION_3
0x4000e9b	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       152	cache.c	FUNCTION_3
0x4000e9f	          0x4885d2	                           test rdx, rdx	       132	cache.c	FUNCTION_2	IF_1
0x4000ea2	        0x48894828	             mov qword [rax + 0x28], rcx	       152	cache.c	FUNCTION_3
0x4000ea6	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       153	cache.c	FUNCTION_3
0x4000eaa	        0x48894120	             mov qword [rcx + 0x20], rax	       153	cache.c	FUNCTION_3
0x4000eae	     0xf848c000000	                            je 0x4000f40	       132	cache.c	FUNCTION_2	IF_1
0x4000eb4	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       140	cache.c	FUNCTION_2	ELSE_1
0x4000eb8	        0x48895328	             mov qword [rbx + 0x28], rdx	       139	cache.c	FUNCTION_2	ELSE_1
0x4000ebc	        0x48894320	             mov qword [rbx + 0x20], rax	       140	cache.c	FUNCTION_2	ELSE_1
0x4000ec0	        0x48895828	             mov qword [rax + 0x28], rbx	       141	cache.c	FUNCTION_2	ELSE_1
0x4000ec4	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       142	cache.c	FUNCTION_2	ELSE_1
0x4000ec8	        0x48895820	             mov qword [rax + 0x20], rbx	       142	cache.c	FUNCTION_2	ELSE_1
0x4000ecc	    0x48891d000000	            mov qword [0x04000ed3], rbx 	       144	cache.c	FUNCTION_2
0x4000ed3	          0x4c89e1	                            mov rcx, r12	       399	cache.c	FUNCTION_11	CALL_1
0x4000ed6	          0x4c89ea	                            mov rdx, r13	       399	cache.c	FUNCTION_11	CALL_1
0x4000ed9	      0xbe01000000	                              mov esi, 1	       399	cache.c	FUNCTION_11	CALL_1
0x4000ede	          0x4c89f7	                            mov rdi, r14	       399	cache.c	FUNCTION_11	CALL_1
0x4000ee1	      0xe800000000	                          call 0x4000ee6	       399	cache.c	FUNCTION_11	CALL_1
0x4000ee6	          0x4939c5	                            cmp r13, rax	       400	cache.c	FUNCTION_11	IF_2	CALL_2
0x4000ee9	          0x4889c3	                            mov rbx, rax	       399	cache.c	FUNCTION_11	CALL_1
0x4000eec	            0x7f12	                            jg 0x4000f00	       400	cache.c	FUNCTION_11	IF_2	CALL_2
0x4000eee	          0x4889d8	                            mov rax, rbx	       406	cache.c	FUNCTION_11
0x4000ef1	              0x5b	                                 pop rbx	       406	cache.c	FUNCTION_11
0x4000ef2	              0x5d	                                 pop rbp	       406	cache.c	FUNCTION_11
0x4000ef3	            0x415c	                                 pop r12	       406	cache.c	FUNCTION_11
0x4000ef5	            0x415d	                                 pop r13	       406	cache.c	FUNCTION_11
0x4000ef7	            0x415e	                                 pop r14	       406	cache.c	FUNCTION_11
0x4000ef9	              0xc3	                                     ret	       406	cache.c	FUNCTION_11
0x4000efa	    0x660f1f440000	                    nop word [rax + rax]	       406	cache.c	FUNCTION_11
0x4000f00	          0x4c89e7	                            mov rdi, r12	       400	cache.c	FUNCTION_11	IF_2	CALL_2
0x4000f03	      0xe800000000	                          call 0x4000f08	       400	cache.c	FUNCTION_11	IF_2	CALL_2
0x4000f08	            0x85c0	                           test eax, eax	       400	cache.c	FUNCTION_11	IF_2	CALL_2
0x4000f0a	            0x74e2	                            je 0x4000eee	       400	cache.c	FUNCTION_11	IF_2	CALL_2
0x4000f0c	      0xbf01000000	                              mov edi, 1	       402	cache.c	FUNCTION_11	IF_2	CALL_3
0x4000f11	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	       403	cache.c	FUNCTION_11	IF_2
0x4000f18	      0xe800000000	                          call 0x4000f1d	       402	cache.c	FUNCTION_11	IF_2	CALL_3
0x4000f1d	            0xebcf	                           jmp 0x4000eee	       403	cache.c	FUNCTION_11	IF_2
0x4000f1f	              0x90	                                     nop	       403	cache.c	FUNCTION_11	IF_2
0x4000f20	        0x4c8b6210	            mov r12, qword [rdx + 0x10] 	       395	cache.c	FUNCTION_11
0x4000f24	            0x31db	                            xor ebx, ebx	       398	cache.c	FUNCTION_11	IF_1
0x4000f26	          0x4d85e4	                           test r12, r12	       397	cache.c	FUNCTION_11	IF_1
0x4000f29	            0x75a8	                           jne 0x4000ed3	       397	cache.c	FUNCTION_11	IF_1
0x4000f2b	          0x4889d8	                            mov rax, rbx	       406	cache.c	FUNCTION_11
0x4000f2e	              0x5b	                                 pop rbx	       406	cache.c	FUNCTION_11
0x4000f2f	              0x5d	                                 pop rbp	       406	cache.c	FUNCTION_11
0x4000f30	            0x415c	                                 pop r12	       406	cache.c	FUNCTION_11
0x4000f32	            0x415d	                                 pop r13	       406	cache.c	FUNCTION_11
0x4000f34	            0x415e	                                 pop r14	       406	cache.c	FUNCTION_11
0x4000f36	              0xc3	                                     ret	       406	cache.c	FUNCTION_11
0x4000f37	    0x660f1f840000	                    nop word [rax + rax]	       406	cache.c	FUNCTION_11
0x4000f40	        0x48895b28	             mov qword [rbx + 0x28], rbx	       134	cache.c	FUNCTION_2	IF_1
0x4000f44	        0x48895b20	             mov qword [rbx + 0x20], rbx	       135	cache.c	FUNCTION_2	IF_1
0x4000f48	      0xe97fffffff	                           jmp 0x4000ecc	       135	cache.c	FUNCTION_2	IF_1
0x4000f4d	           0xf1f00	                         nop dword [rax]	       135	cache.c	FUNCTION_2	IF_1
0x4000f50	          0x4889df	                            mov rdi, rbx	       262	cache.c	FUNCTION_6	IF_5	CALL_5
0x4000f53	      0xe800000000	                          call 0x4000f58	       262	cache.c	FUNCTION_6	IF_5	CALL_5
0x4000f58	          0x4885c0	                           test rax, rax	       262	cache.c	FUNCTION_6	IF_5	CALL_5
0x4000f5b	            0x741d	                            je 0x4000f7a	       262	cache.c	FUNCTION_6	IF_5	CALL_5
0x4000f5d	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000f61	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000f65	            0x31d2	                            xor edx, edx	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000f67	      0xe800000000	                          call 0x4000f6c	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000f6c	            0x85c0	                           test eax, eax	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000f6e	            0x7448	                            je 0x4000fb8	       265	cache.c	FUNCTION_6	ELSE_1	IF_6	CALL_6
0x4000f70	      0xbf01000000	                              mov edi, 1	       268	cache.c	FUNCTION_6	ELSE_1	IF_6
0x4000f75	      0xe800000000	                          call 0x4000f7a	       268	cache.c	FUNCTION_6	ELSE_1	IF_6
0x4000f7a	      0xe800000000	                          call 0x4000f7f	       273	cache.c	FUNCTION_6	CALL_9
0x4000f7f	            0x89c7	                            mov edi, eax	       273	cache.c	FUNCTION_6	CALL_9
0x4000f81	      0xe800000000	                          call 0x4000f86	       273	cache.c	FUNCTION_6	CALL_9
0x4000f86	      0xba05000000	                              mov edx, 5	       273	cache.c	FUNCTION_6	CALL_9
0x4000f8b	          0x4889c3	                            mov rbx, rax	       273	cache.c	FUNCTION_6	CALL_9
0x4000f8e	      0xbe00000000	                              mov esi, 0	       273	cache.c	FUNCTION_6	CALL_9
0x4000f93	      0xbf00000000	                              mov edi, 0	       273	cache.c	FUNCTION_6	CALL_9
0x4000f98	      0xe800000000	                          call 0x4000f9d	       273	cache.c	FUNCTION_6	CALL_9
0x4000f9d	          0x4889da	                            mov rdx, rbx	       273	cache.c	FUNCTION_6	CALL_9
0x4000fa0	          0x4889c7	                            mov rdi, rax	       273	cache.c	FUNCTION_6	CALL_9
0x4000fa3	          0x4889ee	                            mov rsi, rbp	       273	cache.c	FUNCTION_6	CALL_9
0x4000fa6	            0x31c0	                            xor eax, eax	       273	cache.c	FUNCTION_6	CALL_9
0x4000fa8	            0x31db	                            xor ebx, ebx	       398	cache.c	FUNCTION_11	IF_1
0x4000faa	      0xe800000000	                          call 0x4000faf	       273	cache.c	FUNCTION_6	CALL_9
0x4000faf	      0xe93affffff	                           jmp 0x4000eee	       273	cache.c	FUNCTION_6	CALL_9
0x4000fb4	         0xf1f4000	                         nop dword [rax]	       273	cache.c	FUNCTION_6	CALL_9
0x4000fb8	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	       270	cache.c	FUNCTION_6	ELSE_2
0x4000fbc	      0xe963ffffff	                           jmp 0x4000f24	       270	cache.c	FUNCTION_6	ELSE_2
0x4000fc1	      0xba00000000	                              mov edx, 0	       242	cache.c	FUNCTION_6	CALL_1
0x4000fc6	      0xbef2000000	                           mov esi, 0xf2	       242	cache.c	FUNCTION_6	CALL_1
0x4000fcb	      0xbf00000000	                              mov edi, 0	       242	cache.c	FUNCTION_6	CALL_1
0x4000fd0	      0xe800000000	                  call section_end..data	       242	cache.c	FUNCTION_6	CALL_1
