rl_clear_message	DO,0:IF,1:SWITCH,0:CALL,1:WHILE,0:functions,0:ELSE,0:FOR,0	48
0x4001800	        0x4883ec08	                              sub rsp, 8	      2213	display.c	FUNCTION_9
0x4001804	    0x488b05000000	            mov rax, qword [0x0400180b] 	      2214	display.c	FUNCTION_9
0x400180b	    0x488905000000	            mov qword [0x04001812], rax 	      2214	display.c	FUNCTION_9
0x4001812	    0x8b0500000000	            mov eax, dword [0x04001818] 	      2215	display.c	FUNCTION_9	IF_1
0x4001818	            0x85c0	                           test eax, eax	      2215	display.c	FUNCTION_9	IF_1
0x400181a	            0x7514	                           jne 0x4001830	      2215	display.c	FUNCTION_9	IF_1
0x400181c	    0xff1500000000	                 call qword [0x04001822]	      2220	display.c	FUNCTION_9
0x4001822	            0x31c0	                            xor eax, eax	      2222	display.c	FUNCTION_9
0x4001824	        0x4883c408	                              add rsp, 8	      2222	display.c	FUNCTION_9
0x4001828	              0xc3	                                     ret	      2222	display.c	FUNCTION_9
0x4001829	     0xf1f80000000	                         nop dword [rax]	      2222	display.c	FUNCTION_9
0x4001830	    0x488b3d000000	            mov rdi, qword [0x04001837] 	      2255	display.c	FUNCTION_12	CALL_1
0x4001837	          0x4885ff	                           test rdi, rdi	      2255	display.c	FUNCTION_12	CALL_1
0x400183a	            0x7405	                            je 0x4001841	      2255	display.c	FUNCTION_12	CALL_1
0x400183c	      0xe800000000	                          call 0x4001841	      2255	display.c	FUNCTION_12	CALL_1
0x4001841	    0x488b3d000000	            mov rdi, qword [0x04001848] 	      2256	display.c	FUNCTION_12	CALL_2
0x4001848	          0x4885ff	                           test rdi, rdi	      2256	display.c	FUNCTION_12	CALL_2
0x400184b	            0x7405	                            je 0x4001852	      2256	display.c	FUNCTION_12	CALL_2
0x400184d	      0xe800000000	                          call 0x4001852	      2256	display.c	FUNCTION_12	CALL_2
0x4001852	    0x488b05000000	            mov rax, qword [0x04001859] 	      2258	display.c	FUNCTION_12
0x4001859	    0xc70500000000	               mov dword [0x04001863], 0	      2218	display.c	FUNCTION_9	IF_1
0x4001863	    0x48c705000000	               mov qword [0x0400186e], 0	      2268	display.c	FUNCTION_12
0x400186e	    0x488905000000	            mov qword [0x04001875], rax 	      2258	display.c	FUNCTION_12
0x4001875	    0x488b05000000	            mov rax, qword [0x0400187c] 	      2259	display.c	FUNCTION_12
0x400187c	    0x48c705000000	               mov qword [0x04001887], 0	      2268	display.c	FUNCTION_12
0x4001887	    0x488905000000	            mov qword [0x0400188e], rax 	      2259	display.c	FUNCTION_12
0x400188e	    0x8b0500000000	            mov eax, dword [0x04001894] 	      2260	display.c	FUNCTION_12
0x4001894	    0xc70500000000	               mov dword [0x0400189e], 0	      2269	display.c	FUNCTION_12
0x400189e	    0x890500000000	            mov dword [0x040018a4], eax 	      2260	display.c	FUNCTION_12
0x40018a4	    0x8b0500000000	            mov eax, dword [0x040018aa] 	      2261	display.c	FUNCTION_12
0x40018aa	    0xc70500000000	               mov dword [0x040018b4], 0	      2270	display.c	FUNCTION_12
0x40018b4	    0x890500000000	            mov dword [0x040018ba], eax 	      2261	display.c	FUNCTION_12
0x40018ba	    0x8b0500000000	            mov eax, dword [0x040018c0] 	      2262	display.c	FUNCTION_12
0x40018c0	    0xc70500000000	               mov dword [0x040018ca], 0	      2270	display.c	FUNCTION_12
0x40018ca	    0x890500000000	            mov dword [0x040018d0], eax 	      2262	display.c	FUNCTION_12
0x40018d0	    0x8b0500000000	            mov eax, dword [0x040018d6] 	      2263	display.c	FUNCTION_12
0x40018d6	    0xc70500000000	               mov dword [0x040018e0], 0	      2270	display.c	FUNCTION_12
0x40018e0	    0x890500000000	            mov dword [0x040018e6], eax 	      2263	display.c	FUNCTION_12
0x40018e6	    0x8b0500000000	            mov eax, dword [0x040018ec] 	      2264	display.c	FUNCTION_12
0x40018ec	    0xc70500000000	               mov dword [0x040018f6], 0	      2271	display.c	FUNCTION_12
0x40018f6	    0x890500000000	            mov dword [0x040018fc], eax 	      2264	display.c	FUNCTION_12
0x40018fc	    0x8b0500000000	            mov eax, dword [0x04001902] 	      2265	display.c	FUNCTION_12
0x4001902	    0xc70500000000	               mov dword [0x0400190c], 0	      2271	display.c	FUNCTION_12
0x400190c	    0x890500000000	            mov dword [0x04001912], eax 	      2265	display.c	FUNCTION_12
0x4001912	    0xff1500000000	                 call qword [0x04001918]	      2220	display.c	FUNCTION_9
0x4001918	            0x31c0	                            xor eax, eax	      2222	display.c	FUNCTION_9
0x400191a	        0x4883c408	                              add rsp, 8	      2222	display.c	FUNCTION_9
0x400191e	              0xc3	                                     ret	      2222	display.c	FUNCTION_9
rl_show_char	DO,0:IF,3:SWITCH,0:CALL,8:WHILE,0:functions,0:ELSE,0:FOR,0	87
0x4001410	          0x8d4780	                   lea eax, [rdi - 0x80]	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4001413	            0x4154	                                push r12	      2085	display.c	FUNCTION_7
0x4001415	              0x55	                                push rbp	      2085	display.c	FUNCTION_7
0x4001416	              0x53	                                push rbx	      2085	display.c	FUNCTION_7
0x4001417	            0x89fb	                            mov ebx, edi	      2085	display.c	FUNCTION_7
0x4001419	          0x83f87f	                           cmp eax, 0x7f	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x400141c	            0x7732	                            ja 0x4001450	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x400141e	    0x8b0500000000	            mov eax, dword [0x04001424] 	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x4001424	      0xbd01000000	                              mov ebp, 1	      2086	display.c	FUNCTION_7
0x4001429	            0x85c0	                           test eax, eax	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x400142b	            0x7443	                            je 0x4001470	      2087	display.c	FUNCTION_7	IF_1	CALL_1
0x400142d	    0x488b35000000	            mov rsi, qword [0x04001434] 	      2105	display.c	FUNCTION_7	CALL_7
0x4001434	            0x89df	                            mov edi, ebx	      2105	display.c	FUNCTION_7	CALL_7
0x4001436	      0xe800000000	                          call 0x400143b	      2105	display.c	FUNCTION_7	CALL_7
0x400143b	    0x488b3d000000	            mov rdi, qword [0x04001442] 	      2106	display.c	FUNCTION_7	CALL_8
0x4001442	      0xe800000000	                          call 0x4001447	      2106	display.c	FUNCTION_7	CALL_8
0x4001447	            0x89e8	                            mov eax, ebp	      2108	display.c	FUNCTION_7
0x4001449	              0x5b	                                 pop rbx	      2108	display.c	FUNCTION_7
0x400144a	              0x5d	                                 pop rbp	      2108	display.c	FUNCTION_7
0x400144b	            0x415c	                                 pop r12	      2108	display.c	FUNCTION_7
0x400144d	              0xc3	                                     ret	      2108	display.c	FUNCTION_7
0x400144e	            0x6690	                                     nop	      2108	display.c	FUNCTION_7
0x4001450	          0x83ff1f	                           cmp edi, 0x1f	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001453	     0xf8fb7000000	                            jg 0x4001510	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001459	        0x40f6c780	                          test dil, 0x80	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x400145d	     0xf84e5000000	                            je 0x4001548	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001463	      0xbd01000000	                              mov ebp, 1	      2086	display.c	FUNCTION_7
0x4001468	            0xebc3	                           jmp 0x400142d	      2086	display.c	FUNCTION_7
0x400146a	    0x660f1f440000	                    nop word [rax + rax]	      2086	display.c	FUNCTION_7
0x4001470	    0x488b0d000000	            mov rcx, qword [0x04001477] 	        97	stdio2.h	CALL_138
0x4001477	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_138
0x400147c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_138
0x4001481	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_138
0x4001486	          0x80e37f	                            and bl, 0x7f	      2091	display.c	FUNCTION_7	IF_1	CALL_2
0x4001489	      0xbd05000000	                              mov ebp, 5	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x400148e	      0xe800000000	                          call 0x4001493	        97	stdio2.h	CALL_138
0x4001493	          0x83fb1f	                           cmp ebx, 0x1f	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001496	      0xb803000000	                              mov eax, 3	      2090	display.c	FUNCTION_7	IF_1
0x400149b	            0x7f7d	                            jg 0x400151a	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x400149d	          0x83fb09	                              cmp ebx, 9	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x40014a0	      0xbd03000000	                              mov ebp, 3	      2090	display.c	FUNCTION_7	IF_1
0x40014a5	            0x7486	                            je 0x400142d	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x40014a7	    0x488b0d000000	            mov rcx, qword [0x040014ae] 	        97	stdio2.h	CALL_138
0x40014ae	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_138
0x40014b3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_138
0x40014b8	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_138
0x40014bd	      0xbd05000000	                              mov ebp, 5	      2101	display.c	FUNCTION_7	IF_2	IF_3
0x40014c2	      0xe800000000	                          call 0x40014c7	        97	stdio2.h	CALL_138
0x40014c7	          0x4189dc	                           mov r12d, ebx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014ca	          0x83cb40	                            or ebx, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014cd	        0x4183cc40	                           or r12d, 0x40	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014d1	        0x410fb6c4	                         movzx eax, r12b	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014d5	            0x39d8	                            cmp eax, ebx	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014d7	     0xf8550ffffff	                           jne 0x400142d	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014dd	      0xe800000000	                          call 0x40014e2	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014e2	          0x488b00	                    mov rax, qword [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014e5	        0x450fb6e4	                        movzx r12d, r12b	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014e9	    0x42f644600102	         test byte [rax + r12*2 + 1], 2 	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014ef	     0xf8438ffffff	                            je 0x400142d	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014f5	      0xe800000000	                          call 0x40014fa	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014fa	          0x488b00	                    mov rax, qword [rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40014fd	        0x428b1ca0	            mov ebx, dword [rax + r12*4]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001501	      0xe927ffffff	                           jmp 0x400142d	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001510	      0xbd03000000	                              mov ebp, 3	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4001515	      0xb801000000	                              mov eax, 1	      2086	display.c	FUNCTION_7
0x400151a	          0x83fb7f	                           cmp ebx, 0x7f	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x400151d	            0x7557	                           jne 0x4001576	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x400151f	    0x488b0d000000	            mov rcx, qword [0x04001526] 	        97	stdio2.h	CALL_138
0x4001526	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_138
0x400152b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_138
0x4001530	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_138
0x4001535	      0xbb3f000000	                           mov ebx, 0x3f	      2102	display.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x400153a	      0xe800000000	                          call 0x400153f	        97	stdio2.h	CALL_138
0x400153f	      0xe9e9feffff	                           jmp 0x400142d	        97	stdio2.h	CALL_138
0x4001544	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_138
0x4001548	          0x83ff09	                              cmp edi, 9	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x400154b	     0xf8412ffffff	                            je 0x4001463	      2095	display.c	FUNCTION_7	IF_2	CALL_3
0x4001551	    0x488b0d000000	            mov rcx, qword [0x04001558] 	        97	stdio2.h	CALL_138
0x4001558	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_138
0x400155d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_138
0x4001562	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_138
0x4001567	      0xbd03000000	                              mov ebp, 3	      2101	display.c	FUNCTION_7	IF_2	IF_3
0x400156c	      0xe800000000	                          call 0x4001571	        97	stdio2.h	CALL_138
0x4001571	      0xe951ffffff	                           jmp 0x40014c7	        97	stdio2.h	CALL_138
0x4001576	            0x89c5	                            mov ebp, eax	        97	stdio2.h	CALL_138
0x4001578	      0xe9b0feffff	                           jmp 0x400142d	        97	stdio2.h	CALL_138
_rl_redisplay_after_sigwinch	DO,0:IF,4:SWITCH,0:CALL,13:WHILE,0:functions,0:ELSE,3:FOR,0	254
0x4005980	    0x488b3d000000	            mov rdi, qword [0x04005987] 	      2528	display.c	FUNCTION_21	IF_1
0x4005987	            0x4154	                                push r12	      2521	display.c	FUNCTION_21
0x4005989	              0x55	                                push rbp	      2521	display.c	FUNCTION_21
0x400598a	              0x53	                                push rbx	      2521	display.c	FUNCTION_21
0x400598b	          0x4885ff	                           test rdi, rdi	      2528	display.c	FUNCTION_21	IF_1
0x400598e	     0xf8434040000	                            je 0x4005dc8	      2528	display.c	FUNCTION_21	IF_1
0x4005994	    0x448b25000000	           mov r12d, dword [0x0400599b] 	      2530	display.c	FUNCTION_21	IF_1	CALL_1
0x400599b	    0x8b0500000000	            mov eax, dword [0x040059a1] 	      2047	display.c	FUNCTION_6	IF_1
0x40059a1	          0x4139c4	                           cmp r12d, eax	      2047	display.c	FUNCTION_6	IF_1
0x40059a4	            0x7460	                            je 0x4005a06	      2047	display.c	FUNCTION_6	IF_1
0x40059a6	    0x443b25000000	           cmp r12d, dword [0x040059ad] 	      2047	display.c	FUNCTION_6	IF_1
0x40059ad	            0x7f57	                            jg 0x4005a06	      2047	display.c	FUNCTION_6	IF_1
0x40059af	          0x4489e5	                           mov ebp, r12d	      2050	display.c	FUNCTION_6	IF_2
0x40059b2	            0x29c5	                            sub ebp, eax	      2050	display.c	FUNCTION_6	IF_2
0x40059b4	            0x85ed	                           test ebp, ebp	      2050	display.c	FUNCTION_6	IF_2
0x40059b6	     0xf8e7c040000	                           jle 0x4005e38	      2050	display.c	FUNCTION_6	IF_2
0x40059bc	            0x31db	                            xor ebx, ebx	      2050	display.c	FUNCTION_6	IF_2
0x40059be	            0x6690	                                     nop	      2050	display.c	FUNCTION_6	IF_2
0x40059c0	    0x488b35000000	            mov rsi, qword [0x040059c7] 	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40059c7	      0xbf0a000000	                            mov edi, 0xa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40059cc	          0x83c301	                              add ebx, 1	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40059cf	      0xe800000000	                          call 0x40059d4	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40059d4	            0x39dd	                            cmp ebp, ebx	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40059d6	            0x75e8	                           jne 0x40059c0	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40059d8	    0x488b3d000000	            mov rdi, qword [0x040059df] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40059df	      0xba00000000	                              mov edx, 0	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40059e4	      0xbe01000000	                              mov esi, 1	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40059e9	      0xe800000000	                          call 0x40059ee	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40059ee	    0x488b3d000000	            mov rdi, qword [0x040059f5] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40059f5	    0xc70500000000	               mov dword [0x040059ff], 0	      2059	display.c	FUNCTION_6	IF_2
0x40059ff	    0x448925000000	           mov dword [0x04005a06], r12d 	      2077	display.c	FUNCTION_6
0x4005a06	      0xba00000000	                              mov edx, 0	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4005a0b	      0xbe01000000	                              mov esi, 1	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4005a10	      0xe800000000	                          call 0x4005a15	      2535	display.c	FUNCTION_21	IF_1	CALL_3
0x4005a15	    0x488b3d000000	            mov rdi, qword [0x04005a1c] 	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4005a1c	    0xc70500000000	               mov dword [0x04005a26], 0	      2537	display.c	FUNCTION_21	IF_1
0x4005a26	          0x4885ff	                           test rdi, rdi	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4005a29	     0xf84a9030000	                            je 0x4005dd8	      2542	display.c	FUNCTION_21	IF_1	IF_2
0x4005a2f	      0xba00000000	                              mov edx, 0	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4005a34	      0xbe01000000	                              mov esi, 1	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4005a39	      0xe800000000	                          call 0x4005a3e	      2543	display.c	FUNCTION_21	IF_1	CALL_6
0x4005a3e	    0x8b1d00000000	            mov ebx, dword [0x04005a44] 	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4005a44	            0x85db	                           test ebx, ebx	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4005a46	     0xf8f94020000	                            jg 0x4005ce0	      2550	display.c	FUNCTION_21	IF_1	IF_3
0x4005a4c	    0x488b1d000000	            mov rbx, qword [0x04005a53] 	      2557	display.c	FUNCTION_21	CALL_11
0x4005a53	      0xbe0a000000	                            mov esi, 0xa	      2557	display.c	FUNCTION_21	CALL_11
0x4005a58	          0x4889df	                            mov rdi, rbx	      2557	display.c	FUNCTION_21	CALL_11
0x4005a5b	      0xe800000000	                          call 0x4005a60	      2557	display.c	FUNCTION_21	CALL_11
0x4005a60	          0x4885c0	                           test rax, rax	      2558	display.c	FUNCTION_21	IF_4
0x4005a63	     0xf84cf020000	                            je 0x4005d38	      2558	display.c	FUNCTION_21	IF_4
0x4005a69	        0x488d7801	                      lea rdi, [rax + 1]	      2559	display.c	FUNCTION_21	CALL_12
0x4005a6d	    0x488b05000000	            mov rax, qword [0x04005a74] 	      2237	display.c	FUNCTION_11
0x4005a74	    0x41b800000000	                              mov r8d, 0	      2505	display.c	CALL_113
0x4005a7a	      0xb900000000	                              mov ecx, 0	      2505	display.c	CALL_113
0x4005a7f	      0xba00000000	                              mov edx, 0	      2505	display.c	CALL_113
0x4005a84	      0xbe00000000	                              mov esi, 0	      2505	display.c	CALL_113
0x4005a89	    0x48c705000000	               mov qword [0x04005a94], 0	      2246	display.c	FUNCTION_11
0x4005a94	    0x48893d000000	            mov qword [0x04005a9b], rdi 	      2504	display.c	
0x4005a9b	    0x488905000000	            mov qword [0x04005aa2], rax 	      2237	display.c	FUNCTION_11
0x4005aa2	    0x488b05000000	            mov rax, qword [0x04005aa9] 	      2238	display.c	FUNCTION_11
0x4005aa9	    0x48c705000000	               mov qword [0x04005ab4], 0	      2246	display.c	FUNCTION_11
0x4005ab4	    0x488905000000	            mov qword [0x04005abb], rax 	      2238	display.c	FUNCTION_11
0x4005abb	    0x8b0500000000	            mov eax, dword [0x04005ac1] 	      2239	display.c	FUNCTION_11
0x4005ac1	    0xc70500000000	               mov dword [0x04005acb], 0	      2248	display.c	FUNCTION_11
0x4005acb	    0x890500000000	            mov dword [0x04005ad1], eax 	      2239	display.c	FUNCTION_11
0x4005ad1	    0x8b0500000000	            mov eax, dword [0x04005ad7] 	      2240	display.c	FUNCTION_11
0x4005ad7	    0xc70500000000	               mov dword [0x04005ae1], 0	      2247	display.c	FUNCTION_11
0x4005ae1	    0x890500000000	            mov dword [0x04005ae7], eax 	      2240	display.c	FUNCTION_11
0x4005ae7	    0x8b0500000000	            mov eax, dword [0x04005aed] 	      2241	display.c	FUNCTION_11
0x4005aed	    0xc70500000000	               mov dword [0x04005af7], 0	      2248	display.c	FUNCTION_11
0x4005af7	    0x890500000000	            mov dword [0x04005afd], eax 	      2241	display.c	FUNCTION_11
0x4005afd	    0x8b0500000000	            mov eax, dword [0x04005b03] 	      2242	display.c	FUNCTION_11
0x4005b03	    0xc70500000000	               mov dword [0x04005b0d], 0	      2248	display.c	FUNCTION_11
0x4005b0d	    0x890500000000	            mov dword [0x04005b13], eax 	      2242	display.c	FUNCTION_11
0x4005b13	    0x8b0500000000	            mov eax, dword [0x04005b19] 	      2243	display.c	FUNCTION_11
0x4005b19	    0xc70500000000	               mov dword [0x04005b23], 0	      2249	display.c	FUNCTION_11
0x4005b23	    0x890500000000	            mov dword [0x04005b29], eax 	      2243	display.c	FUNCTION_11
0x4005b29	    0x8b0500000000	            mov eax, dword [0x04005b2f] 	      2244	display.c	FUNCTION_11
0x4005b2f	    0xc70500000000	               mov dword [0x04005b39], 0	      2249	display.c	FUNCTION_11
0x4005b39	    0x890500000000	            mov dword [0x04005b3f], eax 	      2244	display.c	FUNCTION_11
0x4005b3f	            0x31c0	                            xor eax, eax	      2505	display.c	CALL_113
0x4005b41	      0xe8faa8ffff	                  call sym.expand_prompt	      2505	display.c	CALL_113
0x4005b46	          0x4885c0	                           test rax, rax	      2510	display.c	CALL_114
0x4005b49	    0x488905000000	            mov qword [0x04005b50], rax 	      2505	display.c	CALL_113
0x4005b50	    0x48c705000000	               mov qword [0x04005b5b], 0	      2509	display.c	
0x4005b5b	     0xf842f030000	                            je 0x4005e90	      2510	display.c	CALL_114
0x4005b61	          0x4889c7	                            mov rdi, rax	      2510	display.c	CALL_114
0x4005b64	      0xe800000000	                          call 0x4005b69	      2510	display.c	CALL_114
0x4005b69	    0x488b15000000	            mov rdx, qword [0x04005b70] 	      1884	display.c	FUNCTION_5	IF_1
0x4005b70	    0x890500000000	            mov dword [0x04005b76], eax 	      2510	display.c	CALL_114
0x4005b76	          0x488b02	                    mov rax, qword [rdx]	      1884	display.c	FUNCTION_5	IF_1
0x4005b79	          0x4885c0	                           test rax, rax	      1884	display.c	FUNCTION_5	IF_1
0x4005b7c	            0x7422	                            je 0x4005ba0	      1884	display.c	FUNCTION_5	IF_1
0x4005b7e	          0x803800	                       cmp byte [rax], 0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005b81	            0x741a	                            je 0x4005b9d	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005b83	       0xf1f440000	                   nop dword [rax + rax]	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005b88	        0x4883c001	                              add rax, 1	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005b8c	        0xc640ff00	                   mov byte [rax - 1], 0	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005b90	          0x803800	                       cmp byte [rax], 0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005b93	            0x75f3	                           jne 0x4005b88	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005b95	          0x488b02	                    mov rax, qword [rdx]	      1808	display.c	FUNCTION_3	IF_1
0x4005b98	          0x4885c0	                           test rax, rax	      1808	display.c	FUNCTION_3	IF_1
0x4005b9b	            0x7403	                            je 0x4005ba0	      1808	display.c	FUNCTION_3	IF_1
0x4005b9d	          0xc60000	                       mov byte [rax], 0	      1809	display.c	FUNCTION_3	IF_1
0x4005ba0	        0x488b4208	                mov rax, qword [rdx + 8]	      1813	display.c	FUNCTION_3	IF_2
0x4005ba4	    0xc70500000000	               mov dword [0x04005bae], 0	      1811	display.c	FUNCTION_3
0x4005bae	    0xc70500000000	               mov dword [0x04005bb8], 0	      1811	display.c	FUNCTION_3
0x4005bb8	    0xc70500000000	               mov dword [0x04005bc2], 0	      1812	display.c	FUNCTION_3
0x4005bc2	    0xc70500000000	               mov dword [0x04005bcc], 0	      1812	display.c	FUNCTION_3
0x4005bcc	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x4005bcf	            0x740d	                            je 0x4005bde	      1813	display.c	FUNCTION_3	IF_2
0x4005bd1	    0xc74004000000	                  mov dword [rax + 4], 0	      1814	display.c	FUNCTION_3	IF_2
0x4005bd8	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x4005bde	    0x830500000000	               add dword [0x04005be5], 1	      1891	display.c	FUNCTION_5
0x4005be5	    0xc70500000000	               mov dword [0x04005bef], 0	      1815	display.c	FUNCTION_3
0x4005bef	    0xff1500000000	                 call qword [0x04005bf5]	      1892	display.c	FUNCTION_5
0x4005bf5	    0x488b3d000000	            mov rdi, qword [0x04005bfc] 	      2255	display.c	FUNCTION_12	CALL_1
0x4005bfc	    0x48891d000000	            mov qword [0x04005c03], rbx 	      2514	display.c	
0x4005c03	          0x4885ff	                           test rdi, rdi	      2255	display.c	FUNCTION_12	CALL_1
0x4005c06	            0x7405	                            je 0x4005c0d	      2255	display.c	FUNCTION_12	CALL_1
0x4005c08	      0xe800000000	                          call 0x4005c0d	      2255	display.c	FUNCTION_12	CALL_1
0x4005c0d	    0x488b3d000000	            mov rdi, qword [0x04005c14] 	      2256	display.c	FUNCTION_12	CALL_2
0x4005c14	          0x4885ff	                           test rdi, rdi	      2256	display.c	FUNCTION_12	CALL_2
0x4005c17	            0x7405	                            je 0x4005c1e	      2256	display.c	FUNCTION_12	CALL_2
0x4005c19	      0xe800000000	                          call 0x4005c1e	      2256	display.c	FUNCTION_12	CALL_2
0x4005c1e	    0x488b05000000	            mov rax, qword [0x04005c25] 	      2258	display.c	FUNCTION_12
0x4005c25	    0x48c705000000	               mov qword [0x04005c30], 0	      2268	display.c	FUNCTION_12
0x4005c30	              0x5b	                                 pop rbx	      2562	display.c	FUNCTION_21
0x4005c31	              0x5d	                                 pop rbp	      2562	display.c	FUNCTION_21
0x4005c32	    0x488905000000	            mov qword [0x04005c39], rax 	      2258	display.c	FUNCTION_12
0x4005c39	    0x488b05000000	            mov rax, qword [0x04005c40] 	      2259	display.c	FUNCTION_12
0x4005c40	            0x415c	                                 pop r12	      2562	display.c	FUNCTION_21
0x4005c42	    0x48c705000000	               mov qword [0x04005c4d], 0	      2268	display.c	FUNCTION_12
0x4005c4d	    0x488905000000	            mov qword [0x04005c54], rax 	      2259	display.c	FUNCTION_12
0x4005c54	    0x8b0500000000	            mov eax, dword [0x04005c5a] 	      2260	display.c	FUNCTION_12
0x4005c5a	    0xc70500000000	               mov dword [0x04005c64], 0	      2269	display.c	FUNCTION_12
0x4005c64	    0x890500000000	            mov dword [0x04005c6a], eax 	      2260	display.c	FUNCTION_12
0x4005c6a	    0x8b0500000000	            mov eax, dword [0x04005c70] 	      2261	display.c	FUNCTION_12
0x4005c70	    0xc70500000000	               mov dword [0x04005c7a], 0	      2270	display.c	FUNCTION_12
0x4005c7a	    0x890500000000	            mov dword [0x04005c80], eax 	      2261	display.c	FUNCTION_12
0x4005c80	    0x8b0500000000	            mov eax, dword [0x04005c86] 	      2262	display.c	FUNCTION_12
0x4005c86	    0xc70500000000	               mov dword [0x04005c90], 0	      2270	display.c	FUNCTION_12
0x4005c90	    0x890500000000	            mov dword [0x04005c96], eax 	      2262	display.c	FUNCTION_12
0x4005c96	    0x8b0500000000	            mov eax, dword [0x04005c9c] 	      2263	display.c	FUNCTION_12
0x4005c9c	    0xc70500000000	               mov dword [0x04005ca6], 0	      2270	display.c	FUNCTION_12
0x4005ca6	    0x890500000000	            mov dword [0x04005cac], eax 	      2263	display.c	FUNCTION_12
0x4005cac	    0x8b0500000000	            mov eax, dword [0x04005cb2] 	      2264	display.c	FUNCTION_12
0x4005cb2	    0xc70500000000	               mov dword [0x04005cbc], 0	      2271	display.c	FUNCTION_12
0x4005cbc	    0x890500000000	            mov dword [0x04005cc2], eax 	      2264	display.c	FUNCTION_12
0x4005cc2	    0x8b0500000000	            mov eax, dword [0x04005cc8] 	      2265	display.c	FUNCTION_12
0x4005cc8	    0xc70500000000	               mov dword [0x04005cd2], 0	      2271	display.c	FUNCTION_12
0x4005cd2	    0x890500000000	            mov dword [0x04005cd8], eax 	      2265	display.c	FUNCTION_12
0x4005cd8	              0xc3	                                     ret	      2562	display.c	FUNCTION_21
0x4005cd9	     0xf1f80000000	                         nop dword [rax]	      2562	display.c	FUNCTION_21
0x4005ce0	    0x8b0500000000	            mov eax, dword [0x04005ce6] 	      2047	display.c	FUNCTION_6	IF_1
0x4005ce6	            0x85c0	                           test eax, eax	      2047	display.c	FUNCTION_6	IF_1
0x4005ce8	     0xf885efdffff	                            js 0x4005a4c	      2047	display.c	FUNCTION_6	IF_1
0x4005cee	    0x488b3d000000	            mov rdi, qword [0x04005cf5] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005cf5	          0x4885ff	                           test rdi, rdi	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005cf8	            0x742b	                            je 0x4005d25	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005cfa	          0x803f00	                       cmp byte [rdi], 0	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005cfd	            0x7426	                            je 0x4005d25	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005cff	            0x31ed	                            xor ebp, ebp	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005d01	            0xeb0c	                           jmp 0x4005d0f	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005d03	       0xf1f440000	                   nop dword [rax + rax]	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005d08	    0x488b3d000000	            mov rdi, qword [0x04005d0f] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005d0f	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005d14	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005d19	          0x83c501	                              add ebp, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005d1c	      0xe800000000	                          call 0x4005d21	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005d21	            0x39dd	                            cmp ebp, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005d23	            0x75e3	                           jne 0x4005d08	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005d25	    0xc70500000000	               mov dword [0x04005d2f], 0	      2077	display.c	FUNCTION_6
0x4005d2f	      0xe918fdffff	                           jmp 0x4005a4c	      2077	display.c	FUNCTION_6
0x4005d34	         0xf1f4000	                         nop dword [rax]	      2077	display.c	FUNCTION_6
0x4005d38	    0x488b15000000	            mov rdx, qword [0x04005d3f] 	      1884	display.c	FUNCTION_5	IF_1
0x4005d3f	          0x488b02	                    mov rax, qword [rdx]	      1884	display.c	FUNCTION_5	IF_1
0x4005d42	          0x4885c0	                           test rax, rax	      1884	display.c	FUNCTION_5	IF_1
0x4005d45	            0x7421	                            je 0x4005d68	      1884	display.c	FUNCTION_5	IF_1
0x4005d47	          0x803800	                       cmp byte [rax], 0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005d4a	            0x7419	                            je 0x4005d65	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005d4c	         0xf1f4000	                         nop dword [rax]	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005d50	        0x4883c001	                              add rax, 1	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005d54	        0xc640ff00	                   mov byte [rax - 1], 0	      1888	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005d58	          0x803800	                       cmp byte [rax], 0	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005d5b	            0x75f3	                           jne 0x4005d50	      1887	display.c	FUNCTION_5	IF_1	WHILE_1
0x4005d5d	          0x488b02	                    mov rax, qword [rdx]	      1808	display.c	FUNCTION_3	IF_1
0x4005d60	          0x4885c0	                           test rax, rax	      1808	display.c	FUNCTION_3	IF_1
0x4005d63	            0x7403	                            je 0x4005d68	      1808	display.c	FUNCTION_3	IF_1
0x4005d65	          0xc60000	                       mov byte [rax], 0	      1809	display.c	FUNCTION_3	IF_1
0x4005d68	        0x488b4208	                mov rax, qword [rdx + 8]	      1813	display.c	FUNCTION_3	IF_2
0x4005d6c	    0xc70500000000	               mov dword [0x04005d76], 0	      1811	display.c	FUNCTION_3
0x4005d76	    0xc70500000000	               mov dword [0x04005d80], 0	      1811	display.c	FUNCTION_3
0x4005d80	    0xc70500000000	               mov dword [0x04005d8a], 0	      1812	display.c	FUNCTION_3
0x4005d8a	    0xc70500000000	               mov dword [0x04005d94], 0	      1812	display.c	FUNCTION_3
0x4005d94	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x4005d97	            0x740d	                            je 0x4005da6	      1813	display.c	FUNCTION_3	IF_2
0x4005d99	    0xc74004000000	                  mov dword [rax + 4], 0	      1814	display.c	FUNCTION_3	IF_2
0x4005da0	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x4005da6	              0x5b	                                 pop rbx	      2562	display.c	FUNCTION_21
0x4005da7	    0x830500000000	               add dword [0x04005dae], 1	      1891	display.c	FUNCTION_5
0x4005dae	    0xc70500000000	               mov dword [0x04005db8], 0	      1815	display.c	FUNCTION_3
0x4005db8	              0x5d	                                 pop rbp	      2562	display.c	FUNCTION_21
0x4005db9	            0x415c	                                 pop r12	      2562	display.c	FUNCTION_21
0x4005dbb	    0xff2500000000	                  jmp qword [0x04005dc1]	      1892	display.c	FUNCTION_5
0x4005dc1	     0xf1f80000000	                         nop dword [rax]	      1892	display.c	FUNCTION_5
0x4005dc8	      0xe800000000	                          call 0x4005dcd	      2554	display.c	FUNCTION_21	CALL_10
0x4005dcd	      0xe97afcffff	                           jmp 0x4005a4c	      2554	display.c	FUNCTION_21	CALL_10
0x4005dd2	    0x660f1f440000	                    nop word [rax + rax]	      2554	display.c	FUNCTION_21	CALL_10
0x4005dd8	    0x8b2d00000000	            mov ebp, dword [0x04005dde] 	      2546	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x4005dde	            0x85ed	                           test ebp, ebp	      2351	display.c	FUNCTION_16	FOR_1
0x4005de0	     0xf8eb1000000	                           jle 0x4005e97	      2351	display.c	FUNCTION_16	FOR_1
0x4005de6	            0x31db	                            xor ebx, ebx	      2351	display.c	FUNCTION_16	FOR_1
0x4005de8	     0xf1f84000000	                   nop dword [rax + rax]	      2351	display.c	FUNCTION_16	FOR_1
0x4005df0	    0x488b35000000	            mov rsi, qword [0x04005df7] 	      2352	display.c	FUNCTION_16	CALL_1
0x4005df7	      0xbf20000000	                           mov edi, 0x20	      2352	display.c	FUNCTION_16	CALL_1
0x4005dfc	          0x83c301	                              add ebx, 1	      2351	display.c	FUNCTION_16	FOR_1
0x4005dff	      0xe800000000	                          call 0x4005e04	      2352	display.c	FUNCTION_16	CALL_1
0x4005e04	            0x39dd	                            cmp ebp, ebx	      2351	display.c	FUNCTION_16	FOR_1
0x4005e06	            0x75e8	                           jne 0x4005df0	      2351	display.c	FUNCTION_16	FOR_1
0x4005e08	    0x8b0500000000	            mov eax, dword [0x04005e0e] 	      2351	display.c	FUNCTION_16	FOR_1
0x4005e0e	    0x488b3d000000	            mov rdi, qword [0x04005e15] 	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4005e15	             0x1c5	                            add ebp, eax	      2354	display.c	FUNCTION_16
0x4005e17	      0xba00000000	                              mov edx, 0	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4005e1c	      0xbe01000000	                              mov esi, 1	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4005e21	    0x892d00000000	            mov dword [0x04005e27], ebp 	      2354	display.c	FUNCTION_16
0x4005e27	      0xe800000000	                          call 0x4005e2c	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4005e2c	      0xe90dfcffff	                           jmp 0x4005a3e	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4005e31	     0xf1f80000000	                         nop dword [rax]	      2547	display.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4005e38	    0x488b05000000	            mov rax, qword [0x04005e3f] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005e3f	          0x4885c0	                           test rax, rax	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005e42	     0xf84b7fbffff	                            je 0x40059ff	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005e48	          0x803800	                       cmp byte [rax], 0	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005e4b	     0xf84aefbffff	                            je 0x40059ff	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005e51	            0xf7dd	                                 neg ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e53	     0xf84a6fbffff	                            je 0x40059ff	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e59	            0x31db	                            xor ebx, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e5b	            0xeb0a	                           jmp 0x4005e67	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e5d	           0xf1f00	                         nop dword [rax]	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e60	    0x488b05000000	            mov rax, qword [0x04005e67] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e67	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e6c	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e71	          0x4889c7	                            mov rdi, rax	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e74	          0x83c301	                              add ebx, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e77	      0xe800000000	                          call 0x4005e7c	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e7c	            0x39eb	                            cmp ebx, ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e7e	            0x75e0	                           jne 0x4005e60	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e80	    0x488b3d000000	            mov rdi, qword [0x04005e87] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e87	      0xe973fbffff	                           jmp 0x40059ff	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e8c	         0xf1f4000	                         nop dword [rax]	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005e90	            0x31c0	                            xor eax, eax	      2510	display.c	CALL_114
0x4005e92	      0xe9d2fcffff	                           jmp 0x4005b69	      2510	display.c	CALL_114
0x4005e97	            0x31c0	                            xor eax, eax	      2351	display.c	FUNCTION_16	FOR_1
0x4005e99	      0xe970ffffff	                           jmp 0x4005e0e	      2351	display.c	FUNCTION_16	FOR_1
rl_message	DO,0:IF,1:SWITCH,0:CALL,9:WHILE,0:functions,0:ELSE,0:FOR,0	87
0x40015f0	    0x4881ecd80000	                           sub rsp, 0xd8	      2147	display.c	FUNCTION_8
0x40015f7	            0x84c0	                             test al, al	      2147	display.c	FUNCTION_8
0x40015f9	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2147	display.c	FUNCTION_8
0x40015fe	      0x4889542430	             mov qword [rsp + 0x30], rdx	      2147	display.c	FUNCTION_8
0x4001603	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      2147	display.c	FUNCTION_8
0x4001608	      0x4c89442440	              mov qword [rsp + 0x40], r8	      2147	display.c	FUNCTION_8
0x400160d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      2147	display.c	FUNCTION_8
0x4001612	            0x7437	                            je 0x400164b	      2147	display.c	FUNCTION_8
0x4001614	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	      2147	display.c	FUNCTION_8
0x4001619	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	      2147	display.c	FUNCTION_8
0x400161e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	      2147	display.c	FUNCTION_8
0x4001623	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	      2147	display.c	FUNCTION_8
0x400162b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	      2147	display.c	FUNCTION_8
0x4001633	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	      2147	display.c	FUNCTION_8
0x400163b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	      2147	display.c	FUNCTION_8
0x4001643	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	      2147	display.c	FUNCTION_8
0x400164b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2147	display.c	FUNCTION_8
0x4001654	      0x4889442418	             mov qword [rsp + 0x18], rax	      2147	display.c	FUNCTION_8
0x4001659	            0x31c0	                            xor eax, eax	      2147	display.c	FUNCTION_8
0x400165b	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      2154	display.c	FUNCTION_8	CALL_1
0x4001663	          0x4989f8	                             mov r8, rdi	        77	stdio2.h	FUNCTION_28	CALL_2
0x4001666	          0x4989e1	                             mov r9, rsp	        77	stdio2.h	FUNCTION_28	CALL_2
0x4001669	      0xb980000000	                           mov ecx, 0x80	        77	stdio2.h	FUNCTION_28	CALL_2
0x400166e	      0xba01000000	                              mov edx, 1	        77	stdio2.h	FUNCTION_28	CALL_2
0x4001673	      0xbe7f000000	                           mov esi, 0x7f	        77	stdio2.h	FUNCTION_28	CALL_2
0x4001678	      0x4889442408	                mov qword [rsp + 8], rax	      2154	display.c	FUNCTION_8	CALL_1
0x400167d	      0x488d442420	                   lea rax, [rsp + 0x20]	      2154	display.c	FUNCTION_8	CALL_1
0x4001682	      0xbf00000000	                              mov edi, 0	        77	stdio2.h	FUNCTION_28	CALL_2
0x4001687	    0xc70424080000	                      mov dword [rsp], 8	      2154	display.c	FUNCTION_8	CALL_1
0x400168e	    0xc74424043000	               mov dword [rsp + 4], 0x30	      2154	display.c	FUNCTION_8	CALL_1
0x4001696	      0x4889442410	             mov qword [rsp + 0x10], rax	      2154	display.c	FUNCTION_8	CALL_1
0x400169b	      0xe800000000	                          call 0x40016a0	        77	stdio2.h	FUNCTION_28	CALL_2
0x40016a0	    0x48833d000000	               cmp qword [0x040016a8], 0	      2168	display.c	FUNCTION_8	IF_1
0x40016a8	            0x747e	                            je 0x4001728	      2168	display.c	FUNCTION_8	IF_1
0x40016aa	            0x31c0	                            xor eax, eax	      2174	display.c	FUNCTION_8	CALL_8
0x40016ac	    0x41b800000000	                              mov r8d, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40016b2	      0xb900000000	                              mov ecx, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40016b7	      0xba00000000	                              mov edx, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40016bc	      0xbe00000000	                              mov esi, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40016c1	      0xbf00000000	                              mov edi, 0	      2174	display.c	FUNCTION_8	CALL_8
0x40016c6	    0x48c705000000	               mov qword [0x040016d1], 0	      2173	display.c	FUNCTION_8
0x40016d1	      0xe86aedffff	                  call sym.expand_prompt	      2174	display.c	FUNCTION_8	CALL_8
0x40016d6	          0x4885c0	                           test rax, rax	      2179	display.c	FUNCTION_8	CALL_9
0x40016d9	    0x488905000000	            mov qword [0x040016e0], rax 	      2174	display.c	FUNCTION_8	CALL_8
0x40016e0	    0x48c705000000	               mov qword [0x040016eb], 0	      2178	display.c	FUNCTION_8
0x40016eb	            0x7433	                            je 0x4001720	      2179	display.c	FUNCTION_8	CALL_9
0x40016ed	          0x4889c7	                            mov rdi, rax	      2179	display.c	FUNCTION_8	CALL_9
0x40016f0	      0xe800000000	                          call 0x40016f5	      2179	display.c	FUNCTION_8	CALL_9
0x40016f5	    0x890500000000	            mov dword [0x040016fb], eax 	      2179	display.c	FUNCTION_8	CALL_9
0x40016fb	    0xff1500000000	                 call qword [0x04001701]	      2180	display.c	FUNCTION_8
0x4001701	            0x31c0	                            xor eax, eax	      2183	display.c	FUNCTION_8
0x4001703	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2183	display.c	FUNCTION_8
0x4001708	    0x644833142528	                xor rdx, qword fs:[0x28]	      2183	display.c	FUNCTION_8
0x4001711	     0xf85d6000000	                           jne 0x40017ed	      2183	display.c	FUNCTION_8
0x4001717	    0x4881c4d80000	                           add rsp, 0xd8	      2183	display.c	FUNCTION_8
0x400171e	              0xc3	                                     ret	      2183	display.c	FUNCTION_8
0x400171f	              0x90	                                     nop	      2183	display.c	FUNCTION_8
0x4001720	            0x31c0	                            xor eax, eax	      2179	display.c	FUNCTION_8	CALL_9
0x4001722	            0xebd1	                           jmp 0x40016f5	      2179	display.c	FUNCTION_8	CALL_9
0x4001724	         0xf1f4000	                         nop dword [rax]	      2179	display.c	FUNCTION_8	CALL_9
0x4001728	    0x488b05000000	            mov rax, qword [0x0400172f] 	      2237	display.c	FUNCTION_11
0x400172f	    0xc70500000000	               mov dword [0x04001739], 1	      2171	display.c	FUNCTION_8	IF_1
0x4001739	    0x48c705000000	               mov qword [0x04001744], 0	      2246	display.c	FUNCTION_11
0x4001744	    0x488905000000	            mov qword [0x0400174b], rax 	      2237	display.c	FUNCTION_11
0x400174b	    0x488b05000000	            mov rax, qword [0x04001752] 	      2238	display.c	FUNCTION_11
0x4001752	    0x48c705000000	               mov qword [0x0400175d], 0	      2246	display.c	FUNCTION_11
0x400175d	    0x488905000000	            mov qword [0x04001764], rax 	      2238	display.c	FUNCTION_11
0x4001764	    0x8b0500000000	            mov eax, dword [0x0400176a] 	      2239	display.c	FUNCTION_11
0x400176a	    0xc70500000000	               mov dword [0x04001774], 0	      2248	display.c	FUNCTION_11
0x4001774	    0x890500000000	            mov dword [0x0400177a], eax 	      2239	display.c	FUNCTION_11
0x400177a	    0x8b0500000000	            mov eax, dword [0x04001780] 	      2240	display.c	FUNCTION_11
0x4001780	    0xc70500000000	               mov dword [0x0400178a], 0	      2247	display.c	FUNCTION_11
0x400178a	    0x890500000000	            mov dword [0x04001790], eax 	      2240	display.c	FUNCTION_11
0x4001790	    0x8b0500000000	            mov eax, dword [0x04001796] 	      2241	display.c	FUNCTION_11
0x4001796	    0xc70500000000	               mov dword [0x040017a0], 0	      2248	display.c	FUNCTION_11
0x40017a0	    0x890500000000	            mov dword [0x040017a6], eax 	      2241	display.c	FUNCTION_11
0x40017a6	    0x8b0500000000	            mov eax, dword [0x040017ac] 	      2242	display.c	FUNCTION_11
0x40017ac	    0xc70500000000	               mov dword [0x040017b6], 0	      2248	display.c	FUNCTION_11
0x40017b6	    0x890500000000	            mov dword [0x040017bc], eax 	      2242	display.c	FUNCTION_11
0x40017bc	    0x8b0500000000	            mov eax, dword [0x040017c2] 	      2243	display.c	FUNCTION_11
0x40017c2	    0xc70500000000	               mov dword [0x040017cc], 0	      2249	display.c	FUNCTION_11
0x40017cc	    0x890500000000	            mov dword [0x040017d2], eax 	      2243	display.c	FUNCTION_11
0x40017d2	    0x8b0500000000	            mov eax, dword [0x040017d8] 	      2244	display.c	FUNCTION_11
0x40017d8	    0xc70500000000	               mov dword [0x040017e2], 0	      2249	display.c	FUNCTION_11
0x40017e2	    0x890500000000	            mov dword [0x040017e8], eax 	      2244	display.c	FUNCTION_11
0x40017e8	      0xe9bdfeffff	                           jmp 0x40016aa	      2244	display.c	FUNCTION_11
0x40017ed	      0xe800000000	                          call 0x40017f2	      2183	display.c	FUNCTION_8
rl_redisplay	DO,0:IF,72:SWITCH,0:CALL,54:WHILE,5:functions,0:ELSE,29:FOR,6	1804
0x40037f0	            0x4157	                                push r15	       499	display.c	FUNCTION_2
0x40037f2	            0x4156	                                push r14	       499	display.c	FUNCTION_2
0x40037f4	            0x4155	                                push r13	       499	display.c	FUNCTION_2
0x40037f6	            0x4154	                                push r12	       499	display.c	FUNCTION_2
0x40037f8	              0x55	                                push rbp	       499	display.c	FUNCTION_2
0x40037f9	              0x53	                                push rbx	       499	display.c	FUNCTION_2
0x40037fa	        0x4883ec68	                           sub rsp, 0x68	       499	display.c	FUNCTION_2
0x40037fe	    0x8b1d00000000	            mov ebx, dword [0x04003804] 	       513	display.c	FUNCTION_2	IF_1
0x4003804	    0x64488b042528	                mov rax, qword fs:[0x28]	       499	display.c	FUNCTION_2
0x400380d	      0x4889442458	             mov qword [rsp + 0x58], rax	       499	display.c	FUNCTION_2
0x4003812	            0x31c0	                            xor eax, eax	       499	display.c	FUNCTION_2
0x4003814	            0x85db	                           test ebx, ebx	       513	display.c	FUNCTION_2	IF_1
0x4003816	            0x7528	                           jne 0x4003840	       513	display.c	FUNCTION_2	IF_1
0x4003818	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1254	display.c	FUNCTION_2
0x400381d	    0x644833042528	                xor rax, qword fs:[0x28]	      1254	display.c	FUNCTION_2
0x4003826	     0xf85171f0000	                           jne 0x4005743	      1254	display.c	FUNCTION_2
0x400382c	        0x4883c468	                           add rsp, 0x68	      1254	display.c	FUNCTION_2
0x4003830	              0x5b	                                 pop rbx	      1254	display.c	FUNCTION_2
0x4003831	              0x5d	                                 pop rbp	      1254	display.c	FUNCTION_2
0x4003832	            0x415c	                                 pop r12	      1254	display.c	FUNCTION_2
0x4003834	            0x415d	                                 pop r13	      1254	display.c	FUNCTION_2
0x4003836	            0x415e	                                 pop r14	      1254	display.c	FUNCTION_2
0x4003838	            0x415f	                                 pop r15	      1254	display.c	FUNCTION_2
0x400383a	              0xc3	                                     ret	      1254	display.c	FUNCTION_2
0x400383b	       0xf1f440000	                   nop dword [rax + rax]	      1254	display.c	FUNCTION_2
0x4003840	      0xe800000000	                          call 0x4003845	       518	display.c	FUNCTION_2	CALL_1
0x4003845	    0x810d00000000	         or dword [0x0400384f], 0x800000	       519	display.c	FUNCTION_2	CALL_2
0x400384f	    0x48833d000000	               cmp qword [0x04003857], 0	       521	display.c	FUNCTION_2	IF_2
0x4003857	     0xf8417180000	                            je 0x4005074	       521	display.c	FUNCTION_2	IF_2
0x400385d	    0x448b1d000000	           mov r11d, dword [0x04003864] 	       524	display.c	FUNCTION_2	IF_3
0x4003864	          0x4585db	                         test r11d, r11d	       524	display.c	FUNCTION_2	IF_3
0x4003867	     0xf84b2130000	                            je 0x4004c1f	       524	display.c	FUNCTION_2	IF_3
0x400386d	    0x8b0500000000	            mov eax, dword [0x04003873] 	       533	display.c	FUNCTION_2
0x4003873	    0x2b0500000000	             sub eax, dword [0x04003879]	       533	display.c	FUNCTION_2
0x4003879	    0x448b15000000	           mov r10d, dword [0x04003880] 	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4003880	    0xc70500000000	     mov dword [0x0400388a], 0xffffffff 	       531	display.c	FUNCTION_2
0x400388a	    0xc70500000000	               mov dword [0x04003894], 0	       540	display.c	FUNCTION_2
0x4003894	    0x890500000000	            mov dword [0x0400389a], eax 	       533	display.c	FUNCTION_2
0x400389a	    0x488b05000000	            mov rax, qword [0x040038a1] 	       535	display.c	FUNCTION_2
0x40038a1	          0x4585d2	                         test r10d, r10d	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40038a4	          0x488b00	                    mov rax, qword [rax]	       535	display.c	FUNCTION_2
0x40038a7	      0x4889442408	                mov qword [rsp + 8], rax	       535	display.c	FUNCTION_2
0x40038ac	     0xf8521130000	                           jne 0x4004bd3	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40038b2	          0x4889c2	                            mov rdx, rax	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40038b5	          0x4531e4	                          xor r12d, r12d	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40038b8	            0x31ed	                            xor ebp, ebp	       536	display.c	FUNCTION_2
0x40038ba	    0x488b05000000	            mov rax, qword [0x040038c1] 	       551	display.c	FUNCTION_2	IF_5
0x40038c1	           0xfb632	                   movzx esi, byte [rdx]	       551	display.c	FUNCTION_2	IF_5
0x40038c4	          0x488b00	                    mov rax, qword [rax]	       551	display.c	FUNCTION_2	IF_5
0x40038c7	          0x403830	                     cmp byte [rax], sil	       551	display.c	FUNCTION_2	IF_5
0x40038ca	            0x740a	                            je 0x40038d6	       551	display.c	FUNCTION_2	IF_5
0x40038cc	    0xc70500000000	               mov dword [0x040038d6], 0	       552	display.c	FUNCTION_2	IF_5
0x40038d6	    0x4c8b2d000000	            mov r13, qword [0x040038dd] 	       558	display.c	FUNCTION_2	IF_6
0x40038dd	    0x4c3b2d000000	            cmp r13, qword [0x040038e4] 	       558	display.c	FUNCTION_2	IF_6
0x40038e4	            0x740e	                            je 0x40038f4	       558	display.c	FUNCTION_2	IF_6
0x40038e6	    0x48833d000000	               cmp qword [0x040038ee], 0	       558	display.c	FUNCTION_2	IF_6
0x40038ee	     0xf84df170000	                            je 0x40050d3	       558	display.c	FUNCTION_2	IF_6
0x40038f4	    0x488b1d000000	            mov rbx, qword [0x040038fb] 	       560	display.c	FUNCTION_2	IF_6	IF_7
0x40038fb	          0x4885db	                           test rbx, rbx	       560	display.c	FUNCTION_2	IF_6	IF_7
0x40038fe	            0x7410	                            je 0x4003910	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4003900	    0x448b0d000000	            mov r9d, dword [0x04003907] 	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4003907	          0x4585c9	                           test r9d, r9d	       560	display.c	FUNCTION_2	IF_6	IF_7
0x400390a	     0xf85690e0000	                           jne 0x4004779	       560	display.c	FUNCTION_2	IF_6	IF_7
0x4003910	    0x8b1d00000000	            mov ebx, dword [0x04003916] 	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4003916	          0x4863c5	                         movsxd rax, ebp	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4003919	        0x48890424	                    mov qword [rsp], rax	       563	display.c	FUNCTION_2	IF_6	IF_8
0x400391d	            0x85db	                           test ebx, ebx	       563	display.c	FUNCTION_2	IF_6	IF_8
0x400391f	            0x7e34	                           jle 0x4003955	       563	display.c	FUNCTION_2	IF_6	IF_8
0x4003921	        0x8d441d00	                    lea eax, [rbp + rbx]	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4003925	          0x8d5002	                      lea edx, [rax + 2]	       565	display.c	FUNCTION_2	IF_6	IF_8
0x4003928	    0x3b1500000000	            cmp edx, dword [0x0400392e] 	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x400392e	     0xf8d7a130000	                           jge 0x4004cae	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003934	            0x89c5	                            mov ebp, eax	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4003936	      0x488b442408	                mov rax, qword [rsp + 8]	       566	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x400393b	    0x488b35000000	            mov rsi, qword [0x04003942] 	       126	string3.h	FUNCTION_50	CALL_3
0x4003942	        0x4a8d3c20	                    lea rdi, [rax + r12]	       126	string3.h	FUNCTION_50	CALL_3
0x4003946	          0x4863d3	                         movsxd rdx, ebx	       126	string3.h	FUNCTION_50	CALL_3
0x4003949	          0x4c63e5	                         movsxd r12, ebp	       126	string3.h	FUNCTION_50	CALL_3
0x400394c	      0xe800000000	                          call 0x4003951	       126	string3.h	FUNCTION_50	CALL_3
0x4003951	        0x4c892424	                    mov qword [rsp], r12	       126	string3.h	FUNCTION_50	CALL_3
0x4003955	      0x488b442408	                mov rax, qword [rsp + 8]	       575	display.c	FUNCTION_2	IF_6
0x400395a	      0x42c6042000	                 mov byte [rax + r12], 0	       575	display.c	FUNCTION_2	IF_6
0x400395f	    0x2b1d00000000	             sub ebx, dword [0x04003965]	       576	display.c	FUNCTION_2	IF_6
0x4003965	    0x891d00000000	            mov dword [0x0400396b], ebx 	       576	display.c	FUNCTION_2	IF_6
0x400396b	    0x488b05000000	            mov rax, qword [0x04003972] 	       660	display.c	FUNCTION_2
0x4003972	    0x8b1d00000000	            mov ebx, dword [0x04003978] 	       661	display.c	FUNCTION_2
0x4003978	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_45	CALL_6
0x400397a	          0x4531ed	                          xor r13d, r13d	       678	display.c	FUNCTION_2	WHILE_1
0x400397d	          0x4531e4	                          xor r12d, r12d	       665	display.c	FUNCTION_2
0x4003980	    0x41be01000000	                             mov r14d, 1	       678	display.c	FUNCTION_2	WHILE_1
0x4003986	        0x488b5008	                mov rdx, qword [rax + 8]	       660	display.c	FUNCTION_2
0x400398a	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        90	string3.h	FUNCTION_45	CALL_6
0x400398e	    0xc70200000000	                      mov dword [rdx], 0	       660	display.c	FUNCTION_2
0x4003994	        0x48635020	         movsxd rdx, dword [rax + 0x20] 	        90	string3.h	FUNCTION_45	CALL_6
0x4003998	     0x31d00000000	             add ebx, dword [0x0400399e]	       661	display.c	FUNCTION_2
0x400399e	        0x48c1e202	                              shl rdx, 2	        90	string3.h	FUNCTION_45	CALL_6
0x40039a2	      0xe800000000	                          call 0x40039a7	        90	string3.h	FUNCTION_45	CALL_6
0x40039a7	    0x8b0d00000000	            mov ecx, dword [0x040039ad] 	       674	display.c	FUNCTION_2
0x40039ad	            0x89d8	                            mov eax, ebx	       674	display.c	FUNCTION_2
0x40039af	        0x896c2418	             mov dword [rsp + 0x18], ebp	       674	display.c	FUNCTION_2
0x40039b3	              0x99	                                     cdq	       674	display.c	FUNCTION_2
0x40039b4	          0x4489fd	                           mov ebp, r15d	       674	display.c	FUNCTION_2
0x40039b7	          0x4589ef	                          mov r15d, r13d	       674	display.c	FUNCTION_2
0x40039ba	            0xf7f9	                                idiv ecx	       674	display.c	FUNCTION_2
0x40039bc	            0x39cb	                            cmp ebx, ecx	       678	display.c	FUNCTION_2	WHILE_1
0x40039be	        0x89442420	             mov dword [rsp + 0x20], eax	       674	display.c	FUNCTION_2
0x40039c2	     0xf8c83010000	                            jl 0x4003b4b	       678	display.c	FUNCTION_2	WHILE_1
0x40039c8	     0xf1f84000000	                   nop dword [rax + rax]	       678	display.c	FUNCTION_2	WHILE_1
0x40039d0	      0xe800000000	                          call 0x40039d5	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039d5	        0x4883f801	                              cmp rax, 1	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039d9	     0xf86e1000000	                           jbe 0x4003ac0	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039df	    0x8b3d00000000	            mov edi, dword [0x040039e5] 	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039e5	            0x85ff	                           test edi, edi	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039e7	     0xf85d3000000	                           jne 0x4003ac0	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039ed	    0x8b3500000000	            mov esi, dword [0x040039f3] 	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039f3	            0x85f6	                           test esi, esi	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039f5	     0xf8ec5000000	                           jle 0x4003ac0	       689	display.c	FUNCTION_2	WHILE_1	IF_14
0x40039fb	    0x8b2d00000000	            mov ebp, dword [0x04003a01] 	       692	display.c	FUNCTION_2	WHILE_1	IF_14
0x4003a01	            0x31c0	                            xor eax, eax	      2621	display.c	IF_104
0x4003a03	    0x8b1500000000	            mov edx, dword [0x04003a09] 	      2621	display.c	IF_104
0x4003a09	          0x4589e7	                          mov r15d, r12d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a0c	          0x4139ec	                           cmp r12d, ebp	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a0f	     0xf8db0170000	                           jge 0x40051c5	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a15	           0xf1f00	                         nop dword [rax]	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a18	            0x39d0	                            cmp eax, edx	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4003a1a	            0x7f5b	                            jg 0x4003a77	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4003a1c	     0xf842e040000	                            je 0x4003e50	       701	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	ELSE_3	IF_16
0x4003a22	        0x4183c701	                             add r15d, 1	       703	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a26	          0x4439fd	                           cmp ebp, r15d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a29	     0xf8421040000	                            je 0x4003e50	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a2f	            0x31c0	                            xor eax, eax	      2621	display.c	IF_104
0x4003a31	          0x4539fc	                          cmp r12d, r15d	      2620	display.c	IF_104
0x4003a34	            0x7de2	                           jge 0x4003a18	      2620	display.c	IF_104
0x4003a36	    0x488b05000000	            mov rax, qword [0x04003a3d] 	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a3d	      0x4889442410	             mov qword [rsp + 0x10], rax	       695	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003a42	      0xe800000000	                          call 0x4003a47	      2622	display.c	IF_105
0x4003a47	        0x4883f801	                              cmp rax, 1	      2622	display.c	IF_105
0x4003a4b	            0x740e	                            je 0x4003a5b	      2622	display.c	IF_105
0x4003a4d	    0x8b0d00000000	            mov ecx, dword [0x04003a53] 	      2622	display.c	IF_105
0x4003a53	            0x85c9	                           test ecx, ecx	      2622	display.c	IF_105
0x4003a55	     0xf84d5030000	                            je 0x4003e30	      2622	display.c	IF_105
0x4003a5b	            0x31c0	                            xor eax, eax	      2624	display.c	IF_105	CALL_117
0x4003a5d	      0xbf00000000	                              mov edi, 0	      2624	display.c	IF_105	CALL_117
0x4003a62	      0xe800000000	                          call 0x4003a67	      2624	display.c	IF_105	CALL_117
0x4003a67	    0x8b1500000000	            mov edx, dword [0x04003a6d] 	      2624	display.c	IF_105	CALL_117
0x4003a6d	          0x4489f8	                           mov eax, r15d	      2624	display.c	IF_105	CALL_117
0x4003a70	          0x4429e0	                           sub eax, r12d	      2624	display.c	IF_105	CALL_117
0x4003a73	            0x39d0	                            cmp eax, edx	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4003a75	            0x7ea5	                           jle 0x4003a1c	       696	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4003a77	    0x488b3d000000	            mov rdi, qword [0x04003a7e] 	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4003a7e	            0x31d2	                            xor edx, edx	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4003a80	          0x4489fe	                           mov esi, r15d	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4003a83	          0x4489e5	                           mov ebp, r12d	       699	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15
0x4003a86	      0xe800000000	                          call 0x4003a8b	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4003a8b	    0x48833d000000	               cmp qword [0x04003a93], 0	       716	display.c	FUNCTION_2	WHILE_1
0x4003a93	          0x4189c7	                           mov r15d, eax	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4003a96	          0x4189c4	                           mov r12d, eax	       698	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2	IF_15	CALL_19
0x4003a99	            0x753a	                           jne 0x4003ad5	       716	display.c	FUNCTION_2	WHILE_1
0x4003a9b	       0xf1f440000	                   nop dword [rax + rax]	       716	display.c	FUNCTION_2	WHILE_1
0x4003aa0	          0x4585ed	                         test r13d, r13d	       715	display.c	FUNCTION_2	WHILE_1
0x4003aa3	            0x740b	                            je 0x4003ab0	       715	display.c	FUNCTION_2	WHILE_1
0x4003aa5	      0x443b6c2420	           cmp r13d, dword [rsp + 0x20] 	       715	display.c	FUNCTION_2	WHILE_1
0x4003aaa	     0xf8470030000	                            je 0x4003e20	       715	display.c	FUNCTION_2	WHILE_1
0x4003ab0	    0x8b0500000000	            mov eax, dword [0x04003ab6] 	       715	display.c	FUNCTION_2	WHILE_1
0x4003ab6	            0xeb28	                           jmp 0x4003ae0	       715	display.c	FUNCTION_2	WHILE_1
0x4003ab8	     0xf1f84000000	                   nop dword [rax + rax]	       715	display.c	FUNCTION_2	WHILE_1
0x4003ac0	    0x448b3d000000	           mov r15d, dword [0x04003ac7] 	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4003ac7	        0x450faffe	                         imul r15d, r14d	       709	display.c	FUNCTION_2	WHILE_1	ELSE_4
0x4003acb	    0x48833d000000	               cmp qword [0x04003ad3], 0	       716	display.c	FUNCTION_2	WHILE_1
0x4003ad3	            0x74cb	                            je 0x4003aa0	       716	display.c	FUNCTION_2	WHILE_1
0x4003ad5	          0x4585ed	                         test r13d, r13d	       716	display.c	FUNCTION_2	WHILE_1
0x4003ad8	     0xf8442030000	                            je 0x4003e20	       716	display.c	FUNCTION_2	WHILE_1
0x4003ade	            0x31c0	                            xor eax, eax	       716	display.c	FUNCTION_2	WHILE_1
0x4003ae0	    0x488b15000000	            mov rdx, qword [0x04003ae7] 	       718	display.c	FUNCTION_2	WHILE_1
0x4003ae7	        0x458d0407	                    lea r8d, [r15 + rax]	       718	display.c	FUNCTION_2	WHILE_1
0x4003aeb	          0x4963ce	                        movsxd rcx, r14d	       718	display.c	FUNCTION_2	WHILE_1
0x4003aee	        0x488b5208	                mov rdx, qword [rdx + 8]	       718	display.c	FUNCTION_2	WHILE_1
0x4003af2	        0x4489048a	            mov dword [rdx + rcx*4], r8d	       718	display.c	FUNCTION_2	WHILE_1
0x4003af6	      0xe800000000	                          call 0x4003afb	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003afb	        0x4883f801	                              cmp rax, 1	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003aff	     0xf860b030000	                           jbe 0x4003e10	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b05	    0x8b0500000000	            mov eax, dword [0x04003b0b] 	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b0b	            0x85c0	                           test eax, eax	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b0d	     0xf85fd020000	                           jne 0x4003e10	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b13	    0x8b1500000000	            mov edx, dword [0x04003b19] 	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b19	            0x85d2	                           test edx, edx	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b1b	     0xf8eef020000	                           jle 0x4003e10	       720	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b21	          0x4439e5	                           cmp ebp, r12d	      2620	display.c	IF_104
0x4003b24	     0xf8c260a0000	                            jl 0x4004550	      2620	display.c	IF_104
0x4003b2a	    0x8b0d00000000	            mov ecx, dword [0x04003b30] 	      2620	display.c	IF_104
0x4003b30	            0x29c3	                            sub ebx, eax	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b32	    0x660f1f440000	                    nop word [rax + rax]	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b38	        0x4183c501	                             add r13d, 1	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b3c	        0x4183c601	                             add r14d, 1	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4003b40	            0x39cb	                            cmp ebx, ecx	       678	display.c	FUNCTION_2	WHILE_1
0x4003b42	          0x4589ef	                          mov r15d, r13d	       678	display.c	FUNCTION_2	WHILE_1
0x4003b45	     0xf8d85feffff	                           jge 0x40039d0	       678	display.c	FUNCTION_2	WHILE_1
0x4003b4b	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	       678	display.c	FUNCTION_2	WHILE_1
0x4003b4f	    0x44892d000000	           mov dword [0x04003b56], r13d 	       727	display.c	FUNCTION_2	ELSE_5
0x4003b56	      0xe800000000	                          call 0x4003b5b	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003b5b	        0x4883f801	                              cmp rax, 1	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003b5f	    0x48c744241001	               mov qword [rsp + 0x10], 1	       744	display.c	FUNCTION_2	ELSE_6
0x4003b68	            0x760e	                           jbe 0x4003b78	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003b6a	    0x8b0500000000	            mov eax, dword [0x04003b70] 	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003b70	            0x85c0	                           test eax, eax	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003b72	     0xf84180c0000	                            je 0x4004790	       737	display.c	FUNCTION_2	ELSE_5	IF_18
0x4003b78	    0xc74424200000	               mov dword [rsp + 0x20], 0	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003b80	    0xc74424340000	               mov dword [rsp + 0x34], 0	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003b88	          0x4531f6	                          xor r14d, r14d	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4003b8b	    0x443b35000000	           cmp r14d, dword [0x04003b92] 	       745	display.c	FUNCTION_2	WHILE_3
0x4003b92	     0xf8d14010000	                           jge 0x4003cac	       745	display.c	FUNCTION_2	WHILE_3
0x4003b98	          0x4963c6	                        movsxd rax, r14d	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4003b9b	          0x4889c7	                            mov rdi, rax	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4003b9e	      0x4889442418	             mov qword [rsp + 0x18], rax	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4003ba3	    0x488b05000000	            mov rax, qword [0x04003baa] 	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4003baa	      0x440fb62c38	            movzx r13d, byte [rax + rdi]	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4003baf	      0xe800000000	                          call 0x4003bb4	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003bb4	        0x4883f801	                              cmp rax, 1	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003bb8	          0x4589ec	                          mov r12d, r13d	       750	display.c	FUNCTION_2	WHILE_3	FOR_1
0x4003bbb	            0x7644	                           jbe 0x4003c01	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003bbd	    0x8b0500000000	            mov eax, dword [0x04003bc3] 	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003bc3	            0x85c0	                           test eax, eax	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003bc5	            0x753a	                           jne 0x4003c01	       753	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19
0x4003bc7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4003bcc	        0x4883c002	                              add rax, 2	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4003bd0	        0x4883f801	                              cmp rax, 1	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4003bd4	     0xf8656090000	                           jbe 0x4004530	       755	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20	CALL_22
0x4003bda	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       764	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21	CALL_24
0x4003be0	     0xf84c6000000	                            je 0x4003cac	       764	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_7	IF_21	CALL_24
0x4003be6	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4003bea	            0x31c0	                            xor eax, eax	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4003bec	      0xe800000000	                          call 0x4003bf1	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4003bf1	            0x89c7	                            mov edi, eax	       768	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8	CALL_25
0x4003bf3	            0x85c0	                           test eax, eax	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4003bf5	      0xb801000000	                              mov eax, 1	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4003bfa	           0xf49c7	                         cmovns eax, edi	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4003bfd	        0x89442430	             mov dword [rsp + 0x30], eax	       769	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	ELSE_8
0x4003c01	    0x8b3500000000	            mov esi, dword [0x04003c07] 	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003c07	          0x8d5508	                      lea edx, [rbp + 8]	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003c0a	            0x39f2	                            cmp edx, esi	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003c0c	     0xf8d86030000	                           jge 0x4003f98	       774	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003c12	    0x443b35000000	           cmp r14d, dword [0x04003c19] 	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4003c19	     0xf84e7030000	                            je 0x4004006	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4003c1f	        0x418d4580	                   lea eax, [r13 - 0x80]	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4003c23	          0x83f87f	                           cmp eax, 0x7f	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4003c26	     0xf8734020000	                            ja 0x4003e60	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4003c2c	    0x448b1d000000	           mov r11d, dword [0x04003c33] 	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4003c33	          0x4585db	                         test r11d, r11d	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4003c36	     0xf8524020000	                           jne 0x4003e60	       789	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	CALL_28
0x4003c3c	        0x488b3c24	                    mov rdi, qword [rsp]	        33	stdio2.h	FUNCTION_25	CALL_1
0x4003c40	      0x48037c2408	                add rdi, qword [rsp + 8]	        33	stdio2.h	FUNCTION_25	CALL_1
0x4003c45	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_25	CALL_1
0x4003c4c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_25	CALL_1
0x4003c4e	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_25	CALL_1
0x4003c51	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_25	CALL_1
0x4003c56	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_25	CALL_1
0x4003c5b	      0xe800000000	                          call 0x4003c60	        33	stdio2.h	FUNCTION_25	CALL_1
0x4003c60	    0x8b1500000000	            mov edx, dword [0x04003c66] 	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003c66	          0x8d4304	                      lea eax, [rbx + 4]	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003c69	            0x39d0	                            cmp eax, edx	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003c6b	     0xf8d97090000	                           jge 0x4004608	       798	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4003c71	          0x83c504	                              add ebp, 4	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003c74	            0x89c3	                            mov ebx, eax	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003c76	          0x4863c5	                         movsxd rax, ebp	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003c79	        0x48890424	                    mov qword [rsp], rax	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003c7d	           0xf1f00	                         nop dword [rax]	       808	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26
0x4003c80	      0xe800000000	                          call 0x4003c85	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003c85	        0x4883f801	                              cmp rax, 1	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003c89	            0x7610	                           jbe 0x4003c9b	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003c8b	    0x448b05000000	            mov r8d, dword [0x04003c92] 	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003c92	          0x4585c0	                           test r8d, r8d	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003c95	     0xf8485030000	                            je 0x4004020	       898	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4003c9b	        0x4183c601	                             add r14d, 1	       905	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_17
0x4003c9f	    0x443b35000000	           cmp r14d, dword [0x04003ca6] 	       745	display.c	FUNCTION_2	WHILE_3
0x4003ca6	     0xf8cecfeffff	                            jl 0x4003b98	       745	display.c	FUNCTION_2	WHILE_3
0x4003cac	    0x8b1d00000000	            mov ebx, dword [0x04003cb2] 	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003cb2	      0x488b442408	                mov rax, qword [rsp + 8]	       909	display.c	FUNCTION_2	ELSE_17
0x4003cb7	        0x488b3424	                    mov rsi, qword [rsp]	       909	display.c	FUNCTION_2	ELSE_17
0x4003cbb	            0x85db	                           test ebx, ebx	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003cbd	        0xc6043000	                 mov byte [rax + rsi], 0	       909	display.c	FUNCTION_2	ELSE_17
0x4003cc1	     0xf88c00f0000	                            js 0x4004c87	       910	display.c	FUNCTION_2	ELSE_17	IF_36
0x4003cc7	    0x4c8b35000000	            mov r14, qword [0x04003cce] 	       917	display.c	FUNCTION_2
0x4003cce	        0x418b4610	            mov eax, dword [r14 + 0x10] 	       917	display.c	FUNCTION_2
0x4003cd2	          0x8d50fe	                      lea edx, [rax - 2]	       917	display.c	FUNCTION_2
0x4003cd5	          0x4139d7	                           cmp r15d, edx	       917	display.c	FUNCTION_2
0x4003cd8	     0xf8dcc0e0000	                           jge 0x4004baa	       917	display.c	FUNCTION_2
0x4003cde	        0x498b4e08	                mov rcx, qword [r14 + 8]	       918	display.c	FUNCTION_2
0x4003ce2	          0x4963c7	                        movsxd rax, r15d	       918	display.c	FUNCTION_2
0x4003ce5	        0x896c8104	        mov dword [rcx + rax*4 + 4], ebp	       918	display.c	FUNCTION_2
0x4003ce9	    0x8b3d00000000	            mov edi, dword [0x04003cef] 	       933	display.c	FUNCTION_2	IF_37
0x4003cef	            0x85ff	                           test edi, edi	       933	display.c	FUNCTION_2	IF_37
0x4003cf1	     0xf85a9070000	                           jne 0x40044a0	       933	display.c	FUNCTION_2	IF_37
0x4003cf7	    0x488b05000000	            mov rax, qword [0x04003cfe] 	       933	display.c	FUNCTION_2	IF_37
0x4003cfe	          0x4885c0	                           test rax, rax	       933	display.c	FUNCTION_2	IF_37
0x4003d01	     0xf8499070000	                            je 0x40044a0	       933	display.c	FUNCTION_2	IF_37
0x4003d07	          0x803800	                       cmp byte [rax], 0	       933	display.c	FUNCTION_2	IF_37
0x4003d0a	     0xf8490070000	                            je 0x40044a0	       933	display.c	FUNCTION_2	IF_37
0x4003d10	    0x8b3500000000	            mov esi, dword [0x04003d16] 	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4003d16	            0x85f6	                           test esi, esi	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4003d18	     0xf8559100000	                           jne 0x4004d77	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4003d1e	    0x3b2d00000000	            cmp ebp, dword [0x04003d24] 	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x4003d24	    0xc70500000000	               mov dword [0x04003d2e], 0	       939	display.c	FUNCTION_2	IF_37	IF_38
0x4003d2e	     0xf8d97150000	                           jge 0x40052cb	       944	display.c	FUNCTION_2	IF_37	IF_38	IF_39
0x4003d34	            0x31c0	                            xor eax, eax	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003d36	            0x31db	                            xor ebx, ebx	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003d38	      0xe98d000000	                           jmp 0x4003dca	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003d3d	           0xf1f00	                         nop dword [rax]	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003d40	    0x4c8b0d000000	              mov r9, qword [0x04003d47]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003d47	          0x4889d6	                            mov rsi, rdx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003d4a	          0x490336	                    add rsi, qword [r14]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003d4d	        0x498b4908	                 mov rcx, qword [r9 + 8]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003d51	        0x48633c01	           movsxd rdi, dword [rcx + rax]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003d55	        0x8b4c0104	         mov ecx, dword [rcx + rax + 4] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003d59	            0x29f9	                            sub ecx, edi	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003d5b	          0x490339	                     add rdi, qword [r9]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003d5e	          0x4589f9	                           mov r9d, r15d	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003d61	            0x89da	                            mov edx, ebx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003d63	      0xe8b8e0ffff	                    call sym.update_line	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003d68	            0x85db	                           test ebx, ebx	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4003d6a	     0xf8446190000	                            je 0x40056b6	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4003d70	    0x3b1d00000000	            cmp ebx, dword [0x04003d76] 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003d76	     0xf8474100000	                            je 0x4004df0	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4003d7c	          0x4489f8	                           mov eax, r15d	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003d7f	             0x9d8	                             or eax, ebx	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003d81	     0xf8559100000	                           jne 0x4004de0	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003d87	    0x3b2d00000000	            cmp ebp, dword [0x04003d8d] 	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003d8d	     0xf84dd100000	                            je 0x4004e70	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4003d93	          0x4585ff	                         test r15d, r15d	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003d96	     0xf849a190000	                            je 0x4005736	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003d9c	    0x488b05000000	            mov rax, qword [0x04003da3] 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003da3	        0x488b4008	                mov rax, qword [rax + 8]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003da7	          0x8b4004	                mov eax, dword [rax + 4]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003daa	    0x890500000000	            mov dword [0x04003db0], eax 	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4003db0	          0x83c301	                              add ebx, 1	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003db3	          0x4139df	                           cmp r15d, ebx	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003db6	     0xf8c040a0000	                            jl 0x40047c0	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003dbc	    0x4c8b35000000	            mov r14, qword [0x04003dc3] 	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003dc3	          0x4c89e0	                            mov rax, r12	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003dc6	        0x498b4e08	                mov rcx, qword [r14 + 8]	       973	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003dca	        0x48631401	           movsxd rdx, dword [rcx + rax]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003dce	      0x448b440104	         mov r8d, dword [rcx + rax + 4] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003dd3	        0x4c8d6004	                      lea r12, [rax + 4]	       980	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003dd7	    0x448b2d000000	           mov r13d, dword [0x04003dde] 	       977	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003dde	    0xc70500000000	               mov dword [0x04003de8], 0	       978	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5
0x4003de8	          0x4129d0	                            sub r8d, edx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003deb	    0x3b1d00000000	            cmp ebx, dword [0x04003df1] 	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003df1	     0xf8e49ffffff	                           jle 0x4003d40	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003df7	          0x4889d6	                            mov rsi, rdx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003dfa	            0x31c9	                            xor ecx, ecx	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003dfc	          0x490336	                    add rsi, qword [r14]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003dff	      0xbf00000000	                              mov edi, 0	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e04	      0xe955ffffff	                           jmp 0x4003d5e	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e09	     0xf1f80000000	                         nop dword [rax]	       979	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	CALL_35
0x4003e10	    0x8b0d00000000	            mov ecx, dword [0x04003e16] 	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x4003e16	            0x29cb	                            sub ebx, ecx	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x4003e18	      0xe91bfdffff	                           jmp 0x4003b38	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x4003e1d	           0xf1f00	                         nop dword [rax]	       724	display.c	FUNCTION_2	WHILE_1	ELSE_5
0x4003e20	    0x8b0500000000	            mov eax, dword [0x04003e26] 	       715	display.c	FUNCTION_2	WHILE_1
0x4003e26	      0xe9b5fcffff	                           jmp 0x4003ae0	       715	display.c	FUNCTION_2	WHILE_1
0x4003e2b	       0xf1f440000	                   nop dword [rax + rax]	       715	display.c	FUNCTION_2	WHILE_1
0x4003e30	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       715	display.c	FUNCTION_2	WHILE_1
0x4003e35	          0x4489fa	                           mov edx, r15d	       715	display.c	FUNCTION_2	WHILE_1
0x4003e38	      0xb901000000	                              mov ecx, 1	       715	display.c	FUNCTION_2	WHILE_1
0x4003e3d	          0x4489e6	                           mov esi, r12d	       715	display.c	FUNCTION_2	WHILE_1
0x4003e40	      0xe8cbc3ffff	           call sym._rl_col_width.part.0	       715	display.c	FUNCTION_2	WHILE_1
0x4003e45	    0x8b1500000000	            mov edx, dword [0x04003e4b] 	       715	display.c	FUNCTION_2	WHILE_1
0x4003e4b	      0xe9c8fbffff	                           jmp 0x4003a18	       715	display.c	FUNCTION_2	WHILE_1
0x4003e50	          0x4489e5	                           mov ebp, r12d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003e53	          0x4589fc	                          mov r12d, r15d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003e56	      0xe970fcffff	                           jmp 0x4003acb	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003e5b	       0xf1f440000	                   nop dword [rax + rax]	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4003e60	        0x4180fc09	                             cmp r12b, 9	       817	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003e64	     0xf84ee010000	                            je 0x4004058	       817	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4003e6a	        0x4180fc0a	                           cmp r12b, 0xa	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003e6e	     0xf847c040000	                            je 0x40042f0	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4003e74	        0x4183fd1f	                          cmp r13d, 0x1f	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003e78	     0xf8e52020000	                           jle 0x40040d0	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003e7e	        0x4183fd7f	                          cmp r13d, 0x7f	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003e82	     0xf8551020000	                           jne 0x40040d9	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x4003e88	      0x488b442408	                mov rax, qword [rsp + 8]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003e8d	        0x488b3424	                    mov rsi, qword [rsp]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003e91	        0x448d6d01	                     lea r13d, [rbp + 1]	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003e95	        0xc604305e	              mov byte [rax + rsi], 0x5e	       854	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003e99	          0x8d4301	                      lea eax, [rbx + 1]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003e9c	          0x83c302	                              add ebx, 2	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003e9f	    0x3b0500000000	            cmp eax, dword [0x04003ea5] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ea5	            0x7c44	                            jl 0x4003eeb	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ea7	    0x488b1d000000	            mov rbx, qword [0x04003eae] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003eae	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003eb1	          0x8d50fe	                      lea edx, [rax - 2]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003eb4	          0x4139d7	                           cmp r15d, edx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003eb7	     0xf8d03070000	                           jge 0x40045c0	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ebd	        0x488b4308	                mov rax, qword [rbx + 8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ec1	        0x4183c701	                             add r15d, 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ec5	          0x4963d7	                        movsxd rdx, r15d	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ec8	        0x44892c90	           mov dword [rax + rdx*4], r13d	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ecc	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ecf	          0x8d48ff	                      lea ecx, [rax - 1]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ed2	          0x4139cf	                           cmp r15d, ecx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ed5	     0xf8db5060000	                           jge 0x4004590	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003edb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003edf	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ee3	      0xbb01000000	                              mov ebx, 1	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003ee8	          0x893490	            mov dword [rax + rdx*4], esi	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003eeb	          0x83c502	                              add ebp, 2	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003eee	          0x4d63ed	                        movsxd r13, r13d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003ef1	      0x4c036c2408	                add r13, qword [rsp + 8]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003ef6	        0x4180fc1f	                          cmp r12b, 0x1f	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003efa	      0xb83f000000	                           mov eax, 0x3f	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003eff	            0x772f	                            ja 0x4003f30	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f01	          0x4584e4	                         test r12b, r12b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f04	            0x782a	                            js 0x4003f30	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f06	      0xe800000000	                          call 0x4003f0b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f0b	          0x488b08	                    mov rcx, qword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f0e	        0x4183cc40	                           or r12d, 0x40	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f12	        0x410fb6d4	                         movzx edx, r12b	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f16	          0x4489e0	                           mov eax, r12d	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f19	        0x48891424	                    mov qword [rsp], rdx	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f1d	      0xf644510102	         test byte [rcx + rdx*2 + 1], 2 	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f22	     0xf85c8060000	                           jne 0x40045f0	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f28	     0xf1f84000000	                   nop dword [rax + rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f30	        0x41884500	                      mov byte [r13], al	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4003f34	    0x391d00000000	            cmp dword [0x04003f3a], ebx 	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003f3a	          0x4863c5	                         movsxd rax, ebp	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003f3d	        0x48890424	                    mov qword [rsp], rax	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003f41	     0xf8f39fdffff	                            jg 0x4003c80	       857	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4003f47	    0x488b1d000000	            mov rbx, qword [0x04003f4e] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f4e	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f51	          0x8d50fe	                      lea edx, [rax - 2]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f54	          0x4139d7	                           cmp r15d, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f57	     0xf8d13050000	                           jge 0x4004470	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f5d	        0x488b4308	                mov rax, qword [rbx + 8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f61	        0x4183c701	                             add r15d, 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f65	          0x4d63e7	                        movsxd r12, r15d	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f68	        0x42892ca0	            mov dword [rax + r12*4], ebp	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f6c	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f6f	          0x8d50ff	                      lea edx, [rax - 1]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f72	          0x4139d7	                           cmp r15d, edx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f75	     0xf8dcd040000	                           jge 0x4004448	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f7b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f7f	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f83	            0x31db	                            xor ebx, ebx	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f85	        0x428934a0	            mov dword [rax + r12*4], esi	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f89	          0x4863c5	                         movsxd rax, ebp	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f8c	        0x48890424	                    mov qword [rsp], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f90	      0xe9ebfcffff	                           jmp 0x4003c80	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f95	           0xf1f00	                         nop dword [rax]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4003f98	    0x488b0d000000	            mov rcx, qword [0x04003f9f] 	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003f9f	             0x1f6	                            add esi, esi	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003fa1	        0x89542428	             mov dword [rsp + 0x28], edx	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003fa5	    0x893500000000	            mov dword [0x04003fab], esi 	       776	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003fab	          0x4863f6	                         movsxd rsi, esi	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003fae	          0x488b39	                    mov rdi, qword [rcx]	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003fb1	      0x48894c2408	                mov qword [rsp + 8], rcx	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003fb6	      0xe800000000	                          call 0x4003fbb	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003fbb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003fc0	    0x486335000000	         movsxd rsi, dword [0x04003fc7] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003fc7	          0x488901	                    mov qword [rcx], rax	       777	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_26
0x4003fca	    0x488b0d000000	            mov rcx, qword [0x04003fd1] 	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003fd1	          0x488b39	                    mov rdi, qword [rcx]	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003fd4	      0x48894c2408	                mov qword [rsp + 8], rcx	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003fd9	      0xe800000000	                          call 0x4003fde	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003fde	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003fe3	    0x443b35000000	           cmp r14d, dword [0x04003fea] 	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4003fea	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003fee	          0x488901	                    mov qword [rcx], rax	       778	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22	CALL_27
0x4003ff1	    0x488b05000000	            mov rax, qword [0x04003ff8] 	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003ff8	          0x488b00	                    mov rax, qword [rax]	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4003ffb	      0x4889442408	                mov qword [rsp + 8], rax	       779	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_22
0x4004000	     0xf8519fcffff	                           jne 0x4003c1f	       782	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4004006	    0x892d00000000	            mov dword [0x0400400c], ebp 	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x400400c	      0x44897c2434	            mov dword [rsp + 0x34], r15d	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4004011	      0xe909fcffff	                           jmp 0x4003c1f	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4004016	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       784	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_23
0x4004020	      0x4403742410	            add r14d, dword [rsp + 0x10]	       900	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35
0x4004025	    0x8b1500000000	            mov edx, dword [0x0400402b] 	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x400402b	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4004030	      0x488d7c244c	                   lea rdi, [rsp + 0x4c]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4004035	          0x4963f6	                        movsxd rsi, r14d	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4004038	    0x480335000000	             add rsi, qword [0x0400403f]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x400403f	          0x4429f2	                           sub edx, r14d	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4004042	          0x4863d2	                         movsxd rdx, edx	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4004045	      0xe800000000	                          call 0x400404a	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x400404a	      0x4889442410	             mov qword [rsp + 0x10], rax	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x400404f	      0xe937fbffff	                           jmp 0x4003b8b	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4004054	         0xf1f4000	                         nop dword [rax]	       902	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_35	CALL_33
0x4004058	            0x89d9	                            mov ecx, ebx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400405a	          0xc1f91f	                           sar ecx, 0x1f	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400405d	          0xc1e91d	                           shr ecx, 0x1d	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4004060	          0x8d040b	                    lea eax, [rbx + rcx]	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4004063	          0x83e007	                              and eax, 7	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4004066	            0x29c8	                            sub eax, ecx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4004068	            0x29c2	                            sub edx, eax	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x400406a	    0x8b0500000000	            mov eax, dword [0x04004070] 	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004070	          0x4189d5	                           mov r13d, edx	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4004073	          0x4189d4	                           mov r12d, edx	       824	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4004076	          0x4129ed	                           sub r13d, ebp	       826	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28
0x4004079	        0x468d042b	                    lea r8d, [rbx + r13]	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400407d	          0x4139c0	                            cmp r8d, eax	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004080	     0xf8d0a030000	                           jge 0x4004390	       827	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004086	            0x39d5	                            cmp ebp, edx	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4004088	          0x4489c3	                            mov ebx, r8d	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400408b	     0xf8deffbffff	                           jge 0x4003c80	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4004091	            0xf7d5	                                 not ebp	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4004093	        0x488b3c24	                    mov rdi, qword [rsp]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x4004097	      0x48037c2408	                add rdi, qword [rsp + 8]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x400409c	        0x8d541500	                    lea edx, [rbp + rdx]	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040a0	      0xbe20000000	                           mov esi, 0x20	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040a5	      0x4489442418	             mov dword [rsp + 0x18], r8d	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040aa	        0x4883c201	                              add rdx, 1	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040ae	      0xe800000000	                          call 0x40040b3	       839	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040b3	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040b8	          0x4963c4	                        movsxd rax, r12d	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040bb	          0x4889c5	                            mov rbp, rax	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040be	        0x48890424	                    mov qword [rsp], rax	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040c2	          0x4489c3	                            mov ebx, r8d	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040c5	      0xe9b6fbffff	                           jmp 0x4003c80	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040ca	    0x660f1f440000	                    nop word [rax + rax]	       840	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	ELSE_12	WHILE_5
0x40040d0	          0x4584e4	                         test r12b, r12b	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x40040d3	     0xf89affdffff	                           jns 0x4003e88	       852	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_30
0x40040d9	      0xe800000000	                          call 0x40040de	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40040de	        0x4883f801	                              cmp rax, 1	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40040e2	     0xf8678020000	                           jbe 0x4004360	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40040e8	    0x448b0d000000	            mov r9d, dword [0x040040ef] 	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40040ef	          0x4585c9	                           test r9d, r9d	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40040f2	     0xf8568020000	                           jne 0x4004360	       862	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x40040f8	        0x8b742430	            mov esi, dword [rsp + 0x30] 	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x40040fc	    0x8b0500000000	            mov eax, dword [0x04004102] 	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4004102	    0xc74424200000	               mov dword [rsp + 0x20], 0	       866	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32
0x400410a	          0x8d1433	                    lea edx, [rbx + rsi]	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x400410d	            0x39c2	                            cmp edx, eax	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x400410f	     0xf8eee000000	                           jle 0x4004203	       868	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33
0x4004115	            0x39c3	                            cmp ebx, eax	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004117	     0xf8de6000000	                           jge 0x4004203	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400411d	        0x448d4d01	                      lea r9d, [rbp + 1]	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004121	        0x488b0c24	                    mov rcx, qword [rsp]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004125	      0x448974243c	            mov dword [rsp + 0x3c], r14d	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400412a	          0x4531e4	                          xor r12d, r12d	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400412d	        0x448d4301	                      lea r8d, [rbx + 1]	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004131	      0x48034c2408	                add rcx, qword [rsp + 8]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004136	          0x4589ce	                           mov r14d, r9d	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004139	            0xeb3f	                           jmp 0x400417a	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400413b	       0xf1f440000	                   nop dword [rax + rax]	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004140	        0x488b4308	                mov rax, qword [rbx + 8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004144	        0x4183c701	                             add r15d, 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004148	          0x4d63d7	                        movsxd r10, r15d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400414b	        0x42891490	            mov dword [rax + r10*4], edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400414f	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004152	          0x8d70ff	                      lea esi, [rax - 1]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004155	          0x4139f7	                           cmp r15d, esi	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004158	     0xf8d52090000	                           jge 0x4004ab0	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400415e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004162	            0x31db	                            xor ebx, ebx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004164	        0x42892c90	            mov dword [rax + r10*4], ebp	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004168	    0x8b0500000000	            mov eax, dword [0x0400416e] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400416e	          0x4501c5	                           add r13d, r8d	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004171	        0x4983c401	                              add r12, 1	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004175	          0x4139c5	                           cmp r13d, eax	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004178	            0x7d76	                           jge 0x40041f0	       869	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400417a	      0x42c6042120	              mov byte [rcx + r12], 0x20	       872	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400417f	    0x8b0500000000	            mov eax, dword [0x04004185] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004185	          0x83c301	                              add ebx, 1	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004188	          0x4589e5	                          mov r13d, r12d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400418b	        0x438d1426	                    lea edx, [r14 + r12]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400418f	      0x418d6c2401	                      lea ebp, [r12 + 1]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004194	            0x39c3	                            cmp ebx, eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004196	            0x7cd6	                            jl 0x400416e	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004198	    0x488b1d000000	            mov rbx, qword [0x0400419f] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x400419f	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041a2	          0x8d70fe	                      lea esi, [rax - 2]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041a5	          0x4139f7	                           cmp r15d, esi	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041a8	            0x7c96	                            jl 0x4004140	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041aa	             0x1c0	                            add eax, eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041ac	        0x488b7b08	                mov rdi, qword [rbx + 8]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041b0	        0x89542428	             mov dword [rsp + 0x28], edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041b4	          0x894310	             mov dword [rbx + 0x10], eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041b7	            0x4898	                                    cdqe	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041b9	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041be	    0x488d34850000	                        lea rsi, [rax*4]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041c6	        0x44890424	                    mov dword [rsp], r8d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041ca	      0xe800000000	                          call 0x40041cf	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041cf	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041d3	        0x48894308	                mov qword [rbx + 8], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041d7	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041dc	    0x488b1d000000	            mov rbx, qword [0x040041e3] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041e3	        0x448b0424	                    mov r8d, dword [rsp]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041e7	      0xe954ffffff	                           jmp 0x4004140	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041ec	         0xf1f4000	                         nop dword [rax]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041f0	      0x448b74243c	           mov r14d, dword [rsp + 0x3c] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041f5	          0x4863c2	                         movsxd rax, edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041f8	        0x896c2420	             mov dword [rsp + 0x20], ebp	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x40041fc	        0x48890424	                    mov qword [rsp], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004200	          0x4889c5	                            mov rbp, rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004203	    0x443b35000000	           cmp r14d, dword [0x0400420a] 	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x400420a	     0xf8480090000	                            je 0x4004b90	       876	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4004210	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004215	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400421a	          0x4801c6	                            add rsi, rax	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400421d	          0x4839f0	                            cmp rax, rsi	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004220	            0x7332	                           jae 0x4004254	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004222	        0x488b0c24	                    mov rcx, qword [rsp]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004226	          0x4829c1	                            sub rcx, rax	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004229	      0x48034c2408	                add rcx, qword [rsp + 8]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400422e	            0x6690	                                     nop	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004230	    0x488b15000000	            mov rdx, qword [0x04004237] 	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004237	         0xfb61402	             movzx edx, byte [rdx + rax]	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400423b	          0x881401	                mov byte [rcx + rax], dl	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400423e	        0x4883c001	                              add rax, 1	       882	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004242	          0x4839c6	                            cmp rsi, rax	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004245	            0x75e9	                           jne 0x4004230	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004247	        0x2b6c2418	             sub ebp, dword [rsp + 0x18]	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400424b	             0x1f5	                            add ebp, esi	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x400424d	          0x4863c5	                         movsxd rax, ebp	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004250	        0x48890424	                    mov qword [rsp], rax	       881	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_3
0x4004254	        0x8b442430	            mov eax, dword [rsp + 0x30] 	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004258	            0x85c0	                           test eax, eax	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400425a	     0xf8420faffff	                            je 0x4003c80	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004260	      0x4489742428	            mov dword [rsp + 0x28], r14d	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004265	          0x4531e4	                          xor r12d, r12d	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004268	          0x4189ee	                           mov r14d, ebp	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400426b	          0x4189c5	                           mov r13d, eax	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400426e	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004272	            0xeb38	                           jmp 0x40042ac	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004274	         0xf1f4000	                         nop dword [rax]	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004278	        0x488b4308	                mov rax, qword [rbx + 8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400427c	        0x4183c701	                             add r15d, 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004280	          0x4963cf	                        movsxd rcx, r15d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004283	        0x44893488	           mov dword [rax + rcx*4], r14d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004287	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400428a	          0x8d70ff	                      lea esi, [rax - 1]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400428d	          0x4139f7	                           cmp r15d, esi	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004290	     0xf8d6a010000	                           jge 0x4004400	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004296	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400429a	            0x31db	                            xor ebx, ebx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400429c	          0x892c88	            mov dword [rax + rcx*4], ebp	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400429f	        0x4183c401	                             add r12d, 1	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042a3	          0x4539e5	                          cmp r13d, r12d	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042a6	     0xf848c010000	                            je 0x4004438	       883	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042ac	          0x83c301	                              add ebx, 1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042af	    0x3b1d00000000	            cmp ebx, dword [0x040042b5] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042b5	            0x7ce8	                            jl 0x400429f	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042b7	    0x488b1d000000	            mov rbx, qword [0x040042be] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042be	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042c1	          0x8d48fe	                      lea ecx, [rax - 2]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042c4	          0x4439f9	                           cmp ecx, r15d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042c7	            0x7faf	                            jg 0x4004278	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042c9	             0x1c0	                            add eax, eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042cb	        0x488b7b08	                mov rdi, qword [rbx + 8]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042cf	          0x894310	             mov dword [rbx + 0x10], eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042d2	            0x4898	                                    cdqe	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042d4	    0x488d34850000	                        lea rsi, [rax*4]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042dc	      0xe800000000	                          call 0x40042e1	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042e1	        0x48894308	                mov qword [rbx + 8], rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042e5	    0x488b1d000000	            mov rbx, qword [0x040042ec] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042ec	            0xeb8a	                           jmp 0x4004278	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042ee	            0x6690	                                     nop	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x40042f0	    0x448b15000000	           mov r10d, dword [0x040042f7] 	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40042f7	          0x4585d2	                         test r10d, r10d	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40042fa	     0xf8588fbffff	                           jne 0x4003e88	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004300	    0x488b05000000	            mov rax, qword [0x04004307] 	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004307	          0x4885c0	                           test rax, rax	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400430a	     0xf8478fbffff	                            je 0x4003e88	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004310	          0x803800	                       cmp byte [rax], 0	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004313	     0xf846ffbffff	                            je 0x4003e88	       845	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004319	      0x488b442408	                mov rax, qword [rsp + 8]	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400431e	        0x488b3c24	                    mov rdi, qword [rsp]	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004322	          0x83c501	                              add ebp, 1	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004325	    0x488b1d000000	            mov rbx, qword [0x0400432c] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400432c	        0xc6043800	                 mov byte [rax + rdi], 0	       847	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004330	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004333	          0x8d50fe	                      lea edx, [rax - 2]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004336	          0x4139d7	                           cmp r15d, edx	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004339	     0xf8d450d0000	                           jge 0x4005084	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400433f	        0x488b4308	                mov rax, qword [rbx + 8]	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004343	        0x4183c701	                             add r15d, 1	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004347	            0x31db	                            xor ebx, ebx	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004349	          0x4963d7	                        movsxd rdx, r15d	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400434c	          0x892c90	            mov dword [rax + rdx*4], ebp	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400434f	          0x4863c5	                         movsxd rax, ebp	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004352	        0x48890424	                    mov qword [rsp], rax	       849	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004356	      0xe925f9ffff	                           jmp 0x4003c80	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400435b	       0xf1f440000	                   nop dword [rax + rax]	       850	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4004360	      0x488b442408	                mov rax, qword [rsp + 8]	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004365	        0x488b3424	                    mov rsi, qword [rsp]	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004369	          0x83c501	                              add ebp, 1	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400436c	          0x83c301	                              add ebx, 1	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400436f	        0x44882430	              mov byte [rax + rsi], r12b	       888	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004373	    0x3b1d00000000	            cmp ebx, dword [0x04004379] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004379	     0xf8dc8fbffff	                           jge 0x4003f47	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400437f	          0x4863c5	                         movsxd rax, ebp	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004382	        0x48890424	                    mov qword [rsp], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004386	      0xe9f5f8ffff	                           jmp 0x4003c80	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400438b	       0xf1f440000	                   nop dword [rax + rax]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004390	    0x488b15000000	            mov rdx, qword [0x04004397] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004397	            0x29d8	                            sub eax, ebx	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004399	            0x89c3	                            mov ebx, eax	       830	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400439b	          0x8b4210	            mov eax, dword [rdx + 0x10] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x400439e	          0x8d48fe	                      lea ecx, [rax - 2]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043a1	          0x4139cf	                           cmp r15d, ecx	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043a4	     0xf8d56070000	                           jge 0x4004b00	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043aa	        0x488b4208	                mov rax, qword [rdx + 8]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043ae	        0x4183c701	                             add r15d, 1	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043b2	        0x8d541d00	                    lea edx, [rbp + rbx]	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043b6	          0x4129dd	                           sub r13d, ebx	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043b9	          0x4963cf	                        movsxd rcx, r15d	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043bc	          0x4439e5	                           cmp ebp, r12d	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043bf	          0x4489eb	                           mov ebx, r13d	       833	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043c2	          0x891488	            mov dword [rax + rcx*4], edx	       832	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x40043c5	     0xf8db5f8ffff	                           jge 0x4003c80	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043cb	            0xf7d5	                                 not ebp	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043cd	        0x488b3c24	                    mov rdi, qword [rsp]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043d1	      0x48037c2408	                add rdi, qword [rsp + 8]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043d6	      0x428d542500	                    lea edx, [rbp + r12]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043db	      0xbe20000000	                           mov esi, 0x20	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043e0	        0x4883c201	                              add rdx, 1	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043e4	      0xe800000000	                          call 0x40043e9	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043e9	          0x4963c4	                        movsxd rax, r12d	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043ec	          0x4889c5	                            mov rbp, rax	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043ef	        0x48890424	                    mov qword [rsp], rax	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043f3	      0xe988f8ffff	                           jmp 0x4003c80	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x40043f8	     0xf1f84000000	                   nop dword [rax + rax]	       834	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29	WHILE_4
0x4004400	             0x1c0	                            add eax, eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004402	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004406	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400440b	          0x894320	             mov dword [rbx + 0x20], eax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400440e	            0x4898	                                    cdqe	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004410	    0x488d34850000	                        lea rsi, [rax*4]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004418	      0xe800000000	                          call 0x400441d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400441d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004422	        0x48894318	             mov qword [rbx + 0x18], rax	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004426	    0x488b1d000000	            mov rbx, qword [0x0400442d] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400442d	      0xe964feffff	                           jmp 0x4004296	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004432	    0x660f1f440000	                    nop word [rax + rax]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004438	          0x4489f5	                           mov ebp, r14d	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x400443b	      0x448b742428	           mov r14d, dword [rsp + 0x28] 	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004440	      0xe93bf8ffff	                           jmp 0x4003c80	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004445	           0xf1f00	                         nop dword [rax]	       884	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	FOR_4
0x4004448	             0x1c0	                            add eax, eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400444a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400444e	          0x894320	             mov dword [rbx + 0x20], eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004451	            0x4898	                                    cdqe	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004453	    0x488d34850000	                        lea rsi, [rax*4]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400445b	      0xe800000000	                          call 0x4004460	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004460	        0x48894318	             mov qword [rbx + 0x18], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004464	    0x488b1d000000	            mov rbx, qword [0x0400446b] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400446b	      0xe90bfbffff	                           jmp 0x4003f7b	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004470	             0x1c0	                            add eax, eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004472	        0x488b7b08	                mov rdi, qword [rbx + 8]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004476	          0x894310	             mov dword [rbx + 0x10], eax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004479	            0x4898	                                    cdqe	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400447b	    0x488d34850000	                        lea rsi, [rax*4]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004483	      0xe800000000	                          call 0x4004488	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004488	        0x48894308	                mov qword [rbx + 8], rax	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x400448c	    0x488b1d000000	            mov rbx, qword [0x04004493] 	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004493	      0xe9c5faffff	                           jmp 0x4003f5d	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x4004498	     0xf1f84000000	                   nop dword [rax + rax]	       889	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	ELSE_16
0x40044a0	    0x448b1d000000	           mov r11d, dword [0x040044a7] 	      1150	display.c	FUNCTION_2	ELSE_25
0x40044a7	    0x48633d000000	         movsxd rdi, dword [0x040044ae] 	      1154	display.c	FUNCTION_2	ELSE_25
0x40044ae	      0xba56555555	                     mov edx, 0x55555556	      1155	display.c	FUNCTION_2	ELSE_25
0x40044b3	    0x8b0d00000000	            mov ecx, dword [0x040044b9] 	      1155	display.c	FUNCTION_2	ELSE_25
0x40044b9	    0x448b05000000	            mov r8d, dword [0x040044c0] 	      1150	display.c	FUNCTION_2	ELSE_25
0x40044c0	    0x448b0d000000	            mov r9d, dword [0x040044c7] 	      1151	display.c	FUNCTION_2	ELSE_25
0x40044c7	    0xc70500000000	               mov dword [0x040044d1], 0	      1144	display.c	FUNCTION_2	ELSE_25
0x40044d1	          0x4489db	                           mov ebx, r11d	      1150	display.c	FUNCTION_2	ELSE_25
0x40044d4	          0x4589da	                          mov r10d, r11d	      1150	display.c	FUNCTION_2	ELSE_25
0x40044d7	          0x4429c3	                            sub ebx, r8d	      1150	display.c	FUNCTION_2	ELSE_25
0x40044da	          0x4129fa	                           sub r10d, edi	      1150	display.c	FUNCTION_2	ELSE_25
0x40044dd	            0x89c8	                            mov eax, ecx	      1155	display.c	FUNCTION_2	ELSE_25
0x40044df	          0x4501c1	                            add r9d, r8d	      1151	display.c	FUNCTION_2	ELSE_25
0x40044e2	            0x85ff	                           test edi, edi	      1151	display.c	FUNCTION_2	ELSE_25
0x40044e4	        0x440f44d3	                         cmove r10d, ebx	      1151	display.c	FUNCTION_2	ELSE_25
0x40044e8	            0xf7ea	                                imul edx	      1155	display.c	FUNCTION_2	ELSE_25
0x40044ea	            0x89c8	                            mov eax, ecx	      1155	display.c	FUNCTION_2	ELSE_25
0x40044ec	          0xc1f81f	                           sar eax, 0x1f	      1155	display.c	FUNCTION_2	ELSE_25
0x40044ef	            0x89d6	                            mov esi, edx	      1155	display.c	FUNCTION_2	ELSE_25
0x40044f1	            0x29c6	                            sub esi, eax	      1155	display.c	FUNCTION_2	ELSE_25
0x40044f3	          0x8d41ff	                      lea eax, [rcx - 1]	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x40044f6	          0x4439d0	                           cmp eax, r10d	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x40044f9	     0xf8f49010000	                            jg 0x4004648	      1163	display.c	FUNCTION_2	ELSE_25	IF_60
0x40044ff	          0x8d1436	                    lea edx, [rsi + rsi]	      1165	display.c	FUNCTION_2	ELSE_25	IF_60
0x4004502	          0x4489db	                           mov ebx, r11d	      1166	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x4004505	            0x29d3	                            sub ebx, edx	      1166	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x4004507	     0xf8893060000	                            js 0x4004ba0	      1166	display.c	FUNCTION_2	ELSE_25	IF_60	IF_61
0x400450d	          0x4585c0	                           test r8d, r8d	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4004510	     0xf8448010000	                            je 0x400465e	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4004516	            0x85db	                           test ebx, ebx	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4004518	     0xf8e40010000	                           jle 0x400465e	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x400451e	          0x4139d9	                            cmp r9d, ebx	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4004521	     0xf8e37010000	                           jle 0x400465e	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4004527	          0x4489cb	                            mov ebx, r9d	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x400452a	      0xe938010000	                           jmp 0x4004667	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x400452f	              0x90	                                     nop	      1170	display.c	FUNCTION_2	ELSE_25	IF_60	IF_62
0x4004530	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_45	CALL_6
0x4004539	    0xc74424300100	               mov dword [rsp + 0x30], 1	       761	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4004541	    0x48c744241001	               mov qword [rsp + 0x10], 1	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x400454a	      0xe9b2f6ffff	                           jmp 0x4003c01	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x400454f	              0x90	                                     nop	       759	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_19	IF_20
0x4004550	    0x4c8b3d000000	            mov r15, qword [0x04004557] 	       721	display.c	FUNCTION_2	WHILE_1	IF_17
0x4004557	      0xe800000000	                          call 0x400455c	      2622	display.c	IF_105
0x400455c	        0x4883f801	                              cmp rax, 1	      2622	display.c	IF_105
0x4004560	            0x740e	                            je 0x4004570	      2622	display.c	IF_105
0x4004562	    0x8b0500000000	            mov eax, dword [0x04004568] 	      2622	display.c	IF_105
0x4004568	            0x85c0	                           test eax, eax	      2622	display.c	IF_105
0x400456a	     0xf8427070000	                            je 0x4004c97	      2622	display.c	IF_105
0x4004570	            0x31c0	                            xor eax, eax	      2624	display.c	IF_105	CALL_117
0x4004572	      0xbf00000000	                              mov edi, 0	      2624	display.c	IF_105	CALL_117
0x4004577	      0xe800000000	                          call 0x400457c	      2624	display.c	IF_105	CALL_117
0x400457c	          0x4489e0	                           mov eax, r12d	      2625	display.c	IF_105
0x400457f	            0x29e8	                            sub eax, ebp	      2625	display.c	IF_105
0x4004581	      0xe9a4f5ffff	                           jmp 0x4003b2a	      2625	display.c	IF_105
0x4004586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2625	display.c	IF_105
0x4004590	             0x1c0	                            add eax, eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4004592	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x4004596	        0x48891424	                    mov qword [rsp], rdx	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400459a	          0x894320	             mov dword [rbx + 0x20], eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400459d	            0x4898	                                    cdqe	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x400459f	    0x488d34850000	                        lea rsi, [rax*4]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045a7	      0xe800000000	                          call 0x40045ac	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045ac	        0x488b1424	                    mov rdx, qword [rsp]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045b0	        0x48894318	             mov qword [rbx + 0x18], rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045b4	    0x488b1d000000	            mov rbx, qword [0x040045bb] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045bb	      0xe91bf9ffff	                           jmp 0x4003edb	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045c0	             0x1c0	                            add eax, eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045c2	        0x488b7b08	                mov rdi, qword [rbx + 8]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045c6	          0x894310	             mov dword [rbx + 0x10], eax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045c9	            0x4898	                                    cdqe	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045cb	    0x488d34850000	                        lea rsi, [rax*4]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045d3	      0xe800000000	                          call 0x40045d8	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045d8	        0x48894308	                mov qword [rbx + 8], rax	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045dc	    0x488b1d000000	            mov rbx, qword [0x040045e3] 	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045e3	      0xe9d5f8ffff	                           jmp 0x4003ebd	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045e8	     0xf1f84000000	                   nop dword [rax + rax]	       855	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31
0x40045f0	      0xe800000000	                          call 0x40045f5	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40045f5	        0x488b1424	                    mov rdx, qword [rsp]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40045f9	          0x488b00	                    mov rax, qword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x40045fc	         0xfb60490	           movzx eax, byte [rax + rdx*4]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4004600	      0xe92bf9ffff	                           jmp 0x4003f30	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4004605	           0xf1f00	                         nop dword [rax]	       856	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_14	IF_31	CALL_32
0x4004608	    0x4c8b25000000	            mov r12, qword [0x0400460f] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400460f	            0x29da	                            sub edx, ebx	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004611	            0x89d3	                            mov ebx, edx	       800	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004613	      0x418b442410	            mov eax, dword [r12 + 0x10] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004618	          0x8d50fe	                      lea edx, [rax - 2]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400461b	          0x4139d7	                           cmp r15d, edx	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400461e	     0xf8de9060000	                           jge 0x4004d0d	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004624	      0x498b442408	                mov rax, qword [r12 + 8]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004629	        0x4183c701	                             add r15d, 1	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400462d	        0x8d4c1d00	                    lea ecx, [rbp + rbx]	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004631	          0x4963d7	                        movsxd rdx, r15d	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004634	          0x890c90	            mov dword [rax + rdx*4], ecx	       802	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004637	      0xb804000000	                              mov eax, 4	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400463c	            0x29d8	                            sub eax, ebx	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x400463e	      0xe92ef6ffff	                           jmp 0x4003c71	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004643	       0xf1f440000	                   nop dword [rax + rax]	       803	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004648	          0x8d41fe	                      lea eax, [rcx - 2]	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x400464b	            0x39c3	                            cmp ebx, eax	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x400464d	     0xf8c4d050000	                            jl 0x4004ba0	      1173	display.c	FUNCTION_2	ELSE_25	ELSE_26	IF_63
0x4004653	          0x4585d2	                         test r10d, r10d	      1175	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4004656	            0x89fb	                            mov ebx, edi	      1154	display.c	FUNCTION_2	ELSE_25
0x4004658	     0xf8e2c070000	                           jle 0x4004d8a	      1175	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x400465e	          0x83fb00	                              cmp ebx, 0	      1188	display.c	FUNCTION_2	ELSE_25	IF_66
0x4004661	     0xf8ec1100000	                           jle 0x4005728	      1188	display.c	FUNCTION_2	ELSE_25	IF_66
0x4004667	      0x488b742408	                mov rsi, qword [rsp + 8]	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x400466c	          0x4863c3	                         movsxd rax, ebx	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x400466f	        0xc604063c	              mov byte [rsi + rax], 0x3c	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4004673	    0x8b0d00000000	            mov ecx, dword [0x04004679] 	      1189	display.c	FUNCTION_2	ELSE_25	IF_66
0x4004679	            0x31c0	                            xor eax, eax	      1195	display.c	FUNCTION_2	ELSE_25
0x400467b	             0x1d8	                            add eax, ebx	      1195	display.c	FUNCTION_2	ELSE_25
0x400467d	             0x1c8	                            add eax, ecx	      1195	display.c	FUNCTION_2	ELSE_25
0x400467f	            0x39c5	                            cmp ebp, eax	      1196	display.c	FUNCTION_2	ELSE_25	IF_67
0x4004681	            0x7e0c	                           jle 0x400468f	      1196	display.c	FUNCTION_2	ELSE_25	IF_67
0x4004683	      0x488b742408	                mov rsi, qword [rsp + 8]	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x4004688	            0x4898	                                    cdqe	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x400468a	      0xc64406ff3e	         mov byte [rsi + rax - 1], 0x3e 	      1197	display.c	FUNCTION_2	ELSE_25	IF_67
0x400468f	    0x448b15000000	           mov r10d, dword [0x04004696] 	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004696	          0x4585d2	                         test r10d, r10d	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004699	            0x7414	                            je 0x40046af	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x400469b	    0x448b0d000000	            mov r9d, dword [0x040046a2] 	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046a2	          0x4585c9	                           test r9d, r9d	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046a5	            0x7508	                           jne 0x40046af	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046a7	            0x39fb	                            cmp ebx, edi	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046a9	     0xf8491030000	                            je 0x4004a40	      1199	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046af	    0x488b15000000	            mov rdx, qword [0x040046b6] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046b6	            0x85db	                           test ebx, ebx	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046b8	      0xb800000000	                              mov eax, 0	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046bd	          0x4c63e3	                         movsxd r12, ebx	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046c0	        0x440f45c0	                         cmovne r8d, eax	      1208	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046c4	    0x8b0d00000000	            mov ecx, dword [0x040046ca] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046ca	    0x8b0500000000	            mov eax, dword [0x040046d0] 	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046d0	          0x4c89e6	                            mov rsi, r12	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046d3	          0x490336	                    add rsi, qword [r14]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046d6	          0x48033a	                    add rdi, qword [rdx]	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046d9	          0x4531c9	                            xor r9d, r9d	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046dc	            0x31d2	                            xor edx, edx	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046de	    0xc70500000000	               mov dword [0x040046e8], 0	      1201	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046e8	    0x448b2d000000	           mov r13d, dword [0x040046ef] 	      1202	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046ef	             0x1c1	                            add ecx, eax	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046f1	          0x4101c0	                            add r8d, eax	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x40046f4	    0xc70500000000	               mov dword [0x040046fe], 0	      1203	display.c	FUNCTION_2	ELSE_25	IF_68
0x40046fe	      0xe81dd7ffff	                    call sym.update_line	      1204	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_49
0x4004703	      0xe800000000	                          call 0x4004708	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004708	        0x4883f801	                              cmp rax, 1	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400470c	            0x761a	                           jbe 0x4004728	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400470e	    0x448b05000000	            mov r8d, dword [0x04004715] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004715	          0x4585c0	                           test r8d, r8d	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004718	            0x750e	                           jne 0x4004728	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400471a	    0x8b3d00000000	            mov edi, dword [0x04004720] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004720	            0x85ff	                           test edi, edi	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004722	     0xf8411060000	                            je 0x4004d39	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004728	    0x8b3500000000	            mov esi, dword [0x0400472e] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x400472e	            0x85db	                           test ebx, ebx	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004730	     0xf8502040000	                           jne 0x4004b38	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004736	    0x8b1500000000	            mov edx, dword [0x0400473c] 	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x400473c	    0x391500000000	            cmp dword [0x04004742], edx 	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004742	     0xf8da8070000	                           jge 0x4004ef0	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004748	            0x39f5	                            cmp ebp, esi	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x400474a	     0xf85a0070000	                           jne 0x4004ef0	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004750	            0x29d6	                            sub esi, edx	      1217	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004752	    0x3b3500000000	            cmp esi, dword [0x04004758] 	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004758	     0xf8c55060000	                            jl 0x4004db3	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x400475e	    0x8b0500000000	            mov eax, dword [0x04004764] 	      1219	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004764	            0x29dd	                            sub ebp, ebx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004766	            0x85db	                           test ebx, ebx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004768	     0xf85b30f0000	                           jne 0x4005721	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x400476e	    0x8b1500000000	            mov edx, dword [0x04004774] 	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004774	      0xe9db030000	                           jmp 0x4004b54	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004779	          0x4889df	                            mov rdi, rbx	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x400477c	      0xe800000000	                          call 0x4004781	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4004781	          0x4889df	                            mov rdi, rbx	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4004784	            0x89c6	                            mov esi, eax	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4004786	      0xe800000000	                          call 0x400478b	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x400478b	      0xe980f1ffff	                           jmp 0x4003910	       561	display.c	FUNCTION_2	IF_6	CALL_7
0x4004790	    0x486315000000	         movsxd rdx, dword [0x04004797] 	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x4004797	    0x488b35000000	            mov rsi, qword [0x0400479e] 	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x400479e	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x40047a3	      0x488d7c244c	                   lea rdi, [rsp + 0x4c]	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x40047a8	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_45	CALL_6
0x40047b1	      0xe800000000	                          call 0x40047b6	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x40047b6	      0x4889442410	             mov qword [rsp + 0x10], rax	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x40047bb	      0xe9b8f3ffff	                           jmp 0x4003b78	       741	display.c	FUNCTION_2	ELSE_5	IF_18	CALL_21
0x40047c0	    0x8b0500000000	            mov eax, dword [0x040047c6] 	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x40047c6	          0x4139c7	                           cmp r15d, eax	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x40047c9	     0xf8d19010000	                           jge 0x40048e8	      1042	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48
0x40047cf	            0x39c3	                            cmp ebx, eax	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047d1	     0xf8f11010000	                            jg 0x40048e8	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047d7	          0x4c63e3	                         movsxd r12, ebx	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047da	        0x44893c24	                   mov dword [rsp], r15d	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047de	        0x49c1e402	                              shl r12, 2	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047e2	    0x660f1f440000	                    nop word [rax + rax]	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047e8	    0x488b05000000	            mov rax, qword [0x040047ef] 	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047ef	        0x488b5008	                mov rdx, qword [rax + 8]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047f3	        0x4e633422	           movsxd r14, dword [rdx + r12]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047f7	          0x4c0330	                    add r14, qword [rax]	      1047	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40047fa	    0x8b0500000000	            mov eax, dword [0x04004800] 	      2047	display.c	FUNCTION_6	IF_1
0x4004800	            0x39d8	                            cmp eax, ebx	      2047	display.c	FUNCTION_6	IF_1
0x4004802	     0xf84f8060000	                            je 0x4004f00	      2047	display.c	FUNCTION_6	IF_1
0x4004808	    0x3b1d00000000	            cmp ebx, dword [0x0400480e] 	      2047	display.c	FUNCTION_6	IF_1
0x400480e	     0xf8fec060000	                            jg 0x4004f00	      2047	display.c	FUNCTION_6	IF_1
0x4004814	          0x4189dd	                           mov r13d, ebx	      2050	display.c	FUNCTION_6	IF_2
0x4004817	          0x4129c5	                           sub r13d, eax	      2050	display.c	FUNCTION_6	IF_2
0x400481a	          0x4585ed	                         test r13d, r13d	      2050	display.c	FUNCTION_6	IF_2
0x400481d	     0xf8e48090000	                           jle 0x400516b	      2050	display.c	FUNCTION_6	IF_2
0x4004823	            0x31ed	                            xor ebp, ebp	      2050	display.c	FUNCTION_6	IF_2
0x4004825	           0xf1f00	                         nop dword [rax]	      2050	display.c	FUNCTION_6	IF_2
0x4004828	    0x488b35000000	            mov rsi, qword [0x0400482f] 	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x400482f	      0xbf0a000000	                            mov edi, 0xa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4004834	          0x83c501	                              add ebp, 1	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4004837	      0xe800000000	                          call 0x400483c	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x400483c	          0x4139ed	                           cmp r13d, ebp	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x400483f	            0x75e7	                           jne 0x4004828	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4004841	    0x488b3d000000	            mov rdi, qword [0x04004848] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4004848	      0xba00000000	                              mov edx, 0	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x400484d	      0xbe01000000	                              mov esi, 1	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4004852	            0x31ed	                            xor ebp, ebp	      2059	display.c	FUNCTION_6	IF_2
0x4004854	      0xe800000000	                          call 0x4004859	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4004859	    0xc70500000000	               mov dword [0x04004863], 0	      2059	display.c	FUNCTION_6	IF_2
0x4004863	            0x89d8	                            mov eax, ebx	      2077	display.c	FUNCTION_6
0x4004865	    0x891d00000000	            mov dword [0x0400486b], ebx 	      2077	display.c	FUNCTION_6
0x400486b	            0x85c0	                           test eax, eax	      1911	display.c	
0x400486d	     0xf859b060000	                           jne 0x4004f0e	      1911	display.c	
0x4004873	    0x448b3d000000	           mov r15d, dword [0x0400487a] 	      1911	display.c	
0x400487a	          0x4585ff	                         test r15d, r15d	      1911	display.c	
0x400487d	            0x7414	                            je 0x4004893	      1911	display.c	
0x400487f	    0x8b0500000000	            mov eax, dword [0x04004885] 	      1911	display.c	
0x4004885	    0x390500000000	            cmp dword [0x0400488b], eax 	      1911	display.c	
0x400488b	    0x440f4f3d0000	          cmovg r15d, dword [0x04004893]	      1911	display.c	
0x4004893	            0x85ed	                           test ebp, ebp	      1914	display.c	IF_82
0x4004895	     0xf85e5060000	                           jne 0x4004f80	      1914	display.c	IF_82
0x400489b	    0x8b2d00000000	            mov ebp, dword [0x040048a1] 	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x40048a1	    0x448b2d000000	           mov r13d, dword [0x040048a8] 	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40048a8	            0x39dd	                            cmp ebp, ebx	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40048aa	     0xf84af070000	                            je 0x400505f	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x40048b0	    0x488b3d000000	            mov rdi, qword [0x040048b7] 	      2335	display.c	FUNCTION_15	IF_1
0x40048b7	          0x4885ff	                           test rdi, rdi	      2335	display.c	FUNCTION_15	IF_1
0x40048ba	     0xf8478060000	                            je 0x4004f38	      2335	display.c	FUNCTION_15	IF_1
0x40048c0	      0xba00000000	                              mov edx, 0	      2336	display.c	FUNCTION_15	CALL_1
0x40048c5	      0xbe01000000	                              mov esi, 1	      2336	display.c	FUNCTION_15	CALL_1
0x40048ca	      0xe800000000	                          call 0x40048cf	      2336	display.c	FUNCTION_15	CALL_1
0x40048cf	    0x8b2d00000000	            mov ebp, dword [0x040048d5] 	      2336	display.c	FUNCTION_15	CALL_1
0x40048d5	          0x83c301	                              add ebx, 1	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40048d8	        0x4983c404	                              add r12, 4	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40048dc	            0x39eb	                            cmp ebx, ebp	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40048de	     0xf8e04ffffff	                           jle 0x40047e8	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40048e4	        0x448b3c24	                   mov r15d, dword [rsp]	      1045	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6
0x40048e8	    0x8b0500000000	            mov eax, dword [0x040048ee] 	      1058	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x40048ee	        0x39442434	            cmp dword [rsp + 0x34], eax 	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x40048f2	    0x44893d000000	           mov dword [0x040048f9], r15d 	      1054	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x40048f9	     0xf85ce080000	                           jne 0x40051cd	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x40048ff	    0x448b25000000	           mov r12d, dword [0x04004906] 	      1059	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49
0x4004906	        0x8b742434	            mov esi, dword [rsp + 0x34] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400490a	            0x85f6	                           test esi, esi	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400490c	           0xf94c0	                                 sete al	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400490f	          0x4585e4	                         test r12d, r12d	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004912	           0xf9fc2	                                 setg dl	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004915	            0x89d3	                            mov ebx, edx	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004917	            0x20c3	                              and bl, al	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004919	     0xf84c1000000	                            je 0x40049e0	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400491f	    0x8b0d00000000	            mov ecx, dword [0x04004925] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004925	            0x85c9	                           test ecx, ecx	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004927	     0xf8ec9090000	                           jle 0x40052f6	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400492d	    0x8b2d00000000	            mov ebp, dword [0x04004933] 	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x4004933	      0xe800000000	                          call 0x4004938	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004938	        0x4883f801	                              cmp rax, 1	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400493c	            0x7610	                           jbe 0x400494e	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400493e	    0x8b1500000000	            mov edx, dword [0x04004944] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004944	    0x8b0500000000	            mov eax, dword [0x0400494a] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400494a	            0x85d2	                           test edx, edx	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400494c	            0x7409	                            je 0x4004957	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400494e	    0x8b0500000000	            mov eax, dword [0x04004954] 	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004954	          0x83c001	                              add eax, 1	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004957	    0x3b0500000000	            cmp eax, dword [0x0400495d] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400495d	     0xf8e93090000	                           jle 0x40052f6	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004963	    0x48833d000000	               cmp qword [0x0400496b], 0	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x400496b	     0xf8485090000	                            je 0x40052f6	      1080	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x4004971	    0x488b3d000000	            mov rdi, qword [0x04004978] 	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x4004978	          0x4885ff	                           test rdi, rdi	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x400497b	            0x740f	                            je 0x400498c	      1086	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_52
0x400497d	      0xba00000000	                              mov edx, 0	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x4004982	      0xbe01000000	                              mov esi, 1	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x4004987	      0xe800000000	                          call 0x400498c	      1087	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_43
0x400498c	    0x448b3d000000	           mov r15d, dword [0x04004993] 	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x4004993	          0x4585ff	                         test r15d, r15d	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x4004996	     0xf85d80c0000	                           jne 0x4005674	      1089	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_53
0x400499c	    0x488b3d000000	            mov rdi, qword [0x040049a3] 	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x40049a3	          0x4101ec	                           add r12d, ebp	      1075	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46
0x40049a6	          0x4489e6	                           mov esi, r12d	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x40049a9	      0xe800000000	                          call 0x40049ae	      1092	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_45
0x40049ae	      0xe800000000	                          call 0x40049b3	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x40049b3	        0x4883f801	                              cmp rax, 1	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x40049b7	            0x7610	                           jbe 0x40049c9	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x40049b9	    0x448b35000000	           mov r14d, dword [0x040049c0] 	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x40049c0	          0x4585f6	                         test r14d, r14d	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x40049c3	     0xf84780c0000	                            je 0x4005641	      1093	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x40049c9	    0x440325000000	            add r12d, dword [0x040049d0]	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x40049d0	            0x89d8	                            mov eax, ebx	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x40049d2	    0x448925000000	           mov dword [0x040049d9], r12d 	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x40049d9	    0x448b25000000	           mov r12d, dword [0x040049e0] 	      1096	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	ELSE_22
0x40049e0	    0x488b15000000	            mov rdx, qword [0x040049e7] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40049e7	      0x48634c2434	         movsxd rcx, dword [rsp + 0x34] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40049ec	    0x8b2d00000000	            mov ebp, dword [0x040049f2] 	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40049f2	        0x488b5208	                mov rdx, qword [rdx + 8]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40049f6	          0x8b1c8a	            mov ebx, dword [rdx + rcx*4]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40049f9	            0x29dd	                            sub ebp, ebx	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40049fb	          0x4585e4	                         test r12d, r12d	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x40049fe	            0x7408	                            je 0x4004a08	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4004a00	            0x84c0	                             test al, al	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4004a02	     0xf8509090000	                           jne 0x4005311	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4004a08	      0xe800000000	                          call 0x4004a0d	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004a0d	        0x4883f801	                              cmp rax, 1	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004a11	            0x760c	                           jbe 0x4004a1f	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004a13	    0x448b1d000000	           mov r11d, dword [0x04004a1a] 	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004a1a	          0x4585db	                         test r11d, r11d	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004a1d	            0x7408	                            je 0x4004a27	      1132	display.c	FUNCTION_2	IF_37	IF_38	IF_58
0x4004a1f	    0x392d00000000	            cmp dword [0x04004a25], ebp 	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004a25	            0x7419	                            je 0x4004a40	      1134	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004a27	    0x488b05000000	            mov rax, qword [0x04004a2e] 	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004a2e	          0x4863f3	                         movsxd rsi, ebx	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004a31	            0x89ef	                            mov edi, ebp	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004a33	          0x480330	                    add rsi, qword [rax]	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004a36	      0xe800000000	                          call 0x4004a3b	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004a3b	       0xf1f440000	                   nop dword [rax + rax]	      1135	display.c	FUNCTION_2	IF_37	IF_38	ELSE_24	IF_59
0x4004a40	    0x488b3d000000	            mov rdi, qword [0x04004a47] 	      1233	display.c	FUNCTION_2	CALL_52
0x4004a47	      0xe800000000	                          call 0x4004a4c	      1233	display.c	FUNCTION_2	CALL_52
0x4004a4c	    0x8b3500000000	            mov esi, dword [0x04004a52] 	      1246	display.c	FUNCTION_2	IF_72
0x4004a52	    0x488b05000000	            mov rax, qword [0x04004a59] 	      1237	display.c	FUNCTION_2
0x4004a59	    0x488b15000000	            mov rdx, qword [0x04004a60] 	      1239	display.c	FUNCTION_2
0x4004a60	    0xc70500000000	               mov dword [0x04004a6a], 0	      1242	display.c	FUNCTION_2
0x4004a6a	            0x85f6	                           test esi, esi	      1246	display.c	FUNCTION_2	IF_72
0x4004a6c	    0x488905000000	            mov qword [0x04004a73], rax 	      1240	display.c	FUNCTION_2
0x4004a73	    0x488915000000	            mov qword [0x04004a7a], rdx 	      1239	display.c	FUNCTION_2
0x4004a7a	            0x740c	                            je 0x4004a88	      1246	display.c	FUNCTION_2	IF_72
0x4004a7c	    0x8b0d00000000	            mov ecx, dword [0x04004a82] 	      1246	display.c	FUNCTION_2	IF_72
0x4004a82	            0x31c0	                            xor eax, eax	      1247	display.c	FUNCTION_2	IF_72
0x4004a84	            0x85c9	                           test ecx, ecx	      1246	display.c	FUNCTION_2	IF_72
0x4004a86	            0x7506	                           jne 0x4004a8e	      1246	display.c	FUNCTION_2	IF_72
0x4004a88	    0x8b0500000000	            mov eax, dword [0x04004a8e] 	      1249	display.c	FUNCTION_2	ELSE_29
0x4004a8e	    0x890500000000	            mov dword [0x04004a94], eax 	      1249	display.c	FUNCTION_2	ELSE_29
0x4004a94	    0x812500000000	      and dword [0x04004a9e], 0xff7fffff	      1252	display.c	FUNCTION_2	CALL_53
0x4004a9e	      0xe800000000	                          call 0x4004aa3	      1253	display.c	FUNCTION_2	CALL_54
0x4004aa3	      0xe970edffff	                           jmp 0x4003818	      1253	display.c	FUNCTION_2	CALL_54
0x4004aa8	     0xf1f84000000	                   nop dword [rax + rax]	      1253	display.c	FUNCTION_2	CALL_54
0x4004ab0	             0x1c0	                            add eax, eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ab2	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ab6	        0x89542438	             mov dword [rsp + 0x38], edx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004aba	          0x894320	             mov dword [rbx + 0x20], eax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004abd	            0x4898	                                    cdqe	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004abf	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ac4	    0x488d34850000	                        lea rsi, [rax*4]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004acc	      0x4489442420	             mov dword [rsp + 0x20], r8d	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ad1	        0x4c891424	                    mov qword [rsp], r10	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ad5	      0xe800000000	                          call 0x4004ada	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ada	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ade	        0x48894318	             mov qword [rbx + 0x18], rax	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ae2	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004ae7	    0x488b1d000000	            mov rbx, qword [0x04004aee] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004aee	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004af3	        0x4c8b1424	                    mov r10, qword [rsp]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004af7	      0xe962f6ffff	                           jmp 0x400415e	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004afc	         0xf1f4000	                         nop dword [rax]	       874	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_33	FOR_2
0x4004b00	             0x1c0	                            add eax, eax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b02	        0x488b7a08	                mov rdi, qword [rdx + 8]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b06	      0x4889542418	             mov qword [rsp + 0x18], rdx	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b0b	          0x894210	             mov dword [rdx + 0x10], eax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b0e	            0x4898	                                    cdqe	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b10	    0x488d34850000	                        lea rsi, [rax*4]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b18	      0xe800000000	                          call 0x4004b1d	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b1d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b22	        0x48894208	                mov qword [rdx + 8], rax	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b26	    0x488b15000000	            mov rdx, qword [0x04004b2d] 	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b2d	      0xe978f8ffff	                           jmp 0x40043aa	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b32	    0x660f1f440000	                    nop word [rax + rax]	       831	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_11	IF_28	IF_29
0x4004b38	    0x8b1500000000	            mov edx, dword [0x04004b3e] 	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004b3e	            0x85d2	                           test edx, edx	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004b40	            0x7908	                           jns 0x4004b4a	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004b42	            0x39f5	                            cmp ebp, esi	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004b44	     0xf8408fcffff	                            je 0x4004752	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004b4a	    0x8b0500000000	            mov eax, dword [0x04004b50] 	      1218	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4004b50	            0x29dd	                            sub ebp, ebx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b52	            0x31d2	                            xor edx, edx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b54	            0x29d5	                            sub ebp, edx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b56	    0x8b3d00000000	            mov edi, dword [0x04004b5c] 	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4004b5c	          0x4c89e6	                            mov rsi, r12	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4004b5f	            0x39c5	                            cmp ebp, eax	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b61	           0xf4fe8	                          cmovg ebp, eax	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b64	    0x488b05000000	            mov rax, qword [0x04004b6b] 	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4004b6b	            0x29df	                            sub edi, ebx	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4004b6d	    0x892d00000000	            mov dword [0x04004b73], ebp 	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b73	          0x480330	                    add rsi, qword [rax]	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4004b76	      0xe800000000	                          call 0x4004b7b	      1229	display.c	FUNCTION_2	ELSE_25	IF_68	CALL_51
0x4004b7b	    0x891d00000000	            mov dword [0x04004b81], ebx 	      1230	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b81	      0xe9bafeffff	                           jmp 0x4004a40	      1230	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1230	display.c	FUNCTION_2	ELSE_25	IF_68
0x4004b90	    0x892d00000000	            mov dword [0x04004b96], ebp 	       878	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4004b96	      0x44897c2434	            mov dword [rsp + 0x34], r15d	       879	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4004b9b	      0xe970f6ffff	                           jmp 0x4004210	       879	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_15	IF_32	IF_34
0x4004ba0	          0x4489c0	                            mov eax, r8d	      1150	display.c	FUNCTION_2	ELSE_25
0x4004ba3	            0x31db	                            xor ebx, ebx	      1150	display.c	FUNCTION_2	ELSE_25
0x4004ba5	      0xe9d1faffff	                           jmp 0x400467b	      1150	display.c	FUNCTION_2	ELSE_25
0x4004baa	             0x1c0	                            add eax, eax	       917	display.c	FUNCTION_2
0x4004bac	        0x498b7e08	                mov rdi, qword [r14 + 8]	       917	display.c	FUNCTION_2
0x4004bb0	        0x41894610	             mov dword [r14 + 0x10], eax	       917	display.c	FUNCTION_2
0x4004bb4	            0x4898	                                    cdqe	       917	display.c	FUNCTION_2
0x4004bb6	    0x488d34850000	                        lea rsi, [rax*4]	       917	display.c	FUNCTION_2
0x4004bbe	      0xe800000000	                          call 0x4004bc3	       917	display.c	FUNCTION_2
0x4004bc3	        0x49894608	                mov qword [r14 + 8], rax	       917	display.c	FUNCTION_2
0x4004bc7	    0x4c8b35000000	            mov r14, qword [0x04004bce] 	       917	display.c	FUNCTION_2
0x4004bce	      0xe90bf1ffff	                           jmp 0x4003cde	       917	display.c	FUNCTION_2
0x4004bd3	      0xe800000000	                          call 0x4004bd8	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4004bd8	          0x4885c0	                           test rax, rax	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4004bdb	     0xf84d0050000	                            je 0x40051b1	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4004be1	    0x48833d000000	               cmp qword [0x04004be9], 0	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4004be9	     0xf84c2050000	                            je 0x40051b1	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x4004bef	      0x488b442408	                mov rax, qword [rsp + 8]	       543	display.c	FUNCTION_2	IF_4
0x4004bf4	    0xc70500000000	               mov dword [0x04004bfe], 1	       545	display.c	FUNCTION_2	IF_4
0x4004bfe	    0x41bc01000000	                             mov r12d, 1	       545	display.c	FUNCTION_2	IF_4
0x4004c04	      0xbd01000000	                              mov ebp, 1	       543	display.c	FUNCTION_2	IF_4
0x4004c09	          0xc6002a	                    mov byte [rax], 0x2a	       543	display.c	FUNCTION_2	IF_4
0x4004c0c	        0xc6400100	                   mov byte [rax + 1], 0	       544	display.c	FUNCTION_2	IF_4
0x4004c10	    0x488b05000000	            mov rax, qword [0x04004c17] 	       544	display.c	FUNCTION_2	IF_4
0x4004c17	          0x488b10	                    mov rdx, qword [rax]	       544	display.c	FUNCTION_2	IF_4
0x4004c1a	      0xe99becffff	                           jmp 0x40038ba	       544	display.c	FUNCTION_2	IF_4
0x4004c1f	            0x31c0	                            xor eax, eax	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4004c21	            0x31ff	                            xor edi, edi	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4004c23	      0xe818b4ffff	           call sym.init_line_structures	       526	display.c	FUNCTION_2	IF_3	CALL_3
0x4004c28	    0x488b05000000	            mov rax, qword [0x04004c2f] 	      1808	display.c	FUNCTION_3	IF_1
0x4004c2f	          0x488b10	                    mov rdx, qword [rax]	      1808	display.c	FUNCTION_3	IF_1
0x4004c32	          0x4885d2	                           test rdx, rdx	      1808	display.c	FUNCTION_3	IF_1
0x4004c35	            0x7403	                            je 0x4004c3a	      1808	display.c	FUNCTION_3	IF_1
0x4004c37	          0xc60200	                       mov byte [rdx], 0	      1809	display.c	FUNCTION_3	IF_1
0x4004c3a	        0x488b4008	                mov rax, qword [rax + 8]	      1813	display.c	FUNCTION_3	IF_2
0x4004c3e	    0xc70500000000	               mov dword [0x04004c48], 0	      1811	display.c	FUNCTION_3
0x4004c48	    0xc70500000000	               mov dword [0x04004c52], 0	      1811	display.c	FUNCTION_3
0x4004c52	    0xc70500000000	               mov dword [0x04004c5c], 0	      1812	display.c	FUNCTION_3
0x4004c5c	    0xc70500000000	               mov dword [0x04004c66], 0	      1812	display.c	FUNCTION_3
0x4004c66	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x4004c69	            0x740d	                            je 0x4004c78	      1813	display.c	FUNCTION_3	IF_2
0x4004c6b	    0xc74004000000	                  mov dword [rax + 4], 0	      1814	display.c	FUNCTION_3	IF_2
0x4004c72	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x4004c78	    0xc70500000000	               mov dword [0x04004c82], 0	      1815	display.c	FUNCTION_3
0x4004c82	      0xe9e6ebffff	                           jmp 0x400386d	      1815	display.c	FUNCTION_3
0x4004c87	    0x892d00000000	            mov dword [0x04004c8d], ebp 	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004c8d	      0x44897c2434	            mov dword [rsp + 0x34], r15d	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004c92	      0xe930f0ffff	                           jmp 0x4003cc7	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004c97	      0xb901000000	                              mov ecx, 1	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004c9c	          0x4489e2	                           mov edx, r12d	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004c9f	            0x89ee	                            mov esi, ebp	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004ca1	          0x4c89ff	                            mov rdi, r15	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004ca4	      0xe867b5ffff	           call sym._rl_col_width.part.0	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004ca9	      0xe97ceeffff	                           jmp 0x4003b2a	       912	display.c	FUNCTION_2	ELSE_17	IF_36
0x4004cae	            0x89d1	                            mov ecx, edx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004cb0	    0x488b1d000000	            mov rbx, qword [0x04004cb7] 	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4004cb7	       0x502040000	                          add eax, 0x402	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004cbc	          0xc1f91f	                           sar ecx, 0x1f	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004cbf	          0xc1e916	                           shr ecx, 0x16	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004cc2	             0x1ca	                            add edx, ecx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004cc4	          0x488b3b	                    mov rdi, qword [rbx]	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4004cc7	    0x81e2ff030000	                          and edx, 0x3ff	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004ccd	            0x29ca	                            sub edx, ecx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004ccf	            0x29d0	                            sub eax, edx	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004cd1	          0x4863f0	                         movsxd rsi, eax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4004cd4	    0x890500000000	            mov dword [0x04004cda], eax 	       568	display.c	FUNCTION_2	IF_6	IF_8	IF_9
0x4004cda	      0xe800000000	                          call 0x4004cdf	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4004cdf	          0x488903	                    mov qword [rbx], rax	       569	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_8
0x4004ce2	    0x488b1d000000	            mov rbx, qword [0x04004ce9] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004ce9	    0x486335000000	         movsxd rsi, dword [0x04004cf0] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004cf0	          0x488b3b	                    mov rdi, qword [rbx]	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004cf3	      0xe800000000	                          call 0x4004cf8	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004cf8	          0x488903	                    mov qword [rbx], rax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004cfb	    0x8b1d00000000	            mov ebx, dword [0x04004d01] 	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004d01	      0x4889442408	                mov qword [rsp + 8], rax	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004d06	             0x1dd	                            add ebp, ebx	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004d08	      0xe92eecffff	                           jmp 0x400393b	       570	display.c	FUNCTION_2	IF_6	IF_8	IF_9	CALL_9
0x4004d0d	             0x1c0	                            add eax, eax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d0f	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d14	      0x4189442410	             mov dword [r12 + 0x10], eax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d19	            0x4898	                                    cdqe	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d1b	    0x488d34850000	                        lea rsi, [rax*4]	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d23	      0xe800000000	                          call 0x4004d28	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d28	      0x4989442408	                mov qword [r12 + 8], rax	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d2d	    0x4c8b25000000	            mov r12, qword [0x04004d34] 	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d34	      0xe9ebf8ffff	                           jmp 0x4004624	       801	display.c	FUNCTION_2	WHILE_3	FOR_1	IF_24	IF_25	IF_26	IF_27
0x4004d39	    0x8b0500000000	            mov eax, dword [0x04004d3f] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d3f	          0x4489ee	                           mov esi, r13d	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d42	          0x4139c5	                           cmp r13d, eax	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d45	     0xf84e3f9ffff	                            je 0x400472e	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d4b	    0x3b0500000000	            cmp eax, dword [0x04004d51] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d51	            0x89c6	                            mov esi, eax	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d53	     0xf8ed5f9ffff	                           jle 0x400472e	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d59	    0x443b2d000000	           cmp r13d, dword [0x04004d60] 	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d60	     0xf8dc8f9ffff	                           jge 0x400472e	      1211	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d66	    0x2b3500000000	             sub esi, dword [0x04004d6c]	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d6c	    0x893500000000	            mov dword [0x04004d72], esi 	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d72	      0xe9b7f9ffff	                           jmp 0x400472e	      1212	display.c	FUNCTION_2	ELSE_25	IF_68	IF_69
0x4004d77	    0x8b1500000000	            mov edx, dword [0x04004d7d] 	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4004d7d	            0x85d2	                           test edx, edx	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4004d7f	     0xf84bbfcffff	                            je 0x4004a40	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4004d85	      0xe994efffff	                           jmp 0x4003d1e	       937	display.c	FUNCTION_2	IF_37	IF_38
0x4004d8a	        0x418d43ff	                      lea eax, [r11 - 1]	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4004d8e	              0x99	                                     cdq	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4004d8f	            0xf7fe	                                idiv esi	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4004d91	           0xfafc6	                           imul eax, esi	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4004d94	          0x4585c0	                           test r8d, r8d	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004d97	            0x89c3	                            mov ebx, eax	      1179	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64
0x4004d99	     0xf84bff8ffff	                            je 0x400465e	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004d9f	            0x85c0	                           test eax, eax	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004da1	     0xf8eb7f8ffff	                           jle 0x400465e	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004da7	          0x4139c1	                            cmp r9d, eax	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004daa	        0x410f4fd9	                          cmovg ebx, r9d	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004dae	      0xe9abf8ffff	                           jmp 0x400465e	      1180	display.c	FUNCTION_2	ELSE_25	ELSE_27	IF_64	IF_65
0x4004db3	    0x488b3d000000	            mov rdi, qword [0x04004dba] 	      2335	display.c	FUNCTION_15	IF_1
0x4004dba	          0x4885ff	                           test rdi, rdi	      2335	display.c	FUNCTION_15	IF_1
0x4004dbd	     0xf8473070000	                            je 0x4005536	      2335	display.c	FUNCTION_15	IF_1
0x4004dc3	      0xba00000000	                              mov edx, 0	      2336	display.c	FUNCTION_15	CALL_1
0x4004dc8	      0xbe01000000	                              mov esi, 1	      2336	display.c	FUNCTION_15	CALL_1
0x4004dcd	      0xe800000000	                          call 0x4004dd2	      2336	display.c	FUNCTION_15	CALL_1
0x4004dd2	      0xe987f9ffff	                           jmp 0x400475e	      2336	display.c	FUNCTION_15	CALL_1
0x4004dd7	    0x660f1f840000	                    nop word [rax + rax]	      2336	display.c	FUNCTION_15	CALL_1
0x4004de0	            0x85db	                           test ebx, ebx	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4004de2	     0xf85c8efffff	                           jne 0x4003db0	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4004de8	      0xe9a6efffff	                           jmp 0x4003d93	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4004ded	           0xf1f00	                         nop dword [rax]	      1036	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4004df0	    0x8b0500000000	            mov eax, dword [0x04004df6] 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004df6	    0x390500000000	            cmp dword [0x04004dfc], eax 	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004dfc	     0xf8e7aefffff	                           jle 0x4003d7c	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e02	      0xe800000000	                          call 0x4004e07	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e07	        0x4883f801	                              cmp rax, 1	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e0b	     0xf866befffff	                           jbe 0x4003d7c	       996	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e11	    0x8b0500000000	            mov eax, dword [0x04004e17] 	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e17	            0x85c0	                           test eax, eax	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e19	     0xf855defffff	                           jne 0x4003d7c	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e1f	    0x8b0500000000	            mov eax, dword [0x04004e25] 	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e25	            0x85c0	                           test eax, eax	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e27	     0xf854fefffff	                           jne 0x4003d7c	       997	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e2d	    0x8b1500000000	            mov edx, dword [0x04004e33] 	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e33	          0x4139d5	                           cmp r13d, edx	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e36	     0xf8440efffff	                            je 0x4003d7c	       998	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e3c	    0x8b0500000000	            mov eax, dword [0x04004e42] 	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e42	    0x2b0500000000	             sub eax, dword [0x04004e48]	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e48	    0x8b0d00000000	            mov ecx, dword [0x04004e4e] 	      1000	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e4e	            0x29c8	                            sub eax, ecx	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e50	            0x39c2	                            cmp edx, eax	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e52	     0xf8e24efffff	                           jle 0x4003d7c	       999	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e58	          0x8d040a	                    lea eax, [rdx + rcx]	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e5b	    0x2b0500000000	             sub eax, dword [0x04004e61]	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e61	    0x890500000000	            mov dword [0x04004e67], eax 	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e67	      0xe910efffff	                           jmp 0x4003d7c	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e6c	         0xf1f4000	                         nop dword [rax]	      1001	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_19	IF_42
0x4004e70	    0x448b2d000000	           mov r13d, dword [0x04004e77] 	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4004e77	    0x443b2d000000	           cmp r13d, dword [0x04004e7e] 	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4004e7e	     0xf8e0fefffff	                           jle 0x4003d93	      1010	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4004e84	    0x3b2d00000000	            cmp ebp, dword [0x04004e8a] 	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4004e8a	     0xf8d03efffff	                           jge 0x4003d93	      1011	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4004e90	      0xe800000000	                          call 0x4004e95	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004e95	        0x4883f801	                              cmp rax, 1	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004e99	     0xf8661060000	                           jbe 0x4005500	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004e9f	    0x8b0500000000	            mov eax, dword [0x04004ea5] 	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004ea5	            0x85c0	                           test eax, eax	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004ea7	     0xf8553060000	                           jne 0x4005500	      1014	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004ead	    0x448b2d000000	           mov r13d, dword [0x04004eb4] 	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004eb4	    0x442b2d000000	            sub r13d, dword [0x04004ebb]	      1015	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_44
0x4004ebb	          0x4585ed	                         test r13d, r13d	      1018	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_45
0x4004ebe	     0xf84cfeeffff	                            je 0x4003d93	      1018	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	IF_45
0x4004ec4	    0x488b3d000000	            mov rdi, qword [0x04004ecb] 	      2335	display.c	FUNCTION_15	IF_1
0x4004ecb	          0x4885ff	                           test rdi, rdi	      2335	display.c	FUNCTION_15	IF_1
0x4004ece	     0xf84b4070000	                            je 0x4005688	      2335	display.c	FUNCTION_15	IF_1
0x4004ed4	      0xba00000000	                              mov edx, 0	      2336	display.c	FUNCTION_15	CALL_1
0x4004ed9	      0xbe01000000	                              mov esi, 1	      2336	display.c	FUNCTION_15	CALL_1
0x4004ede	      0xe800000000	                          call 0x4004ee3	      2336	display.c	FUNCTION_15	CALL_1
0x4004ee3	      0xe9abeeffff	                           jmp 0x4003d93	      2336	display.c	FUNCTION_15	CALL_1
0x4004ee8	     0xf1f84000000	                   nop dword [rax + rax]	      2336	display.c	FUNCTION_15	CALL_1
0x4004ef0	    0x8b0500000000	            mov eax, dword [0x04004ef6] 	      2336	display.c	FUNCTION_15	CALL_1
0x4004ef6	      0xe959fcffff	                           jmp 0x4004b54	      2336	display.c	FUNCTION_15	CALL_1
0x4004efb	       0xf1f440000	                   nop dword [rax + rax]	      2336	display.c	FUNCTION_15	CALL_1
0x4004f00	            0x85c0	                           test eax, eax	      1911	display.c	
0x4004f02	    0x8b2d00000000	            mov ebp, dword [0x04004f08] 	      1911	display.c	
0x4004f08	     0xf8465f9ffff	                            je 0x4004873	      1911	display.c	
0x4004f0e	          0x4531ff	                          xor r15d, r15d	      1911	display.c	
0x4004f11	    0x390500000000	            cmp dword [0x04004f17], eax 	      1911	display.c	
0x4004f17	     0xf8576f9ffff	                           jne 0x4004893	      1911	display.c	
0x4004f1d	    0x448b05000000	            mov r8d, dword [0x04004f24] 	      1911	display.c	
0x4004f24	    0x442b05000000	             sub r8d, dword [0x04004f2b]	      1911	display.c	
0x4004f2b	          0x4589c7	                           mov r15d, r8d	      1911	display.c	
0x4004f2e	      0xe960f9ffff	                           jmp 0x4004893	      1911	display.c	
0x4004f33	       0xf1f440000	                   nop dword [rax + rax]	      1911	display.c	
0x4004f38	        0x4183fd00	                             cmp r13d, 0	      2339	display.c	FUNCTION_15	ELSE_1	IF_2
0x4004f3c	     0xf8493f9ffff	                            je 0x40048d5	      2339	display.c	FUNCTION_15	ELSE_1	IF_2
0x4004f42	            0x7e2b	                           jle 0x4004f6f	      2351	display.c	FUNCTION_16	FOR_1
0x4004f44	            0x31ed	                            xor ebp, ebp	      2351	display.c	FUNCTION_16	FOR_1
0x4004f46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2351	display.c	FUNCTION_16	FOR_1
0x4004f50	    0x488b35000000	            mov rsi, qword [0x04004f57] 	      2352	display.c	FUNCTION_16	CALL_1
0x4004f57	      0xbf20000000	                           mov edi, 0x20	      2352	display.c	FUNCTION_16	CALL_1
0x4004f5c	          0x83c501	                              add ebp, 1	      2351	display.c	FUNCTION_16	FOR_1
0x4004f5f	      0xe800000000	                          call 0x4004f64	      2352	display.c	FUNCTION_16	CALL_1
0x4004f64	          0x4139ed	                           cmp r13d, ebp	      2351	display.c	FUNCTION_16	FOR_1
0x4004f67	            0x75e7	                           jne 0x4004f50	      2351	display.c	FUNCTION_16	FOR_1
0x4004f69	    0x8b2d00000000	            mov ebp, dword [0x04004f6f] 	      2351	display.c	FUNCTION_16	FOR_1
0x4004f6f	    0x44012d000000	            add dword [0x04004f76], r13d	      2354	display.c	FUNCTION_16
0x4004f76	      0xe95af9ffff	                           jmp 0x40048d5	      2354	display.c	FUNCTION_16
0x4004f7b	       0xf1f440000	                   nop dword [rax + rax]	      2354	display.c	FUNCTION_16
0x4004f80	      0xe800000000	                          call 0x4004f85	      1923	display.c	IF_83
0x4004f85	        0x4883f801	                              cmp rax, 1	      1923	display.c	IF_83
0x4004f89	     0xf86e0000000	                           jbe 0x400506f	      1923	display.c	IF_83
0x4004f8f	    0x8b0500000000	            mov eax, dword [0x04004f95] 	      1923	display.c	IF_83
0x4004f95	            0x85c0	                           test eax, eax	      1923	display.c	IF_83
0x4004f97	     0xf85d2000000	                           jne 0x400506f	      1923	display.c	IF_83
0x4004f9d	    0x448b2d000000	           mov r13d, dword [0x04004fa4] 	      1929	display.c	IF_83	IF_84	CALL_83
0x4004fa4	          0x4585ed	                         test r13d, r13d	      1929	display.c	IF_83	IF_84	CALL_83
0x4004fa7	     0xf84e8040000	                            je 0x4005495	      1929	display.c	IF_83	IF_84	CALL_83
0x4004fad	            0x791f	                           jns 0x4004fce	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004faf	    0x488b35000000	            mov rsi, qword [0x04004fb6] 	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004fb6	          0x4885f6	                           test rsi, rsi	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004fb9	            0x7413	                            je 0x4004fce	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004fbb	          0x4963d5	                        movsxd rdx, r13d	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004fbe	          0x4c89f7	                            mov rdi, r14	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004fc1	      0xe800000000	                          call 0x4004fc6	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004fc6	            0x85c0	                           test eax, eax	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004fc8	     0xf8421060000	                            je 0x40055ef	      1936	display.c	IF_83	ELSE_36	IF_85	CALL_84
0x4004fce	    0x8b0500000000	            mov eax, dword [0x04004fd4] 	      1948	display.c	IF_83	IF_86
0x4004fd4	            0x85c0	                           test eax, eax	      1948	display.c	IF_83	IF_86
0x4004fd6	     0xf89cf040000	                           jns 0x40054ab	      1948	display.c	IF_83	IF_86
0x4004fdc	          0x4589fd	                          mov r13d, r15d	      1955	display.c	IF_83	IF_86
0x4004fdf	    0xc70500000000	               mov dword [0x04004fe9], 1	      1959	display.c	IF_83	IF_86
0x4004fe9	          0x41f7dd	                                neg r13d	      1955	display.c	IF_83	IF_86
0x4004fec	          0x4139ed	                           cmp r13d, ebp	      1967	display.c	IF_87
0x4004fef	     0xf84a6f8ffff	                            je 0x400489b	      1967	display.c	IF_87
0x4004ff5	      0xe800000000	                          call 0x4004ffa	      1974	display.c	IF_88
0x4004ffa	        0x4883f801	                              cmp rax, 1	      1974	display.c	IF_88
0x4004ffe	     0xf8657010000	                           jbe 0x400515b	      1974	display.c	IF_88
0x4005004	    0x448b1d000000	           mov r11d, dword [0x0400500b] 	      1974	display.c	IF_88
0x400500b	          0x4585db	                         test r11d, r11d	      1974	display.c	IF_88
0x400500e	     0xf8547010000	                           jne 0x400515b	      1974	display.c	IF_88
0x4005014	    0x8b1500000000	            mov edx, dword [0x0400501a] 	      1975	display.c	IF_88
0x400501a	            0x89d0	                            mov eax, edx	      1975	display.c	IF_88
0x400501c	          0x4585ed	                         test r13d, r13d	      1979	display.c	ELSE_39	IF_89
0x400501f	     0xf8487000000	                            je 0x40050ac	      1979	display.c	ELSE_39	IF_89
0x4005025	        0x418d4d01	                      lea ecx, [r13 + 1]	      1979	display.c	ELSE_39	IF_89
0x4005029	          0x4429e8	                           sub eax, r13d	      1979	display.c	ELSE_39	IF_89
0x400502c	            0x39c1	                            cmp ecx, eax	      1979	display.c	ELSE_39	IF_89
0x400502e	            0x7c7c	                            jl 0x40050ac	      1979	display.c	ELSE_39	IF_89
0x4005030	    0x448b15000000	           mov r10d, dword [0x04005037] 	      1979	display.c	ELSE_39	IF_89
0x4005037	          0x4585d2	                         test r10d, r10d	      1979	display.c	ELSE_39	IF_89
0x400503a	            0x7408	                            je 0x4005044	      1979	display.c	ELSE_39	IF_89
0x400503c	    0x391500000000	            cmp dword [0x04005042], edx 	      1980	display.c	ELSE_39	IF_89
0x4005042	            0x7468	                            je 0x40050ac	      1980	display.c	ELSE_39	IF_89
0x4005044	          0x4139ed	                           cmp r13d, ebp	      1990	display.c	IF_90
0x4005047	     0xf8f28020000	                            jg 0x4005275	      1990	display.c	IF_90
0x400504d	     0xf8c3d030000	                            jl 0x4005390	      2034	display.c	ELSE_42	IF_93
0x4005053	    0x44892d000000	           mov dword [0x0400505a], r13d 	      2037	display.c	
0x400505a	      0xe93cf8ffff	                           jmp 0x400489b	      2037	display.c	
0x400505f	          0x4c89f7	                            mov rdi, r14	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x4005062	      0xe800000000	                          call 0x4005067	      1051	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_40
0x4005067	          0x4189c5	                           mov r13d, eax	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x400506a	      0xe941f8ffff	                           jmp 0x40048b0	      1050	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_48	FOR_6	CALL_39
0x400506f	          0x4531ed	                          xor r13d, r13d	      1951	display.c	IF_83	IF_86
0x4005072	            0xeb81	                           jmp 0x4004ff5	      1951	display.c	IF_83	IF_86
0x4005074	    0x48c705000000	               mov qword [0x0400507f], 0	       522	display.c	FUNCTION_2	IF_2
0x400507f	      0xe9d9e7ffff	                           jmp 0x400385d	       522	display.c	FUNCTION_2	IF_2
0x4005084	             0x1c0	                            add eax, eax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4005086	        0x488b7b08	                mov rdi, qword [rbx + 8]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400508a	          0x894310	             mov dword [rbx + 0x10], eax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400508d	            0x4898	                                    cdqe	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400508f	    0x488d34850000	                        lea rsi, [rax*4]	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x4005097	      0xe800000000	                          call 0x400509c	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x400509c	        0x48894308	                mov qword [rbx + 8], rax	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40050a0	    0x488b1d000000	            mov rbx, qword [0x040050a7] 	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40050a7	      0xe993f2ffff	                           jmp 0x400433f	       848	display.c	FUNCTION_2	WHILE_3	FOR_1	ELSE_13	IF_30
0x40050ac	    0x488b3d000000	            mov rdi, qword [0x040050b3] 	      1985	display.c	ELSE_39	IF_89	CALL_86
0x40050b3	      0xba00000000	                              mov edx, 0	      1985	display.c	ELSE_39	IF_89	CALL_86
0x40050b8	      0xbe01000000	                              mov esi, 1	      1985	display.c	ELSE_39	IF_89	CALL_86
0x40050bd	            0x31ed	                            xor ebp, ebp	      1987	display.c	ELSE_39	IF_89
0x40050bf	      0xe800000000	                          call 0x40050c4	      1985	display.c	ELSE_39	IF_89	CALL_86
0x40050c4	    0xc70500000000	               mov dword [0x040050ce], 0	      1987	display.c	ELSE_39	IF_89
0x40050ce	      0xe971ffffff	                           jmp 0x4005044	      1987	display.c	ELSE_39	IF_89
0x40050d3	      0xbe0a000000	                            mov esi, 0xa	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x40050d8	          0x4c89ef	                            mov rdi, r13	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x40050db	      0xe800000000	                          call 0x40050e0	       581	display.c	FUNCTION_2	ELSE_1	CALL_11
0x40050e0	          0x4885c0	                           test rax, rax	       582	display.c	FUNCTION_2	ELSE_1	IF_10
0x40050e3	     0xf842a040000	                            je 0x4005513	       582	display.c	FUNCTION_2	ELSE_1	IF_10
0x40050e9	    0x448b05000000	            mov r8d, dword [0x040050f0] 	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x40050f0	        0x488d5801	                      lea rbx, [rax + 1]	       586	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x40050f4	          0x4585c0	                           test r8d, r8d	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x40050f7	     0xf8541030000	                           jne 0x400543e	       588	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11
0x40050fd	          0x4889df	                            mov rdi, rbx	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4005100	      0xe800000000	                          call 0x4005105	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4005105	             0x1c5	                            add ebp, eax	       599	display.c	FUNCTION_2	ELSE_1
0x4005107	          0x4989c5	                            mov r13, rax	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x400510a	    0x890500000000	            mov dword [0x04005110], eax 	       598	display.c	FUNCTION_2	ELSE_1	CALL_14
0x4005110	          0x8d4502	                      lea eax, [rbp + 2]	       599	display.c	FUNCTION_2	ELSE_1
0x4005113	    0x3b0500000000	            cmp eax, dword [0x04005119] 	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x4005119	     0xf8d8e020000	                           jge 0x40053ad	       600	display.c	FUNCTION_2	ELSE_1	IF_13
0x400511f	      0x4c8b742408	                mov r14, qword [rsp + 8]	       126	string3.h	FUNCTION_50	CALL_3
0x4005124	          0x4963d5	                        movsxd rdx, r13d	       126	string3.h	FUNCTION_50	CALL_3
0x4005127	          0x4889de	                            mov rsi, rbx	       126	string3.h	FUNCTION_50	CALL_3
0x400512a	        0x4b8d3c26	                    lea rdi, [r14 + r12]	       126	string3.h	FUNCTION_50	CALL_3
0x400512e	      0xe800000000	                          call 0x4005133	       126	string3.h	FUNCTION_50	CALL_3
0x4005133	          0x4863c5	                         movsxd rax, ebp	       608	display.c	FUNCTION_2	ELSE_1
0x4005136	    0xc70500000000	               mov dword [0x04005140], 0	       609	display.c	FUNCTION_2	ELSE_1
0x4005140	          0x4889c7	                            mov rdi, rax	       608	display.c	FUNCTION_2	ELSE_1
0x4005143	        0x48890424	                    mov qword [rsp], rax	       608	display.c	FUNCTION_2	ELSE_1
0x4005147	      0x41c6043e00	                 mov byte [r14 + rdi], 0	       608	display.c	FUNCTION_2	ELSE_1
0x400514c	    0xc70500000000	               mov dword [0x04005156], 0	       609	display.c	FUNCTION_2	ELSE_1
0x4005156	      0xe910e8ffff	                           jmp 0x400396b	       609	display.c	FUNCTION_2	ELSE_1
0x400515b	    0x8b0500000000	            mov eax, dword [0x04005161] 	      1978	display.c	ELSE_39
0x4005161	            0x89c2	                            mov edx, eax	      1978	display.c	ELSE_39
0x4005163	          0x4429fa	                           sub edx, r15d	      1978	display.c	ELSE_39
0x4005166	      0xe9b1feffff	                           jmp 0x400501c	      1978	display.c	ELSE_39
0x400516b	    0x488b3d000000	            mov rdi, qword [0x04005172] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005172	          0x4885ff	                           test rdi, rdi	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005175	            0x742f	                            je 0x40051a6	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005177	          0x803f00	                       cmp byte [rdi], 0	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400517a	            0x742a	                            je 0x40051a6	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400517c	          0x41f7dd	                                neg r13d	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400517f	            0x7425	                            je 0x40051a6	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005181	            0x31ed	                            xor ebp, ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005183	            0xeb0a	                           jmp 0x400518f	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005185	           0xf1f00	                         nop dword [rax]	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005188	    0x488b3d000000	            mov rdi, qword [0x0400518f] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400518f	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005194	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005199	          0x83c501	                              add ebp, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400519c	      0xe800000000	                          call 0x40051a1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40051a1	          0x4439ed	                           cmp ebp, r13d	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40051a4	            0x75e2	                           jne 0x4005188	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40051a6	    0x8b2d00000000	            mov ebp, dword [0x040051ac] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40051ac	      0xe9b2f6ffff	                           jmp 0x4004863	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40051b1	    0x488b05000000	            mov rax, qword [0x040051b8] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40051b8	          0x4531e4	                          xor r12d, r12d	       541	display.c	FUNCTION_2	IF_4	CALL_5
0x40051bb	            0x31ed	                            xor ebp, ebp	       536	display.c	FUNCTION_2
0x40051bd	          0x488b10	                    mov rdx, qword [rax]	       536	display.c	FUNCTION_2
0x40051c0	      0xe9f5e6ffff	                           jmp 0x40038ba	       536	display.c	FUNCTION_2
0x40051c5	          0x4489e5	                           mov ebp, r12d	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40051c8	      0xe9fee8ffff	                           jmp 0x4003acb	       693	display.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x40051cd	        0x8b7c2434	            mov edi, dword [rsp + 0x34] 	      2047	display.c	FUNCTION_6	IF_1
0x40051d1	    0x3b3d00000000	            cmp edi, dword [0x040051d7] 	      2047	display.c	FUNCTION_6	IF_1
0x40051d7	            0x7f59	                            jg 0x4005232	      2047	display.c	FUNCTION_6	IF_1
0x40051d9	            0x29c7	                            sub edi, eax	      2050	display.c	FUNCTION_6	IF_2
0x40051db	            0x85ff	                           test edi, edi	      2050	display.c	FUNCTION_6	IF_2
0x40051dd	            0x89fd	                            mov ebp, edi	      2050	display.c	FUNCTION_6	IF_2
0x40051df	     0xf8e9f030000	                           jle 0x4005584	      2050	display.c	FUNCTION_6	IF_2
0x40051e5	            0x31db	                            xor ebx, ebx	      2050	display.c	FUNCTION_6	IF_2
0x40051e7	    0x660f1f840000	                    nop word [rax + rax]	      2050	display.c	FUNCTION_6	IF_2
0x40051f0	    0x488b35000000	            mov rsi, qword [0x040051f7] 	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40051f7	      0xbf0a000000	                            mov edi, 0xa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40051fc	          0x83c301	                              add ebx, 1	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40051ff	      0xe800000000	                          call 0x4005204	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4005204	            0x39dd	                            cmp ebp, ebx	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4005206	            0x75e8	                           jne 0x40051f0	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4005208	    0x488b3d000000	            mov rdi, qword [0x0400520f] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x400520f	      0xba00000000	                              mov edx, 0	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4005214	      0xbe01000000	                              mov esi, 1	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4005219	      0xe800000000	                          call 0x400521e	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x400521e	    0xc70500000000	               mov dword [0x04005228], 0	      2059	display.c	FUNCTION_6	IF_2
0x4005228	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2077	display.c	FUNCTION_6
0x400522c	    0x890500000000	            mov dword [0x04005232], eax 	      2077	display.c	FUNCTION_6
0x4005232	      0xe800000000	                          call 0x4005237	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005237	        0x4883f801	                              cmp rax, 1	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400523b	            0x7410	                            je 0x400524d	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400523d	    0x448b05000000	            mov r8d, dword [0x04005244] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005244	          0x4585c0	                           test r8d, r8d	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005247	     0xf84b2f6ffff	                            je 0x40048ff	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400524d	        0x8b7c2434	            mov edi, dword [rsp + 0x34] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005251	    0x448b25000000	           mov r12d, dword [0x04005258] 	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005258	            0x85ff	                           test edi, edi	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x400525a	     0xf853f010000	                           jne 0x400539f	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005260	          0x4585e4	                         test r12d, r12d	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005263	     0xf8436010000	                            je 0x400539f	      1066	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005269	    0x440125000000	            add dword [0x04005270], r12d	      1067	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005270	      0xe991f6ffff	                           jmp 0x4004906	      1067	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_49	IF_50
0x4005275	      0xe800000000	                          call 0x400527a	      2009	display.c	IF_90	IF_91
0x400527a	        0x4883f801	                              cmp rax, 1	      2009	display.c	IF_90	IF_91
0x400527e	     0xf8680010000	                           jbe 0x4005404	      2009	display.c	IF_90	IF_91
0x4005284	    0x448b0d000000	            mov r9d, dword [0x0400528b] 	      2009	display.c	IF_90	IF_91
0x400528b	          0x4585c9	                           test r9d, r9d	      2009	display.c	IF_90	IF_91
0x400528e	     0xf8570010000	                           jne 0x4005404	      2009	display.c	IF_90	IF_91
0x4005294	    0x488b3d000000	            mov rdi, qword [0x0400529b] 	      2011	display.c	IF_90	IF_91	IF_92
0x400529b	          0x4885ff	                           test rdi, rdi	      2011	display.c	IF_90	IF_91	IF_92
0x400529e	            0x750f	                           jne 0x40052af	      2011	display.c	IF_90	IF_91	IF_92
0x40052a0	      0xe976020000	                           jmp 0x400551b	      2011	display.c	IF_90	IF_91	IF_92
0x40052a5	           0xf1f00	                         nop dword [rax]	      2011	display.c	IF_90	IF_91	IF_92
0x40052a8	    0x488b3d000000	            mov rdi, qword [0x040052af] 	      2011	display.c	IF_90	IF_91	IF_92
0x40052af	      0xba00000000	                              mov edx, 0	      2014	display.c	IF_90	IF_91	IF_92	CALL_87
0x40052b4	      0xbe01000000	                              mov esi, 1	      2014	display.c	IF_90	IF_91	IF_92	CALL_87
0x40052b9	          0x83c501	                              add ebp, 1	      2013	display.c	IF_90	IF_91	IF_92	FOR_8
0x40052bc	      0xe800000000	                          call 0x40052c1	      2014	display.c	IF_90	IF_91	IF_92	CALL_87
0x40052c1	          0x4139ed	                           cmp r13d, ebp	      2013	display.c	IF_90	IF_91	IF_92	FOR_8
0x40052c4	            0x75e2	                           jne 0x40052a8	      2013	display.c	IF_90	IF_91	IF_92	FOR_8
0x40052c6	      0xe988fdffff	                           jmp 0x4005053	      2013	display.c	IF_90	IF_91	IF_92	FOR_8
0x40052cb	      0xe800000000	                          call 0x40052d0	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40052d0	        0x4883f801	                              cmp rax, 1	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40052d4	            0x760e	                           jbe 0x40052e4	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40052d6	    0x8b0500000000	            mov eax, dword [0x040052dc] 	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40052dc	            0x85c0	                           test eax, eax	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40052de	     0xf84e7020000	                            je 0x40055cb	       946	display.c	FUNCTION_2	IF_37	IF_38	IF_39	IF_40
0x40052e4	    0x8b0500000000	            mov eax, dword [0x040052ea] 	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x40052ea	        0x498b4e08	                mov rcx, qword [r14 + 8]	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x40052ee	          0x8d68ff	                      lea ebp, [rax - 1]	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x40052f1	      0xe93eeaffff	                           jmp 0x4003d34	       949	display.c	FUNCTION_2	IF_37	IF_38	IF_39	ELSE_18
0x40052f6	    0x488b15000000	            mov rdx, qword [0x040052fd] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x40052fd	      0x4863442434	         movsxd rax, dword [rsp + 0x34] 	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4005302	    0x8b2d00000000	            mov ebp, dword [0x04005308] 	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4005308	        0x488b5208	                mov rdx, qword [rdx + 8]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x400530c	          0x8b1c82	            mov ebx, dword [rdx + rax*4]	      1101	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x400530f	            0x29dd	                            sub ebp, ebx	      1104	display.c	FUNCTION_2	IF_37	IF_38	IF_51	ELSE_22
0x4005311	    0x392d00000000	            cmp dword [0x04005317], ebp 	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x4005317	     0xf8eebf6ffff	                           jle 0x4004a08	      1114	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55
0x400531d	      0xe800000000	                          call 0x4005322	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005322	        0x4883f801	                              cmp rax, 1	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005326	          0x4189ec	                           mov r12d, ebp	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005329	            0x7630	                           jbe 0x400535b	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400532b	    0x448b2d000000	           mov r13d, dword [0x04005332] 	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005332	          0x4585ed	                         test r13d, r13d	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005335	            0x7524	                           jne 0x400535b	      1117	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005337	    0x488b05000000	            mov rax, qword [0x0400533e] 	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400533e	          0x4863fb	                         movsxd rdi, ebx	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005341	      0xb901000000	                              mov ecx, 1	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005346	            0x89ea	                            mov edx, ebp	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005348	            0x31f6	                            xor esi, esi	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400534a	          0x480338	                    add rdi, qword [rax]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400534d	      0xe800000000	                          call 0x4005352	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005352	    0x2b0500000000	             sub eax, dword [0x04005358]	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x4005358	          0x4189c4	                           mov r12d, eax	      1118	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	IF_56
0x400535b	          0x4585e4	                         test r12d, r12d	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x400535e	     0xf88a4f6ffff	                            js 0x4004a08	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4005364	    0x8b0500000000	            mov eax, dword [0x0400536a] 	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x400536a	          0x4139c4	                           cmp r12d, eax	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x400536d	     0xf8d95f6ffff	                           jge 0x4004a08	      1121	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4005373	          0x4429e0	                           sub eax, r12d	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x4005376	            0x89c7	                            mov edi, eax	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x4005378	      0xe800000000	                          call 0x400537d	      1123	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57	CALL_46
0x400537d	    0x448925000000	           mov dword [0x04005384], r12d 	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4005384	      0xe97ff6ffff	                           jmp 0x4004a08	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4005389	     0xf1f80000000	                         nop dword [rax]	      1124	display.c	FUNCTION_2	IF_37	IF_38	ELSE_22	IF_55	ELSE_23	IF_57
0x4005390	            0x89ef	                            mov edi, ebp	      2035	display.c	ELSE_42	IF_93
0x4005392	          0x4429ef	                           sub edi, r13d	      2035	display.c	ELSE_42	IF_93
0x4005395	      0xe800000000	                          call 0x400539a	      2035	display.c	ELSE_42	IF_93
0x400539a	      0xe9b4fcffff	                           jmp 0x4005053	      2035	display.c	ELSE_42	IF_93
0x400539f	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40053a3	            0x85c0	                           test eax, eax	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40053a5	           0xf94c0	                                 sete al	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40053a8	      0xe933f6ffff	                           jmp 0x40049e0	      1076	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51
0x40053ad	            0x89c1	                            mov ecx, eax	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053af	    0x4c8b35000000	            mov r14, qword [0x040053b6] 	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x40053b6	    0x8d9502040000	                  lea edx, [rbp + 0x402]	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053bc	          0xc1f91f	                           sar ecx, 0x1f	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053bf	          0xc1e916	                           shr ecx, 0x16	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053c2	             0x1c8	                            add eax, ecx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053c4	          0x498b3e	                    mov rdi, qword [r14]	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x40053c7	      0x25ff030000	                          and eax, 0x3ff	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053cc	            0x29c8	                            sub eax, ecx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053ce	            0x29c2	                            sub edx, eax	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053d0	          0x4863f2	                         movsxd rsi, edx	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053d3	    0x893500000000	            mov dword [0x040053d9], esi 	       602	display.c	FUNCTION_2	ELSE_1	IF_13
0x40053d9	      0xe800000000	                          call 0x40053de	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x40053de	          0x498906	                    mov qword [r14], rax	       603	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_15
0x40053e1	    0x4c8b35000000	            mov r14, qword [0x040053e8] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x40053e8	    0x486335000000	         movsxd rsi, dword [0x040053ef] 	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x40053ef	          0x498b3e	                    mov rdi, qword [r14]	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x40053f2	      0xe800000000	                          call 0x40053f7	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x40053f7	      0x4889442408	                mov qword [rsp + 8], rax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x40053fc	          0x498906	                    mov qword [r14], rax	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x40053ff	      0xe91bfdffff	                           jmp 0x400511f	       604	display.c	FUNCTION_2	ELSE_1	IF_13	CALL_16
0x4005404	            0x85ed	                           test ebp, ebp	      2024	display.c	IF_90	ELSE_41	FOR_10
0x4005406	     0xf8947fcffff	                           jns 0x4005053	      2024	display.c	IF_90	ELSE_41	FOR_10
0x400540c	          0x4863c5	                         movsxd rax, ebp	      2024	display.c	IF_90	ELSE_41	FOR_10
0x400540f	            0xf7d5	                                 not ebp	      2024	display.c	IF_90	ELSE_41	FOR_10
0x4005411	      0x488d6c2801	                lea rbp, [rax + rbp + 1]	      2024	display.c	IF_90	ELSE_41	FOR_10
0x4005416	        0x4d8d3c06	                    lea r15, [r14 + rax]	      2024	display.c	IF_90	ELSE_41	FOR_10
0x400541a	          0x4c01f5	                            add rbp, r14	      2024	display.c	IF_90	ELSE_41	FOR_10
0x400541d	           0xf1f00	                         nop dword [rax]	      2024	display.c	IF_90	ELSE_41	FOR_10
0x4005420	        0x410fbe3f	                   movsx edi, byte [r15]	      2025	display.c	IF_90	ELSE_41	FOR_10
0x4005424	    0x488b35000000	            mov rsi, qword [0x0400542b] 	      2025	display.c	IF_90	ELSE_41	FOR_10
0x400542b	        0x4983c701	                              add r15, 1	      2025	display.c	IF_90	ELSE_41	FOR_10
0x400542f	      0xe800000000	                          call 0x4005434	      2025	display.c	IF_90	ELSE_41	FOR_10
0x4005434	          0x4c39fd	                            cmp rbp, r15	      2024	display.c	IF_90	ELSE_41	FOR_10
0x4005437	            0x75e7	                           jne 0x4005420	      2024	display.c	IF_90	ELSE_41	FOR_10
0x4005439	      0xe915fcffff	                           jmp 0x4005053	      2024	display.c	IF_90	ELSE_41	FOR_10
0x400543e	          0x4989de	                            mov r14, rbx	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x4005441	          0x4c89ef	                            mov rdi, r13	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4005444	        0x48890424	                    mov qword [rsp], rax	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4005448	          0x4d29ee	                            sub r14, r13	       587	display.c	FUNCTION_2	ELSE_1	ELSE_2
0x400544b	          0x4489f6	                           mov esi, r14d	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x400544e	      0xe800000000	                          call 0x4005453	       590	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	CALL_12
0x4005453	        0x4183fe01	                             cmp r14d, 1	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4005457	            0x7e0e	                           jle 0x4005467	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4005459	        0x488b0424	                    mov rax, qword [rsp]	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x400545d	        0x8078ff0d	                 cmp byte [rax - 1], 0xd	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4005461	     0xf8496fcffff	                            je 0x40050fd	       593	display.c	FUNCTION_2	ELSE_1	ELSE_2	IF_11	IF_12
0x4005467	    0x488b3d000000	            mov rdi, qword [0x0400546e] 	      2481	display.c	FUNCTION_20	IF_1
0x400546e	          0x4885ff	                           test rdi, rdi	      2481	display.c	FUNCTION_20	IF_1
0x4005471	     0xf8486fcffff	                            je 0x40050fd	      2481	display.c	FUNCTION_20	IF_1
0x4005477	      0xba00000000	                              mov edx, 0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x400547c	      0xbe01000000	                              mov esi, 1	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005481	      0xe800000000	                          call 0x4005486	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005486	    0xc70500000000	               mov dword [0x04005490], 0	      2488	display.c	FUNCTION_20	IF_1
0x4005490	      0xe968fcffff	                           jmp 0x40050fd	      2488	display.c	FUNCTION_20	IF_1
0x4005495	    0x448b2d000000	           mov r13d, dword [0x0400549c] 	      1931	display.c	IF_83	IF_84
0x400549c	    0xc70500000000	               mov dword [0x040054a6], 1	      1932	display.c	IF_83	IF_84
0x40054a6	      0xe941fbffff	                           jmp 0x4004fec	      1932	display.c	IF_83	IF_84
0x40054ab	    0x8b3500000000	            mov esi, dword [0x040054b1] 	      1949	display.c	IF_83	IF_86
0x40054b1	    0x393500000000	            cmp dword [0x040054b7], esi 	      1948	display.c	IF_83	IF_86
0x40054b7	     0xf8cb2fbffff	                            jl 0x400506f	      1948	display.c	IF_83	IF_86
0x40054bd	    0x8b1500000000	            mov edx, dword [0x040054c3] 	      1950	display.c	IF_83	IF_86
0x40054c3	          0x4531ed	                          xor r13d, r13d	      1949	display.c	IF_83	IF_86
0x40054c6	    0x3b1500000000	            cmp edx, dword [0x040054cc] 	      1949	display.c	IF_83	IF_86
0x40054cc	     0xf8523fbffff	                           jne 0x4004ff5	      1949	display.c	IF_83	IF_86
0x40054d2	    0x8b0d00000000	            mov ecx, dword [0x040054d8] 	      1951	display.c	IF_83	IF_86
0x40054d8	          0x4439f9	                           cmp ecx, r15d	      1951	display.c	IF_83	IF_86
0x40054db	     0xf8c8efbffff	                            jl 0x400506f	      1951	display.c	IF_83	IF_86
0x40054e1	          0x4585ff	                         test r15d, r15d	      1951	display.c	IF_83	IF_86
0x40054e4	     0xf8f85fbffff	                            jg 0x400506f	      1951	display.c	IF_83	IF_86
0x40054ea	           0xfafd6	                           imul edx, esi	      1951	display.c	IF_83	IF_86
0x40054ed	            0x29d0	                            sub eax, edx	      1951	display.c	IF_83	IF_86
0x40054ef	            0x39c8	                            cmp eax, ecx	      1951	display.c	IF_83	IF_86
0x40054f1	     0xf89fefaffff	                           jns 0x4004ff5	      1951	display.c	IF_83	IF_86
0x40054f7	      0xe9e0faffff	                           jmp 0x4004fdc	      1951	display.c	IF_83	IF_86
0x40054fc	         0xf1f4000	                         nop dword [rax]	      1951	display.c	IF_83	IF_86
0x4005500	    0x44032d000000	            add r13d, dword [0x04005507]	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4005507	    0x442b2d000000	            sub r13d, dword [0x0400550e]	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x400550e	      0xe9a8f9ffff	                           jmp 0x4004ebb	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4005513	          0x4c89eb	                            mov rbx, r13	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x4005516	      0xe9e2fbffff	                           jmp 0x40050fd	      1017	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43	ELSE_20
0x400551b	    0x488b3d000000	            mov rdi, qword [0x04005522] 	      2018	display.c	IF_90	IF_91	ELSE_40	CALL_88
0x4005522	      0xba00000000	                              mov edx, 0	      2018	display.c	IF_90	IF_91	ELSE_40	CALL_88
0x4005527	      0xbe01000000	                              mov esi, 1	      2018	display.c	IF_90	IF_91	ELSE_40	CALL_88
0x400552c	      0xe800000000	                          call 0x4005531	      2018	display.c	IF_90	IF_91	ELSE_40	CALL_88
0x4005531	      0xe91dfbffff	                           jmp 0x4005053	      2018	display.c	IF_90	IF_91	ELSE_40	CALL_88
0x4005536	    0x8b0d00000000	            mov ecx, dword [0x0400553c] 	      1222	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x400553c	          0x4189cd	                           mov r13d, ecx	      1222	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x400553f	            0x89c8	                            mov eax, ecx	      1222	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4005541	          0x4129f5	                           sub r13d, esi	      1222	display.c	FUNCTION_2	ELSE_25	IF_68	IF_70
0x4005544	        0x4183fd00	                             cmp r13d, 0	      2339	display.c	FUNCTION_15	ELSE_1	IF_2
0x4005548	     0xf8416f2ffff	                            je 0x4004764	      2339	display.c	FUNCTION_15	ELSE_1	IF_2
0x400554e	    0x41be00000000	                             mov r14d, 0	      2351	display.c	FUNCTION_16	FOR_1
0x4005554	            0x7e20	                           jle 0x4005576	      2351	display.c	FUNCTION_16	FOR_1
0x4005556	    0x488b35000000	            mov rsi, qword [0x0400555d] 	      2352	display.c	FUNCTION_16	CALL_1
0x400555d	      0xbf20000000	                           mov edi, 0x20	      2352	display.c	FUNCTION_16	CALL_1
0x4005562	        0x4183c601	                             add r14d, 1	      2351	display.c	FUNCTION_16	FOR_1
0x4005566	      0xe800000000	                          call 0x400556b	      2352	display.c	FUNCTION_16	CALL_1
0x400556b	          0x4539f5	                          cmp r13d, r14d	      2351	display.c	FUNCTION_16	FOR_1
0x400556e	            0x75e6	                           jne 0x4005556	      2351	display.c	FUNCTION_16	FOR_1
0x4005570	    0x8b0d00000000	            mov ecx, dword [0x04005576] 	      2351	display.c	FUNCTION_16	FOR_1
0x4005576	    0x44012d000000	            add dword [0x0400557d], r13d	      2354	display.c	FUNCTION_16
0x400557d	            0x89c8	                            mov eax, ecx	      2354	display.c	FUNCTION_16
0x400557f	      0xe9e0f1ffff	                           jmp 0x4004764	      2354	display.c	FUNCTION_16
0x4005584	    0x488b3d000000	            mov rdi, qword [0x0400558b] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400558b	          0x4885ff	                           test rdi, rdi	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400558e	     0xf8494fcffff	                            je 0x4005228	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005594	          0x803f00	                       cmp byte [rdi], 0	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005597	     0xf848bfcffff	                            je 0x4005228	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400559d	            0xf7dd	                                 neg ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400559f	     0xf8483fcffff	                            je 0x4005228	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055a5	            0x31db	                            xor ebx, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055a7	            0xeb07	                           jmp 0x40055b0	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055a9	    0x488b3d000000	            mov rdi, qword [0x040055b0] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055b0	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055b5	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055ba	          0x83c301	                              add ebx, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055bd	      0xe800000000	                          call 0x40055c2	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055c2	            0x39dd	                            cmp ebp, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055c4	            0x75e3	                           jne 0x40055a9	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055c6	      0xe95dfcffff	                           jmp 0x4005228	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x40055cb	    0x8b3500000000	            mov esi, dword [0x040055d1] 	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40055d1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40055d6	            0x31d2	                            xor edx, edx	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40055d8	      0xe800000000	                          call 0x40055dd	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40055dd	    0x4c8b35000000	            mov r14, qword [0x040055e4] 	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40055e4	            0x89c5	                            mov ebp, eax	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40055e6	        0x498b4e08	                mov rcx, qword [r14 + 8]	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40055ea	      0xe945e7ffff	                           jmp 0x4003d34	       947	display.c	FUNCTION_2	IF_37	IF_38	IF_39	CALL_34
0x40055ef	      0xe800000000	                          call 0x40055f4	      2622	display.c	IF_105
0x40055f4	        0x4883f801	                              cmp rax, 1	      2622	display.c	IF_105
0x40055f8	            0x740a	                            je 0x4005604	      2622	display.c	IF_105
0x40055fa	    0x8b0500000000	            mov eax, dword [0x04005600] 	      2622	display.c	IF_105
0x4005600	            0x85c0	                           test eax, eax	      2622	display.c	IF_105
0x4005602	            0x7429	                            je 0x400562d	      2622	display.c	IF_105
0x4005604	            0x31c0	                            xor eax, eax	      2624	display.c	IF_105	CALL_117
0x4005606	      0xbf00000000	                              mov edi, 0	      2624	display.c	IF_105	CALL_117
0x400560b	      0xe800000000	                          call 0x4005610	      2624	display.c	IF_105	CALL_117
0x4005610	          0x4489e8	                           mov eax, r13d	      2625	display.c	IF_105
0x4005613	            0xf7d8	                                 neg eax	      2625	display.c	IF_105
0x4005615	     0x30500000000	             add eax, dword [0x0400561b]	      1938	display.c	IF_83	ELSE_36	IF_85
0x400561b	    0xc70500000000	               mov dword [0x04005625], 1	      1939	display.c	IF_83	ELSE_36	IF_85
0x4005625	          0x4189c5	                           mov r13d, eax	      1938	display.c	IF_83	ELSE_36	IF_85
0x4005628	      0xe9bff9ffff	                           jmp 0x4004fec	      1938	display.c	IF_83	ELSE_36	IF_85
0x400562d	      0xb901000000	                              mov ecx, 1	      1938	display.c	IF_83	ELSE_36	IF_85
0x4005632	            0x31d2	                            xor edx, edx	      1938	display.c	IF_83	ELSE_36	IF_85
0x4005634	          0x4489ee	                           mov esi, r13d	      1938	display.c	IF_83	ELSE_36	IF_85
0x4005637	          0x4c89f7	                            mov rdi, r14	      1938	display.c	IF_83	ELSE_36	IF_85
0x400563a	      0xe8d1abffff	           call sym._rl_col_width.part.0	      1938	display.c	IF_83	ELSE_36	IF_85
0x400563f	            0xebd4	                           jmp 0x4005615	      1938	display.c	IF_83	ELSE_36	IF_85
0x4005641	    0x488b3d000000	            mov rdi, qword [0x04005648] 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4005648	          0x4489e2	                           mov edx, r12d	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400564b	      0xb901000000	                              mov ecx, 1	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4005650	            0x31f6	                            xor esi, esi	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4005652	      0xe800000000	                          call 0x4005657	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4005657	    0x448b25000000	           mov r12d, dword [0x0400565e] 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400565e	          0x4429e0	                           sub eax, r12d	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4005661	     0x30500000000	             add eax, dword [0x04005667]	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4005667	    0x890500000000	            mov dword [0x0400566d], eax 	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400566d	            0x89d8	                            mov eax, ebx	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x400566f	      0xe96cf3ffff	                           jmp 0x40049e0	      1094	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	IF_54
0x4005674	      0xbe01000000	                              mov esi, 1	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x4005679	      0xbf00000000	                              mov edi, 0	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x400567e	      0xe800000000	                          call 0x4005683	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x4005683	      0xe914f3ffff	                           jmp 0x400499c	      1090	display.c	FUNCTION_2	IF_37	IF_38	ELSE_21	IF_46	IF_51	CALL_44
0x4005688	          0x4531f6	                          xor r14d, r14d	      2351	display.c	FUNCTION_16	FOR_1
0x400568b	          0x4585ed	                         test r13d, r13d	      2351	display.c	FUNCTION_16	FOR_1
0x400568e	            0x7e1a	                           jle 0x40056aa	      2351	display.c	FUNCTION_16	FOR_1
0x4005690	    0x488b35000000	            mov rsi, qword [0x04005697] 	      2352	display.c	FUNCTION_16	CALL_1
0x4005697	      0xbf20000000	                           mov edi, 0x20	      2352	display.c	FUNCTION_16	CALL_1
0x400569c	        0x4183c601	                             add r14d, 1	      2351	display.c	FUNCTION_16	FOR_1
0x40056a0	      0xe800000000	                          call 0x40056a5	      2352	display.c	FUNCTION_16	CALL_1
0x40056a5	          0x4539f5	                          cmp r13d, r14d	      2351	display.c	FUNCTION_16	FOR_1
0x40056a8	            0x75e6	                           jne 0x4005690	      2351	display.c	FUNCTION_16	FOR_1
0x40056aa	    0x44012d000000	            add dword [0x040056b1], r13d	      2354	display.c	FUNCTION_16
0x40056b1	      0xe9dde6ffff	                           jmp 0x4003d93	      2354	display.c	FUNCTION_16
0x40056b6	      0xe800000000	                          call 0x40056bb	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056bb	        0x4883f801	                              cmp rax, 1	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056bf	     0xf86abe6ffff	                           jbe 0x4003d70	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056c5	    0x833d00000000	               cmp dword [0x040056cc], 0	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056cc	     0xf859ee6ffff	                           jne 0x4003d70	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056d2	    0x833d00000000	               cmp dword [0x040056d9], 0	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056d9	     0xf8591e6ffff	                           jne 0x4003d70	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056df	    0x8b0500000000	            mov eax, dword [0x040056e5] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056e5	          0x4139c5	                           cmp r13d, eax	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056e8	     0xf8482e6ffff	                            je 0x4003d70	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056ee	    0x3b0500000000	            cmp eax, dword [0x040056f4] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056f4	     0xf8e76e6ffff	                           jle 0x4003d70	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x40056fa	    0x443b2d000000	           cmp r13d, dword [0x04005701] 	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4005701	     0xf8d69e6ffff	                           jge 0x4003d70	       994	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4005707	    0x2b0500000000	             sub eax, dword [0x0400570d]	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x400570d	          0x4585ff	                         test r15d, r15d	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4005710	    0x890500000000	            mov dword [0x04005716], eax 	       995	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_41
0x4005716	     0xf8580e6ffff	                           jne 0x4003d9c	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x400571c	      0xe966e6ffff	                           jmp 0x4003d87	      1009	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	IF_43
0x4005721	            0x31d2	                            xor edx, edx	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4005723	      0xe92cf4ffff	                           jmp 0x4004b54	      1225	display.c	FUNCTION_2	ELSE_25	IF_68
0x4005728	          0x4489c0	                            mov eax, r8d	      1150	display.c	FUNCTION_2	ELSE_25
0x400572b	     0xf844aefffff	                            je 0x400467b	      1195	display.c	FUNCTION_2	ELSE_25
0x4005731	      0xe943efffff	                           jmp 0x4004679	      1195	display.c	FUNCTION_2	ELSE_25
0x4005736	            0x89e8	                            mov eax, ebp	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4005738	    0x2b0500000000	             sub eax, dword [0x0400573e]	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x400573e	      0xe967e6ffff	                           jmp 0x4003daa	      1037	display.c	FUNCTION_2	IF_37	IF_38	ELSE_18	FOR_5	ELSE_21	IF_46	IF_47
0x4005743	      0xe800000000	                          call 0x4005748	      1254	display.c	FUNCTION_2
rl_on_new_line_with_prompt	DO,0:IF,3:SWITCH,0:CALL,7:WHILE,1:functions,0:ELSE,1:FOR,0	108
0x4000d30	    0x488b3d000000	            mov rdi, qword [0x04000d37] 	      1831	display.c	FUNCTION_4	CALL_1
0x4000d37	            0x4154	                                push r12	      1825	display.c	FUNCTION_4
0x4000d39	              0x55	                                push rbp	      1825	display.c	FUNCTION_4
0x4000d3a	              0x53	                                push rbx	      1825	display.c	FUNCTION_4
0x4000d3b	      0xe800000000	                          call 0x4000d40	      1831	display.c	FUNCTION_4	CALL_1
0x4000d40	          0x8d7801	                      lea edi, [rax + 1]	      1832	display.c	FUNCTION_4	CALL_2
0x4000d43	            0x31c0	                            xor eax, eax	      1832	display.c	FUNCTION_4	CALL_2
0x4000d45	      0xe8f6f2ffff	           call sym.init_line_structures	      1832	display.c	FUNCTION_4	CALL_2
0x4000d4a	    0x488b1d000000	            mov rbx, qword [0x04000d51] 	      1836	display.c	FUNCTION_4
0x4000d51	    0x488b05000000	            mov rax, qword [0x04000d58] 	       110	string3.h	FUNCTION_48	CALL_3
0x4000d58	          0x4885db	                           test rbx, rbx	      1836	display.c	FUNCTION_4
0x4000d5b	    0x480f441d0000	           cmove rbx, qword [0x04000d63]	      1836	display.c	FUNCTION_4
0x4000d63	          0x488b38	                    mov rdi, qword [rax]	       110	string3.h	FUNCTION_48	CALL_3
0x4000d66	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_48	CALL_3
0x4000d69	      0xe800000000	                          call 0x4000d6e	       110	string3.h	FUNCTION_48	CALL_3
0x4000d6e	    0x488b05000000	            mov rax, qword [0x04000d75] 	       110	string3.h	FUNCTION_48	CALL_3
0x4000d75	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_48	CALL_3
0x4000d78	          0x488b38	                    mov rdi, qword [rax]	       110	string3.h	FUNCTION_48	CALL_3
0x4000d7b	      0xe800000000	                          call 0x4000d80	       110	string3.h	FUNCTION_48	CALL_3
0x4000d80	    0x488b2d000000	            mov rbp, qword [0x04000d87] 	      1841	display.c	FUNCTION_4	CALL_5
0x4000d87	      0xbe0a000000	                            mov esi, 0xa	      1841	display.c	FUNCTION_4	CALL_5
0x4000d8c	          0x4889ef	                            mov rdi, rbp	      1841	display.c	FUNCTION_4	CALL_5
0x4000d8f	      0xe800000000	                          call 0x4000d94	      1841	display.c	FUNCTION_4	CALL_5
0x4000d94	          0x4885c0	                           test rax, rax	      1841	display.c	FUNCTION_4	CALL_5
0x4000d97	          0x4889c3	                            mov rbx, rax	      1841	display.c	FUNCTION_4	CALL_5
0x4000d9a	        0x480f44dd	                          cmove rbx, rbp	      1841	display.c	FUNCTION_4	CALL_5
0x4000d9e	          0x4889df	                            mov rdi, rbx	      1845	display.c	FUNCTION_4	CALL_6
0x4000da1	      0xe800000000	                          call 0x4000da6	      1845	display.c	FUNCTION_4	CALL_6
0x4000da6	          0x4989c4	                            mov r12, rax	      1845	display.c	FUNCTION_4	CALL_6
0x4000da9	            0x89c5	                            mov ebp, eax	      1845	display.c	FUNCTION_4	CALL_6
0x4000dab	      0xe800000000	                          call 0x4000db0	      1846	display.c	FUNCTION_4	IF_2
0x4000db0	        0x4883f801	                              cmp rax, 1	      1846	display.c	FUNCTION_4	IF_2
0x4000db4	            0x760e	                           jbe 0x4000dc4	      1846	display.c	FUNCTION_4	IF_2
0x4000db6	    0x8b0500000000	            mov eax, dword [0x04000dbc] 	      1846	display.c	FUNCTION_4	IF_2
0x4000dbc	            0x85c0	                           test eax, eax	      1846	display.c	FUNCTION_4	IF_2
0x4000dbe	     0xf84bc000000	                            je 0x4000e80	      1846	display.c	FUNCTION_4	IF_2
0x4000dc4	    0x448925000000	           mov dword [0x04000dcb], r12d 	      1849	display.c	FUNCTION_4	ELSE_1
0x4000dcb	    0x8b0500000000	            mov eax, dword [0x04000dd1] 	      1854	display.c	FUNCTION_4
0x4000dd1	            0x31db	                            xor ebx, ebx	      1854	display.c	FUNCTION_4
0x4000dd3	            0x85c0	                           test eax, eax	      1854	display.c	FUNCTION_4
0x4000dd5	            0x89e8	                            mov eax, ebp	      1855	display.c	FUNCTION_4
0x4000dd7	           0xf94c3	                                 sete bl	      1854	display.c	FUNCTION_4
0x4000dda	     0x31d00000000	             add ebx, dword [0x04000de0]	      1854	display.c	FUNCTION_4
0x4000de0	              0x99	                                     cdq	      1855	display.c	FUNCTION_4
0x4000de1	            0xf7fb	                                idiv ebx	      1855	display.c	FUNCTION_4
0x4000de3	        0x4183fc00	                             cmp r12d, 0	      1859	display.c	FUNCTION_4	IF_3
0x4000de7	    0x890500000000	            mov dword [0x04000ded], eax 	      1855	display.c	FUNCTION_4
0x4000ded	            0x7e71	                           jle 0x4000e60	      1859	display.c	FUNCTION_4	IF_3
0x4000def	            0x85d2	                           test edx, edx	      1859	display.c	FUNCTION_4	IF_3
0x4000df1	     0xf8499000000	                            je 0x4000e90	      1859	display.c	FUNCTION_4	IF_3
0x4000df7	    0xc70500000000	               mov dword [0x04000e01], 0	      1861	display.c	FUNCTION_4
0x4000e01	    0x488b05000000	            mov rax, qword [0x04000e08] 	      1861	display.c	FUNCTION_4
0x4000e08	            0x31d2	                            xor edx, edx	      2624	display.c	IF_105	CALL_117
0x4000e0a	        0x488b7008	                mov rsi, qword [rax + 8]	      2624	display.c	IF_105	CALL_117
0x4000e0e	            0x31c0	                            xor eax, eax	      2624	display.c	IF_105	CALL_117
0x4000e10	          0x4889f1	                            mov rcx, rsi	      2624	display.c	IF_105	CALL_117
0x4000e13	       0xf1f440000	                   nop dword [rax + rax]	      2624	display.c	IF_105	CALL_117
0x4000e18	    0x891500000000	            mov dword [0x04000e1e], edx 	      1866	display.c	FUNCTION_4	WHILE_1
0x4000e1e	            0x8901	                    mov dword [rcx], eax	      1867	display.c	FUNCTION_4	WHILE_1
0x4000e20	             0x1d8	                            add eax, ebx	      1868	display.c	FUNCTION_4	WHILE_1
0x4000e22	          0x83c201	                              add edx, 1	      1867	display.c	FUNCTION_4	WHILE_1
0x4000e25	        0x4883c104	                              add rcx, 4	      1867	display.c	FUNCTION_4	WHILE_1
0x4000e29	            0x39c5	                            cmp ebp, eax	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e2b	            0x7deb	                           jge 0x4000e18	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e2d	          0x4863d2	                         movsxd rdx, edx	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e30	        0x48c1e202	                              shl rdx, 2	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e34	    0x488b05000000	            mov rax, qword [0x04000e3b] 	      1873	display.c	FUNCTION_4
0x4000e3b	        0x44892416	             mov dword [rsi + rdx], r12d	      1870	display.c	FUNCTION_4
0x4000e3f	    0xc70500000000	               mov dword [0x04000e49], 0	      1871	display.c	FUNCTION_4
0x4000e49	              0x5b	                                 pop rbx	      1876	display.c	FUNCTION_4
0x4000e4a	    0x488905000000	            mov qword [0x04000e51], rax 	      1873	display.c	FUNCTION_4
0x4000e51	            0x31c0	                            xor eax, eax	      1876	display.c	FUNCTION_4
0x4000e53	              0x5d	                                 pop rbp	      1876	display.c	FUNCTION_4
0x4000e54	            0x415c	                                 pop r12	      1876	display.c	FUNCTION_4
0x4000e56	              0xc3	                                     ret	      1876	display.c	FUNCTION_4
0x4000e57	    0x660f1f840000	                    nop word [rax + rax]	      1876	display.c	FUNCTION_4
0x4000e60	    0xc70500000000	               mov dword [0x04000e6a], 0	      1861	display.c	FUNCTION_4
0x4000e6a	            0x7495	                            je 0x4000e01	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e6c	    0x488b05000000	            mov rax, qword [0x04000e73] 	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e73	            0x31d2	                            xor edx, edx	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e75	        0x488b7008	                mov rsi, qword [rax + 8]	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e79	            0xebb9	                           jmp 0x4000e34	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e7b	       0xf1f440000	                   nop dword [rax + rax]	      1864	display.c	FUNCTION_4	WHILE_1
0x4000e80	          0x4585e4	                         test r12d, r12d	      2620	display.c	IF_104
0x4000e83	            0x7f1f	                            jg 0x4000ea4	      2620	display.c	IF_104
0x4000e85	    0x890500000000	            mov dword [0x04000e8b], eax 	      1847	display.c	FUNCTION_4	IF_2
0x4000e8b	      0xe93bffffff	                           jmp 0x4000dcb	      1847	display.c	FUNCTION_4	IF_2
0x4000e90	      0xbe01000000	                              mov esi, 1	      1860	display.c	FUNCTION_4	CALL_7
0x4000e95	      0xbf00000000	                              mov edi, 0	      1860	display.c	FUNCTION_4	CALL_7
0x4000e9a	      0xe800000000	                          call 0x4000e9f	      1860	display.c	FUNCTION_4	CALL_7
0x4000e9f	      0xe953ffffff	                           jmp 0x4000df7	      1860	display.c	FUNCTION_4	CALL_7
0x4000ea4	      0xe800000000	                          call 0x4000ea9	      2622	display.c	IF_105
0x4000ea9	        0x4883f801	                              cmp rax, 1	      2622	display.c	IF_105
0x4000ead	            0x740a	                            je 0x4000eb9	      2622	display.c	IF_105
0x4000eaf	    0x8b1500000000	            mov edx, dword [0x04000eb5] 	      2622	display.c	IF_105
0x4000eb5	            0x85d2	                           test edx, edx	      2622	display.c	IF_105
0x4000eb7	            0x7411	                            je 0x4000eca	      2622	display.c	IF_105
0x4000eb9	            0x31c0	                            xor eax, eax	      2624	display.c	IF_105	CALL_117
0x4000ebb	      0xbf00000000	                              mov edi, 0	      2624	display.c	IF_105	CALL_117
0x4000ec0	      0xe800000000	                          call 0x4000ec5	      2624	display.c	IF_105	CALL_117
0x4000ec5	          0x4489e0	                           mov eax, r12d	      2624	display.c	IF_105	CALL_117
0x4000ec8	            0xebbb	                           jmp 0x4000e85	      2624	display.c	IF_105	CALL_117
0x4000eca	      0xb901000000	                              mov ecx, 1	      2624	display.c	IF_105	CALL_117
0x4000ecf	          0x4489e2	                           mov edx, r12d	      2624	display.c	IF_105	CALL_117
0x4000ed2	            0x31f6	                            xor esi, esi	      2624	display.c	IF_105	CALL_117
0x4000ed4	          0x4889df	                            mov rdi, rbx	      2624	display.c	IF_105	CALL_117
0x4000ed7	      0xe834f3ffff	           call sym._rl_col_width.part.0	      2624	display.c	IF_105	CALL_117
0x4000edc	            0xeba7	                           jmp 0x4000e85	      2624	display.c	IF_105	CALL_117
_rl_clean_up_for_exit	DO,0:IF,1:SWITCH,0:CALL,3:WHILE,0:functions,0:ELSE,0:FOR,0	60
0x4005ea0	    0x8b0500000000	            mov eax, dword [0x04005ea6] 	      2567	display.c	FUNCTION_22	IF_1
0x4005ea6	            0x85c0	                           test eax, eax	      2567	display.c	FUNCTION_22	IF_1
0x4005ea8	            0x7506	                           jne 0x4005eb0	      2567	display.c	FUNCTION_22	IF_1
0x4005eaa	            0xf3c3	                                     ret	      2567	display.c	FUNCTION_22	IF_1
0x4005eac	         0xf1f4000	                         nop dword [rax]	      2567	display.c	FUNCTION_22	IF_1
0x4005eb0	            0x4154	                                push r12	      2566	display.c	FUNCTION_22
0x4005eb2	    0x8b0500000000	            mov eax, dword [0x04005eb8] 	      2047	display.c	FUNCTION_6	IF_1
0x4005eb8	    0x448b25000000	           mov r12d, dword [0x04005ebf] 	      2569	display.c	FUNCTION_22	IF_1	CALL_1
0x4005ebf	              0x55	                                push rbp	      2566	display.c	FUNCTION_22
0x4005ec0	              0x53	                                push rbx	      2566	display.c	FUNCTION_22
0x4005ec1	          0x4139c4	                           cmp r12d, eax	      2047	display.c	FUNCTION_6	IF_1
0x4005ec4	            0x7459	                            je 0x4005f1f	      2047	display.c	FUNCTION_6	IF_1
0x4005ec6	    0x443b25000000	           cmp r12d, dword [0x04005ecd] 	      2047	display.c	FUNCTION_6	IF_1
0x4005ecd	            0x7f50	                            jg 0x4005f1f	      2047	display.c	FUNCTION_6	IF_1
0x4005ecf	          0x4489e5	                           mov ebp, r12d	      2050	display.c	FUNCTION_6	IF_2
0x4005ed2	            0x29c5	                            sub ebp, eax	      2050	display.c	FUNCTION_6	IF_2
0x4005ed4	            0x85ed	                           test ebp, ebp	      2050	display.c	FUNCTION_6	IF_2
0x4005ed6	            0x7e70	                           jle 0x4005f48	      2050	display.c	FUNCTION_6	IF_2
0x4005ed8	            0x31db	                            xor ebx, ebx	      2050	display.c	FUNCTION_6	IF_2
0x4005eda	    0x660f1f440000	                    nop word [rax + rax]	      2050	display.c	FUNCTION_6	IF_2
0x4005ee0	    0x488b35000000	            mov rsi, qword [0x04005ee7] 	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4005ee7	      0xbf0a000000	                            mov edi, 0xa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4005eec	          0x83c301	                              add ebx, 1	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4005eef	      0xe800000000	                          call 0x4005ef4	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x4005ef4	            0x39dd	                            cmp ebp, ebx	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4005ef6	            0x75e8	                           jne 0x4005ee0	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x4005ef8	    0x488b3d000000	            mov rdi, qword [0x04005eff] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4005eff	      0xba00000000	                              mov edx, 0	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4005f04	      0xbe01000000	                              mov esi, 1	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4005f09	      0xe800000000	                          call 0x4005f0e	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x4005f0e	    0xc70500000000	               mov dword [0x04005f18], 0	      2059	display.c	FUNCTION_6	IF_2
0x4005f18	    0x448925000000	           mov dword [0x04005f1f], r12d 	      2077	display.c	FUNCTION_6
0x4005f1f	    0x488b3d000000	            mov rdi, qword [0x04005f26] 	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x4005f26	    0xc70500000000	               mov dword [0x04005f30], 0	      2570	display.c	FUNCTION_22	IF_1
0x4005f30	      0xe800000000	                          call 0x4005f35	      2571	display.c	FUNCTION_22	IF_1	CALL_2
0x4005f35	              0x5b	                                 pop rbx	      2574	display.c	FUNCTION_22
0x4005f36	              0x5d	                                 pop rbp	      2574	display.c	FUNCTION_22
0x4005f37	            0x415c	                                 pop r12	      2574	display.c	FUNCTION_22
0x4005f39	            0x31f6	                            xor esi, esi	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x4005f3b	      0xbf01000000	                              mov edi, 1	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x4005f40	      0xe900000000	                           jmp 0x4005f45	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x4005f45	           0xf1f00	                         nop dword [rax]	      2572	display.c	FUNCTION_22	IF_1	CALL_3
0x4005f48	    0x488b3d000000	            mov rdi, qword [0x04005f4f] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005f4f	          0x4885ff	                           test rdi, rdi	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005f52	            0x74c4	                            je 0x4005f18	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005f54	          0x803f00	                       cmp byte [rdi], 0	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005f57	            0x74bf	                            je 0x4005f18	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005f59	            0xf7dd	                                 neg ebp	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f5b	            0x74bb	                            je 0x4005f18	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f5d	            0x31db	                            xor ebx, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f5f	            0xeb0e	                           jmp 0x4005f6f	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f61	     0xf1f80000000	                         nop dword [rax]	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f68	    0x488b3d000000	            mov rdi, qword [0x04005f6f] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f6f	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f74	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f79	          0x83c301	                              add ebx, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f7c	      0xe800000000	                          call 0x4005f81	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f81	            0x39dd	                            cmp ebp, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f83	            0x75e3	                           jne 0x4005f68	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005f85	            0xeb91	                           jmp 0x4005f18	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
_rl_current_display_line	DO,0:IF,2:SWITCH,0:CALL,0:WHILE,0:functions,0:ELSE,2:FOR,0	19
0x4006020	    0x488b05000000	            mov rax, qword [0x04006027] 	      2594	display.c	FUNCTION_24	IF_1
0x4006027	    0x483905000000	            cmp qword [0x0400602e], rax 	      2594	display.c	FUNCTION_24	IF_1
0x400602e	    0x8b0d00000000	            mov ecx, dword [0x04006034] 	      2595	display.c	FUNCTION_24	IF_1
0x4006034	    0x8b0500000000	            mov eax, dword [0x0400603a] 	      2595	display.c	FUNCTION_24	IF_1
0x400603a	            0x741c	                            je 0x4006058	      2594	display.c	FUNCTION_24	IF_1
0x400603c	            0x29c8	                            sub eax, ecx	      2597	display.c	FUNCTION_24	ELSE_1
0x400603e	            0x85c0	                           test eax, eax	      2599	display.c	FUNCTION_24	IF_2
0x4006040	            0x7e0e	                           jle 0x4006050	      2599	display.c	FUNCTION_24	IF_2
0x4006042	              0x99	                                     cdq	      2600	display.c	FUNCTION_24	IF_2
0x4006043	            0xf7f9	                                idiv ecx	      2600	display.c	FUNCTION_24	IF_2
0x4006045	          0x83c001	                              add eax, 1	      2600	display.c	FUNCTION_24	IF_2
0x4006048	              0xc3	                                     ret	      2600	display.c	FUNCTION_24	IF_2
0x4006049	     0xf1f80000000	                         nop dword [rax]	      2600	display.c	FUNCTION_24	IF_2
0x4006050	            0x31c0	                            xor eax, eax	      2602	display.c	FUNCTION_24	ELSE_2
0x4006052	              0xc3	                                     ret	      2605	display.c	FUNCTION_24
0x4006053	       0xf1f440000	                   nop dword [rax + rax]	      2605	display.c	FUNCTION_24
0x4006058	            0x29c8	                            sub eax, ecx	      2595	display.c	FUNCTION_24	IF_1
0x400605a	    0x2b0500000000	             sub eax, dword [0x04006060]	      2595	display.c	FUNCTION_24	IF_1
0x4006060	            0xebdc	                           jmp 0x400603e	      2595	display.c	FUNCTION_24	IF_1
_rl_clear_screen	DO,0:IF,1:SWITCH,0:CALL,4:WHILE,0:functions,0:ELSE,1:FOR,0	8
0x4005750	    0x488b3d000000	            mov rdi, qword [0x04005757] 	      2364	display.c	FUNCTION_17	IF_1
0x4005757	          0x4885ff	                           test rdi, rdi	      2364	display.c	FUNCTION_17	IF_1
0x400575a	            0x7414	                            je 0x4005770	      2364	display.c	FUNCTION_17	IF_1
0x400575c	      0xba00000000	                              mov edx, 0	      2365	display.c	FUNCTION_17	CALL_3
0x4005761	      0xbe01000000	                              mov esi, 1	      2365	display.c	FUNCTION_17	CALL_3
0x4005766	      0xe900000000	                           jmp 0x400576b	      2365	display.c	FUNCTION_17	CALL_3
0x400576b	       0xf1f440000	                   nop dword [rax + rax]	      2365	display.c	FUNCTION_17	CALL_3
0x4005770	      0xe900000000	                           jmp 0x4005775	      2367	display.c	FUNCTION_17	CALL_4
_rl_make_prompt_for_search	DO,0:IF,3:SWITCH,0:CALL,8:WHILE,0:functions,0:ELSE,1:FOR,0	95
0x4001b60	    0x488b05000000	            mov rax, qword [0x04001b67] 	      2237	display.c	FUNCTION_11
0x4001b67	            0x4154	                                push r12	      2277	display.c	FUNCTION_13
0x4001b69	          0x4189fc	                           mov r12d, edi	      2277	display.c	FUNCTION_13
0x4001b6c	              0x55	                                push rbp	      2277	display.c	FUNCTION_13
0x4001b6d	              0x53	                                push rbx	      2277	display.c	FUNCTION_13
0x4001b6e	    0x488b1d000000	            mov rbx, qword [0x04001b75] 	      2286	display.c	FUNCTION_13	CALL_2
0x4001b75	    0x48c705000000	               mov qword [0x04001b80], 0	      2246	display.c	FUNCTION_11
0x4001b80	    0x488905000000	            mov qword [0x04001b87], rax 	      2237	display.c	FUNCTION_11
0x4001b87	    0x488b05000000	            mov rax, qword [0x04001b8e] 	      2238	display.c	FUNCTION_11
0x4001b8e	    0x48c705000000	               mov qword [0x04001b99], 0	      2246	display.c	FUNCTION_11
0x4001b99	          0x4885db	                           test rbx, rbx	      2286	display.c	FUNCTION_13	CALL_2
0x4001b9c	    0x488905000000	            mov qword [0x04001ba3], rax 	      2238	display.c	FUNCTION_11
0x4001ba3	    0x8b0500000000	            mov eax, dword [0x04001ba9] 	      2239	display.c	FUNCTION_11
0x4001ba9	    0xc70500000000	               mov dword [0x04001bb3], 0	      2248	display.c	FUNCTION_11
0x4001bb3	    0x890500000000	            mov dword [0x04001bb9], eax 	      2239	display.c	FUNCTION_11
0x4001bb9	    0x8b0500000000	            mov eax, dword [0x04001bbf] 	      2240	display.c	FUNCTION_11
0x4001bbf	    0xc70500000000	               mov dword [0x04001bc9], 0	      2247	display.c	FUNCTION_11
0x4001bc9	    0x890500000000	            mov dword [0x04001bcf], eax 	      2240	display.c	FUNCTION_11
0x4001bcf	    0x8b0500000000	            mov eax, dword [0x04001bd5] 	      2241	display.c	FUNCTION_11
0x4001bd5	    0xc70500000000	               mov dword [0x04001bdf], 0	      2248	display.c	FUNCTION_11
0x4001bdf	    0x890500000000	            mov dword [0x04001be5], eax 	      2241	display.c	FUNCTION_11
0x4001be5	    0x8b0500000000	            mov eax, dword [0x04001beb] 	      2242	display.c	FUNCTION_11
0x4001beb	    0xc70500000000	               mov dword [0x04001bf5], 0	      2248	display.c	FUNCTION_11
0x4001bf5	    0x890500000000	            mov dword [0x04001bfb], eax 	      2242	display.c	FUNCTION_11
0x4001bfb	    0x8b0500000000	            mov eax, dword [0x04001c01] 	      2243	display.c	FUNCTION_11
0x4001c01	    0xc70500000000	               mov dword [0x04001c0b], 0	      2249	display.c	FUNCTION_11
0x4001c0b	    0x890500000000	            mov dword [0x04001c11], eax 	      2243	display.c	FUNCTION_11
0x4001c11	    0x8b0500000000	            mov eax, dword [0x04001c17] 	      2244	display.c	FUNCTION_11
0x4001c17	    0xc70500000000	               mov dword [0x04001c21], 0	      2249	display.c	FUNCTION_11
0x4001c21	    0x890500000000	            mov dword [0x04001c27], eax 	      2244	display.c	FUNCTION_11
0x4001c27	     0xf84b3000000	                            je 0x4001ce0	      2286	display.c	FUNCTION_13	CALL_2
0x4001c2d	      0xbe0a000000	                            mov esi, 0xa	      2286	display.c	FUNCTION_13	CALL_2
0x4001c32	          0x4889df	                            mov rdi, rbx	      2286	display.c	FUNCTION_13	CALL_2
0x4001c35	      0xe800000000	                          call 0x4001c3a	      2286	display.c	FUNCTION_13	CALL_2
0x4001c3a	          0x4885c0	                           test rax, rax	      2287	display.c	FUNCTION_13	IF_1
0x4001c3d	            0x7461	                            je 0x4001ca0	      2287	display.c	FUNCTION_13	IF_1
0x4001c3f	        0x488d6801	                      lea rbp, [rax + 1]	      2298	display.c	FUNCTION_13	ELSE_1
0x4001c43	          0x4889ef	                            mov rdi, rbp	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4001c46	      0xe800000000	                          call 0x4001c4b	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4001c4b	          0x8d7802	                      lea edi, [rax + 2]	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4001c4e	          0x4889c3	                            mov rbx, rax	      2299	display.c	FUNCTION_13	ELSE_1	CALL_6
0x4001c51	          0x4863ff	                         movsxd rdi, edi	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4001c54	      0xe800000000	                          call 0x4001c59	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4001c59	            0x85db	                           test ebx, ebx	      2301	display.c	FUNCTION_13	ELSE_1	IF_3
0x4001c5b	          0x4889c2	                            mov rdx, rax	      2300	display.c	FUNCTION_13	ELSE_1	CALL_7
0x4001c5e	            0x7528	                           jne 0x4001c88	      2301	display.c	FUNCTION_13	ELSE_1	IF_3
0x4001c60	          0x4863db	                         movsxd rbx, ebx	      2303	display.c	FUNCTION_13	ELSE_1
0x4001c63	        0x4488241a	              mov byte [rdx + rbx], r12b	      2303	display.c	FUNCTION_13	ELSE_1
0x4001c67	      0xc6441a0100	             mov byte [rdx + rbx + 1], 0	      2304	display.c	FUNCTION_13	ELSE_1
0x4001c6c	    0x8b0500000000	            mov eax, dword [0x04001c72] 	      2308	display.c	FUNCTION_13
0x4001c72	              0x5b	                                 pop rbx	      2310	display.c	FUNCTION_13
0x4001c73	              0x5d	                                 pop rbp	      2310	display.c	FUNCTION_13
0x4001c74	          0x83c001	                              add eax, 1	      2308	display.c	FUNCTION_13
0x4001c77	    0x890500000000	            mov dword [0x04001c7d], eax 	      2308	display.c	FUNCTION_13
0x4001c7d	          0x4889d0	                            mov rax, rdx	      2310	display.c	FUNCTION_13
0x4001c80	            0x415c	                                 pop r12	      2310	display.c	FUNCTION_13
0x4001c82	              0xc3	                                     ret	      2310	display.c	FUNCTION_13
0x4001c83	       0xf1f440000	                   nop dword [rax + rax]	      2310	display.c	FUNCTION_13
0x4001c88	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_48	CALL_3
0x4001c8b	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_48	CALL_3
0x4001c8e	      0xe800000000	                          call 0x4001c93	       110	string3.h	FUNCTION_48	CALL_3
0x4001c93	          0x4889c2	                            mov rdx, rax	       110	string3.h	FUNCTION_48	CALL_3
0x4001c96	            0xebc8	                           jmp 0x4001c60	       110	string3.h	FUNCTION_48	CALL_3
0x4001c98	     0xf1f84000000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_48	CALL_3
0x4001ca0	          0x803b00	                       cmp byte [rbx], 0	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001ca3	            0x743b	                            je 0x4001ce0	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001ca5	          0x4889df	                            mov rdi, rbx	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001ca8	      0xe800000000	                          call 0x4001cad	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001cad	          0x8d7802	                      lea edi, [rax + 2]	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001cb0	          0x4889c3	                            mov rbx, rax	      2289	display.c	FUNCTION_13	IF_1	CALL_3
0x4001cb3	          0x4863ff	                         movsxd rdi, edi	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001cb6	      0xe800000000	                          call 0x4001cbb	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001cbb	            0x85db	                           test ebx, ebx	      2291	display.c	FUNCTION_13	IF_1	IF_2
0x4001cbd	          0x4889c2	                            mov rdx, rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001cc0	            0x7446	                            je 0x4001d08	      2291	display.c	FUNCTION_13	IF_1	IF_2
0x4001cc2	    0x488b35000000	            mov rsi, qword [0x04001cc9] 	       110	string3.h	FUNCTION_48	CALL_3
0x4001cc9	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_48	CALL_3
0x4001ccc	      0xe800000000	                          call 0x4001cd1	       110	string3.h	FUNCTION_48	CALL_3
0x4001cd1	          0x4889c2	                            mov rdx, rax	       110	string3.h	FUNCTION_48	CALL_3
0x4001cd4	          0x4863c3	                         movsxd rax, ebx	       110	string3.h	FUNCTION_48	CALL_3
0x4001cd7	        0x488d4801	                      lea rcx, [rax + 1]	       110	string3.h	FUNCTION_48	CALL_3
0x4001cdb	            0xeb17	                           jmp 0x4001cf4	       110	string3.h	FUNCTION_48	CALL_3
0x4001cdd	           0xf1f00	                         nop dword [rax]	       110	string3.h	FUNCTION_48	CALL_3
0x4001ce0	      0xbf02000000	                              mov edi, 2	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001ce5	      0xe800000000	                          call 0x4001cea	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001cea	      0xb901000000	                              mov ecx, 1	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001cef	          0x4889c2	                            mov rdx, rax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001cf2	            0x31c0	                            xor eax, eax	      2290	display.c	FUNCTION_13	IF_1	CALL_4
0x4001cf4	        0x44882402	              mov byte [rdx + rax], r12b	      2293	display.c	FUNCTION_13	IF_1
0x4001cf8	        0xc6040a00	                 mov byte [rdx + rcx], 0	      2294	display.c	FUNCTION_13	IF_1
0x4001cfc	      0xe96bffffff	                           jmp 0x4001c6c	      2294	display.c	FUNCTION_13	IF_1
0x4001d01	     0xf1f80000000	                         nop dword [rax]	      2294	display.c	FUNCTION_13	IF_1
0x4001d08	      0xb901000000	                              mov ecx, 1	      2294	display.c	FUNCTION_13	IF_1
0x4001d0d	            0x31c0	                            xor eax, eax	      2294	display.c	FUNCTION_13	IF_1
0x4001d0f	            0xebe3	                           jmp 0x4001cf4	      2294	display.c	FUNCTION_13	IF_1
_rl_erase_entire_line	DO,0:IF,0:SWITCH,0:CALL,4:WHILE,0:functions,0:ELSE,0:FOR,0	29
0x4005f90	        0x4883ec08	                              sub rsp, 8	      2578	display.c	FUNCTION_23
0x4005f94	    0x488b3d000000	            mov rdi, qword [0x04005f9b] 	      2481	display.c	FUNCTION_20	IF_1
0x4005f9b	          0x4885ff	                           test rdi, rdi	      2481	display.c	FUNCTION_20	IF_1
0x4005f9e	            0x7470	                            je 0x4006010	      2481	display.c	FUNCTION_20	IF_1
0x4005fa0	      0xba00000000	                              mov edx, 0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005fa5	      0xbe01000000	                              mov esi, 1	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005faa	      0xe800000000	                          call 0x4005faf	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005faf	    0x488b3d000000	            mov rdi, qword [0x04005fb6] 	      2335	display.c	FUNCTION_15	IF_1
0x4005fb6	    0xc70500000000	               mov dword [0x04005fc0], 0	      2488	display.c	FUNCTION_20	IF_1
0x4005fc0	          0x4885ff	                           test rdi, rdi	      2335	display.c	FUNCTION_15	IF_1
0x4005fc3	            0x740f	                            je 0x4005fd4	      2335	display.c	FUNCTION_15	IF_1
0x4005fc5	      0xba00000000	                              mov edx, 0	      2336	display.c	FUNCTION_15	CALL_1
0x4005fca	      0xbe01000000	                              mov esi, 1	      2336	display.c	FUNCTION_15	CALL_1
0x4005fcf	      0xe800000000	                          call 0x4005fd4	      2336	display.c	FUNCTION_15	CALL_1
0x4005fd4	    0x488b3d000000	            mov rdi, qword [0x04005fdb] 	      2481	display.c	FUNCTION_20	IF_1
0x4005fdb	          0x4885ff	                           test rdi, rdi	      2481	display.c	FUNCTION_20	IF_1
0x4005fde	            0x7419	                            je 0x4005ff9	      2481	display.c	FUNCTION_20	IF_1
0x4005fe0	      0xba00000000	                              mov edx, 0	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005fe5	      0xbe01000000	                              mov esi, 1	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005fea	      0xe800000000	                          call 0x4005fef	      2486	display.c	FUNCTION_20	IF_1	CALL_2
0x4005fef	    0xc70500000000	               mov dword [0x04005ff9], 0	      2488	display.c	FUNCTION_20	IF_1
0x4005ff9	    0x488b3d000000	            mov rdi, qword [0x04006000] 	      2582	display.c	FUNCTION_23	CALL_4
0x4006000	        0x4883c408	                              add rsp, 8	      2583	display.c	FUNCTION_23
0x4006004	      0xe900000000	                           jmp 0x4006009	      2582	display.c	FUNCTION_23	CALL_4
0x4006009	     0xf1f80000000	                         nop dword [rax]	      2582	display.c	FUNCTION_23	CALL_4
0x4006010	    0x488b3d000000	            mov rdi, qword [0x04006017] 	      2335	display.c	FUNCTION_15	IF_1
0x4006017	          0x4885ff	                           test rdi, rdi	      2335	display.c	FUNCTION_15	IF_1
0x400601a	            0x75a9	                           jne 0x4005fc5	      2335	display.c	FUNCTION_15	IF_1
0x400601c	            0xebdb	                           jmp 0x4005ff9	      2335	display.c	FUNCTION_15	IF_1
_rl_erase_at_end_of_line	DO,0:IF,0:SWITCH,0:CALL,3:WHILE,0:functions,0:ELSE,0:FOR,2	36
0x4001d20	              0x55	                                push rbp	      2316	display.c	FUNCTION_14
0x4001d21	              0x53	                                push rbx	      2316	display.c	FUNCTION_14
0x4001d22	            0x89fd	                            mov ebp, edi	      2316	display.c	FUNCTION_14
0x4001d24	        0x4883ec08	                              sub rsp, 8	      2316	display.c	FUNCTION_14
0x4001d28	      0xe800000000	                          call 0x4001d2d	      2319	display.c	FUNCTION_14	CALL_1
0x4001d2d	            0x85ed	                           test ebp, ebp	      2320	display.c	FUNCTION_14	FOR_1
0x4001d2f	            0x7e5c	                           jle 0x4001d8d	      2320	display.c	FUNCTION_14	FOR_1
0x4001d31	            0x31db	                            xor ebx, ebx	      2320	display.c	FUNCTION_14	FOR_1
0x4001d33	       0xf1f440000	                   nop dword [rax + rax]	      2320	display.c	FUNCTION_14	FOR_1
0x4001d38	    0x488b35000000	            mov rsi, qword [0x04001d3f] 	      2321	display.c	FUNCTION_14	CALL_2
0x4001d3f	      0xbf20000000	                           mov edi, 0x20	      2321	display.c	FUNCTION_14	CALL_2
0x4001d44	          0x83c301	                              add ebx, 1	      2320	display.c	FUNCTION_14	FOR_1
0x4001d47	      0xe800000000	                          call 0x4001d4c	      2321	display.c	FUNCTION_14	CALL_2
0x4001d4c	            0x39dd	                            cmp ebp, ebx	      2320	display.c	FUNCTION_14	FOR_1
0x4001d4e	            0x75e8	                           jne 0x4001d38	      2320	display.c	FUNCTION_14	FOR_1
0x4001d50	            0x89ef	                            mov edi, ebp	      2322	display.c	FUNCTION_14	CALL_3
0x4001d52	      0xe800000000	                          call 0x4001d57	      2322	display.c	FUNCTION_14	CALL_3
0x4001d57	    0x488b35000000	            mov rsi, qword [0x04001d5e] 	      2322	display.c	FUNCTION_14	CALL_3
0x4001d5e	            0x31d2	                            xor edx, edx	      2322	display.c	FUNCTION_14	CALL_3
0x4001d60	    0x8b0500000000	            mov eax, dword [0x04001d66] 	      2324	display.c	FUNCTION_14	FOR_2
0x4001d66	          0x488b0e	                    mov rcx, qword [rsi]	      2324	display.c	FUNCTION_14	FOR_2
0x4001d69	          0x83c201	                              add edx, 1	      2323	display.c	FUNCTION_14	FOR_2
0x4001d6c	          0x83e801	                              sub eax, 1	      2324	display.c	FUNCTION_14	FOR_2
0x4001d6f	            0x39d5	                            cmp ebp, edx	      2323	display.c	FUNCTION_14	FOR_2
0x4001d71	    0x890500000000	            mov dword [0x04001d77], eax 	      2324	display.c	FUNCTION_14	FOR_2
0x4001d77	            0x4898	                                    cdqe	      2324	display.c	FUNCTION_14	FOR_2
0x4001d79	        0xc6040100	                 mov byte [rcx + rax], 0	      2324	display.c	FUNCTION_14	FOR_2
0x4001d7d	            0x75e1	                           jne 0x4001d60	      2323	display.c	FUNCTION_14	FOR_2
0x4001d7f	    0x830500000000	               add dword [0x04001d86], 1	      2325	display.c	FUNCTION_14
0x4001d86	        0x4883c408	                              add rsp, 8	      2326	display.c	FUNCTION_14
0x4001d8a	              0x5b	                                 pop rbx	      2326	display.c	FUNCTION_14
0x4001d8b	              0x5d	                                 pop rbp	      2326	display.c	FUNCTION_14
0x4001d8c	              0xc3	                                     ret	      2326	display.c	FUNCTION_14
0x4001d8d	            0x89ef	                            mov edi, ebp	      2322	display.c	FUNCTION_14	CALL_3
0x4001d8f	      0xe800000000	                          call 0x4001d94	      2322	display.c	FUNCTION_14	CALL_3
0x4001d94	            0xebe9	                           jmp 0x4001d7f	      2322	display.c	FUNCTION_14	CALL_3
rl_reset_line_state	DO,0:IF,0:SWITCH,0:CALL,1:WHILE,0:functions,0:ELSE,0:FOR,0	23
0x4001920	    0x488b05000000	            mov rax, qword [0x04001927] 	      1808	display.c	FUNCTION_3	IF_1
0x4001927	          0x488b10	                    mov rdx, qword [rax]	      1808	display.c	FUNCTION_3	IF_1
0x400192a	          0x4885d2	                           test rdx, rdx	      1808	display.c	FUNCTION_3	IF_1
0x400192d	            0x7403	                            je 0x4001932	      1808	display.c	FUNCTION_3	IF_1
0x400192f	          0xc60200	                       mov byte [rdx], 0	      1809	display.c	FUNCTION_3	IF_1
0x4001932	        0x488b4008	                mov rax, qword [rax + 8]	      1813	display.c	FUNCTION_3	IF_2
0x4001936	    0xc70500000000	               mov dword [0x04001940], 0	      1811	display.c	FUNCTION_3
0x4001940	    0xc70500000000	               mov dword [0x0400194a], 0	      1811	display.c	FUNCTION_3
0x400194a	    0xc70500000000	               mov dword [0x04001954], 0	      1812	display.c	FUNCTION_3
0x4001954	    0xc70500000000	               mov dword [0x0400195e], 0	      1812	display.c	FUNCTION_3
0x400195e	          0x4885c0	                           test rax, rax	      1813	display.c	FUNCTION_3	IF_2
0x4001961	            0x740d	                            je 0x4001970	      1813	display.c	FUNCTION_3	IF_2
0x4001963	    0xc74004000000	                  mov dword [rax + 4], 0	      1814	display.c	FUNCTION_3	IF_2
0x400196a	    0xc70000000000	                      mov dword [rax], 0	      1814	display.c	FUNCTION_3	IF_2
0x4001970	    0x488b05000000	            mov rax, qword [0x04001977] 	      2229	display.c	FUNCTION_10
0x4001977	      0xba00000000	                              mov edx, 0	      2229	display.c	FUNCTION_10
0x400197c	    0xc70500000000	               mov dword [0x04001986], 0	      1815	display.c	FUNCTION_3
0x4001986	    0xc70500000000	               mov dword [0x04001990], 1	      2230	display.c	FUNCTION_10
0x4001990	          0x4885c0	                           test rax, rax	      2229	display.c	FUNCTION_10
0x4001993	        0x480f44c2	                          cmove rax, rdx	      2229	display.c	FUNCTION_10
0x4001997	    0x488905000000	            mov qword [0x0400199e], rax 	      2229	display.c	FUNCTION_10
0x400199e	            0x31c0	                            xor eax, eax	      2232	display.c	FUNCTION_10
0x40019a0	              0xc3	                                     ret	      2232	display.c	FUNCTION_10
_rl_update_final	DO,0:IF,2:SWITCH,0:CALL,6:WHILE,0:functions,0:ELSE,0:FOR,0	113
0x4005780	            0x4155	                                push r13	      2447	display.c	FUNCTION_19
0x4005782	            0x4154	                                push r12	      2447	display.c	FUNCTION_19
0x4005784	              0x55	                                push rbp	      2447	display.c	FUNCTION_19
0x4005785	              0x53	                                push rbx	      2447	display.c	FUNCTION_19
0x4005786	        0x4883ec08	                              sub rsp, 8	      2447	display.c	FUNCTION_19
0x400578a	    0x8b2d00000000	            mov ebp, dword [0x04005790] 	      2453	display.c	FUNCTION_19	IF_1
0x4005790	            0x85ed	                           test ebp, ebp	      2453	display.c	FUNCTION_19	IF_1
0x4005792	            0x740e	                            je 0x40057a2	      2453	display.c	FUNCTION_19	IF_1
0x4005794	    0x8b1500000000	            mov edx, dword [0x0400579a] 	      2453	display.c	FUNCTION_19	IF_1
0x400579a	            0x85d2	                           test edx, edx	      2453	display.c	FUNCTION_19	IF_1
0x400579c	     0xf84de000000	                            je 0x4005880	      2453	display.c	FUNCTION_19	IF_1
0x40057a2	    0x8b0500000000	            mov eax, dword [0x040057a8] 	      2047	display.c	FUNCTION_6	IF_1
0x40057a8	            0x39c5	                            cmp ebp, eax	      2047	display.c	FUNCTION_6	IF_1
0x40057aa	     0xf849a000000	                            je 0x400584a	      2047	display.c	FUNCTION_6	IF_1
0x40057b0	          0x4531ed	                          xor r13d, r13d	      2047	display.c	FUNCTION_6	IF_1
0x40057b3	    0x3b2d00000000	            cmp ebp, dword [0x040057b9] 	      2047	display.c	FUNCTION_6	IF_1
0x40057b9	     0xf8f8b000000	                            jg 0x400584a	      2047	display.c	FUNCTION_6	IF_1
0x40057bf	          0x4189ec	                           mov r12d, ebp	      2050	display.c	FUNCTION_6	IF_2
0x40057c2	          0x4129c4	                           sub r12d, eax	      2050	display.c	FUNCTION_6	IF_2
0x40057c5	          0x4585e4	                         test r12d, r12d	      2050	display.c	FUNCTION_6	IF_2
0x40057c8	     0xf8e5a010000	                           jle 0x4005928	      2050	display.c	FUNCTION_6	IF_2
0x40057ce	            0x31db	                            xor ebx, ebx	      2050	display.c	FUNCTION_6	IF_2
0x40057d0	    0x488b35000000	            mov rsi, qword [0x040057d7] 	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40057d7	      0xbf0a000000	                            mov edi, 0xa	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40057dc	          0x83c301	                              add ebx, 1	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40057df	      0xe800000000	                          call 0x40057e4	      2053	display.c	FUNCTION_6	IF_2	CALL_1
0x40057e4	          0x4139dc	                           cmp r12d, ebx	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40057e7	            0x75e7	                           jne 0x40057d0	      2052	display.c	FUNCTION_6	IF_2	FOR_1
0x40057e9	    0x488b3d000000	            mov rdi, qword [0x040057f0] 	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40057f0	      0xba00000000	                              mov edx, 0	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40057f5	      0xbe01000000	                              mov esi, 1	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40057fa	      0xe800000000	                          call 0x40057ff	      2057	display.c	FUNCTION_6	IF_2	CALL_3
0x40057ff	    0xc70500000000	               mov dword [0x04005809], 0	      2059	display.c	FUNCTION_6	IF_2
0x4005809	          0x4585ed	                         test r13d, r13d	      2461	display.c	FUNCTION_19	IF_2
0x400580c	    0x892d00000000	            mov dword [0x04005812], ebp 	      2077	display.c	FUNCTION_6
0x4005812	            0x7436	                            je 0x400584a	      2461	display.c	FUNCTION_19	IF_2
0x4005814	    0x8b0500000000	            mov eax, dword [0x0400581a] 	      2461	display.c	FUNCTION_19	IF_2
0x400581a	            0x85c0	                           test eax, eax	      2461	display.c	FUNCTION_19	IF_2
0x400581c	            0x742c	                            je 0x400584a	      2461	display.c	FUNCTION_19	IF_2
0x400581e	    0x488b35000000	            mov rsi, qword [0x04005825] 	      2461	display.c	FUNCTION_19	IF_2
0x4005825	    0x486305000000	         movsxd rax, dword [0x0400582c] 	      2461	display.c	FUNCTION_19	IF_2
0x400582c	        0x488b4e08	                mov rcx, qword [rsi + 8]	      2461	display.c	FUNCTION_19	IF_2
0x4005830	        0x4883c001	                              add rax, 1	      2461	display.c	FUNCTION_19	IF_2
0x4005834	      0x48635481fc	     movsxd rdx, dword [rcx + rax*4 - 4]	      2461	display.c	FUNCTION_19	IF_2
0x4005839	          0x8b3c81	            mov edi, dword [rcx + rax*4]	      2461	display.c	FUNCTION_19	IF_2
0x400583c	            0x29d7	                            sub edi, edx	      2461	display.c	FUNCTION_19	IF_2
0x400583e	    0x3b3d00000000	            cmp edi, dword [0x04005844] 	      2461	display.c	FUNCTION_19	IF_2
0x4005844	     0xf8486000000	                            je 0x40058d0	      2461	display.c	FUNCTION_19	IF_2
0x400584a	    0xc70500000000	               mov dword [0x04005854], 0	      2471	display.c	FUNCTION_19
0x4005854	      0xe800000000	                          call 0x4005859	      2472	display.c	FUNCTION_19	CALL_5
0x4005859	    0x488b3d000000	            mov rdi, qword [0x04005860] 	      2473	display.c	FUNCTION_19	CALL_6
0x4005860	      0xe800000000	                          call 0x4005865	      2473	display.c	FUNCTION_19	CALL_6
0x4005865	    0x830500000000	               add dword [0x0400586c], 1	      2474	display.c	FUNCTION_19
0x400586c	        0x4883c408	                              add rsp, 8	      2475	display.c	FUNCTION_19
0x4005870	              0x5b	                                 pop rbx	      2475	display.c	FUNCTION_19
0x4005871	              0x5d	                                 pop rbp	      2475	display.c	FUNCTION_19
0x4005872	            0x415c	                                 pop r12	      2475	display.c	FUNCTION_19
0x4005874	            0x415d	                                 pop r13	      2475	display.c	FUNCTION_19
0x4005876	              0xc3	                                     ret	      2475	display.c	FUNCTION_19
0x4005877	    0x660f1f840000	                    nop word [rax + rax]	      2475	display.c	FUNCTION_19
0x4005880	    0x488b15000000	            mov rdx, qword [0x04005887] 	      2454	display.c	FUNCTION_19	IF_1
0x4005887	          0x4863c5	                         movsxd rax, ebp	      2454	display.c	FUNCTION_19	IF_1
0x400588a	        0x488b4a08	                mov rcx, qword [rdx + 8]	      2454	display.c	FUNCTION_19	IF_1
0x400588e	          0x488b12	                    mov rdx, qword [rdx]	      2454	display.c	FUNCTION_19	IF_1
0x4005891	        0x48630481	         movsxd rax, dword [rcx + rax*4]	      2454	display.c	FUNCTION_19	IF_1
0x4005895	        0x803c0200	                 cmp byte [rdx + rax], 0	      2453	display.c	FUNCTION_19	IF_1
0x4005899	     0xf8503ffffff	                           jne 0x40057a2	      2453	display.c	FUNCTION_19	IF_1
0x400589f	    0x8b0500000000	            mov eax, dword [0x040058a5] 	      2047	display.c	FUNCTION_6	IF_1
0x40058a5	          0x83ed01	                              sub ebp, 1	      2456	display.c	FUNCTION_19	IF_1
0x40058a8	    0x892d00000000	            mov dword [0x040058ae], ebp 	      2456	display.c	FUNCTION_19	IF_1
0x40058ae	            0x39c5	                            cmp ebp, eax	      2047	display.c	FUNCTION_6	IF_1
0x40058b0	     0xf845effffff	                            je 0x4005814	      2047	display.c	FUNCTION_6	IF_1
0x40058b6	    0x392d00000000	            cmp dword [0x040058bc], ebp 	      2047	display.c	FUNCTION_6	IF_1
0x40058bc	    0x41bd01000000	                             mov r13d, 1	      2457	display.c	FUNCTION_19	IF_1
0x40058c2	     0xf8df7feffff	                           jge 0x40057bf	      2047	display.c	FUNCTION_6	IF_1
0x40058c8	      0xe947ffffff	                           jmp 0x4005814	      2047	display.c	FUNCTION_6	IF_1
0x40058cd	           0xf1f00	                         nop dword [rax]	      2047	display.c	FUNCTION_6	IF_1
0x40058d0	          0x480316	                    add rdx, qword [rsi]	      2465	display.c	FUNCTION_19	IF_2
0x40058d3	          0x83ef01	                              sub edi, 1	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x40058d6	    0xc70500000000	     mov dword [0x040058e0], 0xffffffff 	      2466	display.c	FUNCTION_19	IF_2
0x40058e0	          0x4889d6	                            mov rsi, rdx	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x40058e3	          0x4889d3	                            mov rbx, rdx	      2465	display.c	FUNCTION_19	IF_2
0x40058e6	      0xe800000000	                          call 0x40058eb	      2467	display.c	FUNCTION_19	IF_2	CALL_2
0x40058eb	    0x488b3d000000	            mov rdi, qword [0x040058f2] 	      2335	display.c	FUNCTION_15	IF_1
0x40058f2	          0x4885ff	                           test rdi, rdi	      2335	display.c	FUNCTION_15	IF_1
0x40058f5	            0x740f	                            je 0x4005906	      2335	display.c	FUNCTION_15	IF_1
0x40058f7	      0xba00000000	                              mov edx, 0	      2336	display.c	FUNCTION_15	CALL_1
0x40058fc	      0xbe01000000	                              mov esi, 1	      2336	display.c	FUNCTION_15	CALL_1
0x4005901	      0xe800000000	                          call 0x4005906	      2336	display.c	FUNCTION_15	CALL_1
0x4005906	    0x486305000000	         movsxd rax, dword [0x0400590d] 	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x400590d	    0x488b35000000	            mov rsi, qword [0x04005914] 	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4005914	       0xfbe7c03ff	         movsx edi, byte [rbx + rax - 1]	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4005919	      0xe800000000	                          call 0x400591e	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x400591e	      0xe927ffffff	                           jmp 0x400584a	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4005923	       0xf1f440000	                   nop dword [rax + rax]	      2469	display.c	FUNCTION_19	IF_2	CALL_4
0x4005928	    0x488b3d000000	            mov rdi, qword [0x0400592f] 	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400592f	          0x4885ff	                           test rdi, rdi	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005932	     0xf84d1feffff	                            je 0x4005809	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005938	          0x803f00	                       cmp byte [rdi], 0	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x400593b	     0xf84c8feffff	                            je 0x4005809	      2071	display.c	FUNCTION_6	ELSE_1	IF_3
0x4005941	          0x41f7dc	                                neg r12d	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005944	     0xf84bffeffff	                            je 0x4005809	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400594a	            0x31db	                            xor ebx, ebx	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400594c	            0xeb09	                           jmp 0x4005957	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400594e	            0x6690	                                     nop	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005950	    0x488b3d000000	            mov rdi, qword [0x04005957] 	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005957	      0xba00000000	                              mov edx, 0	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400595c	      0xbe01000000	                              mov esi, 1	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005961	          0x83c301	                              add ebx, 1	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005964	      0xe800000000	                          call 0x4005969	      2073	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x4005969	          0x4439e3	                           cmp ebx, r12d	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400596c	            0x75e2	                           jne 0x4005950	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
0x400596e	      0xe996feffff	                           jmp 0x4005809	      2072	display.c	FUNCTION_6	ELSE_1	IF_3	FOR_2
init_line_structures	DO,0:IF,5:SWITCH,0:CALL,8:WHILE,0:functions,0:ELSE,1:FOR,1	103
0x4000040	              0x55	                                push rbp	       450	display.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	       450	display.c	FUNCTION_1
0x4000042	            0x89fd	                            mov ebp, edi	       450	display.c	FUNCTION_1
0x4000044	        0x4883ec08	                              sub rsp, 8	       450	display.c	FUNCTION_1
0x4000048	    0x488b05000000	            mov rax, qword [0x0400004f] 	       453	display.c	FUNCTION_1	IF_1
0x400004f	        0x48833800	                      cmp qword [rax], 0	       453	display.c	FUNCTION_1	IF_1
0x4000053	    0x8b0500000000	            mov eax, dword [0x04000059] 	       455	display.c	FUNCTION_1	IF_1	IF_2
0x4000059	     0xf84c9000000	                            je 0x4000128	       453	display.c	FUNCTION_1	IF_1
0x400005f	            0x39c7	                            cmp edi, eax	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x4000061	            0x7f6d	                            jg 0x40000d0	       460	display.c	FUNCTION_1	ELSE_1	IF_3
0x4000063	            0x39c5	                            cmp ebp, eax	       469	display.c	FUNCTION_1	FOR_1
0x4000065	    0x488b1d000000	            mov rbx, qword [0x0400006c] 	       469	display.c	FUNCTION_1	FOR_1
0x400006c	            0x7d3c	                           jge 0x40000aa	       469	display.c	FUNCTION_1	FOR_1
0x400006e	          0x4863d5	                         movsxd rdx, ebp	       469	display.c	FUNCTION_1	FOR_1
0x4000071	            0xf7d5	                                 not ebp	       469	display.c	FUNCTION_1	FOR_1
0x4000073	    0x4c8b05000000	              mov r8, qword [0x0400007a]	       469	display.c	FUNCTION_1	FOR_1
0x400007a	        0x8d740500	                    lea esi, [rbp + rax]	       469	display.c	FUNCTION_1	FOR_1
0x400007e	        0x488d4201	                      lea rax, [rdx + 1]	       469	display.c	FUNCTION_1	FOR_1
0x4000082	          0x4801c6	                            add rsi, rax	       469	display.c	FUNCTION_1	FOR_1
0x4000085	            0xeb0d	                           jmp 0x4000094	       469	display.c	FUNCTION_1	FOR_1
0x4000087	    0x660f1f840000	                    nop word [rax + rax]	       469	display.c	FUNCTION_1	FOR_1
0x4000090	        0x4883c001	                              add rax, 1	       469	display.c	FUNCTION_1	FOR_1
0x4000094	          0x488b0b	                    mov rcx, qword [rbx]	       471	display.c	FUNCTION_1	FOR_1
0x4000097	          0x4839f0	                            cmp rax, rsi	       469	display.c	FUNCTION_1	FOR_1
0x400009a	        0xc6041100	                 mov byte [rcx + rdx], 0	       471	display.c	FUNCTION_1	FOR_1
0x400009e	          0x498b08	                     mov rcx, qword [r8]	       472	display.c	FUNCTION_1	FOR_1
0x40000a1	        0xc6041101	                 mov byte [rcx + rdx], 1	       472	display.c	FUNCTION_1	FOR_1
0x40000a5	          0x4889c2	                            mov rdx, rax	       472	display.c	FUNCTION_1	FOR_1
0x40000a8	            0x75e6	                           jne 0x4000090	       469	display.c	FUNCTION_1	FOR_1
0x40000aa	      0x48837b0800	                  cmp qword [rbx + 8], 0	       475	display.c	FUNCTION_1	IF_5
0x40000af	     0xf84b2000000	                            je 0x4000167	       475	display.c	FUNCTION_1	IF_5
0x40000b5	    0xc70500000000	               mov dword [0x040000bf], 1	       493	display.c	FUNCTION_1
0x40000bf	        0x4883c408	                              add rsp, 8	       494	display.c	FUNCTION_1
0x40000c3	              0x5b	                                 pop rbx	       494	display.c	FUNCTION_1
0x40000c4	              0x5d	                                 pop rbp	       494	display.c	FUNCTION_1
0x40000c5	              0xc3	                                     ret	       494	display.c	FUNCTION_1
0x40000c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       494	display.c	FUNCTION_1
0x40000d0	             0x1c0	                            add eax, eax	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000d2	            0x39c7	                            cmp edi, eax	       463	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x40000d4	            0x7f42	                            jg 0x4000118	       463	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x40000d6	    0x890500000000	            mov dword [0x040000dc], eax 	       462	display.c	FUNCTION_1	ELSE_1	IF_3
0x40000dc	    0x488b1d000000	            mov rbx, qword [0x040000e3] 	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000e3	          0x4863f0	                         movsxd rsi, eax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000e6	          0x488b3b	                    mov rdi, qword [rbx]	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000e9	      0xe800000000	                          call 0x40000ee	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000ee	          0x488903	                    mov qword [rbx], rax	       465	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40000f1	    0x488b1d000000	            mov rbx, qword [0x040000f8] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000f8	    0x486335000000	         movsxd rsi, dword [0x040000ff] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x40000ff	          0x488b3b	                    mov rdi, qword [rbx]	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000102	      0xe800000000	                          call 0x4000107	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000107	          0x488903	                    mov qword [rbx], rax	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x400010a	    0x8b0500000000	            mov eax, dword [0x04000110] 	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000110	      0xe94effffff	                           jmp 0x4000063	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000115	           0xf1f00	                         nop dword [rax]	       466	display.c	FUNCTION_1	ELSE_1	IF_3	CALL_4
0x4000118	    0x893d00000000	            mov dword [0x0400011e], edi 	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x400011e	            0x89f8	                            mov eax, edi	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x4000120	            0xebba	                           jmp 0x40000dc	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x4000122	    0x660f1f440000	                    nop word [rax + rax]	       464	display.c	FUNCTION_1	ELSE_1	IF_3	IF_4
0x4000128	            0x39f8	                            cmp eax, edi	       455	display.c	FUNCTION_1	IF_1	IF_2
0x400012a	            0x7d08	                           jge 0x4000134	       455	display.c	FUNCTION_1	IF_1	IF_2
0x400012c	    0x893d00000000	            mov dword [0x04000132], edi 	       456	display.c	FUNCTION_1	IF_1	IF_2
0x4000132	            0x89f8	                            mov eax, edi	       456	display.c	FUNCTION_1	IF_1	IF_2
0x4000134	    0x488b1d000000	            mov rbx, qword [0x0400013b] 	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x400013b	          0x4863f8	                         movsxd rdi, eax	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x400013e	      0xe800000000	                          call 0x4000143	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x4000143	    0x48633d000000	         movsxd rdi, dword [0x0400014a] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x400014a	          0x488903	                    mov qword [rbx], rax	       457	display.c	FUNCTION_1	IF_1	CALL_1
0x400014d	    0x488b1d000000	            mov rbx, qword [0x04000154] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000154	      0xe800000000	                          call 0x4000159	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000159	          0x488903	                    mov qword [rbx], rax	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x400015c	    0x8b0500000000	            mov eax, dword [0x04000162] 	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000162	      0xe9fcfeffff	                           jmp 0x4000063	       458	display.c	FUNCTION_1	IF_1	CALL_2
0x4000167	    0x488b05000000	            mov rax, qword [0x0400016e] 	       478	display.c	FUNCTION_1	IF_5
0x400016e	    0xc74310000100	          mov dword [rbx + 0x10], 0x100 	       478	display.c	FUNCTION_1	IF_5
0x4000175	    0xc74010000100	          mov dword [rax + 0x10], 0x100 	       478	display.c	FUNCTION_1	IF_5
0x400017c	        0x48634310	         movsxd rax, dword [rbx + 0x10] 	       481	display.c	FUNCTION_1	IF_5
0x4000180	    0x488d3c850000	                        lea rdi, [rax*4]	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000188	          0x894320	             mov dword [rbx + 0x20], eax	       481	display.c	FUNCTION_1	IF_5
0x400018b	      0xe800000000	                          call 0x4000190	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000190	        0x48894318	             mov qword [rbx + 0x18], rax	       482	display.c	FUNCTION_1	IF_5	CALL_5
0x4000194	    0x488b1d000000	            mov rbx, qword [0x0400019b] 	       484	display.c	FUNCTION_1	IF_5
0x400019b	        0x48634310	         movsxd rax, dword [rbx + 0x10] 	       484	display.c	FUNCTION_1	IF_5
0x400019f	    0x488d3c850000	                        lea rdi, [rax*4]	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x40001a7	          0x894320	             mov dword [rbx + 0x20], eax	       484	display.c	FUNCTION_1	IF_5
0x40001aa	      0xe800000000	                          call 0x40001af	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x40001af	        0x48894318	             mov qword [rbx + 0x18], rax	       485	display.c	FUNCTION_1	IF_5	CALL_6
0x40001b3	    0x488b1d000000	            mov rbx, qword [0x040001ba] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001ba	        0x48637b10	         movsxd rdi, dword [rbx + 0x10] 	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001be	        0x48c1e702	                              shl rdi, 2	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001c2	      0xe800000000	                          call 0x40001c7	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001c7	        0x48894308	                mov qword [rbx + 8], rax	       488	display.c	FUNCTION_1	IF_5	CALL_7
0x40001cb	    0x488b1d000000	            mov rbx, qword [0x040001d2] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001d2	        0x48637b10	         movsxd rdi, dword [rbx + 0x10] 	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001d6	        0x48c1e702	                              shl rdi, 2	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001da	      0xe800000000	                          call 0x40001df	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001df	    0x488b15000000	            mov rdx, qword [0x040001e6] 	       490	display.c	FUNCTION_1	IF_5
0x40001e6	        0x48894308	                mov qword [rbx + 8], rax	       489	display.c	FUNCTION_1	IF_5	CALL_8
0x40001ea	    0x488b05000000	            mov rax, qword [0x040001f1] 	       490	display.c	FUNCTION_1	IF_5
0x40001f1	        0x488b5208	                mov rdx, qword [rdx + 8]	       490	display.c	FUNCTION_1	IF_5
0x40001f5	        0x488b4008	                mov rax, qword [rax + 8]	       490	display.c	FUNCTION_1	IF_5
0x40001f9	    0xc70200000000	                      mov dword [rdx], 0	       490	display.c	FUNCTION_1	IF_5
0x40001ff	    0xc70000000000	                      mov dword [rax], 0	       490	display.c	FUNCTION_1	IF_5
0x4000205	      0xe9abfeffff	                           jmp 0x40000b5	       490	display.c	FUNCTION_1	IF_5
