bfd_compress_section_contents	FOR,0:SWITCH,0:DO,0:CALL,17:functions,0:ELSE,6:IF,11:WHILE,0	213
0x4000560	            0x4157	                                push r15	        79	compress.c	FUNCTION_2
0x4000562	            0x4156	                                push r14	        79	compress.c	FUNCTION_2
0x4000564	          0x4989d7	                            mov r15, rdx	        79	compress.c	FUNCTION_2
0x4000567	            0x4155	                                push r13	        79	compress.c	FUNCTION_2
0x4000569	            0x4154	                                push r12	        79	compress.c	FUNCTION_2
0x400056b	          0x4989fd	                            mov r13, rdi	        79	compress.c	FUNCTION_2
0x400056e	              0x55	                                push rbp	        79	compress.c	FUNCTION_2
0x400056f	              0x53	                                push rbx	        79	compress.c	FUNCTION_2
0x4000570	          0x4889f5	                            mov rbp, rsi	        79	compress.c	FUNCTION_2
0x4000573	            0x31f6	                            xor esi, esi	        87	compress.c	FUNCTION_2	CALL_1
0x4000575	          0x4889cb	                            mov rbx, rcx	        79	compress.c	FUNCTION_2
0x4000578	    0x4881ecb80000	                           sub rsp, 0xb8	        79	compress.c	FUNCTION_2
0x400057f	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	compress.c	FUNCTION_2
0x4000588	    0x48898424a800	             mov qword [rsp + 0xa8], rax	        79	compress.c	FUNCTION_2
0x4000590	            0x31c0	                            xor eax, eax	        79	compress.c	FUNCTION_2
0x4000592	      0xe800000000	                          call 0x4000597	        87	compress.c	FUNCTION_2	CALL_1
0x4000597	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	        88	compress.c	FUNCTION_2
0x400059c	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	        88	compress.c	FUNCTION_2
0x40005a1	          0x4c63f0	                         movsxd r14, eax	        87	compress.c	FUNCTION_2	CALL_1
0x40005a4	          0x4889ee	                            mov rsi, rbp	        88	compress.c	FUNCTION_2
0x40005a7	          0x4c89ef	                            mov rdi, r13	        88	compress.c	FUNCTION_2
0x40005aa	      0xe800000000	                          call 0x40005af	        88	compress.c	FUNCTION_2
0x40005af	          0x4585f6	                         test r14d, r14d	        96	compress.c	FUNCTION_2	IF_1
0x40005b2	      0xba0c000000	                            mov edx, 0xc	        96	compress.c	FUNCTION_2	IF_1
0x40005b7	        0x4c0f44f2	                          cmove r14, rdx	        96	compress.c	FUNCTION_2	IF_1
0x40005bb	            0x85c0	                           test eax, eax	        98	compress.c	FUNCTION_2	IF_2
0x40005bd	     0xf8405020000	                            je 0x40007c8	        98	compress.c	FUNCTION_2	IF_2
0x40005c3	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005c7	            0x85c0	                           test eax, eax	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005c9	     0xf889d020000	                            js 0x400086c	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005cf	            0x89d9	                            mov ecx, ebx	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x40005d1	            0x29c1	                            sub ecx, eax	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x40005d3	            0x85c0	                           test eax, eax	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x40005d5	        0x894c240c	              mov dword [rsp + 0xc], ecx	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x40005d9	            0x750f	                           jne 0x40005ea	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x40005db	          0x8d43f4	                    lea eax, [rbx - 0xc]	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x40005de	    0xc744241c0c00	            mov dword [rsp + 0x1c], 0xc 	       112	compress.c	FUNCTION_2	IF_2	IF_4
0x40005e6	        0x8944240c	              mov dword [rsp + 0xc], eax	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x40005ea	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       122	compress.c	FUNCTION_2	IF_2
0x40005ee	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	       128	compress.c	FUNCTION_2	IF_5
0x40005f3	        0x428d3430	                    lea esi, [rax + r14]	       122	compress.c	FUNCTION_2	IF_2
0x40005f7	          0x4863f6	                         movsxd rsi, esi	       122	compress.c	FUNCTION_2	IF_2
0x40005fa	          0x4c39e6	                            cmp rsi, r12	       128	compress.c	FUNCTION_2	IF_5
0x40005fd	      0x4889742420	             mov qword [rsp + 0x20], rsi	       122	compress.c	FUNCTION_2	IF_2
0x4000602	     0xf8608010000	                           jbe 0x4000710	       128	compress.c	FUNCTION_2	IF_5
0x4000608	          0x4c89e6	                            mov rsi, r12	       138	compress.c	FUNCTION_2	CALL_5
0x400060b	          0x4c89ef	                            mov rdi, r13	       138	compress.c	FUNCTION_2	CALL_5
0x400060e	      0xe800000000	                          call 0x4000613	       138	compress.c	FUNCTION_2	CALL_5
0x4000613	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x4000616	          0x4989c6	                            mov r14, rax	       138	compress.c	FUNCTION_2	CALL_5
0x4000619	     0xf849e010000	                            je 0x40007bd	       139	compress.c	FUNCTION_2	IF_6
0x400061f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       144	compress.c	FUNCTION_2	IF_7
0x4000624	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	        90	string3.h	FUNCTION_13	CALL_6
0x4000629	      0xb90e000000	                            mov ecx, 0xe	        90	string3.h	FUNCTION_13	CALL_6
0x400062e	      0x486354241c	         movsxd rdx, dword [rsp + 0x1c] 	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x4000633	      0xbe00000000	                              mov esi, 0	        51	compress.c	FUNCTION_1	CALL_3
0x4000638	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_13	CALL_6
0x400063b	        0x48894538	            mov qword [rbp + 0x38], rax 	       144	compress.c	FUNCTION_2	IF_7
0x400063f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_13	CALL_6
0x4000641	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_13	CALL_6
0x4000644	        0x8b44240c	              mov eax, dword [rsp + 0xc]	        46	compress.c	FUNCTION_1
0x4000648	          0x4c01fa	                            add rdx, r15	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x400064b	          0x4889df	                            mov rdi, rbx	        51	compress.c	FUNCTION_1	CALL_3
0x400064e	      0x4889542430	             mov qword [rsp + 0x30], rdx	        47	compress.c	FUNCTION_1
0x4000653	      0xba70000000	                           mov edx, 0x70	        51	compress.c	FUNCTION_1	CALL_3
0x4000658	      0x4489642450	            mov dword [rsp + 0x50], r12d	        48	compress.c	FUNCTION_1
0x400065d	        0x89442438	             mov dword [rsp + 0x38], eax	        46	compress.c	FUNCTION_1
0x4000661	      0xe800000000	                          call 0x4000666	        51	compress.c	FUNCTION_1	CALL_3
0x4000666	            0x89c2	                            mov edx, eax	        51	compress.c	FUNCTION_1	CALL_3
0x4000668	        0x8b442438	            mov eax, dword [rsp + 0x38] 	        52	compress.c	FUNCTION_1	WHILE_1
0x400066c	            0x85c0	                           test eax, eax	        52	compress.c	FUNCTION_1	WHILE_1
0x400066e	            0x7453	                            je 0x40006c3	        52	compress.c	FUNCTION_1	WHILE_1
0x4000670	        0x8b442450	            mov eax, dword [rsp + 0x50] 	        52	compress.c	FUNCTION_1	WHILE_1
0x4000674	            0x85c0	                           test eax, eax	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000676	            0x744b	                            je 0x40006c3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000678	            0x85d2	                           test edx, edx	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400067a	            0x7422	                            je 0x400069e	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400067c	            0xeb45	                           jmp 0x40006c3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400067e	            0x6690	                                     nop	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000680	          0x4889df	                            mov rdi, rbx	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x4000683	      0xe800000000	                          call 0x4000688	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x4000688	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	        52	compress.c	FUNCTION_1	WHILE_1
0x400068c	            0x89c2	                            mov edx, eax	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x400068e	            0x85c9	                           test ecx, ecx	        52	compress.c	FUNCTION_1	WHILE_1
0x4000690	            0x7431	                            je 0x40006c3	        52	compress.c	FUNCTION_1	WHILE_1
0x4000692	            0x85d2	                           test edx, edx	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000694	        0x8b442450	            mov eax, dword [rsp + 0x50] 	        52	compress.c	FUNCTION_1	WHILE_1
0x4000698	            0x7529	                           jne 0x40006c3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400069a	            0x85c0	                           test eax, eax	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400069c	            0x7425	                            je 0x40006c3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400069e	          0x4c89e1	                            mov rcx, r12	        56	compress.c	FUNCTION_1	WHILE_1
0x40006a1	      0xbe04000000	                              mov esi, 4	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40006a6	          0x4889df	                            mov rdi, rbx	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40006a9	          0x4829c1	                            sub rcx, rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40006ac	          0x4889c8	                            mov rax, rcx	        56	compress.c	FUNCTION_1	WHILE_1
0x40006af	          0x4c01f0	                            add rax, r14	        56	compress.c	FUNCTION_1	WHILE_1
0x40006b2	      0x4889442448	             mov qword [rsp + 0x48], rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40006b7	      0xe800000000	                          call 0x40006bc	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40006bc	          0x83f801	                              cmp eax, 1	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x40006bf	            0x89c2	                            mov edx, eax	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40006c1	            0x74bd	                            je 0x4000680	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x40006c3	          0x4889df	                            mov rdi, rbx	        63	compress.c	FUNCTION_1	CALL_6
0x40006c6	        0x8954240c	              mov dword [rsp + 0xc], edx	        63	compress.c	FUNCTION_1	CALL_6
0x40006ca	      0xe800000000	                          call 0x40006cf	        63	compress.c	FUNCTION_1	CALL_6
0x40006cf	        0x8b54240c	              mov edx, dword [rsp + 0xc]	        64	compress.c	FUNCTION_1
0x40006d3	             0x9d0	                             or eax, edx	        64	compress.c	FUNCTION_1
0x40006d5	     0xf85cd000000	                           jne 0x40007a8	        64	compress.c	FUNCTION_1
0x40006db	        0x8b542450	            mov edx, dword [rsp + 0x50] 	        64	compress.c	FUNCTION_1
0x40006df	            0x85d2	                           test edx, edx	        64	compress.c	FUNCTION_1
0x40006e1	     0xf85c1000000	                           jne 0x40007a8	        64	compress.c	FUNCTION_1
0x40006e7	          0x4c89ff	                            mov rdi, r15	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x40006ea	      0xe800000000	                          call 0x40006ef	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x40006ef	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x40006f3	    0x4c89b5b00000	            mov qword [rbp + 0xb0], r14 	       156	compress.c	FUNCTION_2	IF_7	IF_8
0x40006fa	          0x83e0cf	                     and eax, 0xffffffcf	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x40006fd	          0x83c810	                            or eax, 0x10	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000700	          0x884524	               mov byte [rbp + 0x24], al	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000703	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x4000708	            0xeb71	                           jmp 0x400077b	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x400070a	    0x660f1f440000	                    nop word [rax + rax]	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x4000710	          0x4c89ef	                            mov rdi, r13	       138	compress.c	FUNCTION_2	CALL_5
0x4000713	      0xe800000000	                          call 0x4000718	       138	compress.c	FUNCTION_2	CALL_5
0x4000718	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x400071b	          0x4989c4	                            mov r12, rax	       138	compress.c	FUNCTION_2	CALL_5
0x400071e	     0xf8499000000	                            je 0x40007bd	       139	compress.c	FUNCTION_2	IF_6
0x4000724	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       144	compress.c	FUNCTION_2	IF_7
0x4000729	          0x4889ea	                            mov rdx, rbp	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x400072c	          0x4c89e6	                            mov rsi, r12	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x400072f	          0x4c89ef	                            mov rdi, r13	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x4000732	        0x48894538	            mov qword [rbp + 0x38], rax 	       144	compress.c	FUNCTION_2	IF_7
0x4000736	      0xe800000000	                          call 0x400073b	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x400073b	      0x486374241c	         movsxd rsi, dword [rsp + 0x1c] 	        59	string3.h	FUNCTION_11	CALL_3
0x4000740	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	        59	string3.h	FUNCTION_11	CALL_3
0x4000745	          0x4963fe	                        movsxd rdi, r14d	        59	string3.h	FUNCTION_11	CALL_3
0x4000748	          0x4c01e7	                            add rdi, r12	        59	string3.h	FUNCTION_11	CALL_3
0x400074b	          0x4c01fe	                            add rsi, r15	        59	string3.h	FUNCTION_11	CALL_3
0x400074e	      0xe800000000	                          call 0x4000753	        59	string3.h	FUNCTION_11	CALL_3
0x4000753	          0x4c89ff	                            mov rdi, r15	       196	compress.c	FUNCTION_2	CALL_17
0x4000756	      0xe800000000	                          call 0x400075b	       196	compress.c	FUNCTION_2	CALL_17
0x400075b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       198	compress.c	FUNCTION_2
0x4000760	    0x4c89a5b00000	            mov qword [rbp + 0xb0], r12 	       197	compress.c	FUNCTION_2
0x4000767	        0x48894538	            mov qword [rbp + 0x38], rax 	       198	compress.c	FUNCTION_2
0x400076b	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	       199	compress.c	FUNCTION_2
0x400076f	          0x83e0cf	                     and eax, 0xffffffcf	       199	compress.c	FUNCTION_2
0x4000772	          0x83c810	                            or eax, 0x10	       199	compress.c	FUNCTION_2
0x4000775	          0x884524	               mov byte [rbp + 0x24], al	       199	compress.c	FUNCTION_2
0x4000778	          0x4889d8	                            mov rax, rbx	       201	compress.c	FUNCTION_2
0x400077b	    0x488b9c24a800	            mov rbx, qword [rsp + 0xa8] 	       202	compress.c	FUNCTION_2
0x4000783	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       202	compress.c	FUNCTION_2
0x400078c	     0xf85ee000000	                           jne 0x4000880	       202	compress.c	FUNCTION_2
0x4000792	    0x4881c4b80000	                           add rsp, 0xb8	       202	compress.c	FUNCTION_2
0x4000799	              0x5b	                                 pop rbx	       202	compress.c	FUNCTION_2
0x400079a	              0x5d	                                 pop rbp	       202	compress.c	FUNCTION_2
0x400079b	            0x415c	                                 pop r12	       202	compress.c	FUNCTION_2
0x400079d	            0x415d	                                 pop r13	       202	compress.c	FUNCTION_2
0x400079f	            0x415e	                                 pop r14	       202	compress.c	FUNCTION_2
0x40007a1	            0x415f	                                 pop r15	       202	compress.c	FUNCTION_2
0x40007a3	              0xc3	                                     ret	       202	compress.c	FUNCTION_2
0x40007a4	         0xf1f4000	                         nop dword [rax]	       202	compress.c	FUNCTION_2
0x40007a8	      0xbf11000000	                           mov edi, 0x11	       151	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_7
0x40007ad	      0xe800000000	                          call 0x40007b2	       151	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_7
0x40007b2	          0x4c89f6	                            mov rsi, r14	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x40007b5	          0x4c89ef	                            mov rdi, r13	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x40007b8	      0xe800000000	                          call 0x40007bd	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x40007bd	            0x31c0	                            xor eax, eax	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x40007bf	            0xebba	                           jmp 0x400077b	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x40007c1	     0xf1f80000000	                         nop dword [rax]	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x40007c8	          0x4889df	                            mov rdi, rbx	       125	compress.c	FUNCTION_2	CALL_4
0x40007cb	      0xe800000000	                          call 0x40007d0	       125	compress.c	FUNCTION_2	CALL_4
0x40007d0	        0x498d3406	                    lea rsi, [r14 + rax]	       125	compress.c	FUNCTION_2	CALL_4
0x40007d4	          0x4c89ef	                            mov rdi, r13	       138	compress.c	FUNCTION_2	CALL_5
0x40007d7	      0x4889742420	             mov qword [rsp + 0x20], rsi	       125	compress.c	FUNCTION_2	CALL_4
0x40007dc	      0xe800000000	                          call 0x40007e1	       138	compress.c	FUNCTION_2	CALL_5
0x40007e1	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x40007e4	          0x4989c4	                            mov r12, rax	       138	compress.c	FUNCTION_2	CALL_5
0x40007e7	            0x74d4	                            je 0x40007bd	       139	compress.c	FUNCTION_2	IF_6
0x40007e9	        0x4a8d3c30	                    lea rdi, [rax + r14]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40007ed	      0x488d742420	                   lea rsi, [rsp + 0x20]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40007f2	          0x4889d9	                            mov rcx, rbx	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40007f5	          0x4c89fa	                            mov rdx, r15	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40007f8	      0xe800000000	                          call 0x40007fd	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40007fd	            0x85c0	                           test eax, eax	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40007ff	            0x754f	                           jne 0x4000850	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x4000801	      0x4c03742420	             add r14, qword [rsp + 0x20]	       180	compress.c	FUNCTION_2	ELSE_5
0x4000806	          0x4c39f3	                            cmp rbx, r14	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x4000809	      0x4c89742420	             mov qword [rsp + 0x20], r14	       180	compress.c	FUNCTION_2	ELSE_5
0x400080e	            0x7618	                           jbe 0x4000828	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x4000810	          0x4889ea	                            mov rdx, rbp	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000813	          0x4c89e6	                            mov rsi, r12	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000816	          0x4c89ef	                            mov rdi, r13	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000819	      0xe800000000	                          call 0x400081e	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x400081e	      0xe930ffffff	                           jmp 0x4000753	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000823	       0xf1f440000	                   nop dword [rax + rax]	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000828	          0x4c89e6	                            mov rsi, r12	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x400082b	          0x4c89ef	                            mov rdi, r13	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x400082e	      0xe800000000	                          call 0x4000833	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x4000833	    0x4c89bdb00000	            mov qword [rbp + 0xb0], r15 	       190	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x400083a	        0x806524cf	             and byte [rbp + 0x24], 0xcf	       191	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x400083e	          0x4889d8	                            mov rax, rbx	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000841	      0xe935ffffff	                           jmp 0x400077b	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000846	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000850	          0x4c89e6	                            mov rsi, r12	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x4000853	          0x4c89ef	                            mov rdi, r13	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x4000856	      0xe800000000	                          call 0x400085b	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x400085b	      0xbf11000000	                           mov edi, 0x11	       176	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_14
0x4000860	      0xe800000000	                          call 0x4000865	       176	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_14
0x4000865	            0x31c0	                            xor eax, eax	       177	compress.c	FUNCTION_2	ELSE_5	IF_10
0x4000867	      0xe90fffffff	                           jmp 0x400077b	       177	compress.c	FUNCTION_2	ELSE_5	IF_10
0x400086c	      0xba00000000	                              mov edx, 0	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x4000871	      0xbe66000000	                           mov esi, 0x66	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x4000876	      0xbf00000000	                              mov edi, 0	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x400087b	      0xe800000000	                          call 0x4000880	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x4000880	      0xe800000000	                          call 0x4000885	       202	compress.c	FUNCTION_2
bfd_init_section_compress_status	FOR,0:SWITCH,0:DO,0:CALL,4:functions,0:ELSE,0:IF,3:WHILE,0	55
0x4000b70	            0x4155	                                push r13	       542	compress.c	FUNCTION_8
0x4000b72	            0x4154	                                push r12	       542	compress.c	FUNCTION_8
0x4000b74	              0x55	                                push rbp	       542	compress.c	FUNCTION_8
0x4000b75	              0x53	                                push rbx	       542	compress.c	FUNCTION_8
0x4000b76	        0x4883ec08	                              sub rsp, 8	       542	compress.c	FUNCTION_8
0x4000b7a	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       547	compress.c	FUNCTION_8	IF_1
0x4000b7e	          0x83e018	                           and eax, 0x18	       547	compress.c	FUNCTION_8	IF_1
0x4000b81	            0x3c08	                               cmp al, 8	       547	compress.c	FUNCTION_8	IF_1
0x4000b83	            0x7523	                           jne 0x4000ba8	       547	compress.c	FUNCTION_8	IF_1
0x4000b85	        0x4c8b6638	            mov r12, qword [rsi + 0x38] 	       548	compress.c	FUNCTION_8	IF_1
0x4000b89	          0x4889f3	                            mov rbx, rsi	       548	compress.c	FUNCTION_8	IF_1
0x4000b8c	          0x4d85e4	                           test r12, r12	       548	compress.c	FUNCTION_8	IF_1
0x4000b8f	            0x7417	                            je 0x4000ba8	       548	compress.c	FUNCTION_8	IF_1
0x4000b91	      0x48837e4000	               cmp qword [rsi + 0x40], 0	       549	compress.c	FUNCTION_8	IF_1
0x4000b96	            0x7510	                           jne 0x4000ba8	       549	compress.c	FUNCTION_8	IF_1
0x4000b98	    0x4883beb00000	               cmp qword [rsi + 0xb0], 0	       550	compress.c	FUNCTION_8	IF_1
0x4000ba0	            0x741e	                            je 0x4000bc0	       550	compress.c	FUNCTION_8	IF_1
0x4000ba2	    0x660f1f440000	                    nop word [rax + rax]	       550	compress.c	FUNCTION_8	IF_1
0x4000ba8	      0xbf05000000	                              mov edi, 5	       553	compress.c	FUNCTION_8	IF_1	CALL_1
0x4000bad	      0xe800000000	                          call 0x4000bb2	       553	compress.c	FUNCTION_8	IF_1	CALL_1
0x4000bb2	            0x31c0	                            xor eax, eax	       554	compress.c	FUNCTION_8	IF_1
0x4000bb4	        0x4883c408	                              add rsp, 8	       572	compress.c	FUNCTION_8
0x4000bb8	              0x5b	                                 pop rbx	       572	compress.c	FUNCTION_8
0x4000bb9	              0x5d	                                 pop rbp	       572	compress.c	FUNCTION_8
0x4000bba	            0x415c	                                 pop r12	       572	compress.c	FUNCTION_8
0x4000bbc	            0x415d	                                 pop r13	       572	compress.c	FUNCTION_8
0x4000bbe	              0xc3	                                     ret	       572	compress.c	FUNCTION_8
0x4000bbf	              0x90	                                     nop	       572	compress.c	FUNCTION_8
0x4000bc0	        0xf6462430	           test byte [rsi + 0x24], 0x30 	       551	compress.c	FUNCTION_8	IF_1
0x4000bc4	            0x75e2	                           jne 0x4000ba8	       551	compress.c	FUNCTION_8	IF_1
0x4000bc6	          0x4889fd	                            mov rbp, rdi	       551	compress.c	FUNCTION_8	IF_1
0x4000bc9	          0x4c89e7	                            mov rdi, r12	       559	compress.c	FUNCTION_8	CALL_2
0x4000bcc	      0xe800000000	                          call 0x4000bd1	       559	compress.c	FUNCTION_8	CALL_2
0x4000bd1	          0x4885c0	                           test rax, rax	       561	compress.c	FUNCTION_8	IF_2
0x4000bd4	          0x4989c5	                            mov r13, rax	       559	compress.c	FUNCTION_8	CALL_2
0x4000bd7	            0x7417	                            je 0x4000bf0	       561	compress.c	FUNCTION_8	IF_2
0x4000bd9	            0x31c9	                            xor ecx, ecx	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000bdb	          0x4d89e0	                             mov r8, r12	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000bde	          0x4889c2	                            mov rdx, rax	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000be1	          0x4889de	                            mov rsi, rbx	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000be4	          0x4889ef	                            mov rdi, rbp	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000be7	      0xe800000000	                          call 0x4000bec	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000bec	            0x85c0	                           test eax, eax	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000bee	            0x7504	                           jne 0x4000bf4	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000bf0	            0x31c0	                            xor eax, eax	       562	compress.c	FUNCTION_8	IF_2
0x4000bf2	            0xebc0	                           jmp 0x4000bb4	       562	compress.c	FUNCTION_8	IF_2
0x4000bf4	          0x4c89e1	                            mov rcx, r12	       568	compress.c	FUNCTION_8	CALL_4
0x4000bf7	          0x4c89ea	                            mov rdx, r13	       568	compress.c	FUNCTION_8	CALL_4
0x4000bfa	          0x4889de	                            mov rsi, rbx	       568	compress.c	FUNCTION_8	CALL_4
0x4000bfd	          0x4889ef	                            mov rdi, rbp	       568	compress.c	FUNCTION_8	CALL_4
0x4000c00	      0xe85bf9ffff	  call sym.bfd_compress_section_contents	       568	compress.c	FUNCTION_8	CALL_4
0x4000c05	          0x4885c0	                           test rax, rax	       571	compress.c	FUNCTION_8
0x4000c08	           0xf95c0	                                setne al	       571	compress.c	FUNCTION_8
0x4000c0b	           0xfb6c0	                           movzx eax, al	       571	compress.c	FUNCTION_8
0x4000c0e	            0xeba4	                           jmp 0x4000bb4	       571	compress.c	FUNCTION_8
bfd_init_section_decompress_status	FOR,0:SWITCH,0:DO,0:CALL,9:functions,0:ELSE,1:IF,5:WHILE,0	81
0x4000a40	            0x4155	                                push r13	       478	compress.c	FUNCTION_7
0x4000a42	            0x4154	                                push r12	       478	compress.c	FUNCTION_7
0x4000a44	          0x4989fc	                            mov r12, rdi	       478	compress.c	FUNCTION_7
0x4000a47	              0x55	                                push rbp	       478	compress.c	FUNCTION_7
0x4000a48	              0x53	                                push rbx	       478	compress.c	FUNCTION_7
0x4000a49	          0x4889f3	                            mov rbx, rsi	       478	compress.c	FUNCTION_7
0x4000a4c	        0x4883ec38	                           sub rsp, 0x38	       478	compress.c	FUNCTION_7
0x4000a50	    0x64488b042528	                mov rax, qword fs:[0x28]	       478	compress.c	FUNCTION_7
0x4000a59	      0x4889442428	             mov qword [rsp + 0x28], rax	       478	compress.c	FUNCTION_7
0x4000a5e	            0x31c0	                            xor eax, eax	       478	compress.c	FUNCTION_7
0x4000a60	      0xe800000000	                          call 0x4000a65	       484	compress.c	FUNCTION_7	CALL_1
0x4000a65	          0x4863e8	                         movsxd rbp, eax	       484	compress.c	FUNCTION_7	CALL_1
0x4000a68	          0x83fd18	                           cmp ebp, 0x18	       485	compress.c	FUNCTION_7	IF_1
0x4000a6b	     0xf8fe5000000	                            jg 0x4000b56	       485	compress.c	FUNCTION_7	IF_1
0x4000a71	            0x85ed	                           test ebp, ebp	       487	compress.c	FUNCTION_7
0x4000a73	    0x41b80c000000	                            mov r8d, 0xc	       487	compress.c	FUNCTION_7
0x4000a79	        0x4c0f45c5	                          cmovne r8, rbp	       487	compress.c	FUNCTION_7
0x4000a7d	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       490	compress.c	FUNCTION_7	IF_2
0x4000a82	            0x750a	                           jne 0x4000a8e	       490	compress.c	FUNCTION_7	IF_2
0x4000a84	    0x4883bbb00000	               cmp qword [rbx + 0xb0], 0	       491	compress.c	FUNCTION_7	IF_2
0x4000a8c	            0x7432	                            je 0x4000ac0	       491	compress.c	FUNCTION_7	IF_2
0x4000a8e	      0xbf05000000	                              mov edi, 5	       495	compress.c	FUNCTION_7	IF_2	CALL_4
0x4000a93	      0xe800000000	                          call 0x4000a98	       495	compress.c	FUNCTION_7	IF_2	CALL_4
0x4000a98	            0x31c0	                            xor eax, eax	       496	compress.c	FUNCTION_7	IF_2
0x4000a9a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       522	compress.c	FUNCTION_7
0x4000a9f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       522	compress.c	FUNCTION_7
0x4000aa8	     0xf85bc000000	                           jne 0x4000b6a	       522	compress.c	FUNCTION_7
0x4000aae	        0x4883c438	                           add rsp, 0x38	       522	compress.c	FUNCTION_7
0x4000ab2	              0x5b	                                 pop rbx	       522	compress.c	FUNCTION_7
0x4000ab3	              0x5d	                                 pop rbp	       522	compress.c	FUNCTION_7
0x4000ab4	            0x415c	                                 pop r12	       522	compress.c	FUNCTION_7
0x4000ab6	            0x415d	                                 pop r13	       522	compress.c	FUNCTION_7
0x4000ab8	              0xc3	                                     ret	       522	compress.c	FUNCTION_7
0x4000ab9	     0xf1f80000000	                         nop dword [rax]	       522	compress.c	FUNCTION_7
0x4000ac0	        0xf6432430	           test byte [rbx + 0x24], 0x30 	       492	compress.c	FUNCTION_7	IF_2
0x4000ac4	            0x75c8	                           jne 0x4000a8e	       492	compress.c	FUNCTION_7	IF_2
0x4000ac6	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000acb	            0x31c9	                            xor ecx, ecx	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000acd	          0x4889de	                            mov rsi, rbx	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000ad0	          0x4c89e7	                            mov rdi, r12	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000ad3	          0x4c89ea	                            mov rdx, r13	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000ad6	      0xe800000000	                          call 0x4000adb	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000adb	            0x85c0	                           test eax, eax	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000add	            0x74af	                            je 0x4000a8e	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000adf	            0x85ed	                           test ebp, ebp	       499	compress.c	FUNCTION_7	IF_3
0x4000ae1	            0x7555	                           jne 0x4000b38	       499	compress.c	FUNCTION_7	IF_3
0x4000ae3	      0xbf00000000	                              mov edi, 0	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000ae8	      0xb904000000	                              mov ecx, 4	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000aed	          0x4c89ee	                            mov rsi, r13	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000af0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000af2	            0x752c	                           jne 0x4000b20	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000af4	        0x498d7d04	                      lea rdi, [r13 + 4]	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000af8	      0xe800000000	                          call 0x4000afd	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000afd	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       517	compress.c	FUNCTION_7
0x4000b01	        0x48894338	             mov qword [rbx + 0x38], rax	       518	compress.c	FUNCTION_7
0x4000b05	         0xfb64324	           movzx eax, byte [rbx + 0x24] 	       519	compress.c	FUNCTION_7
0x4000b09	        0x48895348	             mov qword [rbx + 0x48], rdx	       517	compress.c	FUNCTION_7
0x4000b0d	          0x83e0cf	                     and eax, 0xffffffcf	       519	compress.c	FUNCTION_7
0x4000b10	          0x83c820	                            or eax, 0x20	       519	compress.c	FUNCTION_7
0x4000b13	          0x884324	               mov byte [rbx + 0x24], al	       519	compress.c	FUNCTION_7
0x4000b16	      0xb801000000	                              mov eax, 1	       521	compress.c	FUNCTION_7
0x4000b1b	      0xe97affffff	                           jmp 0x4000a9a	       521	compress.c	FUNCTION_7
0x4000b20	      0xbf03000000	                              mov edi, 3	       505	compress.c	FUNCTION_7	IF_3	IF_4	CALL_6
0x4000b25	      0xe800000000	                          call 0x4000b2a	       505	compress.c	FUNCTION_7	IF_3	IF_4	CALL_6
0x4000b2a	            0x31c0	                            xor eax, eax	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x4000b2c	      0xe969ffffff	                           jmp 0x4000a9a	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x4000b31	     0xf1f80000000	                         nop dword [rax]	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x4000b38	      0x488d4c2408	                      lea rcx, [rsp + 8]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b3d	          0x4889da	                            mov rdx, rbx	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b40	          0x4c89ee	                            mov rsi, r13	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b43	          0x4c89e7	                            mov rdi, r12	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b46	      0xe800000000	                          call 0x4000b4b	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b4b	            0x85c0	                           test eax, eax	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b4d	            0x74d1	                            je 0x4000b20	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b4f	      0x488b442408	                mov rax, qword [rsp + 8]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b54	            0xeba7	                           jmp 0x4000afd	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000b56	      0xba00000000	                              mov edx, 0	       486	compress.c	FUNCTION_7	CALL_2
0x4000b5b	      0xbee6010000	                          mov esi, 0x1e6	       486	compress.c	FUNCTION_7	CALL_2
0x4000b60	      0xbf00000000	                              mov edi, 0	       486	compress.c	FUNCTION_7	CALL_2
0x4000b65	      0xe800000000	                          call 0x4000b6a	       486	compress.c	FUNCTION_7	CALL_2
0x4000b6a	      0xe800000000	                          call 0x4000b6f	       522	compress.c	FUNCTION_7
bfd_cache_section_contents	FOR,0:SWITCH,0:DO,0:CALL,0:functions,0:ELSE,0:IF,1:WHILE,0	11
0x40003a0	         0xfb64724	           movzx eax, byte [rdi + 0x24] 	       353	compress.c	FUNCTION_4	IF_1
0x40003a4	            0x89c2	                            mov edx, eax	       353	compress.c	FUNCTION_4	IF_1
0x40003a6	          0x83e230	                           and edx, 0x30	       353	compress.c	FUNCTION_4	IF_1
0x40003a9	          0x80fa20	                            cmp dl, 0x20	       353	compress.c	FUNCTION_4	IF_1
0x40003ac	            0x7509	                           jne 0x40003b7	       353	compress.c	FUNCTION_4	IF_1
0x40003ae	          0x83e0cf	                     and eax, 0xffffffcf	       354	compress.c	FUNCTION_4	IF_1
0x40003b1	          0x83c810	                            or eax, 0x10	       354	compress.c	FUNCTION_4	IF_1
0x40003b4	          0x884724	               mov byte [rdi + 0x24], al	       354	compress.c	FUNCTION_4	IF_1
0x40003b7	    0x4889b7b00000	             mov qword [rdi + 0xb0], rsi	       355	compress.c	FUNCTION_4
0x40003be	    0x814f20004000	           or dword [rdi + 0x20], 0x4000	       356	compress.c	FUNCTION_4
0x40003c5	              0xc3	                                     ret	       356	compress.c	FUNCTION_4
bfd_is_section_compressed	FOR,0:SWITCH,0:DO,0:CALL,1:functions,0:ELSE,0:IF,0:WHILE,0	117
0x4000890	            0x4155	                                push r13	       449	compress.c	FUNCTION_6
0x4000892	            0x4154	                                push r12	       449	compress.c	FUNCTION_6
0x4000894	          0x4989fd	                            mov r13, rdi	       449	compress.c	FUNCTION_6
0x4000897	              0x55	                                push rbp	       449	compress.c	FUNCTION_6
0x4000898	              0x53	                                push rbx	       449	compress.c	FUNCTION_6
0x4000899	          0x4889f5	                            mov rbp, rsi	       449	compress.c	FUNCTION_6
0x400089c	        0x4883ec38	                           sub rsp, 0x38	       449	compress.c	FUNCTION_6
0x40008a0	         0xfb65e24	           movzx ebx, byte [rsi + 0x24] 	       385	compress.c	FUNCTION_5
0x40008a4	    0x64488b042528	                mov rax, qword fs:[0x28]	       449	compress.c	FUNCTION_6
0x40008ad	      0x4889442428	             mov qword [rsp + 0x28], rax	       449	compress.c	FUNCTION_6
0x40008b2	            0x31c0	                            xor eax, eax	       449	compress.c	FUNCTION_6
0x40008b4	      0xe800000000	                          call 0x40008b9	       388	compress.c	FUNCTION_5	CALL_1
0x40008b9	          0xc0eb04	                               shr bl, 4	       385	compress.c	FUNCTION_5
0x40008bc	          0x83e303	                              and ebx, 3	       385	compress.c	FUNCTION_5
0x40008bf	          0x83f818	                           cmp eax, 0x18	       389	compress.c	FUNCTION_5	IF_1
0x40008c2	     0xf8f59010000	                            jg 0x4000a21	       389	compress.c	FUNCTION_5	IF_1
0x40008c8	            0x85c0	                           test eax, eax	       391	compress.c	FUNCTION_5
0x40008ca	          0x4189c4	                           mov r12d, eax	       391	compress.c	FUNCTION_5
0x40008cd	     0xf85bd000000	                           jne 0x4000990	       391	compress.c	FUNCTION_5
0x40008d3	        0x806524cf	             and byte [rbp + 0x24], 0xcf	       394	compress.c	FUNCTION_5
0x40008d7	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008dc	            0x31c9	                            xor ecx, ecx	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008de	    0x41b80c000000	                            mov r8d, 0xc	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008e4	          0x4889ee	                            mov rsi, rbp	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008e7	          0x4c89ef	                            mov rdi, r13	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008ea	          0x4c89e2	                            mov rdx, r12	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008ed	      0xe800000000	                          call 0x40008f2	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008f2	            0x85c0	                           test eax, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008f4	     0xf84f6000000	                            je 0x40009f0	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40008fa	      0xb904000000	                              mov ecx, 4	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x40008ff	      0xbf00000000	                              mov edi, 0	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000904	          0x4c89e6	                            mov rsi, r12	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000907	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000909	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400090d	           0xf97c2	                                 seta dl	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000910	           0xf92c0	                                 setb al	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000913	            0x38c2	                              cmp dl, al	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x4000915	      0x48894c2408	                mov qword [rsp + 8], rcx	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400091a	     0xf85d0000000	                           jne 0x40009f0	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x4000920	        0x488b7500	                    mov rsi, qword [rbp]	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000924	      0xbf00000000	                              mov edi, 0	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000929	      0xb90b000000	                            mov ecx, 0xb	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x400092e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000930	            0x7513	                           jne 0x4000945	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000932	       0xfb6442414	           movzx eax, byte [rsp + 0x14] 	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x4000937	    0xf68400000000	            test byte [rax + rax], 0x10 	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x400093f	     0xf85ab000000	                           jne 0x40009f0	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x4000945	      0x498d7c2404	                      lea rdi, [r12 + 4]	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x400094a	          0x83e303	                              and ebx, 3	       430	compress.c	FUNCTION_5
0x400094d	          0xc1e304	                              shl ebx, 4	       430	compress.c	FUNCTION_5
0x4000950	      0xe800000000	                          call 0x4000955	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x4000955	         0xfb65524	           movzx edx, byte [rbp + 0x24] 	       430	compress.c	FUNCTION_5
0x4000959	          0x4889c1	                            mov rcx, rax	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x400095c	          0x83e2cf	                     and edx, 0xffffffcf	       430	compress.c	FUNCTION_5
0x400095f	             0x9d3	                             or ebx, edx	       430	compress.c	FUNCTION_5
0x4000961	          0x885d24	               mov byte [rbp + 0x24], bl	       430	compress.c	FUNCTION_5
0x4000964	          0x4885c9	                           test rcx, rcx	       456	compress.c	FUNCTION_6
0x4000967	      0xb801000000	                              mov eax, 1	       456	compress.c	FUNCTION_6
0x400096c	            0x7502	                           jne 0x4000970	       456	compress.c	FUNCTION_6
0x400096e	            0x31c0	                            xor eax, eax	       456	compress.c	FUNCTION_6
0x4000970	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       457	compress.c	FUNCTION_6
0x4000975	    0x644833142528	                xor rdx, qword fs:[0x28]	       457	compress.c	FUNCTION_6
0x400097e	     0xf85b1000000	                           jne 0x4000a35	       457	compress.c	FUNCTION_6
0x4000984	        0x4883c438	                           add rsp, 0x38	       457	compress.c	FUNCTION_6
0x4000988	              0x5b	                                 pop rbx	       457	compress.c	FUNCTION_6
0x4000989	              0x5d	                                 pop rbp	       457	compress.c	FUNCTION_6
0x400098a	            0x415c	                                 pop r12	       457	compress.c	FUNCTION_6
0x400098c	            0x415d	                                 pop r13	       457	compress.c	FUNCTION_6
0x400098e	              0xc3	                                     ret	       457	compress.c	FUNCTION_6
0x400098f	              0x90	                                     nop	       457	compress.c	FUNCTION_6
0x4000990	        0x806524cf	             and byte [rbp + 0x24], 0xcf	       394	compress.c	FUNCTION_5
0x4000994	      0x488d542410	                   lea rdx, [rsp + 0x10]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000999	            0x31c9	                            xor ecx, ecx	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400099b	          0x4c63c0	                          movsxd r8, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400099e	          0x4889ee	                            mov rsi, rbp	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40009a1	          0x4c89ef	                            mov rdi, r13	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40009a4	      0xe800000000	                          call 0x40009a9	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40009a9	            0x85c0	                           test eax, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40009ab	            0x7443	                            je 0x40009f0	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40009ad	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x40009b1	      0x488d4c2408	                      lea rcx, [rsp + 8]	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x40009b6	      0x488d742410	                   lea rsi, [rsp + 0x10]	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x40009bb	          0x83e303	                              and ebx, 3	       430	compress.c	FUNCTION_5
0x40009be	          0x4889ea	                            mov rdx, rbp	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x40009c1	          0x4c89ef	                            mov rdi, r13	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x40009c4	          0xc1e304	                              shl ebx, 4	       430	compress.c	FUNCTION_5
0x40009c7	      0x4889442408	                mov qword [rsp + 8], rax	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x40009cc	      0xe800000000	                          call 0x40009d1	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x40009d1	            0x85c0	                           test eax, eax	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x40009d3	            0x743b	                            je 0x4000a10	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x40009d5	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	       430	compress.c	FUNCTION_5
0x40009d9	          0x83e0cf	                     and eax, 0xffffffcf	       430	compress.c	FUNCTION_5
0x40009dc	             0x9c3	                             or ebx, eax	       430	compress.c	FUNCTION_5
0x40009de	          0x4585e4	                         test r12d, r12d	       455	compress.c	FUNCTION_6
0x40009e1	          0x885d24	               mov byte [rbp + 0x24], bl	       430	compress.c	FUNCTION_5
0x40009e4	            0x7888	                            js 0x400096e	       455	compress.c	FUNCTION_6
0x40009e6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       455	compress.c	FUNCTION_6
0x40009eb	      0xe974ffffff	                           jmp 0x4000964	       455	compress.c	FUNCTION_6
0x40009f0	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	       430	compress.c	FUNCTION_5
0x40009f4	          0x83e303	                              and ebx, 3	       430	compress.c	FUNCTION_5
0x40009f7	          0xc1e304	                              shl ebx, 4	       430	compress.c	FUNCTION_5
0x40009fa	          0x83e0cf	                     and eax, 0xffffffcf	       430	compress.c	FUNCTION_5
0x40009fd	             0x9c3	                             or ebx, eax	       430	compress.c	FUNCTION_5
0x40009ff	            0x31c0	                            xor eax, eax	       456	compress.c	FUNCTION_6
0x4000a01	          0x885d24	               mov byte [rbp + 0x24], bl	       430	compress.c	FUNCTION_5
0x4000a04	      0xe967ffffff	                           jmp 0x4000970	       430	compress.c	FUNCTION_5
0x4000a09	     0xf1f80000000	                         nop dword [rax]	       430	compress.c	FUNCTION_5
0x4000a10	         0xfb65524	           movzx edx, byte [rbp + 0x24] 	       430	compress.c	FUNCTION_5
0x4000a14	          0x83e2cf	                     and edx, 0xffffffcf	       430	compress.c	FUNCTION_5
0x4000a17	             0x9d3	                             or ebx, edx	       430	compress.c	FUNCTION_5
0x4000a19	          0x885d24	               mov byte [rbp + 0x24], bl	       430	compress.c	FUNCTION_5
0x4000a1c	      0xe94fffffff	                           jmp 0x4000970	       430	compress.c	FUNCTION_5
0x4000a21	      0xba00000000	                              mov edx, 0	       390	compress.c	FUNCTION_5	CALL_2
0x4000a26	      0xbe86010000	                          mov esi, 0x186	       390	compress.c	FUNCTION_5	CALL_2
0x4000a2b	      0xbf00000000	                              mov edi, 0	       390	compress.c	FUNCTION_5	CALL_2
0x4000a30	      0xe800000000	                          call 0x4000a35	       390	compress.c	FUNCTION_5	CALL_2
0x4000a35	      0xe800000000	                          call 0x4000a3a	       457	compress.c	FUNCTION_6
bfd_compress_section	FOR,0:SWITCH,0:DO,0:CALL,2:functions,0:ELSE,0:IF,1:WHILE,0	27
0x4000c10	        0x4883ec08	                              sub rsp, 8	       592	compress.c	FUNCTION_9
0x4000c14	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       596	compress.c	FUNCTION_9	IF_1
0x4000c18	          0x83e018	                           and eax, 0x18	       596	compress.c	FUNCTION_9	IF_1
0x4000c1b	            0x3c10	                            cmp al, 0x10	       596	compress.c	FUNCTION_9	IF_1
0x4000c1d	            0x7518	                           jne 0x4000c37	       596	compress.c	FUNCTION_9	IF_1
0x4000c1f	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	       593	compress.c	FUNCTION_9
0x4000c23	          0x4885c9	                           test rcx, rcx	       598	compress.c	FUNCTION_9	IF_1
0x4000c26	            0x740f	                            je 0x4000c37	       598	compress.c	FUNCTION_9	IF_1
0x4000c28	          0x4885d2	                           test rdx, rdx	       598	compress.c	FUNCTION_9	IF_1
0x4000c2b	            0x740a	                            je 0x4000c37	       598	compress.c	FUNCTION_9	IF_1
0x4000c2d	    0x4883beb00000	               cmp qword [rsi + 0xb0], 0	       599	compress.c	FUNCTION_9	IF_1
0x4000c35	            0x7419	                            je 0x4000c50	       599	compress.c	FUNCTION_9	IF_1
0x4000c37	      0xbf05000000	                              mov edi, 5	       603	compress.c	FUNCTION_9	IF_1	CALL_1
0x4000c3c	      0xe800000000	                          call 0x4000c41	       603	compress.c	FUNCTION_9	IF_1	CALL_1
0x4000c41	            0x31c0	                            xor eax, eax	       604	compress.c	FUNCTION_9	IF_1
0x4000c43	        0x4883c408	                              add rsp, 8	       610	compress.c	FUNCTION_9
0x4000c47	              0xc3	                                     ret	       610	compress.c	FUNCTION_9
0x4000c48	     0xf1f84000000	                   nop dword [rax + rax]	       610	compress.c	FUNCTION_9
0x4000c50	      0x48837e4800	               cmp qword [rsi + 0x48], 0	       600	compress.c	FUNCTION_9	IF_1
0x4000c55	            0x75e0	                           jne 0x4000c37	       600	compress.c	FUNCTION_9	IF_1
0x4000c57	        0xf6462430	           test byte [rsi + 0x24], 0x30 	       601	compress.c	FUNCTION_9	IF_1
0x4000c5b	            0x75da	                           jne 0x4000c37	       601	compress.c	FUNCTION_9	IF_1
0x4000c5d	      0xe8fef8ffff	  call sym.bfd_compress_section_contents	       608	compress.c	FUNCTION_9	CALL_2
0x4000c62	          0x4885c0	                           test rax, rax	       608	compress.c	FUNCTION_9	CALL_2
0x4000c65	           0xf95c0	                                setne al	       608	compress.c	FUNCTION_9	CALL_2
0x4000c68	           0xfb6c0	                           movzx eax, al	       608	compress.c	FUNCTION_9	CALL_2
0x4000c6b	            0xebd6	                           jmp 0x4000c43	       608	compress.c	FUNCTION_9	CALL_2
bfd_get_full_section_contents	FOR,0:SWITCH,1:DO,0:CALL,18:functions,0:ELSE,1:IF,18:WHILE,0	229
0x4000040	            0x4157	                                push r15	       224	compress.c	FUNCTION_3
0x4000042	            0x4156	                                push r14	       224	compress.c	FUNCTION_3
0x4000044	          0x4989ff	                            mov r15, rdi	       224	compress.c	FUNCTION_3
0x4000047	            0x4155	                                push r13	       224	compress.c	FUNCTION_3
0x4000049	            0x4154	                                push r12	       224	compress.c	FUNCTION_3
0x400004b	          0x4989d5	                            mov r13, rdx	       224	compress.c	FUNCTION_3
0x400004e	              0x55	                                push rbp	       224	compress.c	FUNCTION_3
0x400004f	              0x53	                                push rbx	       224	compress.c	FUNCTION_3
0x4000050	          0x4889f3	                            mov rbx, rsi	       224	compress.c	FUNCTION_3
0x4000053	    0x4881ec980000	                           sub rsp, 0x98	       224	compress.c	FUNCTION_3
0x400005a	    0x64488b042528	                mov rax, qword fs:[0x28]	       224	compress.c	FUNCTION_3
0x4000063	    0x488984248800	             mov qword [rsp + 0x88], rax	       224	compress.c	FUNCTION_3
0x400006b	            0x31c0	                            xor eax, eax	       224	compress.c	FUNCTION_3
0x400006d	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       233	compress.c	FUNCTION_3	IF_1
0x4000071	          0x83e018	                           and eax, 0x18	       233	compress.c	FUNCTION_3	IF_1
0x4000074	            0x3c10	                            cmp al, 0x10	       233	compress.c	FUNCTION_3	IF_1
0x4000076	     0xf8494010000	                            je 0x4000210	       233	compress.c	FUNCTION_3	IF_1
0x400007c	        0x488b6e40	            mov rbp, qword [rsi + 0x40] 	       233	compress.c	FUNCTION_3	IF_1
0x4000080	          0x4885ed	                           test rbp, rbp	       233	compress.c	FUNCTION_3	IF_1
0x4000083	     0xf8487010000	                            je 0x4000210	       233	compress.c	FUNCTION_3	IF_1
0x4000089	         0xfb64324	           movzx eax, byte [rbx + 0x24] 	       243	compress.c	FUNCTION_3	SWITCH_1
0x400008d	        0x4d8b6500	                    mov r12, qword [r13]	       226	compress.c	FUNCTION_3
0x4000091	          0xc0e804	                               shr al, 4	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000094	          0x83e003	                              and eax, 3	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000097	            0x3c01	                               cmp al, 1	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000099	     0xf84d1010000	                            je 0x4000270	       243	compress.c	FUNCTION_3	SWITCH_1
0x400009f	     0xf822b020000	                            jb 0x40002d0	       243	compress.c	FUNCTION_3	SWITCH_1
0x40000a5	            0x3c02	                               cmp al, 2	       243	compress.c	FUNCTION_3	SWITCH_1
0x40000a7	     0xf85ab010000	                           jne 0x4000258	       243	compress.c	FUNCTION_3	SWITCH_1
0x40000ad	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x40000b1	      0xe800000000	                          call 0x40000b6	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x40000b6	          0x4885c0	                           test rax, rax	       273	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x40000b9	          0x4989c6	                            mov r14, rax	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x40000bc	     0xf8446020000	                            je 0x4000308	       273	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x40000c2	        0x4c8b4348	              mov r8, qword [rbx + 0x48]	       281	compress.c	FUNCTION_3	SWITCH_1
0x40000c6	        0x806324cf	             and byte [rbx + 0x24], 0xcf	       282	compress.c	FUNCTION_3	SWITCH_1
0x40000ca	            0x31c9	                            xor ecx, ecx	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40000cc	        0x4c8b5340	            mov r10, qword [rbx + 0x40] 	       275	compress.c	FUNCTION_3	SWITCH_1
0x40000d0	        0x4c8b4b38	              mov r9, qword [rbx + 0x38]	       276	compress.c	FUNCTION_3	SWITCH_1
0x40000d4	          0x4889c2	                            mov rdx, rax	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40000d7	    0x48c743400000	               mov qword [rbx + 0x40], 0	       280	compress.c	FUNCTION_3	SWITCH_1
0x40000df	          0x4889de	                            mov rsi, rbx	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40000e2	          0x4c89ff	                            mov rdi, r15	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40000e5	        0x4c894338	              mov qword [rbx + 0x38], r8	       281	compress.c	FUNCTION_3	SWITCH_1
0x40000e9	      0x4c89542408	                mov qword [rsp + 8], r10	       275	compress.c	FUNCTION_3	SWITCH_1
0x40000ee	        0x4c890c24	                     mov qword [rsp], r9	       276	compress.c	FUNCTION_3	SWITCH_1
0x40000f2	      0xe800000000	                          call 0x40000f7	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40000f7	         0xfb65324	           movzx edx, byte [rbx + 0x24] 	       288	compress.c	FUNCTION_3	SWITCH_1
0x40000fb	      0x4c8b542408	                mov r10, qword [rsp + 8]	       286	compress.c	FUNCTION_3	SWITCH_1
0x4000100	        0x4c8b0c24	                     mov r9, qword [rsp]	       287	compress.c	FUNCTION_3	SWITCH_1
0x4000104	        0x4c895340	             mov qword [rbx + 0x40], r10	       286	compress.c	FUNCTION_3	SWITCH_1
0x4000108	          0x83e2cf	                     and edx, 0xffffffcf	       288	compress.c	FUNCTION_3	SWITCH_1
0x400010b	        0x4c894b38	              mov qword [rbx + 0x38], r9	       287	compress.c	FUNCTION_3	SWITCH_1
0x400010f	          0x83ca20	                            or edx, 0x20	       288	compress.c	FUNCTION_3	SWITCH_1
0x4000112	            0x85c0	                           test eax, eax	       289	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x4000114	          0x885324	               mov byte [rbx + 0x24], dl	       288	compress.c	FUNCTION_3	SWITCH_1
0x4000117	     0xf849b010000	                            je 0x40002b8	       289	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x400011d	          0x4d85e4	                           test r12, r12	       292	compress.c	FUNCTION_3	SWITCH_1	IF_10
0x4000120	     0xf845a020000	                            je 0x4000380	       292	compress.c	FUNCTION_3	SWITCH_1	IF_10
0x4000126	          0x4889de	                            mov rsi, rbx	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x4000129	          0x4c89ff	                            mov rdi, r15	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x400012c	      0xe800000000	                          call 0x4000131	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x4000131	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000135	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        90	string3.h	FUNCTION_13	CALL_6
0x400013a	            0x85c0	                           test eax, eax	        90	string3.h	FUNCTION_13	CALL_6
0x400013c	            0x89c2	                            mov edx, eax	        90	string3.h	FUNCTION_13	CALL_6
0x400013e	      0xb80c000000	                            mov eax, 0xc	        90	string3.h	FUNCTION_13	CALL_6
0x4000143	      0xb90e000000	                            mov ecx, 0xe	        90	string3.h	FUNCTION_13	CALL_6
0x4000148	        0x480f44d0	                          cmove rdx, rax	        90	string3.h	FUNCTION_13	CALL_6
0x400014c	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_13	CALL_6
0x400014f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_13	CALL_6
0x4000151	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_13	CALL_6
0x4000154	          0x4829d6	                            sub rsi, rdx	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000157	          0x4c01f2	                            add rdx, r14	        47	compress.c	FUNCTION_1
0x400015a	          0x4889df	                            mov rdi, rbx	        51	compress.c	FUNCTION_1	CALL_3
0x400015d	        0x89742418	             mov dword [rsp + 0x18], esi	        46	compress.c	FUNCTION_1
0x4000161	      0x4889542410	             mov qword [rsp + 0x10], rdx	        47	compress.c	FUNCTION_1
0x4000166	      0xbe00000000	                              mov esi, 0	        51	compress.c	FUNCTION_1	CALL_3
0x400016b	      0xba70000000	                           mov edx, 0x70	        51	compress.c	FUNCTION_1	CALL_3
0x4000170	        0x896c2430	             mov dword [rsp + 0x30], ebp	        48	compress.c	FUNCTION_1
0x4000174	      0xe800000000	                          call 0x4000179	        51	compress.c	FUNCTION_1	CALL_3
0x4000179	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	        52	compress.c	FUNCTION_1	WHILE_1
0x400017d	          0x4189c7	                           mov r15d, eax	        51	compress.c	FUNCTION_1	CALL_3
0x4000180	            0x85c9	                           test ecx, ecx	        52	compress.c	FUNCTION_1	WHILE_1
0x4000182	            0x745a	                            je 0x40001de	        52	compress.c	FUNCTION_1	WHILE_1
0x4000184	          0x4585ff	                         test r15d, r15d	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000187	        0x8b442430	            mov eax, dword [rsp + 0x30] 	        52	compress.c	FUNCTION_1	WHILE_1
0x400018b	            0x7551	                           jne 0x40001de	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400018d	            0x85c0	                           test eax, eax	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400018f	            0x7527	                           jne 0x40001b8	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000191	            0xeb4b	                           jmp 0x40001de	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000193	       0xf1f440000	                   nop dword [rax + rax]	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000198	          0x4889df	                            mov rdi, rbx	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x400019b	      0xe800000000	                          call 0x40001a0	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x40001a0	        0x8b542418	            mov edx, dword [rsp + 0x18] 	        52	compress.c	FUNCTION_1	WHILE_1
0x40001a4	          0x4189c7	                           mov r15d, eax	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x40001a7	            0x85d2	                           test edx, edx	        52	compress.c	FUNCTION_1	WHILE_1
0x40001a9	            0x7433	                            je 0x40001de	        52	compress.c	FUNCTION_1	WHILE_1
0x40001ab	        0x8b442430	            mov eax, dword [rsp + 0x30] 	        52	compress.c	FUNCTION_1	WHILE_1
0x40001af	            0x85c0	                           test eax, eax	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40001b1	            0x742b	                            je 0x40001de	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40001b3	          0x4585ff	                         test r15d, r15d	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40001b6	            0x7526	                           jne 0x40001de	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40001b8	          0x4889e9	                            mov rcx, rbp	        56	compress.c	FUNCTION_1	WHILE_1
0x40001bb	      0xbe04000000	                              mov esi, 4	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40001c0	          0x4889df	                            mov rdi, rbx	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40001c3	          0x4829c1	                            sub rcx, rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40001c6	          0x4889c8	                            mov rax, rcx	        56	compress.c	FUNCTION_1	WHILE_1
0x40001c9	          0x4c01e0	                            add rax, r12	        56	compress.c	FUNCTION_1	WHILE_1
0x40001cc	      0x4889442428	             mov qword [rsp + 0x28], rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40001d1	      0xe800000000	                          call 0x40001d6	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40001d6	          0x83f801	                              cmp eax, 1	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x40001d9	          0x4189c7	                           mov r15d, eax	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40001dc	            0x74ba	                            je 0x4000198	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x40001de	          0x4889df	                            mov rdi, rbx	        63	compress.c	FUNCTION_1	CALL_6
0x40001e1	      0xe800000000	                          call 0x40001e6	        63	compress.c	FUNCTION_1	CALL_6
0x40001e6	          0x4409f8	                            or eax, r15d	        64	compress.c	FUNCTION_1
0x40001e9	     0xf85b1000000	                           jne 0x40002a0	        64	compress.c	FUNCTION_1
0x40001ef	        0x8b442430	            mov eax, dword [rsp + 0x30] 	        64	compress.c	FUNCTION_1
0x40001f3	            0x85c0	                           test eax, eax	        64	compress.c	FUNCTION_1
0x40001f5	     0xf85a5000000	                           jne 0x40002a0	        64	compress.c	FUNCTION_1
0x40001fb	          0x4c89f7	                            mov rdi, r14	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x40001fe	      0xe800000000	                          call 0x4000203	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x4000203	        0x4d896500	                    mov qword [r13], r12	       314	compress.c	FUNCTION_3	SWITCH_1
0x4000207	      0xbb01000000	                              mov ebx, 1	       315	compress.c	FUNCTION_3	SWITCH_1
0x400020c	            0xeb1c	                           jmp 0x400022a	       315	compress.c	FUNCTION_3	SWITCH_1
0x400020e	            0x6690	                                     nop	       315	compress.c	FUNCTION_3	SWITCH_1
0x4000210	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	       236	compress.c	FUNCTION_3	ELSE_1
0x4000214	          0x4885ed	                           test rbp, rbp	       237	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000217	     0xf856cfeffff	                           jne 0x4000089	       237	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400021d	    0x49c745000000	                      mov qword [r13], 0	       239	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000225	      0xbb01000000	                              mov ebx, 1	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400022a	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	       335	compress.c	FUNCTION_3
0x4000232	    0x644833142528	                xor rdx, qword fs:[0x28]	       335	compress.c	FUNCTION_3
0x400023b	            0x89d8	                            mov eax, ebx	       335	compress.c	FUNCTION_3
0x400023d	     0xf8556010000	                           jne 0x4000399	       335	compress.c	FUNCTION_3
0x4000243	    0x4881c4980000	                           add rsp, 0x98	       335	compress.c	FUNCTION_3
0x400024a	              0x5b	                                 pop rbx	       335	compress.c	FUNCTION_3
0x400024b	              0x5d	                                 pop rbp	       335	compress.c	FUNCTION_3
0x400024c	            0x415c	                                 pop r12	       335	compress.c	FUNCTION_3
0x400024e	            0x415d	                                 pop r13	       335	compress.c	FUNCTION_3
0x4000250	            0x415e	                                 pop r14	       335	compress.c	FUNCTION_3
0x4000252	            0x415f	                                 pop r15	       335	compress.c	FUNCTION_3
0x4000254	              0xc3	                                     ret	       335	compress.c	FUNCTION_3
0x4000255	           0xf1f00	                         nop dword [rax]	       335	compress.c	FUNCTION_3
0x4000258	      0xba00000000	                              mov edx, 0	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x400025d	      0xbe4d010000	                          mov esi, 0x14d	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000262	      0xbf00000000	                              mov edi, 0	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000267	      0xe800000000	                          call 0x400026c	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x400026c	         0xf1f4000	                         nop dword [rax]	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000270	    0x488bb3b00000	            mov rsi, qword [rbx + 0xb0] 	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x4000277	          0x4885f6	                           test rsi, rsi	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x400027a	     0xf8488000000	                            je 0x4000308	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x4000280	          0x4d85e4	                           test r12, r12	       320	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x4000283	     0xf84d7000000	                            je 0x4000360	       320	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x4000289	          0x4939f4	                            cmp r12, rsi	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x400028c	      0xbb01000000	                              mov ebx, 1	       330	compress.c	FUNCTION_3	SWITCH_1
0x4000291	            0x7497	                            je 0x400022a	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x4000293	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_10	CALL_3
0x4000296	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_10	CALL_3
0x4000299	      0xe800000000	                          call 0x400029e	        53	string3.h	FUNCTION_10	CALL_3
0x400029e	            0xeb8a	                           jmp 0x400022a	        53	string3.h	FUNCTION_10	CALL_3
0x40002a0	      0xbf11000000	                           mov edi, 0x11	       305	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_12
0x40002a5	      0xe800000000	                          call 0x40002aa	       305	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_12
0x40002aa	        0x4d396500	                    cmp qword [r13], r12	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x40002ae	            0x7408	                            je 0x40002b8	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x40002b0	          0x4c89e7	                            mov rdi, r12	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x40002b3	      0xe800000000	                          call 0x40002b8	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x40002b8	          0x4c89f7	                            mov rdi, r14	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x40002bb	            0x31db	                            xor ebx, ebx	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x40002bd	      0xe800000000	                          call 0x40002c2	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x40002c2	      0xe963ffffff	                           jmp 0x400022a	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x40002c7	    0x660f1f840000	                    nop word [rax + rax]	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x40002d0	          0x4d85e4	                           test r12, r12	       246	compress.c	FUNCTION_3	SWITCH_1	IF_3
0x40002d3	            0x743b	                            je 0x4000310	       246	compress.c	FUNCTION_3	SWITCH_1	IF_3
0x40002d5	            0x31c9	                            xor ecx, ecx	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002d7	          0x4889de	                            mov rsi, rbx	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002da	          0x4989e8	                             mov r8, rbp	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002dd	          0x4c89e2	                            mov rdx, r12	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002e0	          0x4c89ff	                            mov rdi, r15	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002e3	      0xe800000000	                          call 0x40002e8	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002e8	            0x85c0	                           test eax, eax	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002ea	            0x89c3	                            mov ebx, eax	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002ec	     0xf8511ffffff	                           jne 0x4000203	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002f2	        0x4d3b6500	                    cmp r12, qword [r13]	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x40002f6	            0x7410	                            je 0x4000308	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x40002f8	          0x4c89e7	                            mov rdi, r12	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x40002fb	      0xe800000000	                          call 0x4000300	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x4000300	      0xe925ffffff	                           jmp 0x400022a	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x4000305	           0xf1f00	                         nop dword [rax]	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x4000308	            0x31db	                            xor ebx, ebx	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x400030a	      0xe91bffffff	                           jmp 0x400022a	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x400030f	              0x90	                                     nop	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x4000310	          0x4889ef	                            mov rdi, rbp	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000313	      0xe800000000	                          call 0x4000318	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000318	          0x4885c0	                           test rax, rax	       249	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x400031b	          0x4989c4	                            mov r12, rax	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x400031e	            0x75b5	                           jne 0x40002d5	       249	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x4000320	      0xe800000000	                          call 0x4000325	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x4000325	          0x83f806	                              cmp eax, 6	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x4000328	            0x75de	                           jne 0x4000308	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x400032a	      0xba05000000	                              mov edx, 5	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x400032f	      0xbe00000000	                              mov esi, 0	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x4000334	      0xbf00000000	                              mov edi, 0	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x4000339	      0xe800000000	                          call 0x400033e	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x400033e	          0x4889da	                            mov rdx, rbx	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000341	          0x4889c7	                            mov rdi, rax	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000344	          0x4889e9	                            mov rcx, rbp	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000347	          0x4c89fe	                            mov rsi, r15	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400034a	            0x31c0	                            xor eax, eax	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400034c	            0x31db	                            xor ebx, ebx	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x400034e	      0xe800000000	                          call 0x4000353	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000353	      0xe9d2feffff	                           jmp 0x400022a	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000358	     0xf1f84000000	                   nop dword [rax + rax]	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000360	          0x4889ef	                            mov rdi, rbp	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x4000363	      0xe800000000	                          call 0x4000368	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x4000368	          0x4885c0	                           test rax, rax	       323	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x400036b	          0x4989c4	                            mov r12, rax	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x400036e	            0x7498	                            je 0x4000308	       323	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x4000370	        0x49894500	                    mov qword [r13], rax	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x4000374	    0x488bb3b00000	            mov rsi, qword [rbx + 0xb0] 	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x400037b	      0xe909ffffff	                           jmp 0x4000289	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x4000380	          0x4889ef	                            mov rdi, rbp	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x4000383	      0xe800000000	                          call 0x4000388	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x4000388	          0x4885c0	                           test rax, rax	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x400038b	          0x4989c4	                            mov r12, rax	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x400038e	     0xf8424ffffff	                            je 0x40002b8	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x4000394	      0xe98dfdffff	                           jmp 0x4000126	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x4000399	      0xe800000000	                          call 0x400039e	       335	compress.c	FUNCTION_3
