_bfd_unrecognized_reloc	DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0:CALL,5:functions,0	31
0x4002570	            0x4154	                                push r12	      8405	reloc.c	FUNCTION_19
0x4002572	              0x55	                                push rbp	      8405	reloc.c	FUNCTION_19
0x4002573	          0x4989f4	                            mov r12, rsi	      8405	reloc.c	FUNCTION_19
0x4002576	              0x53	                                push rbx	      8405	reloc.c	FUNCTION_19
0x4002577	            0x89d5	                            mov ebp, edx	      8405	reloc.c	FUNCTION_19
0x4002579	          0x4889fb	                            mov rbx, rdi	      8405	reloc.c	FUNCTION_19
0x400257c	      0xba05000000	                              mov edx, 5	      8407	reloc.c	FUNCTION_19	CALL_2
0x4002581	      0xbe00000000	                              mov esi, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x4002586	      0xbf00000000	                              mov edi, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x400258b	      0xe800000000	                          call 0x4002590	      8407	reloc.c	FUNCTION_19	CALL_2
0x4002590	          0x4c89e1	                            mov rcx, r12	      8407	reloc.c	FUNCTION_19	CALL_2
0x4002593	            0x89ea	                            mov edx, ebp	      8407	reloc.c	FUNCTION_19	CALL_2
0x4002595	          0x4889de	                            mov rsi, rbx	      8407	reloc.c	FUNCTION_19	CALL_2
0x4002598	          0x4889c7	                            mov rdi, rax	      8407	reloc.c	FUNCTION_19	CALL_2
0x400259b	            0x31c0	                            xor eax, eax	      8407	reloc.c	FUNCTION_19	CALL_2
0x400259d	      0xe800000000	                          call 0x40025a2	      8407	reloc.c	FUNCTION_19	CALL_2
0x40025a2	      0xba05000000	                              mov edx, 5	      8411	reloc.c	FUNCTION_19	CALL_4
0x40025a7	      0xbe00000000	                              mov esi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x40025ac	      0xbf00000000	                              mov edi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x40025b1	      0xe800000000	                          call 0x40025b6	      8411	reloc.c	FUNCTION_19	CALL_4
0x40025b6	      0xbe00000000	                              mov esi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x40025bb	          0x4889c7	                            mov rdi, rax	      8411	reloc.c	FUNCTION_19	CALL_4
0x40025be	            0x31c0	                            xor eax, eax	      8411	reloc.c	FUNCTION_19	CALL_4
0x40025c0	      0xe800000000	                          call 0x40025c5	      8411	reloc.c	FUNCTION_19	CALL_4
0x40025c5	      0xbf11000000	                           mov edi, 0x11	      8414	reloc.c	FUNCTION_19	CALL_5
0x40025ca	      0xe800000000	                          call 0x40025cf	      8414	reloc.c	FUNCTION_19	CALL_5
0x40025cf	              0x5b	                                 pop rbx	      8416	reloc.c	FUNCTION_19
0x40025d0	            0x31c0	                            xor eax, eax	      8416	reloc.c	FUNCTION_19
0x40025d2	              0x5d	                                 pop rbp	      8416	reloc.c	FUNCTION_19
0x40025d3	            0x415c	                                 pop r12	      8416	reloc.c	FUNCTION_19
0x40025d5	              0xc3	                                     ret	      8416	reloc.c	FUNCTION_19
bfd_generic_relax_section	DO,0:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0:CALL,2:functions,0	26
0x4001780	           0xfb602	                   movzx eax, byte [rdx]	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001783	          0x83e003	                              and eax, 3	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001786	            0x3c02	                               cmp al, 2	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4001788	            0x7416	                            je 0x40017a0	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x400178a	    0xc70100000000	                      mov dword [rcx], 0	      8114	reloc.c	FUNCTION_13
0x4001790	      0xb801000000	                              mov eax, 1	      8116	reloc.c	FUNCTION_13
0x4001795	              0xc3	                                     ret	      8116	reloc.c	FUNCTION_13
0x4001796	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8116	reloc.c	FUNCTION_13
0x40017a0	              0x53	                                push rbx	      8109	reloc.c	FUNCTION_13
0x40017a1	      0xbe00000000	                              mov esi, 0	      8112	reloc.c	FUNCTION_13	CALL_2
0x40017a6	      0xbf00000000	                              mov edi, 0	      8112	reloc.c	FUNCTION_13	CALL_2
0x40017ab	        0x4883ec10	                           sub rsp, 0x10	      8109	reloc.c	FUNCTION_13
0x40017af	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      8111	reloc.c	FUNCTION_13	IF_1
0x40017b3	      0xba05000000	                              mov edx, 5	      8112	reloc.c	FUNCTION_13	CALL_2
0x40017b8	      0x48894c2408	                mov qword [rsp + 8], rcx	      8112	reloc.c	FUNCTION_13	CALL_2
0x40017bd	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      8111	reloc.c	FUNCTION_13	IF_1
0x40017c1	      0xe800000000	                          call 0x40017c6	      8112	reloc.c	FUNCTION_13	CALL_2
0x40017c6	          0x4889c7	                            mov rdi, rax	      8111	reloc.c	FUNCTION_13	IF_1
0x40017c9	            0x31c0	                            xor eax, eax	      8111	reloc.c	FUNCTION_13	IF_1
0x40017cb	            0xffd3	                                call rbx	      8111	reloc.c	FUNCTION_13	IF_1
0x40017cd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8111	reloc.c	FUNCTION_13	IF_1
0x40017d2	      0xb801000000	                              mov eax, 1	      8116	reloc.c	FUNCTION_13
0x40017d7	    0xc70100000000	                      mov dword [rcx], 0	      8114	reloc.c	FUNCTION_13
0x40017dd	        0x4883c410	                           add rsp, 0x10	      8116	reloc.c	FUNCTION_13
0x40017e1	              0x5b	                                 pop rbx	      8116	reloc.c	FUNCTION_13
0x40017e2	              0xc3	                                     ret	      8116	reloc.c	FUNCTION_13
_bfd_final_link_relocate	DO,0:ELSE,0:IF,3:WHILE,0:FOR,0:SWITCH,0:CALL,4:functions,0	280
0x4000d00	            0x4157	                                push r15	      1400	reloc.c	FUNCTION_6
0x4000d02	            0x4156	                                push r14	      1400	reloc.c	FUNCTION_6
0x4000d04	          0x4d89c7	                             mov r15, r8	      1400	reloc.c	FUNCTION_6
0x4000d07	            0x4155	                                push r13	      1400	reloc.c	FUNCTION_6
0x4000d09	            0x4154	                                push r12	      1400	reloc.c	FUNCTION_6
0x4000d0b	          0x4989f4	                            mov r12, rsi	      1400	reloc.c	FUNCTION_6
0x4000d0e	              0x55	                                push rbp	      1400	reloc.c	FUNCTION_6
0x4000d0f	              0x53	                                push rbx	      1400	reloc.c	FUNCTION_6
0x4000d10	          0x4889fd	                            mov rbp, rdi	      1400	reloc.c	FUNCTION_6
0x4000d13	          0x4889f7	                            mov rdi, rsi	      1402	reloc.c	FUNCTION_6	CALL_1
0x4000d16	          0x4989d5	                            mov r13, rdx	      1400	reloc.c	FUNCTION_6
0x4000d19	          0x4989ce	                            mov r14, rcx	      1400	reloc.c	FUNCTION_6
0x4000d1c	        0x4883ec28	                           sub rsp, 0x28	      1400	reloc.c	FUNCTION_6
0x4000d20	          0x4c89cb	                             mov rbx, r9	      1400	reloc.c	FUNCTION_6
0x4000d23	      0xe800000000	                          call 0x4000d28	      1402	reloc.c	FUNCTION_6	CALL_1
0x4000d28	    0x410fb6542444	           movzx edx, byte [r12 + 0x44] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d2e	            0x89c0	                            mov eax, eax	      1402	reloc.c	FUNCTION_6	CALL_1
0x4000d30	        0x490fafc7	                           imul rax, r15	      1402	reloc.c	FUNCTION_6	CALL_1
0x4000d34	          0x83e218	                           and edx, 0x18	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d37	          0x80fa10	                            cmp dl, 0x10	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d3a	            0x7424	                            je 0x4000d60	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d3c	        0x498b5540	            mov rdx, qword [r13 + 0x40] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d40	          0x4885d2	                           test rdx, rdx	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d43	            0x741b	                            je 0x4000d60	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d45	          0x8b7508	                mov esi, dword [rbp + 8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000d48	          0x8d4e02	                      lea ecx, [rsi + 2]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000d4b	          0x83f90a	                            cmp ecx, 0xa	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000d4e	     0xf87d4010000	                            ja 0x4000f28	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000d54	    0xff24cd000000	                       jmp qword [rcx*8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000d5b	       0xf1f440000	                   nop dword [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000d60	        0x498b5538	            mov rdx, qword [r13 + 0x38] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d64	            0xebdf	                           jmp 0x4000d45	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d70	      0xb904000000	                              mov ecx, 4	       568	reloc.c	FUNCTION_3	CALL_1
0x4000d75	          0x4839d0	                            cmp rax, rdx	       574	reloc.c	FUNCTION_3
0x4000d78	            0x7708	                            ja 0x4000d82	       574	reloc.c	FUNCTION_3
0x4000d7a	          0x4801c8	                            add rax, rcx	       574	reloc.c	FUNCTION_3
0x4000d7d	          0x4839c2	                            cmp rdx, rax	       574	reloc.c	FUNCTION_3
0x4000d80	            0x732e	                           jae 0x4000db0	       574	reloc.c	FUNCTION_3
0x4000d82	      0xb804000000	                              mov eax, 4	      1406	reloc.c	FUNCTION_6	IF_1
0x4000d87	        0x4883c428	                           add rsp, 0x28	      1435	reloc.c	FUNCTION_6
0x4000d8b	              0x5b	                                 pop rbx	      1435	reloc.c	FUNCTION_6
0x4000d8c	              0x5d	                                 pop rbp	      1435	reloc.c	FUNCTION_6
0x4000d8d	            0x415c	                                 pop r12	      1435	reloc.c	FUNCTION_6
0x4000d8f	            0x415d	                                 pop r13	      1435	reloc.c	FUNCTION_6
0x4000d91	            0x415e	                                 pop r14	      1435	reloc.c	FUNCTION_6
0x4000d93	            0x415f	                                 pop r15	      1435	reloc.c	FUNCTION_6
0x4000d95	              0xc3	                                     ret	      1435	reloc.c	FUNCTION_6
0x4000d96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1435	reloc.c	FUNCTION_6
0x4000da0	      0xb902000000	                              mov ecx, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000da5	            0xebce	                           jmp 0x4000d75	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000da7	    0x660f1f840000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000db0	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      1424	reloc.c	FUNCTION_6	IF_2
0x4000db3	      0x48035c2460	             add rbx, qword [rsp + 0x60]	      1412	reloc.c	FUNCTION_6
0x4000db8	            0x85c0	                           test eax, eax	      1424	reloc.c	FUNCTION_6	IF_2
0x4000dba	            0x7544	                           jne 0x4000e00	      1424	reloc.c	FUNCTION_6	IF_2
0x4000dbc	          0x4c89e7	                            mov rdi, r12	      1434	reloc.c	FUNCTION_6	CALL_4
0x4000dbf	      0xe800000000	                          call 0x4000dc4	      1434	reloc.c	FUNCTION_6	CALL_4
0x4000dc4	          0x4189c5	                           mov r13d, eax	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000dc7	          0x8b4514	            mov eax, dword [rbp + 0x14] 	      1449	reloc.c	FUNCTION_7
0x4000dca	          0x4889da	                            mov rdx, rbx	      1454	reloc.c	FUNCTION_7	IF_1
0x4000dcd	        0x4d0faffd	                           imul r15, r13	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000dd1	          0x48f7da	                                 neg rdx	      1454	reloc.c	FUNCTION_7	IF_1
0x4000dd4	        0x89442418	             mov dword [rsp + 0x18], eax	      1449	reloc.c	FUNCTION_7
0x4000dd8	          0x8b4508	                mov eax, dword [rbp + 8]	      1453	reloc.c	FUNCTION_7	IF_1
0x4000ddb	        0x4f8d2c3e	                    lea r13, [r14 + r15]	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000ddf	        0x448b7d04	               mov r15d, dword [rbp + 4]	      1448	reloc.c	FUNCTION_7
0x4000de3	            0x85c0	                           test eax, eax	      1454	reloc.c	FUNCTION_7	IF_1
0x4000de5	        0x480f48da	                          cmovs rbx, rdx	      1454	reloc.c	FUNCTION_7	IF_1
0x4000de9	          0x83c002	                              add eax, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000dec	          0x83f80a	                            cmp eax, 0xa	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000def	     0xf8733010000	                            ja 0x4000f28	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000df5	    0xff24c5000000	                       jmp qword [rax*8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000dfc	         0xf1f4000	                         nop dword [rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e00	        0x498b4568	            mov rax, qword [r13 + 0x68] 	      1426	reloc.c	FUNCTION_6	IF_2
0x4000e04	        0x492b5d60	             sub rbx, qword [r13 + 0x60]	      1426	reloc.c	FUNCTION_6	IF_2
0x4000e08	          0x8b7548	            mov esi, dword [rbp + 0x48] 	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000e0b	        0x482b5828	             sub rbx, qword [rax + 0x28]	      1426	reloc.c	FUNCTION_6	IF_2
0x4000e0f	          0x4889d8	                            mov rax, rbx	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000e12	          0x4c29f8	                            sub rax, r15	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000e15	            0x85f6	                           test esi, esi	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000e17	        0x480f45d8	                         cmovne rbx, rax	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000e1b	            0xeb9f	                           jmp 0x4000dbc	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000e1d	           0xf1f00	                         nop dword [rax]	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000e20	      0xb901000000	                              mov ecx, 1	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e25	      0xe94bffffff	                           jmp 0x4000d75	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e2a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e30	      0xb903000000	                              mov ecx, 3	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e35	      0xe93bffffff	                           jmp 0x4000d75	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e3a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e40	            0x31c9	                            xor ecx, ecx	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e42	      0xe92effffff	                           jmp 0x4000d75	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e47	    0x660f1f840000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e50	      0xb908000000	                              mov ecx, 8	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e55	      0xe91bffffff	                           jmp 0x4000d75	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e5a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e60	      0xb910000000	                           mov ecx, 0x10	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e65	      0xe90bffffff	                           jmp 0x4000d75	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e6a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000e70	      0x498b442408	                mov rax, qword [r12 + 8]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000e75	          0x4c89ef	                            mov rdi, r13	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000e78	          0xff5038	                 call qword [rax + 0x38]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000e7b	    0x41b804000000	                              mov r8d, 4	       437	reloc.c	FUNCTION_1	SWITCH_1
0x4000e81	          0x4889c2	                            mov rdx, rax	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000e84	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	      1487	reloc.c	FUNCTION_7	IF_2
0x4000e87	            0x85c9	                           test ecx, ecx	      1487	reloc.c	FUNCTION_7	IF_2
0x4000e89	     0xf85b1000000	                           jne 0x4000f40	      1487	reloc.c	FUNCTION_7	IF_2
0x4000e8f	          0x4889d0	                            mov rax, rdx	      1487	reloc.c	FUNCTION_7	IF_2
0x4000e92	        0x48234538	             and rax, qword [rbp + 0x38]	      1487	reloc.c	FUNCTION_7	IF_2
0x4000e96	    0x41be02000000	                             mov r14d, 2	      1486	reloc.c	FUNCTION_7
0x4000e9c	          0x4489f9	                           mov ecx, r15d	      1578	reloc.c	FUNCTION_7
0x4000e9f	          0x48d3eb	                             shr rbx, cl	      1578	reloc.c	FUNCTION_7
0x4000ea2	       0xfb64c2418	           movzx ecx, byte [rsp + 0x18] 	      1578	reloc.c	FUNCTION_7
0x4000ea7	          0x48d3e3	                             shl rbx, cl	      1578	reloc.c	FUNCTION_7
0x4000eaa	        0x488d3c03	                    lea rdi, [rbx + rax]	      1578	reloc.c	FUNCTION_7
0x4000eae	          0x4831d7	                            xor rdi, rdx	      1578	reloc.c	FUNCTION_7
0x4000eb1	        0x48237d40	             and rdi, qword [rbp + 0x40]	      1578	reloc.c	FUNCTION_7
0x4000eb5	          0x4831d7	                            xor rdi, rdx	      1582	reloc.c	FUNCTION_7
0x4000eb8	        0x4183f802	                              cmp r8d, 2	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ebc	     0xf8426020000	                            je 0x40010e8	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ec2	     0xf8608020000	                           jbe 0x40010d0	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ec8	        0x4183f804	                              cmp r8d, 4	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ecc	     0xf842e010000	                            je 0x4001000	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ed2	        0x4183f808	                              cmp r8d, 8	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ed6	     0xf8524020000	                           jne 0x4001100	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000edc	      0x498b442408	                mov rax, qword [r12 + 8]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000ee1	          0x4c89ee	                            mov rsi, r13	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000ee4	          0xff5030	                 call qword [rax + 0x30]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000ee7	          0x4489f0	                           mov eax, r14d	      1608	reloc.c	FUNCTION_7
0x4000eea	      0xe998feffff	                           jmp 0x4000d87	      1608	reloc.c	FUNCTION_7
0x4000eef	              0x90	                                     nop	      1608	reloc.c	FUNCTION_7
0x4000ef0	      0x498b442408	                mov rax, qword [r12 + 8]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000ef5	          0x4c89ef	                            mov rdi, r13	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000ef8	          0xff5050	                 call qword [rax + 0x50]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000efb	    0x41b802000000	                              mov r8d, 2	       436	reloc.c	FUNCTION_1	SWITCH_1
0x4000f01	          0x4889c2	                            mov rdx, rax	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000f04	      0xe97bffffff	                           jmp 0x4000e84	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000f09	     0xf1f80000000	                         nop dword [rax]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000f10	      0xba00000000	                              mov edx, 0	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000f15	      0xbeb5050000	                          mov esi, 0x5b5	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000f1a	      0xbf00000000	                              mov edi, 0	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000f1f	      0xe800000000	                          call 0x4000f24	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000f24	         0xf1f4000	                         nop dword [rax]	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000f28	      0xba00000000	                              mov edx, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000f2d	      0xbebb010000	                          mov esi, 0x1bb	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000f32	      0xbf00000000	                              mov edi, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000f37	      0xe800000000	                          call 0x4000f3c	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000f3c	         0xf1f4000	                         nop dword [rax]	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000f40	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1496	reloc.c	FUNCTION_7	IF_2
0x4000f43	    0x41b901000000	                              mov r9d, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x4000f49	          0x4c89e7	                            mov rdi, r12	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f4c	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f51	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f56	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1496	reloc.c	FUNCTION_7	IF_2
0x4000f5b	          0x8d48ff	                      lea ecx, [rax - 1]	      1496	reloc.c	FUNCTION_7	IF_2
0x4000f5e	          0x4c89c8	                             mov rax, r9	      1496	reloc.c	FUNCTION_7	IF_2
0x4000f61	          0x48d3e0	                             shl rax, cl	      1496	reloc.c	FUNCTION_7	IF_2
0x4000f64	      0x4c8d7400fe	                lea r14, [rax + rax - 2]	      1496	reloc.c	FUNCTION_7	IF_2
0x4000f69	        0x4983ce01	                               or r14, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x4000f6d	          0x4c89f0	                            mov rax, r14	      1497	reloc.c	FUNCTION_7	IF_2
0x4000f70	          0x48f7d0	                                 not rax	      1497	reloc.c	FUNCTION_7	IF_2
0x4000f73	        0x48890424	                    mov qword [rsp], rax	      1497	reloc.c	FUNCTION_7	IF_2
0x4000f77	      0xe800000000	                          call 0x4000f7c	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f7c	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f81	          0x8d48ff	                      lea ecx, [rax - 1]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f84	          0x4c89f7	                            mov rdi, r14	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f87	        0x4c8b5538	            mov r10, qword [rbp + 0x38] 	      1501	reloc.c	FUNCTION_7	IF_2
0x4000f8b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1501	reloc.c	FUNCTION_7	IF_2
0x4000f90	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000f95	          0x49d3e1	                              shl r9, cl	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f98	          0x4489f9	                           mov ecx, r15d	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000f9b	      0x4b8d4409fe	                  lea rax, [r9 + r9 - 2]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000fa0	          0x48d3e7	                             shl rdi, cl	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000fa3	        0x4883cf01	                               or rdi, 1	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000fa7	          0x4809c7	                             or rdi, rax	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000faa	          0x4c89d0	                            mov rax, r10	      1501	reloc.c	FUNCTION_7	IF_2
0x4000fad	          0x4989f9	                             mov r9, rdi	      1500	reloc.c	FUNCTION_7	IF_2
0x4000fb0	          0x4821d0	                            and rax, rdx	      1501	reloc.c	FUNCTION_7	IF_2
0x4000fb3	          0x4989fb	                            mov r11, rdi	      1501	reloc.c	FUNCTION_7	IF_2
0x4000fb6	          0x4921d9	                             and r9, rbx	      1500	reloc.c	FUNCTION_7	IF_2
0x4000fb9	          0x4921c3	                            and r11, rax	      1501	reloc.c	FUNCTION_7	IF_2
0x4000fbc	          0x49d3e9	                              shr r9, cl	      1500	reloc.c	FUNCTION_7	IF_2
0x4000fbf	       0xfb64c2418	           movzx ecx, byte [rsp + 0x18] 	      1501	reloc.c	FUNCTION_7	IF_2
0x4000fc4	          0x49d3eb	                             shr r11, cl	      1501	reloc.c	FUNCTION_7	IF_2
0x4000fc7	          0x4489f9	                           mov ecx, r15d	      1502	reloc.c	FUNCTION_7	IF_2
0x4000fca	          0x48d3ef	                             shr rdi, cl	      1502	reloc.c	FUNCTION_7	IF_2
0x4000fcd	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000fd0	          0x83f902	                              cmp ecx, 2	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000fd3	     0xf8487000000	                            je 0x4001060	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000fd9	          0x83f903	                              cmp ecx, 3	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000fdc	     0xf8436010000	                            je 0x4001118	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000fe2	          0x83f901	                              cmp ecx, 1	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000fe5	     0xf8451010000	                            je 0x400113c	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000feb	      0xba00000000	                              mov edx, 0	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000ff0	      0xbe25060000	                          mov esi, 0x625	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000ff5	      0xbf00000000	                              mov edi, 0	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000ffa	      0xe800000000	                          call 0x4000fff	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000fff	              0x90	                                     nop	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4001000	      0x498b442408	                mov rax, qword [r12 + 8]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4001005	          0x4c89ee	                            mov rsi, r13	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4001008	          0xff5048	                 call qword [rax + 0x48]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x400100b	          0x4489f0	                           mov eax, r14d	      1608	reloc.c	FUNCTION_7
0x400100e	      0xe974fdffff	                           jmp 0x4000d87	      1608	reloc.c	FUNCTION_7
0x4001013	       0xf1f440000	                   nop dword [rax + rax]	      1608	reloc.c	FUNCTION_7
0x4001018	      0x410fb65500	                   movzx edx, byte [r13]	      1465	reloc.c	FUNCTION_7	SWITCH_1	CALL_3
0x400101d	    0x41b801000000	                              mov r8d, 1	       435	reloc.c	FUNCTION_1	SWITCH_1
0x4001023	      0xe95cfeffff	                           jmp 0x4000e84	       435	reloc.c	FUNCTION_1	SWITCH_1
0x4001028	     0xf1f84000000	                   nop dword [rax + rax]	       435	reloc.c	FUNCTION_1	SWITCH_1
0x4001030	      0x498b442408	                mov rax, qword [r12 + 8]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4001035	          0x4c89ef	                            mov rdi, r13	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4001038	          0xff5020	                 call qword [rax + 0x20]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x400103b	    0x41b808000000	                              mov r8d, 8	       439	reloc.c	FUNCTION_1	SWITCH_1
0x4001041	          0x4889c2	                            mov rdx, rax	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4001044	      0xe93bfeffff	                           jmp 0x4000e84	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4001049	     0xf1f80000000	                         nop dword [rax]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4001050	      0xb802000000	                              mov eax, 2	      1463	reloc.c	FUNCTION_7	SWITCH_1
0x4001055	      0xe92dfdffff	                           jmp 0x4000d87	      1463	reloc.c	FUNCTION_7	SWITCH_1
0x400105a	    0x660f1f440000	                    nop word [rax + rax]	      1463	reloc.c	FUNCTION_7	SWITCH_1
0x4001060	          0x49d1ee	                              shr r14, 1	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001063	          0x49f7d6	                                 not r14	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001066	        0x4c893424	                    mov qword [rsp], r14	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400106a	          0x4c89f1	                            mov rcx, r14	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400106d	          0x4889ce	                            mov rsi, rcx	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4001070	    0x41be02000000	                             mov r14d, 2	      1486	reloc.c	FUNCTION_7
0x4001076	          0x4c21ce	                             and rsi, r9	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4001079	            0x7411	                            je 0x400108c	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x400107b	          0x4821f9	                            and rcx, rdi	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x400107e	          0x4531f6	                          xor r14d, r14d	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4001081	          0x4839ce	                            cmp rsi, rcx	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4001084	        0x410f95c6	                              setne r14b	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4001088	        0x4183c602	                             add r14d, 2	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x400108c	          0x4c89d1	                            mov rcx, r10	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400108f	          0x48f7d1	                                 not rcx	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001092	          0x48d1e9	                              shr rcx, 1	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001095	          0x4921ca	                            and r10, rcx	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4001098	       0xfb64c2418	           movzx ecx, byte [rsp + 0x18] 	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x400109d	          0x49d3ea	                             shr r10, cl	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40010a0	          0x4c89c9	                             mov rcx, r9	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010a3	          0x4d31d3	                            xor r11, r10	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40010a6	          0x4d29d3	                            sub r11, r10	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40010a9	          0x4c31d9	                            xor rcx, r11	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010ac	          0x4d01cb	                             add r11, r9	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010af	          0x48f7d1	                                 not rcx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010b2	          0x4d31d9	                             xor r9, r11	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010b5	          0x4921c9	                             and r9, rcx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010b8	      0xb903000000	                              mov ecx, 3	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010bd	          0x4c21cf	                             and rdi, r9	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010c0	        0x48853c24	                   test qword [rsp], rdi	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010c4	        0x440f45f1	                        cmovne r14d, ecx	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010c8	      0xe9cffdffff	                           jmp 0x4000e9c	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010cd	           0xf1f00	                         nop dword [rax]	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x40010d0	        0x4183f801	                              cmp r8d, 1	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x40010d4	            0x752a	                           jne 0x4001100	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x40010d6	        0x41887d00	                     mov byte [r13], dil	      1591	reloc.c	FUNCTION_7	SWITCH_3	CALL_11
0x40010da	          0x4489f0	                           mov eax, r14d	      1608	reloc.c	FUNCTION_7
0x40010dd	      0xe9a5fcffff	                           jmp 0x4000d87	      1608	reloc.c	FUNCTION_7
0x40010e2	    0x660f1f440000	                    nop word [rax + rax]	      1608	reloc.c	FUNCTION_7
0x40010e8	      0x498b442408	                mov rax, qword [r12 + 8]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x40010ed	          0x4c89ee	                            mov rsi, r13	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x40010f0	          0xff5060	                 call qword [rax + 0x60]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x40010f3	          0x4489f0	                           mov eax, r14d	      1608	reloc.c	FUNCTION_7
0x40010f6	      0xe98cfcffff	                           jmp 0x4000d87	      1608	reloc.c	FUNCTION_7
0x40010fb	       0xf1f440000	                   nop dword [rax + rax]	      1608	reloc.c	FUNCTION_7
0x4001100	      0xba00000000	                              mov edx, 0	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4001105	      0xbe35060000	                          mov esi, 0x635	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x400110a	      0xbf00000000	                              mov edi, 0	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x400110f	      0xe800000000	                          call 0x4001114	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4001114	         0xf1f4000	                         nop dword [rax]	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4001118	        0x4f8d3419	                     lea r14, [r9 + r11]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x400111c	          0x4d09cb	                              or r11, r9	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x400111f	          0x4c21f7	                            and rdi, r14	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4001122	          0x4c09df	                             or rdi, r11	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4001125	          0x4989fe	                            mov r14, rdi	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4001128	        0x4c233424	                    and r14, qword [rsp]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x400112c	        0x4983fe01	                              cmp r14, 1	      1486	reloc.c	FUNCTION_7
0x4001130	          0x4519f6	                          sbb r14d, r14d	      1486	reloc.c	FUNCTION_7
0x4001133	        0x4183c603	                             add r14d, 3	      1486	reloc.c	FUNCTION_7
0x4001137	      0xe960fdffff	                           jmp 0x4000e9c	      1486	reloc.c	FUNCTION_7
0x400113c	        0x488b0c24	                    mov rcx, qword [rsp]	      1486	reloc.c	FUNCTION_7
0x4001140	      0xe928ffffff	                           jmp 0x400106d	      1486	reloc.c	FUNCTION_7
bfd_default_reloc_type_lookup	DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,2:CALL,5:functions,0	39
0x40016c0	        0x4883ec08	                              sub rsp, 8	      8042	reloc.c	FUNCTION_11
0x40016c4	    0x81fe2b020000	                          cmp esi, 0x22b	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x40016ca	            0x7574	                           jne 0x4001740	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x40016cc	      0xe800000000	                          call 0x40016d1	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016d1	            0x89c2	                            mov edx, eax	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016d3	      0xb800000000	                              mov eax, 0	      8054	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x40016d8	          0x83fa20	                           cmp edx, 0x20	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016db	            0x741b	                            je 0x40016f8	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016dd	          0x83fa40	                           cmp edx, 0x40	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016e0	            0x741e	                            je 0x4001700	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016e2	          0x83fa10	                           cmp edx, 0x10	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016e5	            0x7439	                            je 0x4001720	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x40016e7	      0xbe7b1f0000	                         mov esi, 0x1f7b	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x40016ec	      0xbf00000000	                              mov edi, 0	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x40016f1	      0xe800000000	                          call 0x40016f6	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x40016f6	            0x31c0	                            xor eax, eax	      8065	reloc.c	FUNCTION_11
0x40016f8	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x40016fc	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
0x40016fd	           0xf1f00	                         nop dword [rax]	      8066	reloc.c	FUNCTION_11
0x4001700	      0xbe731f0000	                         mov esi, 0x1f73	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x4001705	      0xbf00000000	                              mov edi, 0	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x400170a	      0xe800000000	                          call 0x400170f	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x400170f	            0x31c0	                            xor eax, eax	      8065	reloc.c	FUNCTION_11
0x4001711	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x4001715	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
0x4001716	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8066	reloc.c	FUNCTION_11
0x4001720	      0xbe781f0000	                         mov esi, 0x1f78	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x4001725	      0xbf00000000	                              mov edi, 0	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x400172a	      0xe800000000	                          call 0x400172f	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x400172f	            0x31c0	                            xor eax, eax	      8065	reloc.c	FUNCTION_11
0x4001731	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x4001735	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
0x4001736	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8066	reloc.c	FUNCTION_11
0x4001740	      0xbe7f1f0000	                         mov esi, 0x1f7f	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x4001745	      0xbf00000000	                              mov edi, 0	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x400174a	      0xe800000000	                          call 0x400174f	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x400174f	            0x31c0	                            xor eax, eax	      8065	reloc.c	FUNCTION_11
0x4001751	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x4001755	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
bfd_reloc_name_lookup	DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0:CALL,1:functions,0	3
0x40016b0	        0x488b4708	                mov rax, qword [rdi + 8]	      8021	reloc.c	FUNCTION_10	CALL_1
0x40016b4	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      8021	reloc.c	FUNCTION_10	CALL_1
0x40016bb	            0xffe0	                                 jmp rax	      8021	reloc.c	FUNCTION_10	CALL_1
_bfd_nodynamic_canonicalize_dynamic_reloc	DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0:CALL,1:functions,0	1
0x4002600	      0xe900000000	                         jmp str.reloc.c	      8438	reloc.c	FUNCTION_22	CALL_1
_bfd_norelocs_bfd_reloc_type_lookup	DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0:CALL,1:functions,0	1
0x40025e0	      0xe900000000	                           jmp 0x40025e5	      8423	reloc.c	FUNCTION_20	CALL_1
bfd_get_reloc_code_name	DO,0:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0:CALL,0:functions,0	8
0x4001760	    0x81ffcd080000	                          cmp edi, 0x8cd	      8083	reloc.c	FUNCTION_12	IF_1
0x4001766	            0x7710	                            ja 0x4001778	      8083	reloc.c	FUNCTION_12	IF_1
0x4001768	            0x89ff	                            mov edi, edi	      8085	reloc.c	FUNCTION_12
0x400176a	    0x488b04fd0000	                  mov rax, qword [rdi*8]	      8085	reloc.c	FUNCTION_12
0x4001772	              0xc3	                                     ret	      8085	reloc.c	FUNCTION_12
0x4001773	       0xf1f440000	                   nop dword [rax + rax]	      8085	reloc.c	FUNCTION_12
0x4001778	            0x31c0	                            xor eax, eax	      8084	reloc.c	FUNCTION_12	IF_1
0x400177a	              0xc3	                                     ret	      8086	reloc.c	FUNCTION_12
_bfd_generic_set_reloc	DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0:CALL,0:functions,0	3
0x4002560	    0x488996800000	             mov qword [rsi + 0x80], rdx	      8383	reloc.c	FUNCTION_18
0x4002567	    0x898e88000000	             mov dword [rsi + 0x88], ecx	      8384	reloc.c	FUNCTION_18
0x400256d	              0xc3	                                     ret	      8384	reloc.c	FUNCTION_18
bfd_install_relocation	DO,0:ELSE,4:IF,12:WHILE,0:FOR,0:SWITCH,1:CALL,20:functions,0	335
0x4000840	            0x4157	                                push r15	      1022	reloc.c	FUNCTION_5
0x4000842	            0x4156	                                push r14	      1022	reloc.c	FUNCTION_5
0x4000844	          0x4989ce	                            mov r14, rcx	      1022	reloc.c	FUNCTION_5
0x4000847	            0x4155	                                push r13	      1022	reloc.c	FUNCTION_5
0x4000849	            0x4154	                                push r12	      1022	reloc.c	FUNCTION_5
0x400084b	          0x4d89c5	                             mov r13, r8	      1022	reloc.c	FUNCTION_5
0x400084e	              0x55	                                push rbp	      1022	reloc.c	FUNCTION_5
0x400084f	              0x53	                                push rbx	      1022	reloc.c	FUNCTION_5
0x4000850	          0x4989fc	                            mov r12, rdi	      1022	reloc.c	FUNCTION_5
0x4000853	          0x4889f3	                            mov rbx, rsi	      1022	reloc.c	FUNCTION_5
0x4000856	        0x4883ec18	                           sub rsp, 0x18	      1022	reloc.c	FUNCTION_5
0x400085a	        0x488b6e18	            mov rbp, qword [rsi + 0x18] 	      1027	reloc.c	FUNCTION_5
0x400085e	          0x488b06	                    mov rax, qword [rsi]	      1032	reloc.c	FUNCTION_5
0x4000861	        0x48891424	                    mov qword [rsp], rdx	      1022	reloc.c	FUNCTION_5
0x4000865	          0x4885ed	                           test rbp, rbp	      1037	reloc.c	FUNCTION_5	IF_1
0x4000868	          0x4c8b38	                    mov r15, qword [rax]	      1032	reloc.c	FUNCTION_5
0x400086b	            0x743b	                            je 0x40008a8	      1037	reloc.c	FUNCTION_5	IF_1
0x400086d	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1037	reloc.c	FUNCTION_5	IF_1
0x4000871	          0x4885c0	                           test rax, rax	      1037	reloc.c	FUNCTION_5	IF_1
0x4000874	            0x7432	                            je 0x40008a8	      1037	reloc.c	FUNCTION_5	IF_1
0x4000876	        0x4883ec08	                              sub rsp, 8	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400087a	          0x4889d1	                            mov rcx, rdx	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400087d	          0x4c89fa	                            mov rdx, r15	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000880	            0x4151	                                 push r9	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000882	          0x4c29f1	                            sub rcx, r14	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000885	          0x4989f9	                             mov r9, rdi	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000888	            0xffd0	                                call rax	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400088a	          0x83f805	                              cmp eax, 5	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x400088d	            0x4158	                                  pop r8	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x400088f	            0x4159	                                  pop r9	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000891	            0x7415	                            je 0x40008a8	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000893	        0x4883c418	                           add rsp, 0x18	      1368	reloc.c	FUNCTION_5
0x4000897	              0x5b	                                 pop rbx	      1368	reloc.c	FUNCTION_5
0x4000898	              0x5d	                                 pop rbp	      1368	reloc.c	FUNCTION_5
0x4000899	            0x415c	                                 pop r12	      1368	reloc.c	FUNCTION_5
0x400089b	            0x415d	                                 pop r13	      1368	reloc.c	FUNCTION_5
0x400089d	            0x415e	                                 pop r14	      1368	reloc.c	FUNCTION_5
0x400089f	            0x415f	                                 pop r15	      1368	reloc.c	FUNCTION_5
0x40008a1	              0xc3	                                     ret	      1368	reloc.c	FUNCTION_5
0x40008a2	    0x660f1f440000	                    nop word [rax + rax]	      1368	reloc.c	FUNCTION_5
0x40008a8	    0x49817f200000	               cmp qword [r15 + 0x20], 0	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x40008b0	            0x744e	                            je 0x4000900	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x40008b2	        0x488b4308	                mov rax, qword [rbx + 8]	      1066	reloc.c	FUNCTION_5	CALL_3
0x40008b6	          0x4c89e7	                            mov rdi, r12	      1066	reloc.c	FUNCTION_5	CALL_3
0x40008b9	      0x4889442408	                mov qword [rsp + 8], rax	      1066	reloc.c	FUNCTION_5	CALL_3
0x40008be	      0xe800000000	                          call 0x40008c3	      1066	reloc.c	FUNCTION_5	CALL_3
0x40008c3	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1066	reloc.c	FUNCTION_5	CALL_3
0x40008c8	            0x89c0	                            mov eax, eax	      1066	reloc.c	FUNCTION_5	CALL_3
0x40008ca	        0x4c0fafd0	                           imul r10, rax	      1066	reloc.c	FUNCTION_5	CALL_3
0x40008ce	    0x410fb6442444	           movzx eax, byte [r12 + 0x44] 	       568	reloc.c	FUNCTION_3	CALL_1
0x40008d4	          0x83e018	                           and eax, 0x18	       568	reloc.c	FUNCTION_3	CALL_1
0x40008d7	            0x3c10	                            cmp al, 0x10	       568	reloc.c	FUNCTION_3	CALL_1
0x40008d9	            0x7445	                            je 0x4000920	       568	reloc.c	FUNCTION_3	CALL_1
0x40008db	        0x498b4540	            mov rax, qword [r13 + 0x40] 	       568	reloc.c	FUNCTION_3	CALL_1
0x40008df	          0x4885c0	                           test rax, rax	       568	reloc.c	FUNCTION_3	CALL_1
0x40008e2	            0x743c	                            je 0x4000920	       568	reloc.c	FUNCTION_3	CALL_1
0x40008e4	          0x8b5508	                mov edx, dword [rbp + 8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40008e7	          0x83c202	                              add edx, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40008ea	          0x83fa0a	                            cmp edx, 0xa	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40008ed	     0xf87bd010000	                            ja 0x4000ab0	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40008f3	            0x89d1	                            mov ecx, edx	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40008f5	    0xff24cd000000	                       jmp qword [rcx*8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40008fc	         0xf1f4000	                         nop dword [rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000900	        0x498b4560	            mov rax, qword [r13 + 0x60] 	      1058	reloc.c	FUNCTION_5	IF_3
0x4000904	        0x48014308	                add qword [rbx + 8], rax	      1058	reloc.c	FUNCTION_5	IF_3
0x4000908	        0x4883c418	                           add rsp, 0x18	      1368	reloc.c	FUNCTION_5
0x400090c	              0x5b	                                 pop rbx	      1368	reloc.c	FUNCTION_5
0x400090d	      0xb802000000	                              mov eax, 2	      1059	reloc.c	FUNCTION_5	IF_3
0x4000912	              0x5d	                                 pop rbp	      1368	reloc.c	FUNCTION_5
0x4000913	            0x415c	                                 pop r12	      1368	reloc.c	FUNCTION_5
0x4000915	            0x415d	                                 pop r13	      1368	reloc.c	FUNCTION_5
0x4000917	            0x415e	                                 pop r14	      1368	reloc.c	FUNCTION_5
0x4000919	            0x415f	                                 pop r15	      1368	reloc.c	FUNCTION_5
0x400091b	              0xc3	                                     ret	      1368	reloc.c	FUNCTION_5
0x400091c	         0xf1f4000	                         nop dword [rax]	      1368	reloc.c	FUNCTION_5
0x4000920	        0x498b4538	            mov rax, qword [r13 + 0x38] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000924	            0xebbe	                           jmp 0x40008e4	       568	reloc.c	FUNCTION_3	CALL_1
0x4000926	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       568	reloc.c	FUNCTION_3	CALL_1
0x4000930	      0xb902000000	                              mov ecx, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000935	          0x4939c2	                            cmp r10, rax	       574	reloc.c	FUNCTION_3
0x4000938	            0x7708	                            ja 0x4000942	       574	reloc.c	FUNCTION_3
0x400093a	          0x4c01d1	                            add rcx, r10	       574	reloc.c	FUNCTION_3
0x400093d	          0x4839c8	                            cmp rax, rcx	       574	reloc.c	FUNCTION_3
0x4000940	            0x732e	                           jae 0x4000970	       574	reloc.c	FUNCTION_3
0x4000942	        0x4883c418	                           add rsp, 0x18	      1368	reloc.c	FUNCTION_5
0x4000946	      0xb804000000	                              mov eax, 4	      1068	reloc.c	FUNCTION_5	IF_4
0x400094b	              0x5b	                                 pop rbx	      1368	reloc.c	FUNCTION_5
0x400094c	              0x5d	                                 pop rbp	      1368	reloc.c	FUNCTION_5
0x400094d	            0x415c	                                 pop r12	      1368	reloc.c	FUNCTION_5
0x400094f	            0x415d	                                 pop r13	      1368	reloc.c	FUNCTION_5
0x4000951	            0x415e	                                 pop r14	      1368	reloc.c	FUNCTION_5
0x4000953	            0x415f	                                 pop r15	      1368	reloc.c	FUNCTION_5
0x4000955	              0xc3	                                     ret	      1368	reloc.c	FUNCTION_5
0x4000956	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1368	reloc.c	FUNCTION_5
0x4000960	      0xb904000000	                              mov ecx, 4	      1368	reloc.c	FUNCTION_5
0x4000965	            0xebce	                           jmp 0x4000935	      1368	reloc.c	FUNCTION_5
0x4000967	    0x660f1f840000	                    nop word [rax + rax]	      1368	reloc.c	FUNCTION_5
0x4000970	        0x498b4f20	            mov rcx, qword [r15 + 0x20] 	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000974	          0x4531c0	                            xor r8d, r8d	      1075	reloc.c	FUNCTION_5	IF_5
0x4000977	        0xf6412110	           test byte [rcx + 0x21], 0x10 	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x400097b	     0xf84cf000000	                            je 0x4000a50	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000981	          0x8b7530	            mov esi, dword [rbp + 0x30] 	      1082	reloc.c	FUNCTION_5	IF_6
0x4000984	            0x31ff	                            xor edi, edi	      1083	reloc.c	FUNCTION_5	IF_6
0x4000986	            0x85f6	                           test esi, esi	      1082	reloc.c	FUNCTION_5	IF_6
0x4000988	     0xf85b2000000	                           jne 0x4000a40	      1082	reloc.c	FUNCTION_5	IF_6
0x400098e	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000992	          0x4c89c8	                             mov rax, r9	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000995	        0x48034160	             add rax, qword [rcx + 0x60]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x4000999	          0x4c01c0	                             add rax, r8	      1090	reloc.c	FUNCTION_5	ELSE_2
0x400099c	        0x4c8d3c07	                    lea r15, [rdi + rax]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x40009a0	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40009a3	        0x498b4560	            mov rax, qword [r13 + 0x60] 	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40009a7	            0x85ff	                           test edi, edi	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40009a9	            0x7475	                            je 0x4000a20	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40009ab	        0x498b4d68	            mov rcx, qword [r13 + 0x68] 	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40009af	          0x4889c7	                            mov rdi, rax	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40009b2	        0x48037928	             add rdi, qword [rcx + 0x28]	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40009b6	          0x8b4d48	            mov ecx, dword [rbp + 0x48] 	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40009b9	          0x4929ff	                            sub r15, rdi	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40009bc	            0x85c9	                           test ecx, ecx	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40009be	            0x7460	                            je 0x4000a20	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40009c0	            0x85f6	                           test esi, esi	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40009c2	            0x7464	                            je 0x4000a28	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40009c4	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1129	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40009c8	          0x4929cf	                            sub r15, rcx	      1129	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40009cb	          0x4801c8	                            add rax, rcx	      1148	reloc.c	FUNCTION_5	ELSE_3
0x40009ce	        0x48894308	                mov qword [rbx + 8], rax	      1148	reloc.c	FUNCTION_5	ELSE_3
0x40009d2	      0x498b442408	                mov rax, qword [r12 + 8]	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x40009d7	        0x83780802	                  cmp dword [rax + 8], 2	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x40009db	     0xf847d020000	                            je 0x4000c5e	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x40009e1	        0x4c897b10	             mov qword [rbx + 0x10], r15	      1231	reloc.c	FUNCTION_5	ELSE_3	ELSE_4
0x40009e5	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      1242	reloc.c	FUNCTION_5	IF_12
0x40009e8	            0x85c0	                           test eax, eax	      1242	reloc.c	FUNCTION_5	IF_12
0x40009ea	     0xf85e1010000	                           jne 0x4000bd1	      1242	reloc.c	FUNCTION_5	IF_12
0x40009f0	          0x8b7504	                mov esi, dword [rbp + 4]	      1242	reloc.c	FUNCTION_5	IF_12
0x40009f3	      0xbb02000000	                              mov ebx, 2	      1024	reloc.c	FUNCTION_5
0x40009f8	            0x89f1	                            mov ecx, esi	      1276	reloc.c	FUNCTION_5
0x40009fa	          0x4d89f8	                             mov r8, r15	      1276	reloc.c	FUNCTION_5
0x40009fd	        0x4c8b2c24	                    mov r13, qword [rsp]	      1317	reloc.c	FUNCTION_5
0x4000a01	          0x49d3e8	                              shr r8, cl	      1276	reloc.c	FUNCTION_5
0x4000a04	          0x8b4d14	            mov ecx, dword [rbp + 0x14] 	      1279	reloc.c	FUNCTION_5
0x4000a07	          0x4d29f2	                            sub r10, r14	      1317	reloc.c	FUNCTION_5
0x4000a0a	          0x4d01d5	                            add r13, r10	      1317	reloc.c	FUNCTION_5
0x4000a0d	          0x49d3e0	                              shl r8, cl	      1279	reloc.c	FUNCTION_5
0x4000a10	          0x83fa06	                              cmp edx, 6	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000a13	     0xf879e010000	                            ja 0x4000bb7	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000a19	    0xff24d5000000	                       jmp qword [rdx*8]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x4000a20	            0x85f6	                           test esi, esi	      1132	reloc.c	FUNCTION_5	IF_9
0x4000a22	     0xf85a0010000	                           jne 0x4000bc8	      1132	reloc.c	FUNCTION_5	IF_9
0x4000a28	        0x48014308	                add qword [rbx + 8], rax	      1138	reloc.c	FUNCTION_5	IF_9
0x4000a2c	        0x4c897b10	             mov qword [rbx + 0x10], r15	      1137	reloc.c	FUNCTION_5	IF_9
0x4000a30	      0xb802000000	                              mov eax, 2	      1139	reloc.c	FUNCTION_5	IF_9
0x4000a35	      0xe959feffff	                           jmp 0x4000893	      1139	reloc.c	FUNCTION_5	IF_9
0x4000a3a	    0x660f1f440000	                    nop word [rax + rax]	      1139	reloc.c	FUNCTION_5	IF_9
0x4000a40	        0x488b4168	            mov rax, qword [rcx + 0x68] 	      1085	reloc.c	FUNCTION_5	ELSE_2
0x4000a44	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      1085	reloc.c	FUNCTION_5	ELSE_2
0x4000a48	      0xe941ffffff	                           jmp 0x400098e	      1085	reloc.c	FUNCTION_5	ELSE_2
0x4000a4d	           0xf1f00	                         nop dword [rax]	      1085	reloc.c	FUNCTION_5	ELSE_2
0x4000a50	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	      1077	reloc.c	FUNCTION_5	ELSE_1
0x4000a54	      0xe928ffffff	                           jmp 0x4000981	      1077	reloc.c	FUNCTION_5	ELSE_1
0x4000a59	     0xf1f80000000	                         nop dword [rax]	      1077	reloc.c	FUNCTION_5	ELSE_1
0x4000a60	      0xb903000000	                              mov ecx, 3	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a65	      0xe9cbfeffff	                           jmp 0x4000935	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a6a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a70	            0x31c9	                            xor ecx, ecx	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a72	      0xe9befeffff	                           jmp 0x4000935	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a77	    0x660f1f840000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a80	      0xb908000000	                              mov ecx, 8	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a85	      0xe9abfeffff	                           jmp 0x4000935	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a8a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a90	      0xb901000000	                              mov ecx, 1	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a95	      0xe99bfeffff	                           jmp 0x4000935	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000a9a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000aa0	      0xb910000000	                           mov ecx, 0x10	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000aa5	      0xe98bfeffff	                           jmp 0x4000935	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000aaa	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000ab0	      0xba00000000	                              mov edx, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000ab5	      0xbebb010000	                          mov esi, 0x1bb	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000aba	      0xbf00000000	                              mov edi, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000abf	      0xe800000000	                          call 0x4000ac4	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000ac4	      0x498b442408	                mov rax, qword [r12 + 8]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ac9	        0x4c890424	                     mov qword [rsp], r8	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000acd	          0x4c89ef	                            mov rdi, r13	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ad0	          0xff5038	                 call qword [rax + 0x38]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000ad3	          0x4889c2	                            mov rdx, rax	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000ad6	        0x48235538	             and rdx, qword [rbp + 0x38]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000ada	        0x4c8b0424	                     mov r8, qword [rsp]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000ade	          0x4c01c2	                             add rdx, r8	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000ae1	          0x4831c2	                            xor rdx, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000ae4	        0x48235540	             and rdx, qword [rbp + 0x40]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000ae8	          0x4c89ee	                            mov rsi, r13	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000aeb	          0x4889d7	                            mov rdi, rdx	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000aee	          0x4831c7	                            xor rdi, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000af1	      0x498b442408	                mov rax, qword [r12 + 8]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000af6	          0xff5048	                 call qword [rax + 0x48]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000af9	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x4000afb	      0xe993fdffff	                           jmp 0x4000893	      1350	reloc.c	FUNCTION_5	SWITCH_1
0x4000b00	      0x498b442408	                mov rax, qword [r12 + 8]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000b05	        0x4c890424	                     mov qword [rsp], r8	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000b09	          0x4c89ef	                            mov rdi, r13	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000b0c	          0xff5020	                 call qword [rax + 0x20]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000b0f	          0x4889c2	                            mov rdx, rax	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000b12	        0x48235538	             and rdx, qword [rbp + 0x38]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000b16	        0x4c8b0424	                     mov r8, qword [rsp]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000b1a	          0x4c89ee	                            mov rsi, r13	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4000b1d	          0x4c01c2	                             add rdx, r8	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4000b20	          0x4831c2	                            xor rdx, rax	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4000b23	        0x48235540	             and rdx, qword [rbp + 0x40]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4000b27	          0x4889d7	                            mov rdi, rdx	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4000b2a	          0x4831c7	                            xor rdi, rax	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4000b2d	      0x498b442408	                mov rax, qword [r12 + 8]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4000b32	          0xff5030	                 call qword [rax + 0x30]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x4000b35	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x4000b37	      0xe957fdffff	                           jmp 0x4000893	      1362	reloc.c	FUNCTION_5	SWITCH_1
0x4000b3c	      0x498b442408	                mov rax, qword [r12 + 8]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000b41	        0x4c890424	                     mov qword [rsp], r8	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000b45	          0x4c89ef	                            mov rdi, r13	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000b48	          0xff5050	                 call qword [rax + 0x50]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x4000b4b	            0x89c7	                            mov edi, eax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b4d	        0x66237d38	               and di, word [rbp + 0x38]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b51	        0x4c8b0424	                     mov r8, qword [rsp]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b55	          0x4c89ee	                            mov rsi, r13	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b58	          0x4401c7	                            add edi, r8d	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b5b	            0x31c7	                            xor edi, eax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b5d	        0x66237d40	               and di, word [rbp + 0x40]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b61	            0x31f8	                            xor eax, edi	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b63	        0x480fbff8	                           movsx rdi, ax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b67	      0x498b442408	                mov rax, qword [r12 + 8]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b6c	          0xff5060	                 call qword [rax + 0x60]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000b6f	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x4000b71	      0xe91dfdffff	                           jmp 0x4000893	      1335	reloc.c	FUNCTION_5	SWITCH_1
0x4000b76	      0x410fb65500	                   movzx edx, byte [r13]	      1323	reloc.c	FUNCTION_5	SWITCH_1	CALL_11
0x4000b7b	            0x89d0	                            mov eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000b7d	          0x224538	               and al, byte [rbp + 0x38]	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000b80	          0x4401c0	                            add eax, r8d	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000b83	            0x31d0	                            xor eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000b85	          0x224540	               and al, byte [rbp + 0x40]	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000b88	            0x31d0	                            xor eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000b8a	        0x41884500	                      mov byte [r13], al	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x4000b8e	            0x89d8	                            mov eax, ebx	      1367	reloc.c	FUNCTION_5
0x4000b90	      0xe9fefcffff	                           jmp 0x4000893	      1327	reloc.c	FUNCTION_5	SWITCH_1
0x4000b95	      0x498b442408	                mov rax, qword [r12 + 8]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000b9a	        0x4c890424	                     mov qword [rsp], r8	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000b9e	          0x4c89ef	                            mov rdi, r13	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000ba1	          0xff5038	                 call qword [rax + 0x38]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000ba4	          0x4889c2	                            mov rdx, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000ba7	        0x48235538	             and rdx, qword [rbp + 0x38]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000bab	        0x4c8b0424	                     mov r8, qword [rsp]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000baf	          0x4c29c2	                             sub rdx, r8	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000bb2	      0xe92affffff	                           jmp 0x4000ae1	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000bb7	      0xb807000000	                              mov eax, 7	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4000bbc	      0xe9d2fcffff	                           jmp 0x4000893	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4000bc1	     0xf1f80000000	                         nop dword [rax]	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4000bc8	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4000bcc	      0xe9fafdffff	                           jmp 0x40009cb	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x4000bd1	          0x4c89e7	                            mov rdi, r12	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000bd4	      0x4c89542408	                mov qword [rsp + 8], r10	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000bd9	      0xe800000000	                          call 0x4000bde	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000bde	          0x8b7d0c	              mov edi, dword [rbp + 0xc]	       502	reloc.c	FUNCTION_2
0x4000be1	          0x8b7504	                mov esi, dword [rbp + 4]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000be4	      0x4c8b542408	                mov r10, qword [rsp + 8]	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000be9	          0x8d4fff	                      lea ecx, [rdi - 1]	       502	reloc.c	FUNCTION_2
0x4000bec	      0xbf01000000	                              mov edi, 1	       502	reloc.c	FUNCTION_2
0x4000bf1	          0x4889fa	                            mov rdx, rdi	       502	reloc.c	FUNCTION_2
0x4000bf4	          0x48d3e2	                             shl rdx, cl	       502	reloc.c	FUNCTION_2
0x4000bf7	          0x8d48ff	                      lea ecx, [rax - 1]	       504	reloc.c	FUNCTION_2
0x4000bfa	      0x488d5412fe	                lea rdx, [rdx + rdx - 2]	       502	reloc.c	FUNCTION_2
0x4000bff	          0x48d3e7	                             shl rdi, cl	       504	reloc.c	FUNCTION_2
0x4000c02	            0x89f1	                            mov ecx, esi	       504	reloc.c	FUNCTION_2
0x4000c04	        0x4883ca01	                               or rdx, 1	       502	reloc.c	FUNCTION_2
0x4000c08	      0x488d7c3ffe	                lea rdi, [rdi + rdi - 2]	       504	reloc.c	FUNCTION_2
0x4000c0d	          0x4889d0	                            mov rax, rdx	       504	reloc.c	FUNCTION_2
0x4000c10	          0x4989d1	                             mov r9, rdx	       503	reloc.c	FUNCTION_2
0x4000c13	          0x48d3e0	                             shl rax, cl	       504	reloc.c	FUNCTION_2
0x4000c16	          0x49f7d1	                                  not r9	       503	reloc.c	FUNCTION_2
0x4000c19	        0x4883c801	                               or rax, 1	       504	reloc.c	FUNCTION_2
0x4000c1d	          0x4809f8	                             or rax, rdi	       504	reloc.c	FUNCTION_2
0x4000c20	          0x4c89ff	                            mov rdi, r15	       505	reloc.c	FUNCTION_2
0x4000c23	          0x4821c7	                            and rdi, rax	       505	reloc.c	FUNCTION_2
0x4000c26	          0x48d3ef	                             shr rdi, cl	       505	reloc.c	FUNCTION_2
0x4000c29	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000c2c	          0x83f901	                              cmp ecx, 1	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000c2f	     0xf8484000000	                            je 0x4000cb9	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000c35	     0xf82a0000000	                            jb 0x4000cdb	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000c3b	          0x83f902	                              cmp ecx, 2	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000c3e	            0x7470	                            je 0x4000cb0	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000c40	          0x83f903	                              cmp ecx, 3	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000c43	     0xf85a2000000	                           jne 0x4000ceb	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4000c49	          0x4985f9	                            test r9, rdi	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000c4c	          0x8b5508	                mov edx, dword [rbp + 8]	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000c4f	            0x757d	                           jne 0x4000cce	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000c51	      0xbb02000000	                              mov ebx, 2	       496	reloc.c	FUNCTION_2
0x4000c56	          0x83c202	                              add edx, 2	       496	reloc.c	FUNCTION_2
0x4000c59	      0xe99afdffff	                           jmp 0x40009f8	       496	reloc.c	FUNCTION_2
0x4000c5e	          0x488b00	                    mov rax, qword [rax]	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000c61	      0xbf00000000	                              mov edi, 0	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000c66	      0xb912000000	                           mov ecx, 0x12	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000c6b	          0x4889c6	                            mov rsi, rax	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000c6e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000c70	     0xf846bfdffff	                            je 0x40009e1	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000c76	      0xbf00000000	                              mov edi, 0	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000c7b	      0xb90f000000	                            mov ecx, 0xf	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000c80	          0x4889c6	                            mov rsi, rax	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000c83	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000c85	     0xf8456fdffff	                            je 0x40009e1	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000c8b	      0xbf00000000	                              mov edi, 0	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000c90	      0xb909000000	                              mov ecx, 9	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000c95	          0x4889c6	                            mov rsi, rax	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000c98	          0x4d29cf	                             sub r15, r9	      1224	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000c9b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000c9d	     0xf8442fdffff	                            je 0x40009e5	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000ca3	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1227	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11
0x4000cab	      0xe935fdffff	                           jmp 0x40009e5	      1227	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11
0x4000cb0	          0x48d1ea	                              shr rdx, 1	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000cb3	          0x48f7d2	                                 not rdx	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000cb6	          0x4989d1	                             mov r9, rdx	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000cb9	          0x4c21cf	                             and rdi, r9	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000cbc	            0x741d	                            je 0x4000cdb	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000cbe	            0x89f1	                            mov ecx, esi	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000cc0	          0x8b5508	                mov edx, dword [rbp + 8]	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000cc3	          0x48d3e8	                             shr rax, cl	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000cc6	          0x4921c1	                             and r9, rax	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000cc9	          0x4c39cf	                             cmp rdi, r9	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000ccc	            0x7483	                            je 0x4000c51	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000cce	      0xbb03000000	                              mov ebx, 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000cd3	          0x83c202	                              add edx, 2	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000cd6	      0xe91dfdffff	                           jmp 0x40009f8	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000cdb	          0x8b5508	                mov edx, dword [rbp + 8]	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000cde	      0xbb02000000	                              mov ebx, 2	       496	reloc.c	FUNCTION_2
0x4000ce3	          0x83c202	                              add edx, 2	       496	reloc.c	FUNCTION_2
0x4000ce6	      0xe90dfdffff	                           jmp 0x40009f8	       496	reloc.c	FUNCTION_2
0x4000ceb	      0xba00000000	                              mov edx, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4000cf0	      0xbe18020000	                          mov esi, 0x218	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4000cf5	      0xbf00000000	                              mov edi, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4000cfa	      0xe800000000	                          call 0x4000cff	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
bfd_reloc_type_lookup	DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0:CALL,1:functions,0	3
0x40016a0	        0x488b4708	                mov rax, qword [rdi + 8]	      8015	reloc.c	FUNCTION_9	CALL_1
0x40016a4	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      8015	reloc.c	FUNCTION_9	CALL_1
0x40016ab	            0xffe0	                                 jmp rax	      8015	reloc.c	FUNCTION_9	CALL_1
_bfd_clear_contents	DO,0:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,2:CALL,15:functions,0	130
0x40014b0	            0x4155	                                push r13	      1621	reloc.c	FUNCTION_8
0x40014b2	            0x4154	                                push r12	      1621	reloc.c	FUNCTION_8
0x40014b4	              0x55	                                push rbp	      1621	reloc.c	FUNCTION_8
0x40014b5	              0x53	                                push rbx	      1621	reloc.c	FUNCTION_8
0x40014b6	        0x4883ec08	                              sub rsp, 8	      1621	reloc.c	FUNCTION_8
0x40014ba	          0x8b4708	                mov eax, dword [rdi + 8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014bd	          0x83c002	                              add eax, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014c0	          0x83f80a	                            cmp eax, 0xa	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014c3	     0xf8787010000	                            ja 0x4001650	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014c9	          0x4889fb	                            mov rbx, rdi	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014cc	          0x4989f4	                            mov r12, rsi	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014cf	          0x4989d5	                            mov r13, rdx	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014d2	          0x4889cd	                            mov rbp, rcx	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014d5	    0xff24c5000000	                       jmp qword [rax*8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014dc	         0xf1f4000	                         nop dword [rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x40014e0	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	      1652	reloc.c	FUNCTION_8
0x40014e4	           0xfb601	                   movzx eax, byte [rcx]	      1634	reloc.c	FUNCTION_8	SWITCH_1	CALL_3
0x40014e7	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x40014ec	        0x498b7500	                    mov rsi, qword [r13]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x40014f0	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x40014f3	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x40014f6	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x40014f9	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x40014fe	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001500	            0x7509	                           jne 0x400150b	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001502	          0x83e201	                              and edx, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4001505	     0xf857c010000	                           jne 0x4001687	      1658	reloc.c	FUNCTION_8	IF_1
0x400150b	          0x884500	                      mov byte [rbp], al	      1668	reloc.c	FUNCTION_8	SWITCH_2	CALL_11
0x400150e	        0x4883c408	                              add rsp, 8	      1684	reloc.c	FUNCTION_8
0x4001512	              0x5b	                                 pop rbx	      1684	reloc.c	FUNCTION_8
0x4001513	              0x5d	                                 pop rbp	      1684	reloc.c	FUNCTION_8
0x4001514	            0x415c	                                 pop r12	      1684	reloc.c	FUNCTION_8
0x4001516	            0x415d	                                 pop r13	      1684	reloc.c	FUNCTION_8
0x4001518	              0xc3	                                     ret	      1684	reloc.c	FUNCTION_8
0x4001519	     0xf1f80000000	                         nop dword [rax]	      1684	reloc.c	FUNCTION_8
0x4001520	        0x488b4608	                mov rax, qword [rsi + 8]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4001524	          0x4889cf	                            mov rdi, rcx	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4001527	          0xff5038	                 call qword [rax + 0x38]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x400152a	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	      1652	reloc.c	FUNCTION_8
0x400152e	        0x498b7500	                    mov rsi, qword [r13]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001532	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001537	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x400153a	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x400153d	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4001540	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001545	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001547	     0xf84f3000000	                            je 0x4001640	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x400154d	      0x498b542408	                mov rdx, qword [r12 + 8]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001552	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001556	            0xeb3a	                           jmp 0x4001592	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001558	     0xf1f84000000	                   nop dword [rax + rax]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4001560	        0x488b4608	                mov rax, qword [rsi + 8]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4001564	          0x4889cf	                            mov rdi, rcx	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4001567	          0xff5050	                 call qword [rax + 0x50]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x400156a	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	      1652	reloc.c	FUNCTION_8
0x400156e	        0x498b7500	                    mov rsi, qword [r13]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001572	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001577	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x400157a	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x400157d	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4001580	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001585	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001587	            0x7477	                            je 0x4001600	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4001589	      0x498b542408	                mov rdx, qword [r12 + 8]	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x400158e	        0x488b5260	            mov rdx, qword [rdx + 0x60] 	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4001592	        0x4883c408	                              add rsp, 8	      1684	reloc.c	FUNCTION_8
0x4001596	          0x4889ee	                            mov rsi, rbp	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4001599	          0x4889c7	                            mov rdi, rax	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x400159c	              0x5b	                                 pop rbx	      1684	reloc.c	FUNCTION_8
0x400159d	              0x5d	                                 pop rbp	      1684	reloc.c	FUNCTION_8
0x400159e	            0x415c	                                 pop r12	      1684	reloc.c	FUNCTION_8
0x40015a0	            0x415d	                                 pop r13	      1684	reloc.c	FUNCTION_8
0x40015a2	            0xffe2	                                 jmp rdx	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x40015a4	         0xf1f4000	                         nop dword [rax]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x40015a8	      0xba00000000	                              mov edx, 0	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x40015ad	      0xbe5e060000	                          mov esi, 0x65e	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x40015b2	      0xbf00000000	                              mov edi, 0	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x40015b7	      0xe800000000	                          call 0x40015bc	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x40015bc	         0xf1f4000	                         nop dword [rax]	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x40015c0	        0x488b4608	                mov rax, qword [rsi + 8]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x40015c4	          0x4889cf	                            mov rdi, rcx	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x40015c7	          0xff5020	                 call qword [rax + 0x20]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x40015ca	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	      1652	reloc.c	FUNCTION_8
0x40015ce	        0x498b7500	                    mov rsi, qword [r13]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x40015d2	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x40015d7	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x40015da	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x40015dd	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x40015e0	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x40015e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x40015e7	            0x7509	                           jne 0x40015f2	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x40015e9	          0x83e201	                              and edx, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x40015ec	     0xf858e000000	                           jne 0x4001680	      1658	reloc.c	FUNCTION_8	IF_1
0x40015f2	      0x498b542408	                mov rdx, qword [r12 + 8]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x40015f7	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x40015fb	            0xeb95	                           jmp 0x4001592	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x40015fd	           0xf1f00	                         nop dword [rax]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4001600	          0x83e201	                              and edx, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4001603	            0x7484	                            je 0x4001589	      1658	reloc.c	FUNCTION_8	IF_1
0x4001605	      0xba02000000	                              mov edx, 2	       436	reloc.c	FUNCTION_1	SWITCH_1
0x400160a	        0x4883c801	                               or rax, 1	      1659	reloc.c	FUNCTION_8	IF_1
0x400160e	          0x83fa02	                              cmp edx, 2	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4001611	     0xf8472ffffff	                            je 0x4001589	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4001617	            0x774f	                            ja 0x4001668	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4001619	          0x83fa01	                              cmp edx, 1	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x400161c	     0xf84e9feffff	                            je 0x400150b	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4001622	      0xba00000000	                              mov edx, 0	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4001627	      0xbe82060000	                          mov esi, 0x682	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x400162c	      0xbf00000000	                              mov edi, 0	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4001631	      0xe800000000	                          call 0x4001636	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4001636	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4001640	          0x83e201	                              and edx, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4001643	     0xf8404ffffff	                            je 0x400154d	      1658	reloc.c	FUNCTION_8	IF_1
0x4001649	      0xba04000000	                              mov edx, 4	       437	reloc.c	FUNCTION_1	SWITCH_1
0x400164e	            0xebba	                           jmp 0x400160a	       437	reloc.c	FUNCTION_1	SWITCH_1
0x4001650	      0xba00000000	                              mov edx, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4001655	      0xbebb010000	                          mov esi, 0x1bb	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x400165a	      0xbf00000000	                              mov edi, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x400165f	      0xe800000000	                          call 0x4001664	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4001664	         0xf1f4000	                         nop dword [rax]	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4001668	          0x83fa04	                              cmp edx, 4	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x400166b	     0xf84dcfeffff	                            je 0x400154d	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4001671	          0x83fa08	                              cmp edx, 8	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4001674	            0x75ac	                           jne 0x4001622	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4001676	      0xe977ffffff	                           jmp 0x40015f2	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x400167b	       0xf1f440000	                   nop dword [rax + rax]	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4001680	      0xba08000000	                              mov edx, 8	       439	reloc.c	FUNCTION_1	SWITCH_1
0x4001685	            0xeb83	                           jmp 0x400160a	       439	reloc.c	FUNCTION_1	SWITCH_1
0x4001687	      0xba01000000	                              mov edx, 1	       435	reloc.c	FUNCTION_1	SWITCH_1
0x400168c	      0xe979ffffff	                           jmp 0x400160a	       435	reloc.c	FUNCTION_1	SWITCH_1
bfd_generic_get_relocated_section_contents	DO,0:ELSE,1:IF,11:WHILE,0:FOR,1:SWITCH,1:CALL,22:functions,0	796
0x4001850	            0x4157	                                push r15	      8211	reloc.c	FUNCTION_17
0x4001852	            0x4156	                                push r14	      8211	reloc.c	FUNCTION_17
0x4001854	            0x4155	                                push r13	      8211	reloc.c	FUNCTION_17
0x4001856	            0x4154	                                push r12	      8211	reloc.c	FUNCTION_17
0x4001858	          0x4989f5	                            mov r13, rsi	      8211	reloc.c	FUNCTION_17
0x400185b	              0x55	                                push rbp	      8211	reloc.c	FUNCTION_17
0x400185c	              0x53	                                push rbx	      8211	reloc.c	FUNCTION_17
0x400185d	          0x4c89cd	                             mov rbp, r9	      8211	reloc.c	FUNCTION_17
0x4001860	        0x4883ec68	                           sub rsp, 0x68	      8211	reloc.c	FUNCTION_17
0x4001864	        0x488b5a20	            mov rbx, qword [rdx + 0x20] 	      8212	reloc.c	FUNCTION_17
0x4001868	      0x48897c2408	                mov qword [rsp + 8], rdi	      8211	reloc.c	FUNCTION_17
0x400186d	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      8211	reloc.c	FUNCTION_17
0x4001872	    0x64488b042528	                mov rax, qword fs:[0x28]	      8211	reloc.c	FUNCTION_17
0x400187b	      0x4889442458	             mov qword [rsp + 0x58], rax	      8211	reloc.c	FUNCTION_17
0x4001880	            0x31c0	                            xor eax, eax	      8211	reloc.c	FUNCTION_17
0x4001882	    0x4c8bbbf00000	            mov r15, qword [rbx + 0xf0] 	      8212	reloc.c	FUNCTION_17
0x4001889	          0x4889de	                            mov rsi, rbx	      8218	reloc.c	FUNCTION_17	CALL_1
0x400188c	      0x4489442440	             mov dword [rsp + 0x40], r8d	      8211	reloc.c	FUNCTION_17
0x4001891	          0x4c89ff	                            mov rdi, r15	      8218	reloc.c	FUNCTION_17	CALL_1
0x4001894	      0xe800000000	                          call 0x4001899	      8218	reloc.c	FUNCTION_17	CALL_1
0x4001899	          0x4885c0	                           test rax, rax	      8219	reloc.c	FUNCTION_17	IF_1
0x400189c	     0xf880d020000	                            js 0x4001aaf	      8219	reloc.c	FUNCTION_17	IF_1
0x40018a2	      0x488d542448	                   lea rdx, [rsp + 0x48]	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018a7	          0x4889de	                            mov rsi, rbx	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018aa	          0x4c89ff	                            mov rdi, r15	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018ad	          0x4989c4	                            mov r12, rax	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018b0	      0xe800000000	                          call 0x40018b5	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018b5	            0x85c0	                           test eax, eax	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018b7	     0xf84f2010000	                            je 0x4001aaf	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x40018bd	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      8226	reloc.c	FUNCTION_17	IF_3
0x40018c2	          0x4885c0	                           test rax, rax	      8226	reloc.c	FUNCTION_17	IF_3
0x40018c5	     0xf84e4010000	                            je 0x4001aaf	      8226	reloc.c	FUNCTION_17	IF_3
0x40018cb	          0x4d85e4	                           test r12, r12	      8229	reloc.c	FUNCTION_17	IF_4
0x40018ce	            0x7528	                           jne 0x40018f8	      8229	reloc.c	FUNCTION_17	IF_4
0x40018d0	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      8360	reloc.c	FUNCTION_17
0x40018d5	    0x644833342528	                xor rsi, qword fs:[0x28]	      8360	reloc.c	FUNCTION_17
0x40018de	     0xf85040c0000	                           jne 0x40024e8	      8360	reloc.c	FUNCTION_17
0x40018e4	        0x4883c468	                           add rsp, 0x68	      8360	reloc.c	FUNCTION_17
0x40018e8	              0x5b	                                 pop rbx	      8360	reloc.c	FUNCTION_17
0x40018e9	              0x5d	                                 pop rbp	      8360	reloc.c	FUNCTION_17
0x40018ea	            0x415c	                                 pop r12	      8360	reloc.c	FUNCTION_17
0x40018ec	            0x415d	                                 pop r13	      8360	reloc.c	FUNCTION_17
0x40018ee	            0x415e	                                 pop r14	      8360	reloc.c	FUNCTION_17
0x40018f0	            0x415f	                                 pop r15	      8360	reloc.c	FUNCTION_17
0x40018f2	              0xc3	                                     ret	      8360	reloc.c	FUNCTION_17
0x40018f3	       0xf1f440000	                   nop dword [rax + rax]	      8360	reloc.c	FUNCTION_17
0x40018f8	          0x4c89e7	                            mov rdi, r12	      8232	reloc.c	FUNCTION_17	CALL_3
0x40018fb	      0xe800000000	                          call 0x4001900	      8232	reloc.c	FUNCTION_17	CALL_3
0x4001900	          0x4885c0	                           test rax, rax	      8233	reloc.c	FUNCTION_17	IF_5
0x4001903	      0x4889442418	             mov qword [rsp + 0x18], rax	      8232	reloc.c	FUNCTION_17	CALL_3
0x4001908	          0x4989c6	                            mov r14, rax	      8233	reloc.c	FUNCTION_17	IF_5
0x400190b	     0xf849e010000	                            je 0x4001aaf	      8233	reloc.c	FUNCTION_17	IF_5
0x4001911	          0x4889e9	                            mov rcx, rbp	      8236	reloc.c	FUNCTION_17	CALL_4
0x4001914	          0x4889c2	                            mov rdx, rax	      8236	reloc.c	FUNCTION_17	CALL_4
0x4001917	          0x4889de	                            mov rsi, rbx	      8236	reloc.c	FUNCTION_17	CALL_4
0x400191a	          0x4c89ff	                            mov rdi, r15	      8236	reloc.c	FUNCTION_17	CALL_4
0x400191d	      0xe800000000	                          call 0x4001922	      8236	reloc.c	FUNCTION_17	CALL_4
0x4001922	          0x4885c0	                           test rax, rax	      8240	reloc.c	FUNCTION_17	IF_6
0x4001925	     0xf887a010000	                            js 0x4001aa5	      8240	reloc.c	FUNCTION_17	IF_6
0x400192b	     0xf84df080000	                            je 0x4002210	      8243	reloc.c	FUNCTION_17	IF_7
0x4001931	        0x49833e00	                      cmp qword [r14], 0	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001935	     0xf84d5080000	                            je 0x4002210	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x400193b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001940	    0x48c744245000	               mov qword [rsp + 0x50], 0	      8249	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001949	          0x488b28	                    mov rbp, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x400194c	        0x488b4500	                    mov rax, qword [rbp]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001950	          0x4c8b20	                    mov r12, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001953	          0x4d85e4	                           test r12, r12	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001956	     0xf84be010000	                            je 0x4001b1a	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x400195c	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001960	      0xb800000000	                              mov eax, 0	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001965	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       653	reloc.c	FUNCTION_4	IF_4
0x400196a	          0x4d89e2	                            mov r10, r12	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400196d	            0x85c9	                           test ecx, ecx	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400196f	    0x480f45442408	             cmovne rax, qword [rsp + 8]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4001975	          0x4885c0	                           test rax, rax	       631	reloc.c	FUNCTION_4	IF_1
0x4001978	      0x4889442428	             mov qword [rsp + 0x28], rax	       631	reloc.c	FUNCTION_4	IF_1
0x400197d	       0xf94442447	                  sete byte [rsp + 0x47]	       631	reloc.c	FUNCTION_4	IF_1
0x4001982	       0xf95442446	                 setne byte [rsp + 0x46]	       653	reloc.c	FUNCTION_4	IF_4
0x4001987	        0x498b5220	            mov rdx, qword [r10 + 0x20] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400198b	    0x4881fa000000	                              cmp rdx, 0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001992	            0x7413	                            je 0x40019a7	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001994	          0x4885d2	                           test rdx, rdx	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001997	            0x740e	                            je 0x40019a7	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001999	    0x48817a680000	               cmp qword [rdx + 0x68], 0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019a1	     0xf84a9020000	                            je 0x4001c50	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x40019a7	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40019ac	    0x4881fa000000	                              cmp rdx, 0	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40019b3	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	       620	reloc.c	FUNCTION_4
0x40019b7	      0x4889442410	             mov qword [rsp + 0x10], rax	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40019bc	     0xf845e020000	                            je 0x4001c20	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40019c2	          0x4d85e4	                           test r12, r12	       637	reloc.c	FUNCTION_4	IF_2
0x40019c5	     0xf84e5010000	                            je 0x4001bb0	       637	reloc.c	FUNCTION_4	IF_2
0x40019cb	    0xc74424300200	               mov dword [rsp + 0x30], 2	       617	reloc.c	FUNCTION_4
0x40019d3	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       637	reloc.c	FUNCTION_4	IF_2
0x40019d8	          0x4885c0	                           test rax, rax	       637	reloc.c	FUNCTION_4	IF_2
0x40019db	     0xf84e3000000	                            je 0x4001ac4	       637	reloc.c	FUNCTION_4	IF_2
0x40019e1	        0x4883ec08	                              sub rsp, 8	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x40019e5	          0x4c89d2	                            mov rdx, r10	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x40019e8	          0x4989d8	                             mov r8, rbx	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x40019eb	      0x488d4c2458	                   lea rcx, [rsp + 0x58]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x40019f0	          0x4889ee	                            mov rsi, rbp	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x40019f3	          0x4c89ff	                            mov rdi, r15	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x40019f6	              0x51	                                push rcx	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x40019f7	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x40019fc	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4001a01	      0x4c89542430	             mov qword [rsp + 0x30], r10	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4001a06	            0xffd0	                                call rax	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4001a08	          0x4189c0	                            mov r8d, eax	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4001a0b	        0x4183f805	                              cmp r8d, 5	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4001a0f	              0x58	                                 pop rax	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4001a10	              0x5a	                                 pop rdx	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4001a11	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4001a16	     0xf84a4000000	                            je 0x4001ac0	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4001a1c	      0x448b4c2440	            mov r9d, dword [rsp + 0x40] 	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001a21	          0x4585c9	                           test r9d, r9d	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001a24	     0xf85a1030000	                           jne 0x4001dcb	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001a2a	        0x4183f802	                              cmp r8d, 2	      8297	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11
0x4001a2e	     0xf84bc000000	                            je 0x4001af0	      8297	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11
0x4001a34	        0x418d40fd	                       lea eax, [r8 - 3]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001a38	          0x83f806	                              cmp eax, 6	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001a3b	     0xf8787070000	                            ja 0x40021c8	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001a41	    0xff24c5000000	                       jmp qword [rax*8]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001a48	     0xf1f84000000	                   nop dword [rax + rax]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001a50	      0xb902000000	                              mov ecx, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001a55	          0x4939d1	                             cmp r9, rdx	       574	reloc.c	FUNCTION_3
0x4001a58	            0x770c	                            ja 0x4001a66	       574	reloc.c	FUNCTION_3
0x4001a5a	          0x4c01c9	                             add rcx, r9	       574	reloc.c	FUNCTION_3
0x4001a5d	          0x4839ca	                            cmp rdx, rcx	       574	reloc.c	FUNCTION_3
0x4001a60	     0xf835a020000	                           jae 0x4001cc0	       574	reloc.c	FUNCTION_3
0x4001a66	      0x448b5c2440	           mov r11d, dword [rsp + 0x40] 	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001a6b	          0x4585db	                         test r11d, r11d	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001a6e	     0xf85790a0000	                           jne 0x40024ed	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001a74	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001a78	          0x4d8b26	                    mov r12, qword [r14]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001a7b	      0xba05000000	                              mov edx, 5	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x4001a80	      0xbe00000000	                              mov esi, 0	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x4001a85	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x4001a89	      0xbf00000000	                              mov edi, 0	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001a8e	      0xe800000000	                          call 0x4001a93	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001a93	          0x4c89e1	                            mov rcx, r12	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001a96	          0x4889c7	                            mov rdi, rax	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001a99	          0x4889da	                            mov rdx, rbx	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001a9c	      0x488b742408	                mov rsi, qword [rsp + 8]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001aa1	            0x31c0	                            xor eax, eax	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001aa3	            0xffd5	                                call rbp	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001aa5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8358	reloc.c	FUNCTION_17	CALL_22
0x4001aaa	      0xe800000000	                          call 0x4001aaf	      8358	reloc.c	FUNCTION_17	CALL_22
0x4001aaf	            0x31c0	                            xor eax, eax	      8359	reloc.c	FUNCTION_17
0x4001ab1	      0xe91afeffff	                           jmp 0x40018d0	      8359	reloc.c	FUNCTION_17
0x4001ab6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8359	reloc.c	FUNCTION_17
0x4001ac0	        0x498b5220	            mov rdx, qword [r10 + 0x20] 	      8359	reloc.c	FUNCTION_17
0x4001ac4	    0x4881fa000000	                              cmp rdx, 0	       653	reloc.c	FUNCTION_4	IF_4
0x4001acb	     0xf8587000000	                           jne 0x4001b58	       653	reloc.c	FUNCTION_4	IF_4
0x4001ad1	      0x807c244600	                cmp byte [rsp + 0x46], 0	       653	reloc.c	FUNCTION_4	IF_4
0x4001ad6	     0xf847c000000	                            je 0x4001b58	       653	reloc.c	FUNCTION_4	IF_4
0x4001adc	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       655	reloc.c	FUNCTION_4	IF_4
0x4001ae0	        0x48014508	                add qword [rbp + 8], rax	       655	reloc.c	FUNCTION_4	IF_4
0x4001ae4	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001ae8	            0x85c9	                           test ecx, ecx	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001aea	     0xf8504030000	                           jne 0x4001df4	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001af0	        0x4983c608	                              add r14, 8	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001af4	        0x49833e00	                      cmp qword [r14], 0	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001af8	     0xf8412070000	                            je 0x4002210	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001afe	    0x48c744245000	               mov qword [rsp + 0x50], 0	      8249	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001b07	          0x498b2e	                    mov rbp, qword [r14]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001b0a	        0x488b4500	                    mov rax, qword [rbp]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001b0e	          0x4c8b10	                    mov r10, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001b11	          0x4d85d2	                           test r10, r10	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001b14	     0xf856dfeffff	                           jne 0x4001987	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001b1a	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b1e	        0x488b6d08	                mov rbp, qword [rbp + 8]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b22	      0xba05000000	                              mov edx, 5	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4001b27	      0xbe00000000	                              mov esi, 0	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4001b2c	      0xbf00000000	                              mov edi, 0	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4001b31	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b35	      0xe800000000	                          call 0x4001b3a	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4001b3a	          0x4889e9	                            mov rcx, rbp	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b3d	          0x4889c7	                            mov rdi, rax	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b40	          0x4889da	                            mov rdx, rbx	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b43	      0x488b742408	                mov rsi, qword [rsp + 8]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b48	            0x31c0	                            xor eax, eax	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b4a	          0x41ffd4	                                call r12	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001b4d	      0xe953ffffff	                           jmp 0x4001aa5	      8262	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001b52	    0x660f1f440000	                    nop word [rax + rax]	      8262	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001b58	        0x488b4508	                mov rax, qword [rbp + 8]	       664	reloc.c	FUNCTION_4	CALL_4
0x4001b5c	          0x4c89ff	                            mov rdi, r15	       664	reloc.c	FUNCTION_4	CALL_4
0x4001b5f	      0x4c89542438	             mov qword [rsp + 0x38], r10	       664	reloc.c	FUNCTION_4	CALL_4
0x4001b64	      0x4889442420	             mov qword [rsp + 0x20], rax	       664	reloc.c	FUNCTION_4	CALL_4
0x4001b69	      0xe800000000	                          call 0x4001b6e	       664	reloc.c	FUNCTION_4	CALL_4
0x4001b6e	          0x4189c1	                            mov r9d, eax	       664	reloc.c	FUNCTION_4	CALL_4
0x4001b71	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b76	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b7b	    0x4c0faf4c2420	             imul r9, qword [rsp + 0x20]	       664	reloc.c	FUNCTION_4	CALL_4
0x4001b81	          0x83e018	                           and eax, 0x18	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b84	            0x3c10	                            cmp al, 0x10	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b86	            0x7409	                            je 0x4001b91	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b88	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b8c	          0x4885d2	                           test rdx, rdx	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b8f	            0x7504	                           jne 0x4001b95	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b91	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4001b95	      0x418b442408	                mov eax, dword [r12 + 8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001b9a	          0x83c002	                              add eax, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001b9d	          0x83f80a	                            cmp eax, 0xa	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001ba0	     0xf870a030000	                            ja 0x4001eb0	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001ba6	            0x89c1	                            mov ecx, eax	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001ba8	    0xff24cd000000	                       jmp qword [rcx*8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001baf	              0x90	                                     nop	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001bb0	    0x4881fa000000	                              cmp rdx, 0	       653	reloc.c	FUNCTION_4	IF_4
0x4001bb7	            0x750b	                           jne 0x4001bc4	       653	reloc.c	FUNCTION_4	IF_4
0x4001bb9	      0x807c244600	                cmp byte [rsp + 0x46], 0	       653	reloc.c	FUNCTION_4	IF_4
0x4001bbe	     0xf8518ffffff	                           jne 0x4001adc	       653	reloc.c	FUNCTION_4	IF_4
0x4001bc4	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001bc8	            0x85c0	                           test eax, eax	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001bca	            0x7424	                            je 0x4001bf0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001bcc	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001bd0	          0x498b3e	                    mov rdi, qword [r14]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001bd3	    0x8bb288000000	            mov esi, dword [rdx + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001bd9	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001be0	          0x4889f0	                            mov rax, rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001be3	        0x48893cf1	            mov qword [rcx + rsi*8], rdi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001be7	          0x83c001	                              add eax, 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001bea	    0x898288000000	             mov dword [rdx + 0x88], eax	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001bf0	          0x498b06	                    mov rax, qword [r14]	      8304	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bf3	        0x4d8b5520	            mov r10, qword [r13 + 0x20] 	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bf7	    0x41b901000000	                              mov r9d, 1	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001bfd	          0x4889d9	                            mov rcx, rbx	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c00	          0x4c89ef	                            mov rdi, r13	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c03	          0x488b10	                    mov rdx, qword [rax]	      8303	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_12
0x4001c06	        0x4c8b4008	                 mov r8, qword [rax + 8]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c0a	          0x488b12	                    mov rdx, qword [rdx]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c0d	        0x488b7208	                mov rsi, qword [rdx + 8]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c11	          0x4c89fa	                            mov rdx, r15	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c14	        0x41ff5230	                 call qword [r10 + 0x30]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c18	      0xe9d3feffff	                           jmp 0x4001af0	      8305	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c1d	           0xf1f00	                         nop dword [rax]	      8305	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001c20	      0x41f6421880	           test byte [r10 + 0x18], 0x80 	       631	reloc.c	FUNCTION_4	IF_1
0x4001c25	            0x750f	                           jne 0x4001c36	       631	reloc.c	FUNCTION_4	IF_1
0x4001c27	      0x807c244700	                cmp byte [rsp + 0x47], 0	       631	reloc.c	FUNCTION_4	IF_1
0x4001c2c	    0xc74424300800	               mov dword [rsp + 0x30], 8	       632	reloc.c	FUNCTION_4	IF_1
0x4001c34	            0x7508	                           jne 0x4001c3e	       631	reloc.c	FUNCTION_4	IF_1
0x4001c36	    0xc74424300200	               mov dword [rsp + 0x30], 2	       617	reloc.c	FUNCTION_4
0x4001c3e	          0x4d85e4	                           test r12, r12	       637	reloc.c	FUNCTION_4	IF_2
0x4001c41	     0xf858cfdffff	                           jne 0x40019d3	       637	reloc.c	FUNCTION_4	IF_2
0x4001c47	      0xe978ffffff	                           jmp 0x4001bc4	       637	reloc.c	FUNCTION_4	IF_2
0x4001c4c	         0xf1f4000	                         nop dword [rax]	       637	reloc.c	FUNCTION_4	IF_2
0x4001c50	         0xfb74224	           movzx eax, word [rdx + 0x24] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001c54	        0x66258003	                           and ax, 0x380	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001c58	        0x662d0001	                           sub ax, 0x100	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001c5c	        0x66a980fe	                         test ax, 0xfe80	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001c60	     0xf8441fdffff	                            je 0x40019a7	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001c66	        0x488b6d08	                mov rbp, qword [rbp + 8]	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001c6a	          0x4c89ff	                            mov rdi, r15	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001c6d	      0x4c8b642448	            mov r12, qword [rsp + 0x48] 	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001c72	      0xe800000000	                          call 0x4001c77	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001c77	            0x89c1	                            mov ecx, eax	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001c79	          0x498b06	                    mov rax, qword [r14]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001c7c	          0x4889da	                            mov rdx, rbx	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001c7f	        0x480fafe9	                           imul rbp, rcx	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001c83	          0x4c89fe	                            mov rsi, r15	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001c86	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001c8a	        0x498d0c2c	                    lea rcx, [r12 + rbp]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001c8e	      0xe800000000	                          call 0x4001c93	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001c93	          0x498b06	                    mov rax, qword [r14]	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001c96	    0x488b15000000	            mov rdx, qword [0x04001c9d] 	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001c9d	          0x488910	                    mov qword [rax], rdx	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001ca0	          0x498b06	                    mov rax, qword [r14]	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001ca3	    0x48c740100000	               mov qword [rax + 0x10], 0	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001cab	    0x48c740180000	               mov qword [rax + 0x18], 0	      8277	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001cb3	      0xe92cfeffff	                           jmp 0x4001ae4	      8266	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001cb8	     0xf1f84000000	                   nop dword [rax + rax]	      8266	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001cc0	        0x498b7220	            mov rsi, qword [r10 + 0x20] 	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4001cc4	          0x4531c0	                            xor r8d, r8d	       673	reloc.c	FUNCTION_4	IF_7
0x4001cc7	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4001ccb	     0xf845f010000	                            je 0x4001e30	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4001cd1	    0x48837c242800	               cmp qword [rsp + 0x28], 0	       680	reloc.c	FUNCTION_4	IF_8
0x4001cd7	            0x740c	                            je 0x4001ce5	       680	reloc.c	FUNCTION_4	IF_8
0x4001cd9	      0x458b542430	           mov r10d, dword [r12 + 0x30] 	       680	reloc.c	FUNCTION_4	IF_8
0x4001cde	            0x31ff	                            xor edi, edi	       682	reloc.c	FUNCTION_4	IF_8
0x4001ce0	          0x4585d2	                         test r10d, r10d	       680	reloc.c	FUNCTION_4	IF_8
0x4001ce3	            0x7411	                            je 0x4001cf6	       680	reloc.c	FUNCTION_4	IF_8
0x4001ce5	        0x488b5668	            mov rdx, qword [rsi + 0x68] 	       677	reloc.c	FUNCTION_4
0x4001ce9	          0x4885d2	                           test rdx, rdx	       681	reloc.c	FUNCTION_4	IF_8
0x4001cec	     0xf848c050000	                            je 0x400227e	       681	reloc.c	FUNCTION_4	IF_8
0x4001cf2	        0x488b7a28	            mov rdi, qword [rdx + 0x28] 	       684	reloc.c	FUNCTION_4	ELSE_2
0x4001cf6	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       689	reloc.c	FUNCTION_4	ELSE_2
0x4001cfa	          0x4889d1	                            mov rcx, rdx	       689	reloc.c	FUNCTION_4	ELSE_2
0x4001cfd	        0x48034e60	             add rcx, qword [rsi + 0x60]	       689	reloc.c	FUNCTION_4	ELSE_2
0x4001d01	          0x4c01c1	                             add rcx, r8	       689	reloc.c	FUNCTION_4	ELSE_2
0x4001d04	        0x4c8d140f	                    lea r10, [rdi + rcx]	       689	reloc.c	FUNCTION_4	ELSE_2
0x4001d08	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4001d0d	            0x85ff	                           test edi, edi	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4001d0f	            0x741f	                            je 0x4001d30	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4001d11	        0x488b7368	            mov rsi, qword [rbx + 0x68] 	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4001d15	          0x4c89d1	                            mov rcx, r10	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4001d18	        0x482b4b60	             sub rcx, qword [rbx + 0x60]	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4001d1c	        0x482b4e28	             sub rcx, qword [rsi + 0x28]	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4001d20	      0x418b742448	            mov esi, dword [r12 + 0x48] 	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x4001d25	            0x85f6	                           test esi, esi	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x4001d27	          0x4989ca	                            mov r10, rcx	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x4001d2a	            0x7404	                            je 0x4001d30	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x4001d2c	        0x4c2b5508	                sub r10, qword [rbp + 8]	       728	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x4001d30	    0x48837c242800	               cmp qword [rsp + 0x28], 0	       731	reloc.c	FUNCTION_4	IF_11
0x4001d36	            0x7427	                            je 0x4001d5f	       731	reloc.c	FUNCTION_4	IF_11
0x4001d38	      0x418b4c2430	            mov ecx, dword [r12 + 0x30] 	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001d3d	            0x85c9	                           test ecx, ecx	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001d3f	     0xf844b010000	                            je 0x4001e90	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001d45	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4001d49	        0x48014d08	                add qword [rbp + 8], rcx	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4001d4d	        0x498b4f08	                mov rcx, qword [r15 + 8]	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4001d51	        0x83790802	                  cmp dword [rcx + 8], 2	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4001d55	     0xf84cd040000	                            je 0x4002228	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4001d5b	        0x4c895510	            mov qword [rbp + 0x10], r10 	       831	reloc.c	FUNCTION_4	IF_11	ELSE_3	ELSE_4
0x4001d5f	      0x418b542418	            mov edx, dword [r12 + 0x18] 	       844	reloc.c	FUNCTION_4	IF_14
0x4001d64	            0x85d2	                           test edx, edx	       844	reloc.c	FUNCTION_4	IF_14
0x4001d66	            0x740b	                            je 0x4001d73	       844	reloc.c	FUNCTION_4	IF_14
0x4001d68	      0x837c243002	               cmp dword [rsp + 0x30], 2	       844	reloc.c	FUNCTION_4	IF_14
0x4001d6d	     0xf8412050000	                            je 0x4002285	       844	reloc.c	FUNCTION_4	IF_14
0x4001d73	      0x418b4c2404	                mov ecx, dword [r12 + 4]	       878	reloc.c	FUNCTION_4
0x4001d78	          0x4c89d2	                            mov rdx, r10	       878	reloc.c	FUNCTION_4
0x4001d7b	          0x48d3ea	                             shr rdx, cl	       878	reloc.c	FUNCTION_4
0x4001d7e	      0x418b4c2414	            mov ecx, dword [r12 + 0x14] 	       881	reloc.c	FUNCTION_4
0x4001d83	          0x48d3e2	                             shl rdx, cl	       881	reloc.c	FUNCTION_4
0x4001d86	          0x83f807	                              cmp eax, 7	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4001d89	          0x4889d1	                            mov rcx, rdx	       881	reloc.c	FUNCTION_4
0x4001d8c	     0xf8704040000	                            ja 0x4002196	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4001d92	    0xff24c5000000	                       jmp qword [rax*8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4001d99	      0x4c034c2410	              add r9, qword [rsp + 0x10]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x4001d9e	        0x410fb611	                    movzx edx, byte [r9]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x4001da2	            0x89d0	                            mov eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4001da4	      0x4122442438	               and al, byte [r12 + 0x38]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4001da9	             0x1c8	                            add eax, ecx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4001dab	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4001dad	      0x4122442440	               and al, byte [r12 + 0x40]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4001db2	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4001db4	          0x418801	                       mov byte [r9], al	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4001db7	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001dbc	          0x4585d2	                         test r10d, r10d	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001dbf	     0xf842bfdffff	                            je 0x4001af0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001dc5	    0x41b802000000	                              mov r8d, 2	       496	reloc.c	FUNCTION_2
0x4001dcb	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001dcf	          0x498b3e	                    mov rdi, qword [r14]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001dd2	    0x8bb288000000	            mov esi, dword [rdx + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001dd8	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001ddf	          0x4889f0	                            mov rax, rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001de2	        0x48893cf1	            mov qword [rcx + rsi*8], rdi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001de6	          0x83c001	                              add eax, 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001de9	    0x898288000000	             mov dword [rdx + 0x88], eax	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001def	      0xe936fcffff	                           jmp 0x4001a2a	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001df4	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001df8	          0x498b3e	                    mov rdi, qword [r14]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001dfb	    0x8bb288000000	            mov esi, dword [rdx + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e01	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e08	          0x4889f0	                            mov rax, rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e0b	        0x48893cf1	            mov qword [rcx + rsi*8], rdi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e0f	          0x83c001	                              add eax, 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e12	    0x898288000000	             mov dword [rdx + 0x88], eax	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e18	      0xe9d3fcffff	                           jmp 0x4001af0	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e1d	           0xf1f00	                         nop dword [rax]	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e20	      0xb904000000	                              mov ecx, 4	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e25	      0xe92bfcffff	                           jmp 0x4001a55	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e2a	    0x660f1f440000	                    nop word [rax + rax]	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001e30	        0x4d8b4210	              mov r8, qword [r10 + 0x10]	       675	reloc.c	FUNCTION_4	ELSE_1
0x4001e34	      0xe998feffff	                           jmp 0x4001cd1	       675	reloc.c	FUNCTION_4	ELSE_1
0x4001e39	     0xf1f80000000	                         nop dword [rax]	       675	reloc.c	FUNCTION_4	ELSE_1
0x4001e40	      0xb903000000	                              mov ecx, 3	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e45	      0xe90bfcffff	                           jmp 0x4001a55	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e4a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e50	      0xb901000000	                              mov ecx, 1	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e55	      0xe9fbfbffff	                           jmp 0x4001a55	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e5a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e60	      0xb910000000	                           mov ecx, 0x10	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e65	      0xe9ebfbffff	                           jmp 0x4001a55	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e6a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e70	      0xb908000000	                              mov ecx, 8	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e75	      0xe9dbfbffff	                           jmp 0x4001a55	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e7a	    0x660f1f440000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e80	            0x31c9	                            xor ecx, ecx	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e82	      0xe9cefbffff	                           jmp 0x4001a55	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e87	    0x660f1f840000	                    nop word [rax + rax]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4001e90	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001e94	        0x4c895510	            mov qword [rbp + 0x10], r10 	       738	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001e98	        0x48014508	                add qword [rbp + 8], rax	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001e9c	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001ea1	      0xe976fbffff	                           jmp 0x4001a1c	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001ea6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4001eb0	      0xba00000000	                              mov edx, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4001eb5	      0xbebb010000	                          mov esi, 0x1bb	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4001eba	      0xbf00000000	                              mov edi, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4001ebf	      0xe800000000	                          call 0x4001ec4	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4001ec4	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4001ec9	      0xe94efbffff	                           jmp 0x4001a1c	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4001ece	    0xc74424300200	               mov dword [rsp + 0x30], 2	       496	reloc.c	FUNCTION_2
0x4001ed6	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4001edb	        0x498b4708	                mov rax, qword [r15 + 8]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4001edf	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4001ee4	          0x4c01cd	                             add rbp, r9	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4001ee7	          0x4889ef	                            mov rdi, rbp	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4001eea	          0xff5038	                 call qword [rax + 0x38]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4001eed	          0x4889c2	                            mov rdx, rax	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4001ef0	      0x4923542438	             and rdx, qword [r12 + 0x38]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4001ef5	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4001efa	          0x4801ca	                            add rdx, rcx	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x4001efd	          0x4831c2	                            xor rdx, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f00	      0x4923542440	             and rdx, qword [r12 + 0x40]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f05	          0x4889ee	                            mov rsi, rbp	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f08	          0x4889d7	                            mov rdi, rdx	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f0b	          0x4831c7	                            xor rdi, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f0e	        0x498b4708	                mov rax, qword [r15 + 8]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f12	          0xff5048	                 call qword [rax + 0x48]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f15	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f1a	      0xe9fdfaffff	                           jmp 0x4001a1c	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001f1f	    0xc74424300200	               mov dword [rsp + 0x30], 2	       496	reloc.c	FUNCTION_2
0x4001f27	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4001f2c	        0x498b4708	                mov rax, qword [r15 + 8]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4001f30	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4001f35	          0x4c01cd	                             add rbp, r9	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4001f38	          0x4889ef	                            mov rdi, rbp	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4001f3b	          0xff5050	                 call qword [rax + 0x50]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4001f3e	            0x89c7	                            mov edi, eax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f40	    0x6641237c2438	               and di, word [r12 + 0x38]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f46	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f4b	          0x4889ee	                            mov rsi, rbp	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f4e	             0x1cf	                            add edi, ecx	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f50	            0x31c7	                            xor edi, eax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f52	    0x6641237c2440	               and di, word [r12 + 0x40]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f58	            0x31f8	                            xor eax, edi	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f5a	        0x480fbff8	                           movsx rdi, ax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f5e	        0x498b4708	                mov rax, qword [r15 + 8]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f62	          0xff5060	                 call qword [rax + 0x60]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f65	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f6a	      0xe9adfaffff	                           jmp 0x4001a1c	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4001f6f	    0xc74424300200	               mov dword [rsp + 0x30], 2	       496	reloc.c	FUNCTION_2
0x4001f77	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4001f7c	        0x498b4708	                mov rax, qword [r15 + 8]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4001f80	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4001f85	          0x4c01cd	                             add rbp, r9	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4001f88	          0x4889ef	                            mov rdi, rbp	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4001f8b	          0xff5050	                 call qword [rax + 0x50]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4001f8e	          0x4889c2	                            mov rdx, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001f91	      0x4923542438	             and rdx, qword [r12 + 0x38]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001f96	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001f9b	          0x4889ee	                            mov rsi, rbp	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001f9e	          0x4829ca	                            sub rdx, rcx	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001fa1	          0x4831c2	                            xor rdx, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001fa4	      0x4923542440	             and rdx, qword [r12 + 0x40]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001fa9	          0x4889d7	                            mov rdi, rdx	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001fac	          0x4831c7	                            xor rdi, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001faf	        0x498b4708	                mov rax, qword [r15 + 8]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001fb3	          0xff5060	                 call qword [rax + 0x60]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001fb6	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001fbb	      0xe95cfaffff	                           jmp 0x4001a1c	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4001fc0	    0xc74424300200	               mov dword [rsp + 0x30], 2	       496	reloc.c	FUNCTION_2
0x4001fc8	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4001fcd	        0x498b4708	                mov rax, qword [r15 + 8]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4001fd1	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4001fd6	          0x4c01cd	                             add rbp, r9	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4001fd9	          0x4889ef	                            mov rdi, rbp	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4001fdc	          0xff5038	                 call qword [rax + 0x38]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x4001fdf	          0x4889c2	                            mov rdx, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001fe2	      0x4923542438	             and rdx, qword [r12 + 0x38]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001fe7	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001fec	          0x4829ca	                            sub rdx, rcx	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001fef	      0xe909ffffff	                           jmp 0x4001efd	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x4001ff4	    0xc74424300200	               mov dword [rsp + 0x30], 2	       496	reloc.c	FUNCTION_2
0x4001ffc	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4002001	        0x498b4708	                mov rax, qword [r15 + 8]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4002005	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x400200a	          0x4c01cd	                             add rbp, r9	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x400200d	          0x4889ef	                            mov rdi, rbp	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4002010	          0xff5020	                 call qword [rax + 0x20]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4002013	          0x4889c2	                            mov rdx, rax	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4002016	      0x4923542438	             and rdx, qword [r12 + 0x38]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x400201b	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4002020	          0x4889ee	                            mov rsi, rbp	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4002023	          0x4801ca	                            add rdx, rcx	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4002026	          0x4831c2	                            xor rdx, rax	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4002029	      0x4923542440	             and rdx, qword [r12 + 0x40]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x400202e	          0x4831d0	                            xor rax, rdx	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4002031	          0x4889c7	                            mov rdi, rax	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4002034	        0x498b4708	                mov rax, qword [r15 + 8]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4002038	          0xff5030	                 call qword [rax + 0x30]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x400203b	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4002040	      0xe9d7f9ffff	                           jmp 0x4001a1c	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4002045	    0xc74424300200	               mov dword [rsp + 0x30], 2	       496	reloc.c	FUNCTION_2
0x400204d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4002052	      0x4c894c2420	              mov qword [rsp + 0x20], r9	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4002057	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400205c	        0x4a8d2c08	                     lea rbp, [rax + r9]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4002060	        0x498b4708	                mov rax, qword [r15 + 8]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4002064	          0x4889ef	                            mov rdi, rbp	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4002067	          0xff5038	                 call qword [rax + 0x38]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400206a	        0x48c1f808	                              sar rax, 8	       925	reloc.c	FUNCTION_4	SWITCH_1
0x400206e	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4002073	          0x4889ee	                            mov rsi, rbp	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x4002076	          0x4889c2	                            mov rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4002079	      0x4923542438	             and rdx, qword [r12 + 0x38]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x400207e	          0x4801ca	                            add rdx, rcx	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4002081	          0x4831c2	                            xor rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4002084	      0x4923542440	             and rdx, qword [r12 + 0x40]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4002089	          0x4831c2	                            xor rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x400208c	        0x498b4708	                mov rax, qword [r15 + 8]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x4002090	          0x4889d7	                            mov rdi, rdx	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x4002093	          0x4989d4	                            mov r12, rdx	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4002096	        0x48c1ff08	                              sar rdi, 8	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x400209a	          0xff5060	                 call qword [rax + 0x60]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x400209d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40020a2	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40020a7	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40020ac	      0x4688640802	           mov byte [rax + r9 + 2], r12b	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40020b1	      0xe966f9ffff	                           jmp 0x4001a1c	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40020b6	    0xc74424300300	               mov dword [rsp + 0x30], 3	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x40020be	      0x4c034c2410	              add r9, qword [rsp + 0x10]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x40020c3	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020c8	        0x410fb611	                    movzx edx, byte [r9]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x40020cc	            0x89d0	                            mov eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020ce	      0x4122442438	               and al, byte [r12 + 0x38]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020d3	             0x1c8	                            add eax, ecx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020d5	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020d7	      0x4122442440	               and al, byte [r12 + 0x40]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020dc	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020de	          0x418801	                       mov byte [r9], al	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020e1	      0xe936f9ffff	                           jmp 0x4001a1c	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40020f0	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x40020f5	          0x4885f6	                           test rsi, rsi	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x40020f8	     0xf8467010000	                            je 0x4002265	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x40020fe	          0x498b16	                    mov rdx, qword [r14]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002101	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002105	          0x4889d9	                            mov rcx, rbx	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002108	          0x4c89ef	                            mov rdi, r13	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400210b	        0x4c8b4208	                 mov r8, qword [rdx + 8]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400210f	          0x4c89fa	                            mov rdx, r15	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002112	          0xff5040	                 call qword [rax + 0x40]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002115	      0xe9d6f9ffff	                           jmp 0x4001af0	      8311	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400211a	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400211e	          0x4d8b26	                    mov r12, qword [r14]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4002121	      0xba05000000	                              mov edx, 5	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4002126	      0xbe00000000	                              mov esi, 0	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x400212b	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400212f	      0xe955f9ffff	                           jmp 0x4001a89	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4002134	      0x448b5c2440	           mov r11d, dword [rsp + 0x40] 	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002139	          0x4585db	                         test r11d, r11d	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400213c	            0x7424	                            je 0x4002162	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400213e	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002142	          0x498b3e	                    mov rdi, qword [r14]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002145	    0x8bb288000000	            mov esi, dword [rdx + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400214b	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002152	          0x4889f0	                            mov rax, rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002155	        0x48893cf1	            mov qword [rcx + rsi*8], rdi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002159	          0x83c001	                              add eax, 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400215c	    0x898288000000	             mov dword [rdx + 0x88], eax	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002162	          0x498b06	                    mov rax, qword [r14]	      8317	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002165	        0x4d8b5520	            mov r10, qword [r13 + 0x20] 	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002169	            0x31f6	                            xor esi, esi	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400216b	          0x4c89ef	                            mov rdi, r13	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400216e	          0x4d89f9	                             mov r9, r15	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002171	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002175	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002179	          0x488b10	                    mov rdx, qword [rax]	      8315	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_14
0x400217c	          0x488b12	                    mov rdx, qword [rdx]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400217f	        0x488b5208	                mov rdx, qword [rdx + 8]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002183	          0xff7008	                    push qword [rax + 8]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002186	              0x53	                                push rbx	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002187	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400218b	        0x41ff5238	                 call qword [r10 + 0x38]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400218f	              0x5e	                                 pop rsi	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002190	              0x5f	                                 pop rdi	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002191	      0xe95af9ffff	                           jmp 0x4001af0	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002196	        0x8b542440	            mov edx, dword [rsp + 0x40] 	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400219a	    0x41b807000000	                              mov r8d, 7	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021a0	            0x85d2	                           test edx, edx	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021a2	            0x7424	                            je 0x40021c8	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021a4	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021a8	          0x498b3e	                    mov rdi, qword [r14]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021ab	    0x8bb288000000	            mov esi, dword [rdx + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021b1	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021b8	          0x4889f0	                            mov rax, rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021bb	        0x48893cf1	            mov qword [rcx + rsi*8], rdi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021bf	          0x83c001	                              add eax, 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021c2	    0x898288000000	             mov dword [rdx + 0x88], eax	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40021c8	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x40021cc	          0x4d8b26	                    mov r12, qword [r14]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x40021cf	      0xba05000000	                              mov edx, 5	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x40021d4	      0xbe00000000	                              mov esi, 0	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x40021d9	      0xbf00000000	                              mov edi, 0	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x40021de	      0x4489442410	             mov dword [rsp + 0x10], r8d	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x40021e3	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x40021e7	      0xe800000000	                          call 0x40021ec	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x40021ec	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x40021f1	          0x4889c7	                            mov rdi, rax	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x40021f4	          0x4c89e1	                            mov rcx, r12	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x40021f7	          0x4889da	                            mov rdx, rbx	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x40021fa	      0x488b742408	                mov rsi, qword [rsp + 8]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x40021ff	            0x31c0	                            xor eax, eax	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4002201	            0xffd5	                                call rbp	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4002203	      0xe9e8f8ffff	                           jmp 0x4001af0	      8347	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002208	     0xf1f84000000	                   nop dword [rax + rax]	      8347	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4002210	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8354	reloc.c	FUNCTION_17	CALL_21
0x4002215	      0xe800000000	                          call 0x400221a	      8354	reloc.c	FUNCTION_17	CALL_21
0x400221a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      8355	reloc.c	FUNCTION_17
0x400221f	      0xe9acf6ffff	                           jmp 0x40018d0	      8355	reloc.c	FUNCTION_17
0x4002224	         0xf1f4000	                         nop dword [rax]	      8355	reloc.c	FUNCTION_17
0x4002228	          0x4c8b01	                     mov r8, qword [rcx]	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400222b	      0xbf00000000	                              mov edi, 0	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4002230	      0xb912000000	                           mov ecx, 0x12	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4002235	          0x4c89c6	                             mov rsi, r8	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4002238	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400223a	     0xf841bfbffff	                            je 0x4001d5b	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4002240	      0xbf00000000	                              mov edi, 0	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4002245	      0xb90f000000	                            mov ecx, 0xf	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400224a	          0x4c89c6	                             mov rsi, r8	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400224d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400224f	     0xf8406fbffff	                            je 0x4001d5b	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4002255	          0x4929d2	                            sub r10, rdx	       826	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4002258	    0x48c745100000	               mov qword [rbp + 0x10], 0	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4002260	      0xe9fafaffff	                           jmp 0x4001d5f	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4002265	      0xbe73200000	                         mov esi, 0x2073	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x400226a	      0xbf00000000	                              mov edi, 0	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x400226f	      0xe800000000	                          call 0x4002274	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4002274	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4002279	      0xe980feffff	                           jmp 0x40020fe	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x400227e	            0x31ff	                            xor edi, edi	       682	reloc.c	FUNCTION_4	IF_8
0x4002280	      0xe971faffff	                           jmp 0x4001cf6	       682	reloc.c	FUNCTION_4	IF_8
0x4002285	          0x4c89ff	                            mov rdi, r15	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4002288	      0x4c89542430	             mov qword [rsp + 0x30], r10	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400228d	      0x4c894c2420	              mov qword [rsp + 0x20], r9	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4002292	      0xe800000000	                          call 0x4002297	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4002297	      0x418b7c240c	              mov edi, dword [r12 + 0xc]	       502	reloc.c	FUNCTION_2
0x400229c	      0x418b742404	                mov esi, dword [r12 + 4]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x40022a1	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	       505	reloc.c	FUNCTION_2
0x40022a6	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40022ab	          0x8d4fff	                      lea ecx, [rdi - 1]	       502	reloc.c	FUNCTION_2
0x40022ae	      0xbf01000000	                              mov edi, 1	       502	reloc.c	FUNCTION_2
0x40022b3	          0x4889fa	                            mov rdx, rdi	       502	reloc.c	FUNCTION_2
0x40022b6	          0x48d3e2	                             shl rdx, cl	       502	reloc.c	FUNCTION_2
0x40022b9	          0x8d48ff	                      lea ecx, [rax - 1]	       504	reloc.c	FUNCTION_2
0x40022bc	      0x488d5412fe	                lea rdx, [rdx + rdx - 2]	       502	reloc.c	FUNCTION_2
0x40022c1	          0x48d3e7	                             shl rdi, cl	       504	reloc.c	FUNCTION_2
0x40022c4	            0x89f1	                            mov ecx, esi	       504	reloc.c	FUNCTION_2
0x40022c6	        0x4883ca01	                               or rdx, 1	       502	reloc.c	FUNCTION_2
0x40022ca	      0x488d7c3ffe	                lea rdi, [rdi + rdi - 2]	       504	reloc.c	FUNCTION_2
0x40022cf	          0x4889d0	                            mov rax, rdx	       504	reloc.c	FUNCTION_2
0x40022d2	          0x4989d0	                             mov r8, rdx	       503	reloc.c	FUNCTION_2
0x40022d5	          0x48d3e0	                             shl rax, cl	       504	reloc.c	FUNCTION_2
0x40022d8	          0x49f7d0	                                  not r8	       503	reloc.c	FUNCTION_2
0x40022db	        0x4883c801	                               or rax, 1	       504	reloc.c	FUNCTION_2
0x40022df	          0x4809f8	                             or rax, rdi	       504	reloc.c	FUNCTION_2
0x40022e2	          0x4c89d7	                            mov rdi, r10	       505	reloc.c	FUNCTION_2
0x40022e5	          0x4821c7	                            and rdi, rax	       505	reloc.c	FUNCTION_2
0x40022e8	          0x48d3ef	                             shr rdi, cl	       505	reloc.c	FUNCTION_2
0x40022eb	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40022f0	          0x83f901	                              cmp ecx, 1	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40022f3	            0x7451	                            je 0x4002346	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40022f5	     0xf8255010000	                            jb 0x4002450	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40022fb	          0x83f902	                              cmp ecx, 2	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40022fe	            0x743d	                            je 0x400233d	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4002300	          0x83f903	                              cmp ecx, 3	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4002303	     0xf8572010000	                           jne 0x400247b	       507	reloc.c	FUNCTION_2	SWITCH_1
0x4002309	          0x4985f8	                            test r8, rdi	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x400230c	     0xf847d010000	                            je 0x400248f	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002312	            0x89f1	                            mov ecx, esi	       878	reloc.c	FUNCTION_4
0x4002314	          0x4c89d0	                            mov rax, r10	       878	reloc.c	FUNCTION_4
0x4002317	          0x48d3e8	                             shr rax, cl	       878	reloc.c	FUNCTION_4
0x400231a	      0x418b4c2414	            mov ecx, dword [r12 + 0x14] 	       881	reloc.c	FUNCTION_4
0x400231f	          0x48d3e0	                             shl rax, cl	       881	reloc.c	FUNCTION_4
0x4002322	          0x4889c1	                            mov rcx, rax	       881	reloc.c	FUNCTION_4
0x4002325	      0x418b442408	                mov eax, dword [r12 + 8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400232a	          0x83c002	                              add eax, 2	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400232d	          0x83f807	                              cmp eax, 7	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4002330	     0xf8760feffff	                            ja 0x4002196	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4002336	    0xff24c5000000	                       jmp qword [rax*8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400233d	          0x48d1ea	                              shr rdx, 1	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4002340	          0x48f7d2	                                 not rdx	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4002343	          0x4989d0	                             mov r8, rdx	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4002346	          0x4c21c7	                             and rdi, r8	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4002349	     0xf8401010000	                            je 0x4002450	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400234f	            0x89f1	                            mov ecx, esi	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4002351	          0x48d3e8	                             shr rax, cl	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4002354	          0x4921c0	                             and r8, rax	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4002357	          0x4c39c7	                             cmp rdi, r8	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400235a	     0xf842f010000	                            je 0x400248f	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4002360	            0x89f1	                            mov ecx, esi	       878	reloc.c	FUNCTION_4
0x4002362	          0x4c89d0	                            mov rax, r10	       878	reloc.c	FUNCTION_4
0x4002365	          0x48d3e8	                             shr rax, cl	       878	reloc.c	FUNCTION_4
0x4002368	      0x418b4c2414	            mov ecx, dword [r12 + 0x14] 	       881	reloc.c	FUNCTION_4
0x400236d	          0x48d3e0	                             shl rax, cl	       881	reloc.c	FUNCTION_4
0x4002370	          0x4889c1	                            mov rcx, rax	       881	reloc.c	FUNCTION_4
0x4002373	      0x418b442408	                mov eax, dword [r12 + 8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4002378	          0x83c002	                              add eax, 2	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400237b	          0x83f807	                              cmp eax, 7	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400237e	     0xf8712feffff	                            ja 0x4002196	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4002384	    0xff24c5000000	                       jmp qword [rax*8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400238b	       0xf1f440000	                   nop dword [rax + rax]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4002390	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x4002395	      0x4c894c2420	              mov qword [rsp + 0x20], r9	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400239a	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x400239f	        0x4a8d2c08	                     lea rbp, [rax + r9]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40023a3	        0x498b4708	                mov rax, qword [r15 + 8]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40023a7	          0x4889ef	                            mov rdi, rbp	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40023aa	          0xff5038	                 call qword [rax + 0x38]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40023ad	        0x48c1f808	                              sar rax, 8	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023b1	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023b6	          0x4889ee	                            mov rsi, rbp	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40023b9	          0x4889c2	                            mov rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023bc	      0x4923542438	             and rdx, qword [r12 + 0x38]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023c1	          0x4801ca	                            add rdx, rcx	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023c4	          0x4831c2	                            xor rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023c7	      0x4923542440	             and rdx, qword [r12 + 0x40]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023cc	          0x4831c2	                            xor rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023cf	        0x498b4708	                mov rax, qword [r15 + 8]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40023d3	          0x4889d7	                            mov rdi, rdx	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40023d6	          0x4989d4	                            mov r12, rdx	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40023d9	        0x48c1ff08	                              sar rdi, 8	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40023dd	          0xff5060	                 call qword [rax + 0x60]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x40023e0	        0x8b6c2440	            mov ebp, dword [rsp + 0x40] 	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40023e4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40023e9	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40023ee	            0x85ed	                           test ebp, ebp	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40023f0	      0x4688640802	           mov byte [rax + r9 + 2], r12b	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x40023f5	     0xf8467fdffff	                            je 0x4002162	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40023fb	    0x41b803000000	                              mov r8d, 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002401	      0xe9c5f9ffff	                           jmp 0x4001dcb	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002406	    0xc74424300300	               mov dword [rsp + 0x30], 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x400240e	      0xe964fbffff	                           jmp 0x4001f77	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002413	    0xc74424300300	               mov dword [rsp + 0x30], 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x400241b	      0xe9dcfbffff	                           jmp 0x4001ffc	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002420	    0xc74424300300	               mov dword [rsp + 0x30], 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002428	      0xe9a9faffff	                           jmp 0x4001ed6	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x400242d	    0xc74424300300	               mov dword [rsp + 0x30], 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002435	      0xe9edfaffff	                           jmp 0x4001f27	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x400243a	    0xc74424300300	               mov dword [rsp + 0x30], 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002442	      0xe981fbffff	                           jmp 0x4001fc8	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002447	    0x660f1f840000	                    nop word [rax + rax]	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4002450	            0x89f1	                            mov ecx, esi	       878	reloc.c	FUNCTION_4
0x4002452	          0x4c89d0	                            mov rax, r10	       878	reloc.c	FUNCTION_4
0x4002455	          0x48d3e8	                             shr rax, cl	       878	reloc.c	FUNCTION_4
0x4002458	      0x418b4c2414	            mov ecx, dword [r12 + 0x14] 	       881	reloc.c	FUNCTION_4
0x400245d	          0x48d3e0	                             shl rax, cl	       881	reloc.c	FUNCTION_4
0x4002460	          0x4889c1	                            mov rcx, rax	       881	reloc.c	FUNCTION_4
0x4002463	      0x418b442408	                mov eax, dword [r12 + 8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4002468	          0x83c002	                              add eax, 2	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400246b	          0x83f807	                              cmp eax, 7	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400246e	     0xf8722fdffff	                            ja 0x4002196	       919	reloc.c	FUNCTION_4	SWITCH_1
0x4002474	    0xff24c5000000	                       jmp qword [rax*8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x400247b	      0xba00000000	                              mov edx, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4002480	      0xbe18020000	                          mov esi, 0x218	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4002485	      0xbf00000000	                              mov edi, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x400248a	      0xe800000000	                          call 0x400248f	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x400248f	            0x89f1	                            mov ecx, esi	       878	reloc.c	FUNCTION_4
0x4002491	          0x4c89d0	                            mov rax, r10	       878	reloc.c	FUNCTION_4
0x4002494	          0x48d3e8	                             shr rax, cl	       878	reloc.c	FUNCTION_4
0x4002497	      0x418b4c2414	            mov ecx, dword [r12 + 0x14] 	       881	reloc.c	FUNCTION_4
0x400249c	          0x48d3e0	                             shl rax, cl	       881	reloc.c	FUNCTION_4
0x400249f	          0x4889c1	                            mov rcx, rax	       881	reloc.c	FUNCTION_4
0x40024a2	      0x418b442408	                mov eax, dword [r12 + 8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40024a7	          0x83c002	                              add eax, 2	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40024aa	          0x83f807	                              cmp eax, 7	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40024ad	     0xf87e3fcffff	                            ja 0x4002196	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40024b3	    0xff24c5000000	                       jmp qword [rax*8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40024ba	      0x4c034c2410	              add r9, qword [rsp + 0x10]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x40024bf	        0x410fb611	                    movzx edx, byte [r9]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x40024c3	            0x89d0	                            mov eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40024c5	      0x4123442438	             and eax, dword [r12 + 0x38]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40024ca	             0x1c8	                            add eax, ecx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40024cc	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40024ce	      0x4123442440	             and eax, dword [r12 + 0x40]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40024d3	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40024d5	          0x418801	                       mov byte [r9], al	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x40024d8	      0x837c244000	               cmp dword [rsp + 0x40], 0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40024dd	     0xf85e2f8ffff	                           jne 0x4001dc5	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40024e3	      0xe908f6ffff	                           jmp 0x4001af0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40024e8	      0xe800000000	                          call 0x40024ed	      8360	reloc.c	FUNCTION_17
0x40024ed	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40024f1	          0x498b3e	                    mov rdi, qword [r14]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40024f4	    0x8bb288000000	            mov esi, dword [rdx + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40024fa	    0x488b8a800000	            mov rcx, qword [rdx + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002501	          0x4889f0	                            mov rax, rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002504	        0x48893cf1	            mov qword [rcx + rsi*8], rdi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002508	          0x83c001	                              add eax, 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400250b	    0x898288000000	             mov dword [rdx + 0x88], eax	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002511	      0xe95ef5ffff	                           jmp 0x4001a74	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002516	      0x4c034c2410	              add r9, qword [rsp + 0x10]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x400251b	        0x410fb611	                    movzx edx, byte [r9]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x400251f	            0x89d0	                            mov eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4002521	      0x4123442438	             and eax, dword [r12 + 0x38]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4002526	             0x1c8	                            add eax, ecx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4002528	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400252a	      0x4123442440	             and eax, dword [r12 + 0x40]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400252f	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4002531	      0x837c244000	               cmp dword [rsp + 0x40], 0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002536	          0x418801	                       mov byte [r9], al	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4002539	     0xf85bcfeffff	                           jne 0x40023fb	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x400253f	      0xe91efcffff	                           jmp 0x4002162	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4002544	    0xc74424300300	               mov dword [rsp + 0x30], 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x400254c	      0xe9fcfaffff	                           jmp 0x400204d	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
_bfd_norelocs_bfd_reloc_name_lookup	DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0:CALL,1:functions,0	1
0x40025f0	      0xe900000000	                           jmp 0x40025f5	      8430	reloc.c	FUNCTION_21	CALL_1
bfd_generic_lookup_section_flags	DO,0:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0:CALL,2:functions,0	16
0x4001800	          0x4885f6	                           test rsi, rsi	      8157	reloc.c	FUNCTION_15	IF_1
0x4001803	            0x742b	                            je 0x4001830	      8157	reloc.c	FUNCTION_15	IF_1
0x4001805	        0x4883ec08	                              sub rsp, 8	      8156	reloc.c	FUNCTION_15
0x4001809	      0xba05000000	                              mov edx, 5	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x400180e	      0xbe00000000	                              mov esi, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4001813	      0xbf00000000	                              mov edi, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4001818	      0xe800000000	                          call 0x400181d	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x400181d	          0x4889c7	                            mov rdi, rax	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4001820	            0x31c0	                            xor eax, eax	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4001822	      0xe800000000	                          call 0x4001827	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4001827	            0x31c0	                            xor eax, eax	      8160	reloc.c	FUNCTION_15	IF_1
0x4001829	        0x4883c408	                              add rsp, 8	      8163	reloc.c	FUNCTION_15
0x400182d	              0xc3	                                     ret	      8163	reloc.c	FUNCTION_15
0x400182e	            0x6690	                                     nop	      8163	reloc.c	FUNCTION_15
0x4001830	      0xb801000000	                              mov eax, 1	      8163	reloc.c	FUNCTION_15
0x4001835	              0xc3	                                     ret	      8163	reloc.c	FUNCTION_15
