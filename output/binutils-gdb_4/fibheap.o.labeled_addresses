fibheap_min	functions,0:IF,1:CALL,0:WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0	8
0x4000440	        0x488b4708	                mov rax, qword [rdi + 8]	       127	fibheap.c	FUNCTION_6	IF_1
0x4000444	          0x4885c0	                           test rax, rax	       127	fibheap.c	FUNCTION_6	IF_1
0x4000447	            0x7407	                            je 0x4000450	       127	fibheap.c	FUNCTION_6	IF_1
0x4000449	        0x488b4028	            mov rax, qword [rax + 0x28] 	       129	fibheap.c	FUNCTION_6
0x400044d	              0xc3	                                     ret	       129	fibheap.c	FUNCTION_6
0x400044e	            0x6690	                                     nop	       129	fibheap.c	FUNCTION_6
0x4000450	            0x31c0	                            xor eax, eax	       128	fibheap.c	FUNCTION_6	IF_1
0x4000452	              0xc3	                                     ret	       130	fibheap.c	FUNCTION_6
fibheap_replace_data	functions,0:IF,0:CALL,1:WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0	125
0x4000770	        0x488b4628	            mov rax, qword [rsi + 0x28] 	       211	fibheap.c	FUNCTION_10
0x4000774	        0x48895628	             mov qword [rsi + 0x28], rdx	       213	fibheap.c	FUNCTION_10
0x4000778	    0x48ba00000000	          movabs rdx, 0x8000000000000000	       220	fibheap.c	FUNCTION_10	IF_2
0x4000782	        0x48395620	            cmp qword [rsi + 0x20], rdx 	       220	fibheap.c	FUNCTION_10	IF_2
0x4000786	     0xf858a010000	                           jne 0x4000916	       220	fibheap.c	FUNCTION_10	IF_2
0x400078c	          0x488b16	                    mov rdx, qword [rsi]	       215	fibheap.c	FUNCTION_10
0x400078f	          0x4885d2	                           test rdx, rdx	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000792	     0xf8488010000	                            je 0x4000920	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000798	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       470	fibheap.c	FUNCTION_24	IF_1
0x400079c	    0x41b800000000	                              mov r8d, 0	       471	fibheap.c	FUNCTION_24	IF_1
0x40007a2	          0x4839ce	                            cmp rsi, rcx	       471	fibheap.c	FUNCTION_24	IF_1
0x40007a5	        0x4c0f45c1	                          cmovne r8, rcx	       471	fibheap.c	FUNCTION_24	IF_1
0x40007a9	        0x483b7208	                cmp rsi, qword [rdx + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x40007ad	     0xf84cd010000	                            je 0x4000980	       475	fibheap.c	FUNCTION_24	IF_2
0x40007b3	        0x4c8b4618	              mov r8, qword [rsi + 0x18]	       478	fibheap.c	FUNCTION_24
0x40007b7	        0x49894810	              mov qword [r8 + 0x10], rcx	       478	fibheap.c	FUNCTION_24
0x40007bb	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       479	fibheap.c	FUNCTION_24
0x40007bf	        0x4c894118	              mov qword [rcx + 0x18], r8	       479	fibheap.c	FUNCTION_24
0x40007c3	          0x8b4a30	            mov ecx, dword [rdx + 0x30] 	       420	fibheap.c	FUNCTION_21
0x40007c6	    0x48c706000000	                      mov qword [rsi], 0	       481	fibheap.c	FUNCTION_24
0x40007cd	        0x48897610	             mov qword [rsi + 0x10], rsi	       482	fibheap.c	FUNCTION_24
0x40007d1	        0x48897618	             mov qword [rsi + 0x18], rsi	       483	fibheap.c	FUNCTION_24
0x40007d5	    0x448d81ffffff	             lea r8d, [rcx + 0x7fffffff]	       420	fibheap.c	FUNCTION_21
0x40007dc	    0x81e100000080	                     and ecx, 0x80000000	       420	fibheap.c	FUNCTION_21
0x40007e2	    0x4181e0ffffff	                     and r8d, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x40007e9	          0x4409c1	                             or ecx, r8d	       420	fibheap.c	FUNCTION_21
0x40007ec	          0x894a30	             mov dword [rdx + 0x30], ecx	       420	fibheap.c	FUNCTION_21
0x40007ef	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x40007f3	          0x4885c9	                           test rcx, rcx	       331	fibheap.c	FUNCTION_17	IF_1
0x40007f6	     0xf8429010000	                            je 0x4000925	       331	fibheap.c	FUNCTION_17	IF_1
0x40007fc	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	       449	fibheap.c	FUNCTION_23	IF_1
0x4000800	          0x4c39c1	                             cmp rcx, r8	       449	fibheap.c	FUNCTION_23	IF_1
0x4000803	     0xf8480010000	                            je 0x4000989	       449	fibheap.c	FUNCTION_23	IF_1
0x4000809	        0x4c894618	              mov qword [rsi + 0x18], r8	       458	fibheap.c	FUNCTION_23	ELSE_1
0x400080d	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000811	        0x49897010	              mov qword [r8 + 0x10], rsi	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000815	        0x48897118	             mov qword [rcx + 0x18], rsi	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000819	        0x48894e10	             mov qword [rsi + 0x10], rcx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x400081d	        0x8066337f	             and byte [rsi + 0x33], 0x7f	       423	fibheap.c	FUNCTION_21
0x4000821	    0x48c706000000	                      mov qword [rsi], 0	       422	fibheap.c	FUNCTION_21
0x4000828	          0x488b0a	                    mov rcx, qword [rdx]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x400082b	          0x4885c9	                           test rcx, rcx	       431	fibheap.c	FUNCTION_22	WHILE_1
0x400082e	     0xf84d4000000	                            je 0x4000908	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000834	          0x4531d2	                          xor r10d, r10d	       471	fibheap.c	FUNCTION_24	IF_1
0x4000837	        0x807a3300	                cmp byte [rdx + 0x33], 0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x400083b	     0xf889f000000	                            js 0x40008e0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000841	      0xe927010000	                           jmp 0x400096d	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000846	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000850	        0x4c8b4a18	              mov r9, qword [rdx + 0x18]	       478	fibheap.c	FUNCTION_24
0x4000854	        0x4d894110	               mov qword [r9 + 0x10], r8	       478	fibheap.c	FUNCTION_24
0x4000858	        0x4c8b4210	              mov r8, qword [rdx + 0x10]	       479	fibheap.c	FUNCTION_24
0x400085c	        0x4d894818	               mov qword [r8 + 0x18], r9	       479	fibheap.c	FUNCTION_24
0x4000860	        0x448b4130	            mov r8d, dword [rcx + 0x30] 	       420	fibheap.c	FUNCTION_21
0x4000864	    0x48c702000000	                      mov qword [rdx], 0	       481	fibheap.c	FUNCTION_24
0x400086b	        0x48895210	             mov qword [rdx + 0x10], rdx	       482	fibheap.c	FUNCTION_24
0x400086f	        0x48895218	             mov qword [rdx + 0x18], rdx	       483	fibheap.c	FUNCTION_24
0x4000873	    0x458d88ffffff	              lea r9d, [r8 + 0x7fffffff]	       420	fibheap.c	FUNCTION_21
0x400087a	    0x4181e0000000	                     and r8d, 0x80000000	       420	fibheap.c	FUNCTION_21
0x4000881	    0x4181e1ffffff	                     and r9d, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000888	          0x4509c8	                             or r8d, r9d	       420	fibheap.c	FUNCTION_21
0x400088b	        0x44894130	             mov dword [rcx + 0x30], r8d	       420	fibheap.c	FUNCTION_21
0x400088f	        0x4c8b4710	              mov r8, qword [rdi + 0x10]	       331	fibheap.c	FUNCTION_17	IF_1
0x4000893	          0x4d85c0	                             test r8, r8	       331	fibheap.c	FUNCTION_17	IF_1
0x4000896	     0xf84a4000000	                            je 0x4000940	       331	fibheap.c	FUNCTION_17	IF_1
0x400089c	        0x4d8b4818	               mov r9, qword [r8 + 0x18]	       449	fibheap.c	FUNCTION_23	IF_1
0x40008a0	          0x4d39c8	                              cmp r8, r9	       449	fibheap.c	FUNCTION_23	IF_1
0x40008a3	     0xf84af000000	                            je 0x4000958	       449	fibheap.c	FUNCTION_23	IF_1
0x40008a9	        0x4c894a18	              mov qword [rdx + 0x18], r9	       458	fibheap.c	FUNCTION_23	ELSE_1
0x40008ad	        0x4d8b4818	               mov r9, qword [r8 + 0x18]	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40008b1	        0x49895110	              mov qword [r9 + 0x10], rdx	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40008b5	        0x49895018	              mov qword [r8 + 0x18], rdx	       460	fibheap.c	FUNCTION_23	ELSE_1
0x40008b9	        0x4c894210	              mov qword [rdx + 0x10], r8	       461	fibheap.c	FUNCTION_23	ELSE_1
0x40008bd	        0x8062337f	             and byte [rdx + 0x33], 0x7f	       423	fibheap.c	FUNCTION_21
0x40008c1	    0x48c702000000	                      mov qword [rdx], 0	       422	fibheap.c	FUNCTION_21
0x40008c8	          0x4c8b01	                     mov r8, qword [rcx]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x40008cb	          0x4d85c0	                             test r8, r8	       431	fibheap.c	FUNCTION_22	WHILE_1
0x40008ce	            0x7438	                            je 0x4000908	       431	fibheap.c	FUNCTION_22	WHILE_1
0x40008d0	        0x80793300	                cmp byte [rcx + 0x33], 0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40008d4	          0x4889ca	                            mov rdx, rcx	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40008d7	     0xf8993000000	                           jns 0x4000970	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40008dd	          0x4c89c1	                             mov rcx, r8	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x40008e0	        0x4c8b4210	              mov r8, qword [rdx + 0x10]	       470	fibheap.c	FUNCTION_24	IF_1
0x40008e4	          0x4d89d1	                             mov r9, r10	       471	fibheap.c	FUNCTION_24	IF_1
0x40008e7	          0x4c39c2	                             cmp rdx, r8	       471	fibheap.c	FUNCTION_24	IF_1
0x40008ea	        0x4d0f45c8	                           cmovne r9, r8	       471	fibheap.c	FUNCTION_24	IF_1
0x40008ee	        0x483b5108	                cmp rdx, qword [rcx + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x40008f2	     0xf8558ffffff	                           jne 0x4000850	       475	fibheap.c	FUNCTION_24	IF_2
0x40008f8	        0x4c894908	                 mov qword [rcx + 8], r9	       476	fibheap.c	FUNCTION_24	IF_2
0x40008fc	      0xe94fffffff	                           jmp 0x4000850	       476	fibheap.c	FUNCTION_24	IF_2
0x4000901	     0xf1f80000000	                         nop dword [rax]	       476	fibheap.c	FUNCTION_24	IF_2
0x4000908	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	       476	fibheap.c	FUNCTION_24	IF_2
0x400090c	        0x488b5708	                mov rdx, qword [rdi + 8]	       476	fibheap.c	FUNCTION_24	IF_2
0x4000910	        0x48394a20	            cmp qword [rdx + 0x20], rcx 	        80	fibheap.c	FUNCTION_3	IF_2
0x4000914	            0x7d0a	                           jge 0x4000920	        80	fibheap.c	FUNCTION_3	IF_2
0x4000916	            0xf3c3	                                     ret	       243	fibheap.c	FUNCTION_11
0x4000918	     0xf1f84000000	                   nop dword [rax + rax]	       243	fibheap.c	FUNCTION_11
0x4000920	        0x48897708	                mov qword [rdi + 8], rsi	       233	fibheap.c	FUNCTION_10	IF_4
0x4000924	              0xc3	                                     ret	       243	fibheap.c	FUNCTION_11
0x4000925	        0x48897710	             mov qword [rdi + 0x10], rsi	       333	fibheap.c	FUNCTION_17	IF_1
0x4000929	        0x48897610	             mov qword [rsi + 0x10], rsi	       334	fibheap.c	FUNCTION_17	IF_1
0x400092d	        0x48897618	             mov qword [rsi + 0x18], rsi	       335	fibheap.c	FUNCTION_17	IF_1
0x4000931	      0xe9e7feffff	                           jmp 0x400081d	       335	fibheap.c	FUNCTION_17	IF_1
0x4000936	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       335	fibheap.c	FUNCTION_17	IF_1
0x4000940	        0x48895710	             mov qword [rdi + 0x10], rdx	       333	fibheap.c	FUNCTION_17	IF_1
0x4000944	        0x48895210	             mov qword [rdx + 0x10], rdx	       334	fibheap.c	FUNCTION_17	IF_1
0x4000948	        0x48895218	             mov qword [rdx + 0x18], rdx	       335	fibheap.c	FUNCTION_17	IF_1
0x400094c	      0xe96cffffff	                           jmp 0x40008bd	       335	fibheap.c	FUNCTION_17	IF_1
0x4000951	     0xf1f80000000	                         nop dword [rax]	       335	fibheap.c	FUNCTION_17	IF_1
0x4000958	        0x49895018	              mov qword [r8 + 0x18], rdx	       451	fibheap.c	FUNCTION_23	IF_1
0x400095c	        0x49895010	              mov qword [r8 + 0x10], rdx	       452	fibheap.c	FUNCTION_23	IF_1
0x4000960	        0x4c894218	              mov qword [rdx + 0x18], r8	       453	fibheap.c	FUNCTION_23	IF_1
0x4000964	        0x4c894210	              mov qword [rdx + 0x10], r8	       454	fibheap.c	FUNCTION_23	IF_1
0x4000968	      0xe950ffffff	                           jmp 0x40008bd	       454	fibheap.c	FUNCTION_23	IF_1
0x400096d	          0x4889d1	                            mov rcx, rdx	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000970	        0x80493380	              or byte [rcx + 0x33], 0x80	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000974	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000978	            0xeb92	                           jmp 0x400090c	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x400097a	    0x660f1f440000	                    nop word [rax + rax]	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000980	        0x4c894208	                 mov qword [rdx + 8], r8	       476	fibheap.c	FUNCTION_24	IF_2
0x4000984	      0xe92afeffff	                           jmp 0x40007b3	       476	fibheap.c	FUNCTION_24	IF_2
0x4000989	        0x48897118	             mov qword [rcx + 0x18], rsi	       451	fibheap.c	FUNCTION_23	IF_1
0x400098d	        0x48897110	             mov qword [rcx + 0x10], rsi	       452	fibheap.c	FUNCTION_23	IF_1
0x4000991	        0x48894e18	             mov qword [rsi + 0x18], rcx	       453	fibheap.c	FUNCTION_23	IF_1
0x4000995	        0x48894e10	             mov qword [rsi + 0x10], rcx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000999	      0xe97ffeffff	                           jmp 0x400081d	       454	fibheap.c	FUNCTION_23	IF_1
fibheap_extr_min_node	functions,0:IF,2:CALL,3:WHILE,0:DO,0:FOR,1:SWITCH,0:ELSE,1	71
0x4000290	              0x53	                                push rbx	       292	fibheap.c	FUNCTION_16
0x4000291	        0x488b5f08	                mov rbx, qword [rdi + 8]	       293	fibheap.c	FUNCTION_16
0x4000295	            0x31f6	                            xor esi, esi	       298	fibheap.c	FUNCTION_16	FOR_1
0x4000297	        0x488b5308	                mov rdx, qword [rbx + 8]	       298	fibheap.c	FUNCTION_16	FOR_1
0x400029b	            0xeb23	                           jmp 0x40002c0	       298	fibheap.c	FUNCTION_16	FOR_1
0x400029d	           0xf1f00	                         nop dword [rax]	       298	fibheap.c	FUNCTION_16	FOR_1
0x40002a0	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	       449	fibheap.c	FUNCTION_23	IF_1
0x40002a4	          0x4c39c1	                             cmp rcx, r8	       449	fibheap.c	FUNCTION_23	IF_1
0x40002a7	            0x744f	                            je 0x40002f8	       449	fibheap.c	FUNCTION_23	IF_1
0x40002a9	        0x4c894218	              mov qword [rdx + 0x18], r8	       458	fibheap.c	FUNCTION_23	ELSE_1
0x40002ad	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40002b1	        0x49895010	              mov qword [r8 + 0x10], rdx	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40002b5	        0x48895118	             mov qword [rcx + 0x18], rdx	       460	fibheap.c	FUNCTION_23	ELSE_1
0x40002b9	        0x48894a10	             mov qword [rdx + 0x10], rcx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x40002bd	          0x4c89ca	                             mov rdx, r9	       300	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x40002c0	          0x4839f2	                            cmp rdx, rsi	       298	fibheap.c	FUNCTION_16	FOR_1
0x40002c3	            0x744b	                            je 0x4000310	       298	fibheap.c	FUNCTION_16	FOR_1
0x40002c5	          0x4885d2	                           test rdx, rdx	       298	fibheap.c	FUNCTION_16	FOR_1
0x40002c8	            0x7446	                            je 0x4000310	       298	fibheap.c	FUNCTION_16	FOR_1
0x40002ca	    0x48c702000000	                      mov qword [rdx], 0	       303	fibheap.c	FUNCTION_16	FOR_1
0x40002d1	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x40002d5	          0x4885f6	                           test rsi, rsi	       300	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x40002d8	        0x480f44f2	                          cmove rsi, rdx	       300	fibheap.c	FUNCTION_16	FOR_1	IF_1
0x40002dc	        0x4c8b4a18	              mov r9, qword [rdx + 0x18]	       302	fibheap.c	FUNCTION_16	FOR_1
0x40002e0	          0x4885c9	                           test rcx, rcx	       331	fibheap.c	FUNCTION_17	IF_1
0x40002e3	            0x75bb	                           jne 0x40002a0	       331	fibheap.c	FUNCTION_17	IF_1
0x40002e5	        0x48895710	             mov qword [rdi + 0x10], rdx	       333	fibheap.c	FUNCTION_17	IF_1
0x40002e9	        0x48895210	             mov qword [rdx + 0x10], rdx	       334	fibheap.c	FUNCTION_17	IF_1
0x40002ed	        0x48895218	             mov qword [rdx + 0x18], rdx	       335	fibheap.c	FUNCTION_17	IF_1
0x40002f1	            0xebca	                           jmp 0x40002bd	       335	fibheap.c	FUNCTION_17	IF_1
0x40002f3	       0xf1f440000	                   nop dword [rax + rax]	       335	fibheap.c	FUNCTION_17	IF_1
0x40002f8	        0x48895118	             mov qword [rcx + 0x18], rdx	       451	fibheap.c	FUNCTION_23	IF_1
0x40002fc	        0x48895110	             mov qword [rcx + 0x10], rdx	       452	fibheap.c	FUNCTION_23	IF_1
0x4000300	        0x48894a18	             mov qword [rdx + 0x18], rcx	       453	fibheap.c	FUNCTION_23	IF_1
0x4000304	        0x48894a10	             mov qword [rdx + 0x10], rcx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000308	            0xebb3	                           jmp 0x40002bd	       454	fibheap.c	FUNCTION_23	IF_1
0x400030a	    0x660f1f440000	                    nop word [rax + rax]	       454	fibheap.c	FUNCTION_23	IF_1
0x4000310	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       348	fibheap.c	FUNCTION_18	IF_1
0x4000314	          0x4839c3	                            cmp rbx, rax	       348	fibheap.c	FUNCTION_18	IF_1
0x4000317	            0x745f	                            je 0x4000378	       348	fibheap.c	FUNCTION_18	IF_1
0x4000319	          0x488b13	                    mov rdx, qword [rbx]	       475	fibheap.c	FUNCTION_24	IF_2
0x400031c	          0x4885d2	                           test rdx, rdx	       475	fibheap.c	FUNCTION_24	IF_2
0x400031f	            0x7406	                            je 0x4000327	       475	fibheap.c	FUNCTION_24	IF_2
0x4000321	        0x483b5a08	                cmp rbx, qword [rdx + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000325	            0x745b	                            je 0x4000382	       475	fibheap.c	FUNCTION_24	IF_2
0x4000327	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       478	fibheap.c	FUNCTION_24
0x400032b	        0x48894210	             mov qword [rdx + 0x10], rax	       478	fibheap.c	FUNCTION_24
0x400032f	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       479	fibheap.c	FUNCTION_24
0x4000333	        0x48895118	             mov qword [rcx + 0x18], rdx	       479	fibheap.c	FUNCTION_24
0x4000337	    0x48c703000000	                      mov qword [rbx], 0	       481	fibheap.c	FUNCTION_24
0x400033e	        0x48895b10	             mov qword [rbx + 0x10], rbx	       482	fibheap.c	FUNCTION_24
0x4000342	        0x48895b18	             mov qword [rbx + 0x18], rbx	       483	fibheap.c	FUNCTION_24
0x4000346	        0x48894710	             mov qword [rdi + 0x10], rax	       351	fibheap.c	FUNCTION_18	CALL_1
0x400034a	        0x48832f01	                      sub qword [rdi], 1	       312	fibheap.c	FUNCTION_16	IF_2
0x400034e	            0x7510	                           jne 0x4000360	       312	fibheap.c	FUNCTION_16	IF_2
0x4000350	          0x4889d8	                            mov rax, rbx	       323	fibheap.c	FUNCTION_16
0x4000353	    0x48c747080000	                  mov qword [rdi + 8], 0	       313	fibheap.c	FUNCTION_16	IF_2
0x400035b	              0x5b	                                 pop rbx	       323	fibheap.c	FUNCTION_16
0x400035c	              0xc3	                                     ret	       323	fibheap.c	FUNCTION_16
0x400035d	           0xf1f00	                         nop dword [rax]	       323	fibheap.c	FUNCTION_16
0x4000360	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       318	fibheap.c	FUNCTION_16	ELSE_1
0x4000364	        0x48894708	                mov qword [rdi + 8], rax	       318	fibheap.c	FUNCTION_16	ELSE_1
0x4000368	      0xe8d3fcffff	            call sym.fibheap_consolidate	       319	fibheap.c	FUNCTION_16	ELSE_1	CALL_3
0x400036d	          0x4889d8	                            mov rax, rbx	       323	fibheap.c	FUNCTION_16
0x4000370	              0x5b	                                 pop rbx	       323	fibheap.c	FUNCTION_16
0x4000371	              0xc3	                                     ret	       323	fibheap.c	FUNCTION_16
0x4000372	    0x660f1f440000	                    nop word [rax + rax]	       323	fibheap.c	FUNCTION_16
0x4000378	    0x48c747100000	               mov qword [rdi + 0x10], 0	       349	fibheap.c	FUNCTION_18	IF_1
0x4000380	            0xebc8	                           jmp 0x400034a	       349	fibheap.c	FUNCTION_18	IF_1
0x4000382	        0x48894208	                mov qword [rdx + 8], rax	       476	fibheap.c	FUNCTION_24	IF_2
0x4000386	            0xeb9f	                           jmp 0x4000327	       476	fibheap.c	FUNCTION_24	IF_2
fibheap_consolidate	functions,0:IF,3:CALL,6:WHILE,2:DO,0:FOR,1:SWITCH,0:ELSE,0	145
0x4000040	    0x4881ec180200	                          sub rsp, 0x218	       357	fibheap.c	FUNCTION_19
0x4000047	          0x4989f9	                             mov r9, rdi	       357	fibheap.c	FUNCTION_19
0x400004a	      0xb941000000	                           mov ecx, 0x41	        90	string3.h	FUNCTION_45	CALL_6
0x400004f	    0x64488b042528	                mov rax, qword fs:[0x28]	       357	fibheap.c	FUNCTION_19
0x4000058	    0x488984240802	            mov qword [rsp + 0x208], rax	       357	fibheap.c	FUNCTION_19
0x4000060	            0x31c0	                            xor eax, eax	       357	fibheap.c	FUNCTION_19
0x4000062	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_45	CALL_6
0x4000065	          0x4989e2	                            mov r10, rsp	        90	string3.h	FUNCTION_45	CALL_6
0x4000068	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_45	CALL_6
0x400006b	        0x498b4910	              mov rcx, qword [r9 + 0x10]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x400006f	          0x4885c9	                           test rcx, rcx	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000072	     0xf84ff010000	                            je 0x4000277	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000078	     0xf1f84000000	                   nop dword [rax + rax]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000080	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	       348	fibheap.c	FUNCTION_18	IF_1
0x4000084	          0x4839ce	                            cmp rsi, rcx	       348	fibheap.c	FUNCTION_18	IF_1
0x4000087	     0xf848d010000	                            je 0x400021a	       348	fibheap.c	FUNCTION_18	IF_1
0x400008d	          0x488b01	                    mov rax, qword [rcx]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000090	          0x4885c0	                           test rax, rax	       475	fibheap.c	FUNCTION_24	IF_2
0x4000093	            0x740a	                            je 0x400009f	       475	fibheap.c	FUNCTION_24	IF_2
0x4000095	        0x48394808	                cmp qword [rax + 8], rcx	       475	fibheap.c	FUNCTION_24	IF_2
0x4000099	     0xf84a9010000	                            je 0x4000248	       475	fibheap.c	FUNCTION_24	IF_2
0x400009f	        0x488b4118	            mov rax, qword [rcx + 0x18] 	       478	fibheap.c	FUNCTION_24
0x40000a3	        0x48897010	             mov qword [rax + 0x10], rsi	       478	fibheap.c	FUNCTION_24
0x40000a7	        0x488b5110	            mov rdx, qword [rcx + 0x10] 	       479	fibheap.c	FUNCTION_24
0x40000ab	        0x48894218	             mov qword [rdx + 0x18], rax	       479	fibheap.c	FUNCTION_24
0x40000af	    0x48c701000000	                      mov qword [rcx], 0	       481	fibheap.c	FUNCTION_24
0x40000b6	        0x48894910	             mov qword [rcx + 0x10], rcx	       482	fibheap.c	FUNCTION_24
0x40000ba	        0x48894918	             mov qword [rcx + 0x18], rcx	       483	fibheap.c	FUNCTION_24
0x40000be	        0x49897110	              mov qword [r9 + 0x10], rsi	       351	fibheap.c	FUNCTION_18	CALL_1
0x40000c2	          0x8b7930	            mov edi, dword [rcx + 0x30] 	       374	fibheap.c	FUNCTION_19	WHILE_1
0x40000c5	    0x81e7ffffff7f	                     and edi, 0x7fffffff	       374	fibheap.c	FUNCTION_19	WHILE_1
0x40000cb	          0x4c63c7	                          movsxd r8, edi	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40000ce	        0x4a8b04c4	             mov rax, qword [rsp + r8*8]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40000d2	          0x4885c0	                           test rax, rax	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40000d5	     0xf8491010000	                            je 0x400026c	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x40000db	          0x4889ca	                            mov rdx, rcx	       357	fibheap.c	FUNCTION_19
0x40000de	            0xeb56	                           jmp 0x4000136	       357	fibheap.c	FUNCTION_19
0x40000e0	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	       409	fibheap.c	FUNCTION_20	ELSE_1
0x40000e4	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x40000e8	          0x4839f1	                            cmp rcx, rsi	       449	fibheap.c	FUNCTION_23	IF_1
0x40000eb	            0x7473	                            je 0x4000160	       449	fibheap.c	FUNCTION_23	IF_1
0x40000ed	        0x48897018	             mov qword [rax + 0x18], rsi	       458	fibheap.c	FUNCTION_23	ELSE_1
0x40000f1	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40000f5	        0x48894610	             mov qword [rsi + 0x10], rax	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40000f9	        0x48894118	             mov qword [rcx + 0x18], rax	       460	fibheap.c	FUNCTION_23	ELSE_1
0x40000fd	        0x48894810	             mov qword [rax + 0x10], rcx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x4000101	          0x8b4a30	            mov ecx, dword [rdx + 0x30] 	       411	fibheap.c	FUNCTION_20
0x4000104	          0x83c701	                              add edi, 1	       387	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000107	          0x488910	                    mov qword [rax], rdx	       410	fibheap.c	FUNCTION_20
0x400010a	          0x8d7101	                      lea esi, [rcx + 1]	       411	fibheap.c	FUNCTION_20
0x400010d	    0x81e100000080	                     and ecx, 0x80000000	       411	fibheap.c	FUNCTION_20
0x4000113	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       411	fibheap.c	FUNCTION_20
0x4000119	             0x9f1	                             or ecx, esi	       411	fibheap.c	FUNCTION_20
0x400011b	          0x894a30	             mov dword [rdx + 0x30], ecx	       411	fibheap.c	FUNCTION_20
0x400011e	        0x8060337f	             and byte [rax + 0x33], 0x7f	       412	fibheap.c	FUNCTION_20
0x4000122	    0x4ac704c40000	               mov qword [rsp + r8*8], 0	       386	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400012a	          0x4c63c7	                          movsxd r8, edi	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400012d	        0x4a8b04c4	             mov rax, qword [rsp + r8*8]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000131	          0x4885c0	                           test rax, rax	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000134	            0x7442	                            je 0x4000178	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000136	        0x488b7020	            mov rsi, qword [rax + 0x20] 	        80	fibheap.c	FUNCTION_3	IF_2
0x400013a	        0x48397220	            cmp qword [rdx + 0x20], rsi 	        80	fibheap.c	FUNCTION_3	IF_2
0x400013e	            0x7e09	                           jle 0x4000149	        80	fibheap.c	FUNCTION_3	IF_2
0x4000140	          0x4889c1	                            mov rcx, rax	        80	fibheap.c	FUNCTION_3	IF_2
0x4000143	          0x4889d0	                            mov rax, rdx	        80	fibheap.c	FUNCTION_3	IF_2
0x4000146	          0x4889ca	                            mov rdx, rcx	        80	fibheap.c	FUNCTION_3	IF_2
0x4000149	        0x488b4a08	                mov rcx, qword [rdx + 8]	       406	fibheap.c	FUNCTION_20	IF_1
0x400014d	          0x4885c9	                           test rcx, rcx	       406	fibheap.c	FUNCTION_20	IF_1
0x4000150	            0x758e	                           jne 0x40000e0	       406	fibheap.c	FUNCTION_20	IF_1
0x4000152	        0x48894208	                mov qword [rdx + 8], rax	       407	fibheap.c	FUNCTION_20	IF_1
0x4000156	            0xeba9	                           jmp 0x4000101	       407	fibheap.c	FUNCTION_20	IF_1
0x4000158	     0xf1f84000000	                   nop dword [rax + rax]	       407	fibheap.c	FUNCTION_20	IF_1
0x4000160	        0x48894118	             mov qword [rcx + 0x18], rax	       451	fibheap.c	FUNCTION_23	IF_1
0x4000164	        0x48894110	             mov qword [rcx + 0x10], rax	       452	fibheap.c	FUNCTION_23	IF_1
0x4000168	        0x48894818	             mov qword [rax + 0x18], rcx	       453	fibheap.c	FUNCTION_23	IF_1
0x400016c	        0x48894810	             mov qword [rax + 0x10], rcx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000170	            0xeb8f	                           jmp 0x4000101	       454	fibheap.c	FUNCTION_23	IF_1
0x4000172	    0x660f1f440000	                    nop word [rax + rax]	       454	fibheap.c	FUNCTION_23	IF_1
0x4000178	        0x498b4910	              mov rcx, qword [r9 + 0x10]	       454	fibheap.c	FUNCTION_23	IF_1
0x400017c	          0x4885c9	                           test rcx, rcx	       370	fibheap.c	FUNCTION_19	WHILE_1
0x400017f	        0x4a8914c4	             mov qword [rsp + r8*8], rdx	       389	fibheap.c	FUNCTION_19	WHILE_1
0x4000183	     0xf85f7feffff	                           jne 0x4000080	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000189	        0x488b0424	                    mov rax, qword [rsp]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x400018d	        0x498d4a08	                      lea rcx, [r10 + 8]	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000191	    0x49c741080000	                   mov qword [r9 + 8], 0	       391	fibheap.c	FUNCTION_19
0x4000199	    0x4981c2080200	                          add r10, 0x208	       391	fibheap.c	FUNCTION_19
0x40001a0	            0xeb46	                           jmp 0x40001e8	       391	fibheap.c	FUNCTION_19
0x40001a2	    0x660f1f440000	                    nop word [rax + rax]	       391	fibheap.c	FUNCTION_19
0x40001a8	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x40001ac	          0x4839f2	                            cmp rdx, rsi	       449	fibheap.c	FUNCTION_23	IF_1
0x40001af	            0x7457	                            je 0x4000208	       449	fibheap.c	FUNCTION_23	IF_1
0x40001b1	        0x48897018	             mov qword [rax + 0x18], rsi	       458	fibheap.c	FUNCTION_23	ELSE_1
0x40001b5	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40001b9	        0x48894610	             mov qword [rsi + 0x10], rax	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40001bd	        0x48894218	             mov qword [rdx + 0x18], rax	       460	fibheap.c	FUNCTION_23	ELSE_1
0x40001c1	        0x48895010	             mov qword [rax + 0x10], rdx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x40001c5	        0x498b5108	                 mov rdx, qword [r9 + 8]	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x40001c9	          0x4885d2	                           test rdx, rdx	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x40001cc	            0x740a	                            je 0x40001d8	       396	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3	CALL_6
0x40001ce	        0x488b7a20	            mov rdi, qword [rdx + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x40001d2	        0x48397820	            cmp qword [rax + 0x20], rdi 	        78	fibheap.c	FUNCTION_3	IF_1
0x40001d6	            0x7d04	                           jge 0x40001dc	        78	fibheap.c	FUNCTION_3	IF_1
0x40001d8	        0x49894108	                 mov qword [r9 + 8], rax	       397	fibheap.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x40001dc	          0x4939ca	                            cmp r10, rcx	       392	fibheap.c	FUNCTION_19	FOR_1
0x40001df	            0x7470	                            je 0x4000251	       392	fibheap.c	FUNCTION_19	FOR_1
0x40001e1	          0x488b01	                    mov rax, qword [rcx]	       392	fibheap.c	FUNCTION_19	FOR_1
0x40001e4	        0x4883c108	                              add rcx, 8	       392	fibheap.c	FUNCTION_19	FOR_1
0x40001e8	          0x4885c0	                           test rax, rax	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x40001eb	            0x74ef	                            je 0x40001dc	       393	fibheap.c	FUNCTION_19	FOR_1	IF_2
0x40001ed	        0x498b5110	              mov rdx, qword [r9 + 0x10]	       331	fibheap.c	FUNCTION_17	IF_1
0x40001f1	          0x4885d2	                           test rdx, rdx	       331	fibheap.c	FUNCTION_17	IF_1
0x40001f4	            0x75b2	                           jne 0x40001a8	       331	fibheap.c	FUNCTION_17	IF_1
0x40001f6	        0x49894110	              mov qword [r9 + 0x10], rax	       333	fibheap.c	FUNCTION_17	IF_1
0x40001fa	        0x48894010	             mov qword [rax + 0x10], rax	       334	fibheap.c	FUNCTION_17	IF_1
0x40001fe	        0x48894018	             mov qword [rax + 0x18], rax	       335	fibheap.c	FUNCTION_17	IF_1
0x4000202	            0xebc1	                           jmp 0x40001c5	       335	fibheap.c	FUNCTION_17	IF_1
0x4000204	         0xf1f4000	                         nop dword [rax]	       335	fibheap.c	FUNCTION_17	IF_1
0x4000208	        0x48894218	             mov qword [rdx + 0x18], rax	       451	fibheap.c	FUNCTION_23	IF_1
0x400020c	        0x48894210	             mov qword [rdx + 0x10], rax	       452	fibheap.c	FUNCTION_23	IF_1
0x4000210	        0x48895018	             mov qword [rax + 0x18], rdx	       453	fibheap.c	FUNCTION_23	IF_1
0x4000214	        0x48895010	             mov qword [rax + 0x10], rdx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000218	            0xebab	                           jmp 0x40001c5	       454	fibheap.c	FUNCTION_23	IF_1
0x400021a	    0x49c741100000	                mov qword [r9 + 0x10], 0	       349	fibheap.c	FUNCTION_18	IF_1
0x4000222	          0x8b7930	            mov edi, dword [rcx + 0x30] 	       374	fibheap.c	FUNCTION_19	WHILE_1
0x4000225	    0x81e7ffffff7f	                     and edi, 0x7fffffff	       374	fibheap.c	FUNCTION_19	WHILE_1
0x400022b	          0x4c63c7	                          movsxd r8, edi	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400022e	        0x4a8b04c4	             mov rax, qword [rsp + r8*8]	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000232	          0x4885c0	                           test rax, rax	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000235	     0xf85a0feffff	                           jne 0x40000db	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400023b	        0x4a890cc4	             mov qword [rsp + r8*8], rcx	       389	fibheap.c	FUNCTION_19	WHILE_1
0x400023f	      0xe945ffffff	                           jmp 0x4000189	       389	fibheap.c	FUNCTION_19	WHILE_1
0x4000244	         0xf1f4000	                         nop dword [rax]	       389	fibheap.c	FUNCTION_19	WHILE_1
0x4000248	        0x48897008	                mov qword [rax + 8], rsi	       476	fibheap.c	FUNCTION_24	IF_2
0x400024c	      0xe94efeffff	                           jmp 0x400009f	       476	fibheap.c	FUNCTION_24	IF_2
0x4000251	    0x488b84240802	           mov rax, qword [rsp + 0x208] 	       399	fibheap.c	FUNCTION_19
0x4000259	    0x644833042528	                xor rax, qword fs:[0x28]	       399	fibheap.c	FUNCTION_19
0x4000262	            0x751a	                           jne 0x400027e	       399	fibheap.c	FUNCTION_19
0x4000264	    0x4881c4180200	                          add rsp, 0x218	       399	fibheap.c	FUNCTION_19
0x400026b	              0xc3	                                     ret	       399	fibheap.c	FUNCTION_19
0x400026c	          0x4889ca	                            mov rdx, rcx	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x400026f	          0x4889f1	                            mov rcx, rsi	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000272	      0xe905ffffff	                           jmp 0x400017c	       375	fibheap.c	FUNCTION_19	WHILE_1	WHILE_2
0x4000277	            0x31c0	                            xor eax, eax	       370	fibheap.c	FUNCTION_19	WHILE_1
0x4000279	      0xe90fffffff	                           jmp 0x400018d	       370	fibheap.c	FUNCTION_19	WHILE_1
0x400027e	      0xe800000000	                          call 0x4000283	       399	fibheap.c	FUNCTION_19
fibheap_delete_node	functions,0:IF,1:CALL,3:WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0	137
0x4000bd0	    0x48b800000000	          movabs rax, 0x8000000000000000	       214	fibheap.c	FUNCTION_10
0x4000bda	              0x53	                                push rbx	       257	fibheap.c	FUNCTION_13
0x4000bdb	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	       258	fibheap.c	FUNCTION_13
0x4000bdf	        0x48894620	             mov qword [rsi + 0x20], rax	       214	fibheap.c	FUNCTION_10
0x4000be3	          0x488b06	                    mov rax, qword [rsi]	       215	fibheap.c	FUNCTION_10
0x4000be6	          0x4885c0	                           test rax, rax	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000be9	     0xf8469010000	                            je 0x4000d58	       226	fibheap.c	FUNCTION_10	IF_3	CALL_2
0x4000bef	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	       470	fibheap.c	FUNCTION_24	IF_1
0x4000bf3	      0xb900000000	                              mov ecx, 0	       471	fibheap.c	FUNCTION_24	IF_1
0x4000bf8	          0x4839d6	                            cmp rsi, rdx	       471	fibheap.c	FUNCTION_24	IF_1
0x4000bfb	        0x480f45ca	                         cmovne rcx, rdx	       471	fibheap.c	FUNCTION_24	IF_1
0x4000bff	        0x483b7008	                cmp rsi, qword [rax + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000c03	     0xf8467010000	                            je 0x4000d70	       475	fibheap.c	FUNCTION_24	IF_2
0x4000c09	        0x488b4e18	            mov rcx, qword [rsi + 0x18] 	       478	fibheap.c	FUNCTION_24
0x4000c0d	        0x48895110	             mov qword [rcx + 0x10], rdx	       478	fibheap.c	FUNCTION_24
0x4000c11	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	       479	fibheap.c	FUNCTION_24
0x4000c15	        0x48894a18	             mov qword [rdx + 0x18], rcx	       479	fibheap.c	FUNCTION_24
0x4000c19	          0x8b5030	            mov edx, dword [rax + 0x30] 	       420	fibheap.c	FUNCTION_21
0x4000c1c	    0x48c706000000	                      mov qword [rsi], 0	       481	fibheap.c	FUNCTION_24
0x4000c23	        0x48897610	             mov qword [rsi + 0x10], rsi	       482	fibheap.c	FUNCTION_24
0x4000c27	        0x48897618	             mov qword [rsi + 0x18], rsi	       483	fibheap.c	FUNCTION_24
0x4000c2b	    0x8d8affffff7f	             lea ecx, [rdx + 0x7fffffff]	       420	fibheap.c	FUNCTION_21
0x4000c31	    0x81e200000080	                     and edx, 0x80000000	       420	fibheap.c	FUNCTION_21
0x4000c37	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000c3d	             0x9ca	                             or edx, ecx	       420	fibheap.c	FUNCTION_21
0x4000c3f	          0x895030	             mov dword [rax + 0x30], edx	       420	fibheap.c	FUNCTION_21
0x4000c42	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x4000c46	          0x4885d2	                           test rdx, rdx	       331	fibheap.c	FUNCTION_17	IF_1
0x4000c49	     0xf842a010000	                            je 0x4000d79	       331	fibheap.c	FUNCTION_17	IF_1
0x4000c4f	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x4000c53	          0x4839ca	                            cmp rdx, rcx	       449	fibheap.c	FUNCTION_23	IF_1
0x4000c56	     0xf84ae010000	                            je 0x4000e0a	       449	fibheap.c	FUNCTION_23	IF_1
0x4000c5c	        0x48894e18	             mov qword [rsi + 0x18], rcx	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000c60	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000c64	        0x48897110	             mov qword [rcx + 0x10], rsi	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000c68	        0x48897218	             mov qword [rdx + 0x18], rsi	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000c6c	        0x48895610	             mov qword [rsi + 0x10], rdx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x4000c70	        0x8066337f	             and byte [rsi + 0x33], 0x7f	       423	fibheap.c	FUNCTION_21
0x4000c74	    0x48c706000000	                      mov qword [rsi], 0	       422	fibheap.c	FUNCTION_21
0x4000c7b	          0x488b10	                    mov rdx, qword [rax]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000c7e	          0x4885d2	                           test rdx, rdx	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000c81	     0xf8439010000	                            je 0x4000dc0	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000c87	          0x4531c9	                            xor r9d, r9d	       471	fibheap.c	FUNCTION_24	IF_1
0x4000c8a	        0x80783300	                cmp byte [rax + 0x33], 0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000c8e	     0xf889d000000	                            js 0x4000d31	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000c94	      0xe95a010000	                           jmp 0x4000df3	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000c99	     0xf1f80000000	                         nop dword [rax]	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000ca0	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       478	fibheap.c	FUNCTION_24
0x4000ca4	        0x49894810	              mov qword [r8 + 0x10], rcx	       478	fibheap.c	FUNCTION_24
0x4000ca8	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       479	fibheap.c	FUNCTION_24
0x4000cac	        0x4c894118	              mov qword [rcx + 0x18], r8	       479	fibheap.c	FUNCTION_24
0x4000cb0	          0x8b4a30	            mov ecx, dword [rdx + 0x30] 	       420	fibheap.c	FUNCTION_21
0x4000cb3	    0x48c700000000	                      mov qword [rax], 0	       481	fibheap.c	FUNCTION_24
0x4000cba	        0x48894010	             mov qword [rax + 0x10], rax	       482	fibheap.c	FUNCTION_24
0x4000cbe	        0x48894018	             mov qword [rax + 0x18], rax	       483	fibheap.c	FUNCTION_24
0x4000cc2	    0x448d81ffffff	             lea r8d, [rcx + 0x7fffffff]	       420	fibheap.c	FUNCTION_21
0x4000cc9	    0x81e100000080	                     and ecx, 0x80000000	       420	fibheap.c	FUNCTION_21
0x4000ccf	    0x4181e0ffffff	                     and r8d, 0x7fffffff	       420	fibheap.c	FUNCTION_21
0x4000cd6	          0x4409c1	                             or ecx, r8d	       420	fibheap.c	FUNCTION_21
0x4000cd9	          0x894a30	             mov dword [rdx + 0x30], ecx	       420	fibheap.c	FUNCTION_21
0x4000cdc	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x4000ce0	          0x4885c9	                           test rcx, rcx	       331	fibheap.c	FUNCTION_17	IF_1
0x4000ce3	     0xf84a7000000	                            je 0x4000d90	       331	fibheap.c	FUNCTION_17	IF_1
0x4000ce9	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	       449	fibheap.c	FUNCTION_23	IF_1
0x4000ced	          0x4c39c1	                             cmp rcx, r8	       449	fibheap.c	FUNCTION_23	IF_1
0x4000cf0	     0xf84b2000000	                            je 0x4000da8	       449	fibheap.c	FUNCTION_23	IF_1
0x4000cf6	        0x4c894018	              mov qword [rax + 0x18], r8	       458	fibheap.c	FUNCTION_23	ELSE_1
0x4000cfa	        0x4c8b4118	              mov r8, qword [rcx + 0x18]	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000cfe	        0x49894010	              mov qword [r8 + 0x10], rax	       459	fibheap.c	FUNCTION_23	ELSE_1
0x4000d02	        0x48894118	             mov qword [rcx + 0x18], rax	       460	fibheap.c	FUNCTION_23	ELSE_1
0x4000d06	        0x48894810	             mov qword [rax + 0x10], rcx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x4000d0a	        0x8060337f	             and byte [rax + 0x33], 0x7f	       423	fibheap.c	FUNCTION_21
0x4000d0e	    0x48c700000000	                      mov qword [rax], 0	       422	fibheap.c	FUNCTION_21
0x4000d15	          0x488b0a	                    mov rcx, qword [rdx]	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000d18	          0x4885c9	                           test rcx, rcx	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000d1b	     0xf849f000000	                            je 0x4000dc0	       431	fibheap.c	FUNCTION_22	WHILE_1
0x4000d21	        0x807a3300	                cmp byte [rdx + 0x33], 0	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000d25	          0x4889d0	                            mov rax, rdx	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000d28	     0xf89d2000000	                           jns 0x4000e00	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000d2e	          0x4889ca	                            mov rdx, rcx	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000d31	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       470	fibheap.c	FUNCTION_24	IF_1
0x4000d35	          0x4d89c8	                              mov r8, r9	       471	fibheap.c	FUNCTION_24	IF_1
0x4000d38	          0x4839c8	                            cmp rax, rcx	       471	fibheap.c	FUNCTION_24	IF_1
0x4000d3b	        0x4c0f45c1	                          cmovne r8, rcx	       471	fibheap.c	FUNCTION_24	IF_1
0x4000d3f	        0x483b4208	                cmp rax, qword [rdx + 8]	       475	fibheap.c	FUNCTION_24	IF_2
0x4000d43	     0xf8557ffffff	                           jne 0x4000ca0	       475	fibheap.c	FUNCTION_24	IF_2
0x4000d49	        0x4c894208	                 mov qword [rdx + 8], r8	       476	fibheap.c	FUNCTION_24	IF_2
0x4000d4d	      0xe94effffff	                           jmp 0x4000ca0	       476	fibheap.c	FUNCTION_24	IF_2
0x4000d52	    0x660f1f440000	                    nop word [rax + rax]	       476	fibheap.c	FUNCTION_24	IF_2
0x4000d58	        0x48897708	                mov qword [rdi + 8], rsi	       233	fibheap.c	FUNCTION_10	IF_4
0x4000d5c	      0xe82ff5ffff	          call sym.fibheap_extr_min_node	       188	fibheap.c	FUNCTION_9	IF_1	CALL_1
0x4000d61	          0x4889c7	                            mov rdi, rax	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x4000d64	      0xe800000000	                          call 0x4000d69	       190	fibheap.c	FUNCTION_9	IF_1	CALL_2
0x4000d69	          0x4889d8	                            mov rax, rbx	       270	fibheap.c	FUNCTION_13
0x4000d6c	              0x5b	                                 pop rbx	       270	fibheap.c	FUNCTION_13
0x4000d6d	              0xc3	                                     ret	       270	fibheap.c	FUNCTION_13
0x4000d6e	            0x6690	                                     nop	       270	fibheap.c	FUNCTION_13
0x4000d70	        0x48894808	                mov qword [rax + 8], rcx	       476	fibheap.c	FUNCTION_24	IF_2
0x4000d74	      0xe990feffff	                           jmp 0x4000c09	       476	fibheap.c	FUNCTION_24	IF_2
0x4000d79	        0x48897710	             mov qword [rdi + 0x10], rsi	       333	fibheap.c	FUNCTION_17	IF_1
0x4000d7d	        0x48897610	             mov qword [rsi + 0x10], rsi	       334	fibheap.c	FUNCTION_17	IF_1
0x4000d81	        0x48897618	             mov qword [rsi + 0x18], rsi	       335	fibheap.c	FUNCTION_17	IF_1
0x4000d85	      0xe9e6feffff	                           jmp 0x4000c70	       335	fibheap.c	FUNCTION_17	IF_1
0x4000d8a	    0x660f1f440000	                    nop word [rax + rax]	       335	fibheap.c	FUNCTION_17	IF_1
0x4000d90	        0x48894710	             mov qword [rdi + 0x10], rax	       333	fibheap.c	FUNCTION_17	IF_1
0x4000d94	        0x48894010	             mov qword [rax + 0x10], rax	       334	fibheap.c	FUNCTION_17	IF_1
0x4000d98	        0x48894018	             mov qword [rax + 0x18], rax	       335	fibheap.c	FUNCTION_17	IF_1
0x4000d9c	      0xe969ffffff	                           jmp 0x4000d0a	       335	fibheap.c	FUNCTION_17	IF_1
0x4000da1	     0xf1f80000000	                         nop dword [rax]	       335	fibheap.c	FUNCTION_17	IF_1
0x4000da8	        0x48894118	             mov qword [rcx + 0x18], rax	       451	fibheap.c	FUNCTION_23	IF_1
0x4000dac	        0x48894110	             mov qword [rcx + 0x10], rax	       452	fibheap.c	FUNCTION_23	IF_1
0x4000db0	        0x48894818	             mov qword [rax + 0x18], rcx	       453	fibheap.c	FUNCTION_23	IF_1
0x4000db4	        0x48894810	             mov qword [rax + 0x10], rcx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000db8	      0xe94dffffff	                           jmp 0x4000d0a	       454	fibheap.c	FUNCTION_23	IF_1
0x4000dbd	           0xf1f00	                         nop dword [rax]	       454	fibheap.c	FUNCTION_23	IF_1
0x4000dc0	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	       454	fibheap.c	FUNCTION_23	IF_1
0x4000dc4	        0x488b4708	                mov rax, qword [rdi + 8]	       232	fibheap.c	FUNCTION_10	IF_4	CALL_5
0x4000dc8	        0x483b5020	            cmp rdx, qword [rax + 0x20] 	        80	fibheap.c	FUNCTION_3	IF_2
0x4000dcc	            0x7e8a	                           jle 0x4000d58	        80	fibheap.c	FUNCTION_3	IF_2
0x4000dce	          0x4839c6	                            cmp rsi, rax	       262	fibheap.c	FUNCTION_13	IF_1
0x4000dd1	            0x7489	                            je 0x4000d5c	       262	fibheap.c	FUNCTION_13	IF_1
0x4000dd3	    0x488b0d000000	            mov rcx, qword [0x04000dda] 	        97	stdio2.h	CALL_21
0x4000dda	      0xba20000000	                           mov edx, 0x20	        97	stdio2.h	CALL_21
0x4000ddf	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_21
0x4000de4	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_21
0x4000de9	      0xe800000000	                          call 0x4000dee	        97	stdio2.h	CALL_21
0x4000dee	      0xe800000000	                          call 0x4000df3	       265	fibheap.c	FUNCTION_13	IF_1	CALL_2
0x4000df3	          0x4889c2	                            mov rdx, rax	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000df6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       433	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000e00	        0x804a3380	              or byte [rdx + 0x33], 0x80	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000e04	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000e08	            0xebba	                           jmp 0x4000dc4	       435	fibheap.c	FUNCTION_22	WHILE_1	IF_1
0x4000e0a	        0x48897218	             mov qword [rdx + 0x18], rsi	       451	fibheap.c	FUNCTION_23	IF_1
0x4000e0e	        0x48897210	             mov qword [rdx + 0x10], rsi	       452	fibheap.c	FUNCTION_23	IF_1
0x4000e12	        0x48895618	             mov qword [rsi + 0x18], rdx	       453	fibheap.c	FUNCTION_23	IF_1
0x4000e16	        0x48895610	             mov qword [rsi + 0x10], rdx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000e1a	      0xe951feffff	                           jmp 0x4000c70	       454	fibheap.c	FUNCTION_23	IF_1
fibheap_min_key	functions,0:IF,1:CALL,0:WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0	8
0x4000460	        0x488b4708	                mov rax, qword [rdi + 8]	       137	fibheap.c	FUNCTION_7	IF_1
0x4000464	          0x4885c0	                           test rax, rax	       137	fibheap.c	FUNCTION_7	IF_1
0x4000467	            0x7407	                            je 0x4000470	       137	fibheap.c	FUNCTION_7	IF_1
0x4000469	        0x488b4020	            mov rax, qword [rax + 0x20] 	       139	fibheap.c	FUNCTION_7
0x400046d	              0xc3	                                     ret	       139	fibheap.c	FUNCTION_7
0x400046e	            0x6690	                                     nop	       139	fibheap.c	FUNCTION_7
0x4000470	            0x31c0	                            xor eax, eax	       138	fibheap.c	FUNCTION_7	IF_1
0x4000472	              0xc3	                                     ret	       140	fibheap.c	FUNCTION_7
fibheap_new	functions,0:IF,0:CALL,1:WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0	3
0x4000390	      0xbe18000000	                           mov esi, 0x18	        59	fibheap.c	FUNCTION_1	CALL_1
0x4000395	      0xbf01000000	                              mov edi, 1	        59	fibheap.c	FUNCTION_1	CALL_1
0x400039a	      0xe900000000	                           jmp 0x400039f	        59	fibheap.c	FUNCTION_1	CALL_1
fibheap_empty	functions,0:IF,0:CALL,0:WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0	4
0x4000e50	            0x31c0	                            xor eax, eax	       286	fibheap.c	FUNCTION_15
0x4000e52	        0x48833f00	                      cmp qword [rdi], 0	       286	fibheap.c	FUNCTION_15
0x4000e56	           0xf94c0	                                 sete al	       286	fibheap.c	FUNCTION_15
0x4000e59	              0xc3	                                     ret	       287	fibheap.c	FUNCTION_15
fibheap_insert	functions,0:IF,1:CALL,2:WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0	44
0x40003a0	            0x4154	                                push r12	        99	fibheap.c	FUNCTION_5
0x40003a2	              0x55	                                push rbp	        99	fibheap.c	FUNCTION_5
0x40003a3	          0x4889f5	                            mov rbp, rsi	        99	fibheap.c	FUNCTION_5
0x40003a6	              0x53	                                push rbx	        99	fibheap.c	FUNCTION_5
0x40003a7	      0xbe38000000	                           mov esi, 0x38	        68	fibheap.c	FUNCTION_2	CALL_1
0x40003ac	          0x4889fb	                            mov rbx, rdi	        99	fibheap.c	FUNCTION_5
0x40003af	      0xbf01000000	                              mov edi, 1	        68	fibheap.c	FUNCTION_2	CALL_1
0x40003b4	          0x4989d4	                            mov r12, rdx	        99	fibheap.c	FUNCTION_5
0x40003b7	      0xe800000000	                          call 0x40003bc	        68	fibheap.c	FUNCTION_2	CALL_1
0x40003bc	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       331	fibheap.c	FUNCTION_17	IF_1
0x40003c0	        0x48894010	             mov qword [rax + 0x10], rax	        69	fibheap.c	FUNCTION_2
0x40003c4	        0x48894018	             mov qword [rax + 0x18], rax	        70	fibheap.c	FUNCTION_2
0x40003c8	        0x4c896028	             mov qword [rax + 0x28], r12	       106	fibheap.c	FUNCTION_5
0x40003cc	        0x48896820	             mov qword [rax + 0x20], rbp	       107	fibheap.c	FUNCTION_5
0x40003d0	          0x4885d2	                           test rdx, rdx	       331	fibheap.c	FUNCTION_17	IF_1
0x40003d3	            0x743b	                            je 0x4000410	       331	fibheap.c	FUNCTION_17	IF_1
0x40003d5	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       449	fibheap.c	FUNCTION_23	IF_1
0x40003d9	          0x4839ca	                            cmp rdx, rcx	       449	fibheap.c	FUNCTION_23	IF_1
0x40003dc	            0x7442	                            je 0x4000420	       449	fibheap.c	FUNCTION_23	IF_1
0x40003de	        0x48894818	             mov qword [rax + 0x18], rcx	       458	fibheap.c	FUNCTION_23	ELSE_1
0x40003e2	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40003e6	        0x48894110	             mov qword [rcx + 0x10], rax	       459	fibheap.c	FUNCTION_23	ELSE_1
0x40003ea	        0x48894218	             mov qword [rdx + 0x18], rax	       460	fibheap.c	FUNCTION_23	ELSE_1
0x40003ee	        0x48895010	             mov qword [rax + 0x10], rdx	       461	fibheap.c	FUNCTION_23	ELSE_1
0x40003f2	        0x488b5308	                mov rdx, qword [rbx + 8]	       114	fibheap.c	FUNCTION_5	IF_1
0x40003f6	          0x4885d2	                           test rdx, rdx	       114	fibheap.c	FUNCTION_5	IF_1
0x40003f9	            0x7406	                            je 0x4000401	       114	fibheap.c	FUNCTION_5	IF_1
0x40003fb	        0x483b6a20	            cmp rbp, qword [rdx + 0x20] 	       114	fibheap.c	FUNCTION_5	IF_1
0x40003ff	            0x7d04	                           jge 0x4000405	       114	fibheap.c	FUNCTION_5	IF_1
0x4000401	        0x48894308	                mov qword [rbx + 8], rax	       115	fibheap.c	FUNCTION_5	IF_1
0x4000405	        0x48830301	                      add qword [rbx], 1	       117	fibheap.c	FUNCTION_5
0x4000409	              0x5b	                                 pop rbx	       120	fibheap.c	FUNCTION_5
0x400040a	              0x5d	                                 pop rbp	       120	fibheap.c	FUNCTION_5
0x400040b	            0x415c	                                 pop r12	       120	fibheap.c	FUNCTION_5
0x400040d	              0xc3	                                     ret	       120	fibheap.c	FUNCTION_5
0x400040e	            0x6690	                                     nop	       120	fibheap.c	FUNCTION_5
0x4000410	        0x48894310	             mov qword [rbx + 0x10], rax	       333	fibheap.c	FUNCTION_17	IF_1
0x4000414	            0xebdc	                           jmp 0x40003f2	       333	fibheap.c	FUNCTION_17	IF_1
0x4000416	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       333	fibheap.c	FUNCTION_17	IF_1
0x4000420	        0x48894218	             mov qword [rdx + 0x18], rax	       451	fibheap.c	FUNCTION_23	IF_1
0x4000424	        0x48894210	             mov qword [rdx + 0x10], rax	       452	fibheap.c	FUNCTION_23	IF_1
0x4000428	        0x48895018	             mov qword [rax + 0x18], rdx	       453	fibheap.c	FUNCTION_23	IF_1
0x400042c	        0x48895010	             mov qword [rax + 0x10], rdx	       454	fibheap.c	FUNCTION_23	IF_1
0x4000430	            0xebc0	                           jmp 0x40003f2	       454	fibheap.c	FUNCTION_23	IF_1
fibheap_delete	functions,0:IF,0:CALL,3:WHILE,1:DO,0:FOR,0:SWITCH,0:ELSE,0	14
0x4000e20	              0x53	                                push rbx	       275	fibheap.c	FUNCTION_14
0x4000e21	      0x48837f0800	                  cmp qword [rdi + 8], 0	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000e26	          0x4889fb	                            mov rbx, rdi	       275	fibheap.c	FUNCTION_14
0x4000e29	            0x741c	                            je 0x4000e47	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000e2b	       0xf1f440000	                   nop dword [rax + rax]	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000e30	          0x4889df	                            mov rdi, rbx	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000e33	      0xe858f4ffff	          call sym.fibheap_extr_min_node	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000e38	          0x4889c7	                            mov rdi, rax	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000e3b	      0xe800000000	                          call 0x4000e40	       277	fibheap.c	FUNCTION_14	CALL_2
0x4000e40	      0x48837b0800	                  cmp qword [rbx + 8], 0	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000e45	            0x75e9	                           jne 0x4000e30	       276	fibheap.c	FUNCTION_14	WHILE_1
0x4000e47	          0x4889df	                            mov rdi, rbx	       279	fibheap.c	FUNCTION_14	CALL_3
0x4000e4a	              0x5b	                                 pop rbx	       280	fibheap.c	FUNCTION_14
0x4000e4b	      0xe900000000	                   jmp sym.fibheap_empty	       279	fibheap.c	FUNCTION_14	CALL_3
fibheap_union	functions,0:IF,3:CALL,4:WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0	37
0x4000480	              0x53	                                push rbx	       145	fibheap.c	FUNCTION_8
0x4000481	          0x4889fb	                            mov rbx, rdi	       145	fibheap.c	FUNCTION_8
0x4000484	        0x4883ec10	                           sub rsp, 0x10	       145	fibheap.c	FUNCTION_8
0x4000488	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       149	fibheap.c	FUNCTION_8	IF_1
0x400048c	          0x4885c0	                           test rax, rax	       149	fibheap.c	FUNCTION_8	IF_1
0x400048f	            0x745f	                            je 0x40004f0	       149	fibheap.c	FUNCTION_8	IF_1
0x4000491	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	       154	fibheap.c	FUNCTION_8	IF_2
0x4000495	          0x4885d2	                           test rdx, rdx	       154	fibheap.c	FUNCTION_8	IF_2
0x4000498	            0x7430	                            je 0x40004ca	       154	fibheap.c	FUNCTION_8	IF_2
0x400049a	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       161	fibheap.c	FUNCTION_8
0x400049e	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       162	fibheap.c	FUNCTION_8
0x40004a2	        0x48895118	             mov qword [rcx + 0x18], rdx	       161	fibheap.c	FUNCTION_8
0x40004a6	        0x48894718	             mov qword [rdi + 0x18], rax	       162	fibheap.c	FUNCTION_8
0x40004aa	        0x48897810	             mov qword [rax + 0x10], rdi	       164	fibheap.c	FUNCTION_8
0x40004ae	        0x48894a10	             mov qword [rdx + 0x10], rcx	       165	fibheap.c	FUNCTION_8
0x40004b2	          0x488b06	                    mov rax, qword [rsi]	       166	fibheap.c	FUNCTION_8
0x40004b5	        0x488b5308	                mov rdx, qword [rbx + 8]	       166	fibheap.c	FUNCTION_8
0x40004b9	          0x480103	                    add qword [rbx], rax	       166	fibheap.c	FUNCTION_8
0x40004bc	        0x488b4608	                mov rax, qword [rsi + 8]	       169	fibheap.c	FUNCTION_8	IF_3	CALL_3
0x40004c0	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	        78	fibheap.c	FUNCTION_3	IF_1
0x40004c4	        0x48394820	            cmp qword [rax + 0x20], rcx 	        78	fibheap.c	FUNCTION_3	IF_1
0x40004c8	            0x7c16	                            jl 0x40004e0	        78	fibheap.c	FUNCTION_3	IF_1
0x40004ca	          0x4889f7	                            mov rdi, rsi	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x40004cd	      0xe800000000	                          call 0x40004d2	       156	fibheap.c	FUNCTION_8	IF_2	CALL_2
0x40004d2	          0x4889d8	                            mov rax, rbx	       157	fibheap.c	FUNCTION_8	IF_2
0x40004d5	        0x4883c410	                           add rsp, 0x10	       174	fibheap.c	FUNCTION_8
0x40004d9	              0x5b	                                 pop rbx	       174	fibheap.c	FUNCTION_8
0x40004da	              0xc3	                                     ret	       174	fibheap.c	FUNCTION_8
0x40004db	       0xf1f440000	                   nop dword [rax + rax]	       174	fibheap.c	FUNCTION_8
0x40004e0	        0x48894308	                mov qword [rbx + 8], rax	       170	fibheap.c	FUNCTION_8	IF_3
0x40004e4	            0xebe4	                           jmp 0x40004ca	       170	fibheap.c	FUNCTION_8	IF_3
0x40004e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       170	fibheap.c	FUNCTION_8	IF_3
0x40004f0	      0x4889742408	                mov qword [rsp + 8], rsi	       170	fibheap.c	FUNCTION_8	IF_3
0x40004f5	      0xe800000000	                          call 0x40004fa	       151	fibheap.c	FUNCTION_8	IF_1	CALL_1
0x40004fa	      0x488b742408	                mov rsi, qword [rsp + 8]	       152	fibheap.c	FUNCTION_8	IF_1
0x40004ff	          0x4889f0	                            mov rax, rsi	       152	fibheap.c	FUNCTION_8	IF_1
0x4000502	            0xebd1	                           jmp 0x40004d5	       152	fibheap.c	FUNCTION_8	IF_1
