integer_constant	IF,29:ELSE,17:CALL,38:FOR,7:WHILE,2:DO,0:functions,0:SWITCH,1	375
0x4000040	    0x488b15000000	            mov rdx, qword [0x04000047] 	       286	expr.c	FUNCTION_8	IF_1
0x4000047	           0xfb602	                   movzx eax, byte [rdx]	       286	expr.c	FUNCTION_8	IF_1
0x400004a	    0x80b800000000	                       cmp byte [rax], 0	       286	expr.c	FUNCTION_8	IF_1
0x4000051	     0xf85a9010000	                           jne 0x4000200	       286	expr.c	FUNCTION_8	IF_1
0x4000057	            0x4157	                                push r15	       249	expr.c	FUNCTION_8
0x4000059	            0x4156	                                push r14	       249	expr.c	FUNCTION_8
0x400005b	            0x4155	                                push r13	       249	expr.c	FUNCTION_8
0x400005d	            0x4154	                                push r12	       249	expr.c	FUNCTION_8
0x400005f	              0x55	                                push rbp	       249	expr.c	FUNCTION_8
0x4000060	              0x53	                                push rbx	       249	expr.c	FUNCTION_8
0x4000061	        0x4883ec18	                           sub rsp, 0x18	       249	expr.c	FUNCTION_8
0x4000065	          0x83ff08	                              cmp edi, 8	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000068	     0xf8497010000	                            je 0x4000205	       338	expr.c	FUNCTION_8	SWITCH_1
0x400006e	     0xf8e1b040000	                           jle 0x400048f	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000074	          0x83ff0a	                            cmp edi, 0xa	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000077	     0xf84a0010000	                            je 0x400021d	       338	expr.c	FUNCTION_8	SWITCH_1
0x400007d	          0x83ff10	                           cmp edi, 0x10	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000080	     0xf854c040000	                           jne 0x40004d2	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000086	    0x41ba10000000	                          mov r10d, 0x10	       351	expr.c	FUNCTION_8	SWITCH_1
0x400008c	      0xbd01000000	                              mov ebp, 1	       351	expr.c	FUNCTION_8	SWITCH_1
0x4000091	      0xbb11000000	                           mov ebx, 0x11	       351	expr.c	FUNCTION_8	SWITCH_1
0x4000096	    0x41bf10000000	                          mov r15d, 0x10	       349	expr.c	FUNCTION_8	SWITCH_1
0x400009c	        0x4c8d6201	                      lea r12, [rdx + 1]	       358	expr.c	FUNCTION_8
0x40000a0	    0x4c8925000000	            mov qword [0x040000a7], r12 	       358	expr.c	FUNCTION_8
0x40000a7	           0xfb602	                   movzx eax, byte [rdx]	       358	expr.c	FUNCTION_8
0x40000aa	     0xfb688000000	                   movzx ecx, byte [rax]	       360	expr.c	FUNCTION_8	FOR_2	CALL_4
0x40000b1	          0x4989c5	                            mov r13, rax	       358	expr.c	FUNCTION_8
0x40000b4	        0x664139cf	                            cmp r15w, cx	       359	expr.c	FUNCTION_8	FOR_2
0x40000b8	          0x4889c8	                            mov rax, rcx	       360	expr.c	FUNCTION_8	FOR_2	CALL_4
0x40000bb	     0xf8e8e050000	                           jle 0x400064f	       359	expr.c	FUNCTION_8	FOR_2
0x40000c1	        0x488d4a02	                      lea rcx, [rdx + 2]	       359	expr.c	FUNCTION_8	FOR_2
0x40000c5	          0x4c63df	                         movsxd r11, edi	       359	expr.c	FUNCTION_8	FOR_2
0x40000c8	          0x4531f6	                          xor r14d, r14d	       359	expr.c	FUNCTION_8	FOR_2
0x40000cb	       0xf1f440000	                   nop dword [rax + rax]	       359	expr.c	FUNCTION_8	FOR_2
0x40000d0	        0x4d0faff3	                           imul r14, r11	       363	expr.c	FUNCTION_8	FOR_2
0x40000d4	    0x48890d000000	            mov qword [0x040000db], rcx 	       361	expr.c	FUNCTION_8	FOR_2
0x40000db	          0x4989c9	                             mov r9, rcx	       361	expr.c	FUNCTION_8	FOR_2
0x40000de	        0x4883c101	                              add rcx, 1	       361	expr.c	FUNCTION_8	FOR_2
0x40000e2	          0x4901c6	                            add r14, rax	       363	expr.c	FUNCTION_8	FOR_2
0x40000e5	         0xfb641fe	               movzx eax, byte [rcx - 2]	       361	expr.c	FUNCTION_8	FOR_2
0x40000e9	          0x4989c5	                            mov r13, rax	       361	expr.c	FUNCTION_8	FOR_2
0x40000ec	     0xfb680000000	                   movzx eax, byte [rax]	       360	expr.c	FUNCTION_8	FOR_2	CALL_4
0x40000f3	        0x440fb6c0	                           movzx r8d, al	       359	expr.c	FUNCTION_8	FOR_2
0x40000f7	        0x664539c7	                           cmp r15w, r8w	       359	expr.c	FUNCTION_8	FOR_2
0x40000fb	            0x7fd3	                            jg 0x40000d0	       359	expr.c	FUNCTION_8	FOR_2
0x40000fd	          0x4929d1	                             sub r9, rdx	       367	expr.c	FUNCTION_8
0x4000100	          0x4531db	                          xor r11d, r11d	       367	expr.c	FUNCTION_8
0x4000103	      0x4889742408	                mov qword [rsp + 8], rsi	       367	expr.c	FUNCTION_8
0x4000108	          0x4939d9	                             cmp r9, rbx	       367	expr.c	FUNCTION_8
0x400010b	        0x410f9ec3	                              setle r11b	       367	expr.c	FUNCTION_8
0x400010f	        0x4180fd5f	                          cmp r13b, 0x5f	       369	expr.c	FUNCTION_8	IF_10
0x4000113	     0xf854a020000	                           jne 0x4000363	       369	expr.c	FUNCTION_8	IF_10
0x4000119	          0x4084ed	                           test bpl, bpl	       369	expr.c	FUNCTION_8	IF_10
0x400011c	     0xf8441020000	                            je 0x4000363	       369	expr.c	FUNCTION_8	IF_10
0x4000122	      0xbb01000000	                              mov ebx, 1	       369	expr.c	FUNCTION_8	IF_10
0x4000127	          0x4531f6	                          xor r14d, r14d	       374	expr.c	FUNCTION_8	IF_10
0x400012a	    0x660f1f440000	                    nop word [rax + rax]	       374	expr.c	FUNCTION_8	IF_10
0x4000130	    0x4c8925000000	            mov qword [0x04000137], r12 	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000137	           0xfb602	                   movzx eax, byte [rdx]	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400013a	     0xfb688000000	                   movzx ecx, byte [rax]	       387	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4	CALL_6
0x4000141	          0x4989c5	                            mov r13, rax	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000144	        0x664439f9	                            cmp cx, r15w	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000148	          0x4889c8	                            mov rax, rcx	       387	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4	CALL_6
0x400014b	     0xf8d22030000	                           jge 0x4000473	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000151	        0x4883c202	                              add rdx, 2	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000155	            0x31c9	                            xor ecx, ecx	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000157	          0x4531e4	                          xor r12d, r12d	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400015a	    0x660f1f440000	                    nop word [rax + rax]	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000160	        0x49c1e404	                              shl r12, 4	       390	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000164	    0x488915000000	            mov qword [0x0400016b], rdx 	       388	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400016b	          0x83c101	                              add ecx, 1	       391	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400016e	          0x4901c4	                            add r12, rax	       390	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000171	         0xfb642ff	               movzx eax, byte [rdx - 1]	       388	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000175	        0x4883c201	                              add rdx, 1	       388	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000179	          0x4989c5	                            mov r13, rax	       388	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400017c	     0xfb680000000	                   movzx eax, byte [rax]	       387	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4	CALL_6
0x4000183	           0xfb6f0	                           movzx esi, al	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000186	        0x664439fe	                            cmp si, r15w	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400018a	            0x7cd4	                            jl 0x4000160	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400018c	          0x83f908	                              cmp ecx, 8	       395	expr.c	FUNCTION_8	IF_10	FOR_3	IF_11
0x400018f	     0xf8fb3000000	                            jg 0x4000248	       395	expr.c	FUNCTION_8	IF_10	FOR_3	IF_11
0x4000195	          0x4489e5	                           mov ebp, r12d	       395	expr.c	FUNCTION_8	IF_10	FOR_3	IF_11
0x4000198	        0x49c1ec10	                           shr r12, 0x10	       395	expr.c	FUNCTION_8	IF_10	FOR_3	IF_11
0x400019c	        0x4183fe11	                          cmp r14d, 0x11	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001a0	     0xf8f92000000	                            jg 0x4000238	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001a6	          0x83fb01	                              cmp ebx, 1	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001a9	          0x4863c3	                         movsxd rax, ebx	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001ac	            0x7424	                            je 0x40001d2	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001ae	          0x8d50fe	                      lea edx, [rax - 2]	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001b1	          0x4801c0	                            add rax, rax	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001b4	          0x4889c6	                            mov rsi, rax	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001b7	      0x488d541202	                lea rdx, [rdx + rdx + 2]	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001bc	          0x4829d6	                            sub rsi, rdx	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001bf	    0x488dbe000000	                          lea rdi, [rsi]	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001c6	    0x488db6000000	                          lea rsi, [rsi]	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001cd	      0xe800000000	                          call 0x40001d2	       404	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x40001d2	        0x4183c602	                             add r14d, 2	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001d6	          0x83c302	                              add ebx, 2	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001d9	        0x4180fd5f	                          cmp r13b, 0x5f	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001dd	    0x66892d000000	               mov word [0x040001e4], bp	       407	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001e4	    0x664489250000	            mov word [0x040001ec], r12w 	       408	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001ec	            0x757a	                           jne 0x4000268	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001ee	    0x488b15000000	            mov rdx, qword [0x040001f5] 	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001f5	        0x4c8d6201	                      lea r12, [rdx + 1]	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001f9	      0xe932ffffff	                           jmp 0x4000130	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x40001fe	            0x6690	                                     nop	       380	expr.c	FUNCTION_8	IF_10	FOR_3
0x4000200	        0xc6461801	                mov byte [rsi + 0x18], 1	       288	expr.c	FUNCTION_8	IF_1
0x4000204	              0xc3	                                     ret	       288	expr.c	FUNCTION_8	IF_1
0x4000205	    0x41ba08000000	                             mov r10d, 8	       338	expr.c	FUNCTION_8	SWITCH_1
0x400020b	            0x31ed	                            xor ebp, ebp	       338	expr.c	FUNCTION_8	SWITCH_1
0x400020d	      0xbb17000000	                           mov ebx, 0x17	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000212	    0x41bf08000000	                             mov r15d, 8	       345	expr.c	FUNCTION_8	SWITCH_1
0x4000218	      0xe97ffeffff	                           jmp 0x400009c	       345	expr.c	FUNCTION_8	SWITCH_1
0x400021d	    0x41ba0a000000	                           mov r10d, 0xa	       345	expr.c	FUNCTION_8	SWITCH_1
0x4000223	            0x31ed	                            xor ebp, ebp	       345	expr.c	FUNCTION_8	SWITCH_1
0x4000225	      0xbb12000000	                           mov ebx, 0x12	       345	expr.c	FUNCTION_8	SWITCH_1
0x400022a	    0x41bf0a000000	                           mov r15d, 0xa	       353	expr.c	FUNCTION_8	SWITCH_1
0x4000230	      0xe967feffff	                           jmp 0x400009c	       353	expr.c	FUNCTION_8	SWITCH_1
0x4000235	           0xf1f00	                         nop dword [rax]	       353	expr.c	FUNCTION_8	SWITCH_1
0x4000238	      0xb813000000	                           mov eax, 0x13	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x400023d	      0xe96cffffff	                           jmp 0x40001ae	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x4000242	    0x660f1f440000	                    nop word [rax + rax]	       401	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_5
0x4000248	            0x31ff	                            xor edi, edi	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x400024a	      0xba05000000	                              mov edx, 5	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x400024f	      0xbe00000000	                              mov esi, 0	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x4000254	      0xe800000000	                          call 0x4000259	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x4000259	          0x4889c7	                            mov rdi, rax	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x400025c	            0x31c0	                            xor eax, eax	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x400025e	      0xe800000000	                          call 0x4000263	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x4000263	      0xe92dffffff	                           jmp 0x4000195	       396	expr.c	FUNCTION_8	IF_10	FOR_3	CALL_8
0x4000268	        0x4183fe13	                          cmp r14d, 0x13	       413	expr.c	FUNCTION_8	IF_10	IF_12
0x400026c	     0xf8f3a020000	                            jg 0x40004ac	       413	expr.c	FUNCTION_8	IF_10	IF_12
0x4000272	        0x4183fe03	                             cmp r14d, 3	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x4000276	     0xf8ebf030000	                           jle 0x400063b	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x400027c	        0x4183fe08	                             cmp r14d, 8	       418	expr.c	FUNCTION_8	IF_10	IF_13
0x4000280	            0x7419	                            je 0x400029b	       418	expr.c	FUNCTION_8	IF_10	IF_13
0x4000282	      0xe92b020000	                           jmp 0x40004b2	       418	expr.c	FUNCTION_8	IF_10	IF_13
0x4000287	    0x660f1f840000	                    nop word [rax + rax]	       418	expr.c	FUNCTION_8	IF_10	IF_13
0x4000290	            0x85c0	                           test eax, eax	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x4000292	          0x4189c6	                           mov r14d, eax	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x4000295	     0xf84e2010000	                            je 0x400047d	       424	expr.c	FUNCTION_8	IF_10	WHILE_1
0x400029b	        0x418d46ff	                      lea eax, [r14 - 1]	       423	expr.c	FUNCTION_8	IF_10	WHILE_1
0x400029f	          0x4863d0	                         movsxd rdx, eax	       423	expr.c	FUNCTION_8	IF_10	WHILE_1
0x40002a2	    0x6683bc120000	                 cmp word [rdx + rdx], 0	       423	expr.c	FUNCTION_8	IF_10	WHILE_1
0x40002ab	            0x74e3	                            je 0x4000290	       423	expr.c	FUNCTION_8	IF_10	WHILE_1
0x40002ad	        0x4183fe02	                             cmp r14d, 2	       427	expr.c	FUNCTION_8	IF_10	IF_14
0x40002b1	     0xf8ec6010000	                           jle 0x400047d	       427	expr.c	FUNCTION_8	IF_10	IF_14
0x40002b7	        0x4183fe04	                             cmp r14d, 4	       434	expr.c	FUNCTION_8	IF_10	ELSE_7	IF_15
0x40002bb	     0xf8e7c010000	                           jle 0x400043d	       434	expr.c	FUNCTION_8	IF_10	ELSE_7	IF_15
0x40002c1	          0x4d63f6	                        movsxd r14, r14d	       446	expr.c	FUNCTION_8	IF_10	ELSE_8
0x40002c4	          0x4531db	                          xor r11d, r11d	       443	expr.c	FUNCTION_8	IF_10	ELSE_8
0x40002c7	    0x660f1f840000	                    nop word [rax + rax]	       443	expr.c	FUNCTION_8	IF_10	ELSE_8
0x40002d0	          0x4489e8	                           mov eax, r13d	       515	expr.c	FUNCTION_8	IF_22
0x40002d3	          0x83e0df	                     and eax, 0xffffffdf	       515	expr.c	FUNCTION_8	IF_22
0x40002d6	            0x3c55	                            cmp al, 0x55	       515	expr.c	FUNCTION_8	IF_22
0x40002d8	            0x751c	                           jne 0x40002f6	       515	expr.c	FUNCTION_8	IF_22
0x40002da	    0x488b05000000	            mov rax, qword [0x040002e1] 	       516	expr.c	FUNCTION_8	IF_22
0x40002e1	        0x488d5001	                      lea rdx, [rax + 1]	       516	expr.c	FUNCTION_8	IF_22
0x40002e5	    0x488915000000	            mov qword [0x040002ec], rdx 	       516	expr.c	FUNCTION_8	IF_22
0x40002ec	        0x440fb628	                  movzx r13d, byte [rax]	       516	expr.c	FUNCTION_8	IF_22
0x40002f0	          0x4489e8	                           mov eax, r13d	       516	expr.c	FUNCTION_8	IF_22
0x40002f3	          0x83e0df	                     and eax, 0xffffffdf	       516	expr.c	FUNCTION_8	IF_22
0x40002f6	            0x3c4c	                            cmp al, 0x4c	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x40002f8	            0x7528	                           jne 0x4000322	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x40002fa	    0x488b05000000	            mov rax, qword [0x04000301] 	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000301	        0x488d5001	                      lea rdx, [rax + 1]	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000305	           0xf1f00	                         nop dword [rax]	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000308	    0x488915000000	            mov qword [0x0400030f], rdx 	       524	expr.c	FUNCTION_8	IF_23	WHILE_2
0x400030f	      0x440fb66aff	              movzx r13d, byte [rdx - 1]	       524	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000314	        0x4883c201	                              add rdx, 1	       524	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000318	          0x4489e8	                           mov eax, r13d	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x400031b	          0x83e0df	                     and eax, 0xffffffdf	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x400031e	            0x3c4c	                            cmp al, 0x4c	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000320	            0x74e6	                            je 0x4000308	       523	expr.c	FUNCTION_8	IF_23	WHILE_2
0x4000322	          0x4585db	                         test r11d, r11d	       526	expr.c	FUNCTION_8	IF_24
0x4000325	     0xf8424010000	                            je 0x400044f	       526	expr.c	FUNCTION_8	IF_24
0x400032b	        0x4180fd62	                          cmp r13b, 0x62	       534	expr.c	FUNCTION_8	IF_24	IF_25
0x400032f	     0xf845a020000	                            je 0x400058f	       534	expr.c	FUNCTION_8	IF_24	IF_25
0x4000335	        0x4180fd66	                          cmp r13b, 0x66	       564	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000339	     0xf84bd010000	                            je 0x40004fc	       564	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x400033f	      0x488b442408	                mov rax, qword [rsp + 8]	       610	expr.c	FUNCTION_8	IF_24	ELSE_16
0x4000344	    0x48832d000000	               sub qword [0x0400034c], 1	       612	expr.c	FUNCTION_8	IF_24	ELSE_16
0x400034c	        0xc6401802	                mov byte [rax + 0x18], 2	       610	expr.c	FUNCTION_8	IF_24	ELSE_16
0x4000350	        0x4c897010	             mov qword [rax + 0x10], r14	       611	expr.c	FUNCTION_8	IF_24	ELSE_16
0x4000354	        0x4883c418	                           add rsp, 0x18	       622	expr.c	FUNCTION_8
0x4000358	              0x5b	                                 pop rbx	       622	expr.c	FUNCTION_8
0x4000359	              0x5d	                                 pop rbp	       622	expr.c	FUNCTION_8
0x400035a	            0x415c	                                 pop r12	       622	expr.c	FUNCTION_8
0x400035c	            0x415d	                                 pop r13	       622	expr.c	FUNCTION_8
0x400035e	            0x415e	                                 pop r14	       622	expr.c	FUNCTION_8
0x4000360	            0x415f	                                 pop r15	       622	expr.c	FUNCTION_8
0x4000362	              0xc3	                                     ret	       622	expr.c	FUNCTION_8
0x4000363	          0x4939d9	                             cmp r9, rbx	       449	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000366	     0xf8e64ffffff	                           jle 0x40002d0	       449	expr.c	FUNCTION_8	ELSE_9	IF_16
0x400036c	            0x31c0	                            xor eax, eax	       457	expr.c	FUNCTION_8	ELSE_9	IF_16
0x400036e	            0x31f6	                            xor esi, esi	       459	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000370	            0x31c9	                            xor ecx, ecx	       458	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000372	          0x4531c0	                            xor r8d, r8d	       460	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000375	    0x668935000000	               mov word [0x0400037c], si	       459	expr.c	FUNCTION_8	ELSE_9	IF_16
0x400037c	    0x668905000000	               mov word [0x04000383], ax	       457	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000383	    0x66890d000000	               mov word [0x0400038a], cx	       458	expr.c	FUNCTION_8	ELSE_9	IF_16
0x400038a	    0x664489050000	              mov word [0x04000392], r8w	       460	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000392	        0x4883c202	                              add rdx, 2	       460	expr.c	FUNCTION_8	ELSE_9	IF_16
0x4000396	    0x4c8925000000	            mov qword [0x0400039d], r12 	       462	expr.c	FUNCTION_8	ELSE_9	IF_16
0x400039d	         0xfb642fe	               movzx eax, byte [rdx - 2]	       462	expr.c	FUNCTION_8	ELSE_9	IF_16
0x40003a1	    0x41b900000000	                              mov r9d, 0	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x40003a7	     0xfb6b0000000	                   movzx esi, byte [rax]	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x40003ae	          0x4989c5	                            mov r13, rax	       462	expr.c	FUNCTION_8	ELSE_9	IF_16
0x40003b1	          0x4c39d6	                            cmp rsi, r10	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x40003b4	     0xf8dc3000000	                           jge 0x400047d	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x40003ba	    0x660f1f440000	                    nop word [rax + rax]	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x40003c0	    0x41b800000000	                              mov r8d, 0	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003c6	          0x4d39c1	                              cmp r9, r8	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003c9	            0x7227	                            jb 0x40003f2	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003cb	       0xf1f440000	                   nop dword [rax + rax]	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003d0	        0x410fb708	                    movzx ecx, word [r8]	       469	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003d4	        0x4983c002	                               add r8, 2	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003d8	           0xfafcf	                           imul ecx, edi	       469	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003db	          0x4863c1	                         movsxd rax, ecx	       469	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003de	          0x4801f0	                            add rax, rsi	       469	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003e1	      0x66418940fe	                   mov word [r8 - 2], ax	       470	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003e6	        0x48c1f810	                           sar rax, 0x10	       471	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003ea	          0x4d39c8	                              cmp r8, r9	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003ed	          0x4889c6	                            mov rsi, rax	       471	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003f0	            0x76de	                           jbe 0x40003d0	       465	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	FOR_7
0x40003f2	    0x4981f9000000	                               cmp r9, 0	       475	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x40003f9	            0x730e	                           jae 0x4000409	       475	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x40003fb	          0x4885f6	                           test rsi, rsi	       475	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x40003fe	            0x7409	                            je 0x4000409	       475	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x4000400	      0x6641897102	                   mov word [r9 + 2], si	       478	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x4000405	        0x4983c102	                               add r9, 2	       478	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	IF_17	IF_18
0x4000409	    0x488915000000	            mov qword [0x04000410], rdx 	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000410	         0xfb642ff	               movzx eax, byte [rdx - 1]	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000414	        0x4883c201	                              add rdx, 1	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000418	     0xfb6b0000000	                   movzx esi, byte [rax]	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x400041f	          0x4989c5	                            mov r13, rax	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000422	          0x4c39d6	                            cmp rsi, r10	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000425	            0x7c99	                            jl 0x40003c0	       463	expr.c	FUNCTION_8	ELSE_9	IF_16	FOR_6	CALL_15
0x4000427	    0x4981f9000000	                               cmp r9, 0	       485	expr.c	FUNCTION_8	ELSE_9	IF_16	IF_19
0x400042e	            0x724d	                            jb 0x400047d	       485	expr.c	FUNCTION_8	ELSE_9	IF_16	IF_19
0x4000430	    0x4981f9000000	                               cmp r9, 0	       492	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20
0x4000437	     0xf833c010000	                           jae 0x4000579	       492	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20
0x400043d	    0x4c8b35000000	            mov r14, qword [0x04000444] 	       235	expr.c	FUNCTION_7
0x4000444	    0x41bb01000000	                             mov r11d, 1	       496	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20
0x400044a	      0xe981feffff	                           jmp 0x40002d0	       496	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_10	IF_20
0x400044f	      0x488b442408	                mov rax, qword [rsp + 8]	       618	expr.c	FUNCTION_8	ELSE_17
0x4000454	    0x48832d000000	               sub qword [0x0400045c], 1	       620	expr.c	FUNCTION_8	ELSE_17
0x400045c	        0xc6401806	                mov byte [rax + 0x18], 6	       618	expr.c	FUNCTION_8	ELSE_17
0x4000460	        0x4c897010	             mov qword [rax + 0x10], r14	       619	expr.c	FUNCTION_8	ELSE_17
0x4000464	        0x4883c418	                           add rsp, 0x18	       622	expr.c	FUNCTION_8
0x4000468	              0x5b	                                 pop rbx	       622	expr.c	FUNCTION_8
0x4000469	              0x5d	                                 pop rbp	       622	expr.c	FUNCTION_8
0x400046a	            0x415c	                                 pop r12	       622	expr.c	FUNCTION_8
0x400046c	            0x415d	                                 pop r13	       622	expr.c	FUNCTION_8
0x400046e	            0x415e	                                 pop r14	       622	expr.c	FUNCTION_8
0x4000470	            0x415f	                                 pop r15	       622	expr.c	FUNCTION_8
0x4000472	              0xc3	                                     ret	       622	expr.c	FUNCTION_8
0x4000473	          0x4531e4	                          xor r12d, r12d	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000476	            0x31ed	                            xor ebp, ebp	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x4000478	      0xe91ffdffff	                           jmp 0x400019c	       386	expr.c	FUNCTION_8	IF_10	FOR_3	FOR_4
0x400047d	    0x448b35000000	           mov r14d, dword [0x04000484] 	       227	expr.c	FUNCTION_6
0x4000484	    0x41bb01000000	                             mov r11d, 1	       489	expr.c	FUNCTION_8	ELSE_9	IF_16	IF_19
0x400048a	      0xe941feffff	                           jmp 0x40002d0	       489	expr.c	FUNCTION_8	ELSE_9	IF_16	IF_19
0x400048f	          0x83ff02	                              cmp edi, 2	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000492	            0x753e	                           jne 0x40004d2	       338	expr.c	FUNCTION_8	SWITCH_1
0x4000494	    0x41ba02000000	                             mov r10d, 2	       338	expr.c	FUNCTION_8	SWITCH_1
0x400049a	            0x31ed	                            xor ebp, ebp	       338	expr.c	FUNCTION_8	SWITCH_1
0x400049c	      0xbb41000000	                           mov ebx, 0x41	       338	expr.c	FUNCTION_8	SWITCH_1
0x40004a1	    0x41bf02000000	                             mov r15d, 2	       341	expr.c	FUNCTION_8	SWITCH_1
0x40004a7	      0xe9f0fbffff	                           jmp 0x400009c	       341	expr.c	FUNCTION_8	SWITCH_1
0x40004ac	    0x41be13000000	                          mov r14d, 0x13	       414	expr.c	FUNCTION_8	IF_10	IF_12
0x40004b2	            0x31ff	                            xor edi, edi	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004b4	      0xba05000000	                              mov edx, 5	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004b9	      0xbe00000000	                              mov esi, 0	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004be	      0xe800000000	                          call 0x40004c3	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004c3	          0x4889c7	                            mov rdi, rax	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004c6	            0x31c0	                            xor eax, eax	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004c8	      0xe800000000	                          call 0x40004cd	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004cd	      0xe9c9fdffff	                           jmp 0x400029b	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004d2	          0x83ff10	                           cmp edi, 0x10	       419	expr.c	FUNCTION_8	IF_10	CALL_12
0x40004d5	        0x4c8d6201	                      lea r12, [rdx + 1]	       358	expr.c	FUNCTION_8
0x40004d9	           0xf94c0	                                 sete al	       358	expr.c	FUNCTION_8
0x40004dc	          0x4531d2	                          xor r10d, r10d	       358	expr.c	FUNCTION_8
0x40004df	            0x31db	                            xor ebx, ebx	       358	expr.c	FUNCTION_8
0x40004e1	    0x4c8925000000	            mov qword [0x040004e8], r12 	       358	expr.c	FUNCTION_8
0x40004e8	            0x89c5	                            mov ebp, eax	       358	expr.c	FUNCTION_8
0x40004ea	        0x440fb62a	                  movzx r13d, byte [rdx]	       358	expr.c	FUNCTION_8
0x40004ee	          0x4d89e1	                             mov r9, r12	       358	expr.c	FUNCTION_8
0x40004f1	          0x4531ff	                          xor r15d, r15d	       255	expr.c	FUNCTION_8
0x40004f4	          0x4531f6	                          xor r14d, r14d	       359	expr.c	FUNCTION_8	FOR_2
0x40004f7	      0xe901fcffff	                           jmp 0x40000fd	       359	expr.c	FUNCTION_8	FOR_2
0x40004fc	      0xbe01000000	                              mov esi, 1	       573	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_27
0x4000501	          0x4963fe	                        movsxd rdi, r14d	       573	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_27
0x4000504	      0xe800000000	                          call 0x4000509	       573	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_27
0x4000509	          0x4889c7	                            mov rdi, rax	       574	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_28
0x400050c	      0xe800000000	                          call 0x4000511	       574	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_28
0x4000511	          0x4889c7	                            mov rdi, rax	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000514	          0x4889c3	                            mov rbx, rax	       574	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_28
0x4000517	      0xe800000000	                          call 0x400051c	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400051c	    0x483d00000000	                              cmp rax, 0	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000522	            0x743c	                            je 0x4000560	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000524	          0x4889df	                            mov rdi, rbx	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000527	      0xe800000000	                          call 0x400052c	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400052c	    0x483b05000000	            cmp rax, qword [0x04000533] 	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000533	            0x742b	                            je 0x4000560	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000535	          0x4889df	                            mov rdi, rbx	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000538	      0xe800000000	                          call 0x400053d	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400053d	    0x483b05000000	            cmp rax, qword [0x04000544] 	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000544	            0x741a	                            je 0x4000560	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000546	      0xba00000000	                              mov edx, 0	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400054b	      0xbe43020000	                          mov esi, 0x243	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000550	      0xbf00000000	                              mov edi, 0	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000555	      0xe800000000	                          call 0x400055a	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x400055a	    0x660f1f440000	                    nop word [rax + rax]	       579	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27	CALL_32
0x4000560	      0x488b442408	                mov rax, qword [rsp + 8]	       581	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000565	        0xc6401803	                mov byte [rax + 0x18], 3	       581	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000569	          0x488918	                    mov qword [rax], rbx	       582	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x400056c	    0x48c740100000	               mov qword [rax + 0x10], 0	       583	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000574	      0xe9dbfdffff	                           jmp 0x4000354	       583	expr.c	FUNCTION_8	IF_24	ELSE_13	IF_27
0x4000579	    0x4981e9000000	                               sub r9, 0	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x4000580	          0x4d89ce	                             mov r14, r9	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x4000583	          0x49d1fe	                              sar r14, 1	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x4000586	        0x4983c601	                              add r14, 1	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x400058a	      0xe941fdffff	                           jmp 0x40002d0	       502	expr.c	FUNCTION_8	ELSE_9	IF_16	ELSE_11
0x400058f	            0x31f6	                            xor esi, esi	       539	expr.c	FUNCTION_8	IF_24	IF_25	CALL_19
0x4000591	          0x4963fe	                        movsxd rdi, r14d	       539	expr.c	FUNCTION_8	IF_24	IF_25	CALL_19
0x4000594	          0x4589f4	                          mov r12d, r14d	       539	expr.c	FUNCTION_8	IF_24	IF_25	CALL_19
0x4000597	      0xe800000000	                          call 0x400059c	       539	expr.c	FUNCTION_8	IF_24	IF_25	CALL_19
0x400059c	          0x4889c7	                            mov rdi, rax	       542	expr.c	FUNCTION_8	IF_24	IF_25	CALL_20
0x400059f	      0xe800000000	                          call 0x40005a4	       542	expr.c	FUNCTION_8	IF_24	IF_25	CALL_20
0x40005a4	          0x4885c0	                           test rax, rax	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x40005a7	          0x4889c3	                            mov rbx, rax	       542	expr.c	FUNCTION_8	IF_24	IF_25	CALL_20
0x40005aa	            0x740c	                            je 0x40005b8	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x40005ac	          0x4889c7	                            mov rdi, rax	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x40005af	      0xe800000000	                          call 0x40005b4	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x40005b4	            0x85c0	                           test eax, eax	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x40005b6	            0x7529	                           jne 0x40005e1	       543	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_21
0x40005b8	      0xba05000000	                              mov edx, 5	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005bd	      0xbe00000000	                              mov esi, 0	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005c2	            0x31ff	                            xor edi, edi	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005c4	      0xe800000000	                          call 0x40005c9	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005c9	          0x4489e6	                           mov esi, r12d	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005cc	          0x4889c7	                            mov rdi, rax	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005cf	            0x31c0	                            xor eax, eax	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005d1	      0xe800000000	                          call 0x40005d6	       557	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12	CALL_26
0x40005d6	      0x488b442408	                mov rax, qword [rsp + 8]	       559	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12
0x40005db	        0xc6401802	                mov byte [rax + 0x18], 2	       559	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12
0x40005df	            0xeb8b	                           jmp 0x400056c	       559	expr.c	FUNCTION_8	IF_24	IF_25	ELSE_12
0x40005e1	          0x4889df	                            mov rdi, rbx	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005e4	      0xe800000000	                          call 0x40005e9	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005e9	    0x483d00000000	                              cmp rax, 0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005ef	            0x7436	                            je 0x4000627	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005f1	          0x4889df	                            mov rdi, rbx	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005f4	      0xe800000000	                          call 0x40005f9	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005f9	    0x483d00000000	                              cmp rax, 0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x40005ff	            0x7426	                            je 0x4000627	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000601	          0x4889df	                            mov rdi, rbx	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000604	      0xe800000000	                          call 0x4000609	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000609	    0x483b05000000	            cmp rax, qword [0x04000610] 	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000610	            0x7415	                            je 0x4000627	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000612	          0x4889df	                            mov rdi, rbx	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000615	      0xe800000000	                          call 0x400061a	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x400061a	    0x483b05000000	            cmp rax, qword [0x04000621] 	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000621	     0xf8539ffffff	                           jne 0x4000560	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000627	      0xba00000000	                              mov edx, 0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x400062c	      0xbe23020000	                          mov esi, 0x223	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000631	      0xbf00000000	                              mov edi, 0	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x4000636	      0xe800000000	                          call 0x400063b	       547	expr.c	FUNCTION_8	IF_24	IF_25	IF_26	CALL_24
0x400063b	      0xba00000000	                              mov edx, 0	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x4000640	      0xbea0010000	                          mov esi, 0x1a0	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x4000645	      0xbf00000000	                              mov edi, 0	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x400064a	      0xe800000000	                          call 0x400064f	       416	expr.c	FUNCTION_8	IF_10	CALL_10
0x400064f	          0x4d89e1	                             mov r9, r12	       358	expr.c	FUNCTION_8
0x4000652	          0x4531f6	                          xor r14d, r14d	       359	expr.c	FUNCTION_8	FOR_2
0x4000655	      0xe9a3faffff	                           jmp 0x40000fd	       359	expr.c	FUNCTION_8	FOR_2
expr_symbol_where	IF,1:ELSE,0:CALL,0:FOR,1:WHILE,0:DO,0:functions,0:SWITCH,0	22
0x40007e0	    0x488b05000000	            mov rax, qword [0x040007e7] 	       127	expr.c	FUNCTION_2	FOR_1
0x40007e7	          0x4885c0	                           test rax, rax	       127	expr.c	FUNCTION_2	FOR_1
0x40007ea	            0x7436	                            je 0x4000822	       127	expr.c	FUNCTION_2	FOR_1
0x40007ec	        0x483b7808	                cmp rdi, qword [rax + 8]	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x40007f0	            0x750c	                           jne 0x40007fe	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x40007f2	            0xeb1c	                           jmp 0x4000810	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x40007f4	         0xf1f4000	                         nop dword [rax]	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x40007f8	        0x48397808	                cmp qword [rax + 8], rdi	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x40007fc	            0x7412	                            je 0x4000810	       129	expr.c	FUNCTION_2	FOR_1	IF_1
0x40007fe	          0x488b00	                    mov rax, qword [rax]	       127	expr.c	FUNCTION_2	FOR_1
0x4000801	          0x4885c0	                           test rax, rax	       127	expr.c	FUNCTION_2	FOR_1
0x4000804	            0x75f2	                           jne 0x40007f8	       127	expr.c	FUNCTION_2	FOR_1
0x4000806	            0xf3c3	                                     ret	       127	expr.c	FUNCTION_2	FOR_1
0x4000808	     0xf1f84000000	                   nop dword [rax + rax]	       127	expr.c	FUNCTION_2	FOR_1
0x4000810	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       131	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000814	          0x8b4018	            mov eax, dword [rax + 0x18] 	       132	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000817	          0x48890e	                    mov qword [rsi], rcx	       131	expr.c	FUNCTION_2	FOR_1	IF_1
0x400081a	            0x8902	                    mov dword [rdx], eax	       132	expr.c	FUNCTION_2	FOR_1	IF_1
0x400081c	      0xb801000000	                              mov eax, 1	       133	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000821	              0xc3	                                     ret	       133	expr.c	FUNCTION_2	FOR_1	IF_1
0x4000822	            0x31c0	                            xor eax, eax	       137	expr.c	FUNCTION_2
0x4000824	              0xc3	                                     ret	       138	expr.c	FUNCTION_2
operand	IF,62:ELSE,22:CALL,95:FOR,5:WHILE,0:DO,0:functions,0:SWITCH,4	843
0x4002580	            0x4155	                                push r13	       740	expr.c	FUNCTION_11
0x4002582	            0x4154	                                push r12	       740	expr.c	FUNCTION_11
0x4002584	          0x4189f4	                           mov r12d, esi	       740	expr.c	FUNCTION_11
0x4002587	              0x55	                                push rbp	       740	expr.c	FUNCTION_11
0x4002588	              0x53	                                push rbx	       740	expr.c	FUNCTION_11
0x4002589	          0x4889fd	                            mov rbp, rdi	       740	expr.c	FUNCTION_11
0x400258c	        0x4883ec28	                           sub rsp, 0x28	       740	expr.c	FUNCTION_11
0x4002590	    0x64488b042528	                mov rax, qword fs:[0x28]	       740	expr.c	FUNCTION_11
0x4002599	      0x4889442418	             mov qword [rsp + 0x18], rax	       740	expr.c	FUNCTION_11
0x400259e	            0x31c0	                            xor eax, eax	       740	expr.c	FUNCTION_11
0x40025a0	         0xfb64719	           movzx eax, byte [rdi + 0x19] 	       752	expr.c	FUNCTION_11
0x40025a4	          0x83c801	                               or eax, 1	       752	expr.c	FUNCTION_11
0x40025a7	          0x83e0fd	                     and eax, 0xfffffffd	       753	expr.c	FUNCTION_11
0x40025aa	          0x884719	               mov byte [rdi + 0x19], al	       753	expr.c	FUNCTION_11
0x40025ad	    0x488b1d000000	            mov rbx, qword [0x040025b4] 	       757	expr.c	FUNCTION_11	CALL_1
0x40025b4	            0x31c0	                            xor eax, eax	       757	expr.c	FUNCTION_11	CALL_1
0x40025b6	          0x803b20	                    cmp byte [rbx], 0x20	       757	expr.c	FUNCTION_11	CALL_1
0x40025b9	           0xf94c0	                                 sete al	       757	expr.c	FUNCTION_11	CALL_1
0x40025bc	          0x4801c3	                            add rbx, rax	       757	expr.c	FUNCTION_11	CALL_1
0x40025bf	        0x4c8d6b01	                      lea r13, [rbx + 1]	       758	expr.c	FUNCTION_11
0x40025c3	    0x4c892d000000	            mov qword [0x040025ca], r13 	       758	expr.c	FUNCTION_11
0x40025ca	           0xfb60b	                   movzx ecx, byte [rbx]	       758	expr.c	FUNCTION_11
0x40025cd	    0x80b900000000	                       cmp byte [rcx], 0	       760	expr.c	FUNCTION_11	IF_1
0x40025d4	        0x884c240f	                mov byte [rsp + 0xf], cl	       758	expr.c	FUNCTION_11
0x40025d8	            0x751e	                           jne 0x40025f8	       760	expr.c	FUNCTION_11	IF_1
0x40025da	          0x8d51df	                   lea edx, [rcx - 0x21]	       763	expr.c	FUNCTION_11	SWITCH_1
0x40025dd	          0x4889c8	                            mov rax, rcx	       763	expr.c	FUNCTION_11	SWITCH_1
0x40025e0	          0x80fa5d	                            cmp dl, 0x5d	       763	expr.c	FUNCTION_11	SWITCH_1
0x40025e3	     0xf8717040000	                            ja 0x4002a00	       763	expr.c	FUNCTION_11	SWITCH_1
0x40025e9	           0xfb6d2	                           movzx edx, dl	       763	expr.c	FUNCTION_11	SWITCH_1
0x40025ec	    0xff24d5000000	                       jmp qword [rdx*8]	       763	expr.c	FUNCTION_11	SWITCH_1
0x40025f3	       0xf1f440000	                   nop dword [rax + rax]	       763	expr.c	FUNCTION_11	SWITCH_1
0x40025f8	        0xc6451801	                mov byte [rbp + 0x18], 1	      1207	expr.c	FUNCTION_11	SWITCH_1
0x40025fc	    0x48891d000000	            mov qword [0x04002603], rbx 	      1208	expr.c	FUNCTION_11	SWITCH_1
0x4002603	      0xb802000000	                              mov eax, 2	      1209	expr.c	FUNCTION_11	SWITCH_1
0x4002608	            0xa864	                           test al, 0x64	      1209	expr.c	FUNCTION_11	SWITCH_1
0x400260a	     0xf84a8000000	                            je 0x40026b8	      1209	expr.c	FUNCTION_11	SWITCH_1
0x4002610	    0x48c745000000	                      mov qword [rbp], 0	      1401	expr.c	FUNCTION_12	SWITCH_1
0x4002618	            0x31ff	                            xor edi, edi	      1401	expr.c	FUNCTION_12	SWITCH_1
0x400261a	    0x48c745080000	                  mov qword [rbp + 8], 0	      1406	expr.c	FUNCTION_12	SWITCH_1
0x4002622	          0x803b20	                    cmp byte [rbx], 0x20	      1354	expr.c	FUNCTION_11	CALL_90
0x4002625	        0x488d4301	                      lea rax, [rbx + 1]	      1354	expr.c	FUNCTION_11	CALL_90
0x4002629	            0x7516	                           jne 0x4002641	      1354	expr.c	FUNCTION_11	CALL_90
0x400262b	       0xf1f440000	                   nop dword [rax + rax]	      1354	expr.c	FUNCTION_11	CALL_90
0x4002630	    0x488905000000	            mov qword [0x04002637], rax 	      1354	expr.c	FUNCTION_11	CALL_90
0x4002637	        0x4883c001	                              add rax, 1	      1354	expr.c	FUNCTION_11	CALL_90
0x400263b	        0x8078ff20	                cmp byte [rax - 1], 0x20	      1354	expr.c	FUNCTION_11	CALL_90
0x400263f	            0x74ef	                            je 0x4002630	      1354	expr.c	FUNCTION_11	CALL_90
0x4002641	          0x4885ff	                           test rdi, rdi	      1358	expr.c	FUNCTION_11	IF_61
0x4002644	            0x7405	                            je 0x400264b	      1358	expr.c	FUNCTION_11	IF_61
0x4002646	      0xe800000000	                          call 0x400264b	      1359	expr.c	FUNCTION_11	CALL_92
0x400264b	        0x4183fc02	                             cmp r12d, 2	      1361	expr.c	FUNCTION_11	IF_62
0x400264f	            0x741e	                            je 0x400266f	      1361	expr.c	FUNCTION_11	IF_62
0x4002651	        0x488b7d00	                    mov rdi, qword [rbp]	      1364	expr.c	FUNCTION_11	IF_62	CALL_93
0x4002655	            0x31f6	                            xor esi, esi	      1364	expr.c	FUNCTION_11	IF_62	CALL_93
0x4002657	      0xe800000000	                          call 0x400265c	      1364	expr.c	FUNCTION_11	IF_62	CALL_93
0x400265c	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1366	expr.c	FUNCTION_11	IF_62	CALL_94
0x4002660	        0x48894500	                    mov qword [rbp], rax	      1364	expr.c	FUNCTION_11	IF_62	CALL_93
0x4002664	            0x31f6	                            xor esi, esi	      1366	expr.c	FUNCTION_11	IF_62	CALL_94
0x4002666	      0xe800000000	                          call 0x400266b	      1366	expr.c	FUNCTION_11	IF_62	CALL_94
0x400266b	        0x48894508	                mov qword [rbp + 8], rax	      1366	expr.c	FUNCTION_11	IF_62	CALL_94
0x400266f	         0xfb64518	           movzx eax, byte [rbp + 0x18] 	      1369	expr.c	FUNCTION_11	SWITCH_4
0x4002673	            0x3c03	                               cmp al, 3	      1369	expr.c	FUNCTION_11	SWITCH_4
0x4002675	            0x7431	                            je 0x40026a8	      1369	expr.c	FUNCTION_11	SWITCH_4
0x4002677	            0x3c05	                               cmp al, 5	      1372	expr.c	FUNCTION_11	SWITCH_4
0x4002679	      0xb800000000	                              mov eax, 0	      1372	expr.c	FUNCTION_11	SWITCH_4
0x400267e	    0x480f44050000	           cmove rax, qword [0x04002686]	      1372	expr.c	FUNCTION_11	SWITCH_4
0x4002686	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1378	expr.c	FUNCTION_11
0x400268b	    0x644833342528	                xor rsi, qword fs:[0x28]	      1378	expr.c	FUNCTION_11
0x4002694	     0xf85140d0000	                           jne 0x40033ae	      1378	expr.c	FUNCTION_11
0x400269a	        0x4883c428	                           add rsp, 0x28	      1378	expr.c	FUNCTION_11
0x400269e	              0x5b	                                 pop rbx	      1378	expr.c	FUNCTION_11
0x400269f	              0x5d	                                 pop rbp	      1378	expr.c	FUNCTION_11
0x40026a0	            0x415c	                                 pop r12	      1378	expr.c	FUNCTION_11
0x40026a2	            0x415d	                                 pop r13	      1378	expr.c	FUNCTION_11
0x40026a4	              0xc3	                                     ret	      1378	expr.c	FUNCTION_11
0x40026a5	           0xf1f00	                         nop dword [rax]	      1378	expr.c	FUNCTION_11
0x40026a8	        0x488b7d00	                    mov rdi, qword [rbp]	      1374	expr.c	FUNCTION_11	SWITCH_4	CALL_95
0x40026ac	      0xe800000000	                          call 0x40026b1	      1374	expr.c	FUNCTION_11	SWITCH_4	CALL_95
0x40026b1	            0xebd3	                           jmp 0x4002686	      1374	expr.c	FUNCTION_11	SWITCH_4	CALL_95
0x40026b3	       0xf1f440000	                   nop dword [rax + rax]	      1374	expr.c	FUNCTION_11	SWITCH_4	CALL_95
0x40026b8	            0xa803	                              test al, 3	      1374	expr.c	FUNCTION_11	SWITCH_4	CALL_95
0x40026ba	     0xf8428030000	                            je 0x40029e8	      1374	expr.c	FUNCTION_11	SWITCH_4	CALL_95
0x40026c0	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1396	expr.c	FUNCTION_12	SWITCH_1
0x40026c8	      0xe943ffffff	                           jmp 0x4002610	      1396	expr.c	FUNCTION_12	SWITCH_1
0x40026cd	      0xba07000000	                              mov edx, 7	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40026d2	      0xbe00000000	                              mov esi, 0	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40026d7	          0x4c89ef	                            mov rdi, r13	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40026da	      0xe800000000	                          call 0x40026df	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40026df	            0x85c0	                           test eax, eax	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40026e1	            0x7511	                           jne 0x40026f4	      1148	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_45
0x40026e3	         0xfb64308	               movzx eax, byte [rbx + 8]	      1149	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_46
0x40026e7	    0xf68000000000	                      test byte [rax], 1	      1149	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_46
0x40026ee	     0xf84e0010000	                            je 0x40028d4	      1149	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_46
0x40026f4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1253	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_68
0x40026f9	        0x4983ed01	                              sub r13, 1	      1252	expr.c	FUNCTION_11	SWITCH_1	IF_55
0x40026fd	    0x4c892d000000	            mov qword [0x04002704], r13 	      1252	expr.c	FUNCTION_11	SWITCH_1	IF_55
0x4002704	      0xe800000000	                          call 0x4002709	      1253	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_68
0x4002709	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x400270e	      0x488d54240f	                    lea rdx, [rsp + 0xf]	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x4002713	      0xbe01000000	                              mov esi, 1	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x4002718	        0x8844240f	                mov byte [rsp + 0xf], al	      1253	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_68
0x400271c	      0xe800000000	                          call 0x4002721	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x4002721	          0x83f807	                              cmp eax, 7	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002724	            0x89c3	                            mov ebx, eax	      1257	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_69
0x4002726	     0xf84b6060000	                            je 0x4002de2	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x400272c	     0xf8643030000	                           jbe 0x4002a75	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002732	          0x83f808	                              cmp eax, 8	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002735	     0xf84c7060000	                            je 0x4002e02	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x400273b	          0x83f809	                              cmp eax, 9	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x400273e	     0xf8542060000	                           jne 0x4002d86	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002744	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1270	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_72
0x4002749	    0x488b15000000	            mov rdx, qword [0x04002750] 	      2367	expr.c	FUNCTION_22
0x4002750	            0x3c22	                            cmp al, 0x22	      2368	expr.c	FUNCTION_22	IF_1
0x4002752	            0x8802	                      mov byte [rdx], al	      2367	expr.c	FUNCTION_22
0x4002754	     0xf845b0a0000	                            je 0x40031b5	      2368	expr.c	FUNCTION_22	IF_1
0x400275a	      0xc644240f21	              mov byte [rsp + 0xf], 0x21	      1271	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x400275f	              0x90	                                     nop	      1271	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002760	          0x4489e6	                           mov esi, r12d	      1027	expr.c	FUNCTION_11	SWITCH_1	CALL_33
0x4002763	          0x4889ef	                            mov rdi, rbp	      1027	expr.c	FUNCTION_11	SWITCH_1	CALL_33
0x4002766	      0xe815feffff	                        call sym.operand	      1027	expr.c	FUNCTION_11	SWITCH_1	CALL_33
0x400276b	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1028	expr.c	FUNCTION_11	SWITCH_1	IF_24
0x400276f	          0x80f902	                               cmp cl, 2	      1028	expr.c	FUNCTION_11	SWITCH_1	IF_24
0x4002772	     0xf8448050000	                            je 0x4002cc0	      1028	expr.c	FUNCTION_11	SWITCH_1	IF_24
0x4002778	          0x80f906	                               cmp cl, 6	      1047	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x400277b	     0xf8483050000	                            je 0x4002d04	      1047	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4002781	          0x80f901	                               cmp cl, 1	      1096	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38
0x4002784	     0xf86b6080000	                           jbe 0x4003040	      1096	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38
0x400278a	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1096	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38
0x400278f	            0x3c2b	                            cmp al, 0x2b	      1099	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x4002791	    0x488b1d000000	            mov rbx, qword [0x04002798] 	      1099	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x4002798	     0xf8441020000	                            je 0x40029df	      1099	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x400279e	          0x4889ef	                            mov rdi, rbp	      1101	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	CALL_34
0x40027a1	      0xe800000000	                          call 0x40027a6	      1101	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	CALL_34
0x40027a6	        0x48894500	                    mov qword [rbp], rax	      1101	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	CALL_34
0x40027aa	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1102	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x40027af	            0x3c2d	                            cmp al, 0x2d	      1102	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x40027b1	     0xf84bb080000	                            je 0x4003072	      1102	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x40027b7	            0x3c7e	                            cmp al, 0x7e	      1104	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x40027b9	     0xf8478060000	                            je 0x4002e37	      1104	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x40027bf	            0x3c22	                            cmp al, 0x22	      1104	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x40027c1	     0xf8470060000	                            je 0x4002e37	      1104	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x40027c7	        0xc6451809	                mov byte [rbp + 0x18], 9	      1107	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_13
0x40027cb	      0xb909000000	                              mov ecx, 9	      1107	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_13
0x40027d0	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1108	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x40027d8	    0x488b1d000000	            mov rbx, qword [0x040027df] 	      1108	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x40027df	      0xe9fb010000	                           jmp 0x40029df	      1108	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39
0x40027e4	      0xe800000000	                          call 0x40027e9	       957	expr.c	FUNCTION_11	SWITCH_1	IF_16	CALL_22
0x40027e9	            0x85c0	                           test eax, eax	       957	expr.c	FUNCTION_11	SWITCH_1	IF_16	CALL_22
0x40027eb	     0xf8500020000	                           jne 0x40029f1	       957	expr.c	FUNCTION_11	SWITCH_1	IF_16	CALL_22
0x40027f1	          0x4489e2	                           mov edx, r12d	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x40027f4	            0x31ff	                            xor edi, edi	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x40027f6	          0x4889ee	                            mov rsi, rbp	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x40027f9	      0xe800000000	                          call 0x40027fe	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x40027fe	          0x4889c3	                            mov rbx, rax	       964	expr.c	FUNCTION_11	SWITCH_1	CALL_23
0x4002801	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002806	    0x488b15000000	            mov rdx, qword [0x0400280d] 	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x400280d	            0x3c28	                            cmp al, 0x28	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x400280f	     0xf842d050000	                            je 0x4002d42	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002815	            0x3c5b	                            cmp al, 0x5b	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002817	     0xf84fc020000	                            je 0x4002b19	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x400281d	        0x4883c201	                              add rdx, 1	       976	expr.c	FUNCTION_11	SWITCH_1	ELSE_4
0x4002821	    0x488915000000	            mov qword [0x04002828], rdx 	       976	expr.c	FUNCTION_11	SWITCH_1	ELSE_4
0x4002828	          0x803a20	                    cmp byte [rdx], 0x20	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x400282b	          0x4889d8	                            mov rax, rbx	       979	expr.c	FUNCTION_11	SWITCH_1
0x400282e	     0xf8552feffff	                           jne 0x4002686	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x4002834	        0x4883c201	                              add rdx, 1	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x4002838	    0x488915000000	            mov qword [0x0400283f], rdx 	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x400283f	      0xe942feffff	                           jmp 0x4002686	       977	expr.c	FUNCTION_11	SWITCH_1	CALL_28
0x4002844	    0xf68100000000	                      test byte [rcx], 2	      1017	expr.c	FUNCTION_11	SWITCH_1	IF_23	CALL_32
0x400284b	     0xf85a3feffff	                           jne 0x40026f4	      1017	expr.c	FUNCTION_11	SWITCH_1	IF_23	CALL_32
0x4002851	      0xe90affffff	                           jmp 0x4002760	      1017	expr.c	FUNCTION_11	SWITCH_1	IF_23	CALL_32
0x4002856	        0x488d4302	                      lea rax, [rbx + 2]	      1001	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x400285a	        0xc6471802	                mov byte [rdi + 0x18], 2	      1000	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x400285e	    0x488905000000	            mov qword [0x04002865], rax 	      1001	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x4002865	      0x480fbe5301	               movsx rdx, byte [rbx + 1]	      1001	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x400286a	          0x4889c3	                            mov rbx, rax	      1002	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x400286d	      0xb804000000	                              mov eax, 4	      1002	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x4002872	        0x48895710	             mov qword [rdi + 0x10], rdx	      1001	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x4002876	      0xe98dfdffff	                           jmp 0x4002608	      1002	expr.c	FUNCTION_11	SWITCH_1	IF_21
0x400287b	         0xfb65301	               movzx edx, byte [rbx + 1]	       813	expr.c	FUNCTION_11	SWITCH_1
0x400287f	          0x8d42d0	                   lea eax, [rdx - 0x30]	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002882	        0x8854240f	                mov byte [rsp + 0xf], dl	       813	expr.c	FUNCTION_11	SWITCH_1
0x4002886	            0x3c48	                            cmp al, 0x48	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002888	     0xf8725040000	                            ja 0x4002cb3	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x400288e	           0xfb6c0	                           movzx eax, al	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002891	    0xff24c5000000	                       jmp qword [rax*8]	       814	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002898	         0xfb64301	               movzx eax, byte [rbx + 1]	      1141	expr.c	FUNCTION_11	SWITCH_1	IF_45	CALL_41
0x400289c	    0xf68000000000	                      test byte [rax], 1	      1141	expr.c	FUNCTION_11	SWITCH_1	IF_45	CALL_41
0x40028a3	     0xf8437020000	                            je 0x4002ae0	      1141	expr.c	FUNCTION_11	SWITCH_1	IF_45	CALL_41
0x40028a9	      0xba08000000	                              mov edx, 8	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40028ae	      0xbe00000000	                              mov esi, 0	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40028b3	          0x4c89ef	                            mov rdi, r13	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40028b6	      0xe800000000	                          call 0x40028bb	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40028bb	            0x85c0	                           test eax, eax	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40028bd	     0xf850afeffff	                           jne 0x40026cd	      1146	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_43
0x40028c3	         0xfb64309	               movzx eax, byte [rbx + 9]	      1147	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_44
0x40028c7	    0xf68000000000	                      test byte [rax], 1	      1147	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_44
0x40028ce	     0xf85f9fdffff	                           jne 0x40026cd	      1147	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_44
0x40028d4	         0xfb65b02	               movzx ebx, byte [rbx + 2]	      1154	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40028d8	            0x31c0	                            xor eax, eax	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40028da	          0x83e3df	                     and ebx, 0xffffffdf	      1154	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40028dd	          0x80fb54	                            cmp bl, 0x54	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40028e0	           0xf94c0	                                 sete al	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40028e3	      0x498d440507	                lea rax, [r13 + rax + 7]	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40028e8	    0x488905000000	            mov qword [0x040028ef], rax 	      1155	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40028ef	          0x803820	                    cmp byte [rax], 0x20	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x40028f2	     0xf843f080000	                            je 0x4003137	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x40028f8	        0xc6451801	                mov byte [rbp + 0x18], 1	      1159	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46
0x40028fc	          0x803828	                    cmp byte [rax], 0x28	      1161	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	IF_47
0x40028ff	     0xf85ba070000	                           jne 0x40030bf	      1161	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	IF_47
0x4002905	        0x488d5001	                      lea rdx, [rax + 1]	      1167	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4002909	    0x488915000000	            mov qword [0x04002910], rdx 	      1167	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4002910	        0x80780120	                cmp byte [rax + 1], 0x20	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x4002914	     0xf84350a0000	                            je 0x400334f	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x400291a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1169	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_51
0x400291f	      0xe800000000	                          call 0x4002924	      1169	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_51
0x4002924	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1170	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48
0x4002929	        0x8844240f	                mov byte [rsp + 0xf], al	      1169	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_51
0x400292d	          0x803e00	                       cmp byte [rsi], 0	      1170	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48
0x4002930	     0xf843f090000	                            je 0x4003275	      1170	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48
0x4002936	          0x80fb54	                            cmp bl, 0x54	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x4002939	      0xb800000000	                              mov eax, 0	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x400293e	      0xbf00000000	                              mov edi, 0	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x4002943	        0x480f45f8	                         cmovne rdi, rax	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x4002947	            0x31d2	                            xor edx, edx	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x4002949	            0x31c0	                            xor eax, eax	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x400294b	      0xe800000000	                          call 0x4002950	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x4002950	          0x4889c3	                            mov rbx, rax	      1181	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_56
0x4002953	          0x4889c7	                            mov rdi, rax	      1183	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_57
0x4002956	      0xe800000000	                          call 0x400295b	      1183	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_57
0x400295b	          0x4889df	                            mov rdi, rbx	      1184	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_58
0x400295e	          0x4989c5	                            mov r13, rax	      1183	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_57
0x4002961	      0xe800000000	                          call 0x4002966	      1184	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_58
0x4002966	       0xfb654240f	            movzx edx, byte [rsp + 0xf] 	      1190	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x400296b	    0x488b05000000	            mov rax, qword [0x04002972] 	      1190	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4002972	        0xc6451803	                mov byte [rbp + 0x18], 3	      1186	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4002976	        0x4c896d00	                    mov qword [rbp], r13	      1187	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x400297a	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1188	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4002982	            0x8810	                      mov byte [rax], dl	      1190	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16
0x4002984	    0x488b1d000000	            mov rbx, qword [0x0400298b] 	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400298b	           0xfb603	                   movzx eax, byte [rbx]	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400298e	            0x3c22	                            cmp al, 0x22	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4002990	     0xf842c090000	                            je 0x40032c2	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4002996	            0x3c20	                            cmp al, 0x20	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4002998	     0xf849a090000	                            je 0x4003338	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400299e	            0x3c29	                            cmp al, 0x29	      1192	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_50
0x40029a0	     0xf8519070000	                           jne 0x40030bf	      1192	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_50
0x40029a6	        0x4883c301	                              add rbx, 1	      1195	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	ELSE_18
0x40029aa	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1195	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	ELSE_18
0x40029ae	    0x48891d000000	            mov qword [0x040029b5], rbx 	      1195	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	ELSE_18
0x40029b5	            0xeb28	                           jmp 0x40029df	      1195	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	ELSE_18
0x40029b7	    0x660f1f840000	                    nop word [rax + rax]	      1195	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	ELSE_18
0x40029c0	    0x48891d000000	            mov qword [0x040029c7], rbx 	       774	expr.c	FUNCTION_11	SWITCH_1
0x40029c7	          0x4889ee	                            mov rsi, rbp	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029ca	      0xbf0a000000	                            mov edi, 0xa	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029cf	      0xe86cd6ffff	               call sym.integer_constant	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029d4	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029d8	    0x488b1d000000	            mov rbx, qword [0x040029df] 	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029df	          0x80f908	                               cmp cl, 8	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029e2	     0xf86d2090000	                           jbe 0x40033ba	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029e8	        0x488b7d00	                    mov rdi, qword [rbp]	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029ec	      0xe931fcffff	                           jmp 0x4002622	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029f1	       0xfb64c240f	            movzx ecx, byte [rsp + 0xf] 	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029f6	    0x4c8b2d000000	            mov r13, qword [0x040029fd] 	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x40029fd	          0x4889c8	                            mov rax, rcx	       917	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13	CALL_17
0x4002a00	    0xf68100000000	                      test byte [rcx], 2	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x4002a07	     0xf85e7fcffff	                           jne 0x40026f4	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x4002a0d	            0x3c22	                            cmp al, 0x22	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x4002a0f	     0xf84dffcffff	                            je 0x40026f4	      1247	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_67
0x4002a15	        0x4983ed01	                              sub r13, 1	      1338	expr.c	FUNCTION_11	SWITCH_1	ELSE_22
0x4002a19	        0xc6451801	                mov byte [rbp + 0x18], 1	      1337	expr.c	FUNCTION_11	SWITCH_1	ELSE_22
0x4002a1d	          0x4889ef	                            mov rdi, rbp	      1339	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	CALL_86
0x4002a20	    0x4c892d000000	            mov qword [0x04002a27], r13 	      1338	expr.c	FUNCTION_11	SWITCH_1	ELSE_22
0x4002a27	      0xe800000000	                          call 0x4002a2c	      1339	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	CALL_86
0x4002a2c	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1340	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a30	          0x80f901	                               cmp cl, 1	      1340	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a33	            0x75a3	                           jne 0x40029d8	      1340	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a35	      0xba05000000	                              mov edx, 5	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4002a3a	      0xbe00000000	                              mov esi, 0	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4002a3f	            0x31ff	                            xor edi, edi	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4002a41	    0x488305000000	               add qword [0x04002a49], 1	      1342	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a49	      0xe800000000	                          call 0x4002a4e	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4002a4e	          0x4889c7	                            mov rdi, rax	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4002a51	            0x31c0	                            xor eax, eax	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4002a53	      0xe800000000	                          call 0x4002a58	      1343	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60	CALL_88
0x4002a58	        0xc6451802	                mov byte [rbp + 0x18], 2	      1344	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a5c	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1345	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a64	    0x488b1d000000	            mov rbx, qword [0x04002a6b] 	      1345	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a6b	      0xb804000000	                              mov eax, 4	      1345	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a70	      0xe993fbffff	                           jmp 0x4002608	      1345	expr.c	FUNCTION_11	SWITCH_1	ELSE_22	IF_60
0x4002a75	            0x85c0	                           test eax, eax	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002a77	     0xf8509030000	                           jne 0x4002d86	      1259	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002a7d	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002a82	      0xbe00000000	                              mov esi, 0	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002a87	            0x31ff	                            xor edi, edi	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002a89	      0xba05000000	                              mov edx, 5	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002a8e	      0xe800000000	                          call 0x4002a93	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002a93	          0x4889de	                            mov rsi, rbx	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002a96	          0x4889c7	                            mov rdi, rax	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002a99	            0x31c0	                            xor eax, eax	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002a9b	      0xe800000000	                          call 0x4002aa0	      1274	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_74
0x4002aa0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4002aa5	      0x488d54240f	                    lea rdx, [rsp + 0xf]	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4002aaa	          0x4889ee	                            mov rsi, rbp	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4002aad	      0xe800000000	                          call 0x4002ab2	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4002ab2	            0x85c0	                           test eax, eax	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4002ab4	     0xf843a080000	                            je 0x40032f4	      1298	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_57	CALL_78
0x4002aba	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1329	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_85
0x4002abf	    0x488b15000000	            mov rdx, qword [0x04002ac6] 	      2367	expr.c	FUNCTION_22
0x4002ac6	            0x3c22	                            cmp al, 0x22	      2368	expr.c	FUNCTION_22	IF_1
0x4002ac8	            0x8802	                      mov byte [rdx], al	      2367	expr.c	FUNCTION_22
0x4002aca	     0xf8504ffffff	                           jne 0x40029d4	      2368	expr.c	FUNCTION_22	IF_1
0x4002ad0	      0xe88bdbffff	    call sym.restore_line_pointer.part.1	      2368	expr.c	FUNCTION_22	IF_1
0x4002ad5	      0xe9fafeffff	                           jmp 0x40029d4	      2368	expr.c	FUNCTION_22	IF_1
0x4002ada	    0x660f1f440000	                    nop word [rax + rax]	      2368	expr.c	FUNCTION_22	IF_1
0x4002ae0	    0x48813d000000	               cmp qword [0x04002aeb], 0	       718	expr.c	FUNCTION_10	IF_1
0x4002aeb	     0xf841d060000	                            je 0x400310e	       718	expr.c	FUNCTION_10	IF_1
0x4002af1	        0xc6471803	                mov byte [rdi + 0x18], 3	       725	expr.c	FUNCTION_10	ELSE_1
0x4002af5	    0x48c707000000	                      mov qword [rdi], 0	       726	expr.c	FUNCTION_10	ELSE_1
0x4002afc	          0x4c89eb	                            mov rbx, r13	       727	expr.c	FUNCTION_10	ELSE_1
0x4002aff	    0x48c747100000	               mov qword [rdi + 0x10], 0	       727	expr.c	FUNCTION_10	ELSE_1
0x4002b07	    0x660f1f840000	                    nop word [rax + rax]	       727	expr.c	FUNCTION_10	ELSE_1
0x4002b10	        0x488b7d00	                    mov rdi, qword [rbp]	       727	expr.c	FUNCTION_10	ELSE_1
0x4002b14	      0xe901fbffff	                           jmp 0x400261a	       727	expr.c	FUNCTION_10	ELSE_1
0x4002b19	           0xfb62a	                   movzx ebp, byte [rdx]	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002b1c	        0x4080fd5d	                           cmp bpl, 0x5d	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002b20	     0xf84f7fcffff	                            je 0x400281d	       967	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002b26	          0x4084ed	                           test bpl, bpl	       969	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18
0x4002b29	    0x41bc5d000000	                          mov r12d, 0x5d	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b2f	     0xf841b070000	                            je 0x4003250	       969	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18
0x4002b35	      0xba05000000	                              mov edx, 5	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b3a	      0xbe00000000	                              mov esi, 0	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b3f	            0x31ff	                            xor edi, edi	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b41	      0xe800000000	                          call 0x4002b46	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b46	          0x4489e2	                           mov edx, r12d	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b49	          0x4889c7	                            mov rdi, rax	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b4c	        0x400fbef5	                          movsx esi, bpl	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b50	            0x31c0	                            xor eax, eax	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b52	      0xe800000000	                          call 0x4002b57	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b57	    0x488b15000000	            mov rdx, qword [0x04002b5e] 	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b5e	      0xe9c5fcffff	                           jmp 0x4002828	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b63	        0x4883c302	                              add rbx, 2	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x4002b67	      0xb900000000	                              mov ecx, 0	       200	expr.c	FUNCTION_5	CALL_1
0x4002b6c	      0xba00000000	                              mov edx, 0	       200	expr.c	FUNCTION_5	CALL_1
0x4002b71	      0xbe00000000	                              mov esi, 0	       200	expr.c	FUNCTION_5	CALL_1
0x4002b76	      0xbf00000000	                              mov edi, 0	       200	expr.c	FUNCTION_5	CALL_1
0x4002b7b	    0x48891d000000	            mov qword [0x04002b82], rbx 	       937	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002b82	      0xe800000000	                          call 0x4002b87	       200	expr.c	FUNCTION_5	CALL_1
0x4002b87	            0x85c0	                           test eax, eax	       203	expr.c	FUNCTION_5	IF_1
0x4002b89	            0x89c3	                            mov ebx, eax	       200	expr.c	FUNCTION_5	CALL_1
0x4002b8b	            0x7426	                            je 0x4002bb3	       203	expr.c	FUNCTION_5	IF_1
0x4002b8d	          0x83f802	                              cmp eax, 2	       205	expr.c	FUNCTION_5	IF_1	IF_2
0x4002b90	      0xba05000000	                              mov edx, 5	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4002b95	     0xf84bf060000	                            je 0x400325a	       205	expr.c	FUNCTION_5	IF_1	IF_2
0x4002b9b	      0xbe00000000	                              mov esi, 0	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4002ba0	            0x31ff	                            xor edi, edi	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4002ba2	      0xe800000000	                          call 0x4002ba7	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4002ba7	            0x89de	                            mov esi, ebx	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4002ba9	          0x4889c7	                            mov rdi, rax	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4002bac	            0x31c0	                            xor eax, eax	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4002bae	      0xe800000000	                          call 0x4002bb3	       211	expr.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x4002bb3	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x4002bb8	        0xc6451806	                mov byte [rbp + 0x18], 6	       215	expr.c	FUNCTION_5
0x4002bbc	    0x488b1d000000	            mov rbx, qword [0x04002bc3] 	       215	expr.c	FUNCTION_5
0x4002bc3	     0xfb680000000	                   movzx eax, byte [rax]	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x4002bca	            0xf7d8	                                 neg eax	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x4002bcc	            0x4898	                                    cdqe	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x4002bce	        0x48894510	            mov qword [rbp + 0x10], rax 	       939	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_20
0x4002bd2	      0xb840000000	                           mov eax, 0x40	       940	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002bd7	      0xe92cfaffff	                           jmp 0x4002608	       940	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002bdc	         0xfb64302	               movzx eax, byte [rbx + 2]	       866	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4002be0	          0x83e830	                           sub eax, 0x30	       866	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4002be3	            0x3c01	                               cmp al, 1	       866	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4002be5	            0x765f	                           jbe 0x4002c46	       866	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4002be7	           0xfbef2	                           movsx esi, dl	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x4002bea	      0xbf00000000	                              mov edi, 0	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x4002bef	      0xe800000000	                          call 0x4002bf4	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x4002bf4	          0x4885c0	                           test rax, rax	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x4002bf7	     0xf8566ffffff	                           jne 0x4002b63	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x4002bfd	        0xc6451802	                mov byte [rbp + 0x18], 2	       839	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	ELSE_1
0x4002c01	    0x48c745100000	               mov qword [rbp + 0x10], 0	       840	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	ELSE_1
0x4002c09	          0x4c89eb	                            mov rbx, r13	       758	expr.c	FUNCTION_11
0x4002c0c	      0xb804000000	                              mov eax, 4	       840	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	ELSE_1
0x4002c11	      0xe9f2f9ffff	                           jmp 0x4002608	       840	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	ELSE_1
0x4002c16	         0xfb64302	               movzx eax, byte [rbx + 2]	       898	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4002c1a	    0x80b800000000	                       cmp byte [rax], 0	       898	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4002c21	     0xf84b3050000	                            je 0x40031da	       898	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4002c27	        0x4983ed01	                              sub r13, 1	       916	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x4002c2b	    0x4c892d000000	            mov qword [0x04002c32], r13 	       916	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x4002c32	      0xe990fdffff	                           jmp 0x40029c7	       916	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x4002c37	         0xfb64302	               movzx eax, byte [rbx + 2]	       854	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x4002c3b	          0x83e830	                           sub eax, 0x30	       854	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x4002c3e	            0x3c01	                               cmp al, 1	       854	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x4002c40	     0xf87a4040000	                            ja 0x40030ea	       854	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x4002c46	        0x4883c302	                              add rbx, 2	       869	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4002c4a	          0x4889ee	                            mov rsi, rbp	       870	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9	CALL_13
0x4002c4d	      0xbf02000000	                              mov edi, 2	       870	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9	CALL_13
0x4002c52	    0x48891d000000	            mov qword [0x04002c59], rbx 	       869	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4002c59	      0xe8e2d3ffff	               call sym.integer_constant	       870	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9	CALL_13
0x4002c5e	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	       870	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9	CALL_13
0x4002c62	    0x488b1d000000	            mov rbx, qword [0x04002c69] 	       870	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9	CALL_13
0x4002c69	      0xe971fdffff	                           jmp 0x40029df	       871	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_9
0x4002c6e	          0x4889fe	                            mov rsi, rdi	       885	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_14
0x4002c71	      0xbf08000000	                              mov edi, 8	       885	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_14
0x4002c76	      0xe8c5d3ffff	               call sym.integer_constant	       885	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_14
0x4002c7b	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	       885	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_14
0x4002c7f	    0x488b1d000000	            mov rbx, qword [0x04002c86] 	       885	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_14
0x4002c86	      0xe954fdffff	                           jmp 0x40029df	       888	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002c8b	        0x4883c302	                              add rbx, 2	       849	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002c8f	          0x4889fe	                            mov rsi, rdi	       850	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_11
0x4002c92	      0xbf10000000	                           mov edi, 0x10	       850	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_11
0x4002c97	    0x48891d000000	            mov qword [0x04002c9e], rbx 	       849	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002c9e	      0xe89dd3ffff	               call sym.integer_constant	       850	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_11
0x4002ca3	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	       850	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_11
0x4002ca7	    0x488b1d000000	            mov rbx, qword [0x04002cae] 	       850	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_11
0x4002cae	      0xe92cfdffff	                           jmp 0x40029df	       851	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4002cb3	            0x84d2	                             test dl, dl	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x4002cb5	     0xf8442ffffff	                            je 0x4002bfd	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x4002cbb	      0xe927ffffff	                           jmp 0x4002be7	       830	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_6	CALL_8
0x4002cc0	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1031	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002cc5	            0x3c2d	                            cmp al, 0x2d	      1031	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002cc7	     0xf8478010000	                            je 0x4002e45	      1031	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002ccd	            0x3c7e	                            cmp al, 0x7e	      1042	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4002ccf	     0xf844d010000	                            je 0x4002e22	      1042	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4002cd5	            0x3c22	                            cmp al, 0x22	      1042	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4002cd7	     0xf8445010000	                            je 0x4002e22	      1042	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4002cdd	            0x3c21	                            cmp al, 0x21	      1044	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002cdf	     0xf857ffdffff	                           jne 0x4002a64	      1044	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002ce5	            0x31c0	                            xor eax, eax	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002ce7	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002cec	    0x488b1d000000	            mov rbx, qword [0x04002cf3] 	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002cf3	           0xf94c0	                                 sete al	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002cf6	        0x48894510	            mov qword [rbp + 0x10], rax 	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002cfa	      0xb804000000	                              mov eax, 4	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002cff	      0xe904f9ffff	                           jmp 0x4002608	      1045	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_6	IF_28
0x4002d04	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1048	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4002d08	          0x4885d2	                           test rdx, rdx	      1048	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4002d0b	     0xf8e6f030000	                           jle 0x4003080	      1048	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4002d11	       0xfb65c240f	            movzx ebx, byte [rsp + 0xf] 	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4002d16	          0x80fb7e	                            cmp bl, 0x7e	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4002d19	     0xf8469010000	                            je 0x4002e88	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4002d1f	          0x80fb2d	                            cmp bl, 0x2d	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4002d22	     0xf8460010000	                            je 0x4002e88	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4002d28	          0x80fb21	                            cmp bl, 0x21	      1085	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4002d2b	     0xf842a040000	                            je 0x400315b	      1085	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4002d31	    0x488b1d000000	            mov rbx, qword [0x04002d38] 	      1085	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4002d38	      0xb840000000	                           mov eax, 0x40	      1085	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4002d3d	      0xe9c6f8ffff	                           jmp 0x4002608	      1085	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4002d42	           0xfb62a	                   movzx ebp, byte [rdx]	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002d45	        0x4080fd29	                           cmp bpl, 0x29	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002d49	     0xf84cefaffff	                            je 0x400281d	       966	expr.c	FUNCTION_11	SWITCH_1	IF_17
0x4002d4f	          0x4084ed	                           test bpl, bpl	       969	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18
0x4002d52	     0xf856a040000	                           jne 0x40031c2	       969	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18
0x4002d58	      0xbd29000000	                           mov ebp, 0x29	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d5d	      0xba05000000	                              mov edx, 5	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d62	      0xbe00000000	                              mov esi, 0	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d67	            0x31ff	                            xor edi, edi	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d69	      0xe800000000	                          call 0x4002d6e	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d6e	            0x89ee	                            mov esi, ebp	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d70	          0x4889c7	                            mov rdi, rax	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d73	            0x31c0	                            xor eax, eax	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d75	      0xe800000000	                          call 0x4002d7a	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d7a	    0x488b15000000	            mov rdx, qword [0x04002d81] 	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d81	      0xe9a2faffff	                           jmp 0x4002828	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4002d86	          0x83fb01	                              cmp ebx, 1	      1280	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4002d89	     0xf8611fdffff	                           jbe 0x4002aa0	      1280	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4002d8f	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1282	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_75
0x4002d94	    0x488b15000000	            mov rdx, qword [0x04002d9b] 	      2367	expr.c	FUNCTION_22
0x4002d9b	            0x3c22	                            cmp al, 0x22	      2368	expr.c	FUNCTION_22	IF_1
0x4002d9d	            0x8802	                      mov byte [rdx], al	      2367	expr.c	FUNCTION_22
0x4002d9f	     0xf8485030000	                            je 0x400312a	      2368	expr.c	FUNCTION_22	IF_1
0x4002da5	          0x4489e2	                           mov edx, r12d	      1283	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_76
0x4002da8	          0x4889ee	                            mov rsi, rbp	      1283	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_76
0x4002dab	      0xbf09000000	                              mov edi, 9	      1283	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_76
0x4002db0	      0xe800000000	                          call 0x4002db5	      1283	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_76
0x4002db5	          0x4889ef	                            mov rdi, rbp	      1284	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_77
0x4002db8	      0xe800000000	                          call 0x4002dbd	      1284	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_77
0x4002dbd	            0x89d9	                            mov ecx, ebx	      1287	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4002dbf	          0x885d18	               mov byte [rbp + 0x18], bl	      1287	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4002dc2	        0x48894500	                    mov qword [rbp], rax	      1284	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56	CALL_77
0x4002dc6	    0x48c745080000	                  mov qword [rbp + 8], 0	      1285	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4002dce	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1286	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4002dd6	    0x488b1d000000	            mov rbx, qword [0x04002ddd] 	      1286	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4002ddd	      0xe9fdfbffff	                           jmp 0x40029df	      1288	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_56
0x4002de2	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1262	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_70
0x4002de7	    0x488b15000000	            mov rdx, qword [0x04002dee] 	      2367	expr.c	FUNCTION_22
0x4002dee	            0x3c22	                            cmp al, 0x22	      2368	expr.c	FUNCTION_22	IF_1
0x4002df0	            0x8802	                      mov byte [rdx], al	      2367	expr.c	FUNCTION_22
0x4002df2	     0xf84d5030000	                            je 0x40031cd	      2368	expr.c	FUNCTION_22	IF_1
0x4002df8	      0xc644240f2d	              mov byte [rsp + 0xf], 0x2d	      1263	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002dfd	      0xe95ef9ffff	                           jmp 0x4002760	      1264	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002e02	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1266	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3	CALL_71
0x4002e07	    0x488b15000000	            mov rdx, qword [0x04002e0e] 	      2367	expr.c	FUNCTION_22
0x4002e0e	            0x3c22	                            cmp al, 0x22	      2368	expr.c	FUNCTION_22	IF_1
0x4002e10	            0x8802	                      mov byte [rdx], al	      2367	expr.c	FUNCTION_22
0x4002e12	     0xf842f030000	                            je 0x4003147	      2368	expr.c	FUNCTION_22	IF_1
0x4002e18	      0xc644240f7e	              mov byte [rsp + 0xf], 0x7e	      1267	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002e1d	      0xe93ef9ffff	                           jmp 0x4002760	      1268	expr.c	FUNCTION_11	SWITCH_1	IF_55	SWITCH_3
0x4002e22	        0x48f75510	                  not qword [rbp + 0x10]	      1043	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4002e26	    0x488b1d000000	            mov rbx, qword [0x04002e2d] 	      1043	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4002e2d	      0xb804000000	                              mov eax, 4	      1043	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4002e32	      0xe9d1f7ffff	                           jmp 0x4002608	      1043	expr.c	FUNCTION_11	SWITCH_1	IF_24	ELSE_5	IF_27
0x4002e37	        0xc6451808	                mov byte [rbp + 0x18], 8	      1105	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x4002e3b	      0xb908000000	                              mov ecx, 8	      1105	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x4002e40	      0xe98bf9ffff	                           jmp 0x40027d0	      1105	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	ELSE_12	IF_41
0x4002e45	         0xfb65519	           movzx edx, byte [rbp + 0x19] 	      1038	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002e49	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	      1034	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002e4d	          0x48f7d9	                                 neg rcx	      1034	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002e50	            0x89d0	                            mov eax, edx	      1038	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002e52	        0x48894d10	            mov qword [rbp + 0x10], rcx 	      1034	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002e56	          0x83e0fe	                     and eax, 0xfffffffe	      1038	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002e59	          0x4885c9	                           test rcx, rcx	      1039	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e5c	          0x884519	               mov byte [rbp + 0x19], al	      1038	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25
0x4002e5f	     0xf84fffbffff	                            je 0x4002a64	      1039	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e65	            0xd0e8	                               shr al, 1	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e67	          0x83e2fc	                     and edx, 0xfffffffc	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e6a	          0x83e001	                              and eax, 1	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e6d	          0x83f001	                              xor eax, 1	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e70	             0x1c0	                            add eax, eax	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e72	             0x9d0	                             or eax, edx	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e74	          0x884519	               mov byte [rbp + 0x19], al	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e77	      0xb804000000	                              mov eax, 4	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e7c	    0x488b1d000000	            mov rbx, qword [0x04002e83] 	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e83	      0xe980f7ffff	                           jmp 0x4002608	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e88	        0x488d42f8	                      lea rax, [rdx - 8]	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e8c	        0x488d4aff	                      lea rcx, [rdx - 1]	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e90	        0x48c1e803	                              shr rax, 3	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e94	        0x4883c001	                              add rax, 1	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e98	        0x4883f906	                              cmp rcx, 6	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002e9c	    0x488d34c50000	                        lea rsi, [rax*8]	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002ea4	     0xf86aa020000	                           jbe 0x4003154	      1040	expr.c	FUNCTION_11	SWITCH_1	IF_24	IF_25	IF_26
0x4002eaa	        0x660f76c0	                      pcmpeqd xmm0, xmm0	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002eae	    0x660f6f0d0000	       movdqa xmm1, xmmword [0x04002eb6]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002eb6	        0x4883f801	                              cmp rax, 1	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002eba	        0x660fefc8	                         pxor xmm1, xmm0	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ebe	     0xf290d000000	      movaps xmmword [0x04002ec5], xmm1 	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ec5	            0x7441	                            je 0x4002f08	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ec7	        0x4883f802	                              cmp rax, 2	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ecb	    0x660f6f0d0000	       movdqa xmm1, xmmword [0x04002ed3]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ed3	        0x660fefc8	                         pxor xmm1, xmm0	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ed7	     0xf290d000000	      movaps xmmword [0x04002ede], xmm1 	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ede	            0x7428	                            je 0x4002f08	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ee0	        0x4883f803	                              cmp rax, 3	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ee4	    0x660f6f0d0000	       movdqa xmm1, xmmword [0x04002eec]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002eec	        0x660fefc8	                         pxor xmm1, xmm0	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ef0	     0xf290d000000	      movaps xmmword [0x04002ef7], xmm1 	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ef7	            0x740f	                            je 0x4002f08	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002ef9	    0x660fef050000	         pxor xmm0, xmmword [0x04002f01]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f01	     0xf2905000000	      movaps xmmword [0x04002f08], xmm0 	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f08	          0x4839f2	                            cmp rdx, rsi	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f0b	            0x89f0	                            mov eax, esi	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f0d	            0x747c	                            je 0x4002f8b	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f0f	          0x4863f0	                         movsxd rsi, eax	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f12	    0x66f794360000	                    not word [rsi + rsi]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f1a	          0x8d7001	                      lea esi, [rax + 1]	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f1d	          0x4863f6	                         movsxd rsi, esi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f20	          0x4839f2	                            cmp rdx, rsi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f23	            0x7e66	                           jle 0x4002f8b	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f25	    0x66f794360000	                    not word [rsi + rsi]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f2d	          0x8d7002	                      lea esi, [rax + 2]	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f30	          0x4863f6	                         movsxd rsi, esi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f33	          0x4839f2	                            cmp rdx, rsi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f36	            0x7e53	                           jle 0x4002f8b	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f38	    0x66f794360000	                    not word [rsi + rsi]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f40	          0x8d7003	                      lea esi, [rax + 3]	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f43	          0x4863f6	                         movsxd rsi, esi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f46	          0x4839f2	                            cmp rdx, rsi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f49	            0x7e40	                           jle 0x4002f8b	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f4b	    0x66f794360000	                    not word [rsi + rsi]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f53	          0x8d7004	                      lea esi, [rax + 4]	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f56	          0x4863f6	                         movsxd rsi, esi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f59	          0x4839f2	                            cmp rdx, rsi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f5c	            0x7e2d	                           jle 0x4002f8b	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f5e	    0x66f794360000	                    not word [rsi + rsi]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f66	          0x8d7005	                      lea esi, [rax + 5]	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f69	          0x4863f6	                         movsxd rsi, esi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f6c	          0x4839f2	                            cmp rdx, rsi	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f6f	            0x7e1a	                           jle 0x4002f8b	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f71	          0x83c006	                              add eax, 6	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f74	    0x66f794360000	                    not word [rsi + rsi]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f7c	            0x4898	                                    cdqe	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f7e	          0x4839d0	                            cmp rax, rdx	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f81	            0x7d08	                           jge 0x4002f8b	      1066	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f83	    0x66f794000000	                    not word [rax + rax]	      1067	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	FOR_2
0x4002f8b	        0x4883fa13	                           cmp rdx, 0x13	      1070	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33
0x4002f8f	            0x7f33	                            jg 0x4002fc4	      1070	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33
0x4002f91	          0x83f912	                           cmp ecx, 0x12	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002f94	    0x48c745101400	           mov qword [rbp + 0x10], 0x14 	      1072	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33
0x4002f9c	            0x7f21	                            jg 0x4002fbf	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002f9e	      0xb812000000	                           mov eax, 0x12	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002fa3	      0xbeff000000	                           mov esi, 0xff	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002fa8	            0x29c8	                            sub eax, ecx	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002faa	          0x4863c9	                         movsxd rcx, ecx	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002fad	      0x488d540002	                lea rdx, [rax + rax + 2]	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002fb2	    0x488dbc090000	                    lea rdi, [rcx + rcx]	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002fba	      0xe800000000	                          call 0x4002fbf	      1073	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_33	FOR_3
0x4002fbf	      0xba14000000	                           mov edx, 0x14	       979	expr.c	FUNCTION_11	SWITCH_1
0x4002fc4	          0x80fb2d	                            cmp bl, 0x2d	      1077	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34
0x4002fc7	     0xf8507faffff	                           jne 0x40029d4	      1077	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34
0x4002fcd	     0xfb705000000	           movzx eax, word [0x04002fd4] 	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4002fd4	          0x8d4801	                      lea ecx, [rax + 1]	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4002fd7	      0xb801000000	                              mov eax, 1	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x4002fdc	          0x6685c9	                             test cx, cx	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x4002fdf	    0x66890d000000	               mov word [0x04002fe6], cx	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4002fe6	            0x7424	                            je 0x400300c	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x4002fe8	      0xe9ed030000	                           jmp 0x40033da	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x4002fed	           0xf1f00	                         nop dword [rax]	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x4002ff0	     0xfb78c000000	             movzx ecx, word [rax + rax]	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4002ff8	          0x83c101	                              add ecx, 1	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4002ffb	    0x66898c000000	                mov word [rax + rax], cx	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003003	        0x4883c001	                              add rax, 1	      1080	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003007	          0x6685c9	                             test cx, cx	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x400300a	            0x7505	                           jne 0x4003011	      1081	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4	IF_35
0x400300c	          0x4839d0	                            cmp rax, rdx	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x400300f	            0x7cdf	                            jl 0x4002ff0	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003011	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003015	      0xb801000000	                              mov eax, 1	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x400301a	    0x488b1d000000	            mov rbx, qword [0x04003021] 	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003021	          0x48d3e0	                             shl rax, cl	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003024	          0x4889c2	                            mov rdx, rax	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003027	    0x81e288010000	                          and edx, 0x188	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x400302d	          0x4885d2	                           test rdx, rdx	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003030	     0xf85dafaffff	                           jne 0x4002b10	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003036	      0xe9cdf5ffff	                           jmp 0x4002608	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x400303b	       0xf1f440000	                   nop dword [rax + rax]	      1078	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32	IF_34	FOR_4
0x4003040	       0xfbe5c240f	            movsx ebx, byte [rsp + 0xf] 	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4003045	      0xba05000000	                              mov edx, 5	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x400304a	      0xbe00000000	                              mov esi, 0	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x400304f	            0x31ff	                            xor edi, edi	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4003051	      0xe800000000	                          call 0x4003056	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4003056	          0x4889c7	                            mov rdi, rax	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4003059	            0x31c0	                            xor eax, eax	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x400305b	            0x89de	                            mov esi, ebx	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x400305d	      0xe800000000	                          call 0x4003062	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4003062	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4003066	    0x488b1d000000	            mov rbx, qword [0x0400306d] 	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x400306d	      0xe96df9ffff	                           jmp 0x40029df	      1112	expr.c	FUNCTION_11	SWITCH_1	ELSE_14	CALL_36
0x4003072	        0xc6451807	                mov byte [rbp + 0x18], 7	      1103	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x4003076	      0xb907000000	                              mov ecx, 7	      1103	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x400307b	      0xe950f7ffff	                           jmp 0x40027d0	      1103	expr.c	FUNCTION_11	SWITCH_1	ELSE_11	IF_38	IF_39	IF_40
0x4003080	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1049	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4003085	            0x3c2d	                            cmp al, 0x2d	      1049	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4003087	     0xf8502f7ffff	                           jne 0x400278f	      1049	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x400308d	     0xfb605000000	           movzx eax, byte [0x04003094] 	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4003094	            0x3c2b	                            cmp al, 0x2b	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4003096	            0x7408	                            je 0x40030a0	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x4003098	            0x3c50	                            cmp al, 0x50	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x400309a	     0xf85fef6ffff	                           jne 0x400279e	      1050	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29
0x40030a0	            0x3c2b	                            cmp al, 0x2b	      1054	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x40030a2	     0xf84b7020000	                            je 0x400335f	      1054	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x40030a8	    0xc60500000000	            mov byte [0x040030af], 0x4e 	      1057	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	ELSE_8
0x40030af	    0x488b1d000000	            mov rbx, qword [0x040030b6] 	      1057	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	ELSE_8
0x40030b6	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1057	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	ELSE_8
0x40030ba	      0xe920f9ffff	                           jmp 0x40029df	      1057	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	ELSE_8
0x40030bf	      0xba05000000	                              mov edx, 5	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030c4	      0xbe00000000	                              mov esi, 0	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030c9	            0x31ff	                            xor edi, edi	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030cb	      0xe800000000	                          call 0x40030d0	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030d0	          0x4889c7	                            mov rdi, rax	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030d3	            0x31c0	                            xor eax, eax	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030d5	      0xe800000000	                          call 0x40030da	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030da	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030de	    0x488b1d000000	            mov rbx, qword [0x040030e5] 	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030e5	      0xe9f5f8ffff	                           jmp 0x40029df	      1193	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_61
0x40030ea	          0x4889fe	                            mov rsi, rdi	       860	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8	CALL_12
0x40030ed	      0xbf0a000000	                            mov edi, 0xa	       860	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8	CALL_12
0x40030f2	    0x48891d000000	            mov qword [0x040030f9], rbx 	       859	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x40030f9	      0xe842cfffff	               call sym.integer_constant	       860	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8	CALL_12
0x40030fe	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	       860	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8	CALL_12
0x4003102	    0x488b1d000000	            mov rbx, qword [0x04003109] 	       860	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8	CALL_12
0x4003109	      0xe9d1f8ffff	                           jmp 0x40029df	       861	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_8
0x400310e	    0x488b05000000	            mov rax, qword [0x04003115] 	       721	expr.c	FUNCTION_10	IF_1
0x4003115	        0xc6471802	                mov byte [rdi + 0x18], 2	       720	expr.c	FUNCTION_10	IF_1
0x4003119	          0x4c89eb	                            mov rbx, r13	       758	expr.c	FUNCTION_11
0x400311c	        0x48894710	             mov qword [rdi + 0x10], rax	       721	expr.c	FUNCTION_10	IF_1
0x4003120	      0xb804000000	                              mov eax, 4	       721	expr.c	FUNCTION_10	IF_1
0x4003125	      0xe9def4ffff	                           jmp 0x4002608	       721	expr.c	FUNCTION_10	IF_1
0x400312a	    0x488305000000	               add qword [0x04003132], 1	      2369	expr.c	FUNCTION_22	IF_1
0x4003132	      0xe96efcffff	                           jmp 0x4002da5	      2369	expr.c	FUNCTION_22	IF_1
0x4003137	        0x4883c001	                              add rax, 1	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x400313b	    0x488905000000	            mov qword [0x04003142], rax 	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x4003142	      0xe9b1f7ffff	                           jmp 0x40028f8	      1156	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	CALL_47
0x4003147	    0x488305000000	               add qword [0x0400314f], 1	      2369	expr.c	FUNCTION_22	IF_1
0x400314f	      0xe9c4fcffff	                           jmp 0x4002e18	      2369	expr.c	FUNCTION_22	IF_1
0x4003154	            0x31c0	                            xor eax, eax	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x4003156	      0xe9b4fdffff	                           jmp 0x4002f0f	      1064	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	IF_32
0x400315b	    0x66833d000000	                cmp word [0x04003163], 0	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x4003163	      0xb801000000	                              mov eax, 1	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x4003168	            0x7415	                            je 0x400317f	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x400316a	      0xe944020000	                           jmp 0x40033b3	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x400316f	              0x90	                                     nop	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x4003170	        0x4883c001	                              add rax, 1	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x4003174	    0x6683bc000000	                 cmp word [rax + rax], 0	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x400317d	            0x7508	                           jne 0x4003187	      1088	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5	IF_37
0x400317f	          0x4839c2	                            cmp rdx, rax	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x4003182	          0x4889c1	                            mov rcx, rax	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x4003185	            0x75e9	                           jne 0x4003170	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x4003187	            0x31c0	                            xor eax, eax	      1090	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4003189	          0x4839ca	                            cmp rdx, rcx	      1090	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x400318c	        0xc6451802	                mov byte [rbp + 0x18], 2	      1091	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4003190	           0xf9ec0	                                setle al	      1090	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4003193	        0x48894510	            mov qword [rbp + 0x10], rax 	      1090	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x4003197	         0xfb64519	           movzx eax, byte [rbp + 0x19] 	      1092	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x400319b	          0x83c801	                               or eax, 1	      1092	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x400319e	          0x83e0fd	                     and eax, 0xfffffffd	      1093	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40031a1	          0x884519	               mov byte [rbp + 0x19], al	      1093	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40031a4	      0xb804000000	                              mov eax, 4	      1093	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40031a9	    0x488b1d000000	            mov rbx, qword [0x040031b0] 	      1093	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40031b0	      0xe953f4ffff	                           jmp 0x4002608	      1093	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36
0x40031b5	    0x488305000000	               add qword [0x040031bd], 1	      2369	expr.c	FUNCTION_22	IF_1
0x40031bd	      0xe998f5ffff	                           jmp 0x400275a	      2369	expr.c	FUNCTION_22	IF_1
0x40031c2	    0x41bc29000000	                          mov r12d, 0x29	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40031c8	      0xe968f9ffff	                           jmp 0x4002b35	       970	expr.c	FUNCTION_11	SWITCH_1	IF_17	IF_18	CALL_25
0x40031cd	    0x488305000000	               add qword [0x040031d5], 1	      2369	expr.c	FUNCTION_22	IF_1
0x40031d5	      0xe91efcffff	                           jmp 0x4002df8	      2369	expr.c	FUNCTION_22	IF_1
0x40031da	      0xbe66000000	                           mov esi, 0x66	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x40031df	      0xbf00000000	                              mov edi, 0	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x40031e4	      0xe800000000	                          call 0x40031e9	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x40031e9	          0x4885c0	                           test rax, rax	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x40031ec	     0xf8435faffff	                            je 0x4002c27	       899	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_15
0x40031f2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x40031f7	        0x4883c302	                              add rbx, 2	       901	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40031fb	      0xb900000000	                              mov ecx, 0	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x4003200	      0xba00000000	                              mov edx, 0	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x4003205	      0xbe00000000	                              mov esi, 0	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x400320a	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       901	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x400320f	      0xe800000000	                          call 0x4003214	       903	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12	CALL_16
0x4003214	    0x4c8b2d000000	            mov r13, qword [0x0400321b] 	       908	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x400321b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       908	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4003220	        0x498d5d01	                      lea rbx, [r13 + 1]	       908	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4003224	          0x4839c3	                            cmp rbx, rax	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4003227	     0xf84faf9ffff	                            je 0x4002c27	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x400322d	        0x498d5502	                      lea rdx, [r13 + 2]	       909	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4003231	          0x4839d0	                            cmp rax, rdx	       909	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4003234	     0xf84bc010000	                            je 0x40033f6	       909	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x400323a	           0xfb600	                   movzx eax, byte [rax]	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x400323d	          0x83e0fb	                     and eax, 0xfffffffb	       912	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4003240	            0x3c62	                            cmp al, 0x62	       914	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x4003242	     0xf851ff9ffff	                           jne 0x4002b67	       914	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x4003248	      0xe9daf9ffff	                           jmp 0x4002c27	       914	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x400324d	           0xf1f00	                         nop dword [rax]	       914	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_13
0x4003250	      0xbd5d000000	                           mov ebp, 0x5d	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x4003255	      0xe903fbffff	                           jmp 0x4002d5d	       973	expr.c	FUNCTION_11	SWITCH_1	IF_17	CALL_27
0x400325a	            0x31ff	                            xor edi, edi	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400325c	      0xbe00000000	                              mov esi, 0	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4003261	      0xe800000000	                          call 0x4003266	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4003266	          0x4889c7	                            mov rdi, rax	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4003269	            0x31c0	                            xor eax, eax	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400326b	      0xe800000000	                          call 0x4003270	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4003270	      0xe93ef9ffff	                           jmp 0x4002bb3	       207	expr.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4003275	      0xba05000000	                              mov edx, 5	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x400327a	            0x31ff	                            xor edi, edi	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x400327c	      0xbe00000000	                              mov esi, 0	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x4003281	      0xe800000000	                          call 0x4003286	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x4003286	          0x4889c7	                            mov rdi, rax	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x4003289	            0x31c0	                            xor eax, eax	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x400328b	      0xe800000000	                          call 0x4003290	      1172	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_53
0x4003290	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      1173	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_54
0x4003295	    0x488b15000000	            mov rdx, qword [0x0400329c] 	      2367	expr.c	FUNCTION_22
0x400329c	            0x3c22	                            cmp al, 0x22	      2368	expr.c	FUNCTION_22	IF_1
0x400329e	            0x8802	                      mov byte [rdx], al	      2367	expr.c	FUNCTION_22
0x40032a0	     0xf842a010000	                            je 0x40033d0	      2368	expr.c	FUNCTION_22	IF_1
0x40032a6	      0x807c240f29	              cmp byte [rsp + 0xf], 0x29	      1174	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	IF_49
0x40032ab	            0x742c	                            je 0x40032d9	      1174	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	IF_49
0x40032ad	      0xe800000000	                          call 0x40032b2	      1175	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_55
0x40032b2	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1175	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_55
0x40032b6	    0x488b1d000000	            mov rbx, qword [0x040032bd] 	      1175	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_55
0x40032bd	      0xe91df7ffff	                           jmp 0x40029df	      1175	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	CALL_55
0x40032c2	        0x488d5301	                      lea rdx, [rbx + 1]	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x40032c6	    0x488915000000	            mov qword [0x040032cd], rdx 	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x40032cd	         0xfb64301	               movzx eax, byte [rbx + 1]	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x40032d1	          0x4889d3	                            mov rbx, rdx	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x40032d4	      0xe9bdf6ffff	                           jmp 0x4002996	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x40032d9	    0x488b05000000	            mov rax, qword [0x040032e0] 	      1177	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	ELSE_17
0x40032e0	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1177	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	ELSE_17
0x40032e4	        0x488d5801	                      lea rbx, [rax + 1]	      1177	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	ELSE_17
0x40032e8	    0x48891d000000	            mov qword [0x040032ef], rbx 	      1177	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	ELSE_17
0x40032ef	      0xe9ebf6ffff	                           jmp 0x40029df	      1177	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	IF_48	ELSE_17
0x40032f4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1305	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_80
0x40032f9	      0xe800000000	                          call 0x40032fe	      1305	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_80
0x40032fe	          0x4889c7	                            mov rdi, rax	      1309	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_81
0x4003301	          0x4889c3	                            mov rbx, rax	      1305	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_80
0x4003304	      0xe800000000	                          call 0x4003309	      1309	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_81
0x4003309	        0x4183fc02	                             cmp r12d, 2	      1310	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x400330d	          0x4989c5	                            mov r13, rax	      1309	expr.c	FUNCTION_11	SWITCH_1	IF_55	CALL_81
0x4003310	            0x7411	                            je 0x4003323	      1310	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x4003312	    0x483d00000000	                              cmp rax, 0	      1311	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x4003318	            0x7471	                            je 0x400338b	      1311	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x400331a	    0x4c3b2d000000	            cmp r13, qword [0x04003321] 	      1317	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59
0x4003321	            0x7453	                            je 0x4003376	      1317	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59
0x4003323	        0xc6451803	                mov byte [rbp + 0x18], 3	      1324	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_21
0x4003327	        0x48895d00	                    mov qword [rbp], rbx	      1325	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_21
0x400332b	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1326	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_21
0x4003333	      0xe982f7ffff	                           jmp 0x4002aba	      1326	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_21
0x4003338	        0x488d5301	                      lea rdx, [rbx + 1]	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400333c	    0x488915000000	            mov qword [0x04003343], rdx 	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4003343	         0xfb64301	               movzx eax, byte [rbx + 1]	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x4003347	          0x4889d3	                            mov rbx, rdx	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400334a	      0xe94ff6ffff	                           jmp 0x400299e	      1191	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_59
0x400334f	        0x4883c002	                              add rax, 2	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x4003353	    0x488905000000	            mov qword [0x0400335a], rax 	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x400335a	      0xe9bbf5ffff	                           jmp 0x400291a	      1168	expr.c	FUNCTION_11	SWITCH_1	ELSE_15	IF_46	ELSE_16	CALL_50
0x400335f	    0xc60500000000	            mov byte [0x04003366], 0x2d 	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x4003366	    0x488b1d000000	            mov rbx, qword [0x0400336d] 	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x400336d	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x4003371	      0xe969f6ffff	                           jmp 0x40029df	      1055	expr.c	FUNCTION_11	SWITCH_1	ELSE_7	IF_29	IF_30
0x4003376	        0xc6451805	                mov byte [rbp + 0x18], 5	      1319	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59
0x400337a	          0x4889df	                            mov rdi, rbx	      1320	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59	CALL_84
0x400337d	      0xe800000000	                          call 0x4003382	      1320	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59	CALL_84
0x4003382	        0x48894510	            mov qword [rbp + 0x10], rax 	      1320	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59	CALL_84
0x4003386	      0xe92ff7ffff	                           jmp 0x4002aba	      1320	expr.c	FUNCTION_11	SWITCH_1	IF_55	ELSE_20	IF_59	CALL_84
0x400338b	            0x31f6	                            xor esi, esi	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x400338d	          0x4889df	                            mov rdi, rbx	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4003390	      0xe800000000	                          call 0x4003395	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4003395	            0x85c0	                           test eax, eax	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4003397	            0x7581	                           jne 0x400331a	      1312	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_82
0x4003399	        0xc6451802	                mov byte [rbp + 0x18], 2	      1314	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58
0x400339d	          0x4889df	                            mov rdi, rbx	      1315	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_83
0x40033a0	      0xe800000000	                          call 0x40033a5	      1315	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_83
0x40033a5	        0x48894510	            mov qword [rbp + 0x10], rax 	      1315	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_83
0x40033a9	      0xe90cf7ffff	                           jmp 0x4002aba	      1315	expr.c	FUNCTION_11	SWITCH_1	IF_55	IF_58	CALL_83
0x40033ae	      0xe800000000	                          call 0x40033b3	      1378	expr.c	FUNCTION_11
0x40033b3	            0x31c9	                            xor ecx, ecx	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033b5	      0xe9cdfdffff	                           jmp 0x4003187	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033ba	      0xb801000000	                              mov eax, 1	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033bf	          0x48d3e0	                             shl rax, cl	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033c2	          0x4889c2	                            mov rdx, rax	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033c5	    0x81e288010000	                          and edx, 0x188	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033cb	      0xe95dfcffff	                           jmp 0x400302d	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033d0	      0xe88bd2ffff	    call sym.restore_line_pointer.part.1	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033d5	      0xe9ccfeffff	                           jmp 0x40032a6	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033da	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033de	    0x488b1d000000	            mov rbx, qword [0x040033e5] 	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033e5	          0x48d3e0	                             shl rax, cl	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033e8	          0x4889c2	                            mov rdx, rax	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033eb	    0x81e288010000	                          and edx, 0x188	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033f1	      0xe937fcffff	                           jmp 0x400302d	      1087	expr.c	FUNCTION_11	SWITCH_1	ELSE_8	ELSE_9	IF_31	ELSE_10	IF_36	FOR_5
0x40033f6	         0xfb648ff	               movzx ecx, byte [rax - 1]	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40033fa	          0x8d51d5	                   lea edx, [rcx - 0x2b]	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x40033fd	    0x81e2fd000000	                           and edx, 0xfd	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4003403	     0xf841ef8ffff	                            je 0x4002c27	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
0x4003409	      0xe92cfeffff	                           jmp 0x400323a	       910	expr.c	FUNCTION_11	SWITCH_1	SWITCH_2	IF_11	IF_12
expr_set_rank	IF,0:ELSE,0:CALL,2:FOR,0:WHILE,0:DO,0:functions,0:SWITCH,0	11
0x4000a30	          0x8d47e2	                   lea eax, [rdi - 0x1e]	      1547	expr.c	FUNCTION_14	CALL_2
0x4000a33	          0x83f81f	                           cmp eax, 0x1f	      1547	expr.c	FUNCTION_14	CALL_2
0x4000a36	            0x770a	                            ja 0x4000a42	      1547	expr.c	FUNCTION_14	CALL_2
0x4000a38	            0x89ff	                            mov edi, edi	      1548	expr.c	FUNCTION_14
0x4000a3a	    0x4088b7000000	                     mov byte [rdi], sil	      1548	expr.c	FUNCTION_14
0x4000a41	              0xc3	                                     ret	      1548	expr.c	FUNCTION_14
0x4000a42	              0x50	                                push rax	      1546	expr.c	FUNCTION_14
0x4000a43	      0xba00000000	                              mov edx, 0	      1547	expr.c	FUNCTION_14	CALL_2
0x4000a48	      0xbe0b060000	                          mov esi, 0x60b	      1547	expr.c	FUNCTION_14	CALL_2
0x4000a4d	      0xbf00000000	                              mov edi, 0	      1547	expr.c	FUNCTION_14	CALL_2
0x4000a52	      0xe800000000	                          call 0x4000a57	      1547	expr.c	FUNCTION_14	CALL_2
expr_build_dot	IF,0:ELSE,0:CALL,3:FOR,0:WHILE,0:DO,0:functions,0:SWITCH,0	52
0x40008f0	              0x55	                                push rbp	       168	expr.c	FUNCTION_4
0x40008f1	              0x53	                                push rbx	       168	expr.c	FUNCTION_4
0x40008f2	        0x4883ec38	                           sub rsp, 0x38	       168	expr.c	FUNCTION_4
0x40008f6	    0x64488b042528	                mov rax, qword fs:[0x28]	       168	expr.c	FUNCTION_4
0x40008ff	      0x4889442428	             mov qword [rsp + 0x28], rax	       168	expr.c	FUNCTION_4
0x4000904	            0x31c0	                            xor eax, eax	       168	expr.c	FUNCTION_4
0x4000906	    0x48813d000000	               cmp qword [0x04000911], 0	       718	expr.c	FUNCTION_10	IF_1
0x4000911	            0x743d	                            je 0x4000950	       718	expr.c	FUNCTION_10	IF_1
0x4000913	    0x48c704240000	                      mov qword [rsp], 0	       726	expr.c	FUNCTION_10	ELSE_1
0x400091b	    0x48c744241000	               mov qword [rsp + 0x10], 0	       726	expr.c	FUNCTION_10	ELSE_1
0x4000924	      0xbf00000000	                              mov edi, 0	        74	expr.c	FUNCTION_1	IF_1
0x4000929	      0xc644241803	                mov byte [rsp + 0x18], 3	        74	expr.c	FUNCTION_1	IF_1
0x400092e	            0x31f6	                            xor esi, esi	       172	expr.c	FUNCTION_4	CALL_3
0x4000930	      0xe800000000	                          call 0x4000935	       172	expr.c	FUNCTION_4	CALL_3
0x4000935	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       173	expr.c	FUNCTION_4
0x400093a	    0x644833142528	                xor rdx, qword fs:[0x28]	       173	expr.c	FUNCTION_4
0x4000943	     0xf8589000000	                           jne 0x40009d2	       173	expr.c	FUNCTION_4
0x4000949	        0x4883c438	                           add rsp, 0x38	       173	expr.c	FUNCTION_4
0x400094d	              0x5b	                                 pop rbx	       173	expr.c	FUNCTION_4
0x400094e	              0x5d	                                 pop rbp	       173	expr.c	FUNCTION_4
0x400094f	              0xc3	                                     ret	       173	expr.c	FUNCTION_4
0x4000950	    0x488b05000000	            mov rax, qword [0x04000957] 	       173	expr.c	FUNCTION_4
0x4000957	            0x31d2	                            xor edx, edx	        97	expr.c	FUNCTION_1	CALL_6
0x4000959	      0xb900000000	                              mov ecx, 0	        97	expr.c	FUNCTION_1	CALL_6
0x400095e	      0xbe00000000	                              mov esi, 0	        97	expr.c	FUNCTION_1	CALL_6
0x4000963	      0xbf00000000	                              mov edi, 0	        97	expr.c	FUNCTION_1	CALL_6
0x4000968	      0xc644241802	                mov byte [rsp + 0x18], 2	        97	expr.c	FUNCTION_1	CALL_6
0x400096d	      0x4889442410	             mov qword [rsp + 0x10], rax	        97	expr.c	FUNCTION_1	CALL_6
0x4000972	      0xe800000000	                          call 0x4000977	        97	expr.c	FUNCTION_1	CALL_6
0x4000977	          0x4889e6	                            mov rsi, rsp	       104	expr.c	FUNCTION_1	CALL_7
0x400097a	          0x4889c7	                            mov rdi, rax	       104	expr.c	FUNCTION_1	CALL_7
0x400097d	          0x4889c3	                            mov rbx, rax	        97	expr.c	FUNCTION_1	CALL_6
0x4000980	      0xe800000000	                          call 0x4000985	       104	expr.c	FUNCTION_1	CALL_7
0x4000985	      0x807c241802	                cmp byte [rsp + 0x18], 2	       106	expr.c	FUNCTION_1	IF_4
0x400098a	            0x743c	                            je 0x40009c8	       106	expr.c	FUNCTION_1	IF_4
0x400098c	      0xbf20000000	                           mov edi, 0x20	       109	expr.c	FUNCTION_1	CALL_9
0x4000991	      0xe800000000	                          call 0x4000996	       109	expr.c	FUNCTION_1	CALL_9
0x4000996	        0x488d7818	                   lea rdi, [rax + 0x18]	       111	expr.c	FUNCTION_1	CALL_10
0x400099a	          0x4889c5	                            mov rbp, rax	       109	expr.c	FUNCTION_1	CALL_9
0x400099d	        0x48895808	                mov qword [rax + 8], rbx	       110	expr.c	FUNCTION_1
0x40009a1	      0xe800000000	                          call 0x40009a6	       111	expr.c	FUNCTION_1	CALL_10
0x40009a6	        0x48894510	            mov qword [rbp + 0x10], rax 	       111	expr.c	FUNCTION_1	CALL_10
0x40009aa	    0x488b05000000	            mov rax, qword [0x040009b1] 	       112	expr.c	FUNCTION_1
0x40009b1	          0x4889df	                            mov rdi, rbx	       115	expr.c	FUNCTION_1
0x40009b4	    0x48892d000000	            mov qword [0x040009bb], rbp 	       113	expr.c	FUNCTION_1
0x40009bb	        0x48894500	                    mov qword [rbp], rax	       112	expr.c	FUNCTION_1
0x40009bf	      0xe96affffff	                           jmp 0x400092e	       112	expr.c	FUNCTION_1
0x40009c4	         0xf1f4000	                         nop dword [rax]	       112	expr.c	FUNCTION_1
0x40009c8	          0x4889df	                            mov rdi, rbx	       107	expr.c	FUNCTION_1	CALL_8
0x40009cb	      0xe800000000	                          call 0x40009d0	       107	expr.c	FUNCTION_1	CALL_8
0x40009d0	            0xebba	                           jmp 0x400098c	       107	expr.c	FUNCTION_1	CALL_8
0x40009d2	      0xe800000000	                          call 0x40009d7	       173	expr.c	FUNCTION_4
expr_build_uconstant	IF,0:ELSE,0:CALL,1:FOR,0:WHILE,0:DO,0:functions,0:SWITCH,0	46
0x4000830	              0x55	                                push rbp	       154	expr.c	FUNCTION_3
0x4000831	              0x53	                                push rbx	       154	expr.c	FUNCTION_3
0x4000832	            0x31d2	                            xor edx, edx	        97	expr.c	FUNCTION_1	CALL_6
0x4000834	      0xb900000000	                              mov ecx, 0	        97	expr.c	FUNCTION_1	CALL_6
0x4000839	      0xbe00000000	                              mov esi, 0	        97	expr.c	FUNCTION_1	CALL_6
0x400083e	        0x4883ec38	                           sub rsp, 0x38	       154	expr.c	FUNCTION_3
0x4000842	    0x64488b042528	                mov rax, qword fs:[0x28]	       154	expr.c	FUNCTION_3
0x400084b	      0x4889442428	             mov qword [rsp + 0x28], rax	       154	expr.c	FUNCTION_3
0x4000850	            0x31c0	                            xor eax, eax	       154	expr.c	FUNCTION_3
0x4000852	       0xfb6442419	           movzx eax, byte [rsp + 0x19] 	       159	expr.c	FUNCTION_3
0x4000857	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       158	expr.c	FUNCTION_3
0x400085c	      0xbf00000000	                              mov edi, 0	        97	expr.c	FUNCTION_1	CALL_6
0x4000861	      0xc644241802	                mov byte [rsp + 0x18], 2	       157	expr.c	FUNCTION_3
0x4000866	          0x83c801	                               or eax, 1	       159	expr.c	FUNCTION_3
0x4000869	          0x83e0fd	                     and eax, 0xfffffffd	       160	expr.c	FUNCTION_3
0x400086c	        0x88442419	               mov byte [rsp + 0x19], al	       160	expr.c	FUNCTION_3
0x4000870	      0xe800000000	                          call 0x4000875	        97	expr.c	FUNCTION_1	CALL_6
0x4000875	          0x4889e6	                            mov rsi, rsp	       104	expr.c	FUNCTION_1	CALL_7
0x4000878	          0x4889c7	                            mov rdi, rax	       104	expr.c	FUNCTION_1	CALL_7
0x400087b	          0x4889c5	                            mov rbp, rax	        97	expr.c	FUNCTION_1	CALL_6
0x400087e	      0xe800000000	                          call 0x4000883	       104	expr.c	FUNCTION_1	CALL_7
0x4000883	      0x807c241802	                cmp byte [rsp + 0x18], 2	       106	expr.c	FUNCTION_1	IF_4
0x4000888	            0x744e	                            je 0x40008d8	       106	expr.c	FUNCTION_1	IF_4
0x400088a	      0xbf20000000	                           mov edi, 0x20	       109	expr.c	FUNCTION_1	CALL_9
0x400088f	      0xe800000000	                          call 0x4000894	       109	expr.c	FUNCTION_1	CALL_9
0x4000894	        0x488d7818	                   lea rdi, [rax + 0x18]	       111	expr.c	FUNCTION_1	CALL_10
0x4000898	          0x4889c3	                            mov rbx, rax	       109	expr.c	FUNCTION_1	CALL_9
0x400089b	        0x48896808	                mov qword [rax + 8], rbp	       110	expr.c	FUNCTION_1
0x400089f	      0xe800000000	                          call 0x40008a4	       111	expr.c	FUNCTION_1	CALL_10
0x40008a4	        0x48894310	             mov qword [rbx + 0x10], rax	       111	expr.c	FUNCTION_1	CALL_10
0x40008a8	    0x488b05000000	            mov rax, qword [0x040008af] 	       112	expr.c	FUNCTION_1
0x40008af	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       162	expr.c	FUNCTION_3
0x40008b4	    0x644833142528	                xor rdx, qword fs:[0x28]	       162	expr.c	FUNCTION_3
0x40008bd	    0x48891d000000	            mov qword [0x040008c4], rbx 	       113	expr.c	FUNCTION_1
0x40008c4	          0x488903	                    mov qword [rbx], rax	       112	expr.c	FUNCTION_1
0x40008c7	          0x4889e8	                            mov rax, rbp	       162	expr.c	FUNCTION_3
0x40008ca	            0x7516	                           jne 0x40008e2	       162	expr.c	FUNCTION_3
0x40008cc	        0x4883c438	                           add rsp, 0x38	       162	expr.c	FUNCTION_3
0x40008d0	              0x5b	                                 pop rbx	       162	expr.c	FUNCTION_3
0x40008d1	              0x5d	                                 pop rbp	       162	expr.c	FUNCTION_3
0x40008d2	              0xc3	                                     ret	       162	expr.c	FUNCTION_3
0x40008d3	       0xf1f440000	                   nop dword [rax + rax]	       162	expr.c	FUNCTION_3
0x40008d8	          0x4889ef	                            mov rdi, rbp	       107	expr.c	FUNCTION_1	CALL_8
0x40008db	      0xe800000000	                          call 0x40008e0	       107	expr.c	FUNCTION_1	CALL_8
0x40008e0	            0xeba8	                           jmp 0x400088a	       107	expr.c	FUNCTION_1	CALL_8
0x40008e2	      0xe800000000	                          call 0x40008e7	       162	expr.c	FUNCTION_3
get_symbol_name	IF,4:ELSE,1:CALL,5:FOR,0:WHILE,1:DO,1:functions,0:SWITCH,0	79
0x4001240	    0x488b05000000	            mov rax, qword [0x04001247] 	      2329	expr.c	FUNCTION_21
0x4001247	          0x488907	                    mov qword [rdi], rax	      2329	expr.c	FUNCTION_21
0x400124a	    0x488b05000000	            mov rax, qword [0x04001251] 	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x4001251	        0x488d4801	                      lea rcx, [rax + 1]	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x4001255	    0x48890d000000	            mov qword [0x0400125c], rcx 	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x400125c	           0xfb610	                   movzx edx, byte [rax]	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x400125f	    0xf68200000000	                      test byte [rdx], 2	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x4001266	            0x7468	                            je 0x40012d0	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x4001268	    0x8b3500000000	            mov esi, dword [0x0400126e] 	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x400126e	            0x85f6	                           test esi, esi	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x4001270	        0x410f95c0	                               setne r8b	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x4001274	            0xeb12	                           jmp 0x4001288	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x4001276	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2332	expr.c	FUNCTION_21	IF_1	CALL_1
0x4001280	          0x4584c0	                           test r8b, r8b	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x4001283	            0x7426	                            je 0x40012ab	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x4001285	          0x4889d1	                            mov rcx, rdx	      2326	expr.c	FUNCTION_21
0x4001288	        0x488d5101	                      lea rdx, [rcx + 1]	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x400128c	    0x488915000000	            mov qword [0x04001293], rdx 	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x4001293	         0xfb672ff	               movzx esi, byte [rdx - 1]	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x4001297	          0x4889f0	                            mov rax, rsi	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x400129a	     0xfb6b6000000	                   movzx esi, byte [rsi]	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x40012a1	        0x40f6c601	                             test sil, 1	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x40012a5	            0x75de	                           jne 0x4001285	      2335	expr.c	FUNCTION_21	IF_1	WHILE_1	CALL_2
0x40012a7	            0x3c01	                               cmp al, 1	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x40012a9	            0x74d5	                            je 0x4001280	      2336	expr.c	FUNCTION_21	IF_1	WHILE_1
0x40012ab	          0x83e604	                              and esi, 4	      2338	expr.c	FUNCTION_21	IF_1	IF_2	CALL_3
0x40012ae	            0x740f	                            je 0x40012bf	      2338	expr.c	FUNCTION_21	IF_1	IF_2	CALL_3
0x40012b0	        0x488d5102	                      lea rdx, [rcx + 2]	      2339	expr.c	FUNCTION_21	IF_1	IF_2
0x40012b4	    0x488915000000	            mov qword [0x040012bb], rdx 	      2339	expr.c	FUNCTION_21	IF_1	IF_2
0x40012bb	         0xfb64101	               movzx eax, byte [rcx + 1]	      2339	expr.c	FUNCTION_21	IF_1	IF_2
0x40012bf	        0x488d4aff	                      lea rcx, [rdx - 1]	      2356	expr.c	FUNCTION_21
0x40012c3	    0x48890d000000	            mov qword [0x040012ca], rcx 	      2356	expr.c	FUNCTION_21
0x40012ca	        0xc642ff00	                   mov byte [rdx - 1], 0	      2356	expr.c	FUNCTION_21
0x40012ce	              0xc3	                                     ret	      2358	expr.c	FUNCTION_21
0x40012cf	              0x90	                                     nop	      2358	expr.c	FUNCTION_21
0x40012d0	          0x4889d0	                            mov rax, rdx	      2358	expr.c	FUNCTION_21
0x40012d3	    0x8b1500000000	            mov edx, dword [0x040012d9] 	      2333	expr.c	FUNCTION_21	IF_1
0x40012d9	            0x85d2	                           test edx, edx	      2333	expr.c	FUNCTION_21	IF_1
0x40012db	        0x410f95c0	                               setne r8b	      2333	expr.c	FUNCTION_21	IF_1
0x40012df	            0x3c01	                               cmp al, 1	      2333	expr.c	FUNCTION_21	IF_1
0x40012e1	           0xf94c2	                                 sete dl	      2333	expr.c	FUNCTION_21	IF_1
0x40012e4	          0x4120d0	                             and r8b, dl	      2333	expr.c	FUNCTION_21	IF_1
0x40012e7	            0x759f	                           jne 0x4001288	      2333	expr.c	FUNCTION_21	IF_1
0x40012e9	            0x3c22	                            cmp al, 0x22	      2341	expr.c	FUNCTION_21	ELSE_1	IF_3
0x40012eb	          0x4889ca	                            mov rdx, rcx	      2341	expr.c	FUNCTION_21	ELSE_1	IF_3
0x40012ee	            0x75cf	                           jne 0x40012bf	      2341	expr.c	FUNCTION_21	ELSE_1	IF_3
0x40012f0	          0x48890f	                    mov qword [rdi], rcx	      2345	expr.c	FUNCTION_21	ELSE_1	IF_3
0x40012f3	    0x488b3d000000	            mov rdi, qword [0x040012fa] 	      2345	expr.c	FUNCTION_21	ELSE_1	IF_3
0x40012fa	      0xbe22000000	                           mov esi, 0x22	      2345	expr.c	FUNCTION_21	ELSE_1	IF_3
0x40012ff	        0x488d4f01	                      lea rcx, [rdi + 1]	      2345	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001303	       0xf1f440000	                   nop dword [rax + rax]	      2345	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001308	        0x4080fe5c	                           cmp sil, 0x5c	      2348	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x400130c	    0x48890d000000	            mov qword [0x04001313], rcx 	      2349	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x4001313	         0xfb671ff	               movzx esi, byte [rcx - 1]	      2349	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x4001317	        0x400f94c7	                                sete dil	      2348	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x400131b	          0x4889ca	                            mov rdx, rcx	      2349	expr.c	FUNCTION_21	ELSE_1	IF_3	DO_1
0x400131e	          0x4084f6	                           test sil, sil	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001321	            0x7411	                            je 0x4001334	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001323	        0x4883c101	                              add rcx, 1	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001327	        0x4080fe22	                           cmp sil, 0x22	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x400132b	            0x75db	                           jne 0x4001308	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x400132d	          0x4084ff	                           test dil, dil	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001330	            0x75d6	                           jne 0x4001308	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001332	            0xeb8b	                           jmp 0x40012bf	      2351	expr.c	FUNCTION_21	ELSE_1	IF_3
0x4001334	        0x4883ec08	                              sub rsp, 8	      2326	expr.c	FUNCTION_21
0x4001338	      0xba05000000	                              mov edx, 5	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x400133d	      0xbe00000000	                              mov esi, 0	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x4001342	            0x31ff	                            xor edi, edi	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x4001344	      0xe800000000	                          call 0x4001349	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x4001349	          0x4889c7	                            mov rdi, rax	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x400134c	            0x31c0	                            xor eax, eax	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x400134e	      0xe800000000	                          call 0x4001353	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x4001353	    0x488b15000000	            mov rdx, qword [0x0400135a] 	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x400135a	            0x31c0	                            xor eax, eax	      2354	expr.c	FUNCTION_21	ELSE_1	IF_3	CALL_5
0x400135c	        0x488d4aff	                      lea rcx, [rdx - 1]	      2356	expr.c	FUNCTION_21
0x4001360	    0x48890d000000	            mov qword [0x04001367], rcx 	      2356	expr.c	FUNCTION_21
0x4001367	        0xc642ff00	                   mov byte [rdx - 1], 0	      2356	expr.c	FUNCTION_21
0x400136b	        0x4883c408	                              add rsp, 8	      2358	expr.c	FUNCTION_21
0x400136f	              0xc3	                                     ret	      2358	expr.c	FUNCTION_21
get_single_number	IF,0:ELSE,0:CALL,1:FOR,0:WHILE,0:DO,0:functions,0:SWITCH,0	14
0x4003440	        0x4883ec38	                           sub rsp, 0x38	      2375	expr.c	FUNCTION_23
0x4003444	      0xbe01000000	                              mov esi, 1	      2377	expr.c	FUNCTION_23	CALL_1
0x4003449	          0x4889e7	                            mov rdi, rsp	      2377	expr.c	FUNCTION_23	CALL_1
0x400344c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2375	expr.c	FUNCTION_23
0x4003455	      0x4889442428	             mov qword [rsp + 0x28], rax	      2375	expr.c	FUNCTION_23
0x400345a	            0x31c0	                            xor eax, eax	      2375	expr.c	FUNCTION_23
0x400345c	      0xe81ff1ffff	                        call sym.operand	      2377	expr.c	FUNCTION_23	CALL_1
0x4003461	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2379	expr.c	FUNCTION_23
0x4003466	    0x644833142528	                xor rdx, qword fs:[0x28]	      2379	expr.c	FUNCTION_23
0x400346f	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      2379	expr.c	FUNCTION_23
0x4003473	            0x7505	                           jne 0x400347a	      2379	expr.c	FUNCTION_23
0x4003475	        0x4883c438	                           add rsp, 0x38	      2379	expr.c	FUNCTION_23
0x4003479	              0xc3	                                     ret	      2379	expr.c	FUNCTION_23
0x400347a	      0xe800000000	                  call section_end..text	      2379	expr.c	FUNCTION_23
resolve_expression	IF,31:ELSE,13:CALL,7:FOR,0:WHILE,0:DO,0:functions,0:SWITCH,2	418
0x4000b00	            0x4156	                                push r14	      2053	expr.c	FUNCTION_20
0x4000b02	            0x4155	                                push r13	      2053	expr.c	FUNCTION_20
0x4000b04	            0x4154	                                push r12	      2053	expr.c	FUNCTION_20
0x4000b06	              0x55	                                push rbp	      2053	expr.c	FUNCTION_20
0x4000b07	              0x53	                                push rbx	      2053	expr.c	FUNCTION_20
0x4000b08	        0x4883ec50	                           sub rsp, 0x50	      2053	expr.c	FUNCTION_20
0x4000b0c	      0x440fb66f18	          movzx r13d, byte [rdi + 0x18] 	      2059	expr.c	FUNCTION_20
0x4000b11	          0x4c8b27	                    mov r12, qword [rdi]	      2056	expr.c	FUNCTION_20
0x4000b14	    0x64488b042528	                mov rax, qword fs:[0x28]	      2053	expr.c	FUNCTION_20
0x4000b1d	      0x4889442448	             mov qword [rsp + 0x48], rax	      2053	expr.c	FUNCTION_20
0x4000b22	            0x31c0	                            xor eax, eax	      2053	expr.c	FUNCTION_20
0x4000b24	        0x488b4708	                mov rax, qword [rdi + 8]	      2058	expr.c	FUNCTION_20
0x4000b28	        0x4c8b7710	            mov r14, qword [rdi + 0x10] 	      2055	expr.c	FUNCTION_20
0x4000b2c	        0x4c892424	                    mov qword [rsp], r12	      2056	expr.c	FUNCTION_20
0x4000b30	        0x4180fd1c	                          cmp r13b, 0x1c	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000b34	      0x4889442408	                mov qword [rsp + 8], rax	      2058	expr.c	FUNCTION_20
0x4000b39	            0x7745	                            ja 0x4000b80	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000b3b	        0x410fb6c5	                         movzx eax, r13b	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000b3f	          0x4889fb	                            mov rbx, rdi	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000b42	          0x4489ed	                           mov ebp, r13d	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000b45	    0xff24c5000000	                       jmp qword [rax*8]	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000b4c	         0xf1f4000	                         nop dword [rax]	      2065	expr.c	FUNCTION_20	SWITCH_1
0x4000b50	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000b55	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000b5a	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000b5f	          0x4889e7	                            mov rdi, rsp	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000b62	      0xe800000000	                          call 0x4000b67	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000b67	            0x85c0	                           test eax, eax	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000b69	            0x7415	                            je 0x4000b80	      2085	expr.c	FUNCTION_20	SWITCH_1	IF_2	CALL_2
0x4000b6b	    0x48817c242000	               cmp qword [rsp + 0x20], 0	      2088	expr.c	FUNCTION_20	SWITCH_1	IF_3
0x4000b74	     0xf8456020000	                            je 0x4000dd0	      2088	expr.c	FUNCTION_20	SWITCH_1	IF_3
0x4000b7a	    0x660f1f440000	                    nop word [rax + rax]	      2088	expr.c	FUNCTION_20	SWITCH_1	IF_3
0x4000b80	            0x31c0	                            xor eax, eax	      2068	expr.c	FUNCTION_20	SWITCH_1
0x4000b82	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2308	expr.c	FUNCTION_20
0x4000b87	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2308	expr.c	FUNCTION_20
0x4000b90	     0xf850d060000	                           jne 0x40011a3	      2308	expr.c	FUNCTION_20
0x4000b96	        0x4883c450	                           add rsp, 0x50	      2308	expr.c	FUNCTION_20
0x4000b9a	              0x5b	                                 pop rbx	      2308	expr.c	FUNCTION_20
0x4000b9b	              0x5d	                                 pop rbp	      2308	expr.c	FUNCTION_20
0x4000b9c	            0x415c	                                 pop r12	      2308	expr.c	FUNCTION_20
0x4000b9e	            0x415d	                                 pop r13	      2308	expr.c	FUNCTION_20
0x4000ba0	            0x415e	                                 pop r14	      2308	expr.c	FUNCTION_20
0x4000ba2	              0xc3	                                     ret	      2308	expr.c	FUNCTION_20
0x4000ba3	       0xf1f440000	                   nop dword [rax + rax]	      2308	expr.c	FUNCTION_20
0x4000ba8	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000bad	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000bb2	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000bb7	          0x4889e7	                            mov rdi, rsp	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000bba	      0xe800000000	                          call 0x4000bbf	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000bbf	            0x85c0	                           test eax, eax	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000bc1	            0x74bd	                            je 0x4000b80	      2119	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_3
0x4000bc3	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000bc8	      0x488d542428	                   lea rdx, [rsp + 0x28]	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000bcd	      0x488d742418	                   lea rsi, [rsp + 0x18]	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000bd2	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000bd7	      0xe800000000	                          call 0x4000bdc	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000bdc	            0x85c0	                           test eax, eax	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000bde	            0x74a0	                            je 0x4000b80	      2120	expr.c	FUNCTION_20	SWITCH_1	IF_6	CALL_4
0x4000be0	        0x4183fd13	                          cmp r13d, 0x13	      2125	expr.c	FUNCTION_20	SWITCH_1	IF_7
0x4000be4	     0xf84a6030000	                            je 0x4000f90	      2125	expr.c	FUNCTION_20	SWITCH_1	IF_7
0x4000bea	        0x4183fd14	                          cmp r13d, 0x14	      2144	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10
0x4000bee	     0xf840c030000	                            je 0x4000f00	      2144	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10
0x4000bf4	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000bf9	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2167	expr.c	FUNCTION_20	SWITCH_1
0x4000c02	    0x4881fa000000	                              cmp rdx, 0	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c09	          0x4889d1	                            mov rcx, rdx	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c0c	     0xf84b2030000	                            je 0x4000fc4	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c12	        0x418d45eb	                   lea eax, [r13 - 0x15]	      2170	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c16	          0x83f801	                              cmp eax, 1	      2170	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c19	     0xf86b9030000	                           jbe 0x4000fd8	      2170	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c1f	          0x8d45e9	                   lea eax, [rbp - 0x17]	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c22	            0x3c03	                               cmp al, 3	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c24	     0xf8603030000	                           jbe 0x4000f2d	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c2a	        0x4183fd14	                          cmp r13d, 0x14	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c2e	     0xf84f9020000	                            je 0x4000f2d	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000c34	    0x4881f9000000	                              cmp rcx, 0	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c3b	     0xf84ef030000	                            je 0x4001030	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c41	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c46	    0x483d00000000	                              cmp rax, 0	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c4c	     0xf849e030000	                            je 0x4000ff0	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000c52	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2222	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c57	      0x48397c2410	            cmp qword [rsp + 0x10], rdi 	      2222	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c5c	     0xf851effffff	                           jne 0x4000b80	      2222	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c62	    0x488b35000000	            mov rsi, qword [0x04000c69] 	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c69	          0x4839c6	                            cmp rsi, rax	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c6c	            0x7505	                           jne 0x4000c73	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c6e	          0x4839ce	                            cmp rsi, rcx	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c71	            0x7428	                            je 0x4000c9b	      2223	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c73	    0x483d00000000	                              cmp rax, 0	      2225	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c79	     0xf8501ffffff	                           jne 0x4000b80	      2225	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c7f	    0x4881f9000000	                              cmp rcx, 0	      2225	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c86	     0xf85f4feffff	                           jne 0x4000b80	      2225	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c8c	      0x488b442408	                mov rax, qword [rsp + 8]	      2226	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c91	        0x48390424	                    cmp qword [rsp], rax	      2226	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c95	     0xf85e5feffff	                           jne 0x4000b80	      2226	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_9	IF_21
0x4000c9b	        0x4183fd12	                          cmp r13d, 0x12	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x4000c9f	     0xf8413040000	                            je 0x40010b8	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x4000ca5	        0x4183fd0f	                           cmp r13d, 0xf	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x4000ca9	     0xf8409040000	                            je 0x40010b8	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x4000caf	        0x418d45f0	                   lea eax, [r13 - 0x10]	      2233	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000cb3	          0x83f801	                              cmp eax, 1	      2233	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000cb6	     0xf87c4feffff	                            ja 0x4000b80	      2233	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000cbc	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      2233	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000cc1	     0xf1f80000000	                         nop dword [rax]	      2233	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_11	IF_23
0x4000cc8	      0x48034c2418	             add rcx, qword [rsp + 0x18]	      2237	expr.c	FUNCTION_20	SWITCH_1
0x4000ccd	          0x83ed0b	                            sub ebp, 0xb	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000cd0	        0x4080fd11	                           cmp bpl, 0x11	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000cd4	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2237	expr.c	FUNCTION_20	SWITCH_1
0x4000cd9	     0xf87a1040000	                            ja 0x4001180	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000cdf	        0x400fb6ed	                          movzx ebp, bpl	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ce3	    0xff24ed000000	                       jmp qword [rbp*8]	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000cea	    0x660f1f440000	                    nop word [rax + rax]	      2238	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000cf0	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000cf5	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000cfa	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000cff	          0x4889e7	                            mov rdi, rsp	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000d02	      0xe800000000	                          call 0x4000d07	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000d07	            0x85c0	                           test eax, eax	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000d09	            0x750e	                           jne 0x4000d19	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000d0b	      0xe970feffff	                           jmp 0x4000b80	      2077	expr.c	FUNCTION_20	SWITCH_1	IF_1	CALL_1
0x4000d10	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2072	expr.c	FUNCTION_20	SWITCH_1
0x4000d19	        0x4183fd03	                             cmp r13d, 3	      2291	expr.c	FUNCTION_20	IF_27
0x4000d1d	            0x7451	                            je 0x4000d70	      2291	expr.c	FUNCTION_20	IF_27
0x4000d1f	        0x4183fd02	                             cmp r13d, 2	      2291	expr.c	FUNCTION_20	IF_27
0x4000d23	           0xf94c2	                                 sete dl	      2291	expr.c	FUNCTION_20	IF_27
0x4000d26	        0x4183fd05	                             cmp r13d, 5	      2291	expr.c	FUNCTION_20	IF_27
0x4000d2a	           0xf94c0	                                 sete al	      2291	expr.c	FUNCTION_20	IF_27
0x4000d2d	             0x9c2	                             or edx, eax	      2291	expr.c	FUNCTION_20	IF_27
0x4000d2f	          0x4189d5	                           mov r13d, edx	      2291	expr.c	FUNCTION_20	IF_27
0x4000d32	          0x4584ed	                         test r13b, r13b	      2303	expr.c	FUNCTION_20	IF_31
0x4000d35	        0x40886b18	              mov byte [rbx + 0x18], bpl	      2301	expr.c	FUNCTION_20
0x4000d39	            0x7515	                           jne 0x4000d50	      2303	expr.c	FUNCTION_20	IF_31
0x4000d3b	        0x4c897310	             mov qword [rbx + 0x10], r14	      2305	expr.c	FUNCTION_20
0x4000d3f	      0xb801000000	                              mov eax, 1	      2307	expr.c	FUNCTION_20
0x4000d44	      0xe939feffff	                           jmp 0x4000b82	      2307	expr.c	FUNCTION_20
0x4000d49	     0xf1f80000000	                         nop dword [rax]	      2307	expr.c	FUNCTION_20
0x4000d50	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2307	expr.c	FUNCTION_20
0x4000d55	          0x4901f6	                            add r14, rsi	      2304	expr.c	FUNCTION_20	IF_31
0x4000d58	      0xb801000000	                              mov eax, 1	      2307	expr.c	FUNCTION_20
0x4000d5d	        0x4c897310	             mov qword [rbx + 0x10], r14	      2305	expr.c	FUNCTION_20
0x4000d61	      0xe91cfeffff	                           jmp 0x4000b82	      2305	expr.c	FUNCTION_20
0x4000d66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2305	expr.c	FUNCTION_20
0x4000d70	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2305	expr.c	FUNCTION_20
0x4000d75	        0x488b3c24	                    mov rdi, qword [rsp]	      2305	expr.c	FUNCTION_20
0x4000d79	    0x483d00000000	                              cmp rax, 0	      2293	expr.c	FUNCTION_20	IF_27	IF_28
0x4000d7f	     0xf84fb010000	                            je 0x4000f80	      2293	expr.c	FUNCTION_20	IF_27	IF_28
0x4000d85	    0x483905000000	            cmp qword [0x04000d8c], rax 	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000d8c	        0x410f94c5	                               sete r13b	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000d90	          0x4d85f6	                           test r14, r14	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000d93	           0xf94c0	                                 sete al	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000d96	          0x4120c5	                            and r13b, al	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000d99	            0x740d	                            je 0x4000da8	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000d9b	      0xbd05000000	                              mov ebp, 5	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000da0	          0x4531f6	                          xor r14d, r14d	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000da3	            0xeb18	                           jmp 0x4000dbd	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000da5	           0xf1f00	                         nop dword [rax]	      2295	expr.c	FUNCTION_20	IF_27	ELSE_12	IF_29
0x4000da8	          0x4c89e6	                            mov rsi, r12	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000dab	      0xe800000000	                          call 0x4000db0	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000db0	            0x85c0	                           test eax, eax	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000db2	            0x7414	                            je 0x4000dc8	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000db4	        0x488b3c24	                    mov rdi, qword [rsp]	      2297	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30	CALL_7
0x4000db8	      0xbd03000000	                              mov ebp, 3	      2298	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30
0x4000dbd	          0x48893b	                    mov qword [rbx], rdi	      2299	expr.c	FUNCTION_20	IF_27
0x4000dc0	      0xe96dffffff	                           jmp 0x4000d32	      2299	expr.c	FUNCTION_20	IF_27
0x4000dc5	           0xf1f00	                         nop dword [rax]	      2299	expr.c	FUNCTION_20	IF_27
0x4000dc8	      0x4c03742410	             add r14, qword [rsp + 0x10]	      2298	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30
0x4000dcd	            0xebe5	                           jmp 0x4000db4	      2298	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30
0x4000dcf	              0x90	                                     nop	      2298	expr.c	FUNCTION_20	IF_27	ELSE_13	IF_30
0x4000dd0	        0x4183fd09	                             cmp r13d, 9	      2091	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000dd4	     0xf8405020000	                            je 0x4000fdf	      2091	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000dda	        0x4183fd07	                             cmp r13d, 7	      2093	expr.c	FUNCTION_20	SWITCH_1	ELSE_1	IF_5
0x4000dde	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2094	expr.c	FUNCTION_20	SWITCH_1	ELSE_1	IF_5
0x4000de3	     0xf84b5000000	                            je 0x4000e9e	      2093	expr.c	FUNCTION_20	SWITCH_1	ELSE_1	IF_5
0x4000de9	          0x48f7d6	                                 not rsi	      2096	expr.c	FUNCTION_20	SWITCH_1	ELSE_2
0x4000dec	        0xc6431802	                mov byte [rbx + 0x18], 2	      2301	expr.c	FUNCTION_20
0x4000df0	      0xe960ffffff	                           jmp 0x4000d55	      2301	expr.c	FUNCTION_20
0x4000df5	          0x48f7d1	                                 not rcx	      2256	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000df8	          0x4889ce	                            mov rsi, rcx	      2256	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000dfb	      0x480b742410	              or rsi, qword [rsp + 0x10]	      2256	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e00	            0xebea	                           jmp 0x4000dec	      2256	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e02	            0x31f6	                            xor esi, esi	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e04	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e09	        0x400f9fc6	                                setg sil	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e0d	          0x48f7de	                                 neg rsi	      2280	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e10	            0xebda	                           jmp 0x4000dec	      2281	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e12	            0x31f6	                            xor esi, esi	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e14	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e19	        0x400f9dc6	                               setge sil	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e1d	          0x48f7de	                                 neg rsi	      2277	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e20	            0xebca	                           jmp 0x4000dec	      2278	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e22	            0x31f6	                            xor esi, esi	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e24	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e29	        0x400f9ec6	                               setle sil	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e2d	          0x48f7de	                                 neg rsi	      2274	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e30	            0xebba	                           jmp 0x4000dec	      2275	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e32	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2254	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e37	          0x48d3ee	                             shr rsi, cl	      2254	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e3a	            0xebb0	                           jmp 0x4000dec	      2254	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e3c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2253	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e41	          0x48d3e6	                             shl rsi, cl	      2253	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e44	            0xeba6	                           jmp 0x4000dec	      2253	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e46	          0x4885c9	                           test rcx, rcx	      2249	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_25
0x4000e49	     0xf8431fdffff	                            je 0x4000b80	      2249	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_25
0x4000e4f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2251	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e54	            0x4899	                                     cqo	      2251	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e56	          0x48f7f9	                                idiv rcx	      2251	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e59	          0x4889d6	                            mov rsi, rdx	      2251	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e5c	            0xeb8e	                           jmp 0x4000dec	      2252	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e5e	          0x4885c9	                           test rcx, rcx	      2244	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_24
0x4000e61	     0xf8419fdffff	                            je 0x4000b80	      2244	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_24
0x4000e67	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2246	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e6c	            0x4899	                                     cqo	      2246	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e6e	          0x48f7f9	                                idiv rcx	      2246	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e71	          0x4889c6	                            mov rsi, rax	      2246	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e74	      0xe973ffffff	                           jmp 0x4000dec	      2247	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e79	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e7f	           0xf95c0	                                setne al	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e82	            0x31f6	                            xor esi, esi	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e84	          0x4885c9	                           test rcx, rcx	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e87	        0x400f95c6	                               setne sil	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e8b	          0x4821c6	                            and rsi, rax	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e8e	      0xe959ffffff	                           jmp 0x4000dec	      2282	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e93	            0x31f6	                            xor esi, esi	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e95	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e9a	        0x400f9cc6	                                setl sil	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000e9e	          0x48f7de	                                 neg rsi	      2271	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ea1	      0xe946ffffff	                           jmp 0x4000dec	      2272	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ea6	            0x31f6	                            xor esi, esi	      2266	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ea8	      0x483b4c2410	            cmp rcx, qword [rsp + 0x10] 	      2266	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ead	     0xf8438030000	                            je 0x40011eb	      2266	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000eb3	          0x4889f0	                            mov rax, rsi	      2268	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000eb6	        0x4183fd16	                          cmp r13d, 0x16	      2268	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000eba	          0x48f7d0	                                 not rax	      2268	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000ebd	        0x480f44f0	                          cmove rsi, rax	      2268	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000ec1	      0xe926ffffff	                           jmp 0x4000dec	      2268	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2	IF_26
0x4000ec6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2241	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ecb	          0x4829ce	                            sub rsi, rcx	      2241	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ece	      0xe919ffffff	                           jmp 0x4000dec	      2241	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ed3	          0x4889ce	                            mov rsi, rcx	      2240	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ed6	      0x4803742410	             add rsi, qword [rsp + 0x10]	      2240	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000edb	      0xe90cffffff	                           jmp 0x4000dec	      2240	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ee0	          0x4889ce	                            mov rsi, rcx	      2258	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ee3	      0x4823742410	             and rsi, qword [rsp + 0x10]	      2258	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ee8	      0xe9fffeffff	                           jmp 0x4000dec	      2258	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000eed	          0x4889ce	                            mov rsi, rcx	      2257	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ef0	      0x4833742410	             xor rsi, qword [rsp + 0x10]	      2257	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000ef5	      0xe9f2feffff	                           jmp 0x4000dec	      2257	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000efa	    0x660f1f440000	                    nop word [rax + rax]	      2257	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4000f00	    0x48817c242800	               cmp qword [rsp + 0x28], 0	      2146	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x4000f09	     0xf8422020000	                            je 0x4001131	      2146	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x4000f0f	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f14	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2167	expr.c	FUNCTION_20	SWITCH_1
0x4000f1d	    0x4881fa000000	                              cmp rdx, 0	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f24	          0x4889d1	                            mov rcx, rdx	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f27	     0xf84e5fcffff	                            je 0x4000c12	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f2d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2173	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f32	          0x4839d0	                            cmp rax, rdx	      2173	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f35	     0xf85f9fcffff	                           jne 0x4000c34	      2173	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f3b	    0x8b0d00000000	            mov ecx, dword [0x04000f41] 	      2174	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f41	            0x85c9	                           test ecx, ecx	      2174	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f43	     0xf84fb010000	                            je 0x4001144	      2174	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f49	    0x488b0d000000	            mov rcx, qword [0x04000f50] 	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f50	          0x4839c1	                            cmp rcx, rax	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f53	     0xf8435020000	                            je 0x400118e	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f59	    0x483d00000000	                              cmp rax, 0	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f5f	     0xf8557fdffff	                           jne 0x4000cbc	      2171	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f65	      0x488b442408	                mov rax, qword [rsp + 8]	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f6a	        0x48390424	                    cmp qword [rsp], rax	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f6e	      0xb900000000	                              mov ecx, 0	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000f73	     0xf85c8fcffff	                           jne 0x4000c41	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f79	      0xe93efdffff	                           jmp 0x4000cbc	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f7e	            0x6690	                                     nop	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f80	    0x41bd01000000	                             mov r13d, 1	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f86	      0xbd02000000	                              mov ebp, 2	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f8b	      0xe92dfeffff	                           jmp 0x4000dbd	      2177	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000f90	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2127	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x4000f95	    0x483d00000000	                              cmp rax, 0	      2127	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x4000f9b	     0xf8423010000	                            je 0x40010c4	      2127	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x4000fa1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2133	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000fa6	    0x4881fa000000	                              cmp rdx, 0	      2133	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000fad	          0x4889d1	                            mov rcx, rdx	      2133	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000fb0	     0xf8455010000	                            je 0x400110b	      2133	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4000fb6	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2167	expr.c	FUNCTION_20	SWITCH_1
0x4000fbf	      0xe95bfcffff	                           jmp 0x4000c1f	      2167	expr.c	FUNCTION_20	SWITCH_1
0x4000fc4	    0x48817c242800	               cmp qword [rsp + 0x28], 0	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000fcd	     0xf853ffcffff	                           jne 0x4000c12	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000fd3	       0xf1f440000	                   nop dword [rax + rax]	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000fd8	            0x31c9	                            xor ecx, ecx	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000fda	      0xe9e9fcffff	                           jmp 0x4000cc8	      2168	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4000fdf	            0x31f6	                            xor esi, esi	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000fe1	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000fe7	        0x400f94c6	                                sete sil	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000feb	      0xe9fcfdffff	                           jmp 0x4000dec	      2092	expr.c	FUNCTION_20	SWITCH_1	IF_4
0x4000ff0	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000ff6	     0xf859e000000	                           jne 0x400109a	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4000ffc	          0x8d45f1	                    lea eax, [rbp - 0xf]	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x4000fff	            0xa8fd	                           test al, 0xfd	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x4001001	     0xf84f8000000	                            je 0x40010ff	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x4001007	        0x418d45f3	                    lea eax, [r13 - 0xd]	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x400100b	          0x83f801	                              cmp eax, 1	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x400100e	     0xf8694010000	                           jbe 0x40011a8	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x4001014	            0x89e8	                            mov eax, ebp	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4001016	          0x83e0fd	                     and eax, 0xfffffffd	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4001019	            0x3c10	                            cmp al, 0x10	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x400101b	     0xf849bfcffff	                            je 0x4000cbc	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4001021	        0x4183fd0a	                           cmp r13d, 0xa	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4001025	     0xf8555fbffff	                           jne 0x4000b80	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x400102b	      0xe98cfcffff	                           jmp 0x4000cbc	      2203	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_6	IF_18
0x4001030	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4001036	     0xf849b000000	                            je 0x40010d7	      2179	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x400103c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4001041	    0x483d00000000	                              cmp rax, 0	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4001047	            0x7437	                            je 0x4001080	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4001049	        0x4183fd0a	                           cmp r13d, 0xa	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x400104d	     0xf85fffbffff	                           jne 0x4000c52	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001053	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001059	     0xf85f3fbffff	                           jne 0x4000c52	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x400105f	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2210	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001064	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2211	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001069	      0x4889442420	             mov qword [rsp + 0x20], rax	      2209	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x400106e	        0x4c8b6308	                mov r12, qword [rbx + 8]	      2212	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001072	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2210	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001077	        0x48893c24	                    mov qword [rsp], rdi	      2211	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x400107b	      0xe9f9fcffff	                           jmp 0x4000d79	      2214	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001080	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x4001086	     0xf8470ffffff	                            je 0x4000ffc	      2180	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13
0x400108c	        0x4183fd0a	                           cmp r13d, 0xa	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001090	            0x7508	                           jne 0x400109a	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001092	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x4001098	            0x74c5	                            je 0x400105f	      2207	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_7	IF_19
0x400109a	        0x418d75f6	                    lea esi, [r13 - 0xa]	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x400109e	      0xb800000000	                              mov eax, 0	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x40010a3	          0x83fe01	                              cmp esi, 1	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x40010a6	     0xf87a6fbffff	                            ja 0x4000c52	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x40010ac	    0x48837c241801	               cmp qword [rsp + 0x18], 1	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x40010b2	     0xf859afbffff	                           jne 0x4000c52	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x40010b8	        0x488b3c24	                    mov rdi, qword [rsp]	      2217	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_8	IF_20
0x40010bc	          0x4889c8	                            mov rax, rcx	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x40010bf	      0xe9b5fcffff	                           jmp 0x4000d79	      2228	expr.c	FUNCTION_20	SWITCH_1	IF_12	ELSE_10	IF_22
0x40010c4	      0x4c03742418	             add r14, qword [rsp + 0x18]	      2129	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x40010c9	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2129	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x40010ce	        0x488b3c24	                    mov rdi, qword [rsp]	      2129	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x40010d2	      0xe9a2fcffff	                           jmp 0x4000d79	      2131	expr.c	FUNCTION_20	SWITCH_1	IF_7	IF_8
0x40010d7	          0x8d45f1	                    lea eax, [rbp - 0xf]	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x40010da	            0xa8fd	                           test al, 0xfd	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x40010dc	     0xf85fa000000	                           jne 0x40011dc	      2182	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14
0x40010e2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x40010e7	    0x483d00000000	                              cmp rax, 0	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x40010ed	     0xf856cffffff	                           jne 0x400105f	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x40010f3	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x40010f9	     0xf8560ffffff	                           jne 0x400105f	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x40010ff	          0x4889d0	                            mov rax, rdx	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4001102	        0x488b3c24	                    mov rdi, qword [rsp]	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x4001106	      0xe96efcffff	                           jmp 0x4000d79	      2184	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	IF_14	IF_15
0x400110b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2136	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4001110	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2138	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4001115	      0x4c03742410	             add r14, qword [rsp + 0x10]	      2135	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x400111a	      0x4889442420	             mov qword [rsp + 0x20], rax	      2137	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x400111f	        0x4c8b6308	                mov r12, qword [rbx + 8]	      2139	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4001123	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2136	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4001128	        0x48893c24	                    mov qword [rsp], rdi	      2138	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x400112c	      0xe954fcffff	                           jmp 0x4000d85	      2141	expr.c	FUNCTION_20	SWITCH_1	IF_7	ELSE_3	IF_9
0x4001131	      0x4c2b742418	             sub r14, qword [rsp + 0x18]	      2148	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x4001136	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2148	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x400113b	        0x488b3c24	                    mov rdi, qword [rsp]	      2148	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x400113f	      0xe935fcffff	                           jmp 0x4000d79	      2150	expr.c	FUNCTION_20	SWITCH_1	ELSE_4	IF_10	IF_11
0x4001144	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4001149	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x400114e	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4001153	      0xe800000000	                          call 0x4001158	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4001158	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x400115d	            0x85c0	                           test eax, eax	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x400115f	          0x4889d1	                            mov rcx, rdx	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4001162	     0xf84ccfaffff	                            je 0x4000c34	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4001168	          0x4889d0	                            mov rax, rdx	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x400116b	      0xe9d9fdffff	                           jmp 0x4000f49	      2175	expr.c	FUNCTION_20	SWITCH_1	IF_12	CALL_5
0x4001170	            0x31f6	                            xor esi, esi	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001172	      0x480b4c2410	              or rcx, qword [rsp + 0x10]	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001177	        0x400f95c6	                               setne sil	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x400117b	      0xe96cfcffff	                           jmp 0x4000dec	      2283	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001180	          0x4889ce	                            mov rsi, rcx	      2242	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001183	    0x480faf742410	            imul rsi, qword [rsp + 0x10]	      2242	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001189	      0xe95efcffff	                           jmp 0x4000dec	      2242	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x400118e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4001193	      0x48397c2410	            cmp qword [rsp + 0x10], rdi 	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x4001198	     0xf8596faffff	                           jne 0x4000c34	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x400119e	      0xe9b6fdffff	                           jmp 0x4000f59	      2176	expr.c	FUNCTION_20	SWITCH_1	IF_12
0x40011a3	      0xe800000000	                          call 0x40011a8	      2308	expr.c	FUNCTION_20
0x40011a8	    0x4881f9000000	                              cmp rcx, 0	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011af	        0x488b3c24	                    mov rdi, qword [rsp]	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011b3	          0x4889c8	                            mov rax, rcx	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011b6	     0xf85c9fbffff	                           jne 0x4000d85	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011bc	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011c2	     0xf84f4faffff	                            je 0x4000cbc	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011c8	        0x488b3c24	                    mov rdi, qword [rsp]	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011cc	    0x41bd01000000	                             mov r13d, 1	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011d2	      0xbd02000000	                              mov ebp, 2	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011d7	      0xe9e1fbffff	                           jmp 0x4000dbd	      2196	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16	IF_17
0x40011dc	        0x418d45f3	                    lea eax, [r13 - 0xd]	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x40011e0	          0x83f801	                              cmp eax, 1	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x40011e3	     0xf872bfeffff	                            ja 0x4001014	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x40011e9	            0xebd1	                           jmp 0x40011bc	      2194	expr.c	FUNCTION_20	SWITCH_1	IF_12	IF_13	ELSE_5	IF_16
0x40011eb	      0x483b542428	            cmp rdx, qword [rsp + 0x28] 	      2262	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x40011f0	     0xf85bdfcffff	                           jne 0x4000eb3	      2262	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x40011f6	    0x833d00000000	               cmp dword [0x040011fd], 0	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x40011fd	            0x7510	                           jne 0x400120f	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x40011ff	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001204	      0x4839442430	            cmp qword [rsp + 0x30], rax 	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001209	     0xf85a4fcffff	                           jne 0x4000eb3	      2263	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x400120f	        0x4883ceff	              or rsi, 0xffffffffffffffff	      2266	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001213	    0x4881fa000000	                              cmp rdx, 0	      2264	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x400121a	     0xf8593fcffff	                           jne 0x4000eb3	      2264	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001220	            0x31f6	                            xor esi, esi	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001222	      0x488b442408	                mov rax, qword [rsp + 8]	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001227	        0x48390424	                    cmp qword [rsp], rax	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x400122b	        0x400f94c6	                                sete sil	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x400122f	          0x48f7de	                                 neg rsi	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
0x4001232	      0xe97cfcffff	                           jmp 0x4000eb3	      2265	expr.c	FUNCTION_20	SWITCH_1	SWITCH_2
expr	IF,32:ELSE,20:CALL,56:FOR,0:WHILE,1:DO,0:functions,0:SWITCH,1	1056
0x4001370	            0x4157	                                push r15	      1748	expr.c	FUNCTION_19
0x4001372	            0x4156	                                push r14	      1748	expr.c	FUNCTION_19
0x4001374	            0x4155	                                push r13	      1748	expr.c	FUNCTION_19
0x4001376	            0x4154	                                push r12	      1748	expr.c	FUNCTION_19
0x4001378	              0x55	                                push rbp	      1748	expr.c	FUNCTION_19
0x4001379	              0x53	                                push rbx	      1748	expr.c	FUNCTION_19
0x400137a	        0x4883ec78	                           sub rsp, 0x78	      1748	expr.c	FUNCTION_19
0x400137e	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1748	expr.c	FUNCTION_19
0x4001387	      0x48894c2468	             mov qword [rsp + 0x68], rcx	      1748	expr.c	FUNCTION_19
0x400138c	            0x31c9	                            xor ecx, ecx	      1748	expr.c	FUNCTION_19
0x400138e	            0x85ff	                           test edi, edi	      1756	expr.c	FUNCTION_19	CALL_1
0x4001390	        0x897c2424	             mov dword [rsp + 0x24], edi	      1748	expr.c	FUNCTION_19
0x4001394	        0x8954241c	             mov dword [rsp + 0x1c], edx	      1748	expr.c	FUNCTION_19
0x4001398	      0x40887c2423	              mov byte [rsp + 0x23], dil	      1749	expr.c	FUNCTION_19
0x400139d	     0xf886d110000	                            js 0x4002510	      1756	expr.c	FUNCTION_19	CALL_1
0x40013a3	      0x807c242400	                cmp byte [rsp + 0x24], 0	      1759	expr.c	FUNCTION_19	IF_1
0x40013a8	          0x4889f3	                            mov rbx, rsi	      1759	expr.c	FUNCTION_19	IF_1
0x40013ab	     0xf840f010000	                            je 0x40014c0	      1759	expr.c	FUNCTION_19	IF_1
0x40013b1	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      1765	expr.c	FUNCTION_19	CALL_3
0x40013b5	          0x4889df	                            mov rdi, rbx	      1765	expr.c	FUNCTION_19	CALL_3
0x40013b8	      0xe8c3110000	                        call sym.operand	      1765	expr.c	FUNCTION_19	CALL_3
0x40013bd	    0x4c8b25000000	            mov r12, qword [0x040013c4] 	      1768	expr.c	FUNCTION_19	CALL_4
0x40013c4	          0x4989c5	                            mov r13, rax	      1765	expr.c	FUNCTION_19	CALL_3
0x40013c7	      0x450fb63424	                  movzx r14d, byte [r12]	      1768	expr.c	FUNCTION_19	CALL_4
0x40013cc	        0x4180fe20	                          cmp r14b, 0x20	      1768	expr.c	FUNCTION_19	CALL_4
0x40013d0	     0xf8489110000	                            je 0x400255f	      1768	expr.c	FUNCTION_19	CALL_4
0x40013d6	          0x4d63fe	                        movsxd r15, r14d	      1579	expr.c	FUNCTION_16	IF_1
0x40013d9	    0x4180bf000000	                       cmp byte [r15], 0	      1579	expr.c	FUNCTION_16	IF_1
0x40013e1	            0x7578	                           jne 0x400145b	      1579	expr.c	FUNCTION_16	IF_1
0x40013e3	    0x41f687000000	                      test byte [r15], 2	      1583	expr.c	FUNCTION_16	IF_2	CALL_1
0x40013eb	     0xf85ee000000	                           jne 0x40014df	      1583	expr.c	FUNCTION_16	IF_2	CALL_1
0x40013f1	        0x4183fe2d	                          cmp r14d, 0x2d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40013f5	     0xf84e80f0000	                            je 0x40023e3	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40013fb	     0xf8eb00e0000	                           jle 0x40022b1	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001401	        0x4183fe3d	                          cmp r14d, 0x3d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001405	     0xf84b40f0000	                            je 0x40023bf	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400140b	     0xf8eb8030000	                           jle 0x40017c9	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001411	        0x4183fe3e	                          cmp r14d, 0x3e	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001415	     0xf84800f0000	                            je 0x400239b	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400141b	        0x4183fe7c	                          cmp r14d, 0x7c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x400141f	     0xf85cc0e0000	                           jne 0x40022f1	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001425	    0x41807c24017c	                cmp byte [r12 + 1], 0x7c	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x400142b	      0xb81c000000	                           mov eax, 0x1c	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001430	      0xbd0f000000	                            mov ebp, 0xf	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001435	          0x4189c7	                           mov r15d, eax	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001438	        0x440f45fd	                        cmovne r15d, ebp	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x400143c	           0xf94c1	                                 sete cl	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x400143f	          0x4489fd	                           mov ebp, r15d	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001442	           0xfb6c9	                           movzx ecx, cl	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001445	          0x83c101	                              add ecx, 1	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001448	        0x894c2408	                mov dword [rsp + 8], ecx	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x400144c	      0xe91f010000	                           jmp 0x4001570	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001451	     0xf1f80000000	                         nop dword [rax]	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001458	          0x4c89fb	                            mov rbx, r15	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x400145b	          0x488b3b	                    mov rdi, qword [rbx]	      2039	expr.c	FUNCTION_19	IF_31
0x400145e	          0x4885ff	                           test rdi, rdi	      2039	expr.c	FUNCTION_19	IF_31
0x4001461	            0x7405	                            je 0x4001468	      2039	expr.c	FUNCTION_19	IF_31
0x4001463	      0xe800000000	                          call 0x4001468	      2040	expr.c	FUNCTION_19	CALL_55
0x4001468	      0x807c242400	                cmp byte [rsp + 0x24], 0	      2042	expr.c	FUNCTION_19	IF_32
0x400146d	            0x7508	                           jne 0x4001477	      2042	expr.c	FUNCTION_19	IF_32
0x400146f	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2042	expr.c	FUNCTION_19	IF_32
0x4001473	            0x85c0	                           test eax, eax	      2042	expr.c	FUNCTION_19	IF_32
0x4001475	            0x7439	                            je 0x40014b0	      2042	expr.c	FUNCTION_19	IF_32
0x4001477	        0x807b1802	                cmp byte [rbx + 0x18], 2	      2045	expr.c	FUNCTION_19
0x400147b	      0xb800000000	                              mov eax, 0	      2045	expr.c	FUNCTION_19
0x4001480	        0x490f45c5	                         cmovne rax, r13	      2045	expr.c	FUNCTION_19
0x4001484	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      2046	expr.c	FUNCTION_19
0x4001489	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2046	expr.c	FUNCTION_19
0x4001492	     0xf858c100000	                           jne 0x4002524	      2046	expr.c	FUNCTION_19
0x4001498	        0x4883c478	                           add rsp, 0x78	      2046	expr.c	FUNCTION_19
0x400149c	              0x5b	                                 pop rbx	      2046	expr.c	FUNCTION_19
0x400149d	              0x5d	                                 pop rbp	      2046	expr.c	FUNCTION_19
0x400149e	            0x415c	                                 pop r12	      2046	expr.c	FUNCTION_19
0x40014a0	            0x415d	                                 pop r13	      2046	expr.c	FUNCTION_19
0x40014a2	            0x415e	                                 pop r14	      2046	expr.c	FUNCTION_19
0x40014a4	            0x415f	                                 pop r15	      2046	expr.c	FUNCTION_19
0x40014a6	              0xc3	                                     ret	      2046	expr.c	FUNCTION_19
0x40014a7	    0x660f1f840000	                    nop word [rax + rax]	      2046	expr.c	FUNCTION_19
0x40014b0	          0x4889df	                            mov rdi, rbx	      2043	expr.c	FUNCTION_19	CALL_56
0x40014b3	      0xe800000000	                          call 0x40014b8	      2043	expr.c	FUNCTION_19	CALL_56
0x40014b8	            0xebbd	                           jmp 0x4001477	      2043	expr.c	FUNCTION_19	CALL_56
0x40014ba	    0x660f1f440000	                    nop word [rax + rax]	      2043	expr.c	FUNCTION_19	CALL_56
0x40014c0	      0xe800000000	                          call 0x40014c5	      1761	expr.c	FUNCTION_19	IF_1	CALL_2
0x40014c5	    0x488905000000	            mov qword [0x040014cc], rax 	      1761	expr.c	FUNCTION_19	IF_1	CALL_2
0x40014cc	    0x488b05000000	            mov rax, qword [0x040014d3] 	      1762	expr.c	FUNCTION_19	IF_1
0x40014d3	    0x488905000000	            mov qword [0x040014da], rax 	      1762	expr.c	FUNCTION_19	IF_1
0x40014da	      0xe9d2feffff	                           jmp 0x40013b1	      1762	expr.c	FUNCTION_19	IF_1
0x40014df	      0x488d442440	                   lea rax, [rsp + 0x40]	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x40014e4	          0x4889c7	                            mov rdi, rax	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x40014e7	      0xe800000000	                          call 0x40014ec	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x40014ec	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x40014f1	      0x488d542438	                   lea rdx, [rsp + 0x38]	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x40014f6	      0xbe02000000	                              mov esi, 2	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x40014fb	        0x88442438	               mov byte [rsp + 0x38], al	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x40014ff	      0xe800000000	                          call 0x4001504	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001504	          0x83f801	                              cmp eax, 1	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001507	            0x89c5	                            mov ebp, eax	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001509	     0xf84e90e0000	                            je 0x40023f8	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400150f	            0x722d	                            jb 0x400153e	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001511	          0x8d40f9	                      lea eax, [rax - 7]	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001514	          0x83f802	                              cmp eax, 2	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001517	            0x7725	                            ja 0x400153e	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001519	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x400151e	      0xba05000000	                              mov edx, 5	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001523	      0xbe00000000	                              mov esi, 0	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001528	            0x31ff	                            xor edi, edi	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x400152a	      0xe800000000	                          call 0x400152f	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x400152f	          0x4889ee	                            mov rsi, rbp	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001532	          0x4889c7	                            mov rdi, rax	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001535	            0x31ed	                            xor ebp, ebp	      1599	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001537	            0x31c0	                            xor eax, eax	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001539	      0xe800000000	                          call 0x400153e	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x400153e	       0xfb6542438	           movzx edx, byte [rsp + 0x38] 	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001543	    0x488b05000000	            mov rax, qword [0x0400154a] 	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400154a	            0x8810	                      mov byte [rax], dl	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400154c	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001551	    0x8b0500000000	            mov eax, dword [0x04001557] 	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001557	    0x4c8925000000	            mov qword [0x0400155e], r12 	      1604	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400155e	          0x4429e0	                           sub eax, r12d	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001561	        0x89442408	                mov dword [rsp + 8], eax	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001565	            0x85ed	                           test ebp, ebp	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001567	     0xf84eefeffff	                            je 0x400145b	      1771	expr.c	FUNCTION_19	WHILE_1
0x400156d	          0x4189ef	                           mov r15d, ebp	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001570	          0x4963c7	                        movsxd rax, r15d	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001573	     0xfbeb8000000	                   movsx edi, byte [rax]	      1771	expr.c	FUNCTION_19	WHILE_1
0x400157a	      0x403a7c2424	              cmp dil, byte [rsp + 0x24]	      1771	expr.c	FUNCTION_19	WHILE_1
0x400157f	     0xf8ed6feffff	                           jle 0x400145b	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001585	      0x488d442440	                   lea rax, [rsp + 0x40]	      1771	expr.c	FUNCTION_19	WHILE_1
0x400158a	      0x4889442410	             mov qword [rsp + 0x10], rax	      1771	expr.c	FUNCTION_19	WHILE_1
0x400158f	          0x4889d8	                            mov rax, rbx	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001592	          0x4489fb	                           mov ebx, r15d	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001595	          0x4989c7	                            mov r15, rax	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001598	      0xe9bd010000	                           jmp 0x400175a	      1771	expr.c	FUNCTION_19	WHILE_1
0x400159d	           0xf1f00	                         nop dword [rax]	      1771	expr.c	FUNCTION_19	WHILE_1
0x40015a0	    0x41f681000000	                       test byte [r9], 2	      1583	expr.c	FUNCTION_16	IF_2	CALL_1
0x40015a8	     0xf85a2060000	                           jne 0x4001c50	      1583	expr.c	FUNCTION_16	IF_2	CALL_1
0x40015ae	        0x4183fe2d	                          cmp r14d, 0x2d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015b2	     0xf84a80a0000	                            je 0x4002060	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015b8	     0xf8e42060000	                           jle 0x4001c00	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015be	        0x4183fe3d	                          cmp r14d, 0x3d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015c2	     0xf84480a0000	                            je 0x4002010	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015c8	     0xf8e32080000	                           jle 0x4001e00	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015ce	        0x4183fe3e	                          cmp r14d, 0x3e	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015d2	     0xf84b00a0000	                            je 0x4002088	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015d8	        0x4183fe7c	                          cmp r14d, 0x7c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015dc	     0xf85560a0000	                           jne 0x4002038	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015e2	          0x83fd1d	                           cmp ebp, 0x1d	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015e5	           0xf95c2	                                setne dl	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40015e8	      0x418078017c	                 cmp byte [r8 + 1], 0x7c	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x40015ed	     0xf84850b0000	                            je 0x4002178	      1689	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x40015f3	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x40015fb	    0x41be0f000000	                           mov r14d, 0xf	      1690	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001601	     0xf1f80000000	                         nop dword [rax]	      1690	expr.c	FUNCTION_16	SWITCH_2	IF_7
0x4001608	            0x84d2	                             test dl, dl	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400160a	            0x7419	                            je 0x4001625	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400160c	          0x4863d3	                         movsxd rdx, ebx	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400160f	          0x4963c6	                        movsxd rax, r14d	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4001612	     0xfb68a000000	                   movzx ecx, byte [rdx]	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4001619	    0x388800000000	                      cmp byte [rax], cl	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x400161f	     0xf8fa20e0000	                            jg 0x40024c7	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x4001625	          0x83fb09	                              cmp ebx, 9	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x4001628	     0xf8e710e0000	                           jle 0x400249f	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x400162e	          0x83fb3d	                           cmp ebx, 0x3d	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x4001631	     0xf8f540e0000	                            jg 0x400248b	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x4001637	      0x410fb64718	           movzx eax, byte [r15 + 0x18] 	      1818	expr.c	FUNCTION_19	WHILE_1	IF_5
0x400163c	            0x3c06	                               cmp al, 6	      1818	expr.c	FUNCTION_19	WHILE_1	IF_5
0x400163e	     0xf84ec030000	                            je 0x4001a30	      1818	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4001644	       0xfb6542458	           movzx edx, byte [rsp + 0x58] 	      1829	expr.c	FUNCTION_19	WHILE_1	IF_7
0x4001649	          0x80fa06	                               cmp dl, 6	      1829	expr.c	FUNCTION_19	WHILE_1	IF_7
0x400164c	     0xf84e6010000	                            je 0x4001838	      1829	expr.c	FUNCTION_19	WHILE_1	IF_7
0x4001652	          0x83fd13	                           cmp ebp, 0x13	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001655	     0xf841d050000	                            je 0x4001b78	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x400165b	          0x83fd14	                           cmp ebp, 0x14	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x400165e	     0xf847c050000	                            je 0x4001be0	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001664	            0x3c02	                               cmp al, 2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001666	     0xf84f4060000	                            je 0x4001d60	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x400166c	            0x3c03	                               cmp al, 3	      1971	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x400166e	     0xf841c040000	                            je 0x4001a90	      1971	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001674	          0x4c89ff	                            mov rdi, r15	      2001	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_51
0x4001677	      0xe800000000	                          call 0x400167c	      2001	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_51
0x400167c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2002	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_52
0x4001681	          0x498907	                    mov qword [r15], rax	      2001	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_51
0x4001684	      0xe800000000	                          call 0x4001689	      2002	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_52
0x4001689	        0x49894708	                mov qword [r15 + 8], rax	      2002	expr.c	FUNCTION_19	WHILE_1	ELSE_11	CALL_52
0x400168d	      0x410fb64719	           movzx eax, byte [r15 + 0x19] 	      2005	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4001692	        0x41886f18	              mov byte [r15 + 0x18], bpl	      2003	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x4001696	    0x49c747100000	               mov qword [r15 + 0x10], 0	      2004	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x400169e	          0x83c801	                               or eax, 1	      2005	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x40016a1	          0x83e0fd	                     and eax, 0xfffffffd	      2006	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x40016a4	        0x41884719	               mov byte [r15 + 0x19], al	      2006	expr.c	FUNCTION_19	WHILE_1	ELSE_11
0x40016a8	          0x4d39e5	                            cmp r13, r12	      2009	expr.c	FUNCTION_19	WHILE_1	IF_21
0x40016ab	     0xf847f000000	                            je 0x4001730	      2009	expr.c	FUNCTION_19	WHILE_1	IF_21
0x40016b1	    0x4981fd000000	                              cmp r13, 0	      2011	expr.c	FUNCTION_19	WHILE_1	IF_21	IF_22
0x40016b8	     0xf84c2030000	                            je 0x4001a80	      2011	expr.c	FUNCTION_19	WHILE_1	IF_21	IF_22
0x40016be	    0x4981fc000000	                              cmp r12, 0	      2013	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_12	IF_23
0x40016c5	     0xf84b5030000	                            je 0x4001a80	      2013	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_12	IF_23
0x40016cb	    0x488b05000000	            mov rax, qword [0x040016d2] 	      2015	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_13	IF_24
0x40016d2	          0x4939c5	                            cmp r13, rax	      2015	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_13	IF_24
0x40016d5	            0x7459	                            je 0x4001730	      2015	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_13	IF_24
0x40016d7	          0x4939c4	                            cmp r12, rax	      2017	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_14	IF_25
0x40016da	     0xf8410060000	                            je 0x4001cf0	      2017	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_14	IF_25
0x40016e0	    0x488b05000000	            mov rax, qword [0x040016e7] 	      2019	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_15	IF_26
0x40016e7	          0x4939c5	                            cmp r13, rax	      2019	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_15	IF_26
0x40016ea	            0x7444	                            je 0x4001730	      2019	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_15	IF_26
0x40016ec	          0x4939c4	                            cmp r12, rax	      2021	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_16	IF_27
0x40016ef	     0xf84fb050000	                            je 0x4001cf0	      2021	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_16	IF_27
0x40016f5	    0x4981fc000000	                              cmp r12, 0	      2023	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_17	IF_28
0x40016fc	            0x7432	                            je 0x4001730	      2023	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_17	IF_28
0x40016fe	    0x4981fd000000	                              cmp r13, 0	      2025	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_18	IF_29
0x4001705	     0xf84e5050000	                            je 0x4001cf0	      2025	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_18	IF_29
0x400170b	          0x83fd14	                           cmp ebp, 0x14	      2028	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_19	IF_30
0x400170e	            0x7420	                            je 0x4001730	      2028	expr.c	FUNCTION_19	WHILE_1	IF_21	ELSE_19	IF_30
0x4001710	            0x31ff	                            xor edi, edi	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4001712	      0xba05000000	                              mov edx, 5	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4001717	      0xbe00000000	                              mov esi, 0	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x400171c	      0xe800000000	                          call 0x4001721	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4001721	          0x4889c7	                            mov rdi, rax	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4001724	            0x31c0	                            xor eax, eax	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4001726	      0xe800000000	                          call 0x400172b	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x400172b	       0xf1f440000	                   nop dword [rax + rax]	      2032	expr.c	FUNCTION_19	WHILE_1	IF_21	CALL_54
0x4001730	          0x4585f6	                         test r14d, r14d	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001733	     0xf841ffdffff	                            je 0x4001458	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001739	          0x4963c6	                        movsxd rax, r14d	      1771	expr.c	FUNCTION_19	WHILE_1
0x400173c	     0xfbeb8000000	                   movsx edi, byte [rax]	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001743	          0x4889c3	                            mov rbx, rax	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001746	      0x40387c2423	              cmp byte [rsp + 0x23], dil	      1771	expr.c	FUNCTION_19	WHILE_1
0x400174b	     0xf8d07fdffff	                           jge 0x4001458	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001751	    0x4c8b25000000	            mov r12, qword [0x04001758] 	      1771	expr.c	FUNCTION_19	WHILE_1
0x4001758	            0x89c5	                            mov ebp, eax	      1771	expr.c	FUNCTION_19	WHILE_1
0x400175a	      0x4c63742408	            movsxd r14, dword [rsp + 8] 	      1776	expr.c	FUNCTION_19	WHILE_1
0x400175f	            0x31d2	                            xor edx, edx	      1778	expr.c	FUNCTION_19	WHILE_1
0x4001761	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x4001766	      0x668954245a	               mov word [rsp + 0x5a], dx	      1778	expr.c	FUNCTION_19	WHILE_1
0x400176b	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x400176f	          0x4d01e6	                            add r14, r12	      1776	expr.c	FUNCTION_19	WHILE_1
0x4001772	    0x4c8935000000	            mov qword [0x04001779], r14 	      1776	expr.c	FUNCTION_19	WHILE_1
0x4001779	      0xe800000000	                          call 0x400177e	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x400177e	      0x807c245801	                cmp byte [rsp + 0x58], 1	      1780	expr.c	FUNCTION_19	WHILE_1	IF_2
0x4001783	          0x4989c4	                            mov r12, rax	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x4001786	     0xf8474050000	                            je 0x4001d00	      1780	expr.c	FUNCTION_19	WHILE_1	IF_2
0x400178c	    0x4c8b05000000	              mov r8, qword [0x04001793]	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x4001793	        0x410fb600	                    movzx eax, byte [r8]	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x4001797	            0x3c20	                            cmp al, 0x20	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x4001799	     0xf84140d0000	                            je 0x40024b3	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x400179f	          0x83fd1d	                           cmp ebp, 0x1d	      1791	expr.c	FUNCTION_19	WHILE_1	IF_3
0x40017a2	            0x746c	                            je 0x4001810	      1791	expr.c	FUNCTION_19	WHILE_1	IF_3
0x40017a4	        0x440fb6c8	                           movzx r9d, al	      1576	expr.c	FUNCTION_16
0x40017a8	    0x4180b9000000	                        cmp byte [r9], 0	      1579	expr.c	FUNCTION_16	IF_1
0x40017b0	          0x4d89ce	                             mov r14, r9	      1576	expr.c	FUNCTION_16
0x40017b3	     0xf84e7fdffff	                            je 0x40015a0	      1579	expr.c	FUNCTION_16	IF_1
0x40017b9	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x40017c1	          0x4531f6	                          xor r14d, r14d	      1580	expr.c	FUNCTION_16	IF_1
0x40017c4	      0xe95cfeffff	                           jmp 0x4001625	      1580	expr.c	FUNCTION_16	IF_1
0x40017c9	        0x4183fe3c	                          cmp r14d, 0x3c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40017cd	     0xf851e0b0000	                           jne 0x40022f1	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40017d3	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40017d9	            0x3c3d	                            cmp al, 0x3d	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40017db	     0xf84580c0000	                            je 0x4002439	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40017e1	            0x3c3e	                            cmp al, 0x3e	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40017e3	     0xf848a0c0000	                            je 0x4002473	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40017e9	            0x3c3c	                            cmp al, 0x3c	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40017eb	     0xf84780c0000	                            je 0x4002469	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40017f1	    0x41bf17000000	                          mov r15d, 0x17	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40017f7	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x40017ff	      0xbd17000000	                           mov ebp, 0x17	      1635	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001804	      0xe967fdffff	                           jmp 0x4001570	      1635	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001809	     0xf1f80000000	                         nop dword [rax]	      1635	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001810	            0x3c5d	                            cmp al, 0x5d	      1793	expr.c	FUNCTION_19	WHILE_1	IF_3	IF_4
0x4001812	     0xf8428050000	                            je 0x4001d40	      1793	expr.c	FUNCTION_19	WHILE_1	IF_3	IF_4
0x4001818	            0x31c0	                            xor eax, eax	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x400181a	      0xbf00000000	                              mov edi, 0	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x400181f	      0xe800000000	                          call 0x4001824	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x4001824	    0x4c8b05000000	              mov r8, qword [0x0400182b]	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x400182b	        0x410fb600	                    movzx eax, byte [r8]	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x400182f	      0xe970ffffff	                           jmp 0x40017a4	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x4001834	         0xf1f4000	                         nop dword [rax]	      1794	expr.c	FUNCTION_19	WHILE_1	IF_3	CALL_10
0x4001838	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      1831	expr.c	FUNCTION_19	WHILE_1	IF_7	IF_8
0x400183e	      0xba05000000	                              mov edx, 5	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x4001843	      0xbe00000000	                              mov esi, 0	      1832	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_22
0x4001848	     0xf8e02060000	                           jle 0x4001e50	      1831	expr.c	FUNCTION_19	WHILE_1	IF_7	IF_8
0x400184e	            0x31ff	                            xor edi, edi	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4001850	      0xe800000000	                          call 0x4001855	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4001855	          0x4889c7	                            mov rdi, rax	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4001858	            0x31c0	                            xor eax, eax	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x400185a	      0xe800000000	                          call 0x400185f	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x400185f	          0x83fd13	                           cmp ebp, 0x13	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001862	      0xc644245802	                mov byte [rsp + 0x58], 2	      1835	expr.c	FUNCTION_19	WHILE_1	IF_7
0x4001867	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1836	expr.c	FUNCTION_19	WHILE_1	IF_7
0x4001870	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1837	expr.c	FUNCTION_19	WHILE_1	IF_7
0x4001879	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1838	expr.c	FUNCTION_19	WHILE_1	IF_7
0x4001882	     0xf8440050000	                            je 0x4001dc8	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001888	          0x83fd14	                           cmp ebp, 0x14	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x400188b	      0x410fb64718	           movzx eax, byte [r15 + 0x18] 	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001890	     0xf842a070000	                            je 0x4001fc0	      1860	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001896	            0x3c02	                               cmp al, 2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001898	      0xba02000000	                              mov edx, 2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x400189d	     0xf85c9fdffff	                           jne 0x400166c	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x40018a3	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	      1902	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x40018a8	          0x4885db	                           test rbx, rbx	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x40018ab	     0xf85c6040000	                           jne 0x4001d77	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x40018b1	          0x8d45f5	                    lea eax, [rbp - 0xb]	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x40018b4	          0x83f801	                              cmp eax, 1	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x40018b7	     0xf867c0a0000	                           jbe 0x4002339	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x40018bd	          0x8d45f6	                    lea eax, [rbp - 0xa]	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018c0	          0x83f812	                           cmp eax, 0x12	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018c3	     0xf87abfdffff	                            ja 0x4001674	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018c9	    0xff24c5000000	                       jmp qword [rax*8]	      1916	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018d0	            0x31c0	                            xor eax, eax	      1967	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018d2	        0x490b5f10	              or rbx, qword [r15 + 0x10]	      1967	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018d6	           0xf95c0	                                setne al	      1967	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018d9	        0x49894710	             mov qword [r15 + 0x10], rax	      1967	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018dd	      0xe9c6fdffff	                           jmp 0x40016a8	      1968	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018e2	      0x49837f1000	               cmp qword [r15 + 0x10], 0	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018e7	           0xf95c0	                                setne al	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018ea	            0x31d2	                            xor edx, edx	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018ec	          0x4885db	                           test rbx, rbx	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018ef	           0xf95c2	                                setne dl	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018f2	          0x4821d0	                            and rax, rdx	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018f5	        0x49894710	             mov qword [r15 + 0x10], rax	      1964	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018f9	      0xe9aafdffff	                           jmp 0x40016a8	      1965	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40018fe	            0x31c0	                            xor eax, eax	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001900	        0x493b5f10	            cmp rbx, qword [r15 + 0x10] 	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001904	           0xf9cc0	                                 setl al	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001907	          0x48f7d8	                                 neg rax	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400190a	        0x49894710	             mov qword [r15 + 0x10], rax	      1960	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400190e	      0xe995fdffff	                           jmp 0x40016a8	      1962	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001913	            0x31c0	                            xor eax, eax	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001915	        0x493b5f10	            cmp rbx, qword [r15 + 0x10] 	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001919	           0xf9ec0	                                setle al	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400191c	          0x48f7d8	                                 neg rax	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400191f	        0x49894710	             mov qword [r15 + 0x10], rax	      1956	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001923	      0xe980fdffff	                           jmp 0x40016a8	      1958	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001928	            0x31c0	                            xor eax, eax	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400192a	        0x493b5f10	            cmp rbx, qword [r15 + 0x10] 	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400192e	           0xf9dc0	                                setge al	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001931	          0x48f7d8	                                 neg rax	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001934	        0x49894710	             mov qword [r15 + 0x10], rax	      1952	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001938	      0xe96bfdffff	                           jmp 0x40016a8	      1954	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400193d	            0x31c0	                            xor eax, eax	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400193f	        0x493b5f10	            cmp rbx, qword [r15 + 0x10] 	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001943	           0xf9fc0	                                 setg al	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001946	          0x48f7d8	                                 neg rax	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001949	        0x49894710	             mov qword [r15 + 0x10], rax	      1948	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400194d	      0xe956fdffff	                           jmp 0x40016a8	      1950	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001952	            0x31c0	                            xor eax, eax	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001954	        0x49395f10	            cmp qword [r15 + 0x10], rbx 	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001958	           0xf95c0	                                setne al	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400195b	          0x48f7d8	                                 neg rax	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400195e	        0x49894710	             mov qword [r15 + 0x10], rax	      1944	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001962	      0xe941fdffff	                           jmp 0x40016a8	      1946	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001967	            0x31c0	                            xor eax, eax	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001969	        0x49395f10	            cmp qword [r15 + 0x10], rbx 	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400196d	           0xf94c0	                                 sete al	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001970	          0x48f7d8	                                 neg rax	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001973	        0x49894710	             mov qword [r15 + 0x10], rax	      1940	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001977	      0xe92cfdffff	                           jmp 0x40016a8	      1942	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x400197c	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1731	expr.c	FUNCTION_18
0x4001980	          0x4889c2	                            mov rdx, rax	      1734	expr.c	FUNCTION_18
0x4001983	          0x4829da	                            sub rdx, rbx	      1734	expr.c	FUNCTION_18
0x4001986	          0x4839d8	                            cmp rax, rbx	      1738	expr.c	FUNCTION_18	IF_1
0x4001989	        0x49895710	             mov qword [r15 + 0x10], rdx	      1734	expr.c	FUNCTION_18
0x400198d	     0xf8315fdffff	                           jae 0x40016a8	      1738	expr.c	FUNCTION_18	IF_1
0x4001993	      0x410fb65719	           movzx edx, byte [r15 + 0x19] 	      1736	expr.c	FUNCTION_18
0x4001998	            0x89d0	                            mov eax, edx	      1736	expr.c	FUNCTION_18
0x400199a	          0x83e2fd	                     and edx, 0xfffffffd	      1739	expr.c	FUNCTION_18	IF_1
0x400199d	            0xd0e8	                               shr al, 1	      1736	expr.c	FUNCTION_18
0x400199f	          0x83e001	                              and eax, 1	      1736	expr.c	FUNCTION_18
0x40019a2	          0x83f001	                              xor eax, 1	      1739	expr.c	FUNCTION_18	IF_1
0x40019a5	             0x1c0	                            add eax, eax	      1739	expr.c	FUNCTION_18	IF_1
0x40019a7	             0x9d0	                             or eax, edx	      1739	expr.c	FUNCTION_18	IF_1
0x40019a9	        0x41884719	               mov byte [r15 + 0x19], al	      1739	expr.c	FUNCTION_18	IF_1
0x40019ad	      0xe9f6fcffff	                           jmp 0x40016a8	      1739	expr.c	FUNCTION_18	IF_1
0x40019b2	        0x49215f10	             and qword [r15 + 0x10], rbx	      1932	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019b6	      0xe9edfcffff	                           jmp 0x40016a8	      1932	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019bb	        0x49315f10	             xor qword [r15 + 0x10], rbx	      1931	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019bf	      0xe9e4fcffff	                           jmp 0x40016a8	      1931	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019c4	          0x4889d8	                            mov rax, rbx	      1930	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019c7	          0x48f7d0	                                 not rax	      1930	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019ca	        0x49094710	              or qword [r15 + 0x10], rax	      1930	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019ce	      0xe9d5fcffff	                           jmp 0x40016a8	      1930	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019d3	        0x49095f10	              or qword [r15 + 0x10], rbx	      1929	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019d7	      0xe9ccfcffff	                           jmp 0x40016a8	      1929	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019dc	            0x89d9	                            mov ecx, ebx	      1926	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019de	        0x49d36f10	              shr qword [r15 + 0x10], cl	      1926	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019e2	      0xe9c1fcffff	                           jmp 0x40016a8	      1928	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019e7	            0x89d9	                            mov ecx, ebx	      1922	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019e9	        0x49d36710	              shl qword [r15 + 0x10], cl	      1922	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019ed	      0xe9b6fcffff	                           jmp 0x40016a8	      1922	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019f2	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019f6	            0x4899	                                     cqo	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019f8	          0x48f7fb	                                idiv rbx	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019fb	        0x49895710	             mov qword [r15 + 0x10], rdx	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x40019ff	      0xe9a4fcffff	                           jmp 0x40016a8	      1921	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a04	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a08	            0x4899	                                     cqo	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a0a	          0x48f7fb	                                idiv rbx	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a0d	        0x49894710	             mov qword [r15 + 0x10], rax	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a11	      0xe992fcffff	                           jmp 0x40016a8	      1920	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a16	          0x4889d8	                            mov rax, rbx	      1919	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a19	      0x490faf4710	            imul rax, qword [r15 + 0x10]	      1919	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a1e	        0x49894710	             mov qword [r15 + 0x10], rax	      1919	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a22	      0xe981fcffff	                           jmp 0x40016a8	      1919	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a27	    0x660f1f840000	                    nop word [rax + rax]	      1919	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	SWITCH_1
0x4001a30	      0x49837f1000	               cmp qword [r15 + 0x10], 0	      1820	expr.c	FUNCTION_19	WHILE_1	IF_5	IF_6
0x4001a35	      0xba05000000	                              mov edx, 5	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x4001a3a	      0xbe00000000	                              mov esi, 0	      1821	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_18
0x4001a3f	     0xf8efb030000	                           jle 0x4001e40	      1820	expr.c	FUNCTION_19	WHILE_1	IF_5	IF_6
0x4001a45	            0x31ff	                            xor edi, edi	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4001a47	      0xe800000000	                          call 0x4001a4c	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4001a4c	          0x4889c7	                            mov rdi, rax	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4001a4f	            0x31c0	                            xor eax, eax	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4001a51	      0xe800000000	                          call 0x4001a56	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4001a56	      0x41c6471802	                mov byte [r15 + 0x18], 2	      1824	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4001a5b	    0x49c747100000	               mov qword [r15 + 0x10], 0	      1825	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4001a63	      0xb802000000	                              mov eax, 2	      1827	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4001a68	    0x49c707000000	                      mov qword [r15], 0	      1826	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4001a6f	    0x49c747080000	                  mov qword [r15 + 8], 0	      1827	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4001a77	      0xe9c8fbffff	                           jmp 0x4001644	      1827	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4001a7c	         0xf1f4000	                         nop dword [rax]	      1827	expr.c	FUNCTION_19	WHILE_1	IF_5
0x4001a80	    0x41bd00000000	                             mov r13d, 0	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001a86	      0xe9a5fcffff	                           jmp 0x4001730	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001a8b	       0xf1f440000	                   nop dword [rax + rax]	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001a90	          0x80fa03	                               cmp dl, 3	      1972	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001a93	     0xf85dbfbffff	                           jne 0x4001674	      1972	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001a99	          0x8d45ed	                   lea eax, [rbp - 0x13]	      1973	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001a9c	          0x83f801	                              cmp eax, 1	      1973	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001a9f	     0xf868b070000	                           jbe 0x4002230	      1973	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001aa5	      0x49837f1000	               cmp qword [r15 + 0x10], 0	      1975	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001aaa	     0xf85c4fbffff	                           jne 0x4001674	      1975	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001ab0	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      1976	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001ab6	     0xf85b8fbffff	                           jne 0x4001674	      1976	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001abc	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1980	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001ac1	        0x41886f18	              mov byte [r15 + 0x18], bpl	      1979	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001ac5	        0x49894708	                mov qword [r15 + 8], rax	      1980	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4001ac9	          0x83fd14	                           cmp ebp, 0x14	      1983	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19
0x4001acc	     0xf85d6fbffff	                           jne 0x40016a8	      1983	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19
0x4001ad2	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      1731	expr.c	FUNCTION_18
0x4001ad6	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1985	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	CALL_47
0x4001adb	      0x410fb64f19	           movzx ecx, byte [r15 + 0x19] 	      1736	expr.c	FUNCTION_18
0x4001ae0	          0x4889f0	                            mov rax, rsi	      1734	expr.c	FUNCTION_18
0x4001ae3	          0x4829d0	                            sub rax, rdx	      1734	expr.c	FUNCTION_18
0x4001ae6	        0x49894710	             mov qword [r15 + 0x10], rax	      1734	expr.c	FUNCTION_18
0x4001aea	            0x89c8	                            mov eax, ecx	      1736	expr.c	FUNCTION_18
0x4001aec	        0x32442459	               xor al, byte [rsp + 0x59]	      1736	expr.c	FUNCTION_18
0x4001af0	            0xd0e8	                               shr al, 1	      1736	expr.c	FUNCTION_18
0x4001af2	          0x83e001	                              and eax, 1	      1736	expr.c	FUNCTION_18
0x4001af5	          0x4839d6	                            cmp rsi, rdx	      1738	expr.c	FUNCTION_18	IF_1
0x4001af8	     0xf8260080000	                            jb 0x400235e	      1738	expr.c	FUNCTION_18	IF_1
0x4001afe	             0x1c0	                            add eax, eax	      1736	expr.c	FUNCTION_18
0x4001b00	          0x83e1fd	                     and ecx, 0xfffffffd	      1736	expr.c	FUNCTION_18
0x4001b03	             0x9c8	                             or eax, ecx	      1736	expr.c	FUNCTION_18
0x4001b05	        0x41884719	               mov byte [r15 + 0x19], al	      1736	expr.c	FUNCTION_18
0x4001b09	          0x4d39e5	                            cmp r13, r12	      1987	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4001b0c	     0xf859ffbffff	                           jne 0x40016b1	      1987	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4001b12	    0x4981fd000000	                              cmp r13, 0	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4001b19	     0xf8411fcffff	                            je 0x4001730	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4001b1f	    0x4981fd000000	                              cmp r13, 0	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4001b26	     0xf8454ffffff	                            je 0x4001a80	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4001b2c	    0x4c3b2d000000	            cmp r13, qword [0x04001b33] 	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4001b33	     0xf84f7fbffff	                            je 0x4001730	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4001b39	    0x4c3b2d000000	            cmp r13, qword [0x04001b40] 	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4001b40	     0xf84eafbffff	                            je 0x4001730	      1988	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_48
0x4001b46	          0x498b3f	                    mov rdi, qword [r15]	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x4001b49	            0x31f6	                            xor esi, esi	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x4001b4b	      0xe800000000	                          call 0x4001b50	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x4001b50	            0x85c0	                           test eax, eax	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x4001b52	     0xf85d8fbffff	                           jne 0x4001730	      1989	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_49
0x4001b58	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x4001b5d	            0x31f6	                            xor esi, esi	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x4001b5f	      0xe800000000	                          call 0x4001b64	      1990	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20	CALL_50
0x4001b64	            0x85c0	                           test eax, eax	      1992	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4001b66	      0xb800000000	                              mov eax, 0	      1992	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4001b6b	        0x4c0f44e8	                          cmove r13, rax	      1992	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4001b6f	      0xe9bcfbffff	                           jmp 0x4001730	      1992	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4001b74	         0xf1f4000	                         nop dword [rax]	      1992	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	ELSE_10	IF_19	IF_20
0x4001b78	          0x80fa02	                               cmp dl, 2	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001b7b	     0xf84a8090000	                            je 0x4002529	      1853	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001b81	            0x3c02	                               cmp al, 2	      1889	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x4001b83	     0xf85e3faffff	                           jne 0x400166c	      1889	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x4001b89	          0x80fa05	                               cmp dl, 5	      1890	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x4001b8c	     0xf84e2faffff	                            je 0x4001674	      1890	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x4001b92	      0x410fb64f19	           movzx ecx, byte [r15 + 0x19] 	      1720	expr.c	FUNCTION_17
0x4001b97	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      1715	expr.c	FUNCTION_17
0x4001b9b	        0x41885718	               mov byte [r15 + 0x18], dl	      1893	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x4001b9f	    0x660f6f442440	       movdqa xmm0, xmmword [rsp + 0x40]	      1894	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x4001ba5	          0x4889f2	                            mov rdx, rsi	      1718	expr.c	FUNCTION_17
0x4001ba8	      0x4803542450	             add rdx, qword [rsp + 0x50]	      1718	expr.c	FUNCTION_17
0x4001bad	            0x89c8	                            mov eax, ecx	      1720	expr.c	FUNCTION_17
0x4001baf	        0x32442459	               xor al, byte [rsp + 0x59]	      1720	expr.c	FUNCTION_17
0x4001bb3	        0x410f1107	              movups xmmword [r15], xmm0	      1894	expr.c	FUNCTION_19	WHILE_1	ELSE_7	IF_13
0x4001bb7	            0xd0e8	                               shr al, 1	      1720	expr.c	FUNCTION_17
0x4001bb9	          0x83e001	                              and eax, 1	      1720	expr.c	FUNCTION_17
0x4001bbc	          0x4839d6	                            cmp rsi, rdx	      1722	expr.c	FUNCTION_17	IF_1
0x4001bbf	        0x49895710	             mov qword [r15 + 0x10], rdx	      1718	expr.c	FUNCTION_17
0x4001bc3	            0x7603	                           jbe 0x4001bc8	      1722	expr.c	FUNCTION_17	IF_1
0x4001bc5	          0x83f001	                              xor eax, 1	      1723	expr.c	FUNCTION_17	IF_1
0x4001bc8	          0x8d1400	                    lea edx, [rax + rax]	      1720	expr.c	FUNCTION_17
0x4001bcb	            0x89c8	                            mov eax, ecx	      1720	expr.c	FUNCTION_17
0x4001bcd	          0x4d89e5	                            mov r13, r12	      1779	expr.c	FUNCTION_19	WHILE_1	CALL_6
0x4001bd0	          0x83e0fd	                     and eax, 0xfffffffd	      1720	expr.c	FUNCTION_17
0x4001bd3	             0x9d0	                             or eax, edx	      1720	expr.c	FUNCTION_17
0x4001bd5	        0x41884719	               mov byte [r15 + 0x19], al	      1720	expr.c	FUNCTION_17
0x4001bd9	      0xe952fbffff	                           jmp 0x4001730	      1720	expr.c	FUNCTION_17
0x4001bde	            0x6690	                                     nop	      1720	expr.c	FUNCTION_17
0x4001be0	          0x80fa03	                               cmp dl, 3	      1861	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001be3	     0xf8477020000	                            je 0x4001e60	      1861	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001be9	          0x80fa02	                               cmp dl, 2	      1883	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x4001bec	     0xf84ce030000	                            je 0x4001fc0	      1883	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x4001bf2	            0x3c02	                               cmp al, 2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001bf4	     0xf8572faffff	                           jne 0x400166c	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001bfa	      0xe975faffff	                           jmp 0x4001674	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001bff	              0x90	                                     nop	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001c00	        0x4183fe26	                          cmp r14d, 0x26	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001c04	     0xf84b6040000	                            je 0x40020c0	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001c0a	        0x4183fe2b	                          cmp r14d, 0x2b	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001c0e	     0xf844c040000	                            je 0x4002060	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001c14	        0x4183fe21	                          cmp r14d, 0x21	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001c18	     0xf851a040000	                           jne 0x4002038	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001c1e	      0x410fb64001	                movzx eax, byte [r8 + 1]	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c23	            0x3c21	                            cmp al, 0x21	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c25	     0xf84e5050000	                            je 0x4002210	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c2b	            0x3c3d	                            cmp al, 0x3d	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c2d	     0xf840d050000	                            je 0x4002140	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c33	          0x83fd1d	                           cmp ebp, 0x1d	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c36	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x4001c3e	    0x41be10000000	                          mov r14d, 0x10	      1685	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c44	           0xf95c2	                                setne dl	      1685	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c47	      0xe9bcf9ffff	                           jmp 0x4001608	      1685	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c4c	         0xf1f4000	                         nop dword [rax]	      1685	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4001c50	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4001c55	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4001c5a	      0xe800000000	                          call 0x4001c5f	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4001c5f	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001c64	      0x488d542437	                   lea rdx, [rsp + 0x37]	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001c69	      0xbe02000000	                              mov esi, 2	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001c6e	        0x88442437	               mov byte [rsp + 0x37], al	      1586	expr.c	FUNCTION_16	IF_2	CALL_2
0x4001c72	      0xe800000000	                          call 0x4001c77	      1588	expr.c	FUNCTION_16	IF_2	CALL_3
0x4001c77	          0x83f801	                              cmp eax, 1	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001c7a	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001c7f	     0xf847b040000	                            je 0x4002100	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001c85	     0xf825d040000	                            jb 0x40020e8	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001c8b	          0x8d50f9	                      lea edx, [rax - 7]	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001c8e	          0x83fa02	                              cmp edx, 2	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001c91	     0xf8751040000	                            ja 0x40020e8	      1589	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001c97	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001c9c	      0xba05000000	                              mov edx, 5	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001ca1	      0xbe00000000	                              mov esi, 0	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001ca6	            0x31ff	                            xor edi, edi	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001ca8	      0xe800000000	                          call 0x4001cad	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001cad	          0x4c89f6	                            mov rsi, r14	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001cb0	          0x4889c7	                            mov rdi, rax	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001cb3	            0x31c0	                            xor eax, eax	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001cb5	      0xe800000000	                          call 0x4001cba	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001cba	            0x31d2	                            xor edx, edx	      1598	expr.c	FUNCTION_16	IF_2	SWITCH_1	CALL_5
0x4001cbc	            0x31c0	                            xor eax, eax	      1599	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cbe	       0xfb67c2437	           movzx edi, byte [rsp + 0x37] 	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cc3	    0x488b35000000	            mov rsi, qword [0x04001cca] 	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cca	          0x4189c6	                           mov r14d, eax	      1605	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001ccd	          0x40883e	                     mov byte [rsi], dil	      1602	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cd0	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cd5	    0x8b0d00000000	            mov ecx, dword [0x04001cdb] 	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cdb	    0x488935000000	            mov qword [0x04001ce2], rsi 	      1604	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001ce2	            0x29f1	                            sub ecx, esi	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001ce4	        0x894c2408	                mov dword [rsp + 8], ecx	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001ce8	      0xe91bf9ffff	                           jmp 0x4001608	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001ced	           0xf1f00	                         nop dword [rax]	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cf0	          0x4d89e5	                            mov r13, r12	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cf3	      0xe938faffff	                           jmp 0x4001730	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001cf8	     0xf1f84000000	                   nop dword [rax + rax]	      1603	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4001d00	      0xba05000000	                              mov edx, 5	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4001d05	      0xbe00000000	                              mov esi, 0	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4001d0a	            0x31ff	                            xor edi, edi	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4001d0c	      0xe800000000	                          call 0x4001d11	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4001d11	          0x4889c7	                            mov rdi, rax	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4001d14	            0x31c0	                            xor eax, eax	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4001d16	      0xe800000000	                          call 0x4001d1b	      1782	expr.c	FUNCTION_19	WHILE_1	IF_2	CALL_8
0x4001d1b	      0xc644245802	                mov byte [rsp + 0x58], 2	      1783	expr.c	FUNCTION_19	WHILE_1	IF_2
0x4001d20	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1784	expr.c	FUNCTION_19	WHILE_1	IF_2
0x4001d29	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1785	expr.c	FUNCTION_19	WHILE_1	IF_2
0x4001d32	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1786	expr.c	FUNCTION_19	WHILE_1	IF_2
0x4001d3b	      0xe94cfaffff	                           jmp 0x400178c	      1786	expr.c	FUNCTION_19	WHILE_1	IF_2
0x4001d40	        0x498d5001	                       lea rdx, [r8 + 1]	      1797	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1
0x4001d44	    0x488915000000	            mov qword [0x04001d4b], rdx 	      1797	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1
0x4001d4b	      0x410fb64001	                movzx eax, byte [r8 + 1]	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4001d50	            0x3c20	                            cmp al, 0x20	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4001d52	     0xf84c8030000	                            je 0x4002120	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4001d58	          0x4989d0	                             mov r8, rdx	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4001d5b	      0xe944faffff	                           jmp 0x40017a4	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4001d60	          0x80fa02	                               cmp dl, 2	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001d63	     0xf850bf9ffff	                           jne 0x4001674	      1899	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001d69	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	      1902	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14
0x4001d6e	          0x4885db	                           test rbx, rbx	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x4001d71	     0xf843afbffff	                            je 0x40018b1	      1903	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x4001d77	        0x4883fb3f	                           cmp rbx, 0x3f	      1908	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001d7b	     0xf863cfbffff	                           jbe 0x40018bd	      1908	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001d81	          0x8d45f3	                    lea eax, [rbp - 0xd]	      1909	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001d84	          0x83f801	                              cmp eax, 1	      1909	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001d87	     0xf8730fbffff	                            ja 0x40018bd	      1909	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001d8d	      0xba05000000	                              mov edx, 5	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001d92	      0xbe00000000	                              mov esi, 0	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001d97	            0x31ff	                            xor edi, edi	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001d99	      0xe800000000	                          call 0x4001d9e	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001d9e	          0x4889de	                            mov rsi, rbx	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001da1	          0x4531c9	                            xor r9d, r9d	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001da4	          0x4531c0	                            xor r8d, r8d	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001da7	      0xb93f000000	                           mov ecx, 0x3f	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001dac	            0x31d2	                            xor edx, edx	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001dae	          0x4889c7	                            mov rdi, rax	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001db1	      0xe800000000	                          call 0x4001db6	      1911	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16	CALL_44
0x4001db6	            0x31db	                            xor ebx, ebx	      1914	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001db8	    0x49c747100000	               mov qword [r15 + 0x10], 0	      1914	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001dc0	      0xe9f8faffff	                           jmp 0x40018bd	      1914	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001dc5	           0xf1f00	                         nop dword [rax]	      1914	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_16
0x4001dc8	      0x41807f1805	                cmp byte [r15 + 0x18], 5	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001dcd	     0xf84a1f8ffff	                            je 0x4001674	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4001dd3	       0xfb6442459	           movzx eax, byte [rsp + 0x59] 	      1720	expr.c	FUNCTION_17
0x4001dd8	      0x4983471000	               add qword [r15 + 0x10], 0	      1718	expr.c	FUNCTION_17
0x4001ddd	        0x41324719	               xor al, byte [r15 + 0x19]	      1720	expr.c	FUNCTION_17
0x4001de1	            0xd0e8	                               shr al, 1	      1720	expr.c	FUNCTION_17
0x4001de3	          0x83e001	                              and eax, 1	      1720	expr.c	FUNCTION_17
0x4001de6	      0x410fb65719	           movzx edx, byte [r15 + 0x19] 	      1720	expr.c	FUNCTION_17
0x4001deb	             0x1c0	                            add eax, eax	      1720	expr.c	FUNCTION_17
0x4001ded	          0x83e2fd	                     and edx, 0xfffffffd	      1720	expr.c	FUNCTION_17
0x4001df0	             0x9d0	                             or eax, edx	      1720	expr.c	FUNCTION_17
0x4001df2	        0x41884719	               mov byte [r15 + 0x19], al	      1720	expr.c	FUNCTION_17
0x4001df6	      0xe9adf8ffff	                           jmp 0x40016a8	      1720	expr.c	FUNCTION_17
0x4001dfb	       0xf1f440000	                   nop dword [rax + rax]	      1720	expr.c	FUNCTION_17
0x4001e00	        0x4183fe3c	                          cmp r14d, 0x3c	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e04	     0xf852e020000	                           jne 0x4002038	      1610	expr.c	FUNCTION_16	SWITCH_2
0x4001e0a	      0x410fb64001	                movzx eax, byte [r8 + 1]	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e0f	            0x3c3d	                            cmp al, 0x3d	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e11	     0xf8481040000	                            je 0x4002298	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e17	            0x3c3e	                            cmp al, 0x3e	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e19	     0xf8421030000	                            je 0x4002140	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e1f	          0x83fd1d	                           cmp ebp, 0x1d	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e22	           0xf95c2	                                setne dl	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e25	            0x3c3c	                            cmp al, 0x3c	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e27	     0xf8453040000	                            je 0x4002280	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e2d	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x4001e35	    0x41be17000000	                          mov r14d, 0x17	      1635	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e3b	      0xe9c8f7ffff	                           jmp 0x4001608	      1635	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4001e40	      0xbe00000000	                              mov esi, 0	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4001e45	      0xe9fbfbffff	                           jmp 0x4001a45	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4001e4a	    0x660f1f440000	                    nop word [rax + rax]	      1823	expr.c	FUNCTION_19	WHILE_1	IF_5	CALL_20
0x4001e50	      0xbe00000000	                              mov esi, 0	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4001e55	      0xe9f4f9ffff	                           jmp 0x400184e	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4001e5a	    0x660f1f440000	                    nop word [rax + rax]	      1834	expr.c	FUNCTION_19	WHILE_1	IF_7	CALL_24
0x4001e60	          0x4d39e5	                            cmp r13, r12	      1863	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001e63	     0xf8589fdffff	                           jne 0x4001bf2	      1863	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001e69	            0x3c03	                               cmp al, 3	      1863	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001e6b	     0xf8581fdffff	                           jne 0x4001bf2	      1863	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001e71	    0x4981fc000000	                              cmp r12, 0	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x4001e78	     0xf8422010000	                            je 0x4001fa0	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x4001e7e	    0x4981fc000000	                              cmp r12, 0	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x4001e85	     0xf8415010000	                            je 0x4001fa0	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x4001e8b	    0x4c3b25000000	            cmp r12, qword [0x04001e92] 	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x4001e92	     0xf8408010000	                            je 0x4001fa0	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x4001e98	    0x4c3b25000000	            cmp r12, qword [0x04001e9f] 	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x4001e9f	     0xf84fb000000	                            je 0x4001fa0	      1867	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_28
0x4001ea5	          0x498b3f	                    mov rdi, qword [r15]	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x4001ea8	            0x31f6	                            xor esi, esi	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x4001eaa	      0xe800000000	                          call 0x4001eaf	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x4001eaf	            0x85c0	                           test eax, eax	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x4001eb1	     0xf85e9000000	                           jne 0x4001fa0	      1868	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_29
0x4001eb7	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x4001ebc	            0x31f6	                            xor esi, esi	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x4001ebe	      0xe800000000	                          call 0x4001ec3	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x4001ec3	            0x85c0	                           test eax, eax	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x4001ec5	     0xf85d5000000	                           jne 0x4001fa0	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x4001ecb	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1869	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_30
0x4001ed0	      0xe800000000	                          call 0x4001ed5	      1872	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_33
0x4001ed5	          0x498b3f	                    mov rdi, qword [r15]	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4001ed8	          0x4889c3	                            mov rbx, rax	      1872	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_33
0x4001edb	      0xe800000000	                          call 0x4001ee0	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4001ee0	      0x488d542438	                   lea rdx, [rsp + 0x38]	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4001ee5	          0x4889de	                            mov rsi, rbx	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4001ee8	          0x4889c7	                            mov rdi, rax	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4001eeb	      0xe800000000	                          call 0x4001ef0	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4001ef0	            0x85c0	                           test eax, eax	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4001ef2	     0xf84b6000000	                            je 0x4001fae	      1871	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_32
0x4001ef8	          0x498b3f	                    mov rdi, qword [r15]	      1875	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_34
0x4001efb	      0xe800000000	                          call 0x4001f00	      1875	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_34
0x4001f00	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1876	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_35
0x4001f05	          0x4889c5	                            mov rbp, rax	      1875	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_34
0x4001f08	      0xe800000000	                          call 0x4001f0d	      1876	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_35
0x4001f0d	      0x410fb65719	           movzx edx, byte [r15 + 0x19] 	      1736	expr.c	FUNCTION_18
0x4001f12	          0x4829c5	                            sub rbp, rax	      1876	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_35
0x4001f15	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      1731	expr.c	FUNCTION_18
0x4001f19	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      1877	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_36
0x4001f1e	          0x4889fe	                            mov rsi, rdi	      1734	expr.c	FUNCTION_18
0x4001f21	            0x89d0	                            mov eax, edx	      1736	expr.c	FUNCTION_18
0x4001f23	        0x32442459	               xor al, byte [rsp + 0x59]	      1736	expr.c	FUNCTION_18
0x4001f27	          0x4829ce	                            sub rsi, rcx	      1734	expr.c	FUNCTION_18
0x4001f2a	        0x49897710	             mov qword [r15 + 0x10], rsi	      1734	expr.c	FUNCTION_18
0x4001f2e	            0xd0e8	                               shr al, 1	      1736	expr.c	FUNCTION_18
0x4001f30	          0x83e001	                              and eax, 1	      1736	expr.c	FUNCTION_18
0x4001f33	          0x4839cf	                            cmp rdi, rcx	      1738	expr.c	FUNCTION_18	IF_1
0x4001f36	     0xf82bc050000	                            jb 0x40024f8	      1738	expr.c	FUNCTION_18	IF_1
0x4001f3c	          0x8d0c00	                    lea ecx, [rax + rax]	      1736	expr.c	FUNCTION_18
0x4001f3f	          0x83e2fd	                     and edx, 0xfffffffd	      1736	expr.c	FUNCTION_18
0x4001f42	             0x9ca	                             or edx, ecx	      1736	expr.c	FUNCTION_18
0x4001f44	        0x41885719	               mov byte [r15 + 0x19], dl	      1736	expr.c	FUNCTION_18
0x4001f48	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1878	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11	CALL_37
0x4001f4d	          0x4889f1	                            mov rcx, rsi	      1734	expr.c	FUNCTION_18
0x4001f50	          0x4829d1	                            sub rcx, rdx	      1734	expr.c	FUNCTION_18
0x4001f53	          0x4839d6	                            cmp rsi, rdx	      1738	expr.c	FUNCTION_18	IF_1
0x4001f56	        0x49894f10	             mov qword [r15 + 0x10], rcx	      1734	expr.c	FUNCTION_18
0x4001f5a	     0xf827b050000	                            jb 0x40024db	      1738	expr.c	FUNCTION_18	IF_1
0x4001f60	      0x410fb65719	           movzx edx, byte [r15 + 0x19] 	      1738	expr.c	FUNCTION_18	IF_1
0x4001f65	      0x488d740d00	                    lea rsi, [rbp + rcx]	      1718	expr.c	FUNCTION_17
0x4001f6a	        0x48c1ed3f	                           shr rbp, 0x3f	      1718	expr.c	FUNCTION_17
0x4001f6e	            0x31e8	                            xor eax, ebp	      1718	expr.c	FUNCTION_17
0x4001f70	          0x4839f1	                            cmp rcx, rsi	      1722	expr.c	FUNCTION_17	IF_1
0x4001f73	        0x49897710	             mov qword [r15 + 0x10], rsi	      1718	expr.c	FUNCTION_17
0x4001f77	            0x7603	                           jbe 0x4001f7c	      1722	expr.c	FUNCTION_17	IF_1
0x4001f79	          0x83f001	                              xor eax, 1	      1723	expr.c	FUNCTION_17	IF_1
0x4001f7c	          0x83e001	                              and eax, 1	      1723	expr.c	FUNCTION_17	IF_1
0x4001f7f	          0x83e2fd	                     and edx, 0xfffffffd	      1723	expr.c	FUNCTION_17	IF_1
0x4001f82	      0x41c6471802	                mov byte [r15 + 0x18], 2	      1880	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001f87	             0x1c0	                            add eax, eax	      1723	expr.c	FUNCTION_17	IF_1
0x4001f89	    0x49c707000000	                      mov qword [r15], 0	      1881	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001f90	             0x9d0	                             or eax, edx	      1723	expr.c	FUNCTION_17	IF_1
0x4001f92	        0x41884719	               mov byte [r15 + 0x19], al	      1723	expr.c	FUNCTION_17	IF_1
0x4001f96	      0xe995f7ffff	                           jmp 0x4001730	      1874	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001f9b	       0xf1f440000	                   nop dword [rax + rax]	      1874	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001fa0	          0x498b3f	                    mov rdi, qword [r15]	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001fa3	      0x48397c2440	            cmp qword [rsp + 0x40], rdi 	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001fa8	     0xf8422ffffff	                            je 0x4001ed0	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001fae	       0xfb6542458	           movzx edx, byte [rsp + 0x58] 	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001fb3	      0x410fb64718	           movzx eax, byte [r15 + 0x18] 	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001fb8	      0xe92cfcffff	                           jmp 0x4001be9	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001fbd	           0xf1f00	                         nop dword [rax]	      1870	expr.c	FUNCTION_19	WHILE_1	ELSE_5	IF_11
0x4001fc0	            0x3c05	                               cmp al, 5	      1884	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x4001fc2	     0xf84acf6ffff	                            je 0x4001674	      1884	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12
0x4001fc8	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      1731	expr.c	FUNCTION_18
0x4001fcc	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1887	expr.c	FUNCTION_19	WHILE_1	ELSE_6	IF_12	CALL_39
0x4001fd1	      0x410fb64f19	           movzx ecx, byte [r15 + 0x19] 	      1736	expr.c	FUNCTION_18
0x4001fd6	          0x4889f0	                            mov rax, rsi	      1734	expr.c	FUNCTION_18
0x4001fd9	          0x4829d0	                            sub rax, rdx	      1734	expr.c	FUNCTION_18
0x4001fdc	        0x49894710	             mov qword [r15 + 0x10], rax	      1734	expr.c	FUNCTION_18
0x4001fe0	            0x89c8	                            mov eax, ecx	      1736	expr.c	FUNCTION_18
0x4001fe2	        0x32442459	               xor al, byte [rsp + 0x59]	      1736	expr.c	FUNCTION_18
0x4001fe6	            0xd0e8	                               shr al, 1	      1736	expr.c	FUNCTION_18
0x4001fe8	          0x83e001	                              and eax, 1	      1736	expr.c	FUNCTION_18
0x4001feb	          0x4839d6	                            cmp rsi, rdx	      1738	expr.c	FUNCTION_18	IF_1
0x4001fee	            0x7303	                           jae 0x4001ff3	      1738	expr.c	FUNCTION_18	IF_1
0x4001ff0	          0x83f001	                              xor eax, 1	      1739	expr.c	FUNCTION_18	IF_1
0x4001ff3	          0x8d1400	                    lea edx, [rax + rax]	      1739	expr.c	FUNCTION_18	IF_1
0x4001ff6	            0x89c8	                            mov eax, ecx	      1739	expr.c	FUNCTION_18	IF_1
0x4001ff8	          0x83e0fd	                     and eax, 0xfffffffd	      1739	expr.c	FUNCTION_18	IF_1
0x4001ffb	             0x9d0	                             or eax, edx	      1739	expr.c	FUNCTION_18	IF_1
0x4001ffd	        0x41884719	               mov byte [r15 + 0x19], al	      1739	expr.c	FUNCTION_18	IF_1
0x4002001	      0xe9a2f6ffff	                           jmp 0x40016a8	      1739	expr.c	FUNCTION_18	IF_1
0x4002006	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1739	expr.c	FUNCTION_18	IF_1
0x4002010	      0x418078013d	                 cmp byte [r8 + 1], 0x3d	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x4002015	     0xf859ef7ffff	                           jne 0x40017b9	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x400201b	          0x83fd1d	                           cmp ebp, 0x1d	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x400201e	    0xc74424080200	                  mov dword [rsp + 8], 2	      1653	expr.c	FUNCTION_16	SWITCH_2
0x4002026	    0x41be15000000	                          mov r14d, 0x15	      1654	expr.c	FUNCTION_16	SWITCH_2
0x400202c	           0xf95c2	                                setne dl	      1654	expr.c	FUNCTION_16	SWITCH_2
0x400202f	      0xe9d4f5ffff	                           jmp 0x4001608	      1654	expr.c	FUNCTION_16	SWITCH_2
0x4002034	         0xf1f4000	                         nop dword [rax]	      1654	expr.c	FUNCTION_16	SWITCH_2
0x4002038	    0x468b1c8d0000	                  mov r11d, dword [r9*4]	      1613	expr.c	FUNCTION_16	SWITCH_2
0x4002040	          0x4585db	                         test r11d, r11d	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4002043	     0xf8447010000	                            je 0x4002190	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4002049	          0x83fd1d	                           cmp ebp, 0x1d	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x400204c	          0x4589de	                          mov r14d, r11d	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x400204f	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x4002057	           0xf95c2	                                setne dl	      1577	expr.c	FUNCTION_16
0x400205a	      0xe9a9f5ffff	                           jmp 0x4001608	      1577	expr.c	FUNCTION_16
0x400205f	              0x90	                                     nop	      1577	expr.c	FUNCTION_16
0x4002060	    0x468b348d0000	                  mov r14d, dword [r9*4]	      1629	expr.c	FUNCTION_16	SWITCH_2
0x4002068	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x4002070	          0x4585f6	                         test r14d, r14d	      1577	expr.c	FUNCTION_16
0x4002073	           0xf95c2	                                setne dl	      1577	expr.c	FUNCTION_16
0x4002076	          0x83fd1d	                           cmp ebp, 0x1d	      1577	expr.c	FUNCTION_16
0x4002079	           0xf95c0	                                setne al	      1577	expr.c	FUNCTION_16
0x400207c	            0x21c2	                            and edx, eax	      1577	expr.c	FUNCTION_16
0x400207e	      0xe985f5ffff	                           jmp 0x4001608	      1577	expr.c	FUNCTION_16
0x4002083	       0xf1f440000	                   nop dword [rax + rax]	      1577	expr.c	FUNCTION_16
0x4002088	      0x410fb64001	                movzx eax, byte [r8 + 1]	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400208d	          0x83fd1d	                           cmp ebp, 0x1d	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002090	           0xf95c2	                                setne dl	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002093	            0x3c3d	                            cmp al, 0x3d	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002095	     0xf845d010000	                            je 0x40021f8	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400209b	            0x3c3e	                            cmp al, 0x3e	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400209d	     0xf853d010000	                           jne 0x40021e0	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40020a3	    0xc74424080200	                  mov dword [rsp + 8], 2	      1668	expr.c	FUNCTION_16	SWITCH_2
0x40020ab	    0x41be0e000000	                           mov r14d, 0xe	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40020b1	      0xe952f5ffff	                           jmp 0x4001608	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40020b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40020c0	          0x83fd1d	                           cmp ebp, 0x1d	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40020c3	           0xf95c2	                                setne dl	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40020c6	      0x4180780126	                 cmp byte [r8 + 1], 0x26	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020cb	     0xf848f000000	                            je 0x4002160	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020d1	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x40020d9	    0x41be12000000	                          mov r14d, 0x12	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020df	      0xe924f5ffff	                           jmp 0x4001608	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020e4	         0xf1f4000	                         nop dword [rax]	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020e8	            0x85c0	                           test eax, eax	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020ea	        0x400f95c6	                               setne sil	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020ee	          0x83fd1d	                           cmp ebp, 0x1d	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020f1	           0xf95c2	                                setne dl	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020f4	            0x21f2	                            and edx, esi	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020f6	      0xe9c3fbffff	                           jmp 0x4001cbe	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x40020fb	       0xf1f440000	                   nop dword [rax + rax]	      1697	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x4002100	       0xfb6542437	           movzx edx, byte [rsp + 0x37] 	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002105	    0x488b05000000	            mov rax, qword [0x0400210c] 	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400210c	            0x8810	                      mov byte [rax], dl	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400210e	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002113	    0x4c8905000000	              mov qword [0x0400211a], r8	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400211a	      0xe98ff4ffff	                           jmp 0x40015ae	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400211f	              0x90	                                     nop	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002120	        0x498d5002	                       lea rdx, [r8 + 2]	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002124	    0x488915000000	            mov qword [0x0400212b], rdx 	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x400212b	      0x410fb64002	                movzx eax, byte [r8 + 2]	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002130	          0x4989d0	                             mov r8, rdx	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002133	      0xe96cf6ffff	                           jmp 0x40017a4	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002138	     0xf1f84000000	                   nop dword [rax + rax]	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002140	          0x83fd1d	                           cmp ebp, 0x1d	      1798	expr.c	FUNCTION_19	WHILE_1	IF_3	ELSE_1	CALL_11
0x4002143	    0xc74424080200	                  mov dword [rsp + 8], 2	      1680	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x400214b	    0x41be16000000	                          mov r14d, 0x16	      1681	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002151	           0xf95c2	                                setne dl	      1681	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002154	      0xe9aff4ffff	                           jmp 0x4001608	      1681	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002159	     0xf1f80000000	                         nop dword [rax]	      1681	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002160	    0xc74424080200	                  mov dword [rsp + 8], 2	      1699	expr.c	FUNCTION_16	SWITCH_2
0x4002168	    0x41be1b000000	                          mov r14d, 0x1b	      1700	expr.c	FUNCTION_16	SWITCH_2
0x400216e	      0xe995f4ffff	                           jmp 0x4001608	      1700	expr.c	FUNCTION_16	SWITCH_2
0x4002173	       0xf1f440000	                   nop dword [rax + rax]	      1700	expr.c	FUNCTION_16	SWITCH_2
0x4002178	    0xc74424080200	                  mov dword [rsp + 8], 2	      1692	expr.c	FUNCTION_16	SWITCH_2
0x4002180	    0x41be1c000000	                          mov r14d, 0x1c	      1693	expr.c	FUNCTION_16	SWITCH_2
0x4002186	      0xe97df4ffff	                           jmp 0x4001608	      1693	expr.c	FUNCTION_16	SWITCH_2
0x400218b	       0xf1f440000	                   nop dword [rax + rax]	      1693	expr.c	FUNCTION_16	SWITCH_2
0x4002190	            0x31d2	                            xor edx, edx	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4002192	            0x31ff	                            xor edi, edi	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4002194	      0xbe02000000	                              mov esi, 2	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4002199	      0x4c89442428	              mov qword [rsp + 0x28], r8	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x400219e	      0xe800000000	                          call 0x40021a3	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x40021a3	            0x85c0	                           test eax, eax	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x40021a5	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x40021ad	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x40021b2	            0x740d	                            je 0x40021c1	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x40021b4	    0x8b0d00000000	            mov ecx, dword [0x040021ba] 	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x40021ba	          0x4429c1	                            sub ecx, r8d	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x40021bd	        0x894c2408	                mov dword [rsp + 8], ecx	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x40021c1	            0x85c0	                           test eax, eax	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x40021c3	    0x4c8905000000	              mov qword [0x040021ca], r8	      1622	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x40021ca	          0x4189c6	                           mov r14d, eax	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x40021cd	        0x400f95c6	                               setne sil	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x40021d1	          0x83fd1d	                           cmp ebp, 0x1d	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x40021d4	           0xf95c2	                                setne dl	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x40021d7	            0x21f2	                            and edx, esi	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x40021d9	      0xe92af4ffff	                           jmp 0x4001608	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x40021de	            0x6690	                                     nop	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x40021e0	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x40021e8	    0x41be1a000000	                          mov r14d, 0x1a	      1660	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40021ee	      0xe915f4ffff	                           jmp 0x4001608	      1660	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40021f3	       0xf1f440000	                   nop dword [rax + rax]	      1660	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40021f8	    0xc74424080200	                  mov dword [rsp + 8], 2	      1668	expr.c	FUNCTION_16	SWITCH_2
0x4002200	    0x41be19000000	                          mov r14d, 0x19	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002206	      0xe9fdf3ffff	                           jmp 0x4001608	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400220b	       0xf1f440000	                   nop dword [rax + rax]	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002210	          0x83fd1d	                           cmp ebp, 0x1d	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002213	    0xc74424080200	                  mov dword [rsp + 8], 2	      1676	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x400221b	    0x41be11000000	                          mov r14d, 0x11	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002221	           0xf95c2	                                setne dl	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002224	      0xe9dff3ffff	                           jmp 0x4001608	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002229	     0xf1f80000000	                         nop dword [rax]	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002230	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1980	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002235	          0x83fd13	                           cmp ebp, 0x13	      1981	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	IF_18
0x4002238	        0x41886f18	              mov byte [r15 + 0x18], bpl	      1979	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x400223c	        0x49894708	                mov qword [r15 + 8], rax	      1980	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17
0x4002240	     0xf8583f8ffff	                           jne 0x4001ac9	      1981	expr.c	FUNCTION_19	WHILE_1	ELSE_9	IF_17	IF_18
0x4002246	      0x410fb64f19	           movzx ecx, byte [r15 + 0x19] 	      1720	expr.c	FUNCTION_17
0x400224b	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      1715	expr.c	FUNCTION_17
0x400224f	          0x4889f2	                            mov rdx, rsi	      1718	expr.c	FUNCTION_17
0x4002252	      0x4803542450	             add rdx, qword [rsp + 0x50]	      1718	expr.c	FUNCTION_17
0x4002257	            0x89c8	                            mov eax, ecx	      1720	expr.c	FUNCTION_17
0x4002259	        0x32442459	               xor al, byte [rsp + 0x59]	      1720	expr.c	FUNCTION_17
0x400225d	        0x49895710	             mov qword [r15 + 0x10], rdx	      1718	expr.c	FUNCTION_17
0x4002261	            0xd0e8	                               shr al, 1	      1720	expr.c	FUNCTION_17
0x4002263	          0x83e001	                              and eax, 1	      1720	expr.c	FUNCTION_17
0x4002266	          0x4839d6	                            cmp rsi, rdx	      1722	expr.c	FUNCTION_17	IF_1
0x4002269	     0xf8781fdffff	                            ja 0x4001ff0	      1722	expr.c	FUNCTION_17	IF_1
0x400226f	             0x1c0	                            add eax, eax	      1720	expr.c	FUNCTION_17
0x4002271	          0x83e1fd	                     and ecx, 0xfffffffd	      1720	expr.c	FUNCTION_17
0x4002274	             0x9c8	                             or eax, ecx	      1720	expr.c	FUNCTION_17
0x4002276	        0x41884719	               mov byte [r15 + 0x19], al	      1720	expr.c	FUNCTION_17
0x400227a	      0xe929f4ffff	                           jmp 0x40016a8	      1720	expr.c	FUNCTION_17
0x400227f	              0x90	                                     nop	      1720	expr.c	FUNCTION_17
0x4002280	    0xc74424080200	                  mov dword [rsp + 8], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x4002288	    0x41be0d000000	                           mov r14d, 0xd	      1637	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x400228e	      0xe975f3ffff	                           jmp 0x4001608	      1637	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002293	       0xf1f440000	                   nop dword [rax + rax]	      1637	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002298	          0x83fd1d	                           cmp ebp, 0x1d	      1637	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x400229b	    0xc74424080200	                  mov dword [rsp + 8], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x40022a3	    0x41be18000000	                          mov r14d, 0x18	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022a9	           0xf95c2	                                setne dl	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022ac	      0xe957f3ffff	                           jmp 0x4001608	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x40022b1	        0x4183fe26	                          cmp r14d, 0x26	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40022b5	     0xf84b9000000	                            je 0x4002374	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40022bb	        0x4183fe2b	                          cmp r14d, 0x2b	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40022bf	     0xf841e010000	                            je 0x40023e3	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40022c5	        0x4183fe21	                          cmp r14d, 0x21	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40022c9	            0x7526	                           jne 0x40022f1	      1610	expr.c	FUNCTION_16	SWITCH_2
0x40022cb	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022d1	            0x3c21	                            cmp al, 0x21	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022d3	     0xf8456010000	                            je 0x400242f	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022d9	      0xba10000000	                           mov edx, 0x10	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022de	      0xbd16000000	                           mov ebp, 0x16	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022e3	            0x3c3d	                            cmp al, 0x3d	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022e5	          0x4189d7	                           mov r15d, edx	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022e8	        0x440f44fd	                         cmove r15d, ebp	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022ec	      0xe94bf1ffff	                           jmp 0x400143c	      1672	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x40022f1	    0x428b2cbd0000	                  mov ebp, dword [r15*4]	      1613	expr.c	FUNCTION_16	SWITCH_2
0x40022f9	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x4002301	            0x85ed	                           test ebp, ebp	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4002303	          0x4189ef	                           mov r15d, ebp	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4002306	     0xf8564f2ffff	                           jne 0x4001570	      1615	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x400230c	            0x31d2	                            xor edx, edx	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x400230e	            0x31ff	                            xor edi, edi	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4002310	      0xbe02000000	                              mov esi, 2	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x4002315	      0xe800000000	                          call 0x400231a	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x400231a	            0x85c0	                           test eax, eax	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x400231c	            0x89c5	                            mov ebp, eax	      1619	expr.c	FUNCTION_16	SWITCH_2	IF_3	CALL_6
0x400231e	            0x740d	                            je 0x400232d	      1620	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4002320	    0x8b0500000000	            mov eax, dword [0x04002326] 	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4002326	          0x4429e0	                           sub eax, r12d	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x4002329	        0x89442408	                mov dword [rsp + 8], eax	      1621	expr.c	FUNCTION_16	SWITCH_2	IF_3	IF_4
0x400232d	    0x4c8925000000	            mov qword [0x04002334], r12 	      1622	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4002334	      0xe92cf2ffff	                           jmp 0x4001565	      1622	expr.c	FUNCTION_16	SWITCH_2	IF_3
0x4002339	      0xba05000000	                              mov edx, 5	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x400233e	      0xbe00000000	                              mov esi, 0	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x4002343	            0x31ff	                            xor edi, edi	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x4002345	      0xe800000000	                          call 0x400234a	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x400234a	          0x4889c7	                            mov rdi, rax	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x400234d	            0x31c0	                            xor eax, eax	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x400234f	      0xbb01000000	                              mov ebx, 1	      1906	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15
0x4002354	      0xe800000000	                          call 0x4002359	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x4002359	      0xe95ff5ffff	                           jmp 0x40018bd	      1905	expr.c	FUNCTION_19	WHILE_1	ELSE_8	IF_14	IF_15	CALL_42
0x400235e	          0x83f001	                              xor eax, 1	      1739	expr.c	FUNCTION_18	IF_1
0x4002361	          0x8d1400	                    lea edx, [rax + rax]	      1739	expr.c	FUNCTION_18	IF_1
0x4002364	            0x89c8	                            mov eax, ecx	      1739	expr.c	FUNCTION_18	IF_1
0x4002366	          0x83e0fd	                     and eax, 0xfffffffd	      1739	expr.c	FUNCTION_18	IF_1
0x4002369	             0x9d0	                             or eax, edx	      1739	expr.c	FUNCTION_18	IF_1
0x400236b	        0x41884719	               mov byte [r15 + 0x19], al	      1739	expr.c	FUNCTION_18	IF_1
0x400236f	      0xe995f7ffff	                           jmp 0x4001b09	      1739	expr.c	FUNCTION_18	IF_1
0x4002374	          0x4531ff	                          xor r15d, r15d	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x4002377	    0x41807c240126	                cmp byte [r12 + 1], 0x26	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x400237d	        0x410f94c7	                               sete r15b	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x4002381	           0xf94c0	                                 sete al	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x4002384	      0x478d7cff12	         lea r15d, [r15 + r15*8 + 0x12] 	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x4002389	           0xfb6c0	                           movzx eax, al	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x400238c	          0x83c001	                              add eax, 1	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x400238f	        0x89442408	                mov dword [rsp + 8], eax	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x4002393	          0x4489fd	                           mov ebp, r15d	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x4002396	      0xe9d5f1ffff	                           jmp 0x4001570	      1696	expr.c	FUNCTION_16	SWITCH_2	IF_8
0x400239b	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40023a1	            0x3c3d	                            cmp al, 0x3d	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40023a3	            0x7472	                            je 0x4002417	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40023a5	            0x3c3e	                            cmp al, 0x3e	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40023a7	     0xf85a4000000	                           jne 0x4002451	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40023ad	      0xbd0e000000	                            mov ebp, 0xe	      1662	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x40023b2	    0xc74424080200	                  mov dword [rsp + 8], 2	      1577	expr.c	FUNCTION_16
0x40023ba	      0xe9aef1ffff	                           jmp 0x400156d	      1577	expr.c	FUNCTION_16
0x40023bf	    0x41807c24013d	                cmp byte [r12 + 1], 0x3d	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x40023c5	     0xf8590f0ffff	                           jne 0x400145b	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x40023cb	    0x41bf15000000	                          mov r15d, 0x15	      1650	expr.c	FUNCTION_16	SWITCH_2	IF_5
0x40023d1	    0xc74424080200	                  mov dword [rsp + 8], 2	      1653	expr.c	FUNCTION_16	SWITCH_2
0x40023d9	      0xbd15000000	                           mov ebp, 0x15	      1654	expr.c	FUNCTION_16	SWITCH_2
0x40023de	      0xe98df1ffff	                           jmp 0x4001570	      1654	expr.c	FUNCTION_16	SWITCH_2
0x40023e3	    0x428b2cbd0000	                  mov ebp, dword [r15*4]	      1629	expr.c	FUNCTION_16	SWITCH_2
0x40023eb	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x40023f3	      0xe96df1ffff	                           jmp 0x4001565	      1577	expr.c	FUNCTION_16
0x40023f8	       0xfb6542438	           movzx edx, byte [rsp + 0x38] 	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x40023fd	    0x488b05000000	            mov rax, qword [0x04002404] 	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002404	            0x8810	                      mov byte [rax], dl	      1592	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002406	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x400240b	    0x4c8925000000	            mov qword [0x04002412], r12 	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002412	      0xe9daefffff	                           jmp 0x40013f1	      1593	expr.c	FUNCTION_16	IF_2	SWITCH_1
0x4002417	    0x41bf19000000	                          mov r15d, 0x19	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400241d	    0xc74424080200	                  mov dword [rsp + 8], 2	      1668	expr.c	FUNCTION_16	SWITCH_2
0x4002425	      0xbd19000000	                           mov ebp, 0x19	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400242a	      0xe941f1ffff	                           jmp 0x4001570	      1665	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x400242f	      0xbd11000000	                           mov ebp, 0x11	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002434	      0xe979ffffff	                           jmp 0x40023b2	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x4002439	    0x41bf18000000	                          mov r15d, 0x18	      1677	expr.c	FUNCTION_16	SWITCH_2	SWITCH_5
0x400243f	    0xc74424080200	                  mov dword [rsp + 8], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x4002447	      0xbd18000000	                           mov ebp, 0x18	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x400244c	      0xe91ff1ffff	                           jmp 0x4001570	      1643	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002451	    0x41bf1a000000	                          mov r15d, 0x1a	      1657	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002457	    0xc74424080100	                  mov dword [rsp + 8], 1	      1577	expr.c	FUNCTION_16
0x400245f	      0xbd1a000000	                           mov ebp, 0x1a	      1660	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002464	      0xe907f1ffff	                           jmp 0x4001570	      1660	expr.c	FUNCTION_16	SWITCH_2	SWITCH_4
0x4002469	      0xbd0d000000	                            mov ebp, 0xd	      1637	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x400246e	      0xe93fffffff	                           jmp 0x40023b2	      1637	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002473	    0x41bf16000000	                          mov r15d, 0x16	      1632	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002479	    0xc74424080200	                  mov dword [rsp + 8], 2	      1646	expr.c	FUNCTION_16	SWITCH_2
0x4002481	      0xbd16000000	                           mov ebp, 0x16	      1640	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x4002486	      0xe9e5f0ffff	                           jmp 0x4001570	      1640	expr.c	FUNCTION_16	SWITCH_2	SWITCH_3
0x400248b	      0xba00000000	                              mov edx, 0	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x4002490	      0xbe12070000	                          mov esi, 0x712	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x4002495	      0xbf00000000	                              mov edi, 0	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x400249a	      0xe800000000	                          call 0x400249f	      1810	expr.c	FUNCTION_19	WHILE_1	CALL_16
0x400249f	      0xba00000000	                              mov edx, 0	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x40024a4	      0xbe0e070000	                          mov esi, 0x70e	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x40024a9	      0xbf00000000	                              mov edi, 0	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x40024ae	      0xe800000000	                          call 0x40024b3	      1806	expr.c	FUNCTION_19	WHILE_1	CALL_14
0x40024b3	      0xba00000000	                              mov edx, 0	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40024b8	      0xbefd060000	                          mov esi, 0x6fd	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40024bd	      0xbf00000000	                              mov edi, 0	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40024c2	      0xe800000000	                          call 0x40024c7	      1789	expr.c	FUNCTION_19	WHILE_1	CALL_9
0x40024c7	      0xba00000000	                              mov edx, 0	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x40024cc	      0xbe0d070000	                          mov esi, 0x70d	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x40024d1	      0xbf00000000	                              mov edi, 0	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x40024d6	      0xe800000000	                          call 0x40024db	      1804	expr.c	FUNCTION_19	WHILE_1	CALL_13
0x40024db	      0x410fb65719	           movzx edx, byte [r15 + 0x19] 	      1739	expr.c	FUNCTION_18	IF_1
0x40024e0	          0x83f001	                              xor eax, 1	      1739	expr.c	FUNCTION_18	IF_1
0x40024e3	            0x89c6	                            mov esi, eax	      1739	expr.c	FUNCTION_18	IF_1
0x40024e5	          0x83e601	                              and esi, 1	      1739	expr.c	FUNCTION_18	IF_1
0x40024e8	             0x1f6	                            add esi, esi	      1739	expr.c	FUNCTION_18	IF_1
0x40024ea	          0x83e2fd	                     and edx, 0xfffffffd	      1739	expr.c	FUNCTION_18	IF_1
0x40024ed	             0x9f2	                             or edx, esi	      1739	expr.c	FUNCTION_18	IF_1
0x40024ef	        0x41885719	               mov byte [r15 + 0x19], dl	      1739	expr.c	FUNCTION_18	IF_1
0x40024f3	      0xe96dfaffff	                           jmp 0x4001f65	      1739	expr.c	FUNCTION_18	IF_1
0x40024f8	          0x83f001	                              xor eax, 1	      1739	expr.c	FUNCTION_18	IF_1
0x40024fb	          0x83e2fd	                     and edx, 0xfffffffd	      1739	expr.c	FUNCTION_18	IF_1
0x40024fe	            0x89c1	                            mov ecx, eax	      1739	expr.c	FUNCTION_18	IF_1
0x4002500	          0x83e101	                              and ecx, 1	      1739	expr.c	FUNCTION_18	IF_1
0x4002503	             0x1c9	                            add ecx, ecx	      1739	expr.c	FUNCTION_18	IF_1
0x4002505	             0x9ca	                             or edx, ecx	      1739	expr.c	FUNCTION_18	IF_1
0x4002507	        0x41885719	               mov byte [r15 + 0x19], dl	      1739	expr.c	FUNCTION_18	IF_1
0x400250b	      0xe938faffff	                           jmp 0x4001f48	      1739	expr.c	FUNCTION_18	IF_1
0x4002510	      0xba00000000	                              mov edx, 0	      1756	expr.c	FUNCTION_19	CALL_1
0x4002515	      0xbedc060000	                          mov esi, 0x6dc	      1756	expr.c	FUNCTION_19	CALL_1
0x400251a	      0xbf00000000	                              mov edi, 0	      1756	expr.c	FUNCTION_19	CALL_1
0x400251f	      0xe800000000	                          call 0x4002524	      1756	expr.c	FUNCTION_19	CALL_1
0x4002524	      0xe800000000	                          call 0x4002529	      2046	expr.c	FUNCTION_19
0x4002529	            0x3c05	                               cmp al, 5	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x400252b	     0xf8443f1ffff	                            je 0x4001674	      1854	expr.c	FUNCTION_19	WHILE_1	ELSE_4	IF_10
0x4002531	      0x410fb64f19	           movzx ecx, byte [r15 + 0x19] 	      1720	expr.c	FUNCTION_17
0x4002536	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      1715	expr.c	FUNCTION_17
0x400253a	          0x4889f2	                            mov rdx, rsi	      1718	expr.c	FUNCTION_17
0x400253d	      0x4803542450	             add rdx, qword [rsp + 0x50]	      1718	expr.c	FUNCTION_17
0x4002542	            0x89c8	                            mov eax, ecx	      1720	expr.c	FUNCTION_17
0x4002544	        0x32442459	               xor al, byte [rsp + 0x59]	      1720	expr.c	FUNCTION_17
0x4002548	        0x49895710	             mov qword [r15 + 0x10], rdx	      1718	expr.c	FUNCTION_17
0x400254c	            0xd0e8	                               shr al, 1	      1720	expr.c	FUNCTION_17
0x400254e	          0x83e001	                              and eax, 1	      1720	expr.c	FUNCTION_17
0x4002551	          0x4839d6	                            cmp rsi, rdx	      1722	expr.c	FUNCTION_17	IF_1
0x4002554	     0xf8796faffff	                            ja 0x4001ff0	      1722	expr.c	FUNCTION_17	IF_1
0x400255a	      0xe987f8ffff	                           jmp 0x4001de6	      1722	expr.c	FUNCTION_17	IF_1
0x400255f	      0xba00000000	                              mov edx, 0	      1768	expr.c	FUNCTION_19	CALL_4
0x4002564	      0xbee8060000	                          mov esi, 0x6e8	      1768	expr.c	FUNCTION_19	CALL_4
0x4002569	      0xbf00000000	                              mov edi, 0	      1768	expr.c	FUNCTION_19	CALL_4
0x400256e	      0xe800000000	                          call 0x4002573	      1768	expr.c	FUNCTION_19	CALL_4
