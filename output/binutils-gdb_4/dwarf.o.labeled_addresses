display_debug_info	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:CALL,1:functions,0	4
0x400fb40	          0x8b5738	            mov edx, dword [rdi + 0x38] 	      6281	dwarf.c	FUNCTION_59	CALL_1
0x400fb43	          0x4531c0	                            xor r8d, r8d	      6281	dwarf.c	FUNCTION_59	CALL_1
0x400fb46	            0x31c9	                            xor ecx, ecx	      6281	dwarf.c	FUNCTION_59	CALL_1
0x400fb48	      0xe963e7ffff	              jmp sym.process_debug_info	      6281	dwarf.c	FUNCTION_59	CALL_1
display_debug_not_supported	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:CALL,1:functions,0	14
0x40000c0	              0x53	                                push rbx	      9478	dwarf.c	FUNCTION_95
0x40000c1	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000c5	      0xba05000000	                              mov edx, 5	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000ca	      0xbe00000000	                              mov esi, 0	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000cf	            0x31ff	                            xor edi, edi	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000d1	      0xe800000000	                          call 0x40000d6	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000d6	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x40000d9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40000dc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40000e1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40000e3	      0xe800000000	                          call 0x40000e8	       104	stdio2.h	CALL_16
0x40000e8	      0xb801000000	                              mov eax, 1	      9483	dwarf.c	FUNCTION_95
0x40000ed	              0x5b	                                 pop rbx	      9483	dwarf.c	FUNCTION_95
0x40000ee	              0xc3	                                     ret	      9483	dwarf.c	FUNCTION_95
display_debug_gnu_pubnames	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:CALL,1:functions,0	458
0x4013df0	            0x4157	                                push r15	      4900	dwarf.c	FUNCTION_45
0x4013df2	            0x4156	                                push r14	      4900	dwarf.c	FUNCTION_45
0x4013df4	          0x4989fe	                            mov r14, rdi	      4900	dwarf.c	FUNCTION_45
0x4013df7	            0x4155	                                push r13	      4900	dwarf.c	FUNCTION_45
0x4013df9	            0x4154	                                push r12	      4900	dwarf.c	FUNCTION_45
0x4013dfb	              0x55	                                push rbp	      4900	dwarf.c	FUNCTION_45
0x4013dfc	              0x53	                                push rbx	      4900	dwarf.c	FUNCTION_45
0x4013dfd	        0x4883ec68	                           sub rsp, 0x68	      4900	dwarf.c	FUNCTION_45
0x4013e01	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      4900	dwarf.c	FUNCTION_45
0x4013e0a	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      4900	dwarf.c	FUNCTION_45
0x4013e0f	            0x31c9	                            xor ecx, ecx	      4900	dwarf.c	FUNCTION_45
0x4013e11	        0x488b4f20	            mov rcx, qword [rdi + 0x20] 	      4761	dwarf.c	FUNCTION_43
0x4013e15	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4900	dwarf.c	FUNCTION_45
0x4013e1a	          0x4889cb	                            mov rbx, rcx	      4762	dwarf.c	FUNCTION_43
0x4013e1d	        0x48035f30	             add rbx, qword [rdi + 0x30]	      4762	dwarf.c	FUNCTION_43
0x4013e21	          0x4889f7	                            mov rdi, rsi	      4766	dwarf.c	FUNCTION_43	CALL_1
0x4013e24	      0x48894c2408	                mov qword [rsp + 8], rcx	      4761	dwarf.c	FUNCTION_43
0x4013e29	      0xe822bdffff	                call sym.load_debug_info	      4766	dwarf.c	FUNCTION_43	CALL_1
0x4013e2e	    0x448b05000000	            mov r8d, dword [0x04013e35] 	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x4013e35	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x4013e39	      0xba05000000	                              mov edx, 5	      2748	dwarf.c	FUNCTION_33	ELSE_2	IF_3	CALL_3
0x4013e3e	          0x4585c0	                           test r8d, r8d	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x4013e41	            0x742d	                            je 0x4013e70	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x4013e43	        0x4d8b6618	            mov r12, qword [r14 + 0x18] 	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x4013e47	          0x4d85e4	                           test r12, r12	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x4013e4a	            0x7424	                            je 0x4013e70	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x4013e4c	            0x31ff	                            xor edi, edi	      2748	dwarf.c	FUNCTION_33	ELSE_2	IF_3	CALL_3
0x4013e4e	      0xbe00000000	                              mov esi, 0	      2748	dwarf.c	FUNCTION_33	ELSE_2	IF_3	CALL_3
0x4013e53	      0xe800000000	                          call 0x4013e58	      2748	dwarf.c	FUNCTION_33	ELSE_2	IF_3	CALL_3
0x4013e58	          0x4c89e1	                            mov rcx, r12	       104	stdio2.h	CALL_16
0x4013e5b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4013e5e	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4013e61	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4013e66	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4013e68	      0xe800000000	                          call 0x4013e6d	       104	stdio2.h	CALL_16
0x4013e6d	            0xeb1f	                           jmp 0x4013e8e	       104	stdio2.h	CALL_16
0x4013e6f	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x4013e70	      0xbe00000000	                              mov esi, 0	      2751	dwarf.c	FUNCTION_33	ELSE_2	CALL_4
0x4013e75	            0x31ff	                            xor edi, edi	      2751	dwarf.c	FUNCTION_33	ELSE_2	CALL_4
0x4013e77	      0xe800000000	                          call 0x4013e7c	      2751	dwarf.c	FUNCTION_33	ELSE_2	CALL_4
0x4013e7c	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4013e7f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4013e82	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4013e87	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4013e89	      0xe800000000	                          call 0x4013e8e	       104	stdio2.h	CALL_16
0x4013e8e	      0x48395c2408	                cmp qword [rsp + 8], rbx	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x4013e93	     0xf831e020000	                           jae 0x40140b7	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x4013e99	     0xf1f80000000	                         nop dword [rax]	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x4013ea0	      0x488b442408	                mov rax, qword [rsp + 8]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013ea5	        0x4c8d6004	                      lea r12, [rax + 4]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013ea9	          0x4c39e3	                            cmp rbx, r12	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013eac	     0xf873e020000	                            ja 0x40140f0	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013eb2	          0x4839c3	                            cmp rbx, rax	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013eb5	     0xf862d050000	                           jbe 0x40143e8	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013ebb	          0x4889de	                            mov rsi, rbx	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013ebe	          0x4829c6	                            sub rsi, rax	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013ec1	          0x8d46ff	                      lea eax, [rsi - 1]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013ec4	          0x83f807	                              cmp eax, 7	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013ec7	     0xf865e060000	                           jbe 0x401452b	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013ecd	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x4013ed2	    0xc74424200400	               mov dword [rsp + 0x20], 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x4013eda	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013edf	          0x4d89e5	                            mov r13, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013ee2	          0x4c89e0	                            mov rax, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013ee5	            0x31ed	                            xor ebp, ebp	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013ee7	        0x4c2b6f20	             sub r13, qword [rdi + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013eeb	          0x4c89ea	                            mov rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013eee	        0x48395730	            cmp qword [rdi + 0x30], rdx 	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013ef2	     0xf8272020000	                            jb 0x401416a	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013ef8	      0x4d8d7c2402	                      lea r15, [r12 + 2]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013efd	        0x498d0c2c	                    lea rcx, [r12 + rbp]	      4801	dwarf.c	FUNCTION_43	WHILE_1
0x4013f01	          0x4c39fb	                            cmp rbx, r15	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f04	      0x48894c2408	                mov qword [rsp + 8], rcx	      4801	dwarf.c	FUNCTION_43	WHILE_1
0x4013f09	     0xf8701030000	                            ja 0x4014210	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f0f	          0x4c39e3	                            cmp rbx, r12	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f12	            0x7612	                           jbe 0x4013f26	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f14	          0x4889de	                            mov rsi, rbx	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f17	          0x4829c6	                            sub rsi, rax	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f1a	          0x8d46ff	                      lea eax, [rsi - 1]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f1d	          0x83f807	                              cmp eax, 7	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f20	     0xf86ef020000	                           jbe 0x4014215	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013f26	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f2b	        0x4f8d0437	                     lea r8, [r15 + r14]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f2f	          0x4c39c3	                             cmp rbx, r8	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f32	     0xf86e0040000	                           jbe 0x4014418	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f38	      0xb8feffffff	                     mov eax, 0xfffffffe	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f3d	          0x4489f6	                           mov esi, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f40	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f48	      0x6689442426	               mov word [rsp + 0x26], ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f4d	          0x8d46ff	                      lea eax, [rsi - 1]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f50	          0x4531ed	                          xor r13d, r13d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f53	          0x83f807	                              cmp eax, 7	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f56	            0x7716	                            ja 0x4013f6e	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f58	      0x4c89442428	              mov qword [rsp + 0x28], r8	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f5d	          0x4c89ff	                            mov rdi, r15	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f60	    0xff1500000000	                 call qword [0x04013f66]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f66	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f6b	          0x4989c5	                            mov r13, rax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f6e	    0x8b3500000000	            mov esi, dword [0x04013f74] 	      4807	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013f74	          0x8d46ff	                      lea eax, [rsi - 1]	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013f77	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013f7a	            0x7758	                            ja 0x4013fd4	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013f7c	    0x488b05000000	            mov rax, qword [0x04013f83] 	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013f83	            0x31d2	                            xor edx, edx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f85	        0x4883c010	                           add rax, 0x10	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f89	     0xf1f80000000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013f90	          0x4c3928	                    cmp qword [rax], r13	      4730	dwarf.c	FUNCTION_41	FOR_1	IF_2
0x4013f93	            0x743f	                            je 0x4013fd4	      4730	dwarf.c	FUNCTION_41	FOR_1	IF_2
0x4013f95	          0x83c201	                              add edx, 1	      4729	dwarf.c	FUNCTION_41	FOR_1
0x4013f98	        0x4883c068	                           add rax, 0x68	      4729	dwarf.c	FUNCTION_41	FOR_1
0x4013f9c	            0x39f2	                            cmp edx, esi	      4729	dwarf.c	FUNCTION_41	FOR_1
0x4013f9e	            0x72f0	                            jb 0x4013f90	      4729	dwarf.c	FUNCTION_41	FOR_1
0x4013fa0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fa5	      0xba05000000	                              mov edx, 5	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013faa	      0xbe00000000	                              mov esi, 0	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013faf	            0x31ff	                            xor edi, edi	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fb1	      0x4c89442428	              mov qword [rsp + 0x28], r8	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fb6	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fba	      0xe800000000	                          call 0x4013fbf	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fbf	          0x4c89ee	                            mov rsi, r13	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fc2	          0x4889c7	                            mov rdi, rax	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fc5	            0x31c0	                            xor eax, eax	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fc7	          0x4c89fa	                            mov rdx, r15	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fca	      0xe800000000	                          call 0x4013fcf	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fcf	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013fd4	        0x4f8d3c30	                     lea r15, [r8 + r14]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013fd8	          0x4c39fb	                            cmp rbx, r15	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013fdb	     0xf8777020000	                            ja 0x4014258	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013fe1	          0x4531e4	                          xor r12d, r12d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013fe4	          0x4c39c3	                             cmp rbx, r8	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013fe7	            0x761c	                           jbe 0x4014005	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013fe9	            0x89de	                            mov esi, ebx	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013feb	          0x4429c6	                            sub esi, r8d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013fee	          0x8d46ff	                      lea eax, [rsi - 1]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013ff1	          0x4531e4	                          xor r12d, r12d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013ff4	          0x83f807	                              cmp eax, 7	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013ff7	            0x770c	                            ja 0x4014005	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013ff9	          0x4c89c7	                             mov rdi, r8	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013ffc	    0xff1500000000	                 call qword [0x04014002]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4014002	          0x4989c4	                            mov r12, rax	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4014005	            0x31ff	                            xor edi, edi	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x4014007	      0xba05000000	                              mov edx, 5	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x401400c	      0xbe00000000	                              mov esi, 0	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x4014011	      0xe800000000	                          call 0x4014016	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x4014016	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4014019	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x401401c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014021	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014023	      0xe800000000	                          call 0x4014028	       104	stdio2.h	CALL_16
0x4014028	            0x31ff	                            xor edi, edi	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x401402a	      0xba05000000	                              mov edx, 5	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x401402f	      0xbe00000000	                              mov esi, 0	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x4014034	      0xe800000000	                          call 0x4014039	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x4014039	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x401403d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014040	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014045	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014047	      0xe800000000	                          call 0x401404c	       104	stdio2.h	CALL_16
0x401404c	            0x31ff	                            xor edi, edi	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x401404e	      0xba05000000	                              mov edx, 5	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x4014053	      0xbe00000000	                              mov esi, 0	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x4014058	      0xe800000000	                          call 0x401405d	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x401405d	          0x4c89ea	                            mov rdx, r13	       104	stdio2.h	CALL_16
0x4014060	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014063	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014068	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401406a	      0xe800000000	                          call 0x401406f	       104	stdio2.h	CALL_16
0x401406f	            0x31ff	                            xor edi, edi	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x4014071	      0xba05000000	                              mov edx, 5	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x4014076	      0xbe00000000	                              mov esi, 0	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x401407b	      0xe800000000	                          call 0x4014080	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x4014080	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4014083	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014086	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x401408b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401408d	      0xe800000000	                          call 0x4014092	       104	stdio2.h	CALL_16
0x4014092	    0x66837c242601	                cmp word [rsp + 0x26], 1	      4823	dwarf.c	FUNCTION_43	WHILE_1	IF_4
0x4014098	     0xf86ca010000	                           jbe 0x4014268	      4823	dwarf.c	FUNCTION_43	WHILE_1	IF_4
0x401409e	    0x8b3500000000	            mov esi, dword [0x040140a4] 	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x40140a4	            0x85f6	                           test esi, esi	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x40140a6	     0xf84e4030000	                            je 0x4014490	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x40140ac	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x40140b1	     0xf87e9fdffff	                            ja 0x4013ea0	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x40140b7	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40140bc	      0xe800000000	                          call 0x40140c1	       104	stdio2.h	CALL_16
0x40140c1	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      4902	dwarf.c	FUNCTION_45
0x40140c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4902	dwarf.c	FUNCTION_45
0x40140cf	      0xb801000000	                              mov eax, 1	      4902	dwarf.c	FUNCTION_45
0x40140d4	     0xf8562040000	                           jne 0x401453c	      4902	dwarf.c	FUNCTION_45
0x40140da	        0x4883c468	                           add rsp, 0x68	      4902	dwarf.c	FUNCTION_45
0x40140de	              0x5b	                                 pop rbx	      4902	dwarf.c	FUNCTION_45
0x40140df	              0x5d	                                 pop rbp	      4902	dwarf.c	FUNCTION_45
0x40140e0	            0x415c	                                 pop r12	      4902	dwarf.c	FUNCTION_45
0x40140e2	            0x415d	                                 pop r13	      4902	dwarf.c	FUNCTION_45
0x40140e4	            0x415e	                                 pop r14	      4902	dwarf.c	FUNCTION_45
0x40140e6	            0x415f	                                 pop r15	      4902	dwarf.c	FUNCTION_45
0x40140e8	              0xc3	                                     ret	      4902	dwarf.c	FUNCTION_45
0x40140e9	     0xf1f80000000	                         nop dword [rax]	      4902	dwarf.c	FUNCTION_45
0x40140f0	      0xbe04000000	                              mov esi, 4	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x40140f5	          0x4989c5	                            mov r13, rax	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x40140f8	          0x4c89ef	                            mov rdi, r13	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x40140fb	    0xff1500000000	                 call qword [0x04014101]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4014101	          0x4889c5	                            mov rbp, rax	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4014104	      0xb8ffffffff	                     mov eax, 0xffffffff	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014109	          0x4839c5	                            cmp rbp, rax	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401410c	     0xf8546030000	                           jne 0x4014458	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014112	        0x4983c50c	                            add r13, 0xc	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014116	          0x4c39eb	                            cmp rbx, r13	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014119	     0xf87a1030000	                            ja 0x40144c0	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401411f	          0x4c39e3	                            cmp rbx, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014122	     0xf86e0030000	                           jbe 0x4014508	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014128	          0x4889de	                            mov rsi, rbx	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401412b	          0x4c29e6	                            sub rsi, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401412e	          0x8d46ff	                      lea eax, [rsi - 1]	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014131	          0x83f807	                              cmp eax, 7	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014134	     0xf868b030000	                           jbe 0x40144c5	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401413a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x401413f	          0x4c89e8	                            mov rax, r13	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4014142	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4014147	            0x31ed	                            xor ebp, ebp	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014149	          0x4989c4	                            mov r12, rax	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x401414c	    0xc74424200800	               mov dword [rsp + 0x20], 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014154	        0x4c2b6920	             sub r13, qword [rcx + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4014158	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401415d	          0x4c89ea	                            mov rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4014160	        0x48395730	            cmp qword [rdi + 0x30], rdx 	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4014164	     0xf838efdffff	                           jae 0x4013ef8	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x401416a	          0x4189ce	                           mov r14d, ecx	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x401416d	    0x48631d000000	         movsxd rbx, dword [0x04014174] 	       217	dwarf.c	FUNCTION_3
0x4014174	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4014179	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x401417f	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4014185	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x401418a	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_112	CALL_1
0x401418f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4014194	          0x4889d8	                            mov rax, rbx	       217	dwarf.c	FUNCTION_3
0x4014197	        0x48c1e306	                              shl rbx, 6	       217	dwarf.c	FUNCTION_3
0x401419b	          0x83c001	                              add eax, 1	       218	dwarf.c	FUNCTION_3	CALL_1
0x401419e	    0x4881c3000000	                              add rbx, 0	       217	dwarf.c	FUNCTION_3
0x40141a5	          0x83e00f	                            and eax, 0xf	       218	dwarf.c	FUNCTION_3	CALL_1
0x40141a8	    0x890500000000	            mov dword [0x040141ae], eax 	       218	dwarf.c	FUNCTION_3	CALL_1
0x40141ae	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x40141b0	      0xe800000000	                          call 0x40141b5	        33	stdio2.h	FUNCTION_112	CALL_1
0x40141b5	      0x4c8d442430	                    lea r8, [rsp + 0x30]	        64	stdio2.h	FUNCTION_114	CALL_1
0x40141ba	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_114	CALL_1
0x40141bd	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x40141c2	          0x4889df	                            mov rdi, rbx	        64	stdio2.h	FUNCTION_114	CALL_1
0x40141c5	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x40141ca	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x40141cf	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x40141d1	      0xe800000000	                          call 0x40141d6	        64	stdio2.h	FUNCTION_114	CALL_1
0x40141d6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141db	            0x31ff	                            xor edi, edi	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141dd	      0xba05000000	                              mov edx, 5	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141e2	      0xbe00000000	                              mov esi, 0	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141e7	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141eb	      0xe800000000	                          call 0x40141f0	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141f0	          0x4c89ea	                            mov rdx, r13	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141f3	          0x4889c7	                            mov rdi, rax	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141f6	          0x4889d9	                            mov rcx, rbx	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141f9	          0x4c29f2	                            sub rdx, r14	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141fc	          0x4889ee	                            mov rsi, rbp	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x40141ff	            0x31c0	                            xor eax, eax	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4014201	      0xe800000000	                          call 0x4014206	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4014206	      0xe9acfeffff	                           jmp 0x40140b7	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x401420b	       0xf1f440000	                   nop dword [rax + rax]	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4014210	      0xbe02000000	                              mov esi, 2	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4014215	          0x4c89e7	                            mov rdi, r12	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4014218	    0xff1500000000	                 call qword [0x0401421e]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x401421e	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014223	           0xfb7c8	                           movzx ecx, ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014226	          0x83e802	                              sub eax, 2	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014229	        0x894c2410	             mov dword [rsp + 0x10], ecx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401422d	      0x6689442426	               mov word [rsp + 0x26], ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014232	        0x4f8d0437	                     lea r8, [r15 + r14]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014236	          0x4c39c3	                             cmp rbx, r8	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014239	     0xf8709020000	                            ja 0x4014448	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401423f	          0x4c39fb	                            cmp rbx, r15	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014242	     0xf86e2010000	                           jbe 0x401442a	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014248	            0x89de	                            mov esi, ebx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401424a	          0x4429fe	                           sub esi, r15d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401424d	      0xe9fbfcffff	                           jmp 0x4013f4d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014252	    0x660f1f440000	                    nop word [rax + rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014258	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401425c	      0xe98dfdffff	                           jmp 0x4013fee	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4014261	     0xf1f80000000	                         nop dword [rax]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4014268	            0x31ff	                            xor edi, edi	      4837	dwarf.c	FUNCTION_43	WHILE_1	CALL_15
0x401426a	      0xba05000000	                              mov edx, 5	      4837	dwarf.c	FUNCTION_43	WHILE_1	CALL_15
0x401426f	      0xbe00000000	                              mov esi, 0	      4837	dwarf.c	FUNCTION_43	WHILE_1	CALL_15
0x4014274	      0xe800000000	                          call 0x4014279	      4837	dwarf.c	FUNCTION_43	WHILE_1	CALL_15
0x4014279	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x401427e	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014281	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014283	      0xe800000000	                          call 0x4014288	       104	stdio2.h	CALL_16
0x4014288	      0xe9cf000000	                           jmp 0x401435c	       104	stdio2.h	CALL_16
0x401428d	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4014290	          0x4c39fb	                            cmp rbx, r15	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4014293	     0xf8613feffff	                           jbe 0x40140ac	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4014299	            0x89de	                            mov esi, ebx	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x401429b	          0x4429fe	                           sub esi, r15d	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x401429e	          0x8d46ff	                      lea eax, [rsi - 1]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142a1	          0x83f807	                              cmp eax, 7	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142a4	     0xf8702feffff	                            ja 0x40140ac	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142aa	          0x4c89ff	                            mov rdi, r15	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142ad	    0xff1500000000	                 call qword [0x040142b3]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142b3	          0x4885c0	                           test rax, rax	      4848	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_7
0x40142b6	          0x4989c5	                            mov r13, rax	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142b9	     0xf84edfdffff	                            je 0x40140ac	      4848	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_7
0x40142bf	          0x4c39e3	                            cmp rbx, r12	      4852	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_8
0x40142c2	     0xf86e4fdffff	                           jbe 0x40140ac	      4852	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_8
0x40142c8	      0x498d6c2401	                      lea rbp, [r12 + 1]	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40142cd	          0x4889d8	                            mov rax, rbx	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142d0	          0x4c29e0	                            sub rax, r12	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142d3	          0x4839eb	                            cmp rbx, rbp	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40142d6	        0x4c8d78ff	                      lea r15, [rax - 1]	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x40142da	     0xf8798000000	                            ja 0x4014378	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40142e0	          0x8d50ff	                      lea edx, [rax - 1]	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40142e3	          0x83fa07	                              cmp edx, 7	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40142e6	     0xf8649020000	                           jbe 0x4014535	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40142ec	        0x4c8d60fe	                      lea r12, [rax - 2]	      4865	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40142f0	      0xba05000000	                              mov edx, 5	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40142f5	      0xbe00000000	                              mov esi, 0	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40142fa	            0x31ff	                            xor edi, edi	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40142fc	      0xe800000000	                          call 0x4014301	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4014301	          0x4589e7	                          mov r15d, r12d	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014304	          0x4989c0	                             mov r8, rax	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4014307	      0xba05000000	                              mov edx, 5	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x401430c	      0xbe00000000	                              mov esi, 0	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014311	            0x31ff	                            xor edi, edi	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014313	      0x4c89442410	              mov qword [rsp + 0x10], r8	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014318	      0xe800000000	                          call 0x401431d	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x401431d	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014322	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x4014326	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x4014329	          0x4589f9	                           mov r9d, r15d	       104	stdio2.h	CALL_16
0x401432c	              0x55	                                push rbp	       104	stdio2.h	CALL_16
0x401432d	          0x4c89ea	                            mov rdx, r13	       104	stdio2.h	CALL_16
0x4014330	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4014335	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x401433a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401433c	      0xe800000000	                          call 0x4014341	       104	stdio2.h	CALL_16
0x4014341	          0x4c89e6	                            mov rsi, r12	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x4014344	          0x4889ef	                            mov rdi, rbp	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x4014347	      0xe800000000	                          call 0x401434c	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x401434c	      0x4c8d7c0501	                lea r15, [rbp + rax + 1]	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x4014351	              0x5a	                                 pop rdx	      4883	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_10
0x4014352	          0x4c39fb	                            cmp rbx, r15	      4883	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_10
0x4014355	              0x59	                                 pop rcx	      4883	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_10
0x4014356	     0xf8650fdffff	                           jbe 0x40140ac	      4883	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_10
0x401435c	        0x4f8d2437	                    lea r12, [r15 + r14]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4014360	          0x4c39e3	                            cmp rbx, r12	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4014363	     0xf8627ffffff	                           jbe 0x4014290	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4014369	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x401436d	      0xe92cffffff	                           jmp 0x401429e	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4014372	    0x660f1f440000	                    nop word [rax + rax]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4014378	      0xbe01000000	                              mov esi, 1	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x401437d	          0x4c89e7	                            mov rdi, r12	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014380	        0x4d8d67ff	                      lea r12, [r15 - 1]	      4865	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014384	    0xff1500000000	                 call qword [0x0401438a]	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x401438a	            0x89c1	                            mov ecx, eax	      4870	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x401438c	            0x31ff	                            xor edi, edi	      4752	dwarf.c	FUNCTION_42	CALL_9
0x401438e	      0xba05000000	                              mov edx, 5	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4014393	          0xc1e118	                           shl ecx, 0x18	      4870	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014396	          0x4589e7	                          mov r15d, r12d	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x4014399	            0x89c8	                            mov eax, ecx	      4752	dwarf.c	FUNCTION_42	CALL_9
0x401439b	        0x894c2410	             mov dword [rsp + 0x10], ecx	      4752	dwarf.c	FUNCTION_42	CALL_9
0x401439f	          0xc1e81c	                           shr eax, 0x1c	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40143a2	          0x83e007	                              and eax, 7	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40143a5	    0x488b34c50000	                  mov rsi, qword [rax*8]	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40143ad	      0xe800000000	                          call 0x40143b2	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40143b2	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143b6	          0x4989c0	                             mov r8, rax	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40143b9	            0x85c9	                           test ecx, ecx	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143bb	     0xf8946ffffff	                           jns 0x4014307	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143c1	      0xba05000000	                              mov edx, 5	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143c6	      0xbe00000000	                              mov esi, 0	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143cb	            0x31ff	                            xor edi, edi	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143cd	      0x4889442410	             mov qword [rsp + 0x10], rax	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143d2	      0xe800000000	                          call 0x40143d7	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143d7	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143dc	      0xe941ffffff	                           jmp 0x4014322	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143e1	     0xf1f80000000	                         nop dword [rax]	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x40143e8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x40143ed	          0x4d89e5	                            mov r13, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x40143f0	          0x4c89e0	                            mov rax, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x40143f3	    0xc74424200400	               mov dword [rsp + 0x20], 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x40143fb	            0x31ed	                            xor ebp, ebp	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x40143fd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4014402	        0x4c2b6920	             sub r13, qword [rcx + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4014406	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x401440b	          0x4c89ea	                            mov rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x401440e	      0xe9dbfaffff	                           jmp 0x4013eee	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4014413	       0xf1f440000	                   nop dword [rax + rax]	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4014418	      0xbffeffffff	                     mov edi, 0xfffffffe	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401441d	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014425	      0x66897c2426	               mov word [rsp + 0x26], di	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401442a	    0x8b3500000000	            mov esi, dword [0x04014430] 	      4807	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4014430	          0x8d46ff	                      lea eax, [rsi - 1]	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4014433	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4014436	     0xf87b4000000	                            ja 0x40144f0	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x401443c	          0x4531ed	                          xor r13d, r13d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401443f	      0xe938fbffff	                           jmp 0x4013f7c	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014444	         0xf1f4000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014448	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401444c	      0xe9fcfaffff	                           jmp 0x4013f4d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014451	     0xf1f80000000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014458	    0x41be04000000	                             mov r14d, 4	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401445e	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x4014463	    0xc74424200400	               mov dword [rsp + 0x20], 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x401446b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4014470	          0x4d89e5	                            mov r13, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4014473	          0x4c89e0	                            mov rax, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4014476	        0x4c2b6f20	             sub r13, qword [rdi + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x401447a	          0x4c89ea	                            mov rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x401447d	          0x4801ea	                            add rdx, rbp	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4014480	     0xf8368faffff	                           jae 0x4013eee	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4014486	      0xe9e2fcffff	                           jmp 0x401416d	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x401448b	       0xf1f440000	                   nop dword [rax + rax]	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4014490	      0xba05000000	                              mov edx, 5	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x4014495	      0xbe00000000	                              mov esi, 0	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x401449a	            0x31ff	                            xor edi, edi	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x401449c	      0xe800000000	                          call 0x40144a1	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x40144a1	          0x4889c7	                            mov rdi, rax	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x40144a4	            0x31c0	                            xor eax, eax	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x40144a6	      0xe800000000	                          call 0x40144ab	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x40144ab	    0xc70500000000	               mov dword [0x040144b5], 1	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x40144b5	      0xe9f2fbffff	                           jmp 0x40140ac	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x40144ba	    0x660f1f440000	                    nop word [rax + rax]	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x40144c0	      0xbe08000000	                              mov esi, 8	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144c5	          0x4c89e7	                            mov rdi, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144c8	    0x41be0c000000	                           mov r14d, 0xc	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144ce	          0x4d89ec	                            mov r12, r13	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144d1	    0xff1500000000	                 call qword [0x040144d7]	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144d7	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144dc	          0x4889c5	                            mov rbp, rax	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144df	    0xc74424200800	               mov dword [rsp + 0x20], 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144e7	            0xeb82	                           jmp 0x401446b	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144e9	     0xf1f80000000	                         nop dword [rax]	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x40144f0	        0x4f8d3c30	                     lea r15, [r8 + r14]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x40144f4	          0x4c39fb	                            cmp rbx, r15	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x40144f7	            0x7627	                           jbe 0x4014520	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x40144f9	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x40144fd	          0x4531ed	                          xor r13d, r13d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014500	      0xe9e9faffff	                           jmp 0x4013fee	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014505	           0xf1f00	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014508	          0x4d89ec	                            mov r12, r13	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401450b	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014510	    0xc74424200800	               mov dword [rsp + 0x20], 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014518	      0xe9bdf9ffff	                           jmp 0x4013eda	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x401451d	           0xf1f00	                         nop dword [rax]	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4014520	          0x4531e4	                          xor r12d, r12d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4014523	          0x4531ed	                          xor r13d, r13d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014526	      0xe9dafaffff	                           jmp 0x4014005	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401452b	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014530	      0xe9c3fbffff	                           jmp 0x40140f8	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014535	            0x89c6	                            mov esi, eax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4014537	      0xe941feffff	                           jmp 0x401437d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401453c	      0xe800000000	                          call 0x4014541	      4902	dwarf.c	FUNCTION_45
read_debug_line_header	ELSE,3:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,9:CALL,12:functions,0	407
0x4000a90	            0x4157	                                push r15	      3314	dwarf.c	FUNCTION_36
0x4000a92	        0x4c8d7e04	                      lea r15, [rsi + 4]	      3324	dwarf.c	FUNCTION_36
0x4000a96	            0x4156	                                push r14	      3314	dwarf.c	FUNCTION_36
0x4000a98	            0x4155	                                push r13	      3314	dwarf.c	FUNCTION_36
0x4000a9a	            0x4154	                                push r12	      3314	dwarf.c	FUNCTION_36
0x4000a9c	          0x4989f6	                            mov r14, rsi	      3314	dwarf.c	FUNCTION_36
0x4000a9f	              0x55	                                push rbp	      3314	dwarf.c	FUNCTION_36
0x4000aa0	              0x53	                                push rbx	      3314	dwarf.c	FUNCTION_36
0x4000aa1	          0x4989fc	                            mov r12, rdi	      3314	dwarf.c	FUNCTION_36
0x4000aa4	          0x4889d3	                            mov rbx, rdx	      3314	dwarf.c	FUNCTION_36
0x4000aa7	          0x4889cd	                            mov rbp, rcx	      3314	dwarf.c	FUNCTION_36
0x4000aaa	        0x4883ec28	                           sub rsp, 0x28	      3314	dwarf.c	FUNCTION_36
0x4000aae	          0x4939d7	                            cmp r15, rdx	      3324	dwarf.c	FUNCTION_36
0x4000ab1	      0x4c89442408	                 mov qword [rsp + 8], r8	      3314	dwarf.c	FUNCTION_36
0x4000ab6	     0xf826c010000	                            jb 0x4000c28	      3324	dwarf.c	FUNCTION_36
0x4000abc	          0x4839d6	                            cmp rsi, rdx	      3324	dwarf.c	FUNCTION_36
0x4000abf	     0xf82eb010000	                            jb 0x4000cb0	      3324	dwarf.c	FUNCTION_36
0x4000ac5	    0x48c745000000	                      mov qword [rbp], 0	      3324	dwarf.c	FUNCTION_36
0x4000acd	      0xb804000000	                              mov eax, 4	      3324	dwarf.c	FUNCTION_36
0x4000ad2	    0xc74524040000	               mov dword [rbp + 0x24], 4	      3335	dwarf.c	FUNCTION_36	ELSE_1
0x4000ad9	    0x41bd04000000	                             mov r13d, 4	      3335	dwarf.c	FUNCTION_36	ELSE_1
0x4000adf	      0xb904000000	                              mov ecx, 4	      3335	dwarf.c	FUNCTION_36	ELSE_1
0x4000ae4	    0x48c744241004	               mov qword [rsp + 0x10], 4	      3335	dwarf.c	FUNCTION_36	ELSE_1
0x4000aed	      0x4939442430	            cmp qword [r12 + 0x30], rax 	      3339	dwarf.c	FUNCTION_36	IF_2
0x4000af2	     0xf8258030000	                            jb 0x4000e50	      3339	dwarf.c	FUNCTION_36	IF_2
0x4000af8	        0x4d8d6f02	                      lea r13, [r15 + 2]	      3360	dwarf.c	FUNCTION_36
0x4000afc	          0x4c39eb	                            cmp rbx, r13	      3360	dwarf.c	FUNCTION_36
0x4000aff	     0xf867b010000	                           jbe 0x4000c80	      3360	dwarf.c	FUNCTION_36
0x4000b05	      0xbe02000000	                              mov esi, 2	      3360	dwarf.c	FUNCTION_36
0x4000b0a	          0x4c89ff	                            mov rdi, r15	      3360	dwarf.c	FUNCTION_36
0x4000b0d	    0xff1500000000	                 call qword [0x04000b13]	      3360	dwarf.c	FUNCTION_36
0x4000b13	          0x8d48fe	                      lea ecx, [rax - 2]	      3362	dwarf.c	FUNCTION_36	IF_4
0x4000b16	        0x66894508	                  mov word [rbp + 8], ax	      3360	dwarf.c	FUNCTION_36
0x4000b1a	        0x6683f903	                               cmp cx, 3	      3362	dwarf.c	FUNCTION_36	IF_4
0x4000b1e	     0xf8779010000	                            ja 0x4000c9d	      3362	dwarf.c	FUNCTION_36	IF_4
0x4000b24	        0x6683f805	                               cmp ax, 5	      3372	dwarf.c	FUNCTION_36	IF_5
0x4000b28	            0x7546	                           jne 0x4000b70	      3372	dwarf.c	FUNCTION_36	IF_5
0x4000b2a	        0x498d4f03	                      lea rcx, [r15 + 3]	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b2e	          0x4839cb	                            cmp rbx, rcx	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b31	     0xf8799030000	                            ja 0x4000ed0	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b37	          0x4c39eb	                            cmp rbx, r13	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b3a	            0x7612	                           jbe 0x4000b4e	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b3c	          0x4889de	                            mov rsi, rbx	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b3f	          0x4c29ee	                            sub rsi, r13	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b42	          0x8d46ff	                      lea eax, [rsi - 1]	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b45	          0x83f807	                              cmp eax, 7	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b48	     0xf8687030000	                           jbe 0x4000ed5	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000b4e	        0x4d8d6f04	                      lea r13, [r15 + 4]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000b52	          0x4c39eb	                            cmp rbx, r13	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000b55	            0x7619	                           jbe 0x4000b70	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000b57	      0xbe01000000	                              mov esi, 1	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000b5c	          0x4889cf	                            mov rdi, rcx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000b5f	    0xff1500000000	                 call qword [0x04000b65]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000b65	            0x84c0	                             test al, al	      3377	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4000b67	          0x4989c7	                            mov r15, rax	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000b6a	     0xf8528040000	                           jne 0x4000f98	      3377	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4000b70	        0x448b6524	           mov r12d, dword [rbp + 0x24] 	      3386	dwarf.c	FUNCTION_36
0x4000b74	        0x4183fc08	                             cmp r12d, 8	      3386	dwarf.c	FUNCTION_36
0x4000b78	     0xf8702030000	                            ja 0x4000e80	      3386	dwarf.c	FUNCTION_36
0x4000b7e	          0x4489e0	                           mov eax, r12d	      3386	dwarf.c	FUNCTION_36
0x4000b81	          0x4c01e8	                            add rax, r13	      3386	dwarf.c	FUNCTION_36
0x4000b84	          0x4839c3	                            cmp rbx, rax	      3386	dwarf.c	FUNCTION_36
0x4000b87	            0x770b	                            ja 0x4000b94	      3386	dwarf.c	FUNCTION_36
0x4000b89	          0x4939dd	                            cmp r13, rbx	      3386	dwarf.c	FUNCTION_36
0x4000b8c	            0x7317	                           jae 0x4000ba5	      3386	dwarf.c	FUNCTION_36
0x4000b8e	          0x4189dc	                           mov r12d, ebx	      3386	dwarf.c	FUNCTION_36
0x4000b91	          0x4529ec	                          sub r12d, r13d	      3386	dwarf.c	FUNCTION_36
0x4000b94	      0x418d4424ff	                      lea eax, [r12 - 1]	      3386	dwarf.c	FUNCTION_36
0x4000b99	          0x4489e6	                           mov esi, r12d	      3386	dwarf.c	FUNCTION_36
0x4000b9c	          0x83f807	                              cmp eax, 7	      3386	dwarf.c	FUNCTION_36
0x4000b9f	     0xf8619030000	                           jbe 0x4000ebe	      3386	dwarf.c	FUNCTION_36
0x4000ba5	    0x48c745100000	               mov qword [rbp + 0x10], 0	      3386	dwarf.c	FUNCTION_36
0x4000bad	          0x8b4524	            mov eax, dword [rbp + 0x24] 	      3386	dwarf.c	FUNCTION_36
0x4000bb0	          0x4901c5	                            add r13, rax	      3386	dwarf.c	FUNCTION_36
0x4000bb3	        0x4d8d6501	                      lea r12, [r13 + 1]	      3388	dwarf.c	FUNCTION_36
0x4000bb7	          0x4c39e3	                            cmp rbx, r12	      3388	dwarf.c	FUNCTION_36
0x4000bba	     0xf8710010000	                            ja 0x4000cd0	      3388	dwarf.c	FUNCTION_36
0x4000bc0	          0x4c39eb	                            cmp rbx, r13	      3388	dwarf.c	FUNCTION_36
0x4000bc3	            0x7612	                           jbe 0x4000bd7	      3388	dwarf.c	FUNCTION_36
0x4000bc5	          0x4889de	                            mov rsi, rbx	      3388	dwarf.c	FUNCTION_36
0x4000bc8	          0x4c29ee	                            sub rsi, r13	      3388	dwarf.c	FUNCTION_36
0x4000bcb	          0x8d46ff	                      lea eax, [rsi - 1]	      3388	dwarf.c	FUNCTION_36
0x4000bce	          0x83f807	                              cmp eax, 7	      3388	dwarf.c	FUNCTION_36
0x4000bd1	     0xf86fe000000	                           jbe 0x4000cd5	      3388	dwarf.c	FUNCTION_36
0x4000bd7	      0x66837d0803	                   cmp word [rbp + 8], 3	      3390	dwarf.c	FUNCTION_36	IF_7
0x4000bdc	        0xc6451800	                mov byte [rbp + 0x18], 0	      3388	dwarf.c	FUNCTION_36
0x4000be0	     0xf8606010000	                           jbe 0x4000cec	      3390	dwarf.c	FUNCTION_36	IF_7
0x4000be6	        0x4983c502	                              add r13, 2	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000bea	          0x4c39eb	                            cmp rbx, r13	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000bed	     0xf8725030000	                            ja 0x4000f18	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000bf3	          0x4c39e3	                            cmp rbx, r12	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000bf6	     0xf8784030000	                            ja 0x4000f80	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000bfc	        0xc6451900	                mov byte [rbp + 0x19], 0	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000c00	      0xba05000000	                              mov edx, 5	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c05	      0xbe00000000	                              mov esi, 0	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c0a	            0x31ff	                            xor edi, edi	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c0c	          0x4531e4	                          xor r12d, r12d	      3397	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000c0f	      0xe800000000	                          call 0x4000c14	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c14	          0x4889c7	                            mov rdi, rax	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c17	            0x31c0	                            xor eax, eax	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c19	      0xe800000000	                          call 0x4000c1e	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c1e	      0xe980010000	                           jmp 0x4000da3	      3397	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000c23	       0xf1f440000	                   nop dword [rax + rax]	      3397	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000c28	      0xbe04000000	                              mov esi, 4	      3397	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000c2d	          0x4c89f7	                            mov rdi, r14	      3324	dwarf.c	FUNCTION_36
0x4000c30	    0xff1500000000	                 call qword [0x04000c36]	      3324	dwarf.c	FUNCTION_36
0x4000c36	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3326	dwarf.c	FUNCTION_36	IF_1
0x4000c3b	        0x48894500	                    mov qword [rbp], rax	      3324	dwarf.c	FUNCTION_36
0x4000c3f	          0x4839c8	                            cmp rax, rcx	      3326	dwarf.c	FUNCTION_36	IF_1
0x4000c42	     0xf857f030000	                           jne 0x4000fc7	      3326	dwarf.c	FUNCTION_36	IF_1
0x4000c48	        0x4d8d6e0c	                    lea r13, [r14 + 0xc]	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c4c	          0x4c39eb	                            cmp rbx, r13	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c4f	     0xf87eb020000	                            ja 0x4000f40	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c55	          0x4939df	                            cmp r15, rbx	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c58	            0x7312	                           jae 0x4000c6c	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c5a	          0x4889de	                            mov rsi, rbx	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c5d	          0x4c29fe	                            sub rsi, r15	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c60	          0x8d46ff	                      lea eax, [rsi - 1]	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c63	          0x83f807	                              cmp eax, 7	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c66	     0xf86d9020000	                           jbe 0x4000f45	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c6c	    0x48c745000000	                      mov qword [rbp], 0	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c74	      0xb80c000000	                            mov eax, 0xc	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c79	      0xe9d8020000	                           jmp 0x4000f56	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c7e	            0x6690	                                     nop	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000c80	          0x4939df	                            cmp r15, rbx	      3360	dwarf.c	FUNCTION_36
0x4000c83	            0x7312	                           jae 0x4000c97	      3360	dwarf.c	FUNCTION_36
0x4000c85	          0x4889de	                            mov rsi, rbx	      3360	dwarf.c	FUNCTION_36
0x4000c88	          0x4c29fe	                            sub rsi, r15	      3360	dwarf.c	FUNCTION_36
0x4000c8b	          0x8d46ff	                      lea eax, [rsi - 1]	      3360	dwarf.c	FUNCTION_36
0x4000c8e	          0x83f807	                              cmp eax, 7	      3360	dwarf.c	FUNCTION_36
0x4000c91	     0xf8673feffff	                           jbe 0x4000b0a	      3360	dwarf.c	FUNCTION_36
0x4000c97	            0x31c0	                            xor eax, eax	      3360	dwarf.c	FUNCTION_36
0x4000c99	        0x66894508	                  mov word [rbp + 8], ax	      3360	dwarf.c	FUNCTION_36
0x4000c9d	      0xba05000000	                              mov edx, 5	      3367	dwarf.c	FUNCTION_36	IF_4	CALL_5
0x4000ca2	      0xbe00000000	                              mov esi, 0	      3367	dwarf.c	FUNCTION_36	IF_4	CALL_5
0x4000ca7	      0xe95effffff	                           jmp 0x4000c0a	      3367	dwarf.c	FUNCTION_36	IF_4	CALL_5
0x4000cac	         0xf1f4000	                         nop dword [rax]	      3367	dwarf.c	FUNCTION_36	IF_4	CALL_5
0x4000cb0	          0x4889d6	                            mov rsi, rdx	      3324	dwarf.c	FUNCTION_36
0x4000cb3	          0x4c29f6	                            sub rsi, r14	      3324	dwarf.c	FUNCTION_36
0x4000cb6	          0x8d46ff	                      lea eax, [rsi - 1]	      3324	dwarf.c	FUNCTION_36
0x4000cb9	          0x83f807	                              cmp eax, 7	      3324	dwarf.c	FUNCTION_36
0x4000cbc	     0xf8703feffff	                            ja 0x4000ac5	      3324	dwarf.c	FUNCTION_36
0x4000cc2	      0xe966ffffff	                           jmp 0x4000c2d	      3324	dwarf.c	FUNCTION_36
0x4000cc7	    0x660f1f840000	                    nop word [rax + rax]	      3324	dwarf.c	FUNCTION_36
0x4000cd0	      0xbe01000000	                              mov esi, 1	      3324	dwarf.c	FUNCTION_36
0x4000cd5	          0x4c89ef	                            mov rdi, r13	      3388	dwarf.c	FUNCTION_36
0x4000cd8	    0xff1500000000	                 call qword [0x04000cde]	      3388	dwarf.c	FUNCTION_36
0x4000cde	      0x66837d0803	                   cmp word [rbp + 8], 3	      3390	dwarf.c	FUNCTION_36	IF_7
0x4000ce3	          0x884518	               mov byte [rbp + 0x18], al	      3388	dwarf.c	FUNCTION_36
0x4000ce6	     0xf87fafeffff	                            ja 0x4000be6	      3390	dwarf.c	FUNCTION_36	IF_7
0x4000cec	        0xc6451901	                mov byte [rbp + 0x19], 1	      3401	dwarf.c	FUNCTION_36	ELSE_3
0x4000cf0	      0x498d4c2401	                      lea rcx, [r12 + 1]	      3403	dwarf.c	FUNCTION_36
0x4000cf5	          0x4839cb	                            cmp rbx, rcx	      3403	dwarf.c	FUNCTION_36
0x4000cf8	     0xf87ba000000	                            ja 0x4000db8	      3403	dwarf.c	FUNCTION_36
0x4000cfe	          0x4939dc	                            cmp r12, rbx	      3403	dwarf.c	FUNCTION_36
0x4000d01	            0x7312	                           jae 0x4000d15	      3403	dwarf.c	FUNCTION_36
0x4000d03	          0x4889de	                            mov rsi, rbx	      3403	dwarf.c	FUNCTION_36
0x4000d06	          0x4c29e6	                            sub rsi, r12	      3403	dwarf.c	FUNCTION_36
0x4000d09	          0x8d46ff	                      lea eax, [rsi - 1]	      3403	dwarf.c	FUNCTION_36
0x4000d0c	          0x83f807	                              cmp eax, 7	      3403	dwarf.c	FUNCTION_36
0x4000d0f	     0xf86a6030000	                           jbe 0x40010bb	      3403	dwarf.c	FUNCTION_36
0x4000d15	      0x498d542402	                      lea rdx, [r12 + 2]	      3404	dwarf.c	FUNCTION_36
0x4000d1a	        0xc6451a00	                mov byte [rbp + 0x1a], 0	      3403	dwarf.c	FUNCTION_36
0x4000d1e	          0x4839da	                            cmp rdx, rbx	      3404	dwarf.c	FUNCTION_36
0x4000d21	     0xf83c8000000	                           jae 0x4000def	      3404	dwarf.c	FUNCTION_36
0x4000d27	          0x4889cf	                            mov rdi, rcx	      3404	dwarf.c	FUNCTION_36
0x4000d2a	      0xbe01000000	                              mov esi, 1	      3404	dwarf.c	FUNCTION_36
0x4000d2f	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3404	dwarf.c	FUNCTION_36
0x4000d34	      0xe800000000	                          call 0x4000d39	      3404	dwarf.c	FUNCTION_36
0x4000d39	      0x498d4c2403	                      lea rcx, [r12 + 3]	      3405	dwarf.c	FUNCTION_36
0x4000d3e	          0x89451c	            mov dword [rbp + 0x1c], eax 	      3404	dwarf.c	FUNCTION_36
0x4000d41	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3405	dwarf.c	FUNCTION_36
0x4000d46	          0x4839d9	                            cmp rcx, rbx	      3405	dwarf.c	FUNCTION_36
0x4000d49	     0xf820e030000	                            jb 0x400105d	      3405	dwarf.c	FUNCTION_36
0x4000d4f	          0x4889de	                            mov rsi, rbx	      3405	dwarf.c	FUNCTION_36
0x4000d52	          0x4829d6	                            sub rsi, rdx	      3405	dwarf.c	FUNCTION_36
0x4000d55	          0x8d46ff	                      lea eax, [rsi - 1]	      3405	dwarf.c	FUNCTION_36
0x4000d58	          0x83f807	                              cmp eax, 7	      3405	dwarf.c	FUNCTION_36
0x4000d5b	     0xf8632030000	                           jbe 0x4001093	      3405	dwarf.c	FUNCTION_36
0x4000d61	        0x4983c404	                              add r12, 4	      3406	dwarf.c	FUNCTION_36
0x4000d65	        0xc6452000	                mov byte [rbp + 0x20], 0	      3405	dwarf.c	FUNCTION_36
0x4000d69	          0x4939dc	                            cmp r12, rbx	      3406	dwarf.c	FUNCTION_36
0x4000d6c	     0xf83cc000000	                           jae 0x4000e3e	      3406	dwarf.c	FUNCTION_36
0x4000d72	      0xbe01000000	                              mov esi, 1	      3406	dwarf.c	FUNCTION_36
0x4000d77	          0x4889cf	                            mov rdi, rcx	      3406	dwarf.c	FUNCTION_36
0x4000d7a	    0xff1500000000	                 call qword [0x04000d80]	      3406	dwarf.c	FUNCTION_36
0x4000d80	          0x884521	               mov byte [rbp + 0x21], al	      3406	dwarf.c	FUNCTION_36
0x4000d83	        0x488b7500	                    mov rsi, qword [rbp]	      3408	dwarf.c	FUNCTION_36
0x4000d87	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      3408	dwarf.c	FUNCTION_36
0x4000d8c	      0x488b442408	                mov rax, qword [rsp + 8]	      3408	dwarf.c	FUNCTION_36
0x4000d91	          0x4901f5	                            add r13, rsi	      3408	dwarf.c	FUNCTION_36
0x4000d94	          0x4d01ee	                            add r14, r13	      3408	dwarf.c	FUNCTION_36
0x4000d97	          0x4c39f3	                            cmp rbx, r14	      3410	dwarf.c	FUNCTION_36	IF_9
0x4000d9a	          0x4c8930	                    mov qword [rax], r14	      3408	dwarf.c	FUNCTION_36
0x4000d9d	     0xf822d020000	                            jb 0x4000fd0	      3410	dwarf.c	FUNCTION_36	IF_9
0x4000da3	        0x4883c428	                           add rsp, 0x28	      3419	dwarf.c	FUNCTION_36
0x4000da7	          0x4c89e0	                            mov rax, r12	      3419	dwarf.c	FUNCTION_36
0x4000daa	              0x5b	                                 pop rbx	      3419	dwarf.c	FUNCTION_36
0x4000dab	              0x5d	                                 pop rbp	      3419	dwarf.c	FUNCTION_36
0x4000dac	            0x415c	                                 pop r12	      3419	dwarf.c	FUNCTION_36
0x4000dae	            0x415d	                                 pop r13	      3419	dwarf.c	FUNCTION_36
0x4000db0	            0x415e	                                 pop r14	      3419	dwarf.c	FUNCTION_36
0x4000db2	            0x415f	                                 pop r15	      3419	dwarf.c	FUNCTION_36
0x4000db4	              0xc3	                                     ret	      3419	dwarf.c	FUNCTION_36
0x4000db5	           0xf1f00	                         nop dword [rax]	      3419	dwarf.c	FUNCTION_36
0x4000db8	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3419	dwarf.c	FUNCTION_36
0x4000dbd	      0xbe01000000	                              mov esi, 1	      3403	dwarf.c	FUNCTION_36
0x4000dc2	          0x4c89e7	                            mov rdi, r12	      3403	dwarf.c	FUNCTION_36
0x4000dc5	    0xff1500000000	                 call qword [0x04000dcb]	      3403	dwarf.c	FUNCTION_36
0x4000dcb	      0x498d542402	                      lea rdx, [r12 + 2]	      3404	dwarf.c	FUNCTION_36
0x4000dd0	          0x88451a	               mov byte [rbp + 0x1a], al	      3403	dwarf.c	FUNCTION_36
0x4000dd3	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3404	dwarf.c	FUNCTION_36
0x4000dd8	          0x4839d3	                            cmp rbx, rdx	      3404	dwarf.c	FUNCTION_36
0x4000ddb	     0xf87fe020000	                            ja 0x40010df	      3404	dwarf.c	FUNCTION_36
0x4000de1	          0x4889de	                            mov rsi, rbx	      3404	dwarf.c	FUNCTION_36
0x4000de4	          0x4829ce	                            sub rsi, rcx	      3404	dwarf.c	FUNCTION_36
0x4000de7	            0x85f6	                           test esi, esi	      3404	dwarf.c	FUNCTION_36
0x4000de9	     0xf854b020000	                           jne 0x400103a	      3404	dwarf.c	FUNCTION_36
0x4000def	      0x498d4c2403	                      lea rcx, [r12 + 3]	      3405	dwarf.c	FUNCTION_36
0x4000df4	    0xc7451c000000	               mov dword [rbp + 0x1c], 0	      3404	dwarf.c	FUNCTION_36
0x4000dfb	          0x4839d9	                            cmp rcx, rbx	      3405	dwarf.c	FUNCTION_36
0x4000dfe	     0xf835dffffff	                           jae 0x4000d61	      3405	dwarf.c	FUNCTION_36
0x4000e04	        0x4983c404	                              add r12, 4	      3406	dwarf.c	FUNCTION_36
0x4000e08	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3406	dwarf.c	FUNCTION_36
0x4000e0d	      0xbe01000000	                              mov esi, 1	      3405	dwarf.c	FUNCTION_36
0x4000e12	          0x4889d7	                            mov rdi, rdx	      3405	dwarf.c	FUNCTION_36
0x4000e15	    0xff1500000000	                 call qword [0x04000e1b]	      3405	dwarf.c	FUNCTION_36
0x4000e1b	          0x4939dc	                            cmp r12, rbx	      3406	dwarf.c	FUNCTION_36
0x4000e1e	          0x884520	               mov byte [rbp + 0x20], al	      3405	dwarf.c	FUNCTION_36
0x4000e21	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3406	dwarf.c	FUNCTION_36
0x4000e26	     0xf8246ffffff	                            jb 0x4000d72	      3406	dwarf.c	FUNCTION_36
0x4000e2c	          0x4889de	                            mov rsi, rbx	      3406	dwarf.c	FUNCTION_36
0x4000e2f	          0x4829ce	                            sub rsi, rcx	      3406	dwarf.c	FUNCTION_36
0x4000e32	          0x8d46ff	                      lea eax, [rsi - 1]	      3406	dwarf.c	FUNCTION_36
0x4000e35	          0x83f807	                              cmp eax, 7	      3406	dwarf.c	FUNCTION_36
0x4000e38	     0xf8639ffffff	                           jbe 0x4000d77	      3406	dwarf.c	FUNCTION_36
0x4000e3e	        0xc6452100	                mov byte [rbp + 0x21], 0	      3406	dwarf.c	FUNCTION_36
0x4000e42	      0xe93cffffff	                           jmp 0x4000d83	      3406	dwarf.c	FUNCTION_36
0x4000e47	    0x660f1f840000	                    nop word [rax + rax]	      3406	dwarf.c	FUNCTION_36
0x4000e50	          0x4c89fe	                            mov rsi, r15	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000e53	      0x492b742420	             sub rsi, qword [r12 + 0x20]	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000e58	          0x4c89e7	                            mov rdi, r12	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000e5b	          0x4829ce	                            sub rsi, rcx	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000e5e	      0xe800000000	                          call 0x4000e63	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000e63	            0x85c0	                           test eax, eax	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000e65	     0xf84a5010000	                            je 0x4001010	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000e6b	          0x4889d8	                            mov rax, rbx	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000e6e	          0x4c29f0	                            sub rax, r14	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000e71	          0x4c29e8	                            sub rax, r13	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000e74	        0x48894500	                    mov qword [rbp], rax	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000e78	      0xe97bfcffff	                           jmp 0x4000af8	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000e7d	           0xf1f00	                         nop dword [rax]	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000e80	            0x31ff	                            xor edi, edi	      3386	dwarf.c	FUNCTION_36
0x4000e82	          0x4489e1	                           mov ecx, r12d	      3386	dwarf.c	FUNCTION_36
0x4000e85	    0x41b805000000	                              mov r8d, 5	      3386	dwarf.c	FUNCTION_36
0x4000e8b	      0xba00000000	                              mov edx, 0	      3386	dwarf.c	FUNCTION_36
0x4000e90	      0xbe00000000	                              mov esi, 0	      3386	dwarf.c	FUNCTION_36
0x4000e95	      0xe800000000	                          call 0x4000e9a	      3386	dwarf.c	FUNCTION_36
0x4000e9a	      0xba08000000	                              mov edx, 8	      3386	dwarf.c	FUNCTION_36
0x4000e9f	          0x4889c7	                            mov rdi, rax	      3386	dwarf.c	FUNCTION_36
0x4000ea2	          0x4489e6	                           mov esi, r12d	      3386	dwarf.c	FUNCTION_36
0x4000ea5	            0x31c0	                            xor eax, eax	      3386	dwarf.c	FUNCTION_36
0x4000ea7	      0xe800000000	                          call 0x4000eac	      3386	dwarf.c	FUNCTION_36
0x4000eac	        0x498d4508	                      lea rax, [r13 + 8]	      3386	dwarf.c	FUNCTION_36
0x4000eb0	          0x4839c3	                            cmp rbx, rax	      3386	dwarf.c	FUNCTION_36
0x4000eb3	     0xf86d0fcffff	                           jbe 0x4000b89	      3386	dwarf.c	FUNCTION_36
0x4000eb9	      0xbe08000000	                              mov esi, 8	      3386	dwarf.c	FUNCTION_36
0x4000ebe	          0x4c89ef	                            mov rdi, r13	      3386	dwarf.c	FUNCTION_36
0x4000ec1	    0xff1500000000	                 call qword [0x04000ec7]	      3386	dwarf.c	FUNCTION_36
0x4000ec7	        0x48894510	            mov qword [rbp + 0x10], rax 	      3386	dwarf.c	FUNCTION_36
0x4000ecb	      0xe9ddfcffff	                           jmp 0x4000bad	      3386	dwarf.c	FUNCTION_36
0x4000ed0	      0xbe01000000	                              mov esi, 1	      3386	dwarf.c	FUNCTION_36
0x4000ed5	          0x4c89ef	                            mov rdi, r13	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000ed8	        0x4d8d6f04	                      lea r13, [r15 + 4]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000edc	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000ee1	    0xff1500000000	                 call qword [0x04000ee7]	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000ee7	          0x4c39eb	                            cmp rbx, r13	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000eea	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000eef	     0xf8762fcffff	                            ja 0x4000b57	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000ef5	          0x4839cb	                            cmp rbx, rcx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000ef8	     0xf8672fcffff	                           jbe 0x4000b70	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000efe	          0x4889de	                            mov rsi, rbx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f01	          0x4829ce	                            sub rsi, rcx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f04	          0x8d46ff	                      lea eax, [rsi - 1]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f07	          0x83f807	                              cmp eax, 7	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f0a	     0xf8760fcffff	                            ja 0x4000b70	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f10	      0xe947fcffff	                           jmp 0x4000b5c	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f15	           0xf1f00	                         nop dword [rax]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f18	      0xbe01000000	                              mov esi, 1	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f1d	          0x4c89e7	                            mov rdi, r12	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f20	    0xff1500000000	                 call qword [0x04000f26]	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f26	            0x84c0	                             test al, al	      3394	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000f28	          0x884519	               mov byte [rbp + 0x19], al	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f2b	     0xf84cffcffff	                            je 0x4000c00	      3394	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000f31	          0x4d89ec	                            mov r12, r13	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f34	      0xe9b7fdffff	                           jmp 0x4000cf0	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f39	     0xf1f80000000	                         nop dword [rax]	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f40	      0xbe08000000	                              mov esi, 8	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f45	          0x4c89ff	                            mov rdi, r15	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000f48	    0xff1500000000	                 call qword [0x04000f4e]	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000f4e	        0x48894500	                    mov qword [rbp], rax	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000f52	        0x4883c00c	                            add rax, 0xc	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000f56	          0x4d89ef	                            mov r15, r13	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000f59	    0xc74524080000	               mov dword [rbp + 0x24], 8	      3330	dwarf.c	FUNCTION_36	IF_1
0x4000f60	    0x41bd0c000000	                           mov r13d, 0xc	      3330	dwarf.c	FUNCTION_36	IF_1
0x4000f66	      0xb908000000	                              mov ecx, 8	      3330	dwarf.c	FUNCTION_36	IF_1
0x4000f6b	    0x48c74424100c	            mov qword [rsp + 0x10], 0xc 	      3330	dwarf.c	FUNCTION_36	IF_1
0x4000f74	      0xe974fbffff	                           jmp 0x4000aed	      3330	dwarf.c	FUNCTION_36	IF_1
0x4000f79	     0xf1f80000000	                         nop dword [rax]	      3330	dwarf.c	FUNCTION_36	IF_1
0x4000f80	          0x4889de	                            mov rsi, rbx	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f83	          0x4c29e6	                            sub rsi, r12	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f86	          0x8d46ff	                      lea eax, [rsi - 1]	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f89	          0x83f807	                              cmp eax, 7	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f8c	     0xf876afcffff	                            ja 0x4000bfc	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f92	            0xeb89	                           jmp 0x4000f1d	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f94	         0xf1f4000	                         nop dword [rax]	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000f98	      0x498b5c2410	            mov rbx, qword [r12 + 0x10] 	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000f9d	      0xba05000000	                              mov edx, 5	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fa2	      0xbe00000000	                              mov esi, 0	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fa7	            0x31ff	                            xor edi, edi	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fa9	          0x4531e4	                          xor r12d, r12d	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4000fac	      0xe800000000	                          call 0x4000fb1	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fb1	        0x410fb6d7	                         movzx edx, r15b	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fb5	          0x4889c7	                            mov rdi, rax	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fb8	          0x4889de	                            mov rsi, rbx	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fbb	            0x31c0	                            xor eax, eax	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fbd	      0xe800000000	                          call 0x4000fc2	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4000fc2	      0xe9dcfdffff	                           jmp 0x4000da3	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4000fc7	        0x4883c004	                              add rax, 4	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4000fcb	      0xe902fbffff	                           jmp 0x4000ad2	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4000fd0	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000fd2	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000fd7	          0x4531e4	                          xor r12d, r12d	      3415	dwarf.c	FUNCTION_36	IF_9
0x4000fda	      0xe821f3ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000fdf	      0xba05000000	                              mov edx, 5	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4000fe4	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000fe7	      0xbe00000000	                              mov esi, 0	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4000fec	            0x31ff	                            xor edi, edi	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4000fee	      0xe800000000	                          call 0x4000ff3	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4000ff3	          0x4889ee	                            mov rsi, rbp	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4000ff6	          0x4889c7	                            mov rdi, rax	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4000ff9	            0x31c0	                            xor eax, eax	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4000ffb	      0xe800000000	                          call 0x4001000	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4001000	      0x488b442408	                mov rax, qword [rsp + 8]	      3414	dwarf.c	FUNCTION_36	IF_9
0x4001005	          0x488918	                    mov qword [rax], rbx	      3414	dwarf.c	FUNCTION_36	IF_9
0x4001008	      0xe996fdffff	                           jmp 0x4000da3	      3415	dwarf.c	FUNCTION_36	IF_9
0x400100d	           0xf1f00	                         nop dword [rax]	      3415	dwarf.c	FUNCTION_36	IF_9
0x4001010	        0x488b5d00	                    mov rbx, qword [rbp]	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x4001014	      0xba05000000	                              mov edx, 5	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x4001019	      0xbe00000000	                              mov esi, 0	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x400101e	            0x31ff	                            xor edi, edi	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x4001020	          0x4531e4	                          xor r12d, r12d	      3355	dwarf.c	FUNCTION_36	IF_2	ELSE_2
0x4001023	      0xe800000000	                          call 0x4001028	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x4001028	          0x4889de	                            mov rsi, rbx	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x400102b	          0x4889c7	                            mov rdi, rax	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x400102e	            0x31c0	                            xor eax, eax	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x4001030	      0xe800000000	                          call 0x4001035	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x4001035	      0xe969fdffff	                           jmp 0x4000da3	      3355	dwarf.c	FUNCTION_36	IF_2	ELSE_2
0x400103a	          0x4889cf	                            mov rdi, rcx	      3404	dwarf.c	FUNCTION_36
0x400103d	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3404	dwarf.c	FUNCTION_36
0x4001042	      0xe800000000	                          call 0x4001047	      3404	dwarf.c	FUNCTION_36
0x4001047	      0x498d4c2403	                      lea rcx, [r12 + 3]	      3405	dwarf.c	FUNCTION_36
0x400104c	          0x89451c	            mov dword [rbp + 0x1c], eax 	      3404	dwarf.c	FUNCTION_36
0x400104f	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3405	dwarf.c	FUNCTION_36
0x4001054	          0x4839cb	                            cmp rbx, rcx	      3405	dwarf.c	FUNCTION_36
0x4001057	     0xf8604fdffff	                           jbe 0x4000d61	      3405	dwarf.c	FUNCTION_36
0x400105d	        0x4983c404	                              add r12, 4	      3406	dwarf.c	FUNCTION_36
0x4001061	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3406	dwarf.c	FUNCTION_36
0x4001066	      0xbe01000000	                              mov esi, 1	      3405	dwarf.c	FUNCTION_36
0x400106b	          0x4889d7	                            mov rdi, rdx	      3405	dwarf.c	FUNCTION_36
0x400106e	    0xff1500000000	                 call qword [0x04001074]	      3405	dwarf.c	FUNCTION_36
0x4001074	          0x4c39e3	                            cmp rbx, r12	      3406	dwarf.c	FUNCTION_36
0x4001077	          0x884520	               mov byte [rbp + 0x20], al	      3405	dwarf.c	FUNCTION_36
0x400107a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3406	dwarf.c	FUNCTION_36
0x400107f	     0xf87edfcffff	                            ja 0x4000d72	      3406	dwarf.c	FUNCTION_36
0x4001085	          0x4839cb	                            cmp rbx, rcx	      3406	dwarf.c	FUNCTION_36
0x4001088	     0xf879efdffff	                            ja 0x4000e2c	      3406	dwarf.c	FUNCTION_36
0x400108e	      0xe9abfdffff	                           jmp 0x4000e3e	      3406	dwarf.c	FUNCTION_36
0x4001093	        0x4983c404	                              add r12, 4	      3406	dwarf.c	FUNCTION_36
0x4001097	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3406	dwarf.c	FUNCTION_36
0x400109c	          0x4889d7	                            mov rdi, rdx	      3405	dwarf.c	FUNCTION_36
0x400109f	    0xff1500000000	                 call qword [0x040010a5]	      3405	dwarf.c	FUNCTION_36
0x40010a5	          0x4c39e3	                            cmp rbx, r12	      3406	dwarf.c	FUNCTION_36
0x40010a8	          0x884520	               mov byte [rbp + 0x20], al	      3405	dwarf.c	FUNCTION_36
0x40010ab	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3406	dwarf.c	FUNCTION_36
0x40010b0	     0xf8688fdffff	                           jbe 0x4000e3e	      3406	dwarf.c	FUNCTION_36
0x40010b6	      0xe9b7fcffff	                           jmp 0x4000d72	      3406	dwarf.c	FUNCTION_36
0x40010bb	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3406	dwarf.c	FUNCTION_36
0x40010c0	          0x4c89e7	                            mov rdi, r12	      3403	dwarf.c	FUNCTION_36
0x40010c3	    0xff1500000000	                 call qword [0x040010c9]	      3403	dwarf.c	FUNCTION_36
0x40010c9	      0x498d542402	                      lea rdx, [r12 + 2]	      3404	dwarf.c	FUNCTION_36
0x40010ce	          0x88451a	               mov byte [rbp + 0x1a], al	      3403	dwarf.c	FUNCTION_36
0x40010d1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3404	dwarf.c	FUNCTION_36
0x40010d6	          0x4839d3	                            cmp rbx, rdx	      3404	dwarf.c	FUNCTION_36
0x40010d9	     0xf8610fdffff	                           jbe 0x4000def	      3404	dwarf.c	FUNCTION_36
0x40010df	          0x4889cf	                            mov rdi, rcx	      3404	dwarf.c	FUNCTION_36
0x40010e2	      0xbe01000000	                              mov esi, 1	      3404	dwarf.c	FUNCTION_36
0x40010e7	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3404	dwarf.c	FUNCTION_36
0x40010ec	      0xe800000000	                          call 0x40010f1	      3404	dwarf.c	FUNCTION_36
0x40010f1	      0x498d4c2403	                      lea rcx, [r12 + 3]	      3405	dwarf.c	FUNCTION_36
0x40010f6	          0x89451c	            mov dword [rbp + 0x1c], eax 	      3404	dwarf.c	FUNCTION_36
0x40010f9	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3405	dwarf.c	FUNCTION_36
0x40010fe	          0x4839cb	                            cmp rbx, rcx	      3405	dwarf.c	FUNCTION_36
0x4001101	     0xf87fdfcffff	                            ja 0x4000e04	      3405	dwarf.c	FUNCTION_36
0x4001107	          0x4839d3	                            cmp rbx, rdx	      3405	dwarf.c	FUNCTION_36
0x400110a	     0xf873ffcffff	                            ja 0x4000d4f	      3405	dwarf.c	FUNCTION_36
0x4001110	      0xe94cfcffff	                           jmp 0x4000d61	      3405	dwarf.c	FUNCTION_36
loc_offsets_compar	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:CALL,0:functions,0	22
0x4000040	            0x8b3f	                    mov edi, dword [rdi]	      5934	dwarf.c	FUNCTION_56
0x4000042	            0x8b36	                    mov esi, dword [rsi]	      5935	dwarf.c	FUNCTION_56
0x4000044	    0x488b05000000	            mov rax, qword [0x0400004b] 	      5934	dwarf.c	FUNCTION_56
0x400004b	        0x488b14f0	            mov rdx, qword [rax + rsi*8]	      5935	dwarf.c	FUNCTION_56
0x400004f	        0x488b0cf8	            mov rcx, qword [rax + rdi*8]	      5934	dwarf.c	FUNCTION_56
0x4000053	            0x31c0	                            xor eax, eax	      5937	dwarf.c	FUNCTION_56
0x4000055	          0x4839d1	                            cmp rcx, rdx	      5937	dwarf.c	FUNCTION_56
0x4000058	           0xf92c2	                                 setb dl	      5937	dwarf.c	FUNCTION_56
0x400005b	           0xf97c0	                                 seta al	      5937	dwarf.c	FUNCTION_56
0x400005e	           0xfb6d2	                           movzx edx, dl	      5937	dwarf.c	FUNCTION_56
0x4000061	            0x29d0	                            sub eax, edx	      5938	dwarf.c	FUNCTION_56	IF_1
0x4000063	            0x751f	                           jne 0x4000084	      5938	dwarf.c	FUNCTION_56	IF_1
0x4000065	    0x488b05000000	            mov rax, qword [0x0400006c] 	      5941	dwarf.c	FUNCTION_56
0x400006c	        0x488b14f0	            mov rdx, qword [rax + rsi*8]	      5942	dwarf.c	FUNCTION_56
0x4000070	        0x488b0cf8	            mov rcx, qword [rax + rdi*8]	      5941	dwarf.c	FUNCTION_56
0x4000074	            0x31c0	                            xor eax, eax	      5944	dwarf.c	FUNCTION_56
0x4000076	          0x4839d1	                            cmp rcx, rdx	      5944	dwarf.c	FUNCTION_56
0x4000079	           0xf92c2	                                 setb dl	      5944	dwarf.c	FUNCTION_56
0x400007c	           0xf97c0	                                 seta al	      5944	dwarf.c	FUNCTION_56
0x400007f	           0xfb6d2	                           movzx edx, dl	      5944	dwarf.c	FUNCTION_56
0x4000082	            0x29d0	                            sub eax, edx	      5946	dwarf.c	FUNCTION_56
0x4000084	            0xf3c3	                                     ret	      5947	dwarf.c	FUNCTION_56
display_gdb_index	ELSE,2:WHILE,0:FOR,5:SWITCH,0:DO,0:IF,20:CALL,68:functions,0	656
0x40061b0	            0x4157	                                push r15	      8791	dwarf.c	FUNCTION_86
0x40061b2	            0x4156	                                push r14	      8791	dwarf.c	FUNCTION_86
0x40061b4	          0x4989ff	                            mov r15, rdi	      8791	dwarf.c	FUNCTION_86
0x40061b7	            0x4155	                                push r13	      8791	dwarf.c	FUNCTION_86
0x40061b9	            0x4154	                                push r12	      8791	dwarf.c	FUNCTION_86
0x40061bb	        0x488d7718	                   lea rsi, [rdi + 0x18]	      8791	dwarf.c	FUNCTION_86
0x40061bf	              0x55	                                push rbp	      8791	dwarf.c	FUNCTION_86
0x40061c0	              0x53	                                push rbx	      8791	dwarf.c	FUNCTION_86
0x40061c1	        0x4883ec68	                           sub rsp, 0x68	      8791	dwarf.c	FUNCTION_86
0x40061c5	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	      8792	dwarf.c	FUNCTION_86
0x40061c9	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      8804	dwarf.c	FUNCTION_86	CALL_1
0x40061cd	      0xe87eb5ffff	  call sym.introduce.isra.5.constprop.33	      8804	dwarf.c	FUNCTION_86	CALL_1
0x40061d2	      0x49837f3017	           cmp qword [r15 + 0x30], 0x17 	      8806	dwarf.c	FUNCTION_86	IF_1
0x40061d7	     0xf867b060000	                           jbe 0x4006858	      8806	dwarf.c	FUNCTION_86	IF_1
0x40061dd	      0xbe04000000	                              mov esi, 4	      8812	dwarf.c	FUNCTION_86	CALL_4
0x40061e2	          0x4889df	                            mov rdi, rbx	      8812	dwarf.c	FUNCTION_86	CALL_4
0x40061e5	      0xe800000000	                          call 0x40061ea	      8812	dwarf.c	FUNCTION_86	CALL_4
0x40061ea	            0x31ff	                            xor edi, edi	      8813	dwarf.c	FUNCTION_86	CALL_5
0x40061ec	          0x4189c4	                           mov r12d, eax	      8813	dwarf.c	FUNCTION_86	CALL_5
0x40061ef	      0xba05000000	                              mov edx, 5	      8813	dwarf.c	FUNCTION_86	CALL_5
0x40061f4	      0xbe00000000	                              mov esi, 0	      8813	dwarf.c	FUNCTION_86	CALL_5
0x40061f9	          0x4889c5	                            mov rbp, rax	      8812	dwarf.c	FUNCTION_86	CALL_4
0x40061fc	      0xe800000000	                          call 0x4006201	      8813	dwarf.c	FUNCTION_86	CALL_5
0x4006201	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4006204	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006207	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400620c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400620e	      0xe800000000	                          call 0x4006213	       104	stdio2.h	CALL_16
0x4006213	          0x8d45fd	                      lea eax, [rbp - 3]	      8817	dwarf.c	FUNCTION_86	IF_2
0x4006216	          0x83f805	                              cmp eax, 5	      8817	dwarf.c	FUNCTION_86	IF_2
0x4006219	     0xf8751060000	                            ja 0x4006870	      8817	dwarf.c	FUNCTION_86	IF_2
0x400621f	          0x83fd03	                              cmp ebp, 3	      8822	dwarf.c	FUNCTION_86	IF_3
0x4006222	     0xf8478060000	                            je 0x40068a0	      8822	dwarf.c	FUNCTION_86	IF_3
0x4006228	          0x83fd04	                              cmp ebp, 4	      8824	dwarf.c	FUNCTION_86	IF_4
0x400622b	     0xf848a060000	                            je 0x40068bb	      8824	dwarf.c	FUNCTION_86	IF_4
0x4006231	          0x83fd05	                              cmp ebp, 5	      8826	dwarf.c	FUNCTION_86	IF_5
0x4006234	     0xf849c060000	                            je 0x40068d6	      8826	dwarf.c	FUNCTION_86	IF_5
0x400623a	          0x83fd06	                              cmp ebp, 6	      8828	dwarf.c	FUNCTION_86	IF_6
0x400623d	     0xf84ae060000	                            je 0x40068f1	      8828	dwarf.c	FUNCTION_86	IF_6
0x4006243	        0x488d7b04	                      lea rdi, [rbx + 4]	      8835	dwarf.c	FUNCTION_86	CALL_16
0x4006247	      0xbe04000000	                              mov esi, 4	      8835	dwarf.c	FUNCTION_86	CALL_16
0x400624c	      0xe800000000	                          call 0x4006251	      8835	dwarf.c	FUNCTION_86	CALL_16
0x4006251	        0x488d7b08	                      lea rdi, [rbx + 8]	      8836	dwarf.c	FUNCTION_86	CALL_17
0x4006255	      0xbe04000000	                              mov esi, 4	      8836	dwarf.c	FUNCTION_86	CALL_17
0x400625a	          0x4889c5	                            mov rbp, rax	      8835	dwarf.c	FUNCTION_86	CALL_16
0x400625d	      0xe800000000	                          call 0x4006262	      8836	dwarf.c	FUNCTION_86	CALL_17
0x4006262	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	      8837	dwarf.c	FUNCTION_86	CALL_18
0x4006266	      0xbe04000000	                              mov esi, 4	      8837	dwarf.c	FUNCTION_86	CALL_18
0x400626b	          0x4989c4	                            mov r12, rax	      8836	dwarf.c	FUNCTION_86	CALL_17
0x400626e	      0xe800000000	                          call 0x4006273	      8837	dwarf.c	FUNCTION_86	CALL_18
0x4006273	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      8838	dwarf.c	FUNCTION_86	CALL_19
0x4006277	      0xbe04000000	                              mov esi, 4	      8838	dwarf.c	FUNCTION_86	CALL_19
0x400627c	          0x4989c5	                            mov r13, rax	      8837	dwarf.c	FUNCTION_86	CALL_18
0x400627f	      0xe800000000	                          call 0x4006284	      8838	dwarf.c	FUNCTION_86	CALL_19
0x4006284	        0x488d7b14	                   lea rdi, [rbx + 0x14]	      8839	dwarf.c	FUNCTION_86	CALL_20
0x4006288	      0xbe04000000	                              mov esi, 4	      8839	dwarf.c	FUNCTION_86	CALL_20
0x400628d	          0x4989c6	                            mov r14, rax	      8838	dwarf.c	FUNCTION_86	CALL_19
0x4006290	      0xe800000000	                          call 0x4006295	      8839	dwarf.c	FUNCTION_86	CALL_20
0x4006295	          0x4889c6	                            mov rsi, rax	      8839	dwarf.c	FUNCTION_86	CALL_20
0x4006298	        0x48890424	                    mov qword [rsp], rax	      8839	dwarf.c	FUNCTION_86	CALL_20
0x400629c	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      8841	dwarf.c	FUNCTION_86	IF_7
0x40062a0	            0x89e9	                            mov ecx, ebp	      8841	dwarf.c	FUNCTION_86	IF_7
0x40062a2	          0x4839c8	                            cmp rax, rcx	      8841	dwarf.c	FUNCTION_86	IF_7
0x40062a5	     0xf8275050000	                            jb 0x4006820	      8841	dwarf.c	FUNCTION_86	IF_7
0x40062ab	          0x4589e1	                           mov r9d, r12d	      8841	dwarf.c	FUNCTION_86	IF_7
0x40062ae	          0x4c39c8	                             cmp rax, r9	      8842	dwarf.c	FUNCTION_86	IF_7
0x40062b1	     0xf8269050000	                            jb 0x4006820	      8842	dwarf.c	FUNCTION_86	IF_7
0x40062b7	          0x4489ea	                           mov edx, r13d	      8842	dwarf.c	FUNCTION_86	IF_7
0x40062ba	          0x4839d0	                            cmp rax, rdx	      8843	dwarf.c	FUNCTION_86	IF_7
0x40062bd	     0xf825d050000	                            jb 0x4006820	      8843	dwarf.c	FUNCTION_86	IF_7
0x40062c3	          0x4489f7	                           mov edi, r14d	      8843	dwarf.c	FUNCTION_86	IF_7
0x40062c6	          0x4839f8	                            cmp rax, rdi	      8844	dwarf.c	FUNCTION_86	IF_7
0x40062c9	      0x48897c2408	                mov qword [rsp + 8], rdi	      8844	dwarf.c	FUNCTION_86	IF_7
0x40062ce	     0xf824c050000	                            jb 0x4006820	      8844	dwarf.c	FUNCTION_86	IF_7
0x40062d4	            0x89f6	                            mov esi, esi	      8844	dwarf.c	FUNCTION_86	IF_7
0x40062d6	          0x4839f0	                            cmp rax, rsi	      8845	dwarf.c	FUNCTION_86	IF_7
0x40062d9	      0x4889742418	             mov qword [rsp + 0x18], rsi	      8845	dwarf.c	FUNCTION_86	IF_7
0x40062de	     0xf823c050000	                            jb 0x4006820	      8845	dwarf.c	FUNCTION_86	IF_7
0x40062e4	          0x4439e5	                           cmp ebp, r12d	      8852	dwarf.c	FUNCTION_86	IF_8
0x40062e7	     0xf872b060000	                            ja 0x4006918	      8852	dwarf.c	FUNCTION_86	IF_8
0x40062ed	          0x4539ec	                          cmp r12d, r13d	      8861	dwarf.c	FUNCTION_86	IF_9
0x40062f0	     0xf8717080000	                            ja 0x4006b0d	      8861	dwarf.c	FUNCTION_86	IF_9
0x40062f6	          0x4539f5	                          cmp r13d, r14d	      8871	dwarf.c	FUNCTION_86	IF_10
0x40062f9	     0xf8758080000	                            ja 0x4006b57	      8871	dwarf.c	FUNCTION_86	IF_10
0x40062ff	        0x488b3c24	                    mov rdi, qword [rsp]	      8839	dwarf.c	FUNCTION_86	CALL_20
0x4006303	          0x4489f6	                           mov esi, r14d	      8878	dwarf.c	FUNCTION_86
0x4006306	          0x4429ee	                           sub esi, r13d	      8878	dwarf.c	FUNCTION_86
0x4006309	        0x89742420	             mov dword [rsp + 0x20], esi	      8878	dwarf.c	FUNCTION_86
0x400630d	          0x4139fe	                           cmp r14d, edi	      8880	dwarf.c	FUNCTION_86	IF_11
0x4006310	        0x897c2440	             mov dword [rsp + 0x40], edi	      8839	dwarf.c	FUNCTION_86	CALL_20
0x4006314	     0xf8765080000	                            ja 0x4006b7f	      8880	dwarf.c	FUNCTION_86	IF_11
0x400631a	          0x4801da	                            add rdx, rbx	      8891	dwarf.c	FUNCTION_86
0x400631d	        0x49034720	             add rax, qword [r15 + 0x20]	      8895	dwarf.c	FUNCTION_86	IF_12
0x4006321	          0x4889d6	                            mov rsi, rdx	      8891	dwarf.c	FUNCTION_86
0x4006324	      0x4889542428	             mov qword [rsp + 0x28], rdx	      8891	dwarf.c	FUNCTION_86
0x4006329	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      8895	dwarf.c	FUNCTION_86	IF_12
0x400632d	          0x4801f2	                            add rdx, rsi	      8895	dwarf.c	FUNCTION_86	IF_12
0x4006330	          0x4839c2	                            cmp rdx, rax	      8895	dwarf.c	FUNCTION_86	IF_12
0x4006333	     0xf87fc070000	                            ja 0x4006b35	      8895	dwarf.c	FUNCTION_86	IF_12
0x4006339	          0x4489e0	                           mov eax, r12d	      8859	dwarf.c	FUNCTION_86
0x400633c	      0xba05000000	                              mov edx, 5	      8901	dwarf.c	FUNCTION_86	CALL_33
0x4006341	            0x31ff	                            xor edi, edi	      8901	dwarf.c	FUNCTION_86	CALL_33
0x4006343	            0x29e8	                            sub eax, ebp	      8859	dwarf.c	FUNCTION_86
0x4006345	      0xbe00000000	                              mov esi, 0	      8901	dwarf.c	FUNCTION_86	CALL_33
0x400634a	      0x4c894c2438	              mov qword [rsp + 0x38], r9	      8901	dwarf.c	FUNCTION_86	CALL_33
0x400634f	        0x89442444	             mov dword [rsp + 0x44], eax	      8859	dwarf.c	FUNCTION_86
0x4006353	          0xc1e803	                              shr eax, 3	      8859	dwarf.c	FUNCTION_86
0x4006356	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      8859	dwarf.c	FUNCTION_86
0x400635b	        0x89442410	             mov dword [rsp + 0x10], eax	      8859	dwarf.c	FUNCTION_86
0x400635f	            0x31ed	                            xor ebp, ebp	      8889	dwarf.c	FUNCTION_86
0x4006361	      0xe800000000	                          call 0x4006366	      8901	dwarf.c	FUNCTION_86	CALL_33
0x4006366	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400636b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400636e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006370	      0xe800000000	                          call 0x4006375	       104	stdio2.h	CALL_16
0x4006375	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      8889	dwarf.c	FUNCTION_86
0x400637a	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400637e	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006383	          0x4801d9	                            add rcx, rbx	      8889	dwarf.c	FUNCTION_86
0x4006386	            0x85d2	                           test edx, edx	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006388	     0xf84a4000000	                            je 0x4006432	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400638e	      0x4c89642438	             mov qword [rsp + 0x38], r12	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006393	          0x4189ec	                           mov r12d, ebp	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006396	        0x8b6c2410	            mov ebp, dword [rsp + 0x10] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400639a	      0x48895c2430	             mov qword [rsp + 0x30], rbx	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400639f	      0x4c896c2448	             mov qword [rsp + 0x48], r13	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40063a4	          0x4889cb	                            mov rbx, rcx	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40063a7	      0x4c89742450	             mov qword [rsp + 0x50], r14	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40063ac	      0x4c894c2458	              mov qword [rsp + 0x58], r9	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40063b1	     0xf1f80000000	                         nop dword [rax]	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40063b8	    0x468d34e50000	                       lea r14d, [r12*8]	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x40063c0	      0xbe08000000	                              mov esi, 8	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x40063c5	        0x4a8d3c33	                    lea rdi, [rbx + r14]	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x40063c9	      0xe800000000	                          call 0x40063ce	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x40063ce	      0x4a8d7c3308	                lea rdi, [rbx + r14 + 8]	      8905	dwarf.c	FUNCTION_86	FOR_1	CALL_35
0x40063d3	      0xbe08000000	                              mov esi, 8	      8905	dwarf.c	FUNCTION_86	FOR_1	CALL_35
0x40063d8	          0x4989c5	                            mov r13, rax	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x40063db	      0xe800000000	                          call 0x40063e0	      8905	dwarf.c	FUNCTION_86	FOR_1	CALL_35
0x40063e0	            0x31ff	                            xor edi, edi	      8907	dwarf.c	FUNCTION_86	FOR_1	CALL_36
0x40063e2	          0x4989c6	                            mov r14, rax	      8905	dwarf.c	FUNCTION_86	FOR_1	CALL_35
0x40063e5	      0xba05000000	                              mov edx, 5	      8907	dwarf.c	FUNCTION_86	FOR_1	CALL_36
0x40063ea	      0xbe00000000	                              mov esi, 0	      8907	dwarf.c	FUNCTION_86	FOR_1	CALL_36
0x40063ef	      0xe800000000	                          call 0x40063f4	      8907	dwarf.c	FUNCTION_86	FOR_1	CALL_36
0x40063f4	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x40063f7	      0x4f8d4435ff	                 lea r8, [r13 + r14 - 1]	       104	stdio2.h	CALL_16
0x40063fc	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40063ff	            0xd1ea	                              shr edx, 1	       104	stdio2.h	CALL_16
0x4006401	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006403	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_16
0x4006406	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400640b	        0x4183c402	                             add r12d, 2	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400640f	      0xe800000000	                          call 0x4006414	       104	stdio2.h	CALL_16
0x4006414	          0x4439e5	                           cmp ebp, r12d	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006417	            0x779f	                            ja 0x40063b8	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006419	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400641e	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006423	      0x4c8b6c2448	            mov r13, qword [rsp + 0x48] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006428	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400642d	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4006432	            0x31ff	                            xor edi, edi	      8912	dwarf.c	FUNCTION_86	CALL_37
0x4006434	      0xba05000000	                              mov edx, 5	      8912	dwarf.c	FUNCTION_86	CALL_37
0x4006439	      0xbe00000000	                              mov esi, 0	      8912	dwarf.c	FUNCTION_86	CALL_37
0x400643e	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      8912	dwarf.c	FUNCTION_86	CALL_37
0x4006443	          0x4529e5	                          sub r13d, r12d	      8868	dwarf.c	FUNCTION_86
0x4006446	      0xe800000000	                          call 0x400644b	      8912	dwarf.c	FUNCTION_86	CALL_37
0x400644b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006450	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006453	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006455	        0x41c1ed03	                             shr r13d, 3	      8868	dwarf.c	FUNCTION_86
0x4006459	      0xe800000000	                          call 0x400645e	       104	stdio2.h	CALL_16
0x400645e	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      8890	dwarf.c	FUNCTION_86
0x4006463	          0x4589ec	                          mov r12d, r13d	      8868	dwarf.c	FUNCTION_86
0x4006466	          0x4531ed	                          xor r13d, r13d	      8890	dwarf.c	FUNCTION_86
0x4006469	          0x4585e4	                         test r12d, r12d	      8913	dwarf.c	FUNCTION_86	FOR_2
0x400646c	        0x4a8d2c0b	                     lea rbp, [rbx + r9]	      8890	dwarf.c	FUNCTION_86
0x4006470	     0xf84d1000000	                            je 0x4006547	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006476	      0x4c89742430	             mov qword [rsp + 0x30], r14	      8913	dwarf.c	FUNCTION_86	FOR_2
0x400647b	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006480	          0x4589ee	                          mov r14d, r13d	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006483	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006488	          0x4589e5	                          mov r13d, r12d	      8913	dwarf.c	FUNCTION_86	FOR_2
0x400648b	       0xf1f440000	                   nop dword [rax + rax]	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006490	    0x428d1cf50000	                        lea ebx, [r14*8]	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x4006498	      0xbe08000000	                              mov esi, 8	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x400649d	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x40064a2	      0xe800000000	                          call 0x40064a7	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x40064a7	      0x488d7c1d08	                lea rdi, [rbp + rbx + 8]	      8916	dwarf.c	FUNCTION_86	FOR_2	CALL_39
0x40064ac	      0xbe08000000	                              mov esi, 8	      8916	dwarf.c	FUNCTION_86	FOR_2	CALL_39
0x40064b1	          0x4989c4	                            mov r12, rax	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x40064b4	      0xe800000000	                          call 0x40064b9	      8916	dwarf.c	FUNCTION_86	FOR_2	CALL_39
0x40064b9	      0x488d7c1d10	            lea rdi, [rbp + rbx + 0x10] 	      8917	dwarf.c	FUNCTION_86	FOR_2	CALL_40
0x40064be	      0xbe08000000	                              mov esi, 8	      8917	dwarf.c	FUNCTION_86	FOR_2	CALL_40
0x40064c3	          0x4989c7	                            mov r15, rax	      8916	dwarf.c	FUNCTION_86	FOR_2	CALL_39
0x40064c6	      0xe800000000	                          call 0x40064cb	      8917	dwarf.c	FUNCTION_86	FOR_2	CALL_40
0x40064cb	            0x31ff	                            xor edi, edi	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x40064cd	      0xba05000000	                              mov edx, 5	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x40064d2	      0xbe00000000	                              mov esi, 0	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x40064d7	          0x4889c3	                            mov rbx, rax	      8917	dwarf.c	FUNCTION_86	FOR_2	CALL_40
0x40064da	      0xe800000000	                          call 0x40064df	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x40064df	          0x4889c6	                            mov rsi, rax	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x40064e2	      0xb8abaaaaaa	                     mov eax, 0xaaaaaaab	       104	stdio2.h	CALL_16
0x40064e7	          0x4d89f8	                             mov r8, r15	       104	stdio2.h	CALL_16
0x40064ea	          0x41f7e6	                                mul r14d	       104	stdio2.h	CALL_16
0x40064ed	          0x4c89e1	                            mov rcx, r12	       104	stdio2.h	CALL_16
0x40064f0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40064f5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40064f7	        0x4183c603	                             add r14d, 3	      8913	dwarf.c	FUNCTION_86	FOR_2
0x40064fb	            0xd1ea	                              shr edx, 1	       104	stdio2.h	CALL_16
0x40064fd	      0xe800000000	                          call 0x4006502	       104	stdio2.h	CALL_16
0x4006502	            0x31ff	                            xor edi, edi	       256	dwarf.c	FUNCTION_5	CALL_1
0x4006504	      0xba08000000	                              mov edx, 8	       256	dwarf.c	FUNCTION_5	CALL_1
0x4006509	          0x4889de	                            mov rsi, rbx	       256	dwarf.c	FUNCTION_5	CALL_1
0x400650c	      0xe8ef9dffff	                 call sym.dwarf_vmatoa_1	       256	dwarf.c	FUNCTION_5	CALL_1
0x4006511	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006516	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006519	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400651e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006520	      0xe800000000	                          call 0x4006525	       104	stdio2.h	CALL_16
0x4006525	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400652a	      0xe800000000	                          call 0x400652f	       104	stdio2.h	CALL_16
0x400652f	          0x4539f5	                          cmp r13d, r14d	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006532	     0xf8758ffffff	                            ja 0x4006490	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006538	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      8913	dwarf.c	FUNCTION_86	FOR_2
0x400653d	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006542	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4006547	            0x31ff	                            xor edi, edi	      8926	dwarf.c	FUNCTION_86	CALL_43
0x4006549	      0xba05000000	                              mov edx, 5	      8926	dwarf.c	FUNCTION_86	CALL_43
0x400654e	      0xbe00000000	                              mov esi, 0	      8926	dwarf.c	FUNCTION_86	CALL_43
0x4006553	      0xe800000000	                          call 0x4006558	      8926	dwarf.c	FUNCTION_86	CALL_43
0x4006558	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400655d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006560	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006562	      0xe800000000	                          call 0x4006567	       104	stdio2.h	CALL_16
0x4006567	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400656b	          0x4531ed	                          xor r13d, r13d	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400656e	          0x8d48ec	                   lea ecx, [rax - 0x14]	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006571	            0x85c0	                           test eax, eax	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006573	        0x894c2410	             mov dword [rsp + 0x10], ecx	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006577	     0xf841f010000	                            je 0x400669c	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400657d	      0x4c89742438	             mov qword [rsp + 0x38], r14	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006582	      0x48895c2430	             mov qword [rsp + 0x30], rbx	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006587	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400658c	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006591	      0x4c897c2420	             mov qword [rsp + 0x20], r15	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006596	          0x4589ef	                          mov r15d, r13d	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006599	            0xeb10	                           jmp 0x40065ab	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400659b	       0xf1f440000	                   nop dword [rax + rax]	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40065a0	      0x443b7c2410	           cmp r15d, dword [rsp + 0x10] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40065a5	     0xf87e2000000	                            ja 0x400668d	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40065ab	          0x4489fb	                           mov ebx, r15d	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40065ae	      0xbe08000000	                              mov esi, 8	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40065b3	        0x4183c714	                          add r15d, 0x14	      8928	dwarf.c	FUNCTION_86	FOR_3
0x40065b7	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40065bc	      0xe800000000	                          call 0x40065c1	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40065c1	      0x488d7c1d08	                lea rdi, [rbp + rbx + 8]	      8931	dwarf.c	FUNCTION_86	FOR_3	CALL_45
0x40065c6	      0xbe08000000	                              mov esi, 8	      8931	dwarf.c	FUNCTION_86	FOR_3	CALL_45
0x40065cb	          0x4989c4	                            mov r12, rax	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40065ce	      0xe800000000	                          call 0x40065d3	      8931	dwarf.c	FUNCTION_86	FOR_3	CALL_45
0x40065d3	      0x488d7c1d10	            lea rdi, [rbp + rbx + 0x10] 	      8932	dwarf.c	FUNCTION_86	FOR_3	CALL_46
0x40065d8	      0xbe04000000	                              mov esi, 4	      8932	dwarf.c	FUNCTION_86	FOR_3	CALL_46
0x40065dd	          0x4989c5	                            mov r13, rax	      8931	dwarf.c	FUNCTION_86	FOR_3	CALL_45
0x40065e0	      0xe800000000	                          call 0x40065e5	      8932	dwarf.c	FUNCTION_86	FOR_3	CALL_46
0x40065e5	          0x4c89e6	                            mov rsi, r12	       256	dwarf.c	FUNCTION_5	CALL_1
0x40065e8	            0x31ff	                            xor edi, edi	       256	dwarf.c	FUNCTION_5	CALL_1
0x40065ea	      0xba08000000	                              mov edx, 8	       256	dwarf.c	FUNCTION_5	CALL_1
0x40065ef	          0x4889c3	                            mov rbx, rax	      8932	dwarf.c	FUNCTION_86	FOR_3	CALL_46
0x40065f2	      0xe8099dffff	                 call sym.dwarf_vmatoa_1	       256	dwarf.c	FUNCTION_5	CALL_1
0x40065f7	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40065fc	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x40065ff	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006604	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006606	      0xe800000000	                          call 0x400660b	       104	stdio2.h	CALL_16
0x400660b	    0x4c6325000000	         movsxd r12, dword [0x04006612] 	       217	dwarf.c	FUNCTION_3
0x4006612	          0x4d89e9	                             mov r9, r13	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006615	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x400661b	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006620	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006625	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x400662a	          0x4c89e0	                            mov rax, r12	       217	dwarf.c	FUNCTION_3
0x400662d	        0x49c1e406	                              shl r12, 6	       217	dwarf.c	FUNCTION_3
0x4006631	          0x83c001	                              add eax, 1	       218	dwarf.c	FUNCTION_3	CALL_1
0x4006634	    0x4981c4000000	                              add r12, 0	       217	dwarf.c	FUNCTION_3
0x400663b	          0x83e00f	                            and eax, 0xf	       218	dwarf.c	FUNCTION_3	CALL_1
0x400663e	          0x4c89e7	                            mov rdi, r12	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006641	    0x890500000000	            mov dword [0x04006647], eax 	       218	dwarf.c	FUNCTION_3	CALL_1
0x4006647	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006649	      0xe800000000	                          call 0x400664e	        64	stdio2.h	FUNCTION_114	CALL_1
0x400664e	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4006651	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006656	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400665b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400665d	      0xe800000000	                          call 0x4006662	       104	stdio2.h	CALL_16
0x4006662	            0x31ff	                            xor edi, edi	      8936	dwarf.c	FUNCTION_86	FOR_3	CALL_49
0x4006664	      0xba05000000	                              mov edx, 5	      8936	dwarf.c	FUNCTION_86	FOR_3	CALL_49
0x4006669	      0xbe00000000	                              mov esi, 0	      8936	dwarf.c	FUNCTION_86	FOR_3	CALL_49
0x400666e	      0xe800000000	                          call 0x4006673	      8936	dwarf.c	FUNCTION_86	FOR_3	CALL_49
0x4006673	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x4006675	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006678	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400667d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400667f	      0xe800000000	                          call 0x4006684	       104	stdio2.h	CALL_16
0x4006684	          0x4539fe	                          cmp r14d, r15d	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006687	     0xf8713ffffff	                            ja 0x40065a0	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400668d	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006692	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4006697	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400669c	          0x8b0424	                    mov eax, dword [rsp]	      8887	dwarf.c	FUNCTION_86
0x400669f	            0x31ff	                            xor edi, edi	      8939	dwarf.c	FUNCTION_86	CALL_50
0x40066a1	      0xba05000000	                              mov edx, 5	      8939	dwarf.c	FUNCTION_86	CALL_50
0x40066a6	      0xbe00000000	                              mov esi, 0	      8939	dwarf.c	FUNCTION_86	CALL_50
0x40066ab	          0x4429f0	                           sub eax, r14d	      8887	dwarf.c	FUNCTION_86
0x40066ae	          0xc1e803	                              shr eax, 3	      8887	dwarf.c	FUNCTION_86
0x40066b1	          0x4189c4	                           mov r12d, eax	      8887	dwarf.c	FUNCTION_86
0x40066b4	      0xe800000000	                          call 0x40066b9	      8939	dwarf.c	FUNCTION_86	CALL_50
0x40066b9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40066be	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40066c1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40066c3	      0xe800000000	                          call 0x40066c8	       104	stdio2.h	CALL_16
0x40066c8	          0x4585e4	                         test r12d, r12d	      8940	dwarf.c	FUNCTION_86	FOR_4
0x40066cb	     0xf84df030000	                            je 0x4006ab0	      8940	dwarf.c	FUNCTION_86	FOR_4
0x40066d1	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      8940	dwarf.c	FUNCTION_86	FOR_4
0x40066d5	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      8893	dwarf.c	FUNCTION_86
0x40066da	      0x4c8b742408	                mov r14, qword [rsp + 8]	      8893	dwarf.c	FUNCTION_86
0x40066df	        0x44892424	                   mov dword [rsp], r12d	      8893	dwarf.c	FUNCTION_86
0x40066e3	          0xc1e804	                              shr eax, 4	      8893	dwarf.c	FUNCTION_86
0x40066e6	          0x4901dd	                            add r13, rbx	      8893	dwarf.c	FUNCTION_86
0x40066e9	          0x4901de	                            add r14, rbx	      8893	dwarf.c	FUNCTION_86
0x40066ec	        0x89442428	             mov dword [rsp + 0x28], eax	      8893	dwarf.c	FUNCTION_86
0x40066f0	            0x31db	                            xor ebx, ebx	      8893	dwarf.c	FUNCTION_86
0x40066f2	      0xe9c0000000	                           jmp 0x40067b7	      8893	dwarf.c	FUNCTION_86
0x40066f7	    0x660f1f840000	                    nop word [rax + rax]	      8893	dwarf.c	FUNCTION_86
0x4006700	      0xba05000000	                              mov edx, 5	      8956	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_53
0x4006705	      0xbe00000000	                              mov esi, 0	      8956	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_53
0x400670a	            0x31ff	                            xor edi, edi	      8956	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_53
0x400670c	      0xe800000000	                          call 0x4006711	      8956	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_53
0x4006711	            0x89e9	                            mov ecx, ebp	       104	stdio2.h	CALL_16
0x4006713	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006716	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x4006718	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400671d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400671f	      0xe800000000	                          call 0x4006724	       104	stdio2.h	CALL_16
0x4006724	      0xba05000000	                              mov edx, 5	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x4006729	      0xbe00000000	                              mov esi, 0	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x400672e	            0x31ff	                            xor edi, edi	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x4006730	      0xe800000000	                          call 0x4006735	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x4006735	            0x89da	                            mov edx, ebx	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x4006737	          0x4889c7	                            mov rdi, rax	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x400673a	            0x89ee	                            mov esi, ebp	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x400673c	            0x31c0	                            xor eax, eax	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x400673e	      0xe800000000	                          call 0x4006743	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x4006743	          0x4489e5	                           mov ebp, r12d	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x4006746	          0x4c89ef	                            mov rdi, r13	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4006749	          0x4801ef	                            add rdi, rbp	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x400674c	            0x7216	                            jb 0x4006764	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x400674e	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4006752	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4006756	      0x488d4402fd	                lea rax, [rdx + rax - 3]	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x400675b	          0x4839c7	                            cmp rdi, rax	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x400675e	     0xf82dc010000	                            jb 0x4006940	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4006764	      0xba05000000	                              mov edx, 5	      8968	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_56
0x4006769	      0xbe00000000	                              mov esi, 0	      8968	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_56
0x400676e	            0x31ff	                            xor edi, edi	      8968	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_56
0x4006770	      0xe800000000	                          call 0x4006775	      8968	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_56
0x4006775	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4006778	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400677b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006780	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006782	      0xe800000000	                          call 0x4006787	       104	stdio2.h	CALL_16
0x4006787	      0xba05000000	                              mov edx, 5	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x400678c	      0xbe00000000	                              mov esi, 0	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x4006791	            0x31ff	                            xor edi, edi	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x4006793	      0xe800000000	                          call 0x4006798	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x4006798	            0x89da	                            mov edx, ebx	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x400679a	          0x4889c7	                            mov rdi, rax	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x400679d	          0x4489e6	                           mov esi, r12d	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x40067a0	            0x31c0	                            xor eax, eax	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x40067a2	      0xe800000000	                          call 0x40067a7	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x40067a7	          0x83c301	                              add ebx, 1	      8940	dwarf.c	FUNCTION_86	FOR_4
0x40067aa	        0x4983c608	                              add r14, 8	      8940	dwarf.c	FUNCTION_86	FOR_4
0x40067ae	          0x391c24	                    cmp dword [rsp], ebx	      8940	dwarf.c	FUNCTION_86	FOR_4
0x40067b1	     0xf84f9020000	                            je 0x4006ab0	      8940	dwarf.c	FUNCTION_86	FOR_4
0x40067b7	      0xbe04000000	                              mov esi, 4	      8942	dwarf.c	FUNCTION_86	FOR_4	CALL_51
0x40067bc	          0x4c89f7	                            mov rdi, r14	      8942	dwarf.c	FUNCTION_86	FOR_4	CALL_51
0x40067bf	      0xe800000000	                          call 0x40067c4	      8942	dwarf.c	FUNCTION_86	FOR_4	CALL_51
0x40067c4	        0x498d7e04	                      lea rdi, [r14 + 4]	      8943	dwarf.c	FUNCTION_86	FOR_4	CALL_52
0x40067c8	          0x4889c5	                            mov rbp, rax	      8942	dwarf.c	FUNCTION_86	FOR_4	CALL_51
0x40067cb	      0xbe04000000	                              mov esi, 4	      8943	dwarf.c	FUNCTION_86	FOR_4	CALL_52
0x40067d0	      0xe800000000	                          call 0x40067d5	      8943	dwarf.c	FUNCTION_86	FOR_4	CALL_52
0x40067d5	          0x4989c4	                            mov r12, rax	      8943	dwarf.c	FUNCTION_86	FOR_4	CALL_52
0x40067d8	             0x9e8	                             or eax, ebp	      8946	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x40067da	            0x74cb	                            je 0x40067a7	      8946	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x40067dc	          0x4189e8	                            mov r8d, ebp	      8952	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x40067df	          0x4d01e8	                             add r8, r13	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40067e2	     0xf8218ffffff	                            jb 0x4006700	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40067e8	        0x498b4f30	            mov rcx, qword [r15 + 0x30] 	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40067ec	          0x4889c8	                            mov rax, rcx	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40067ef	        0x49034720	             add rax, qword [r15 + 0x20]	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40067f3	          0x4939c0	                             cmp r8, rax	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40067f6	     0xf8304ffffff	                           jae 0x4006700	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40067fc	        0x2b4c2440	             sub ecx, dword [rsp + 0x40]	       104	stdio2.h	CALL_16
0x4006800	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x4006802	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006807	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400680c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400680e	            0x29e9	                            sub ecx, ebp	       104	stdio2.h	CALL_16
0x4006810	      0xe800000000	                          call 0x4006815	       104	stdio2.h	CALL_16
0x4006815	      0xe929ffffff	                           jmp 0x4006743	       104	stdio2.h	CALL_16
0x400681a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4006820	        0x498b5f10	            mov rbx, qword [r15 + 0x10] 	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x4006824	      0xba05000000	                              mov edx, 5	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x4006829	      0xbe00000000	                              mov esi, 0	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x400682e	            0x31ff	                            xor edi, edi	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x4006830	      0xe800000000	                          call 0x4006835	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x4006835	          0x4889de	                            mov rsi, rbx	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x4006838	          0x4889c7	                            mov rdi, rax	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x400683b	            0x31c0	                            xor eax, eax	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x400683d	      0xe800000000	                          call 0x4006842	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x4006842	            0x31c0	                            xor eax, eax	      8848	dwarf.c	FUNCTION_86	IF_7
0x4006844	        0x4883c468	                           add rsp, 0x68	      9018	dwarf.c	FUNCTION_86
0x4006848	              0x5b	                                 pop rbx	      9018	dwarf.c	FUNCTION_86
0x4006849	              0x5d	                                 pop rbp	      9018	dwarf.c	FUNCTION_86
0x400684a	            0x415c	                                 pop r12	      9018	dwarf.c	FUNCTION_86
0x400684c	            0x415d	                                 pop r13	      9018	dwarf.c	FUNCTION_86
0x400684e	            0x415e	                                 pop r14	      9018	dwarf.c	FUNCTION_86
0x4006850	            0x415f	                                 pop r15	      9018	dwarf.c	FUNCTION_86
0x4006852	              0xc3	                                     ret	      9018	dwarf.c	FUNCTION_86
0x4006853	       0xf1f440000	                   nop dword [rax + rax]	      9018	dwarf.c	FUNCTION_86
0x4006858	        0x498b5f10	            mov rbx, qword [r15 + 0x10] 	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x400685c	      0xba05000000	                              mov edx, 5	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4006861	      0xbe00000000	                              mov esi, 0	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4006866	            0xebc6	                           jmp 0x400682e	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4006868	     0xf1f84000000	                   nop dword [rax + rax]	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4006870	      0xba05000000	                              mov edx, 5	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4006875	      0xbe00000000	                              mov esi, 0	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x400687a	            0x31ff	                            xor edi, edi	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x400687c	      0xe800000000	                          call 0x4006881	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4006881	          0x4c89e6	                            mov rsi, r12	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4006884	          0x4889c7	                            mov rdi, rax	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4006887	            0x31c0	                            xor eax, eax	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4006889	      0xe800000000	                          call 0x400688e	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x400688e	        0x4883c468	                           add rsp, 0x68	      9018	dwarf.c	FUNCTION_86
0x4006892	            0x31c0	                            xor eax, eax	      8820	dwarf.c	FUNCTION_86	IF_2
0x4006894	              0x5b	                                 pop rbx	      9018	dwarf.c	FUNCTION_86
0x4006895	              0x5d	                                 pop rbp	      9018	dwarf.c	FUNCTION_86
0x4006896	            0x415c	                                 pop r12	      9018	dwarf.c	FUNCTION_86
0x4006898	            0x415d	                                 pop r13	      9018	dwarf.c	FUNCTION_86
0x400689a	            0x415e	                                 pop r14	      9018	dwarf.c	FUNCTION_86
0x400689c	            0x415f	                                 pop r15	      9018	dwarf.c	FUNCTION_86
0x400689e	              0xc3	                                     ret	      9018	dwarf.c	FUNCTION_86
0x400689f	              0x90	                                     nop	      9018	dwarf.c	FUNCTION_86
0x40068a0	            0x31ff	                            xor edi, edi	      8823	dwarf.c	FUNCTION_86	CALL_9
0x40068a2	      0xba05000000	                              mov edx, 5	      8823	dwarf.c	FUNCTION_86	CALL_9
0x40068a7	      0xbe00000000	                              mov esi, 0	      8823	dwarf.c	FUNCTION_86	CALL_9
0x40068ac	      0xe800000000	                          call 0x40068b1	      8823	dwarf.c	FUNCTION_86	CALL_9
0x40068b1	          0x4889c7	                            mov rdi, rax	      8823	dwarf.c	FUNCTION_86	CALL_9
0x40068b4	            0x31c0	                            xor eax, eax	      8823	dwarf.c	FUNCTION_86	CALL_9
0x40068b6	      0xe800000000	                          call 0x40068bb	      8823	dwarf.c	FUNCTION_86	CALL_9
0x40068bb	            0x31ff	                            xor edi, edi	      8825	dwarf.c	FUNCTION_86	CALL_11
0x40068bd	      0xba05000000	                              mov edx, 5	      8825	dwarf.c	FUNCTION_86	CALL_11
0x40068c2	      0xbe00000000	                              mov esi, 0	      8825	dwarf.c	FUNCTION_86	CALL_11
0x40068c7	      0xe800000000	                          call 0x40068cc	      8825	dwarf.c	FUNCTION_86	CALL_11
0x40068cc	          0x4889c7	                            mov rdi, rax	      8825	dwarf.c	FUNCTION_86	CALL_11
0x40068cf	            0x31c0	                            xor eax, eax	      8825	dwarf.c	FUNCTION_86	CALL_11
0x40068d1	      0xe800000000	                          call 0x40068d6	      8825	dwarf.c	FUNCTION_86	CALL_11
0x40068d6	            0x31ff	                            xor edi, edi	      8827	dwarf.c	FUNCTION_86	CALL_13
0x40068d8	      0xba05000000	                              mov edx, 5	      8827	dwarf.c	FUNCTION_86	CALL_13
0x40068dd	      0xbe00000000	                              mov esi, 0	      8827	dwarf.c	FUNCTION_86	CALL_13
0x40068e2	      0xe800000000	                          call 0x40068e7	      8827	dwarf.c	FUNCTION_86	CALL_13
0x40068e7	          0x4889c7	                            mov rdi, rax	      8827	dwarf.c	FUNCTION_86	CALL_13
0x40068ea	            0x31c0	                            xor eax, eax	      8827	dwarf.c	FUNCTION_86	CALL_13
0x40068ec	      0xe800000000	                          call 0x40068f1	      8827	dwarf.c	FUNCTION_86	CALL_13
0x40068f1	            0x31ff	                            xor edi, edi	      8829	dwarf.c	FUNCTION_86	CALL_15
0x40068f3	      0xba05000000	                              mov edx, 5	      8829	dwarf.c	FUNCTION_86	CALL_15
0x40068f8	      0xbe00000000	                              mov esi, 0	      8829	dwarf.c	FUNCTION_86	CALL_15
0x40068fd	      0xe800000000	                          call 0x4006902	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4006902	          0x4889c7	                            mov rdi, rax	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4006905	            0x31c0	                            xor eax, eax	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4006907	      0xe800000000	                          call 0x400690c	      8829	dwarf.c	FUNCTION_86	CALL_15
0x400690c	      0xe932f9ffff	                           jmp 0x4006243	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4006911	     0xf1f80000000	                         nop dword [rax]	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4006918	      0xba05000000	                              mov edx, 5	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x400691d	      0xbe00000000	                              mov esi, 0	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4006922	            0x31ff	                            xor edi, edi	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4006924	      0xe800000000	                          call 0x4006929	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4006929	            0x89ea	                            mov edx, ebp	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x400692b	          0x4889c7	                            mov rdi, rax	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x400692e	          0x4489e6	                           mov esi, r12d	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4006931	            0x31c0	                            xor eax, eax	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4006933	      0xe800000000	                          call 0x4006938	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4006938	            0x31c0	                            xor eax, eax	      8856	dwarf.c	FUNCTION_86	IF_8
0x400693a	      0xe905ffffff	                           jmp 0x4006844	      8856	dwarf.c	FUNCTION_86	IF_8
0x400693f	              0x90	                                     nop	      8856	dwarf.c	FUNCTION_86	IF_8
0x4006940	      0xbe04000000	                              mov esi, 4	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x4006945	      0xe800000000	                          call 0x400694a	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x400694a	          0x4889c1	                            mov rcx, rax	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x400694d	      0x4889442410	             mov qword [rsp + 0x10], rax	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x4006952	        0x89442420	             mov dword [rsp + 0x20], eax	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x4006956	          0xc1e002	                              shl eax, 2	      8976	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4006959	            0x39c1	                            cmp ecx, eax	      8977	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x400695b	     0xf8770010000	                            ja 0x4006ad1	      8977	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4006961	        0x488d4d04	                      lea rcx, [rbp + 4]	      8977	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4006965	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4006969	        0x49035720	             add rdx, qword [r15 + 0x20]	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x400696d	          0x4801c8	                            add rax, rcx	      8976	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4006970	      0x48894c2408	                mov qword [rsp + 8], rcx	      8976	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4006975	          0x4c01e8	                            add rax, r13	      8976	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4006978	          0x4839d0	                            cmp rax, rdx	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x400697b	     0xf8350010000	                           jae 0x4006ad1	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4006981	          0x4939c5	                            cmp r13, rax	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4006984	     0xf8747010000	                            ja 0x4006ad1	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x400698a	      0x837c241001	               cmp dword [rsp + 0x10], 1	      8987	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_17
0x400698f	     0xf863a020000	                           jbe 0x4006bcf	      8987	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_17
0x4006995	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400699a	      0xe800000000	                          call 0x400699f	       104	stdio2.h	CALL_16
0x400699f	      0x837c241001	               cmp dword [rsp + 0x10], 1	       104	stdio2.h	CALL_16
0x40069a4	      0xb820000000	                           mov eax, 0x20	       104	stdio2.h	CALL_16
0x40069a9	      0xb909000000	                              mov ecx, 9	       104	stdio2.h	CALL_16
0x40069ae	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	      8893	dwarf.c	FUNCTION_86
0x40069b2	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      8893	dwarf.c	FUNCTION_86
0x40069b7	        0x895c2420	             mov dword [rsp + 0x20], ebx	      8893	dwarf.c	FUNCTION_86
0x40069bb	      0x4c89742430	             mov qword [rsp + 0x30], r14	      8893	dwarf.c	FUNCTION_86
0x40069c0	      0x448b7c2428	           mov r15d, dword [rsp + 0x28] 	      8893	dwarf.c	FUNCTION_86
0x40069c5	           0xf45c1	                         cmovne eax, ecx	      8893	dwarf.c	FUNCTION_86
0x40069c8	          0x4531e4	                          xor r12d, r12d	      8893	dwarf.c	FUNCTION_86
0x40069cb	        0x89442418	             mov dword [rsp + 0x18], eax	      8893	dwarf.c	FUNCTION_86
0x40069cf	      0xe982000000	                           jmp 0x4006a56	      8893	dwarf.c	FUNCTION_86
0x40069d4	         0xf1f4000	                         nop dword [rax]	      8893	dwarf.c	FUNCTION_86
0x40069d8	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40069dc	            0x89c1	                            mov ecx, eax	       104	stdio2.h	CALL_16
0x40069de	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40069e3	          0x4429f9	                           sub ecx, r15d	       104	stdio2.h	CALL_16
0x40069e6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40069eb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40069ed	      0xe800000000	                          call 0x40069f2	       104	stdio2.h	CALL_16
0x40069f2	    0x488b34dd0000	                  mov rsi, qword [rbx*8]	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40069fa	      0xba05000000	                              mov edx, 5	      4752	dwarf.c	FUNCTION_42	CALL_9
0x40069ff	            0x31ff	                            xor edi, edi	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4006a01	      0xe800000000	                          call 0x4006a06	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4006a06	          0x4585f6	                         test r14d, r14d	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a09	          0x4889c3	                            mov rbx, rax	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4006a0c	      0xba05000000	                              mov edx, 5	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a11	     0xf84a9000000	                            je 0x4006ac0	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a17	      0xbe00000000	                              mov esi, 0	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a1c	            0x31ff	                            xor edi, edi	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a1e	      0xe800000000	                          call 0x4006a23	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a23	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006a26	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_16
0x4006a29	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006a2b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006a30	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006a35	      0xe800000000	                          call 0x4006a3a	       104	stdio2.h	CALL_16
0x4006a3a	          0x83fd01	                              cmp ebp, 1	      9009	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	IF_19
0x4006a3d	            0x740a	                            je 0x4006a49	      9009	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	IF_19
0x4006a3f	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4006a44	      0xe800000000	                          call 0x4006a49	       104	stdio2.h	CALL_16
0x4006a49	        0x4183c401	                             add r12d, 1	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a4d	          0x4439e5	                           cmp ebp, r12d	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a50	     0xf8451010000	                            je 0x4006ba7	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006a56	    0x428d3ca50000	                        lea edi, [r12*4]	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4006a5e	      0x48037c2408	                add rdi, qword [rsp + 8]	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4006a63	      0xbe04000000	                              mov esi, 4	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4006a68	          0x4c01ef	                            add rdi, r13	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4006a6b	      0xe800000000	                          call 0x4006a70	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4006a70	            0x89c3	                            mov ebx, eax	      8997	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_64
0x4006a72	          0x4189c6	                           mov r14d, eax	      8996	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_63
0x4006a75	      0x25ffffff00	                       and eax, 0xffffff	      8998	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_65
0x4006a7a	          0xc1eb1c	                           shr ebx, 0x1c	      8997	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_64
0x4006a7d	        0x41c1ee1f	                          shr r14d, 0x1f	      8996	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_63
0x4006a81	          0x83e307	                              and ebx, 7	      8997	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_64
0x4006a84	          0x4439f8	                           cmp eax, r15d	      9000	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	IF_18
0x4006a87	     0xf834bffffff	                           jae 0x40069d8	      9000	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	IF_18
0x4006a8d	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4006a91	            0x89c1	                            mov ecx, eax	       104	stdio2.h	CALL_16
0x4006a93	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006a98	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006a9d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006a9f	      0xe800000000	                          call 0x4006aa4	       104	stdio2.h	CALL_16
0x4006aa4	      0xe949ffffff	                           jmp 0x40069f2	       104	stdio2.h	CALL_16
0x4006aa9	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4006ab0	      0xb801000000	                              mov eax, 1	      9017	dwarf.c	FUNCTION_86
0x4006ab5	      0xe98afdffff	                           jmp 0x4006844	      9017	dwarf.c	FUNCTION_86
0x4006aba	    0x660f1f440000	                    nop word [rax + rax]	      9017	dwarf.c	FUNCTION_86
0x4006ac0	      0xbe00000000	                              mov esi, 0	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006ac5	            0x31ff	                            xor edi, edi	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006ac7	      0xe800000000	                          call 0x4006acc	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006acc	      0xe952ffffff	                           jmp 0x4006a23	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006ad1	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4006ad6	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006adb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006ae0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006ae2	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x4006ae4	      0xe800000000	                          call 0x4006ae9	       104	stdio2.h	CALL_16
0x4006ae9	            0x31ff	                            xor edi, edi	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006aeb	      0xba05000000	                              mov edx, 5	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006af0	      0xbe00000000	                              mov esi, 0	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006af5	      0xe800000000	                          call 0x4006afa	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006afa	            0x89da	                            mov edx, ebx	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006afc	          0x4889c7	                            mov rdi, rax	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006aff	            0x89ee	                            mov esi, ebp	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006b01	            0x31c0	                            xor eax, eax	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006b03	      0xe800000000	                          call 0x4006b08	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4006b08	      0xe99afcffff	                           jmp 0x40067a7	      8984	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4006b0d	      0xba05000000	                              mov edx, 5	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b12	      0xbe00000000	                              mov esi, 0	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b17	            0x31ff	                            xor edi, edi	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b19	      0xe800000000	                          call 0x4006b1e	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b1e	          0x4489e2	                           mov edx, r12d	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b21	          0x4889c7	                            mov rdi, rax	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b24	          0x4489ee	                           mov esi, r13d	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b27	            0x31c0	                            xor eax, eax	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b29	      0xe800000000	                          call 0x4006b2e	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4006b2e	            0x31c0	                            xor eax, eax	      8865	dwarf.c	FUNCTION_86	IF_9
0x4006b30	      0xe90ffdffff	                           jmp 0x4006844	      8865	dwarf.c	FUNCTION_86	IF_9
0x4006b35	      0xba05000000	                              mov edx, 5	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4006b3a	      0xbe00000000	                              mov esi, 0	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4006b3f	            0x31ff	                            xor edi, edi	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4006b41	      0xe800000000	                          call 0x4006b46	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4006b46	          0x4889c7	                            mov rdi, rax	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4006b49	            0x31c0	                            xor eax, eax	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4006b4b	      0xe800000000	                          call 0x4006b50	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4006b50	            0x31c0	                            xor eax, eax	      8898	dwarf.c	FUNCTION_86	IF_12
0x4006b52	      0xe9edfcffff	                           jmp 0x4006844	      8898	dwarf.c	FUNCTION_86	IF_12
0x4006b57	      0xba05000000	                              mov edx, 5	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b5c	      0xbe00000000	                              mov esi, 0	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b61	            0x31ff	                            xor edi, edi	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b63	      0xe800000000	                          call 0x4006b68	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b68	          0x4489ea	                           mov edx, r13d	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b6b	          0x4889c7	                            mov rdi, rax	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b6e	          0x4489f6	                           mov esi, r14d	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b71	            0x31c0	                            xor eax, eax	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b73	      0xe800000000	                          call 0x4006b78	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4006b78	            0x31c0	                            xor eax, eax	      8875	dwarf.c	FUNCTION_86	IF_10
0x4006b7a	      0xe9c5fcffff	                           jmp 0x4006844	      8875	dwarf.c	FUNCTION_86	IF_10
0x4006b7f	      0xba05000000	                              mov edx, 5	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006b84	      0xbe00000000	                              mov esi, 0	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006b89	            0x31ff	                            xor edi, edi	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006b8b	      0xe800000000	                          call 0x4006b90	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006b90	          0x8b3424	                    mov esi, dword [rsp]	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006b93	          0x4889c7	                            mov rdi, rax	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006b96	          0x4489f2	                           mov edx, r14d	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006b99	            0x31c0	                            xor eax, eax	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006b9b	      0xe800000000	                          call 0x4006ba0	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4006ba0	            0x31c0	                            xor eax, eax	      8884	dwarf.c	FUNCTION_86	IF_11
0x4006ba2	      0xe99dfcffff	                           jmp 0x4006844	      8884	dwarf.c	FUNCTION_86	IF_11
0x4006ba7	      0x837c241001	               cmp dword [rsp + 0x10], 1	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4006bac	        0x8b5c2420	            mov ebx, dword [rsp + 0x20] 	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4006bb0	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4006bb5	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4006bba	     0xf85e7fbffff	                           jne 0x40067a7	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4006bc0	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4006bc5	      0xe800000000	                          call 0x4006bca	       104	stdio2.h	CALL_16
0x4006bca	      0xe9d8fbffff	                           jmp 0x40067a7	       104	stdio2.h	CALL_16
0x4006bcf	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006bd3	            0x85c0	                           test eax, eax	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006bd5	     0xf85c4fdffff	                           jne 0x400699f	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4006bdb	            0xebe3	                           jmp 0x4006bc0	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
parse_gnu_debuglink	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:CALL,2:functions,0	24
0x4000230	            0x4154	                                push r12	      9664	dwarf.c	FUNCTION_102
0x4000232	              0x55	                                push rbp	      9664	dwarf.c	FUNCTION_102
0x4000233	          0x4889f5	                            mov rbp, rsi	      9664	dwarf.c	FUNCTION_102
0x4000236	              0x53	                                push rbx	      9664	dwarf.c	FUNCTION_102
0x4000237	        0x4c8b6730	            mov r12, qword [rdi + 0x30] 	      9673	dwarf.c	FUNCTION_102	CALL_1
0x400023b	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	      9671	dwarf.c	FUNCTION_102
0x400023f	          0x4c89e6	                            mov rsi, r12	      9673	dwarf.c	FUNCTION_102	CALL_1
0x4000242	          0x4889df	                            mov rdi, rbx	      9673	dwarf.c	FUNCTION_102	CALL_1
0x4000245	      0xe800000000	                          call 0x400024a	      9673	dwarf.c	FUNCTION_102	CALL_1
0x400024a	          0x8d7804	                      lea edi, [rax + 4]	      9674	dwarf.c	FUNCTION_102
0x400024d	            0x31c0	                            xor eax, eax	      9674	dwarf.c	FUNCTION_102
0x400024f	          0x83e7fc	                     and edi, 0xfffffffc	      9674	dwarf.c	FUNCTION_102
0x4000252	          0x8d5704	                      lea edx, [rdi + 4]	      9675	dwarf.c	FUNCTION_102	IF_1
0x4000255	          0x4939d4	                            cmp r12, rdx	      9675	dwarf.c	FUNCTION_102	IF_1
0x4000258	            0x7215	                            jb 0x400026f	      9675	dwarf.c	FUNCTION_102	IF_1
0x400025a	          0x4801df	                            add rdi, rbx	      9678	dwarf.c	FUNCTION_102	CALL_2
0x400025d	      0xbe04000000	                              mov esi, 4	      9678	dwarf.c	FUNCTION_102	CALL_2
0x4000262	    0xff1500000000	                 call qword [0x04000268]	      9678	dwarf.c	FUNCTION_102	CALL_2
0x4000268	        0x48894500	                    mov qword [rbp], rax	      9678	dwarf.c	FUNCTION_102	CALL_2
0x400026c	          0x4889d8	                            mov rax, rbx	      9679	dwarf.c	FUNCTION_102
0x400026f	              0x5b	                                 pop rbx	      9680	dwarf.c	FUNCTION_102
0x4000270	              0x5d	                                 pop rbp	      9680	dwarf.c	FUNCTION_102
0x4000271	            0x415c	                                 pop r12	      9680	dwarf.c	FUNCTION_102
0x4000273	              0xc3	                                     ret	      9680	dwarf.c	FUNCTION_102
process_cu_tu_index	ELSE,11:WHILE,0:FOR,8:SWITCH,0:DO,0:IF,41:CALL,53:functions,0	1100
0x40028d0	            0x4157	                                push r15	      9101	dwarf.c	FUNCTION_91
0x40028d2	            0x4156	                                push r14	      9101	dwarf.c	FUNCTION_91
0x40028d4	            0x4155	                                push r13	      9101	dwarf.c	FUNCTION_91
0x40028d6	            0x4154	                                push r12	      9101	dwarf.c	FUNCTION_91
0x40028d8	              0x55	                                push rbp	      9101	dwarf.c	FUNCTION_91
0x40028d9	              0x53	                                push rbx	      9101	dwarf.c	FUNCTION_91
0x40028da	          0x4889fd	                            mov rbp, rdi	      9101	dwarf.c	FUNCTION_91
0x40028dd	    0x4881ecd80000	                           sub rsp, 0xd8	      9101	dwarf.c	FUNCTION_91
0x40028e4	        0x4c8b7f20	            mov r15, qword [rdi + 0x20] 	      9102	dwarf.c	FUNCTION_91
0x40028e8	    0x64488b042528	                mov rax, qword fs:[0x28]	      9101	dwarf.c	FUNCTION_91
0x40028f1	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      9101	dwarf.c	FUNCTION_91
0x40028f9	            0x31c0	                            xor eax, eax	      9101	dwarf.c	FUNCTION_91
0x40028fb	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      9103	dwarf.c	FUNCTION_91
0x40028ff	          0x4d85ff	                           test r15, r15	      9118	dwarf.c	FUNCTION_91	IF_1
0x4002902	        0x498d1c07	                    lea rbx, [r15 + rax]	      9103	dwarf.c	FUNCTION_91
0x4002906	     0xf84b4050000	                            je 0x4002ec0	      9118	dwarf.c	FUNCTION_91	IF_1
0x400290c	        0x4883f817	                           cmp rax, 0x17	      9124	dwarf.c	FUNCTION_91	IF_2
0x4002910	     0xf868a020000	                           jbe 0x4002ba0	      9124	dwarf.c	FUNCTION_91	IF_2
0x4002916	        0x4d8d6f04	                      lea r13, [r15 + 4]	      9131	dwarf.c	FUNCTION_91
0x400291a	          0x4189f6	                           mov r14d, esi	      9131	dwarf.c	FUNCTION_91
0x400291d	          0x4c39eb	                            cmp rbx, r13	      9131	dwarf.c	FUNCTION_91
0x4002920	     0xf869a000000	                           jbe 0x40029c0	      9131	dwarf.c	FUNCTION_91
0x4002926	      0xbe04000000	                              mov esi, 4	      9131	dwarf.c	FUNCTION_91
0x400292b	          0x4c89ff	                            mov rdi, r15	      9131	dwarf.c	FUNCTION_91
0x400292e	        0x4d8d6708	                      lea r12, [r15 + 8]	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002932	    0xff1500000000	                 call qword [0x04002938]	      9131	dwarf.c	FUNCTION_91
0x4002938	          0x83f801	                              cmp eax, 1	      9132	dwarf.c	FUNCTION_91	IF_3
0x400293b	        0x89442410	             mov dword [rsp + 0x10], eax	      9131	dwarf.c	FUNCTION_91
0x400293f	     0xf8613110000	                           jbe 0x4003a58	      9132	dwarf.c	FUNCTION_91	IF_3
0x4002945	          0x4c39e3	                            cmp rbx, r12	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002948	     0xf8772010000	                            ja 0x4002ac0	      9133	dwarf.c	FUNCTION_91	IF_3
0x400294e	          0x4c39eb	                            cmp rbx, r13	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002951	            0x7612	                           jbe 0x4002965	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002953	          0x4889de	                            mov rsi, rbx	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002956	          0x4c29ee	                            sub rsi, r13	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002959	          0x8d46ff	                      lea eax, [rsi - 1]	      9133	dwarf.c	FUNCTION_91	IF_3
0x400295c	          0x83f807	                              cmp eax, 7	      9133	dwarf.c	FUNCTION_91	IF_3
0x400295f	     0xf8660010000	                           jbe 0x4002ac5	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002965	        0x4d8d6f0c	                    lea r13, [r15 + 0xc]	      9134	dwarf.c	FUNCTION_91
0x4002969	          0x4c39eb	                            cmp rbx, r13	      9134	dwarf.c	FUNCTION_91
0x400296c	     0xf86d6010000	                           jbe 0x4002b48	      9134	dwarf.c	FUNCTION_91
0x4002972	          0x4c89e7	                            mov rdi, r12	      9134	dwarf.c	FUNCTION_91
0x4002975	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x4002979	      0xbe04000000	                              mov esi, 4	      9134	dwarf.c	FUNCTION_91
0x400297e	    0xff1500000000	                 call qword [0x04002984]	      9134	dwarf.c	FUNCTION_91
0x4002984	          0x4c39e3	                            cmp rbx, r12	      9135	dwarf.c	FUNCTION_91
0x4002987	        0x89442418	             mov dword [rsp + 0x18], eax	      9134	dwarf.c	FUNCTION_91
0x400298b	    0xc70424000000	                      mov dword [rsp], 0	      9134	dwarf.c	FUNCTION_91
0x4002992	     0xf8765010000	                            ja 0x4002afd	      9135	dwarf.c	FUNCTION_91
0x4002998	          0x4c39eb	                            cmp rbx, r13	      9135	dwarf.c	FUNCTION_91
0x400299b	            0x760e	                           jbe 0x40029ab	      9135	dwarf.c	FUNCTION_91
0x400299d	          0x4889de	                            mov rsi, rbx	      9135	dwarf.c	FUNCTION_91
0x40029a0	          0x4c29ee	                            sub rsi, r13	      9135	dwarf.c	FUNCTION_91
0x40029a3	          0x8d46ff	                      lea eax, [rsi - 1]	      9135	dwarf.c	FUNCTION_91
0x40029a6	          0x83f807	                              cmp eax, 7	      9135	dwarf.c	FUNCTION_91
0x40029a9	            0x766f	                           jbe 0x4002a1a	      9135	dwarf.c	FUNCTION_91
0x40029ab	            0x31c0	                            xor eax, eax	      9135	dwarf.c	FUNCTION_91
0x40029ad	          0x4531ed	                          xor r13d, r13d	      9135	dwarf.c	FUNCTION_91
0x40029b0	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      9135	dwarf.c	FUNCTION_91
0x40029b8	            0xeb78	                           jmp 0x4002a32	      9135	dwarf.c	FUNCTION_91
0x40029ba	    0x660f1f440000	                    nop word [rax + rax]	      9135	dwarf.c	FUNCTION_91
0x40029c0	          0x4939df	                            cmp r15, rbx	      9131	dwarf.c	FUNCTION_91
0x40029c3	     0xf8267010000	                            jb 0x4002b30	      9131	dwarf.c	FUNCTION_91
0x40029c9	        0x4d8d6708	                      lea r12, [r15 + 8]	      9131	dwarf.c	FUNCTION_91
0x40029cd	    0xc74424100000	               mov dword [rsp + 0x10], 0	      9131	dwarf.c	FUNCTION_91
0x40029d5	    0xc70424000000	                      mov dword [rsp], 0	      9108	dwarf.c	FUNCTION_91
0x40029dc	        0x4d8d6f0c	                    lea r13, [r15 + 0xc]	      9134	dwarf.c	FUNCTION_91
0x40029e0	          0x4c39eb	                            cmp rbx, r13	      9134	dwarf.c	FUNCTION_91
0x40029e3	     0xf87f5000000	                            ja 0x4002ade	      9134	dwarf.c	FUNCTION_91
0x40029e9	          0x4c39e3	                            cmp rbx, r12	      9134	dwarf.c	FUNCTION_91
0x40029ec	            0x7612	                           jbe 0x4002a00	      9134	dwarf.c	FUNCTION_91
0x40029ee	          0x4889de	                            mov rsi, rbx	      9134	dwarf.c	FUNCTION_91
0x40029f1	          0x4c29e6	                            sub rsi, r12	      9134	dwarf.c	FUNCTION_91
0x40029f4	          0x8d46ff	                      lea eax, [rsi - 1]	      9134	dwarf.c	FUNCTION_91
0x40029f7	          0x83f807	                              cmp eax, 7	      9134	dwarf.c	FUNCTION_91
0x40029fa	     0xf8664100000	                           jbe 0x4003a64	      9134	dwarf.c	FUNCTION_91
0x4002a00	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x4002a04	          0x4c39e3	                            cmp rbx, r12	      9135	dwarf.c	FUNCTION_91
0x4002a07	     0xf8603010000	                           jbe 0x4002b10	      9135	dwarf.c	FUNCTION_91
0x4002a0d	      0xbe04000000	                              mov esi, 4	      9135	dwarf.c	FUNCTION_91
0x4002a12	    0xc74424180000	               mov dword [rsp + 0x18], 0	      9135	dwarf.c	FUNCTION_91
0x4002a1a	          0x4c89ef	                            mov rdi, r13	      9135	dwarf.c	FUNCTION_91
0x4002a1d	    0xff1500000000	                 call qword [0x04002a23]	      9135	dwarf.c	FUNCTION_91
0x4002a23	        0x8944240c	              mov dword [rsp + 0xc], eax	      9135	dwarf.c	FUNCTION_91
0x4002a27	    0x448d2cc50000	                       lea r13d, [rax*8]	      9135	dwarf.c	FUNCTION_91
0x4002a2f	          0xc1e002	                              shl eax, 2	      9135	dwarf.c	FUNCTION_91
0x4002a32	        0x4b8d0c2c	                    lea rcx, [r12 + r13]	      9138	dwarf.c	FUNCTION_91
0x4002a36	          0x4c39e1	                            cmp rcx, r12	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a39	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      9138	dwarf.c	FUNCTION_91
0x4002a3e	        0x4c8d2c01	                    lea r13, [rcx + rax]	      9139	dwarf.c	FUNCTION_91
0x4002a42	            0x721c	                            jb 0x4002a60	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a44	          0x4d39ef	                            cmp r15, r13	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a47	            0x7717	                            ja 0x4002a60	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a49	          0x4c39e1	                            cmp rcx, r12	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a4c	     0xf850e010000	                           jne 0x4002b60	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a52	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a57	          0x4585c0	                           test r8d, r8d	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a5a	     0xf8400010000	                            je 0x4002b60	      9142	dwarf.c	FUNCTION_91	IF_4
0x4002a60	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a65	      0xba00000000	                              mov edx, 0	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a6a	    0x41b805000000	                              mov r8d, 5	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a70	      0xbe00000000	                              mov esi, 0	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a75	            0x31ff	                            xor edi, edi	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a77	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a7b	          0x4489f1	                           mov ecx, r14d	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a7e	      0xe800000000	                          call 0x4002a83	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a83	          0x4489f2	                           mov edx, r14d	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4002a86	          0x4889c7	                            mov rdi, rax	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002a89	          0x4889de	                            mov rsi, rbx	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002a8c	            0x31c0	                            xor eax, eax	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002a8e	      0xe800000000	                          call 0x4002a93	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002a93	            0x31c0	                            xor eax, eax	      9166	dwarf.c	FUNCTION_91	IF_7
0x4002a95	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	      9413	dwarf.c	FUNCTION_91
0x4002a9d	    0x644833142528	                xor rdx, qword fs:[0x28]	      9413	dwarf.c	FUNCTION_91
0x4002aa6	     0xf851f0f0000	                           jne 0x40039cb	      9413	dwarf.c	FUNCTION_91
0x4002aac	    0x4881c4d80000	                           add rsp, 0xd8	      9413	dwarf.c	FUNCTION_91
0x4002ab3	              0x5b	                                 pop rbx	      9413	dwarf.c	FUNCTION_91
0x4002ab4	              0x5d	                                 pop rbp	      9413	dwarf.c	FUNCTION_91
0x4002ab5	            0x415c	                                 pop r12	      9413	dwarf.c	FUNCTION_91
0x4002ab7	            0x415d	                                 pop r13	      9413	dwarf.c	FUNCTION_91
0x4002ab9	            0x415e	                                 pop r14	      9413	dwarf.c	FUNCTION_91
0x4002abb	            0x415f	                                 pop r15	      9413	dwarf.c	FUNCTION_91
0x4002abd	              0xc3	                                     ret	      9413	dwarf.c	FUNCTION_91
0x4002abe	            0x6690	                                     nop	      9413	dwarf.c	FUNCTION_91
0x4002ac0	      0xbe04000000	                              mov esi, 4	      9413	dwarf.c	FUNCTION_91
0x4002ac5	          0x4c89ef	                            mov rdi, r13	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002ac8	        0x4d8d6f0c	                    lea r13, [r15 + 0xc]	      9134	dwarf.c	FUNCTION_91
0x4002acc	    0xff1500000000	                 call qword [0x04002ad2]	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002ad2	          0x4c39eb	                            cmp rbx, r13	      9134	dwarf.c	FUNCTION_91
0x4002ad5	          0x890424	                    mov dword [rsp], eax	      9133	dwarf.c	FUNCTION_91	IF_3
0x4002ad8	     0xf860bffffff	                           jbe 0x40029e9	      9134	dwarf.c	FUNCTION_91
0x4002ade	          0x4c89e7	                            mov rdi, r12	      9134	dwarf.c	FUNCTION_91
0x4002ae1	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x4002ae5	      0xbe04000000	                              mov esi, 4	      9134	dwarf.c	FUNCTION_91
0x4002aea	    0xff1500000000	                 call qword [0x04002af0]	      9134	dwarf.c	FUNCTION_91
0x4002af0	          0x4939dc	                            cmp r12, rbx	      9135	dwarf.c	FUNCTION_91
0x4002af3	        0x89442418	             mov dword [rsp + 0x18], eax	      9134	dwarf.c	FUNCTION_91
0x4002af7	     0xf83a0feffff	                           jae 0x400299d	      9135	dwarf.c	FUNCTION_91
0x4002afd	      0xbe04000000	                              mov esi, 4	      9135	dwarf.c	FUNCTION_91
0x4002b02	      0xe913ffffff	                           jmp 0x4002a1a	      9135	dwarf.c	FUNCTION_91
0x4002b07	    0x660f1f840000	                    nop word [rax + rax]	      9135	dwarf.c	FUNCTION_91
0x4002b10	            0x31c0	                            xor eax, eax	      9135	dwarf.c	FUNCTION_91
0x4002b12	          0x4531ed	                          xor r13d, r13d	      9135	dwarf.c	FUNCTION_91
0x4002b15	    0xc74424180000	               mov dword [rsp + 0x18], 0	      9135	dwarf.c	FUNCTION_91
0x4002b1d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      9135	dwarf.c	FUNCTION_91
0x4002b25	      0xe908ffffff	                           jmp 0x4002a32	      9135	dwarf.c	FUNCTION_91
0x4002b2a	    0x660f1f440000	                    nop word [rax + rax]	      9135	dwarf.c	FUNCTION_91
0x4002b30	          0x8d50ff	                      lea edx, [rax - 1]	      9131	dwarf.c	FUNCTION_91
0x4002b33	          0x83fa07	                              cmp edx, 7	      9131	dwarf.c	FUNCTION_91
0x4002b36	     0xf878dfeffff	                            ja 0x40029c9	      9131	dwarf.c	FUNCTION_91
0x4002b3c	            0x89c6	                            mov esi, eax	      9131	dwarf.c	FUNCTION_91
0x4002b3e	      0xe9e8fdffff	                           jmp 0x400292b	      9131	dwarf.c	FUNCTION_91
0x4002b43	       0xf1f440000	                   nop dword [rax + rax]	      9131	dwarf.c	FUNCTION_91
0x4002b48	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x4002b4c	    0xc70424000000	                      mov dword [rsp], 0	      9134	dwarf.c	FUNCTION_91
0x4002b53	          0x4c39e3	                            cmp rbx, r12	      9135	dwarf.c	FUNCTION_91
0x4002b56	            0x76b8	                           jbe 0x4002b10	      9135	dwarf.c	FUNCTION_91
0x4002b58	      0xe9b0feffff	                           jmp 0x4002a0d	      9135	dwarf.c	FUNCTION_91
0x4002b5d	           0xf1f00	                         nop dword [rax]	      9135	dwarf.c	FUNCTION_91
0x4002b60	          0x4585f6	                         test r14d, r14d	      9151	dwarf.c	FUNCTION_91	IF_5
0x4002b63	            0x756b	                           jne 0x4002bd0	      9151	dwarf.c	FUNCTION_91	IF_5
0x4002b65	          0x4c39eb	                            cmp rbx, r13	      9162	dwarf.c	FUNCTION_91	IF_7
0x4002b68	     0xf8292010000	                            jb 0x4002d00	      9162	dwarf.c	FUNCTION_91	IF_7
0x4002b6e	      0x837c241001	               cmp dword [rsp + 0x10], 1	      9169	dwarf.c	FUNCTION_91	IF_8
0x4002b73	     0xf8407010000	                            je 0x4002c80	      9169	dwarf.c	FUNCTION_91	IF_8
0x4002b79	      0x837c241002	               cmp dword [rsp + 0x10], 2	      9220	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002b7e	     0xf849c010000	                            je 0x4002d20	      9220	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002b84	          0x4585f6	                         test r14d, r14d	      9406	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4002b87	     0xf854b030000	                           jne 0x4002ed8	      9406	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4002b8d	      0xb801000000	                              mov eax, 1	      9412	dwarf.c	FUNCTION_91
0x4002b92	      0xe9fefeffff	                           jmp 0x4002a95	      9412	dwarf.c	FUNCTION_91
0x4002b97	    0x660f1f840000	                    nop word [rax + rax]	      9412	dwarf.c	FUNCTION_91
0x4002ba0	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002ba4	      0xba05000000	                              mov edx, 5	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002ba9	      0xbe00000000	                              mov esi, 0	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002bae	            0x31ff	                            xor edi, edi	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002bb0	      0xe800000000	                          call 0x4002bb5	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002bb5	          0x4889de	                            mov rsi, rbx	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002bb8	          0x4889c7	                            mov rdi, rax	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002bbb	            0x31c0	                            xor eax, eax	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002bbd	      0xe800000000	                          call 0x4002bc2	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4002bc2	            0x31c0	                            xor eax, eax	      9128	dwarf.c	FUNCTION_91	IF_2
0x4002bc4	      0xe9ccfeffff	                           jmp 0x4002a95	      9128	dwarf.c	FUNCTION_91	IF_2
0x4002bc9	     0xf1f80000000	                         nop dword [rax]	      9128	dwarf.c	FUNCTION_91	IF_2
0x4002bd0	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      9153	dwarf.c	FUNCTION_91	IF_5	CALL_7
0x4002bd4	        0x488d7518	                   lea rsi, [rbp + 0x18]	      9153	dwarf.c	FUNCTION_91	IF_5	CALL_7
0x4002bd8	      0xe873ebffff	  call sym.introduce.isra.5.constprop.33	      9153	dwarf.c	FUNCTION_91	IF_5	CALL_7
0x4002bdd	            0x31ff	                            xor edi, edi	      9155	dwarf.c	FUNCTION_91	IF_5	CALL_8
0x4002bdf	      0xba05000000	                              mov edx, 5	      9155	dwarf.c	FUNCTION_91	IF_5	CALL_8
0x4002be4	      0xbe00000000	                              mov esi, 0	      9155	dwarf.c	FUNCTION_91	IF_5	CALL_8
0x4002be9	      0xe800000000	                          call 0x4002bee	      9155	dwarf.c	FUNCTION_91	IF_5	CALL_8
0x4002bee	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4002bf3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002bf6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002bfb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002bfd	          0x4489fa	                           mov edx, r15d	       104	stdio2.h	CALL_16
0x4002c00	      0xe800000000	                          call 0x4002c05	       104	stdio2.h	CALL_16
0x4002c05	        0x4183ff01	                             cmp r15d, 1	      9156	dwarf.c	FUNCTION_91	IF_5	IF_6
0x4002c09	            0x7623	                           jbe 0x4002c2e	      9156	dwarf.c	FUNCTION_91	IF_5	IF_6
0x4002c0b	      0xba05000000	                              mov edx, 5	      9157	dwarf.c	FUNCTION_91	IF_5	CALL_9
0x4002c10	      0xbe00000000	                              mov esi, 0	      9157	dwarf.c	FUNCTION_91	IF_5	CALL_9
0x4002c15	            0x31ff	                            xor edi, edi	      9157	dwarf.c	FUNCTION_91	IF_5	CALL_9
0x4002c17	      0xe800000000	                          call 0x4002c1c	      9157	dwarf.c	FUNCTION_91	IF_5	CALL_9
0x4002c1c	          0x8b1424	                    mov edx, dword [rsp]	       104	stdio2.h	CALL_16
0x4002c1f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002c22	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002c27	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002c29	      0xe800000000	                          call 0x4002c2e	       104	stdio2.h	CALL_16
0x4002c2e	            0x31ff	                            xor edi, edi	      9158	dwarf.c	FUNCTION_91	IF_5	CALL_10
0x4002c30	      0xba05000000	                              mov edx, 5	      9158	dwarf.c	FUNCTION_91	IF_5	CALL_10
0x4002c35	      0xbe00000000	                              mov esi, 0	      9158	dwarf.c	FUNCTION_91	IF_5	CALL_10
0x4002c3a	      0xe800000000	                          call 0x4002c3f	      9158	dwarf.c	FUNCTION_91	IF_5	CALL_10
0x4002c3f	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4002c43	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002c46	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002c4b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002c4d	      0xe800000000	                          call 0x4002c52	       104	stdio2.h	CALL_16
0x4002c52	            0x31ff	                            xor edi, edi	      9159	dwarf.c	FUNCTION_91	IF_5	CALL_11
0x4002c54	      0xba05000000	                              mov edx, 5	      9159	dwarf.c	FUNCTION_91	IF_5	CALL_11
0x4002c59	      0xbe00000000	                              mov esi, 0	      9159	dwarf.c	FUNCTION_91	IF_5	CALL_11
0x4002c5e	      0xe800000000	                          call 0x4002c63	      9159	dwarf.c	FUNCTION_91	IF_5	CALL_11
0x4002c63	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       104	stdio2.h	CALL_16
0x4002c67	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002c6a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002c6f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002c71	      0xe800000000	                          call 0x4002c76	       104	stdio2.h	CALL_16
0x4002c76	      0xe9eafeffff	                           jmp 0x4002b65	       104	stdio2.h	CALL_16
0x4002c7b	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x4002c80	          0x4585f6	                         test r14d, r14d	      9171	dwarf.c	FUNCTION_91	IF_8	IF_9
0x4002c83	     0xf84ff020000	                            je 0x4002f88	      9171	dwarf.c	FUNCTION_91	IF_8	IF_9
0x4002c89	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002c8d	            0x85f6	                           test esi, esi	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002c8f	            0x745f	                            je 0x4002cf0	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002c91	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002c96	            0x31c0	                            xor eax, eax	      9135	dwarf.c	FUNCTION_91
0x4002c98	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002c9d	          0x4c89e7	                            mov rdi, r12	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002ca0	        0x4c892c24	                    mov qword [rsp], r13	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002ca4	            0x89c5	                            mov ebp, eax	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002ca6	        0x4983c704	                              add r15, 4	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002caa	        0x4c8d6f08	                      lea r13, [rdi + 8]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cae	        0x4d8d67fc	                      lea r12, [r15 - 4]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cb2	          0x4c39eb	                            cmp rbx, r13	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cb5	     0xf83d5000000	                           jae 0x4002d90	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cbb	    0x48c744247000	               mov qword [rsp + 0x70], 0	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cc4	    0x48c744247800	               mov qword [rsp + 0x78], 0	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002ccd	           0xf1f00	                         nop dword [rax]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cd0	          0x83c501	                              add ebp, 1	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cd3	        0x4983c704	                              add r15, 4	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cd7	        0x396c240c	              cmp dword [rsp + 0xc], ebp	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cdb	          0x4c89ef	                            mov rdi, r13	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002cde	            0x77ca	                            ja 0x4002caa	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002ce0	          0x4585f6	                         test r14d, r14d	      9409	dwarf.c	FUNCTION_91	IF_41
0x4002ce3	     0xf84a4feffff	                            je 0x4002b8d	      9409	dwarf.c	FUNCTION_91	IF_41
0x4002ce9	     0xf1f80000000	                         nop dword [rax]	      9409	dwarf.c	FUNCTION_91	IF_41
0x4002cf0	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4002cf5	      0xe800000000	                          call 0x4002cfa	       104	stdio2.h	CALL_16
0x4002cfa	      0xe98efeffff	                           jmp 0x4002b8d	       104	stdio2.h	CALL_16
0x4002cff	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x4002d00	      0xba05000000	                              mov edx, 5	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002d05	      0xbe00000000	                              mov esi, 0	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002d0a	            0x31ff	                            xor edi, edi	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002d0c	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002d10	      0xe800000000	                          call 0x4002d15	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002d15	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002d19	      0xe968fdffff	                           jmp 0x4002a86	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002d1e	            0x6690	                                     nop	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4002d20	        0x448b1424	                   mov r10d, dword [rsp]	      9226	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002d24	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d28	      0xb910000000	                           mov ecx, 0x10	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d2d	      0xbf00000000	                              mov edi, 0	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d32	          0x4489d0	                           mov eax, r10d	      9226	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002d35	          0x4889ee	                            mov rsi, rbp	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d38	          0xc1e002	                              shl eax, 2	      9226	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002d3b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d3d	        0x89442458	             mov dword [rsp + 0x58], eax	      9226	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002d41	           0xf92c2	                                 setb dl	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d44	           0xf97c1	                                 seta cl	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d47	            0x29d1	                            sub ecx, edx	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d49	           0xfbed1	                           movsx edx, cl	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d4c	        0x8954245c	             mov dword [rsp + 0x5c], edx	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4002d50	          0x4c89ea	                            mov rdx, r13	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d53	          0x4801c2	                            add rdx, rax	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d56	      0x4889542450	             mov qword [rsp + 0x50], rdx	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d5b	            0x720d	                            jb 0x4002d6a	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d5d	        0x48c1f802	                              sar rax, 2	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d61	          0x4139c2	                           cmp r10d, eax	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d64	     0xf8476020000	                            je 0x4002fe0	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d6a	      0xba05000000	                              mov edx, 5	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4002d6f	      0xbe00000000	                              mov esi, 0	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4002d74	            0x31ff	                            xor edi, edi	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4002d76	      0xe800000000	                          call 0x4002d7b	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4002d7b	          0x8b3424	                    mov esi, dword [rsp]	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4002d7e	          0x4889c7	                            mov rdi, rax	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4002d81	            0x31c0	                            xor eax, eax	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4002d83	      0xe800000000	                          call 0x4002d88	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4002d88	            0x31c0	                            xor eax, eax	      9241	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d8a	      0xe906fdffff	                           jmp 0x4002a95	      9241	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d8f	              0x90	                                     nop	      9241	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4002d90	      0x488d542478	                   lea rdx, [rsp + 0x78]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002d95	      0x488d742470	                   lea rsi, [rsp + 0x70]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002d9a	      0xe800000000	                          call 0x4002d9f	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002d9f	    0x48837c247000	               cmp qword [rsp + 0x70], 0	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002da5	     0xf849c0c0000	                            je 0x4003a47	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002dab	          0x4c39fb	                            cmp rbx, r15	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002dae	      0xbe04000000	                              mov esi, 4	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002db3	     0xf86df000000	                           jbe 0x4002e98	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002db9	          0x4c89e7	                            mov rdi, r12	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002dbc	    0xff1500000000	                 call qword [0x04002dc2]	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002dc2	    0x8d3c85000000	                        lea edi, [rax*4]	      9182	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002dc9	        0x48033c24	                    add rdi, qword [rsp]	      9184	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x4002dcd	          0x4989fc	                            mov r12, rdi	      9184	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x4002dd0	     0xf8226090000	                            jb 0x40036fc	      9184	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x4002dd6	          0x4585f6	                         test r14d, r14d	      9190	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12
0x4002dd9	     0xf8529010000	                           jne 0x4002f08	      9190	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12
0x4002ddf	          0x4c39e3	                            cmp rbx, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002de2	     0xf8693000000	                           jbe 0x4002e7b	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002de8	          0x4c89e7	                            mov rdi, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002deb	       0xf1f440000	                   nop dword [rax + rax]	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002df0	        0x4c8d6704	                      lea r12, [rdi + 4]	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002df4	          0x4c39e3	                            cmp rbx, r12	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002df7	     0xf87f30b0000	                            ja 0x40039f0	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002dfd	          0x4839fb	                            cmp rbx, rdi	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e00	            0x772e	                            ja 0x4002e30	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e02	    0x8b0500000000	            mov eax, dword [0x04002e08] 	      9054	dwarf.c	FUNCTION_89	IF_1
0x4002e08	    0x3b0500000000	            cmp eax, dword [0x04002e0e] 	      9054	dwarf.c	FUNCTION_89	IF_1
0x4002e0e	     0xf833c050000	                           jae 0x4003350	      9054	dwarf.c	FUNCTION_89	IF_1
0x4002e14	          0x8d5001	                      lea edx, [rax + 1]	      9059	dwarf.c	FUNCTION_89
0x4002e17	    0x891500000000	            mov dword [0x04002e1d], edx 	      9059	dwarf.c	FUNCTION_89
0x4002e1d	    0x488b15000000	            mov rdx, qword [0x04002e24] 	      9059	dwarf.c	FUNCTION_89
0x4002e24	    0xc70482000000	              mov dword [rdx + rax*4], 0	      9059	dwarf.c	FUNCTION_89
0x4002e2b	      0xe9a0feffff	                           jmp 0x4002cd0	      9059	dwarf.c	FUNCTION_89
0x4002e30	          0x4889d8	                            mov rax, rbx	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e33	          0x4829f8	                            sub rax, rdi	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e36	            0x89c6	                            mov esi, eax	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e38	          0x83e801	                              sub eax, 1	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e3b	          0x83f807	                              cmp eax, 7	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e3e	            0x77c2	                            ja 0x4002e02	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e40	    0xff1500000000	                 call qword [0x04002e46]	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002e46	            0x85c0	                           test eax, eax	      9203	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_14
0x4002e48	            0x74b8	                            je 0x4002e02	      9203	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_14
0x4002e4a	    0x8b1500000000	            mov edx, dword [0x04002e50] 	      9043	dwarf.c	FUNCTION_88	IF_1
0x4002e50	    0x391500000000	            cmp dword [0x04002e56], edx 	      9043	dwarf.c	FUNCTION_88	IF_1
0x4002e56	     0xf86740b0000	                           jbe 0x40039d0	      9043	dwarf.c	FUNCTION_88	IF_1
0x4002e5c	          0x8d4a01	                      lea ecx, [rdx + 1]	      9048	dwarf.c	FUNCTION_88
0x4002e5f	    0x890d00000000	            mov dword [0x04002e65], ecx 	      9048	dwarf.c	FUNCTION_88
0x4002e65	    0x488b0d000000	            mov rcx, qword [0x04002e6c] 	      9048	dwarf.c	FUNCTION_88
0x4002e6c	          0x890491	            mov dword [rcx + rdx*4], eax	      9048	dwarf.c	FUNCTION_88
0x4002e6f	          0x4c39e3	                            cmp rbx, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002e72	          0x4c89e7	                            mov rdi, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002e75	     0xf8775ffffff	                            ja 0x4002df0	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002e7b	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002e80	      0xba05000000	                              mov edx, 5	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4002e85	      0xbe00000000	                              mov esi, 0	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4002e8a	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4002e8e	      0xe91bfdffff	                           jmp 0x4002bae	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4002e93	       0xf1f440000	                   nop dword [rax + rax]	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4002e98	          0x4c39e3	                            cmp rbx, r12	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002e9b	            0x7612	                           jbe 0x4002eaf	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002e9d	          0x4889de	                            mov rsi, rbx	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002ea0	          0x4c29e6	                            sub rsi, r12	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002ea3	          0x8d46ff	                      lea eax, [rsi - 1]	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002ea6	          0x83f807	                              cmp eax, 7	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002ea9	     0xf860affffff	                           jbe 0x4002db9	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002eaf	        0x4c8b2424	                    mov r12, qword [rsp]	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002eb3	      0xe91effffff	                           jmp 0x4002dd6	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002eb8	     0xf1f84000000	                   nop dword [rax + rax]	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4002ec0	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x4002ec4	      0xba05000000	                              mov edx, 5	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x4002ec9	      0xbe00000000	                              mov esi, 0	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x4002ece	      0xe9dbfcffff	                           jmp 0x4002bae	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x4002ed3	       0xf1f440000	                   nop dword [rax + rax]	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x4002ed8	            0x31ff	                            xor edi, edi	      9407	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4002eda	      0xba05000000	                              mov edx, 5	      9407	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4002edf	      0xbe00000000	                              mov esi, 0	      9407	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4002ee4	      0xe800000000	                          call 0x4002ee9	      9407	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4002ee9	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4002eed	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002ef0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002ef5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002ef7	      0xe800000000	                          call 0x4002efc	       104	stdio2.h	CALL_16
0x4002efc	      0xe9effdffff	                           jmp 0x4002cf0	       104	stdio2.h	CALL_16
0x4002f01	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4002f08	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f0d	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f12	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f1a	      0xe831eaffff	    call sym.dwarf_vmatoa64.constprop.29	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f1f	            0x31ff	                            xor edi, edi	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f21	      0xba05000000	                              mov edx, 5	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f26	      0xbe00000000	                              mov esi, 0	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f2b	      0x4889442418	             mov qword [rsp + 0x18], rax	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f30	      0xe800000000	                          call 0x4002f35	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4002f35	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4002f3a	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002f3d	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x4002f3f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002f41	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002f46	      0xe800000000	                          call 0x4002f4b	       104	stdio2.h	CALL_16
0x4002f4b	          0x4c39e3	                            cmp rbx, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002f4e	     0xf8627ffffff	                           jbe 0x4002e7b	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002f54	          0x4c89e7	                            mov rdi, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002f57	    0x660f1f840000	                    nop word [rax + rax]	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002f60	        0x4c8d6704	                      lea r12, [rdi + 4]	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4002f64	          0x4c39e3	                            cmp rbx, r12	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002f67	     0xf87d30a0000	                            ja 0x4003a40	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002f6d	          0x4839fb	                            cmp rbx, rdi	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002f70	     0xf87840a0000	                            ja 0x40039fa	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4002f76	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4002f7b	      0xe800000000	                          call 0x4002f80	       104	stdio2.h	CALL_16
0x4002f80	      0xe94bfdffff	                           jmp 0x4002cd0	       104	stdio2.h	CALL_16
0x4002f85	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4002f88	          0x4889da	                            mov rdx, rbx	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4002f8b	    0x488b3d000000	            mov rdi, qword [0x04002f92] 	      9025	dwarf.c	FUNCTION_87	IF_1
0x4002f92	          0x4c29ea	                            sub rdx, r13	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4002f95	        0x488d4203	                      lea rax, [rdx + 3]	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4002f99	          0x4885d2	                           test rdx, rdx	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4002f9c	        0x480f49c2	                         cmovns rax, rdx	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4002fa0	        0x48c1f802	                              sar rax, 2	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4002fa4	          0x4885ff	                           test rdi, rdi	      9025	dwarf.c	FUNCTION_87	IF_1
0x4002fa7	     0xf8470090000	                            je 0x400391d	      9025	dwarf.c	FUNCTION_87	IF_1
0x4002fad	     0x30500000000	             add eax, dword [0x04002fb3]	      9034	dwarf.c	FUNCTION_87	ELSE_1
0x4002fb3	    0x488d34850000	                        lea rsi, [rax*4]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4002fbb	    0x890500000000	            mov dword [0x04002fc1], eax 	      9034	dwarf.c	FUNCTION_87	ELSE_1
0x4002fc1	      0xe800000000	                          call 0x4002fc6	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4002fc6	    0x488905000000	            mov qword [0x04002fcd], rax 	      9035	dwarf.c	FUNCTION_87	ELSE_1	CALL_2
0x4002fcd	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002fd1	            0x85c9	                           test ecx, ecx	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002fd3	     0xf85b8fcffff	                           jne 0x4002c91	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002fd9	      0xe9affbffff	                           jmp 0x4002b8d	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002fde	            0x6690	                                     nop	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4002fe0	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002fe4	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002fe9	       0xfaf442418	            imul eax, dword [rsp + 0x18]	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002fee	          0x4801c2	                            add rdx, rax	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002ff1	          0x4801d0	                            add rax, rdx	      9244	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x4002ff4	      0x4889542460	             mov qword [rsp + 0x60], rdx	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4002ff9	          0x4839c3	                            cmp rbx, rax	      9244	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x4002ffc	     0xf82f6080000	                            jb 0x40038f8	      9244	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x4003002	          0x4585f6	                         test r14d, r14d	      9251	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003005	     0xf8513070000	                           jne 0x400371e	      9251	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x400300b	        0x8b54245c	            mov edx, dword [rsp + 0x5c] 	      9259	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x400300f	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      9261	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x4003013	            0x85d2	                           test edx, edx	      9259	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x4003015	     0xf85c0060000	                           jne 0x40036db	      9259	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x400301b	      0xbe88000000	                           mov esi, 0x88	      9549	dwarf.c	FUNCTION_99	CALL_4
0x4003020	    0x893d00000000	            mov dword [0x04003026], edi 	      9261	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x4003026	      0xe800000000	                          call 0x400302b	      9549	dwarf.c	FUNCTION_99	CALL_4
0x400302b	      0x4889442448	             mov qword [rsp + 0x48], rax	      9549	dwarf.c	FUNCTION_99	CALL_4
0x4003030	    0x488905000000	            mov qword [0x04003037], rax 	      9262	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21	CALL_31
0x4003037	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400303b	            0x85ff	                           test edi, edi	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400303d	     0xf843b030000	                            je 0x400337e	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003043	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003048	          0x4d89e0	                             mov r8, r12	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x400304b	    0xc74424280000	               mov dword [rsp + 0x28], 0	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003053	      0x4c89642468	             mov qword [rsp + 0x68], r12	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003058	            0xeb36	                           jmp 0x4003090	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x400305a	    0x660f1f440000	                    nop word [rax + rax]	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003060	          0x4839dd	                            cmp rbp, rbx	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003063	            0x730e	                           jae 0x4003073	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003065	          0x4889de	                            mov rsi, rbx	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003068	          0x4829ee	                            sub rsi, rbp	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400306b	          0x8d46ff	                      lea eax, [rsi - 1]	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400306e	          0x83f807	                              cmp eax, 7	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003071	            0x7654	                           jbe 0x40030c7	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003073	      0x8344242801	               add dword [rsp + 0x28], 1	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003078	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400307d	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003081	        0x3944240c	              cmp dword [rsp + 0xc], eax	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003085	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400308a	     0xf86e0020000	                           jbe 0x4003370	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003090	        0x498d4008	                       lea rax, [r8 + 8]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003094	          0x4839c3	                            cmp rbx, rax	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003097	      0x4889442438	             mov qword [rsp + 0x38], rax	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400309c	     0xf83de010000	                           jae 0x4003280	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030a2	    0x48c744247000	               mov qword [rsp + 0x70], 0	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030ab	    0x48c744247800	               mov qword [rsp + 0x78], 0	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030b4	        0x488d4504	                      lea rax, [rbp + 4]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030b8	          0x4839c3	                            cmp rbx, rax	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030bb	      0x4889442440	             mov qword [rsp + 0x40], rax	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030c0	            0x769e	                           jbe 0x4003060	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030c2	      0xbe04000000	                              mov esi, 4	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030c7	      0x4c89442410	              mov qword [rsp + 0x10], r8	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030cc	          0x4889ef	                            mov rdi, rbp	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030cf	    0xff1500000000	                 call qword [0x040030d5]	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030d5	            0x85c0	                           test eax, eax	      9288	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40030d7	          0x4989c7	                            mov r15, rax	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030da	            0x89c1	                            mov ecx, eax	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40030dc	            0x7495	                            je 0x4003073	      9288	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40030de	        0x3b442418	            cmp eax, dword [rsp + 0x18] 	      9291	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x40030e2	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      9291	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x40030e7	     0xf875b080000	                            ja 0x4003948	      9291	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x40030ed	          0x4585f6	                         test r14d, r14d	      9298	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25
0x40030f0	     0xf85b2010000	                           jne 0x40032a8	      9298	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25
0x40030f6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      9303	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	IF_26
0x40030fb	          0x4839c3	                            cmp rbx, rax	      9303	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	IF_26
0x40030fe	     0xf8689080000	                           jbe 0x400398d	      9303	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	IF_26
0x4003104	        0x418d57ff	                      lea edx, [r15 - 1]	        53	string3.h	FUNCTION_129	CALL_3
0x4003108	    0x418dafffffff	             lea ebp, [r15 + 0x3fffffff]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x400310f	        0x488b70f8	                mov rsi, qword [rax - 8]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x4003113	       0xfaf6c2458	            imul ebp, dword [rsp + 0x58]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x4003118	          0x4889d7	                            mov rdi, rdx	        53	string3.h	FUNCTION_129	CALL_3
0x400311b	          0x4889d0	                            mov rax, rdx	        53	string3.h	FUNCTION_129	CALL_3
0x400311e	        0x48c1e707	                              shl rdi, 7	        53	string3.h	FUNCTION_129	CALL_3
0x4003122	      0x48036c2450	             add rbp, qword [rsp + 0x50]	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x4003127	        0x488d14d7	                  lea rdx, [rdi + rdx*8]	        53	string3.h	FUNCTION_129	CALL_3
0x400312b	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_129	CALL_3
0x4003130	        0x48893417	              mov qword [rdi + rdx], rsi	        53	string3.h	FUNCTION_129	CALL_3
0x4003134	     0xf82e6010000	                            jb 0x4003320	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x400313a	          0x4839eb	                            cmp rbx, rbp	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x400313d	     0xf82dd010000	                            jb 0x4003320	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x4003143	          0x8b1424	                    mov edx, dword [rsp]	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003146	            0x85d2	                           test edx, edx	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003148	     0xf8425ffffff	                            je 0x4003073	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400314e	          0x4889c2	                            mov rdx, rax	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003151	        0x48c1e207	                              shl rdx, 7	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003155	        0x4c8d3cc2	                  lea r15, [rdx + rax*8]	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003159	      0x4c037c2448	             add r15, qword [rsp + 0x48]	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x400315e	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003163	          0x4531ff	                          xor r15d, r15d	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003166	          0x4589fc	                          mov r12d, r15d	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003169	          0x4989ef	                            mov r15, rbp	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x400316c	         0xf1f4000	                         nop dword [rax]	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003170	    0x428d2ca50000	                        lea ebp, [r12*4]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003178	        0x488d4d04	                      lea rcx, [rbp + 4]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400317c	        0x498d040f	                    lea rax, [r15 + rcx]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003180	          0x4839c3	                            cmp rbx, rax	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003183	            0x7773	                            ja 0x40031f8	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003185	        0x498d3c2f	                    lea rdi, [r15 + rbp]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003189	            0x31d2	                            xor edx, edx	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400318b	          0x4839fb	                            cmp rbx, rdi	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400318e	            0x760e	                           jbe 0x400319e	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003190	          0x4889de	                            mov rsi, rbx	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003193	          0x4829fe	                            sub rsi, rdi	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003196	          0x8d46ff	                      lea eax, [rsi - 1]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003199	          0x83f807	                              cmp eax, 7	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400319c	            0x7663	                           jbe 0x4003201	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400319e	          0x4585f6	                         test r14d, r14d	      9328	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	IF_29
0x40031a1	            0x7575	                           jne 0x4003218	      9328	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	IF_29
0x40031a3	          0x4c01e9	                            add rcx, r13	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031a6	          0x4839cb	                            cmp rbx, rcx	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031a9	     0xf8781000000	                            ja 0x4003230	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031af	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031b4	          0x4839fb	                            cmp rbx, rdi	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031b7	            0x760e	                           jbe 0x40031c7	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031b9	          0x4889de	                            mov rsi, rbx	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031bc	          0x4829fe	                            sub rsi, rdi	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031bf	          0x8d46ff	                      lea eax, [rsi - 1]	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031c2	          0x83f807	                              cmp eax, 7	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031c5	            0x7673	                           jbe 0x400323a	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031c7	            0x31c0	                            xor eax, eax	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40031c9	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x40031ce	      0x488954c608	        mov qword [rsi + rax*8 + 8], rdx	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x40031d3	        0x4183c401	                             add r12d, 1	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40031d7	        0x44392424	                   cmp dword [rsp], r12d	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40031db	            0x7793	                            ja 0x4003170	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40031dd	          0x4585f6	                         test r14d, r14d	      9342	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_31
0x40031e0	     0xf848dfeffff	                            je 0x4003073	      9342	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_31
0x40031e6	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40031eb	      0xe800000000	                          call 0x40031f0	       104	stdio2.h	CALL_16
0x40031f0	      0xe97efeffff	                           jmp 0x4003073	       104	stdio2.h	CALL_16
0x40031f5	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40031f8	        0x498d3c2f	                    lea rdi, [r15 + rbp]	       104	stdio2.h	CALL_16
0x40031fc	      0xbe04000000	                              mov esi, 4	       104	stdio2.h	CALL_16
0x4003201	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       104	stdio2.h	CALL_16
0x4003206	    0xff1500000000	                 call qword [0x0400320c]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400320c	          0x4585f6	                         test r14d, r14d	      9328	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	IF_29
0x400320f	            0x89c2	                            mov edx, eax	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003211	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003216	            0x748b	                            je 0x40031a3	      9328	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	IF_29
0x4003218	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400321d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003222	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003224	      0xe800000000	                          call 0x4003229	       104	stdio2.h	CALL_16
0x4003229	            0xeba8	                           jmp 0x40031d3	       104	stdio2.h	CALL_16
0x400322b	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x4003230	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	       104	stdio2.h	CALL_16
0x4003235	      0xbe04000000	                              mov esi, 4	       104	stdio2.h	CALL_16
0x400323a	        0x89542410	             mov dword [rsp + 0x10], edx	       104	stdio2.h	CALL_16
0x400323e	    0xff1500000000	                 call qword [0x04003244]	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003244	          0x4889c5	                            mov rbp, rax	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003247	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      9335	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	IF_30
0x400324b	            0x89c0	                            mov eax, eax	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x400324d	          0x83fd07	                              cmp ebp, 7	      9335	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	IF_30
0x4003250	     0xf8673ffffff	                           jbe 0x40031c9	      9335	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	IF_30
0x4003256	            0x31ff	                            xor edi, edi	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003258	      0xba05000000	                              mov edx, 5	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x400325d	      0xbe00000000	                              mov esi, 0	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003262	      0xe800000000	                          call 0x4003267	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003267	            0x89ee	                            mov esi, ebp	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003269	          0x4889c7	                            mov rdi, rax	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x400326c	            0x31c0	                            xor eax, eax	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x400326e	      0xe800000000	                          call 0x4003273	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003273	      0xe95bffffff	                           jmp 0x40031d3	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003278	     0xf1f84000000	                   nop dword [rax + rax]	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003280	      0x488d542478	                   lea rdx, [rsp + 0x78]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003285	      0x488d742470	                   lea rsi, [rsp + 0x70]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400328a	          0x4c89c7	                             mov rdi, r8	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400328d	      0x4c89442410	              mov qword [rsp + 0x10], r8	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003292	      0xe800000000	                          call 0x4003297	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003297	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400329c	      0xe913feffff	                           jmp 0x40030b4	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40032a1	     0xf1f80000000	                         nop dword [rax]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40032a8	    0x8da8ffffff3f	             lea ebp, [rax + 0x3fffffff]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40032ae	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40032b3	       0xfaf6c2458	            imul ebp, dword [rsp + 0x58]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40032b8	          0x4801c5	                            add rbp, rax	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40032bb	          0x4839eb	                            cmp rbx, rbp	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40032be	            0x7260	                            jb 0x4003320	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40032c0	          0x4839e8	                            cmp rax, rbp	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40032c3	            0x775b	                            ja 0x4003320	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40032c5	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032ca	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032cf	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032d7	      0xe874e6ffff	    call sym.dwarf_vmatoa64.constprop.29	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032dc	            0x31ff	                            xor edi, edi	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032de	      0xba05000000	                              mov edx, 5	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032e3	      0xbe00000000	                              mov esi, 0	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032e8	      0x4889442410	             mov qword [rsp + 0x10], rax	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032ed	      0xe800000000	                          call 0x40032f2	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x40032f2	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x40032f7	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       104	stdio2.h	CALL_16
0x40032fb	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40032fe	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003303	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003305	      0xe800000000	                          call 0x400330a	       104	stdio2.h	CALL_16
0x400330a	          0x8b0424	                    mov eax, dword [rsp]	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400330d	            0x85c0	                           test eax, eax	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400330f	     0xf84d1feffff	                            je 0x40031e6	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003315	        0x418d47ff	                      lea eax, [r15 - 1]	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003319	      0xe930feffff	                           jmp 0x400314e	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400331e	            0x6690	                                     nop	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003320	      0xba05000000	                              mov edx, 5	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x4003325	      0xbe00000000	                              mov esi, 0	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x400332a	            0x31ff	                            xor edi, edi	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x400332c	        0x894c240c	              mov dword [rsp + 0xc], ecx	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x4003330	      0xe800000000	                          call 0x4003335	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x4003335	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x4003339	          0x8b1424	                    mov edx, dword [rsp]	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x400333c	          0x4889c7	                            mov rdi, rax	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x400333f	            0x31c0	                            xor eax, eax	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x4003341	            0x89ce	                            mov esi, ecx	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x4003343	      0xe800000000	                          call 0x4003348	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x4003348	            0x31c0	                            xor eax, eax	      9318	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x400334a	      0xe946f7ffff	                           jmp 0x4002a95	      9318	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x400334f	              0x90	                                     nop	      9318	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x4003350	            0x31ff	                            xor edi, edi	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003352	      0xba05000000	                              mov edx, 5	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003357	      0xbe00000000	                              mov esi, 0	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x400335c	      0xe800000000	                          call 0x4003361	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003361	          0x4889c7	                            mov rdi, rax	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003364	            0x31c0	                            xor eax, eax	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003366	      0xe800000000	                          call 0x400336b	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x400336b	      0xe960f9ffff	                           jmp 0x4002cd0	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003370	          0x4585f6	                         test r14d, r14d	      9351	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003373	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	      9351	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003378	     0xf85f5040000	                           jne 0x4003873	      9351	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x400337e	        0x448b1c24	                   mov r11d, dword [rsp]	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003382	          0x4585db	                         test r11d, r11d	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003385	     0xf84f1000000	                            je 0x400347c	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x400338b	            0x31ed	                            xor ebp, ebp	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x400338d	        0x448b3c24	                   mov r15d, dword [rsp]	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003391	            0xeb30	                           jmp 0x40033c3	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003393	       0xf1f440000	                   nop dword [rax + rax]	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003398	          0x4c01ef	                            add rdi, r13	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x400339b	          0x4839fb	                            cmp rbx, rdi	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x400339e	            0x760e	                           jbe 0x40033ae	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033a0	          0x4889de	                            mov rsi, rbx	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033a3	          0x4829fe	                            sub rsi, rdi	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033a6	          0x8d46ff	                      lea eax, [rsi - 1]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033a9	          0x83f807	                              cmp eax, 7	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033ac	            0x762e	                           jbe 0x40033dc	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033ae	          0x4585f6	                         test r14d, r14d	      9362	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6	IF_33
0x40033b1	     0xf8591000000	                           jne 0x4003448	      9362	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6	IF_33
0x40033b7	          0x83c501	                              add ebp, 1	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033ba	          0x4139ef	                           cmp r15d, ebp	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033bd	     0xf86b0000000	                           jbe 0x4003473	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033c3	    0x8d3cad000000	                        lea edi, [rbp*4]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033ca	      0x498d443d04	                lea rax, [r13 + rdi + 4]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033cf	          0x4839c3	                            cmp rbx, rax	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033d2	            0x76c4	                           jbe 0x4003398	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033d4	      0xbe04000000	                              mov esi, 4	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033d9	          0x4c01ef	                            add rdi, r13	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033dc	    0xff1500000000	                 call qword [0x040033e2]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033e2	          0x4585f6	                         test r14d, r14d	      9362	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6	IF_33
0x40033e5	            0x74d0	                            je 0x40033b7	      9362	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6	IF_33
0x40033e7	          0x83f808	                              cmp eax, 8	      9069	dwarf.c	FUNCTION_90	SWITCH_1
0x40033ea	          0x4189c1	                            mov r9d, eax	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40033ed	            0x775c	                            ja 0x400344b	      9069	dwarf.c	FUNCTION_90	SWITCH_1
0x40033ef	            0x89c0	                            mov eax, eax	      9069	dwarf.c	FUNCTION_90	SWITCH_1
0x40033f1	    0xff24c5000000	                       jmp qword [rax*8]	      9069	dwarf.c	FUNCTION_90	SWITCH_1
0x40033f8	      0xba00000000	                              mov edx, 0	      9086	dwarf.c	FUNCTION_90	SWITCH_1
0x40033fd	           0xf1f00	                         nop dword [rax]	      9086	dwarf.c	FUNCTION_90	SWITCH_1
0x4003400	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003405	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400340a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400340c	      0xe800000000	                          call 0x4003411	       104	stdio2.h	CALL_16
0x4003411	            0xeba4	                           jmp 0x40033b7	       104	stdio2.h	CALL_16
0x4003413	      0xba00000000	                              mov edx, 0	      9084	dwarf.c	FUNCTION_90	SWITCH_1
0x4003418	            0xebe6	                           jmp 0x4003400	      9084	dwarf.c	FUNCTION_90	SWITCH_1
0x400341a	      0xba00000000	                              mov edx, 0	      9082	dwarf.c	FUNCTION_90	SWITCH_1
0x400341f	            0xebdf	                           jmp 0x4003400	      9082	dwarf.c	FUNCTION_90	SWITCH_1
0x4003421	      0xba00000000	                              mov edx, 0	      9080	dwarf.c	FUNCTION_90	SWITCH_1
0x4003426	            0xebd8	                           jmp 0x4003400	      9080	dwarf.c	FUNCTION_90	SWITCH_1
0x4003428	      0xba00000000	                              mov edx, 0	      9078	dwarf.c	FUNCTION_90	SWITCH_1
0x400342d	            0xebd1	                           jmp 0x4003400	      9078	dwarf.c	FUNCTION_90	SWITCH_1
0x400342f	      0xba00000000	                              mov edx, 0	      9076	dwarf.c	FUNCTION_90	SWITCH_1
0x4003434	            0xebca	                           jmp 0x4003400	      9076	dwarf.c	FUNCTION_90	SWITCH_1
0x4003436	      0xba00000000	                              mov edx, 0	      9074	dwarf.c	FUNCTION_90	SWITCH_1
0x400343b	            0xebc3	                           jmp 0x4003400	      9074	dwarf.c	FUNCTION_90	SWITCH_1
0x400343d	      0xba00000000	                              mov edx, 0	      9072	dwarf.c	FUNCTION_90	SWITCH_1
0x4003442	            0xebbc	                           jmp 0x4003400	      9072	dwarf.c	FUNCTION_90	SWITCH_1
0x4003444	         0xf1f4000	                         nop dword [rax]	      9072	dwarf.c	FUNCTION_90	SWITCH_1
0x4003448	          0x4531c9	                            xor r9d, r9d	      9362	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6	IF_33
0x400344b	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4003450	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4003456	      0xb910000000	                           mov ecx, 0x10	        64	stdio2.h	FUNCTION_114	CALL_1
0x400345b	      0xbe10000000	                           mov esi, 0x10	        64	stdio2.h	FUNCTION_114	CALL_1
0x4003460	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4003465	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4003467	      0xe800000000	                          call 0x400346c	        64	stdio2.h	FUNCTION_114	CALL_1
0x400346c	      0xba00000000	                              mov edx, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4003471	            0xeb8d	                           jmp 0x4003400	        64	stdio2.h	FUNCTION_114	CALL_1
0x4003473	          0x4585f6	                         test r14d, r14d	      9366	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_34
0x4003476	     0xf855f040000	                           jne 0x40038db	      9366	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_34
0x400347c	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003480	            0x85c0	                           test eax, eax	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003482	     0xf8405f7ffff	                            je 0x4002b8d	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003488	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x400348d	    0xc74424180000	               mov dword [rsp + 0x18], 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4003495	          0x4c89e7	                            mov rdi, r12	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003498	            0xeb36	                           jmp 0x40034d0	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x400349a	    0x660f1f440000	                    nop word [rax + rax]	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x40034a0	          0x4839dd	                            cmp rbp, rbx	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034a3	            0x730e	                           jae 0x40034b3	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034a5	          0x4889de	                            mov rsi, rbx	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034a8	          0x4829ee	                            sub rsi, rbp	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034ab	          0x8d46ff	                      lea eax, [rsi - 1]	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034ae	          0x83f807	                              cmp eax, 7	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034b1	            0x7654	                           jbe 0x4003507	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034b3	      0x8344241801	               add dword [rsp + 0x18], 1	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034b8	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034bd	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034c1	        0x3944240c	              cmp dword [rsp + 0xc], eax	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034c5	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034ca	     0xf8610f8ffff	                           jbe 0x4002ce0	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034d0	        0x488d4708	                      lea rax, [rdi + 8]	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034d4	          0x4839c3	                            cmp rbx, rax	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034d7	      0x4889442428	             mov qword [rsp + 0x28], rax	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034dc	     0xf838e010000	                           jae 0x4003670	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034e2	    0x48c744247000	               mov qword [rsp + 0x70], 0	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034eb	    0x48c744247800	               mov qword [rsp + 0x78], 0	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034f4	        0x488d4504	                      lea rax, [rbp + 4]	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034f8	          0x4839c3	                            cmp rbx, rax	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40034fb	      0x4889442430	             mov qword [rsp + 0x30], rax	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003500	            0x769e	                           jbe 0x40034a0	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003502	      0xbe04000000	                              mov esi, 4	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003507	          0x4889ef	                            mov rdi, rbp	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x400350a	    0xff1500000000	                 call qword [0x04003510]	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003510	            0x85c0	                           test eax, eax	      9374	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003512	          0x4989c4	                            mov r12, rax	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003515	            0x749c	                            je 0x40034b3	      9374	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003517	    0x8da8ffffff3f	             lea ebp, [rax + 0x3fffffff]	      9376	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x400351d	       0xfaf6c2458	            imul ebp, dword [rsp + 0x58]	      9376	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003522	      0x48036c2460	             add rbp, qword [rsp + 0x60]	      9376	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003527	          0x4585f6	                         test r14d, r14d	      9378	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36
0x400352a	     0xf8554010000	                           jne 0x4003684	      9378	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36
0x4003530	        0x448b0424	                    mov r8d, dword [rsp]	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003534	          0x4585c0	                           test r8d, r8d	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003537	     0xf8476ffffff	                            je 0x40034b3	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x400353d	      0x418d4424ff	                      lea eax, [r12 - 1]	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003542	          0x4889c2	                            mov rdx, rax	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003545	        0x48c1e207	                              shl rdx, 7	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003549	        0x4c8d24c2	                  lea r12, [rdx + rax*8]	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x400354d	      0x4c03642448	             add r12, qword [rsp + 0x48]	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003552	      0x4c89642420	             mov qword [rsp + 0x20], r12	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003557	          0x4531e4	                          xor r12d, r12d	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x400355a	          0x4589e7	                          mov r15d, r12d	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x400355d	          0x4989ec	                            mov r12, rbp	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003560	    0x428d2cbd0000	                        lea ebp, [r15*4]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003568	        0x488d4d04	                      lea rcx, [rbp + 4]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x400356c	        0x498d040c	                    lea rax, [r12 + rcx]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003570	          0x4839c3	                            cmp rbx, rax	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003573	            0x7773	                            ja 0x40035e8	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003575	        0x498d3c2c	                    lea rdi, [r12 + rbp]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003579	            0x31d2	                            xor edx, edx	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x400357b	          0x4839fb	                            cmp rbx, rdi	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x400357e	            0x760e	                           jbe 0x400358e	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003580	          0x4889de	                            mov rsi, rbx	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003583	          0x4829fe	                            sub rsi, rdi	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003586	          0x8d46ff	                      lea eax, [rsi - 1]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003589	          0x83f807	                              cmp eax, 7	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x400358c	            0x7663	                           jbe 0x40035f1	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x400358e	          0x4585f6	                         test r14d, r14d	      9386	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	IF_37
0x4003591	     0xf85b9000000	                           jne 0x4003650	      9386	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	IF_37
0x4003597	          0x4c01e9	                            add rcx, r13	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x400359a	          0x4839cb	                            cmp rbx, rcx	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x400359d	            0x7769	                            ja 0x4003608	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x400359f	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035a4	          0x4839fb	                            cmp rbx, rdi	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035a7	            0x760e	                           jbe 0x40035b7	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035a9	          0x4889de	                            mov rsi, rbx	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035ac	          0x4829fe	                            sub rsi, rdi	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035af	          0x8d46ff	                      lea eax, [rsi - 1]	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035b2	          0x83f807	                              cmp eax, 7	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035b5	            0x765b	                           jbe 0x4003612	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035b7	            0x31c0	                            xor eax, eax	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x40035b9	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x40035be	      0x488954c148	     mov qword [rcx + rax*8 + 0x48], rdx	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x40035c3	        0x4183c701	                             add r15d, 1	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x40035c7	        0x44393c24	                   cmp dword [rsp], r15d	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x40035cb	            0x7793	                            ja 0x4003560	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x40035cd	          0x4585f6	                         test r14d, r14d	      9398	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_39
0x40035d0	     0xf84ddfeffff	                            je 0x40034b3	      9398	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_39
0x40035d6	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40035db	      0xe800000000	                          call 0x40035e0	       104	stdio2.h	CALL_16
0x40035e0	      0xe9cefeffff	                           jmp 0x40034b3	       104	stdio2.h	CALL_16
0x40035e5	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40035e8	        0x498d3c2c	                    lea rdi, [r12 + rbp]	       104	stdio2.h	CALL_16
0x40035ec	      0xbe04000000	                              mov esi, 4	       104	stdio2.h	CALL_16
0x40035f1	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       104	stdio2.h	CALL_16
0x40035f6	    0xff1500000000	                 call qword [0x040035fc]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x40035fc	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003601	            0x89c2	                            mov edx, eax	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003603	            0xeb89	                           jmp 0x400358e	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003605	           0xf1f00	                         nop dword [rax]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003608	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x400360d	      0xbe04000000	                              mov esi, 4	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003612	        0x89542410	             mov dword [rsp + 0x10], edx	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003616	    0xff1500000000	                 call qword [0x0400361c]	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x400361c	          0x4889c5	                            mov rbp, rax	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x400361f	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      9391	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	IF_38
0x4003623	            0x89c0	                            mov eax, eax	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003625	          0x83fd07	                              cmp ebp, 7	      9391	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	IF_38
0x4003628	            0x768f	                           jbe 0x40035b9	      9391	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	IF_38
0x400362a	            0x31ff	                            xor edi, edi	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x400362c	      0xba05000000	                              mov edx, 5	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003631	      0xbe00000000	                              mov esi, 0	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003636	      0xe800000000	                          call 0x400363b	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x400363b	            0x89ee	                            mov esi, ebp	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x400363d	          0x4889c7	                            mov rdi, rax	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003640	            0x31c0	                            xor eax, eax	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003642	      0xe800000000	                          call 0x4003647	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003647	      0xe977ffffff	                           jmp 0x40035c3	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x400364c	         0xf1f4000	                         nop dword [rax]	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003650	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003655	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400365a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400365c	      0xe800000000	                          call 0x4003661	       104	stdio2.h	CALL_16
0x4003661	      0xe95dffffff	                           jmp 0x40035c3	       104	stdio2.h	CALL_16
0x4003666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_16
0x4003670	      0x488d542478	                   lea rdx, [rsp + 0x78]	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003675	      0x488d742470	                   lea rsi, [rsp + 0x70]	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x400367a	      0xe800000000	                          call 0x400367f	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x400367f	      0xe970feffff	                           jmp 0x40034f4	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003684	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003689	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x400368e	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003696	      0xe8b5e2ffff	    call sym.dwarf_vmatoa64.constprop.29	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x400369b	            0x31ff	                            xor edi, edi	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x400369d	      0xba05000000	                              mov edx, 5	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x40036a2	      0xbe00000000	                              mov esi, 0	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x40036a7	      0x4889442410	             mov qword [rsp + 0x10], rax	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x40036ac	      0xe800000000	                          call 0x40036b1	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x40036b1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x40036b6	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40036ba	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40036bd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40036c2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40036c4	      0xe800000000	                          call 0x40036c9	       104	stdio2.h	CALL_16
0x40036c9	        0x448b0c24	                    mov r9d, dword [rsp]	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x40036cd	          0x4585c9	                           test r9d, r9d	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x40036d0	     0xf8567feffff	                           jne 0x400353d	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x40036d6	      0xe9fbfeffff	                           jmp 0x40035d6	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x40036db	      0xbe88000000	                           mov esi, 0x88	      9549	dwarf.c	FUNCTION_99	CALL_4
0x40036e0	    0x893d00000000	            mov dword [0x040036e6], edi 	      9267	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	ELSE_5
0x40036e6	      0xe800000000	                          call 0x40036eb	      9549	dwarf.c	FUNCTION_99	CALL_4
0x40036eb	      0x4889442448	             mov qword [rsp + 0x48], rax	      9549	dwarf.c	FUNCTION_99	CALL_4
0x40036f0	    0x488905000000	            mov qword [0x040036f7], rax 	      9268	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	ELSE_5	CALL_32
0x40036f7	      0xe93bf9ffff	                           jmp 0x4003037	      9268	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	ELSE_5	CALL_32
0x40036fc	      0xba05000000	                              mov edx, 5	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003701	      0xbe00000000	                              mov esi, 0	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003706	            0x31ff	                            xor edi, edi	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003708	      0xe800000000	                          call 0x400370d	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x400370d	          0x4889c7	                            mov rdi, rax	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003710	            0x31c0	                            xor eax, eax	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003712	      0xe800000000	                          call 0x4003717	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003717	            0x31c0	                            xor eax, eax	      9187	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x4003719	      0xe977f3ffff	                           jmp 0x4002a95	      9187	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x400371e	      0xba05000000	                              mov edx, 5	      9253	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20	CALL_28
0x4003723	            0x31ff	                            xor edi, edi	      9253	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20	CALL_28
0x4003725	      0xbe00000000	                              mov esi, 0	      9253	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20	CALL_28
0x400372a	      0xe800000000	                          call 0x400372f	      9253	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20	CALL_28
0x400372f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003734	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4003737	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003739	      0xe800000000	                          call 0x400373e	       104	stdio2.h	CALL_16
0x400373e	        0x8b7c245c	            mov edi, dword [rsp + 0x5c] 	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003742	      0xba05000000	                              mov edx, 5	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003747	            0x85ff	                           test edi, edi	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003749	     0xf852a020000	                           jne 0x4003979	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x400374f	      0xbe00000000	                              mov esi, 0	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003754	            0x31ff	                            xor edi, edi	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003756	      0xe800000000	                          call 0x400375b	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x400375b	          0x4889c2	                            mov rdx, rax	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x400375e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003763	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003765	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400376a	      0xe800000000	                          call 0x400376f	       104	stdio2.h	CALL_16
0x400376f	          0x8b3424	                    mov esi, dword [rsp]	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003772	            0x31ed	                            xor ebp, ebp	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003774	        0x448b3c24	                   mov r15d, dword [rsp]	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003778	            0x85f6	                           test esi, esi	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x400377a	            0x756d	                           jne 0x40037e9	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x400377c	      0xe9d3000000	                           jmp 0x4003854	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003781	     0xf1f80000000	                         nop dword [rax]	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003788	          0x4c01ef	                            add rdi, r13	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x400378b	          0x4839fb	                            cmp rbx, rdi	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x400378e	            0x760e	                           jbe 0x400379e	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003790	          0x4889de	                            mov rsi, rbx	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003793	          0x4829fe	                            sub rsi, rdi	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003796	          0x8d46ff	                      lea eax, [rsi - 1]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003799	          0x83f807	                              cmp eax, 7	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x400379c	            0x7664	                           jbe 0x4003802	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x400379e	          0x4531c9	                            xor r9d, r9d	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037a1	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037a6	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037ac	      0xb910000000	                           mov ecx, 0x10	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037b1	      0xbe10000000	                           mov esi, 0x10	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037b6	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037bb	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037bd	      0xe800000000	                          call 0x40037c2	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037c2	      0xba00000000	                              mov edx, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037c7	    0x660f1f840000	                    nop word [rax + rax]	        64	stdio2.h	FUNCTION_114	CALL_1
0x40037d0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40037d2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40037d7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40037dc	          0x83c501	                              add ebp, 1	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037df	      0xe800000000	                          call 0x40037e4	       104	stdio2.h	CALL_16
0x40037e4	          0x4139ef	                           cmp r15d, ebp	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037e7	            0x746b	                            je 0x4003854	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037e9	    0x8d3cad000000	                        lea edi, [rbp*4]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037f0	      0x498d443d04	                lea rax, [r13 + rdi + 4]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037f5	          0x4839c3	                            cmp rbx, rax	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037f8	            0x768e	                           jbe 0x4003788	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037fa	      0xbe04000000	                              mov esi, 4	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x40037ff	          0x4c01ef	                            add rdi, r13	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003802	    0xff1500000000	                 call qword [0x04003808]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003808	          0x83f808	                              cmp eax, 8	      9069	dwarf.c	FUNCTION_90	SWITCH_1
0x400380b	          0x4189c1	                            mov r9d, eax	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x400380e	            0x7791	                            ja 0x40037a1	      9069	dwarf.c	FUNCTION_90	SWITCH_1
0x4003810	            0x89c0	                            mov eax, eax	      9069	dwarf.c	FUNCTION_90	SWITCH_1
0x4003812	    0xff24c5000000	                       jmp qword [rax*8]	      9069	dwarf.c	FUNCTION_90	SWITCH_1
0x4003819	      0xba00000000	                              mov edx, 0	      9086	dwarf.c	FUNCTION_90	SWITCH_1
0x400381e	            0xebb0	                           jmp 0x40037d0	      9086	dwarf.c	FUNCTION_90	SWITCH_1
0x4003820	      0xba00000000	                              mov edx, 0	      9084	dwarf.c	FUNCTION_90	SWITCH_1
0x4003825	            0xeba9	                           jmp 0x40037d0	      9084	dwarf.c	FUNCTION_90	SWITCH_1
0x4003827	      0xba00000000	                              mov edx, 0	      9082	dwarf.c	FUNCTION_90	SWITCH_1
0x400382c	            0xeba2	                           jmp 0x40037d0	      9082	dwarf.c	FUNCTION_90	SWITCH_1
0x400382e	      0xba00000000	                              mov edx, 0	      9080	dwarf.c	FUNCTION_90	SWITCH_1
0x4003833	            0xeb9b	                           jmp 0x40037d0	      9080	dwarf.c	FUNCTION_90	SWITCH_1
0x4003835	      0xba00000000	                              mov edx, 0	      9078	dwarf.c	FUNCTION_90	SWITCH_1
0x400383a	            0xeb94	                           jmp 0x40037d0	      9078	dwarf.c	FUNCTION_90	SWITCH_1
0x400383c	      0xba00000000	                              mov edx, 0	      9076	dwarf.c	FUNCTION_90	SWITCH_1
0x4003841	            0xeb8d	                           jmp 0x40037d0	      9076	dwarf.c	FUNCTION_90	SWITCH_1
0x4003843	      0xba00000000	                              mov edx, 0	      9074	dwarf.c	FUNCTION_90	SWITCH_1
0x4003848	            0xeb86	                           jmp 0x40037d0	      9074	dwarf.c	FUNCTION_90	SWITCH_1
0x400384a	      0xba00000000	                              mov edx, 0	      9072	dwarf.c	FUNCTION_90	SWITCH_1
0x400384f	      0xe97cffffff	                           jmp 0x40037d0	      9072	dwarf.c	FUNCTION_90	SWITCH_1
0x4003854	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4003859	      0xe800000000	                          call 0x400385e	       104	stdio2.h	CALL_16
0x400385e	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003862	    0x48c744244800	               mov qword [rsp + 0x48], 0	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x400386b	            0x85c9	                           test ecx, ecx	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400386d	     0xf85d0f7ffff	                           jne 0x4003043	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003873	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4003878	      0xe800000000	                          call 0x400387d	       104	stdio2.h	CALL_16
0x400387d	      0xba05000000	                              mov edx, 5	      9354	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32	CALL_45
0x4003882	            0x31ff	                            xor edi, edi	      9354	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32	CALL_45
0x4003884	      0xbe00000000	                              mov esi, 0	      9354	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32	CALL_45
0x4003889	      0xe800000000	                          call 0x400388e	      9354	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32	CALL_45
0x400388e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003893	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4003896	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003898	      0xe800000000	                          call 0x400389d	       104	stdio2.h	CALL_16
0x400389d	      0x448b7c245c	           mov r15d, dword [rsp + 0x5c] 	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40038a2	      0xba05000000	                              mov edx, 5	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40038a7	          0x4585ff	                         test r15d, r15d	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40038aa	     0xf850a010000	                           jne 0x40039ba	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40038b0	      0xbe00000000	                              mov esi, 0	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40038b5	            0x31ff	                            xor edi, edi	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40038b7	      0xe800000000	                          call 0x40038bc	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40038bc	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x40038bf	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40038c4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40038c6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40038cb	      0xe800000000	                          call 0x40038d0	       104	stdio2.h	CALL_16
0x40038d0	          0x8b2c24	                    mov ebp, dword [rsp]	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40038d3	            0x85ed	                           test ebp, ebp	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40038d5	     0xf85b0faffff	                           jne 0x400338b	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x40038db	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40038e0	      0xe800000000	                          call 0x40038e5	       104	stdio2.h	CALL_16
0x40038e5	      0x448b54240c	            mov r10d, dword [rsp + 0xc] 	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40038ea	          0x4585d2	                         test r10d, r10d	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40038ed	     0xf8595fbffff	                           jne 0x4003488	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40038f3	      0xe9f8f3ffff	                           jmp 0x4002cf0	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x40038f8	      0xba05000000	                              mov edx, 5	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x40038fd	      0xbe00000000	                              mov esi, 0	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003902	            0x31ff	                            xor edi, edi	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003904	      0xe800000000	                          call 0x4003909	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003909	          0x4889ee	                            mov rsi, rbp	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x400390c	          0x4889c7	                            mov rdi, rax	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x400390f	            0x31c0	                            xor eax, eax	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003911	      0xe800000000	                          call 0x4003916	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003916	            0x31c0	                            xor eax, eax	      9248	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x4003918	      0xe978f1ffff	                           jmp 0x4002a95	      9248	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x400391d	    0x890500000000	            mov dword [0x04003923], eax 	      9027	dwarf.c	FUNCTION_87	IF_1
0x4003923	            0x89c0	                            mov eax, eax	      9515	dwarf.c	FUNCTION_97	CALL_3
0x4003925	    0xc70500000000	               mov dword [0x0400392f], 0	      9028	dwarf.c	FUNCTION_87	IF_1
0x400392f	    0x488d3c850000	                        lea rdi, [rax*4]	      9515	dwarf.c	FUNCTION_97	CALL_3
0x4003937	      0xe800000000	                          call 0x400393c	      9515	dwarf.c	FUNCTION_97	CALL_3
0x400393c	    0x488905000000	            mov qword [0x04003943], rax 	      9029	dwarf.c	FUNCTION_87	IF_1	CALL_1
0x4003943	      0xe985f6ffff	                           jmp 0x4002fcd	      9029	dwarf.c	FUNCTION_87	IF_1	CALL_1
0x4003948	      0xba05000000	                              mov edx, 5	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x400394d	      0xbe00000000	                              mov esi, 0	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003952	            0x31ff	                            xor edi, edi	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003954	        0x48890424	                    mov qword [rsp], rax	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003958	      0xe800000000	                          call 0x400395d	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x400395d	        0x4c8b0c24	                     mov r9, qword [rsp]	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003961	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003965	          0x4889c7	                            mov rdi, rax	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003968	            0x31c0	                            xor eax, eax	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x400396a	          0x4489ce	                            mov esi, r9d	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x400396d	      0xe800000000	                          call 0x4003972	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003972	            0x31c0	                            xor eax, eax	      9295	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x4003974	      0xe91cf1ffff	                           jmp 0x4002a95	      9295	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x4003979	      0xbe00000000	                              mov esi, 0	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x400397e	            0x31ff	                            xor edi, edi	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003980	      0xe800000000	                          call 0x4003985	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003985	          0x4889c2	                            mov rdx, rax	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003988	      0xe9d1fdffff	                           jmp 0x400375e	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x400398d	      0xba05000000	                              mov edx, 5	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003992	      0xbe00000000	                              mov esi, 0	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003997	            0x31ff	                            xor edi, edi	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003999	        0x4c890424	                     mov qword [rsp], r8	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x400399d	      0xe800000000	                          call 0x40039a2	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x40039a2	        0x4c8b0424	                     mov r8, qword [rsp]	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x40039a6	          0x4889c7	                            mov rdi, rax	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x40039a9	            0x31c0	                            xor eax, eax	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x40039ab	          0x4c89c6	                             mov rsi, r8	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x40039ae	      0xe800000000	                          call 0x40039b3	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x40039b3	            0x31c0	                            xor eax, eax	      9308	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6
0x40039b5	      0xe9dbf0ffff	                           jmp 0x4002a95	      9308	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6
0x40039ba	      0xbe00000000	                              mov esi, 0	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40039bf	            0x31ff	                            xor edi, edi	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40039c1	      0xe800000000	                          call 0x40039c6	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40039c6	      0xe9f1feffff	                           jmp 0x40038bc	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x40039cb	      0xe800000000	                          call 0x40039d0	      9413	dwarf.c	FUNCTION_91
0x40039d0	            0x31ff	                            xor edi, edi	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x40039d2	      0xba05000000	                              mov edx, 5	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x40039d7	      0xbe00000000	                              mov esi, 0	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x40039dc	      0xe800000000	                          call 0x40039e1	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x40039e1	          0x4889c7	                            mov rdi, rax	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x40039e4	            0x31c0	                            xor eax, eax	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x40039e6	      0xe800000000	                          call 0x40039eb	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x40039eb	      0xe97ff4ffff	                           jmp 0x4002e6f	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x40039f0	      0xbe04000000	                              mov esi, 4	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x40039f5	      0xe946f4ffff	                           jmp 0x4002e40	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x40039fa	          0x4889d8	                            mov rax, rbx	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x40039fd	          0x4829f8	                            sub rax, rdi	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003a00	            0x89c6	                            mov esi, eax	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003a02	          0x83e801	                              sub eax, 1	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003a05	          0x83f807	                              cmp eax, 7	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003a08	     0xf8768f5ffff	                            ja 0x4002f76	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003a0e	    0xff1500000000	                 call qword [0x04003a14]	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003a14	            0x85c0	                           test eax, eax	      9203	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_14
0x4003a16	     0xf845af5ffff	                            je 0x4002f76	      9203	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_14
0x4003a1c	            0x89c2	                            mov edx, eax	       104	stdio2.h	CALL_16
0x4003a1e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003a23	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003a25	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003a2a	      0xe800000000	                          call 0x4003a2f	       104	stdio2.h	CALL_16
0x4003a2f	          0x4c39e3	                            cmp rbx, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4003a32	          0x4c89e7	                            mov rdi, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4003a35	     0xf8725f5ffff	                            ja 0x4002f60	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4003a3b	      0xe93bf4ffff	                           jmp 0x4002e7b	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4003a40	      0xbe04000000	                              mov esi, 4	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4003a45	            0xebc7	                           jmp 0x4003a0e	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4003a47	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003a4d	     0xf8558f3ffff	                           jne 0x4002dab	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003a53	      0xe978f2ffff	                           jmp 0x4002cd0	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003a58	    0xc70424000000	                      mov dword [rsp], 0	      9108	dwarf.c	FUNCTION_91
0x4003a5f	      0xe978efffff	                           jmp 0x40029dc	      9108	dwarf.c	FUNCTION_91
0x4003a64	          0x4c89e7	                            mov rdi, r12	      9134	dwarf.c	FUNCTION_91
0x4003a67	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x4003a6b	    0xff1500000000	                 call qword [0x04003a71]	      9134	dwarf.c	FUNCTION_91
0x4003a71	          0x4939dc	                            cmp r12, rbx	      9135	dwarf.c	FUNCTION_91
0x4003a74	        0x89442418	             mov dword [rsp + 0x18], eax	      9134	dwarf.c	FUNCTION_91
0x4003a78	     0xf832defffff	                           jae 0x40029ab	      9135	dwarf.c	FUNCTION_91
0x4003a7e	      0xe97af0ffff	                           jmp 0x4002afd	      9135	dwarf.c	FUNCTION_91
dwarf_select_sections_all	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:CALL,0:functions,0	20
0x4027aa0	    0xc70500000000	               mov dword [0x04027aaa], 1	     10159	dwarf.c	FUNCTION_111
0x4027aaa	    0xc70500000000	               mov dword [0x04027ab4], 1	     10160	dwarf.c	FUNCTION_111
0x4027ab4	    0xc70500000000	               mov dword [0x04027abe], 1	     10161	dwarf.c	FUNCTION_111
0x4027abe	    0xc70500000000	               mov dword [0x04027ac8], 1	     10162	dwarf.c	FUNCTION_111
0x4027ac8	    0xc70500000000	               mov dword [0x04027ad2], 1	     10163	dwarf.c	FUNCTION_111
0x4027ad2	    0xc70500000000	               mov dword [0x04027adc], 1	     10164	dwarf.c	FUNCTION_111
0x4027adc	    0xc70500000000	               mov dword [0x04027ae6], 1	     10165	dwarf.c	FUNCTION_111
0x4027ae6	    0xc70500000000	               mov dword [0x04027af0], 1	     10166	dwarf.c	FUNCTION_111
0x4027af0	    0xc70500000000	               mov dword [0x04027afa], 1	     10167	dwarf.c	FUNCTION_111
0x4027afa	    0xc70500000000	               mov dword [0x04027b04], 1	     10168	dwarf.c	FUNCTION_111
0x4027b04	    0xc70500000000	               mov dword [0x04027b0e], 1	     10169	dwarf.c	FUNCTION_111
0x4027b0e	    0xc70500000000	               mov dword [0x04027b18], 1	     10170	dwarf.c	FUNCTION_111
0x4027b18	    0xc70500000000	               mov dword [0x04027b22], 1	     10171	dwarf.c	FUNCTION_111
0x4027b22	    0xc70500000000	               mov dword [0x04027b2c], 1	     10172	dwarf.c	FUNCTION_111
0x4027b2c	    0xc70500000000	               mov dword [0x04027b36], 1	     10173	dwarf.c	FUNCTION_111
0x4027b36	    0xc70500000000	               mov dword [0x04027b40], 1	     10174	dwarf.c	FUNCTION_111
0x4027b40	    0xc70500000000	               mov dword [0x04027b4a], 1	     10175	dwarf.c	FUNCTION_111
0x4027b4a	    0xc70500000000	               mov dword [0x04027b54], 1	     10176	dwarf.c	FUNCTION_111
0x4027b54	    0xc70500000000	               mov dword [0x04027b5e], 1	     10177	dwarf.c	FUNCTION_111
0x4027b5e	              0xc3	                                     ret	     10177	dwarf.c	FUNCTION_111
init_dwarf_regnames	ELSE,0:WHILE,0:FOR,0:SWITCH,1:DO,0:IF,0:CALL,6:functions,0	45
0x4026fd0	          0x83ff3e	                           cmp edi, 0x3e	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fd3	            0x7476	                            je 0x402704b	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fd5	            0x7719	                            ja 0x4026ff0	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fd7	          0x83ff06	                              cmp edi, 6	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fda	            0x7444	                            je 0x4027020	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fdc	          0x83ff16	                           cmp edi, 0x16	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fdf	     0xf84bb000000	                            je 0x40270a0	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fe5	          0x83ff03	                              cmp edi, 3	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fe8	            0x747e	                            je 0x4027068	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fea	            0xf3c3	                                     ret	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026fec	         0xf1f4000	                         nop dword [rax]	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026ff0	    0x81ffb7000000	                           cmp edi, 0xb7	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026ff6	     0xf8484000000	                            je 0x4027080	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026ffc	            0x7642	                           jbe 0x4027040	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4026ffe	    0x81fff3000000	                           cmp edi, 0xf3	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4027004	     0xf85b6000000	                           jne 0x40270c0	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x402700a	    0x48c705000000	               mov qword [0x04027015], 0	      7119	dwarf.c	FUNCTION_76
0x4027015	    0xc70500000000	           mov dword [0x0402701f], 0x40 	      7120	dwarf.c	FUNCTION_76	CALL_1
0x402701f	              0xc3	                                     ret	      7120	dwarf.c	FUNCTION_76	CALL_1
0x4027020	    0x48c705000000	               mov qword [0x0402702b], 0	      7012	dwarf.c	FUNCTION_72
0x402702b	    0xc70500000000	           mov dword [0x04027035], 0x65 	      7013	dwarf.c	FUNCTION_72	CALL_1
0x4027035	              0xc3	                                     ret	      7013	dwarf.c	FUNCTION_72	CALL_1
0x4027036	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7013	dwarf.c	FUNCTION_72	CALL_1
0x4027040	    0x81efb4000000	                           sub edi, 0xb4	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4027046	          0x83ff01	                              cmp edi, 1	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4027049	            0x777d	                            ja 0x40270c8	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x402704b	    0x48c705000000	               mov qword [0x04027056], 0	      7051	dwarf.c	FUNCTION_73
0x4027056	    0xc70500000000	           mov dword [0x04027060], 0x7e 	      7052	dwarf.c	FUNCTION_73	CALL_1
0x4027060	              0xc3	                                     ret	      7052	dwarf.c	FUNCTION_73	CALL_1
0x4027061	     0xf1f80000000	                         nop dword [rax]	      7052	dwarf.c	FUNCTION_73	CALL_1
0x4027068	    0x48c705000000	               mov qword [0x04027073], 0	      7005	dwarf.c	FUNCTION_71
0x4027073	    0xc70500000000	           mov dword [0x0402707d], 0x65 	      7006	dwarf.c	FUNCTION_71	CALL_1
0x402707d	              0xc3	                                     ret	      7006	dwarf.c	FUNCTION_71	CALL_1
0x402707e	            0x6690	                                     nop	      7006	dwarf.c	FUNCTION_71	CALL_1
0x4027080	    0x48c705000000	               mov qword [0x0402708b], 0	      7074	dwarf.c	FUNCTION_74
0x402708b	    0xc70500000000	           mov dword [0x04027095], 0x60 	      7075	dwarf.c	FUNCTION_74	CALL_1
0x4027095	              0xc3	                                     ret	      7075	dwarf.c	FUNCTION_74	CALL_1
0x4027096	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7075	dwarf.c	FUNCTION_74	CALL_1
0x40270a0	    0x48c705000000	               mov qword [0x040270ab], 0	      7098	dwarf.c	FUNCTION_75
0x40270ab	    0xc70500000000	           mov dword [0x040270b5], 0x54 	      7099	dwarf.c	FUNCTION_75	CALL_1
0x40270b5	              0xc3	                                     ret	      7099	dwarf.c	FUNCTION_75	CALL_1
0x40270b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7099	dwarf.c	FUNCTION_75	CALL_1
0x40270c0	            0xf3c3	                                     ret	      7099	dwarf.c	FUNCTION_75	CALL_1
0x40270c2	    0x660f1f440000	                    nop word [rax + rax]	      7099	dwarf.c	FUNCTION_75	CALL_1
0x40270c8	            0xf3c3	                                     ret	      7099	dwarf.c	FUNCTION_75	CALL_1
read_and_display_attr_value	ELSE,15:WHILE,0:FOR,1:SWITCH,20:DO,0:IF,64:CALL,136:functions,0	2795
0x4009220	            0x4157	                                push r15	      1769	dwarf.c	FUNCTION_30
0x4009222	            0x4156	                                push r14	      1769	dwarf.c	FUNCTION_30
0x4009224	            0x4155	                                push r13	      1769	dwarf.c	FUNCTION_30
0x4009226	            0x4154	                                push r12	      1769	dwarf.c	FUNCTION_30
0x4009228	          0x4989cc	                            mov r12, rcx	      1769	dwarf.c	FUNCTION_30
0x400922b	              0x55	                                push rbp	      1769	dwarf.c	FUNCTION_30
0x400922c	              0x53	                                push rbx	      1769	dwarf.c	FUNCTION_30
0x400922d	    0x4881ecc80000	                           sub rsp, 0xc8	      1769	dwarf.c	FUNCTION_30
0x4009234	    0x488b84242801	           mov rax, qword [rsp + 0x128] 	      1769	dwarf.c	FUNCTION_30
0x400923c	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1769	dwarf.c	FUNCTION_30
0x4009241	    0x4c8bbc241801	           mov r15, qword [rsp + 0x118] 	      1769	dwarf.c	FUNCTION_30
0x4009249	    0x448b8c243801	           mov r9d, dword [rsp + 0x138] 	      1769	dwarf.c	FUNCTION_30
0x4009251	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1770	dwarf.c	FUNCTION_30
0x400925a	        0x48890424	                    mov qword [rsp], rax	      1769	dwarf.c	FUNCTION_30
0x400925e	    0x488b84243001	           mov rax, qword [rsp + 0x130] 	      1769	dwarf.c	FUNCTION_30
0x4009266	      0x4889442410	             mov qword [rsp + 0x10], rax	      1769	dwarf.c	FUNCTION_30
0x400926b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1769	dwarf.c	FUNCTION_30
0x4009274	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      1769	dwarf.c	FUNCTION_30
0x400927c	            0x31c0	                            xor eax, eax	      1769	dwarf.c	FUNCTION_30
0x400927e	          0x4c39c1	                             cmp rcx, r8	      1775	dwarf.c	FUNCTION_30	IF_1
0x4009281	            0x7714	                            ja 0x4009297	      1775	dwarf.c	FUNCTION_30	IF_1
0x4009283	          0x4989fe	                            mov r14, rdi	      1775	dwarf.c	FUNCTION_30	IF_1
0x4009286	          0x4889f3	                            mov rbx, rsi	      1775	dwarf.c	FUNCTION_30	IF_1
0x4009289	          0x4989d3	                            mov r11, rdx	      1775	dwarf.c	FUNCTION_30	IF_1
0x400928c	          0x4d89c5	                             mov r13, r8	      1775	dwarf.c	FUNCTION_30	IF_1
0x400928f	            0x7557	                           jne 0x40092e8	      1775	dwarf.c	FUNCTION_30	IF_1
0x4009291	        0x4883fe19	                           cmp rsi, 0x19	      1775	dwarf.c	FUNCTION_30	IF_1
0x4009295	            0x7451	                            je 0x40092e8	      1775	dwarf.c	FUNCTION_30	IF_1
0x4009297	      0xba05000000	                              mov edx, 5	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x400929c	      0xbe00000000	                              mov esi, 0	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x40092a1	            0x31ff	                            xor edi, edi	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x40092a3	      0xe800000000	                          call 0x40092a8	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x40092a8	          0x4c89e5	                            mov rbp, r12	      1778	dwarf.c	FUNCTION_30	IF_1
0x40092ab	          0x4889c7	                            mov rdi, rax	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x40092ae	            0x31c0	                            xor eax, eax	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x40092b0	      0xe800000000	                          call 0x40092b5	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x40092b5	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      2677	dwarf.c	FUNCTION_30
0x40092bd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2677	dwarf.c	FUNCTION_30
0x40092c6	          0x4889e8	                            mov rax, rbp	      2677	dwarf.c	FUNCTION_30
0x40092c9	     0xf85772e0000	                           jne 0x400c146	      2677	dwarf.c	FUNCTION_30
0x40092cf	    0x4881c4c80000	                           add rsp, 0xc8	      2677	dwarf.c	FUNCTION_30
0x40092d6	              0x5b	                                 pop rbx	      2677	dwarf.c	FUNCTION_30
0x40092d7	              0x5d	                                 pop rbp	      2677	dwarf.c	FUNCTION_30
0x40092d8	            0x415c	                                 pop r12	      2677	dwarf.c	FUNCTION_30
0x40092da	            0x415d	                                 pop r13	      2677	dwarf.c	FUNCTION_30
0x40092dc	            0x415e	                                 pop r14	      2677	dwarf.c	FUNCTION_30
0x40092de	            0x415f	                                 pop r15	      2677	dwarf.c	FUNCTION_30
0x40092e0	              0xc3	                                     ret	      2677	dwarf.c	FUNCTION_30
0x40092e1	     0xf1f80000000	                         nop dword [rax]	      2677	dwarf.c	FUNCTION_30
0x40092e8	        0x4883fb12	                           cmp rbx, 0x12	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40092ec	     0xf843e080000	                            je 0x4009b30	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40092f2	     0xf87c8000000	                            ja 0x40093c0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40092f8	        0x4883fb0c	                            cmp rbx, 0xc	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40092fc	     0xf8686010000	                           jbe 0x4009488	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009302	        0x4883fb0f	                            cmp rbx, 0xf	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009306	     0xf84ec0a0000	                            je 0x4009df8	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400930c	     0xf863e030000	                           jbe 0x4009650	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009312	        0x4883fb10	                           cmp rbx, 0x10	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009316	     0xf85ac040000	                           jne 0x40097c8	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400931c	    0x83bc24100100	              cmp dword [rsp + 0x110], 2	      1787	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009324	     0xf840e1f0000	                            je 0x400b238	      1787	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400932a	    0x8b8424100100	           mov eax, dword [rsp + 0x110] 	      1789	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009331	          0x83e803	                              sub eax, 3	      1789	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009334	          0x83f801	                              cmp eax, 1	      1789	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009337	     0xf86db1b0000	                           jbe 0x400af18	      1789	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400933d	      0xba05000000	                              mov edx, 5	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x4009342	      0xbe00000000	                              mov esi, 0	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x4009347	            0x31ff	                            xor edi, edi	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x4009349	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x400934e	          0x4c89e5	                            mov rbp, r12	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x4009351	      0xe800000000	                          call 0x4009356	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x4009356	          0x4889c7	                            mov rdi, rax	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x4009359	            0x31c0	                            xor eax, eax	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x400935b	      0xe800000000	                          call 0x4009360	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x4009360	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x4009365	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1868	dwarf.c	FUNCTION_30	SWITCH_2	IF_6
0x400936c	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x400936f	            0x85c0	                           test eax, eax	      1868	dwarf.c	FUNCTION_30	SWITCH_2	IF_6
0x4009371	     0xf8541020000	                           jne 0x40095b8	      1868	dwarf.c	FUNCTION_30	SWITCH_2	IF_6
0x4009377	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400937c	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009381	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009383	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009388	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400938d	      0xe86e6fffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009392	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x4009397	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400939a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400939f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40093a4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40093a6	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x40093aa	      0xe800000000	                          call 0x40093af	       104	stdio2.h	CALL_16
0x40093af	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40093b4	      0xe937030000	                           jmp 0x40096f0	       104	stdio2.h	CALL_16
0x40093b9	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40093c0	        0x4883fb19	                           cmp rbx, 0x19	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40093c4	     0xf84c6020000	                            je 0x4009690	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40093ca	     0xf8780010000	                            ja 0x4009550	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40093d0	        0x4883fb15	                           cmp rbx, 0x15	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40093d4	     0xf841e0a0000	                            je 0x4009df8	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40093da	     0xf86500a0000	                           jbe 0x4009e30	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40093e0	        0x4883fb16	                           cmp rbx, 0x16	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40093e4	     0xf85b6040000	                           jne 0x40098a0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40093ea	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40093ef	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40093f1	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x40093f4	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x40093f7	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x40093fc	      0x4c895c2418	             mov qword [rsp + 0x18], r11	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009401	      0xe800000000	                          call 0x4009406	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009406	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009409	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      1846	dwarf.c	FUNCTION_30	SWITCH_1
0x400940d	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x4009412	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x4009417	          0x4901c4	                            add r12, rax	      1846	dwarf.c	FUNCTION_30	SWITCH_1
0x400941a	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x4009421	            0x85c0	                           test eax, eax	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x4009423	     0xf84d71c0000	                            je 0x400b100	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x4009429	        0x410fbee9	                          movsx ebp, r9b	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x400942d	        0x4883fb21	                           cmp rbx, 0x21	      1849	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x4009431	     0xf84501e0000	                            je 0x400b287	      1849	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x4009437	              0x55	                                push rbp	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009438	        0xff742418	                 push qword [rsp + 0x18]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x400943c	          0x4d89e8	                             mov r8, r13	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x400943f	        0xff742410	                 push qword [rsp + 0x10]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009443	    0x8b8424380100	           mov eax, dword [rsp + 0x138] 	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x400944a	          0x4c89e1	                            mov rcx, r12	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x400944d	          0x4c89da	                            mov rdx, r11	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009450	          0x4889de	                            mov rsi, rbx	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009453	          0x4c89f7	                            mov rdi, r14	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009456	              0x50	                                push rax	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009457	            0x4157	                                push r15	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009459	    0x8b8424380100	           mov eax, dword [rsp + 0x138] 	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009460	              0x50	                                push rax	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009461	    0xffb424380100	                push qword [rsp + 0x138]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009468	    0xffb424380100	                push qword [rsp + 0x138]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x400946f	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009474	      0xe8a7fdffff	    call sym.read_and_display_attr_value	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009479	        0x4883c440	                           add rsp, 0x40	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x400947d	          0x4889c5	                            mov rbp, rax	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009480	      0xe930feffff	                           jmp 0x40092b5	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009485	           0xf1f00	                         nop dword [rax]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4009488	        0x4883fb0b	                            cmp rbx, 0xb	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400948c	     0xf8340030000	                           jae 0x40097d2	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009492	        0x4883fb05	                              cmp rbx, 5	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009496	     0xf8494060000	                            je 0x4009b30	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400949c	        0x4883fb06	                              cmp rbx, 6	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40094a0	     0xf8494090000	                            je 0x4009e3a	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40094a6	        0x4883fb01	                              cmp rbx, 1	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40094aa	     0xf85e0030000	                           jne 0x4009890	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40094b0	    0x8bb424000100	           mov esi, dword [rsp + 0x100] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094b7	          0x83fe08	                              cmp esi, 8	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094ba	     0xf87d01b0000	                            ja 0x400b090	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094c0	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094c7	          0x4c01e0	                            add rax, r12	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094ca	          0x4939c5	                            cmp r13, rax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094cd	            0x770b	                            ja 0x40094da	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094cf	          0x4d39ec	                            cmp r12, r13	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094d2	            0x7312	                           jae 0x40094e6	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094d4	          0x4489ee	                           mov esi, r13d	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094d7	          0x4429e6	                           sub esi, r12d	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094da	          0x8d46ff	                      lea eax, [rsi - 1]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094dd	          0x83f807	                              cmp eax, 7	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094e0	     0xf86f61b0000	                           jbe 0x400b0dc	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094e6	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094ef	          0x4c89e5	                            mov rbp, r12	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094f2	    0x4803ac240001	            add rbp, qword [rsp + 0x100]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x40094fa	    0x448b9c242001	          mov r11d, dword [rsp + 0x120] 	      1889	dwarf.c	FUNCTION_30	SWITCH_2	IF_9
0x4009502	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4009505	          0x4585db	                         test r11d, r11d	      1889	dwarf.c	FUNCTION_30	SWITCH_2	IF_9
0x4009508	     0xf85aa000000	                           jne 0x40095b8	      1889	dwarf.c	FUNCTION_30	SWITCH_2	IF_9
0x400950e	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009513	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009515	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400951a	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x400951f	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009524	      0xe8d76dffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009529	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x400952e	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x4009531	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009536	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400953b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400953d	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x4009541	      0xe800000000	                          call 0x4009546	       104	stdio2.h	CALL_16
0x4009546	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400954b	      0xe9a0010000	                           jmp 0x40096f0	       104	stdio2.h	CALL_16
0x4009550	    0x4881fb021f00	                         cmp rbx, 0x1f02	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009557	     0xf84b3070000	                            je 0x4009d10	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400955d	     0xf8735190000	                            ja 0x400ae98	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009563	        0x4883fb1f	                           cmp rbx, 0x1f	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009567	     0xf8439030000	                            je 0x40098a6	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400956d	    0x4881fb011f00	                         cmp rbx, 0x1f01	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009574	     0xf8516030000	                           jne 0x4009890	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400957a	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400957f	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009582	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009584	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009587	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x400958c	      0xe800000000	                          call 0x4009591	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009591	        0x8b6c2444	            mov ebp, dword [rsp + 0x44] 	      1861	dwarf.c	FUNCTION_30	SWITCH_1
0x4009595	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1861	dwarf.c	FUNCTION_30	SWITCH_1
0x400959a	      0x4889442448	             mov qword [rsp + 0x48], rax	      1860	dwarf.c	FUNCTION_30	SWITCH_1	CALL_12
0x400959f	          0x4c01e5	                            add rbp, r12	      1861	dwarf.c	FUNCTION_30	SWITCH_1
0x40095a2	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      2113	dwarf.c	FUNCTION_30	SWITCH_2	IF_36
0x40095a9	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x40095ac	            0x85c0	                           test eax, eax	      2113	dwarf.c	FUNCTION_30	SWITCH_2	IF_36
0x40095ae	     0xf847e1d0000	                            je 0x400b332	      2113	dwarf.c	FUNCTION_30	SWITCH_2	IF_36
0x40095b4	         0xf1f4000	                         nop dword [rax]	      2113	dwarf.c	FUNCTION_30	SWITCH_2	IF_36
0x40095b8	    0x8b0500000000	            mov eax, dword [0x040095be] 	      2126	dwarf.c	FUNCTION_30	IF_37
0x40095be	            0x85c0	                           test eax, eax	      2126	dwarf.c	FUNCTION_30	IF_37
0x40095c0	     0xf8546010000	                           jne 0x400970c	      2126	dwarf.c	FUNCTION_30	IF_37
0x40095c6	          0x4d85ff	                           test r15, r15	      2126	dwarf.c	FUNCTION_30	IF_37
0x40095c9	     0xf843d010000	                            je 0x400970c	      2126	dwarf.c	FUNCTION_30	IF_37
0x40095cf	        0x4983fe55	                           cmp r14, 0x55	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40095d3	     0xf84d70f0000	                            je 0x400a5b0	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40095d9	     0xf86f9030000	                           jbe 0x40099d8	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40095df	    0x4981fe142100	                         cmp r14, 0x2114	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40095e6	     0xf86e40e0000	                           jbe 0x400a4d0	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40095ec	    0x4981fe322100	                         cmp r14, 0x2132	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40095f3	     0xf849f0f0000	                            je 0x400a598	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40095f9	     0xf87a10e0000	                            ja 0x400a4a0	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40095ff	    0x4981fe302100	                         cmp r14, 0x2130	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009606	     0xf84f50e0000	                            je 0x400a501	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400960c	    0x4981fe312100	                         cmp r14, 0x2131	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009613	     0xf85f3000000	                           jne 0x400970c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009619	    0x448b15000000	           mov r10d, dword [0x04009620] 	      2286	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49
0x4009620	          0x4585d2	                         test r10d, r10d	      2286	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49
0x4009623	     0xf848cfcffff	                            je 0x40092b5	      2286	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49
0x4009629	        0x4883fb07	                              cmp rbx, 7	      2287	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x400962d	     0xf8542250000	                           jne 0x400bb75	      2287	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x4009633	        0x488d45f8	                      lea rax, [rbp - 8]	      2290	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x4009637	    0x48c705000000	               mov qword [0x04009642], 8	      2291	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x4009642	    0x488905000000	            mov qword [0x04009649], rax 	      2290	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x4009649	      0xe967fcffff	                           jmp 0x40092b5	      2292	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x400964e	            0x6690	                                     nop	      2292	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x4009650	        0x4883fb0d	                            cmp rbx, 0xd	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009654	     0xf8526020000	                           jne 0x4009880	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400965a	      0x488d742444	                   lea rsi, [rsp + 0x44]	       348	dwarf.c	FUNCTION_9	CALL_1
0x400965f	          0x4c89e9	                            mov rcx, r13	       348	dwarf.c	FUNCTION_9	CALL_1
0x4009662	      0xba01000000	                              mov edx, 1	       348	dwarf.c	FUNCTION_9	CALL_1
0x4009667	          0x4c89e7	                            mov rdi, r12	       348	dwarf.c	FUNCTION_9	CALL_1
0x400966a	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       348	dwarf.c	FUNCTION_9	CALL_1
0x400966f	      0xe800000000	                          call 0x4009674	       348	dwarf.c	FUNCTION_9	CALL_1
0x4009674	        0x8b6c2444	            mov ebp, dword [rsp + 0x44] 	      1830	dwarf.c	FUNCTION_30	SWITCH_1
0x4009678	      0x4889442448	             mov qword [rsp + 0x48], rax	      1829	dwarf.c	FUNCTION_30	SWITCH_1	CALL_5
0x400967d	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1831	dwarf.c	FUNCTION_30	SWITCH_1
0x4009682	          0x4c01e5	                            add rbp, r12	      1830	dwarf.c	FUNCTION_30	SWITCH_1
0x4009685	            0xeb15	                           jmp 0x400969c	      1831	dwarf.c	FUNCTION_30	SWITCH_1
0x4009687	    0x660f1f840000	                    nop word [rax + rax]	      1831	dwarf.c	FUNCTION_30	SWITCH_1
0x4009690	    0x48c744244801	               mov qword [rsp + 0x48], 1	      1809	dwarf.c	FUNCTION_30	SWITCH_1
0x4009699	          0x4c89e5	                            mov rbp, r12	      1810	dwarf.c	FUNCTION_30	SWITCH_1
0x400969c	    0x448b84242001	           mov r8d, dword [rsp + 0x120] 	      1899	dwarf.c	FUNCTION_30	SWITCH_2	IF_10
0x40096a4	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x40096a7	          0x4585c0	                           test r8d, r8d	      1899	dwarf.c	FUNCTION_30	SWITCH_2	IF_10
0x40096aa	     0xf8508ffffff	                           jne 0x40095b8	      1899	dwarf.c	FUNCTION_30	SWITCH_2	IF_10
0x40096b0	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x40096b5	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x40096ba	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x40096bc	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x40096c1	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x40096c6	      0xe8356cffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x40096cb	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x40096d0	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x40096d3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40096d8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40096dd	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40096df	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x40096e3	      0xe800000000	                          call 0x40096e8	       104	stdio2.h	CALL_16
0x40096e8	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40096ed	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40096f0	    0x8b0500000000	            mov eax, dword [0x040096f6] 	      2124	dwarf.c	FUNCTION_30	IF_37
0x40096f6	            0x85c0	                           test eax, eax	      2124	dwarf.c	FUNCTION_30	IF_37
0x40096f8	     0xf85bafeffff	                           jne 0x40095b8	      2124	dwarf.c	FUNCTION_30	IF_37
0x40096fe	    0x8b0500000000	            mov eax, dword [0x04009704] 	      2124	dwarf.c	FUNCTION_30	IF_37
0x4009704	            0x85c0	                           test eax, eax	      2124	dwarf.c	FUNCTION_30	IF_37
0x4009706	     0xf85acfeffff	                           jne 0x40095b8	      2124	dwarf.c	FUNCTION_30	IF_37
0x400970c	    0x448b8c242001	           mov r9d, dword [rsp + 0x120] 	      2306	dwarf.c	FUNCTION_30	IF_50
0x4009714	          0x4585c9	                           test r9d, r9d	      2306	dwarf.c	FUNCTION_30	IF_50
0x4009717	     0xf8598fbffff	                           jne 0x40092b5	      2306	dwarf.c	FUNCTION_30	IF_50
0x400971d	          0x4d85f6	                           test r14, r14	      2306	dwarf.c	FUNCTION_30	IF_50
0x4009720	     0xf848ffbffff	                            je 0x40092b5	      2306	dwarf.c	FUNCTION_30	IF_50
0x4009726	        0x4983fe42	                           cmp r14, 0x42	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400972a	     0xf84d0150000	                            je 0x400ad00	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009730	     0xf8732040000	                            ja 0x4009b68	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009736	        0x4983fe22	                           cmp r14, 0x22	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400973a	     0xf8450030000	                            je 0x4009a90	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009740	     0xf87ea020000	                            ja 0x4009a30	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009746	        0x4983fe13	                           cmp r14, 0x13	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400974a	     0xf84c8160000	                            je 0x400ae18	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009750	     0xf860a100000	                           jbe 0x400a760	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009756	        0x4983fe18	                           cmp r14, 0x18	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400975a	     0xf84f0150000	                            je 0x400ad50	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009760	     0xf870a180000	                            ja 0x400af70	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009766	        0x4983fe17	                           cmp r14, 0x17	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400976a	     0xf8545fbffff	                           jne 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009770	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4009775	      0xe800000000	                          call 0x400977a	       104	stdio2.h	CALL_16
0x400977a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x400977f	        0x4883f802	                              cmp rax, 2	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4009783	     0xf84851e0000	                            je 0x400b60e	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4009789	        0x4883f803	                              cmp rax, 3	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x400978d	     0xf84651e0000	                            je 0x400b5f8	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4009793	        0x4883f801	                              cmp rax, 1	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4009797	     0xf84871e0000	                            je 0x400b624	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x400979d	            0x31ff	                            xor edi, edi	      2461	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12	CALL_106
0x400979f	      0xba05000000	                              mov edx, 5	      2461	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12	CALL_106
0x40097a4	      0xbe00000000	                              mov esi, 0	      2461	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12	CALL_106
0x40097a9	      0xe800000000	                          call 0x40097ae	      2461	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12	CALL_106
0x40097ae	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40097b3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40097b6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40097b8	      0xe800000000	                          call 0x40097bd	       104	stdio2.h	CALL_16
0x40097bd	      0xe9f3faffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x40097c2	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x40097c8	        0x4883fb11	                           cmp rbx, 0x11	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40097cc	     0xf85be000000	                           jne 0x4009890	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40097d2	      0x498d6c2401	                      lea rbp, [r12 + 1]	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x40097d7	      0xbe01000000	                              mov esi, 1	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x40097dc	          0x4939ed	                            cmp r13, rbp	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x40097df	     0xf865e030000	                           jbe 0x4009b43	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x40097e5	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x40097ea	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x40097ef	          0x4c89e7	                            mov rdi, r12	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x40097f2	    0xff1500000000	                 call qword [0x040097f8]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x40097f8	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x40097fd	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009802	      0x4889442448	             mov qword [rsp + 0x48], rax	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009807	    0x660f1f840000	                    nop word [rax + rax]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009810	        0x4883fb13	                           cmp rbx, 0x13	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009814	     0xf86de000000	                           jbe 0x40098f8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400981a	        0x4883fb1e	                           cmp rbx, 0x1e	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400981e	     0xf84b4090000	                            je 0x400a1d8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009824	     0xf863e040000	                           jbe 0x4009c68	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400982a	    0x4881fb011f00	                         cmp rbx, 0x1f01	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009831	     0xf846bfdffff	                            je 0x40095a2	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009837	     0xf8733070000	                            ja 0x4009f70	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400983d	        0x4883fb20	                           cmp rbx, 0x20	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009841	     0xf84e9080000	                            je 0x400a130	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009847	     0xf825b0b0000	                            jb 0x400a3a8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400984d	        0x4883fb21	                           cmp rbx, 0x21	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009851	     0xf85290b0000	                           jne 0x400a380	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009857	    0x8bbc24200100	           mov edi, dword [rsp + 0x120] 	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x400985e	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4009861	            0x85ff	                           test edi, edi	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x4009863	     0xf854ffdffff	                           jne 0x40095b8	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x4009869	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x400986e	      0x4c89542418	             mov qword [rsp + 0x18], r10	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x4009873	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009875	          0x4c89de	                            mov rsi, r11	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009878	      0xe944feffff	                           jmp 0x40096c1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400987d	           0xf1f00	                         nop dword [rax]	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009880	        0x4883fb0e	                            cmp rbx, 0xe	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009884	            0x7420	                            je 0x40098a6	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009886	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009890	          0x4c89e5	                            mov rbp, r12	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009893	      0xe978ffffff	                           jmp 0x4009810	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009898	     0xf1f84000000	                   nop dword [rax + rax]	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40098a0	        0x4883fb17	                           cmp rbx, 0x17	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40098a4	            0x75ea	                           jne 0x4009890	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40098a6	    0x8bb424080100	           mov esi, dword [rsp + 0x108] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098ad	          0x83fe08	                              cmp esi, 8	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098b0	     0xf875a170000	                            ja 0x400b010	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098b6	    0x8b8424080100	           mov eax, dword [rsp + 0x108] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098bd	          0x4c01e0	                            add rax, r12	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098c0	          0x4939c5	                            cmp r13, rax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098c3	            0x770b	                            ja 0x40098d0	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098c5	          0x4d39ec	                            cmp r12, r13	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098c8	            0x7312	                           jae 0x40098dc	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098ca	          0x4489ee	                           mov esi, r13d	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098cd	          0x4429e6	                           sub esi, r12d	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098d0	          0x8d46ff	                      lea eax, [rsi - 1]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098d3	          0x83f807	                              cmp eax, 7	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098d6	     0xf868a170000	                           jbe 0x400b066	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098dc	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098e5	          0x4c89e5	                            mov rbp, r12	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098e8	    0x4803ac240801	            add rbp, qword [rsp + 0x108]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40098f0	      0xe91bffffff	                           jmp 0x4009810	      1806	dwarf.c	FUNCTION_30	SWITCH_1
0x40098f5	           0xf1f00	                         nop dword [rax]	      1806	dwarf.c	FUNCTION_30	SWITCH_1
0x40098f8	        0x4883fb11	                           cmp rbx, 0x11	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x40098fc	     0xf838a030000	                           jae 0x4009c8c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009902	        0x4883fb08	                              cmp rbx, 8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009906	     0xf84f4070000	                            je 0x400a100	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400990c	     0xf87d6020000	                            ja 0x4009be8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009912	        0x4883fb04	                              cmp rbx, 4	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009916	     0xf8494080000	                            je 0x400a1b0	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400991c	     0xf87ce080000	                            ja 0x400a1f0	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009922	        0x4883fb01	                              cmp rbx, 1	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009926	     0xf84cefbffff	                            je 0x40094fa	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400992c	        0x4883fb03	                              cmp rbx, 3	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009930	     0xf854a0a0000	                           jne 0x400a380	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009936	        0x4c8d5502	                      lea r10, [rbp + 2]	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x400993a	          0x4d39d5	                            cmp r13, r10	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x400993d	     0xf86cd050000	                           jbe 0x4009f10	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4009943	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4009948	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x400994d	          0x4889ef	                            mov rdi, rbp	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4009950	      0xbe02000000	                              mov esi, 2	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4009955	    0xff1500000000	                 call qword [0x0400995b]	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x400995b	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4009960	          0x4889c5	                            mov rbp, rax	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4009963	      0x4889442448	             mov qword [rsp + 0x48], rax	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4009968	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x400996d	          0x4c89d0	                            mov rax, r10	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4009970	          0x4801e8	                            add rax, rbp	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4009973	            0x720b	                            jb 0x4009980	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4009975	          0x4939c5	                            cmp r13, rax	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4009978	            0x7343	                           jae 0x40099bd	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x400997a	    0x660f1f440000	                    nop word [rax + rax]	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4009980	      0xba05000000	                              mov edx, 5	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4009985	      0xbe00000000	                              mov esi, 0	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x400998a	            0x31ff	                            xor edi, edi	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x400998c	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4009991	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4009996	      0xe800000000	                          call 0x400999b	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x400999b	          0x4889ee	                            mov rsi, rbp	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x400999e	          0x4889c7	                            mov rdi, rax	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x40099a1	            0x31c0	                            xor eax, eax	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x40099a3	      0xe800000000	                          call 0x40099a8	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x40099a8	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x40099ad	          0x4c89ed	                            mov rbp, r13	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x40099b0	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x40099b5	          0x4c29d5	                            sub rbp, r10	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x40099b8	      0x48896c2448	             mov qword [rsp + 0x48], rbp	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x40099bd	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      2054	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x40099c4	            0x85c0	                           test eax, eax	      2054	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x40099c6	     0xf84f40a0000	                            je 0x400a4c0	      2054	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x40099cc	          0x4c01d5	                            add rbp, r10	      2055	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x40099cf	      0xe9e4fbffff	                           jmp 0x40095b8	      2055	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x40099d4	         0xf1f4000	                         nop dword [rax]	      2055	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x40099d8	        0x4983fe38	                           cmp r14, 0x38	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40099dc	     0xf849e040000	                            je 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40099e2	     0xf8790060000	                            ja 0x400a078	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40099e8	        0x4983fe19	                           cmp r14, 0x19	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40099ec	     0xf848e040000	                            je 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40099f2	     0xf87380a0000	                            ja 0x400a430	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40099f8	        0x4983fe02	                              cmp r14, 2	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40099fc	     0xf847e040000	                            je 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009a02	        0x4983fe11	                           cmp r14, 0x11	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009a06	     0xf8500fdffff	                           jne 0x400970c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009a0c	    0x8b0500000000	            mov eax, dword [0x04009a12] 	      2204	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4009a12	            0x85c0	                           test eax, eax	      2204	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4009a14	     0xf849bf8ffff	                            je 0x40092b5	      2204	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4009a1a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2205	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4009a1f	        0x49894718	             mov qword [r15 + 0x18], rax	      2205	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4009a23	      0xe98df8ffff	                           jmp 0x40092b5	      2205	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4009a28	     0xf1f84000000	                   nop dword [rax + rax]	      2205	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4009a30	        0x4983fe36	                           cmp r14, 0x36	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a34	     0xf84860d0000	                            je 0x400a7c0	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a3a	     0xf86300c0000	                           jbe 0x400a670	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a40	        0x4983fe3d	                           cmp r14, 0x3d	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a44	     0xf8466120000	                            je 0x400acb0	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a4a	     0xf86b9240000	                           jbe 0x400bf09	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a50	        0x4983fe3e	                           cmp r14, 0x3e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a54	     0xf84d60e0000	                            je 0x400a930	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a5a	        0x4983fe40	                           cmp r14, 0x40	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a5e	     0xf8551f8ffff	                           jne 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a64	    0xc70500000000	               mov dword [0x04009a6e], 1	      2570	dwarf.c	FUNCTION_30	SWITCH_7
0x4009a6e	    0x83bc24100100	              cmp dword [rsp + 0x110], 3	      2588	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4009a76	            0x7f0e	                            jg 0x4009a86	      2588	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4009a78	        0x488d43fa	                      lea rax, [rbx - 6]	      2589	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4009a7c	        0x4883f801	                              cmp rax, 1	      2589	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4009a80	     0xf865a150000	                           jbe 0x400afe0	      2589	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4009a86	        0x4883fb17	                           cmp rbx, 0x17	      2590	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4009a8a	     0xf8450150000	                            je 0x400afe0	      2590	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4009a90	          0x4d85d2	                           test r10, r10	      2599	dwarf.c	FUNCTION_30	SWITCH_7	IF_56
0x4009a93	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2599	dwarf.c	FUNCTION_30	SWITCH_7	IF_56
0x4009a98	     0xf8417f8ffff	                            je 0x40092b5	      2599	dwarf.c	FUNCTION_30	SWITCH_7	IF_56
0x4009a9e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009aa3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009aa8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009aaa	      0xe800000000	                          call 0x4009aaf	       104	stdio2.h	CALL_16
0x4009aaf	        0x4883ec08	                              sub rsp, 8	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009ab3	        0xff742408	                    push qword [rsp + 8]	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009ab7	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009abc	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009ac1	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009ac6	    0x8b8c24200100	           mov ecx, dword [rsp + 0x120] 	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009acd	    0x8b9424180100	           mov edx, dword [rsp + 0x118] 	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009ad4	    0x8bb424100100	           mov esi, dword [rsp + 0x110] 	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009adb	          0x4c89d7	                            mov rdi, r10	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009ade	      0xe8edd7ffff	     call sym.decode_location_expression	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009ae3	      0xbf29000000	                           mov edi, 0x29	       104	stdio2.h	CALL_16
0x4009ae8	            0x89c3	                            mov ebx, eax	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4009aea	      0xe800000000	                          call 0x4009aef	       104	stdio2.h	CALL_16
0x4009aef	            0x85db	                           test ebx, ebx	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4009af1	              0x5f	                                 pop rdi	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4009af2	            0x4158	                                  pop r8	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4009af4	     0xf84bbf7ffff	                            je 0x40092b5	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4009afa	    0x8b3500000000	            mov esi, dword [0x04009b00] 	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4009b00	            0x85f6	                           test esi, esi	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4009b02	     0xf85adf7ffff	                           jne 0x40092b5	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4009b08	            0x31ff	                            xor edi, edi	      2612	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_129
0x4009b0a	      0xba05000000	                              mov edx, 5	      2612	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_129
0x4009b0f	      0xbe00000000	                              mov esi, 0	      2612	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_129
0x4009b14	      0xe800000000	                          call 0x4009b19	      2612	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_129
0x4009b19	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009b1e	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009b21	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009b23	      0xe800000000	                          call 0x4009b28	       104	stdio2.h	CALL_16
0x4009b28	      0xe988f7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x4009b2d	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4009b30	      0x498d6c2402	                      lea rbp, [r12 + 2]	      1820	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b35	      0xbe02000000	                              mov esi, 2	      1820	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b3a	          0x4939ed	                            cmp r13, rbp	      1820	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b3d	     0xf87a2fcffff	                            ja 0x40097e5	      1820	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b43	          0x4d39ec	                            cmp r12, r13	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b46	     0xf83c4fcffff	                           jae 0x4009810	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b4c	          0x4c89ee	                            mov rsi, r13	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b4f	          0x4c29e6	                            sub rsi, r12	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b52	          0x8d46ff	                      lea eax, [rsi - 1]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b55	          0x83f807	                              cmp eax, 7	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b58	     0xf87b2fcffff	                            ja 0x4009810	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b5e	      0xe982fcffff	                           jmp 0x40097e5	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b63	       0xf1f440000	                   nop dword [rax + rax]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009b68	        0x4983fe6b	                           cmp r14, 0x6b	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b6c	     0xf84560d0000	                            je 0x400a8c8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b72	     0xf87780b0000	                            ja 0x400a6f0	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b78	        0x4983fe4d	                           cmp r14, 0x4d	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b7c	     0xf84ecfeffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b82	     0xf8628130000	                           jbe 0x400aeb0	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b88	        0x4983fe5e	                           cmp r14, 0x5e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b8c	     0xf8436100000	                            je 0x400abc8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b92	     0xf86301c0000	                           jbe 0x400b7c8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b98	        0x4983fe65	                           cmp r14, 0x65	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b9c	     0xf8513f7ffff	                           jne 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009ba2	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4009ba7	      0xe800000000	                          call 0x4009bac	       104	stdio2.h	CALL_16
0x4009bac	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4009bb1	        0x4883f801	                              cmp rax, 1	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4009bb5	     0xf840c1b0000	                            je 0x400b6c7	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4009bbb	     0xf82ae1a0000	                            jb 0x400b66f	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4009bc1	        0x4883f802	                              cmp rax, 2	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4009bc5	     0xf856f1a0000	                           jne 0x400b63a	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4009bcb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009bd0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009bd5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009bd7	      0xe800000000	                          call 0x4009bdc	       104	stdio2.h	CALL_16
0x4009bdc	      0xe9d4f6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x4009be1	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4009be8	        0x4883fb0d	                            cmp rbx, 0xd	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009bec	     0xf87160a0000	                            ja 0x400a608	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009bf2	        0x4883fb0b	                            cmp rbx, 0xb	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009bf6	     0xf83a0faffff	                           jae 0x400969c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009bfc	        0x4883fb09	                              cmp rbx, 9	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c00	     0xf849a060000	                            je 0x400a2a0	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c06	        0x4883fb0a	                            cmp rbx, 0xa	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c0a	     0xf8570070000	                           jne 0x400a380	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c10	        0x4c8d5501	                      lea r10, [rbp + 1]	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c14	          0x4d39d5	                            cmp r13, r10	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c17	     0xf86f3020000	                           jbe 0x4009f10	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c1d	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c22	      0x4c89542418	             mov qword [rsp + 0x18], r10	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c27	      0xbe01000000	                              mov esi, 1	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c2c	          0x4889ef	                            mov rdi, rbp	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c2f	    0xff1500000000	                 call qword [0x04009c35]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c35	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2046	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c3a	          0x4889c5	                            mov rbp, rax	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c3d	      0x4889442448	             mov qword [rsp + 0x48], rax	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c42	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4009c47	        0x498d0402	                    lea rax, [r10 + rax]	      2046	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c4b	          0x4939c5	                            cmp r13, rax	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4009c4e	     0xf822cfdffff	                            jb 0x4009980	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4009c54	          0x4939c2	                            cmp r10, rax	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4009c57	     0xf8723fdffff	                            ja 0x4009980	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4009c5d	      0xe95bfdffff	                           jmp 0x40099bd	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4009c62	    0x660f1f440000	                    nop word [rax + rax]	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4009c68	        0x4883fb16	                           cmp rbx, 0x16	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c6c	     0xf8484000000	                            je 0x4009cf6	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c72	     0xf87e9060000	                            ja 0x400a361	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c78	        0x4883fb14	                           cmp rbx, 0x14	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c7c	     0xf847e050000	                            je 0x400a200	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c82	        0x4883fb15	                           cmp rbx, 0x15	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c86	     0xf85f4060000	                           jne 0x400a380	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009c8c	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1882	dwarf.c	FUNCTION_30	SWITCH_2	IF_8
0x4009c93	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4009c96	            0x85c0	                           test eax, eax	      1882	dwarf.c	FUNCTION_30	SWITCH_2	IF_8
0x4009c98	     0xf851af9ffff	                           jne 0x40095b8	      1882	dwarf.c	FUNCTION_30	SWITCH_2	IF_8
0x4009c9e	      0x488b742408	                mov rsi, qword [rsp + 8]	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009ca3	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009ca8	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009caa	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009caf	      0x4803742448	             add rsi, qword [rsp + 0x48]	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009cb4	      0xe9cff6ffff	                           jmp 0x4009388	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009cb9	     0xf1f80000000	                         nop dword [rax]	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009cc0	    0x8b0500000000	            mov eax, dword [0x04009cc6] 	      1925	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4009cc6	            0x85c0	                           test eax, eax	      1925	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4009cc8	            0x7529	                           jne 0x4009cf3	      1925	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4009cca	          0x4d39c5	                             cmp r13, r8	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009ccd	     0xf876e170000	                            ja 0x400b441	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009cd3	          0x4c39ed	                            cmp rbp, r13	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009cd6	            0x7312	                           jae 0x4009cea	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009cd8	          0x4c89ee	                            mov rsi, r13	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009cdb	          0x4829ee	                            sub rsi, rbp	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009cde	          0x8d46ff	                      lea eax, [rsi - 1]	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009ce1	          0x83f807	                              cmp eax, 7	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009ce4	     0xf865c170000	                           jbe 0x400b446	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009cea	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4009cf3	          0x4c89c5	                             mov rbp, r8	      1934	dwarf.c	FUNCTION_30	SWITCH_2
0x4009cf6	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      2124	dwarf.c	FUNCTION_30	IF_37
0x4009cfd	            0x85c0	                           test eax, eax	      2124	dwarf.c	FUNCTION_30	IF_37
0x4009cff	     0xf853e040000	                           jne 0x400a143	      2124	dwarf.c	FUNCTION_30	IF_37
0x4009d05	          0x4531d2	                          xor r10d, r10d	      2124	dwarf.c	FUNCTION_30	IF_37
0x4009d08	      0xe9e3f9ffff	                           jmp 0x40096f0	      2124	dwarf.c	FUNCTION_30	IF_37
0x4009d0d	           0xf1f00	                         nop dword [rax]	      2124	dwarf.c	FUNCTION_30	IF_37
0x4009d10	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009d15	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009d18	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009d1a	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009d1d	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009d22	      0xe800000000	                          call 0x4009d27	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009d27	        0x8b6c2444	            mov ebp, dword [rsp + 0x44] 	      1835	dwarf.c	FUNCTION_30	SWITCH_1
0x4009d2b	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1835	dwarf.c	FUNCTION_30	SWITCH_1
0x4009d30	      0x4889442448	             mov qword [rsp + 0x48], rax	      1834	dwarf.c	FUNCTION_30	SWITCH_1	CALL_6
0x4009d35	          0x4c01e5	                            add rbp, r12	      1835	dwarf.c	FUNCTION_30	SWITCH_1
0x4009d38	    0x448b84242001	           mov r8d, dword [rsp + 0x120] 	      2075	dwarf.c	FUNCTION_30	SWITCH_2	IF_33
0x4009d40	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2075	dwarf.c	FUNCTION_30	SWITCH_2	IF_33
0x4009d45	          0x4585c0	                           test r8d, r8d	      2075	dwarf.c	FUNCTION_30	SWITCH_2	IF_33
0x4009d48	     0xf8572140000	                           jne 0x400b1c0	      2075	dwarf.c	FUNCTION_30	SWITCH_2	IF_33
0x4009d4e	        0x488b0424	                    mov rax, qword [rsp]	      2077	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_51
0x4009d52	      0xbe2e000000	                           mov esi, 0x2e	      2077	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_51
0x4009d57	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2077	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_51
0x4009d5b	      0xe800000000	                          call 0x4009d60	      2077	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_51
0x4009d60	          0x4885c0	                           test rax, rax	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d63	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d68	     0xf8400200000	                            je 0x400bd6e	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d6e	      0xb905000000	                              mov ecx, 5	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d73	      0xbf00000000	                              mov edi, 0	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d78	          0x4889c6	                            mov rsi, rax	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d7b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d7d	           0xf94c1	                                 sete cl	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d80	           0xfb6c9	                           movzx ecx, cl	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4009d83	    0x488b94240801	           mov rdx, qword [rsp + 0x108] 	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4009d8b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4009d90	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4009d95	      0x44894c2428	             mov dword [rsp + 0x28], r9d	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4009d9a	      0xe88166ffff	           call sym.fetch_indexed_string	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4009d9f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009da4	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009da6	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009dab	      0x4889442420	             mov qword [rsp + 0x20], rax	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4009db0	      0xe84b65ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009db5	      0xba05000000	                              mov edx, 5	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4009dba	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009dbf	      0xbe00000000	                              mov esi, 0	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4009dc4	            0x31ff	                            xor edi, edi	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x4009dc6	      0xe800000000	                          call 0x4009dcb	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x4009dcb	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       104	stdio2.h	CALL_16
0x4009dd0	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       104	stdio2.h	CALL_16
0x4009dd5	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009dd8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4009ddd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009de2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009de4	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x4009de8	      0xe800000000	                          call 0x4009ded	       104	stdio2.h	CALL_16
0x4009ded	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4009df0	      0xe9fbf8ffff	                           jmp 0x40096f0	      1771	dwarf.c	FUNCTION_30
0x4009df5	           0xf1f00	                         nop dword [rax]	      1771	dwarf.c	FUNCTION_30
0x4009df8	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009dfd	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009e00	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009e02	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009e05	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009e0a	      0x4c895c2418	             mov qword [rsp + 0x18], r11	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009e0f	      0xe800000000	                          call 0x4009e14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009e14	        0x8b6c2444	            mov ebp, dword [rsp + 0x44] 	      1841	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e18	      0x4889442448	             mov qword [rsp + 0x48], rax	      1840	dwarf.c	FUNCTION_30	SWITCH_1	CALL_7
0x4009e1d	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1842	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e22	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1842	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e27	          0x4c01e5	                            add rbp, r12	      1841	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e2a	      0xe9e1f9ffff	                           jmp 0x4009810	      1842	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e2f	              0x90	                                     nop	      1842	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e30	        0x4883fb13	                           cmp rbx, 0x13	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e34	     0xf8556faffff	                           jne 0x4009890	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e3a	      0x498d6c2404	                      lea rbp, [r12 + 4]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e3f	          0x4939ed	                            cmp r13, rbp	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e42	     0xf86fbfcffff	                           jbe 0x4009b43	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e48	      0xbe04000000	                              mov esi, 4	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e4d	      0xe993f9ffff	                           jmp 0x40097e5	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4009e52	        0x4983fe48	                           cmp r14, 0x48	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e56	            0x741d	                            je 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e58	     0xf87c3250000	                            ja 0x400c421	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e5e	          0x4531d2	                          xor r10d, r10d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e61	        0x4983fe40	                           cmp r14, 0x40	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e65	     0xf8427020000	                            je 0x400a092	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e6b	        0x4983fe46	                           cmp r14, 0x46	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e6f	     0xf8540f4ffff	                           jne 0x40092b5	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e75	          0x4531d2	                          xor r10d, r10d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e78	     0xf1f84000000	                   nop dword [rax + rax]	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009e80	    0x83bc24100100	              cmp dword [rsp + 0x110], 3	      2150	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009e88	            0x7f0a	                            jg 0x4009e94	      2150	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009e8a	        0x488d43fa	                      lea rax, [rbx - 6]	      2151	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009e8e	        0x4883f801	                              cmp rax, 1	      2151	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009e92	            0x760a	                           jbe 0x4009e9e	      2151	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009e94	        0x4883fb17	                           cmp rbx, 0x17	      2152	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009e98	     0xf856ef8ffff	                           jne 0x400970c	      2152	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009e9e	        0x418b474c	            mov eax, dword [r15 + 0x4c] 	      2155	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009ea2	        0x418b4f48	            mov ecx, dword [r15 + 0x48] 	      2156	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009ea6	            0x85c0	                           test eax, eax	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009ea8	     0xf842f180000	                            je 0x400b6dd	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009eae	            0x39c8	                            cmp eax, ecx	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009eb0	     0xf8627180000	                           jbe 0x400b6dd	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009eb6	        0x498b4740	            mov rax, qword [r15 + 0x40] 	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009eba	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2172	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x4009ebf	          0x4885d2	                           test rdx, rdx	      2172	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x4009ec2	            0x7409	                            je 0x4009ecd	      2172	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x4009ec4	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      2173	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x4009ec8	      0x4801542448	            add qword [rsp + 0x48], rdx 	      2173	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x4009ecd	    0x8b3500000000	            mov esi, dword [0x04009ed3] 	      2174	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009ed3	            0x89ca	                            mov edx, ecx	      2174	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009ed5	    0x4981fe372100	                         cmp r14, 0x2137	      2175	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41
0x4009edc	          0x893490	            mov dword [rax + rdx*4], esi	      2174	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4009edf	     0xf84a0180000	                            je 0x400b785	      2175	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41
0x4009ee5	        0x418b4748	            mov eax, dword [r15 + 0x48] 	      2179	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	IF_42
0x4009ee9	        0x413b4750	            cmp eax, dword [r15 + 0x50] 	      2179	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	IF_42
0x4009eed	     0xf87421c0000	                            ja 0x400bb35	      2179	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	IF_42
0x4009ef3	        0x498b4f30	            mov rcx, qword [r15 + 0x30] 	      2184	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4009ef7	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2184	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4009efc	          0x83c001	                              add eax, 1	      2185	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4009eff	        0x488934d1	            mov qword [rcx + rdx*8], rsi	      2184	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4009f03	        0x41894748	             mov dword [r15 + 0x48], eax	      2185	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4009f07	      0xe900f8ffff	                           jmp 0x400970c	      2185	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4009f0c	         0xf1f4000	                         nop dword [rax]	      2185	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4009f10	          0x4c39ed	                            cmp rbp, r13	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f13	            0x7312	                           jae 0x4009f27	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f15	          0x4c89ee	                            mov rsi, r13	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f18	          0x4829ee	                            sub rsi, rbp	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f1b	          0x8d46ff	                      lea eax, [rsi - 1]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f1e	          0x83f807	                              cmp eax, 7	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f21	     0xf86c4240000	                           jbe 0x400c3eb	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f27	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f30	      0xba05000000	                              mov edx, 5	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x4009f35	      0xbe00000000	                              mov esi, 0	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x4009f3a	            0x31ff	                            xor edi, edi	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x4009f3c	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x4009f41	            0x31ed	                            xor ebp, ebp	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x4009f43	      0xe800000000	                          call 0x4009f48	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x4009f48	          0x4889c7	                            mov rdi, rax	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x4009f4b	            0x31c0	                            xor eax, eax	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x4009f4d	      0xe800000000	                          call 0x4009f52	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x4009f52	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x4009f5b	          0x4d89ea	                            mov r10, r13	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x4009f5e	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x4009f63	      0xe955faffff	                           jmp 0x40099bd	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x4009f68	     0xf1f84000000	                   nop dword [rax + rax]	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x4009f70	    0x4881fb201f00	                         cmp rbx, 0x1f20	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f77	     0xf842b010000	                            je 0x400a0a8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f7d	    0x4881fb211f00	                         cmp rbx, 0x1f21	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f84	     0xf852d1d0000	                           jne 0x400bcb7	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4009f8a	    0x8bbc24200100	           mov edi, dword [rsp + 0x120] 	      2087	dwarf.c	FUNCTION_30	SWITCH_2	IF_34
0x4009f91	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4009f94	            0x85ff	                           test edi, edi	      2087	dwarf.c	FUNCTION_30	SWITCH_2	IF_34
0x4009f96	     0xf851cf6ffff	                           jne 0x40095b8	      2087	dwarf.c	FUNCTION_30	SWITCH_2	IF_34
0x4009f9c	    0x8b3500000000	            mov esi, dword [0x04009fa2] 	      1698	dwarf.c	FUNCTION_28	IF_1
0x4009fa2	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x4009fa7	    0x41b800000000	                              mov r8d, 0	      1699	dwarf.c	FUNCTION_28	IF_1
0x4009fad	            0x85f6	                           test esi, esi	      1698	dwarf.c	FUNCTION_28	IF_1
0x4009faf	     0xf8493000000	                            je 0x400a048	      1698	dwarf.c	FUNCTION_28	IF_1
0x4009fb5	    0x488b35000000	            mov rsi, qword [0x04009fbc] 	      1701	dwarf.c	FUNCTION_28	IF_2
0x4009fbc	          0x4885f6	                           test rsi, rsi	      1701	dwarf.c	FUNCTION_28	IF_2
0x4009fbf	     0xf84e11f0000	                            je 0x400bfa6	      1701	dwarf.c	FUNCTION_28	IF_2
0x4009fc5	      0xbf2a000000	                           mov edi, 0x2a	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4009fca	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4009fcf	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4009fd4	      0xe800000000	                          call 0x4009fd9	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4009fd9	            0x85c0	                           test eax, eax	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4009fdb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4009fe0	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4009fe5	     0xf843c1f0000	                            je 0x400bf27	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4009feb	    0x488b05000000	            mov rax, qword [0x04009ff2] 	      1708	dwarf.c	FUNCTION_28	IF_4
0x4009ff2	          0x4885c0	                           test rax, rax	      1708	dwarf.c	FUNCTION_28	IF_4
0x4009ff5	     0xf84dc230000	                            je 0x400c3d7	      1708	dwarf.c	FUNCTION_28	IF_4
0x4009ffb	    0x488b15000000	            mov rdx, qword [0x0400a002] 	      1711	dwarf.c	FUNCTION_28	IF_5
0x400a002	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1711	dwarf.c	FUNCTION_28	IF_5
0x400a007	          0x4839d1	                            cmp rcx, rdx	      1711	dwarf.c	FUNCTION_28	IF_5
0x400a00a	     0xf833f1f0000	                           jae 0x400bf4f	      1711	dwarf.c	FUNCTION_28	IF_5
0x400a010	          0x4829ca	                            sub rdx, rcx	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a013	          0x4801c8	                            add rax, rcx	      1717	dwarf.c	FUNCTION_28
0x400a016	          0x4889d6	                            mov rsi, rdx	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a019	          0x4889c7	                            mov rdi, rax	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a01c	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a021	      0x4889442428	             mov qword [rsp + 0x28], rax	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a026	      0xe800000000	                          call 0x400a02b	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a02b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a030	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a035	          0x4839c2	                            cmp rdx, rax	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a038	     0xf842a220000	                            je 0x400c268	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a03e	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a043	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x400a048	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a04a	          0x4889ce	                            mov rsi, rcx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a04d	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a052	      0x44894c2428	             mov dword [rsp + 0x28], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a057	      0x4c89442420	              mov qword [rsp + 0x20], r8	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a05c	      0xe89f62ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a061	      0xba05000000	                              mov edx, 5	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x400a066	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a06b	      0xbe00000000	                              mov esi, 0	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x400a070	      0xe94ffdffff	                           jmp 0x4009dc4	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x400a075	           0xf1f00	                         nop dword [rax]	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x400a078	        0x4983fe48	                           cmp r14, 0x48	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a07c	     0xf84fefdffff	                            je 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a082	     0xf87db130000	                            ja 0x400b463	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a088	        0x4983fe40	                           cmp r14, 0x40	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a08c	     0xf85d1170000	                           jne 0x400b863	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a092	    0xc70500000000	               mov dword [0x0400a09c], 1	      2131	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a09c	      0xe9dffdffff	                           jmp 0x4009e80	      2131	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a0a1	     0xf1f80000000	                         nop dword [rax]	      2131	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a0a8	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1873	dwarf.c	FUNCTION_30	SWITCH_2	IF_7
0x400a0af	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x400a0b2	            0x85c0	                           test eax, eax	      1873	dwarf.c	FUNCTION_30	SWITCH_2	IF_7
0x400a0b4	     0xf85fef4ffff	                           jne 0x40095b8	      1873	dwarf.c	FUNCTION_30	SWITCH_2	IF_7
0x400a0ba	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a0bf	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a0c1	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a0c6	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a0cb	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a0d0	      0xe82b62ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a0d5	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x400a0da	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400a0dd	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a0e2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a0e7	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a0e9	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x400a0ed	      0xe800000000	                          call 0x400a0f2	       104	stdio2.h	CALL_16
0x400a0f2	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400a0f7	      0xe9f4f5ffff	                           jmp 0x40096f0	       104	stdio2.h	CALL_16
0x400a0fc	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400a100	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1963	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x400a107	          0x4d89eb	                            mov r11, r13	      1964	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x400a10a	          0x4929eb	                            sub r11, rbp	      1964	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x400a10d	            0x85c0	                           test eax, eax	      1963	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x400a10f	     0xf84f3110000	                            je 0x400b308	      1963	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x400a115	          0x4889ef	                            mov rdi, rbp	      1965	dwarf.c	FUNCTION_30	SWITCH_2	CALL_23
0x400a118	          0x4c89de	                            mov rsi, r11	      1965	dwarf.c	FUNCTION_30	SWITCH_2	CALL_23
0x400a11b	      0xe800000000	                          call 0x400a120	      1965	dwarf.c	FUNCTION_30	SWITCH_2	CALL_23
0x400a120	      0x488d6c0501	                lea rbp, [rbp + rax + 1]	      1965	dwarf.c	FUNCTION_30	SWITCH_2	CALL_23
0x400a125	      0xe9ccfbffff	                           jmp 0x4009cf6	      1966	dwarf.c	FUNCTION_30	SWITCH_2
0x400a12a	    0x660f1f440000	                    nop word [rax + rax]	      1966	dwarf.c	FUNCTION_30	SWITCH_2
0x400a130	    0x8b9424200100	           mov edx, dword [rsp + 0x120] 	      2100	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400a137	            0x85d2	                           test edx, edx	      2100	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400a139	     0xf8491100000	                            je 0x400b1d0	      2100	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400a13f	        0x4883c508	                              add rbp, 8	      2100	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400a143	    0x8b0500000000	            mov eax, dword [0x0400a149] 	      2126	dwarf.c	FUNCTION_30	IF_37
0x400a149	            0x85c0	                           test eax, eax	      2126	dwarf.c	FUNCTION_30	IF_37
0x400a14b	     0xf8564f1ffff	                           jne 0x40092b5	      2126	dwarf.c	FUNCTION_30	IF_37
0x400a151	          0x4d85ff	                           test r15, r15	      2126	dwarf.c	FUNCTION_30	IF_37
0x400a154	     0xf845bf1ffff	                            je 0x40092b5	      2126	dwarf.c	FUNCTION_30	IF_37
0x400a15a	        0x4983fe55	                           cmp r14, 0x55	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a15e	     0xf844c040000	                            je 0x400a5b0	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a164	     0xf8665200000	                           jbe 0x400c1cf	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a16a	    0x4981fe142100	                         cmp r14, 0x2114	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a171	     0xf8624220000	                           jbe 0x400c39b	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a177	    0x4981fe322100	                         cmp r14, 0x2132	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a17e	     0xf8414040000	                            je 0x400a598	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a184	     0xf87f2210000	                            ja 0x400c37c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a18a	    0x4981fe302100	                         cmp r14, 0x2130	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a191	     0xf84dd210000	                            je 0x400c374	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a197	    0x4981fe312100	                         cmp r14, 0x2131	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a19e	     0xf8475f4ffff	                            je 0x4009619	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a1a4	      0xe90cf1ffff	                           jmp 0x40092b5	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a1a9	     0xf1f80000000	                         nop dword [rax]	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a1b0	        0x4c8d5504	                      lea r10, [rbp + 4]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1b4	          0x4d39d5	                            cmp r13, r10	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1b7	     0xf8653fdffff	                           jbe 0x4009f10	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1bd	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1c2	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1c7	      0xbe04000000	                              mov esi, 4	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1cc	      0xe95bfaffff	                           jmp 0x4009c2c	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1d1	     0xf1f80000000	                         nop dword [rax]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1d8	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400a1df	            0x85c0	                           test eax, eax	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400a1e1	     0xf84590f0000	                            je 0x400b140	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400a1e7	        0x4883c510	                           add rbp, 0x10	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400a1eb	      0xe953ffffff	                           jmp 0x400a143	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400a1f0	        0x4883fb06	                              cmp rbx, 6	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1f4	     0xf8400f3ffff	                            je 0x40094fa	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a1fa	     0xf869cf4ffff	                           jbe 0x400969c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a200	    0x8bb424200100	           mov esi, dword [rsp + 0x120] 	      1910	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a207	        0x4c8d4508	                       lea r8, [rbp + 8]	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a20b	            0x85f6	                           test esi, esi	      1910	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a20d	     0xf85adfaffff	                           jne 0x4009cc0	      1910	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a213	          0x4d39c5	                             cmp r13, r8	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a216	     0xf8377160000	                           jae 0x400b893	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a21c	      0x488b742408	                mov rsi, qword [rsp + 8]	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400a221	            0x31ff	                            xor edi, edi	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400a223	        0x4883fb14	                           cmp rbx, 0x14	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400a227	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a230	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a239	        0x480f45f7	                         cmovne rsi, rdi	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400a23d	      0x488d542470	                   lea rdx, [rsp + 0x70]	      1920	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a242	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1920	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a247	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1920	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a24c	      0xe8ff76ffff	    call sym.dwarf_vmatoa64.constprop.29	      1920	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400a251	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x400a256	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400a259	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a25e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a260	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a265	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x400a269	      0xe800000000	                          call 0x400a26e	       104	stdio2.h	CALL_16
0x400a26e	    0x8b0d00000000	            mov ecx, dword [0x0400a274] 	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a274	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a279	            0x85c9	                           test ecx, ecx	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a27b	     0xf853ffaffff	                           jne 0x4009cc0	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a281	    0x8b1500000000	            mov edx, dword [0x0400a287] 	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a287	            0x85d2	                           test edx, edx	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a289	     0xf8531faffff	                           jne 0x4009cc0	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a28f	          0x4c89c5	                             mov rbp, r8	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a292	      0xe96efaffff	                           jmp 0x4009d05	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a297	    0x660f1f840000	                    nop word [rax + rax]	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400a2a0	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400a2a5	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400a2a7	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x400a2aa	          0x4889ef	                            mov rdi, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x400a2ad	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x400a2b2	      0xe800000000	                          call 0x400a2b7	       356	dwarf.c	FUNCTION_10	CALL_1
0x400a2b7	          0x4989c0	                             mov r8, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x400a2ba	      0x4889442448	             mov qword [rsp + 0x48], rax	      1970	dwarf.c	FUNCTION_30	SWITCH_2	CALL_24
0x400a2bf	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      1971	dwarf.c	FUNCTION_30	SWITCH_2
0x400a2c3	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1972	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400a2c8	      0x4c8d540500	                    lea r10, [rbp + rax]	      1971	dwarf.c	FUNCTION_30	SWITCH_2
0x400a2cd	          0x4d39d5	                            cmp r13, r10	      1972	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400a2d0	     0xf86ed100000	                           jbe 0x400b3c3	      1972	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400a2d6	          0x4c89d0	                            mov rax, r10	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a2d9	          0x4c01c0	                             add rax, r8	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a2dc	            0x7205	                            jb 0x400a2e3	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a2de	          0x4939c5	                            cmp r13, rax	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a2e1	            0x7347	                           jae 0x400a32a	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a2e3	      0xba05000000	                              mov edx, 5	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a2e8	      0xbe00000000	                              mov esi, 0	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a2ed	            0x31ff	                            xor edi, edi	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a2ef	      0x44894c2428	             mov dword [rsp + 0x28], r9d	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a2f4	      0x4c89542420	             mov qword [rsp + 0x20], r10	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a2f9	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a2fe	      0xe800000000	                          call 0x400a303	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a303	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a308	          0x4889c7	                            mov rdi, rax	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a30b	            0x31c0	                            xor eax, eax	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a30d	          0x4c89c6	                             mov rsi, r8	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a310	      0xe800000000	                          call 0x400a315	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400a315	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a31a	          0x4d89e8	                             mov r8, r13	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a31d	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a322	          0x4d29d0	                             sub r8, r10	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a325	      0x4c89442448	              mov qword [rsp + 0x48], r8	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400a32a	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1988	dwarf.c	FUNCTION_30	SWITCH_2	IF_21
0x400a331	        0x4b8d2c02	                     lea rbp, [r10 + r8]	      1989	dwarf.c	FUNCTION_30	SWITCH_2	IF_21
0x400a335	            0x85c0	                           test eax, eax	      1988	dwarf.c	FUNCTION_30	SWITCH_2	IF_21
0x400a337	     0xf857bf2ffff	                           jne 0x40095b8	      1988	dwarf.c	FUNCTION_30	SWITCH_2	IF_21
0x400a33d	        0x410fbec9	                          movsx ecx, r9b	      1991	dwarf.c	FUNCTION_30	SWITCH_2	CALL_29
0x400a341	          0x4c89ea	                            mov rdx, r13	      1991	dwarf.c	FUNCTION_30	SWITCH_2	CALL_29
0x400a344	          0x4c89c6	                             mov rsi, r8	      1991	dwarf.c	FUNCTION_30	SWITCH_2	CALL_29
0x400a347	          0x4c89d7	                            mov rdi, r10	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a34a	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a34f	      0xe84c84ffff	                  call sym.display_block	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a354	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a359	          0x4889c5	                            mov rbp, rax	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a35c	      0xe98ff3ffff	                           jmp 0x40096f0	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a361	        0x4883fb18	                           cmp rbx, 0x18	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a365	     0xf8435ffffff	                            je 0x400a2a0	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a36b	     0xf8289f1ffff	                            jb 0x40094fa	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a371	        0x4883fb19	                           cmp rbx, 0x19	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a375	     0xf8421f3ffff	                            je 0x400969c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a37b	       0xf1f440000	                   nop dword [rax + rax]	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a380	            0x31ff	                            xor edi, edi	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400a382	      0xba05000000	                              mov edx, 5	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400a387	      0xbe00000000	                              mov esi, 0	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400a38c	      0xe800000000	                          call 0x400a391	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400a391	          0x4889de	                            mov rsi, rbx	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400a394	          0x4889c7	                            mov rdi, rax	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400a397	            0x31c0	                            xor eax, eax	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400a399	      0xe800000000	                          call 0x400a39e	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400a39e	      0xe953f9ffff	                           jmp 0x4009cf6	      2121	dwarf.c	FUNCTION_30	SWITCH_2
0x400a3a3	       0xf1f440000	                   nop dword [rax + rax]	      2121	dwarf.c	FUNCTION_30	SWITCH_2
0x400a3a8	    0x448b9c242001	          mov r11d, dword [rsp + 0x120] 	      2068	dwarf.c	FUNCTION_30	SWITCH_2	IF_32
0x400a3b0	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x400a3b3	          0x4585db	                         test r11d, r11d	      2068	dwarf.c	FUNCTION_30	SWITCH_2	IF_32
0x400a3b6	     0xf85fcf1ffff	                           jne 0x40095b8	      2068	dwarf.c	FUNCTION_30	SWITCH_2	IF_32
0x400a3bc	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3c1	      0x44894c2434	             mov dword [rsp + 0x34], r9d	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3c6	      0x4c89542428	             mov qword [rsp + 0x28], r10	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3cb	      0xe890a9ffff	     call sym.fetch_indirect_line_string	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3d0	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a3d5	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a3d7	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a3dc	      0x4889442420	             mov qword [rsp + 0x20], rax	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3e1	      0xe81a5fffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a3e6	      0xba05000000	                              mov edx, 5	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3eb	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a3f0	      0xbe00000000	                              mov esi, 0	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3f5	            0x31ff	                            xor edi, edi	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3f7	      0xe800000000	                          call 0x400a3fc	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400a3fc	      0x448b4c2434	            mov r9d, dword [rsp + 0x34] 	       104	stdio2.h	CALL_16
0x400a401	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       104	stdio2.h	CALL_16
0x400a406	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a409	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400a40e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a413	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a415	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x400a419	      0xe800000000	                          call 0x400a41e	       104	stdio2.h	CALL_16
0x400a41e	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	       104	stdio2.h	CALL_16
0x400a423	      0xe9c8f2ffff	                           jmp 0x40096f0	       104	stdio2.h	CALL_16
0x400a428	     0xf1f84000000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x400a430	        0x4983fe1b	                           cmp r14, 0x1b	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a434	     0xf854a140000	                           jne 0x400b884	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a43a	    0x448b1d000000	           mov r11d, dword [0x0400a441] 	      2262	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48
0x400a441	          0x4585db	                         test r11d, r11d	      2262	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48
0x400a444	     0xf846beeffff	                            je 0x40092b5	      2262	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48
0x400a44a	        0x4883fb0e	                            cmp rbx, 0xe	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a44e	     0xf8404190000	                            je 0x400bd58	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a454	     0xf8605170000	                           jbe 0x400bb5f	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a45a	        0x4883fb1f	                           cmp rbx, 0x1f	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a45e	     0xf846c180000	                            je 0x400bcd0	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a464	    0x4881fb021f00	                         cmp rbx, 0x1f02	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a46b	     0xf8575180000	                           jne 0x400bce6	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a471	    0x488b94240801	           mov rdx, qword [rsp + 0x108] 	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x400a479	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x400a47e	            0x31c9	                            xor ecx, ecx	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x400a480	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x400a485	      0xe8965fffff	           call sym.fetch_indexed_string	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x400a48a	    0x488905000000	            mov qword [0x0400a491], rax 	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x400a491	      0xe91feeffff	                           jmp 0x40092b5	      2273	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2273	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a4a0	    0x4981fe332100	                         cmp r14, 0x2133	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4a7	     0xf85c5130000	                           jne 0x400b872	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4ad	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2209	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4b2	        0x49894720	             mov qword [r15 + 0x20], rax	      2209	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4b6	      0xe9faedffff	                           jmp 0x40092b5	      2210	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4bb	       0xf1f440000	                   nop dword [rax + rax]	      2210	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4c0	        0x410fbec9	                          movsx ecx, r9b	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a4c4	          0x4c89ea	                            mov rdx, r13	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a4c7	          0x4889ee	                            mov rsi, rbp	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a4ca	      0xe978feffff	                           jmp 0x400a347	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a4cf	              0x90	                                     nop	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400a4d0	    0x4981fe112100	                         cmp r14, 0x2111	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4d7	     0xf83a3f9ffff	                           jae 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4dd	    0x4981fe840000	                           cmp r14, 0x84	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4e4	     0xf87cc120000	                            ja 0x400b7b6	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4ea	    0x4981fe830000	                           cmp r14, 0x83	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4f1	     0xf8389f9ffff	                           jae 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4f7	        0x4983fe76	                           cmp r14, 0x76	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a4fb	     0xf854d100000	                           jne 0x400b54e	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a501	    0x448b3d000000	           mov r15d, dword [0x0400a508] 	      2240	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47
0x400a508	          0x4585ff	                         test r15d, r15d	      2240	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47
0x400a50b	     0xf84fbf1ffff	                            je 0x400970c	      2240	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47
0x400a511	        0x4883fb0e	                            cmp rbx, 0xe	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a515	     0xf8435170000	                            je 0x400bc50	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a51b	    0x4881fb021f00	                         cmp rbx, 0x1f02	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a522	     0xf84f9160000	                            je 0x400bc21	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a528	        0x4883fb08	                              cmp rbx, 8	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a52c	     0xf84e3160000	                            je 0x400bc15	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a532	          0x4c89f7	                            mov rdi, r14	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a535	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a53a	      0xe8216dffff	                    call sym.get_AT_name	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a53f	          0x4889df	                            mov rdi, rbx	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a542	      0x4889442410	             mov qword [rsp + 0x10], rax	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a547	      0xe8846dffff	                  call sym.get_FORM_name	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a54c	      0xba05000000	                              mov edx, 5	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a551	      0xbe00000000	                              mov esi, 0	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a556	            0x31ff	                            xor edi, edi	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a558	          0x4989c7	                            mov r15, rax	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a55b	      0xe800000000	                          call 0x400a560	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a560	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a565	          0x4889c7	                            mov rdi, rax	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a568	          0x4c89fe	                            mov rsi, r15	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a56b	            0x31c0	                            xor eax, eax	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a56d	      0xe800000000	                          call 0x400a572	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x400a572	      0xba05000000	                              mov edx, 5	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x400a577	      0xbe00000000	                              mov esi, 0	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x400a57c	            0x31ff	                            xor edi, edi	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x400a57e	      0xe800000000	                          call 0x400a583	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x400a583	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2256	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a588	    0x488905000000	            mov qword [0x0400a58f], rax 	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x400a58f	      0xe978f1ffff	                           jmp 0x400970c	      2256	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a594	         0xf1f4000	                         nop dword [rax]	      2256	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a598	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2213	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a59d	        0x49894728	             mov qword [r15 + 0x28], rax	      2213	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a5a1	      0xe90fedffff	                           jmp 0x40092b5	      2214	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a5a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2214	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a5b0	    0x83bc24100100	              cmp dword [rsp + 0x110], 3	      2217	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5b8	            0x7f0a	                            jg 0x400a5c4	      2217	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5ba	        0x488d43fa	                      lea rax, [rbx - 6]	      2218	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5be	        0x4883f801	                              cmp rax, 1	      2218	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5c2	            0x760a	                           jbe 0x400a5ce	      2218	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5c4	        0x4883fb17	                           cmp rbx, 0x17	      2219	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5c8	     0xf85e7ecffff	                           jne 0x40092b5	      2219	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5ce	        0x418b4764	            mov eax, dword [r15 + 0x64] 	      2222	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5d2	        0x418b5f60	            mov ebx, dword [r15 + 0x60] 	      2223	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5d6	            0x85c0	                           test eax, eax	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a5d8	     0xf84b2160000	                            je 0x400bc90	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a5de	            0x39d8	                            cmp eax, ebx	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a5e0	     0xf86aa160000	                           jbe 0x400bc90	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a5e6	        0x498b4758	            mov rax, qword [r15 + 0x58] 	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a5ea	            0x89da	                            mov edx, ebx	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a5ec	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2233	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5f1	        0x48890cd8	            mov qword [rax + rbx*8], rcx	      2233	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5f5	          0x8d4201	                      lea eax, [rdx + 1]	      2234	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5f8	        0x41894760	             mov dword [r15 + 0x60], eax	      2234	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a5fc	      0xe9b4ecffff	                           jmp 0x40092b5	      2234	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a601	     0xf1f80000000	                         nop dword [rax]	      2234	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400a608	        0x4883fb0f	                            cmp rbx, 0xf	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a60c	     0xf848af0ffff	                            je 0x400969c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a612	     0xf874dedffff	                            ja 0x4009365	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a618	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      2061	dwarf.c	FUNCTION_30	SWITCH_2	IF_31
0x400a61f	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x400a622	            0x85c0	                           test eax, eax	      2061	dwarf.c	FUNCTION_30	SWITCH_2	IF_31
0x400a624	     0xf858eefffff	                           jne 0x40095b8	      2061	dwarf.c	FUNCTION_30	SWITCH_2	IF_31
0x400a62a	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a62f	      0x44894c2434	             mov dword [rsp + 0x34], r9d	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a634	      0x4c89542428	             mov qword [rsp + 0x28], r10	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a639	      0xe8d2a5ffff	          call sym.fetch_indirect_string	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a63e	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a643	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a645	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a64a	      0x4889442420	             mov qword [rsp + 0x20], rax	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a64f	      0xe8ac5cffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a654	      0xba05000000	                              mov edx, 5	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a659	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a65e	      0xbe00000000	                              mov esi, 0	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a663	      0xe98dfdffff	                           jmp 0x400a3f5	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a668	     0xf1f84000000	                   nop dword [rax + rax]	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x400a670	        0x4983fe2e	                           cmp r14, 0x2e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a674	     0xf844e020000	                            je 0x400a8c8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a67a	     0xf8698180000	                           jbe 0x400bf18	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a680	        0x4983fe2f	                           cmp r14, 0x2f	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a684	     0xf8406f4ffff	                            je 0x4009a90	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a68a	        0x4983fe32	                           cmp r14, 0x32	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a68e	     0xf8521ecffff	                           jne 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a694	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400a699	      0xe800000000	                          call 0x400a69e	       104	stdio2.h	CALL_16
0x400a69e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x400a6a3	        0x4883f802	                              cmp rax, 2	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x400a6a7	     0xf8404100000	                            je 0x400b6b1	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x400a6ad	        0x4883f803	                              cmp rax, 3	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x400a6b1	     0xf84e40f0000	                            je 0x400b69b	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x400a6b7	        0x4883f801	                              cmp rax, 1	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x400a6bb	     0xf84c40f0000	                            je 0x400b685	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x400a6c1	            0x31ff	                            xor edi, edi	      2449	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11	CALL_105
0x400a6c3	      0xba05000000	                              mov edx, 5	      2449	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11	CALL_105
0x400a6c8	      0xbe00000000	                              mov esi, 0	      2449	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11	CALL_105
0x400a6cd	      0xe800000000	                          call 0x400a6d2	      2449	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11	CALL_105
0x400a6d2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a6d7	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a6da	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a6dc	      0xe800000000	                          call 0x400a6e1	       104	stdio2.h	CALL_16
0x400a6e1	      0xe9cfebffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a6e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_16
0x400a6f0	    0x4981fe840000	                           cmp r14, 0x84	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a6f7	     0xf86930d0000	                           jbe 0x400b490	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a6fd	    0x4981fe8b0000	                           cmp r14, 0x8b	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a704	     0xf8532160000	                           jne 0x400bd3c	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a70a	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400a70f	      0xe800000000	                          call 0x400a714	       104	stdio2.h	CALL_16
0x400a714	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x400a719	        0x4883f801	                              cmp rax, 1	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x400a71d	     0xf845f0e0000	                            je 0x400b582	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x400a723	     0xf82340e0000	                            jb 0x400b55d	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x400a729	        0x4883f802	                              cmp rax, 2	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x400a72d	     0xf85f60d0000	                           jne 0x400b529	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x400a733	            0x31ff	                            xor edi, edi	      2554	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_122
0x400a735	      0xba05000000	                              mov edx, 5	      2554	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_122
0x400a73a	      0xbe00000000	                              mov esi, 0	      2554	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_122
0x400a73f	      0xe800000000	                          call 0x400a744	      2554	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_122
0x400a744	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a749	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a74c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a74e	      0xe800000000	                          call 0x400a753	       104	stdio2.h	CALL_16
0x400a753	      0xe95debffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a758	     0xf1f84000000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x400a760	        0x4983fe09	                              cmp r14, 9	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a764	     0xf8545010000	                           jne 0x400a8af	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a76a	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400a76f	      0xe800000000	                          call 0x400a774	       104	stdio2.h	CALL_16
0x400a774	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x400a779	        0x4883f801	                              cmp rax, 1	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x400a77d	     0xf84ec0f0000	                            je 0x400b76f	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x400a783	     0xf82d00f0000	                            jb 0x400b759	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x400a789	    0x483dff000000	                           cmp rax, 0xff	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x400a78f	            0x740a	                            je 0x400a79b	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x400a791	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x400a795	     0xf851aebffff	                           jne 0x40092b5	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x400a79b	            0x31ff	                            xor edi, edi	      2529	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17	CALL_113
0x400a79d	      0xba05000000	                              mov edx, 5	      2529	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17	CALL_113
0x400a7a2	      0xbe00000000	                              mov esi, 0	      2529	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17	CALL_113
0x400a7a7	      0xe800000000	                          call 0x400a7ac	      2529	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17	CALL_113
0x400a7ac	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a7b1	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a7b4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a7b6	      0xe800000000	                          call 0x400a7bb	       104	stdio2.h	CALL_16
0x400a7bb	      0xe9f5eaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a7c0	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400a7c5	      0xe800000000	                          call 0x400a7ca	       104	stdio2.h	CALL_16
0x400a7ca	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2506	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16
0x400a7cf	        0x4883f841	                           cmp rax, 0x41	      2506	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16
0x400a7d3	     0xf87a1000000	                            ja 0x400a87a	      2506	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16
0x400a7d9	    0xff24c5000000	                       jmp qword [rax*8]	      2506	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16
0x400a7e0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a7e5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a7ea	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a7ec	      0xe800000000	                          call 0x400a7f1	       104	stdio2.h	CALL_16
0x400a7f1	      0xe9bfeaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a7f6	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a7fb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a800	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a802	      0xe800000000	                          call 0x400a807	       104	stdio2.h	CALL_16
0x400a807	      0xe9a9eaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a80c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a811	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a816	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a818	      0xe800000000	                          call 0x400a81d	       104	stdio2.h	CALL_16
0x400a81d	      0xe993eaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a822	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a827	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a82c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a82e	      0xe800000000	                          call 0x400a833	       104	stdio2.h	CALL_16
0x400a833	      0xe97deaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a838	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a83d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a842	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a844	      0xe800000000	                          call 0x400a849	       104	stdio2.h	CALL_16
0x400a849	      0xe967eaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a84e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a853	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a858	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a85a	      0xe800000000	                          call 0x400a85f	       104	stdio2.h	CALL_16
0x400a85f	      0xe951eaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a864	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a869	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a86e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a870	      0xe800000000	                          call 0x400a875	       104	stdio2.h	CALL_16
0x400a875	      0xe93beaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a87a	        0x4883e840	                           sub rax, 0x40	      2516	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	IF_54
0x400a87e	      0xba05000000	                              mov edx, 5	      2518	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_111
0x400a883	    0x483dbf000000	                           cmp rax, 0xbf	      2516	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	IF_54
0x400a889	     0xf8726160000	                            ja 0x400beb5	      2516	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	IF_54
0x400a88f	            0x31ff	                            xor edi, edi	      2518	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_111
0x400a891	      0xbe00000000	                              mov esi, 0	      2518	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_111
0x400a896	      0xe800000000	                          call 0x400a89b	      2518	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_111
0x400a89b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a8a0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a8a3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a8a5	      0xe800000000	                          call 0x400a8aa	       104	stdio2.h	CALL_16
0x400a8aa	      0xe906eaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a8af	     0xf8645160000	                           jbe 0x400befa	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a8b5	        0x4983fe0b	                            cmp r14, 0xb	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a8b9	            0x740d	                            je 0x400a8c8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a8bb	        0x4983fe0d	                            cmp r14, 0xd	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a8bf	     0xf85f0e9ffff	                           jne 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a8c5	           0xf1f00	                         nop dword [rax]	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a8c8	        0x4883fb18	                           cmp rbx, 0x18	      2622	dwarf.c	FUNCTION_30	SWITCH_7	IF_58
0x400a8cc	     0xf85e3e9ffff	                           jne 0x40092b5	      2622	dwarf.c	FUNCTION_30	SWITCH_7	IF_58
0x400a8d2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a8d7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a8dc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a8de	      0x4c89542410	             mov qword [rsp + 0x10], r10	       104	stdio2.h	CALL_16
0x400a8e3	      0xe800000000	                          call 0x400a8e8	       104	stdio2.h	CALL_16
0x400a8e8	        0x4883ec08	                              sub rsp, 8	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a8ec	        0xff742408	                    push qword [rsp + 8]	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a8f0	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a8f5	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a8fa	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a8ff	    0x8b8c24200100	           mov ecx, dword [rsp + 0x120] 	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a906	    0x8b9424180100	           mov edx, dword [rsp + 0x118] 	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a90d	    0x8bb424100100	           mov esi, dword [rsp + 0x110] 	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a914	          0x4c89d7	                            mov rdi, r10	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a917	      0xe8b4c9ffff	     call sym.decode_location_expression	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x400a91c	      0xbf29000000	                           mov edi, 0x29	       104	stdio2.h	CALL_16
0x400a921	      0xe800000000	                          call 0x400a926	       104	stdio2.h	CALL_16
0x400a926	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x400a927	              0x59	                                 pop rcx	       104	stdio2.h	CALL_16
0x400a928	      0xe988e9ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a92d	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400a930	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400a935	      0xe800000000	                          call 0x400a93a	       104	stdio2.h	CALL_16
0x400a93a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2396	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10
0x400a93f	    0x483d86000000	                           cmp rax, 0x86	      2396	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10
0x400a945	     0xf8743020000	                            ja 0x400ab8e	      2396	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10
0x400a94b	    0xff24c5000000	                       jmp qword [rax*8]	      2396	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10
0x400a952	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a957	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a95c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a95e	      0xe800000000	                          call 0x400a963	       104	stdio2.h	CALL_16
0x400a963	      0xe94de9ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a968	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a96d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a972	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a974	      0xe800000000	                          call 0x400a979	       104	stdio2.h	CALL_16
0x400a979	      0xe937e9ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a97e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a983	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a988	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a98a	      0xe800000000	                          call 0x400a98f	       104	stdio2.h	CALL_16
0x400a98f	      0xe921e9ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a994	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a999	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a99e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a9a0	      0xe800000000	                          call 0x400a9a5	       104	stdio2.h	CALL_16
0x400a9a5	      0xe90be9ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a9aa	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a9af	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a9b4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a9b6	      0xe800000000	                          call 0x400a9bb	       104	stdio2.h	CALL_16
0x400a9bb	      0xe9f5e8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a9c0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a9c5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a9ca	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a9cc	      0xe800000000	                          call 0x400a9d1	       104	stdio2.h	CALL_16
0x400a9d1	      0xe9dfe8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a9d6	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a9db	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a9e0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a9e2	      0xe800000000	                          call 0x400a9e7	       104	stdio2.h	CALL_16
0x400a9e7	      0xe9c9e8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400a9ec	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a9f1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a9f6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a9f8	      0xe800000000	                          call 0x400a9fd	       104	stdio2.h	CALL_16
0x400a9fd	      0xe9b3e8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aa02	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aa07	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aa0c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aa0e	      0xe800000000	                          call 0x400aa13	       104	stdio2.h	CALL_16
0x400aa13	      0xe99de8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aa18	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aa1d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aa22	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aa24	      0xe800000000	                          call 0x400aa29	       104	stdio2.h	CALL_16
0x400aa29	      0xe987e8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aa2e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aa33	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aa38	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aa3a	      0xe800000000	                          call 0x400aa3f	       104	stdio2.h	CALL_16
0x400aa3f	      0xe971e8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aa44	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aa49	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aa4e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aa50	      0xe800000000	                          call 0x400aa55	       104	stdio2.h	CALL_16
0x400aa55	      0xe95be8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aa5a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aa5f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aa64	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aa66	      0xe800000000	                          call 0x400aa6b	       104	stdio2.h	CALL_16
0x400aa6b	      0xe945e8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aa70	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aa75	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aa7a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aa7c	      0xe800000000	                          call 0x400aa81	       104	stdio2.h	CALL_16
0x400aa81	      0xe92fe8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aa86	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aa8b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aa90	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aa92	      0xe800000000	                          call 0x400aa97	       104	stdio2.h	CALL_16
0x400aa97	      0xe919e8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aa9c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aaa1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aaa6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aaa8	      0xe800000000	                          call 0x400aaad	       104	stdio2.h	CALL_16
0x400aaad	      0xe903e8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aab2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aab7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aabc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aabe	      0xe800000000	                          call 0x400aac3	       104	stdio2.h	CALL_16
0x400aac3	      0xe9ede7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aac8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aacd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aad2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aad4	      0xe800000000	                          call 0x400aad9	       104	stdio2.h	CALL_16
0x400aad9	      0xe9d7e7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aade	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aae3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aae8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aaea	      0xe800000000	                          call 0x400aaef	       104	stdio2.h	CALL_16
0x400aaef	      0xe9c1e7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400aaf4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400aaf9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aafe	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ab00	      0xe800000000	                          call 0x400ab05	       104	stdio2.h	CALL_16
0x400ab05	      0xe9abe7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ab0a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ab0f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ab14	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ab16	      0xe800000000	                          call 0x400ab1b	       104	stdio2.h	CALL_16
0x400ab1b	      0xe995e7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ab20	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ab25	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ab2a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ab2c	      0xe800000000	                          call 0x400ab31	       104	stdio2.h	CALL_16
0x400ab31	      0xe97fe7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ab36	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ab3b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ab40	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ab42	      0xe800000000	                          call 0x400ab47	       104	stdio2.h	CALL_16
0x400ab47	      0xe969e7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ab4c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ab51	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ab56	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ab58	      0xe800000000	                          call 0x400ab5d	       104	stdio2.h	CALL_16
0x400ab5d	      0xe953e7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ab62	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ab67	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ab6c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ab6e	      0xe800000000	                          call 0x400ab73	       104	stdio2.h	CALL_16
0x400ab73	      0xe93de7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ab78	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ab7d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ab82	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ab84	      0xe800000000	                          call 0x400ab89	       104	stdio2.h	CALL_16
0x400ab89	      0xe927e7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ab8e	        0x4883c080	             add rax, 0xffffffffffffff80	      2432	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	IF_52
0x400ab92	      0xba05000000	                              mov edx, 5	      2434	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_103
0x400ab97	        0x4883f87f	                           cmp rax, 0x7f	      2432	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	IF_52
0x400ab9b	     0xf876a170000	                            ja 0x400c30b	      2432	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	IF_52
0x400aba1	            0x31ff	                            xor edi, edi	      2434	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_103
0x400aba3	      0xbe00000000	                              mov esi, 0	      2434	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_103
0x400aba8	      0xe800000000	                          call 0x400abad	      2434	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_103
0x400abad	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400abb2	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400abb5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400abb7	      0xe800000000	                          call 0x400abbc	       104	stdio2.h	CALL_16
0x400abbc	      0xe9f4e6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400abc1	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400abc8	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400abcd	      0xe800000000	                          call 0x400abd2	       104	stdio2.h	CALL_16
0x400abd2	    0x48837c244805	               cmp qword [rsp + 0x48], 5	      2537	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18
0x400abd8	      0xba05000000	                              mov edx, 5	      2544	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_119
0x400abdd	     0xf87ac000000	                            ja 0x400ac8f	      2537	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18
0x400abe3	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2537	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18
0x400abe8	    0xff24c5000000	                       jmp qword [rax*8]	      2537	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18
0x400abef	            0x31ff	                            xor edi, edi	      2543	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_118
0x400abf1	      0xbe00000000	                              mov esi, 0	      2543	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_118
0x400abf6	      0xe800000000	                          call 0x400abfb	      2543	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_118
0x400abfb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ac00	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ac03	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ac05	      0xe800000000	                          call 0x400ac0a	       104	stdio2.h	CALL_16
0x400ac0a	      0xe9a6e6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ac0f	            0x31ff	                            xor edi, edi	      2542	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_117
0x400ac11	      0xbe00000000	                              mov esi, 0	      2542	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_117
0x400ac16	      0xe800000000	                          call 0x400ac1b	      2542	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_117
0x400ac1b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ac20	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ac23	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ac25	      0xe800000000	                          call 0x400ac2a	       104	stdio2.h	CALL_16
0x400ac2a	      0xe986e6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ac2f	            0x31ff	                            xor edi, edi	      2541	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_116
0x400ac31	      0xbe00000000	                              mov esi, 0	      2541	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_116
0x400ac36	      0xe800000000	                          call 0x400ac3b	      2541	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_116
0x400ac3b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ac40	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ac43	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ac45	      0xe800000000	                          call 0x400ac4a	       104	stdio2.h	CALL_16
0x400ac4a	      0xe966e6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ac4f	            0x31ff	                            xor edi, edi	      2540	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_115
0x400ac51	      0xbe00000000	                              mov esi, 0	      2540	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_115
0x400ac56	      0xe800000000	                          call 0x400ac5b	      2540	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_115
0x400ac5b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ac60	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ac63	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ac65	      0xe800000000	                          call 0x400ac6a	       104	stdio2.h	CALL_16
0x400ac6a	      0xe946e6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ac6f	            0x31ff	                            xor edi, edi	      2539	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_114
0x400ac71	      0xbe00000000	                              mov esi, 0	      2539	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_114
0x400ac76	      0xe800000000	                          call 0x400ac7b	      2539	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_114
0x400ac7b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ac80	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ac83	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ac85	      0xe800000000	                          call 0x400ac8a	       104	stdio2.h	CALL_16
0x400ac8a	      0xe926e6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ac8f	            0x31ff	                            xor edi, edi	      2544	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_119
0x400ac91	      0xbe00000000	                              mov esi, 0	      2544	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_119
0x400ac96	      0xe800000000	                          call 0x400ac9b	      2544	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_119
0x400ac9b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400aca0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400aca3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aca5	      0xe800000000	                          call 0x400acaa	       104	stdio2.h	CALL_16
0x400acaa	      0xe906e6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400acaf	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x400acb0	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400acb5	      0xe800000000	                          call 0x400acba	       104	stdio2.h	CALL_16
0x400acba	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x400acbf	          0x4885c0	                           test rax, rax	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x400acc2	     0xf8454070000	                            je 0x400b41c	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x400acc8	        0x4883f801	                              cmp rax, 1	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x400accc	     0xf8525070000	                           jne 0x400b3f7	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x400acd2	            0x31ff	                            xor edi, edi	      2564	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_125
0x400acd4	      0xba05000000	                              mov edx, 5	      2564	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_125
0x400acd9	      0xbe00000000	                              mov esi, 0	      2564	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_125
0x400acde	      0xe800000000	                          call 0x400ace3	      2564	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_125
0x400ace3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ace8	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400aceb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400aced	      0xe800000000	                          call 0x400acf2	       104	stdio2.h	CALL_16
0x400acf2	      0xe9bee5ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400acf7	    0x660f1f840000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x400ad00	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400ad05	      0xe800000000	                          call 0x400ad0a	       104	stdio2.h	CALL_16
0x400ad0a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400ad0f	        0x4883f801	                              cmp rax, 1	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400ad13	     0xf843e0d0000	                            je 0x400ba57	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400ad19	     0xf82220d0000	                            jb 0x400ba41	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400ad1f	        0x4883f802	                              cmp rax, 2	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400ad23	     0xf84020d0000	                            je 0x400ba2b	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400ad29	        0x4883f803	                              cmp rax, 3	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400ad2d	     0xf85d30c0000	                           jne 0x400ba06	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400ad33	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ad38	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ad3d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ad3f	      0xe800000000	                          call 0x400ad44	       104	stdio2.h	CALL_16
0x400ad44	      0xe96ce5ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ad49	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400ad50	        0x4883fb20	                           cmp rbx, 0x20	      2634	dwarf.c	FUNCTION_30	SWITCH_7	IF_59
0x400ad54	     0xf845be5ffff	                            je 0x40092b5	      2634	dwarf.c	FUNCTION_30	SWITCH_7	IF_59
0x400ad5a	    0x4881fb201f00	                         cmp rbx, 0x1f20	      2634	dwarf.c	FUNCTION_30	SWITCH_7	IF_59
0x400ad61	     0xf844ee5ffff	                            je 0x40092b5	      2634	dwarf.c	FUNCTION_30	SWITCH_7	IF_59
0x400ad67	        0x488d43ef	                   lea rax, [rbx - 0x11]	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400ad6b	        0x4883f802	                              cmp rax, 2	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400ad6f	     0xf8607070000	                           jbe 0x400b47c	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400ad75	        0x4883fb15	                           cmp rbx, 0x15	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400ad79	     0xf84fd060000	                            je 0x400b47c	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400ad7f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400ad84	        0x488b0424	                    mov rax, qword [rsp]	      2644	dwarf.c	FUNCTION_30	SWITCH_7	IF_61
0x400ad88	        0x48397030	            cmp qword [rax + 0x30], rsi 	      2644	dwarf.c	FUNCTION_30	SWITCH_7	IF_61
0x400ad8c	     0xf86980a0000	                           jbe 0x400b82a	      2644	dwarf.c	FUNCTION_30	SWITCH_7	IF_61
0x400ad92	          0x4889f7	                            mov rdi, rsi	       356	dwarf.c	FUNCTION_10	CALL_1
0x400ad95	        0x48037820	             add rdi, qword [rax + 0x20]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400ad99	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x400ad9c	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400ad9e	            0x31f6	                            xor esi, esi	       356	dwarf.c	FUNCTION_10	CALL_1
0x400ada0	      0xe800000000	                          call 0x400ada5	       356	dwarf.c	FUNCTION_10	CALL_1
0x400ada5	            0x31ff	                            xor edi, edi	      2655	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	CALL_135
0x400ada7	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x400adaa	      0xba05000000	                              mov edx, 5	      2655	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	CALL_135
0x400adaf	      0xbe00000000	                              mov esi, 0	      2655	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	CALL_135
0x400adb4	      0xe800000000	                          call 0x400adb9	      2655	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	CALL_135
0x400adb9	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x400adbc	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400adbf	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400adc4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400adc6	      0xe800000000	                          call 0x400adcb	       104	stdio2.h	CALL_16
0x400adcb	        0x4883fb10	                           cmp rbx, 0x10	      2659	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62
0x400adcf	            0x7431	                            je 0x400ae02	      2659	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62
0x400add1	    0x488b05000000	            mov rax, qword [0x0400add8] 	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400add8	          0x4885c0	                           test rax, rax	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400addb	            0x7425	                            je 0x400ae02	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400addd	          0x4c3b20	                    cmp r12, qword [rax]	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x400ade0	            0x7517	                           jne 0x400adf9	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x400ade2	      0xe92c0d0000	                           jmp 0x400bb13	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x400ade7	    0x660f1f840000	                    nop word [rax + rax]	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x400adf0	          0x4c3920	                    cmp qword [rax], r12	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x400adf3	     0xf841a0d0000	                            je 0x400bb13	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x400adf9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400adfd	          0x4885c0	                           test rax, rax	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400ae00	            0x75ee	                           jne 0x400adf0	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400ae02	      0xbf5d000000	                           mov edi, 0x5d	       104	stdio2.h	CALL_16
0x400ae07	      0xe800000000	                          call 0x400ae0c	       104	stdio2.h	CALL_16
0x400ae0c	      0xe9a4e4ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ae11	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400ae18	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400ae1d	      0xe800000000	                          call 0x400ae22	       104	stdio2.h	CALL_16
0x400ae22	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae27	        0x4883fe13	                           cmp rsi, 0x13	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae2b	     0xf8421140000	                            je 0x400c252	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae31	     0xf8774040000	                            ja 0x400b2ab	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae37	        0x4883fe09	                              cmp rsi, 9	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae3b	     0xf848f110000	                            je 0x400bfd0	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae41	     0xf860c0b0000	                           jbe 0x400b953	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae47	        0x4883fe0e	                            cmp rsi, 0xe	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae4b	     0xf8445120000	                            je 0x400c096	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae51	     0xf87530f0000	                            ja 0x400bdaa	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae57	        0x4883fe0b	                            cmp rsi, 0xb	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae5b	     0xf849b110000	                            je 0x400bffc	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae61	     0xf827f110000	                            jb 0x400bfe6	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae67	        0x4883fe0c	                            cmp rsi, 0xc	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae6b	     0xf8463140000	                            je 0x400c2d4	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae71	        0x4883fe0d	                            cmp rsi, 0xd	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae75	     0xf858d130000	                           jne 0x400c208	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400ae7b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ae80	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ae85	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ae87	      0xe800000000	                          call 0x400ae8c	       104	stdio2.h	CALL_16
0x400ae8c	      0xe924e4ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ae91	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400ae98	    0x488d83e0e0ff	                 lea rax, [rbx - 0x1f20]	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400ae9f	        0x4883f801	                              cmp rax, 1	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400aea3	     0xf86fde9ffff	                           jbe 0x40098a6	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400aea9	      0xe9e2e9ffff	                           jmp 0x4009890	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400aeae	            0x6690	                                     nop	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400aeb0	        0x4983fe48	                           cmp r14, 0x48	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400aeb4	     0xf84b4ebffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400aeba	     0xf862b100000	                           jbe 0x400beeb	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400aec0	        0x4983fe4a	                           cmp r14, 0x4a	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400aec4	     0xf84a4ebffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400aeca	        0x4983fe4c	                           cmp r14, 0x4c	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400aece	     0xf85e1e3ffff	                           jne 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400aed4	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400aed9	      0xe800000000	                          call 0x400aede	       104	stdio2.h	CALL_16
0x400aede	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x400aee3	        0x4883f801	                              cmp rax, 1	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x400aee7	     0xf84f5060000	                            je 0x400b5e2	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x400aeed	     0xf82d9060000	                            jb 0x400b5cc	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x400aef3	        0x4883f802	                              cmp rax, 2	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x400aef7	     0xf85aa060000	                           jne 0x400b5a7	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x400aefd	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400af02	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400af07	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400af09	      0xe800000000	                          call 0x400af0e	       104	stdio2.h	CALL_16
0x400af0e	      0xe9a2e3ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400af13	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x400af18	    0x8b9424080100	           mov edx, dword [rsp + 0x108] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af1f	          0x83fa08	                              cmp edx, 8	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af22	     0xf8798050000	                            ja 0x400b4c0	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af28	    0x8b8424080100	           mov eax, dword [rsp + 0x108] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af2f	          0x4c01e0	                            add rax, r12	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af32	          0x4939c5	                            cmp r13, rax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af35	            0x770b	                            ja 0x400af42	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af37	          0x4d39ec	                            cmp r12, r13	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af3a	            0x7314	                           jae 0x400af50	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af3c	          0x4489ea	                           mov edx, r13d	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af3f	          0x4429e2	                           sub edx, r12d	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af42	          0x8d42ff	                      lea eax, [rdx - 1]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af45	            0x89d6	                            mov esi, edx	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af47	          0x83f807	                              cmp eax, 7	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af4a	     0xf86bc050000	                           jbe 0x400b50c	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af50	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af59	          0x4c89e5	                            mov rbp, r12	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af5c	    0x4803ac240801	            add rbp, qword [rsp + 0x108]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af64	      0xe9fce3ffff	                           jmp 0x4009365	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af69	     0xf1f80000000	                         nop dword [rax]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400af70	        0x4983fe19	                           cmp r14, 0x19	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400af74	     0xf84f4eaffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400af7a	        0x4983fe20	                           cmp r14, 0x20	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400af7e	     0xf8531e3ffff	                           jne 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400af84	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x400af89	      0xe800000000	                          call 0x400af8e	       104	stdio2.h	CALL_16
0x400af8e	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400af93	        0x4883fe01	                              cmp rsi, 1	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400af97	     0xf84510b0000	                            je 0x400baee	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400af9d	     0xf82260b0000	                            jb 0x400bac9	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400afa3	        0x4883fe02	                              cmp rsi, 2	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400afa7	     0xf84f70a0000	                            je 0x400baa4	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400afad	        0x4883fe03	                              cmp rsi, 3	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400afb1	     0xf85b60a0000	                           jne 0x400ba6d	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400afb7	            0x31ff	                            xor edi, edi	      2326	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_96
0x400afb9	      0xba05000000	                              mov edx, 5	      2326	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_96
0x400afbe	      0xbe00000000	                              mov esi, 0	      2326	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_96
0x400afc3	      0xe800000000	                          call 0x400afc8	      2326	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_96
0x400afc8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400afcd	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400afd0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400afd2	      0xe800000000	                          call 0x400afd7	       104	stdio2.h	CALL_16
0x400afd7	      0xe9d9e2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400afdc	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400afe0	      0xba05000000	                              mov edx, 5	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x400afe5	      0xbe00000000	                              mov esi, 0	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x400afea	            0x31ff	                            xor edi, edi	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x400afec	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x400aff1	      0xe800000000	                          call 0x400aff6	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x400aff6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400affb	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400affe	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b000	      0xe800000000	                          call 0x400b005	       104	stdio2.h	CALL_16
0x400b005	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x400b00a	      0xe981eaffff	                           jmp 0x4009a90	       104	stdio2.h	CALL_16
0x400b00f	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x400b010	            0x89f1	                            mov ecx, esi	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b012	            0x31ff	                            xor edi, edi	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b014	    0x41b805000000	                              mov r8d, 5	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b01a	      0xba00000000	                              mov edx, 0	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b01f	      0xbe00000000	                              mov esi, 0	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b024	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b029	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b02e	      0xe800000000	                          call 0x400b033	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b033	    0x8bb424080100	           mov esi, dword [rsp + 0x108] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b03a	          0x4889c7	                            mov rdi, rax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b03d	      0xba08000000	                              mov edx, 8	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b042	            0x31c0	                            xor eax, eax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b044	      0xe800000000	                          call 0x400b049	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b049	      0x498d442408	                      lea rax, [r12 + 8]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b04e	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b053	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b058	          0x4939c5	                            cmp r13, rax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b05b	     0xf8664e8ffff	                           jbe 0x40098c5	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b061	      0xbe08000000	                              mov esi, 8	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b066	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b06b	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b070	          0x4c89e7	                            mov rdi, r12	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b073	    0xff1500000000	                 call qword [0x0400b079]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b079	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b07e	      0x4889442448	             mov qword [rsp + 0x48], rax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b083	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b088	      0xe958e8ffff	                           jmp 0x40098e5	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b08d	           0xf1f00	                         nop dword [rax]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400b090	            0x89f1	                            mov ecx, esi	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b092	            0x31ff	                            xor edi, edi	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b094	    0x41b805000000	                              mov r8d, 5	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b09a	      0xba00000000	                              mov edx, 0	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b09f	      0xbe00000000	                              mov esi, 0	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0a4	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0a9	      0xe800000000	                          call 0x400b0ae	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0ae	    0x8bb424000100	           mov esi, dword [rsp + 0x100] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0b5	          0x4889c7	                            mov rdi, rax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0b8	      0xba08000000	                              mov edx, 8	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0bd	            0x31c0	                            xor eax, eax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0bf	      0xe800000000	                          call 0x400b0c4	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0c4	      0x498d442408	                      lea rax, [r12 + 8]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0c9	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0ce	          0x4939c5	                            cmp r13, rax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0d1	     0xf86f8e3ffff	                           jbe 0x40094cf	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0d7	      0xbe08000000	                              mov esi, 8	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0dc	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0e1	          0x4c89e7	                            mov rdi, r12	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0e4	    0xff1500000000	                 call qword [0x0400b0ea]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0ea	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0ef	      0x4889442448	             mov qword [rsp + 0x48], rax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0f4	      0xe9f6e3ffff	                           jmp 0x40094ef	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b0f9	     0xf1f80000000	                         nop dword [rax]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400b100	          0x4889df	                            mov rdi, rbx	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x400b103	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x400b108	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x400b10d	      0xe8be61ffff	                  call sym.get_FORM_name	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x400b112	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x400b117	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400b11a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b11f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b124	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b126	        0x410fbee9	                          movsx ebp, r9b	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x400b12a	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x400b12c	      0xe800000000	                          call 0x400b131	       104	stdio2.h	CALL_16
0x400b131	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400b136	      0xe9f2e2ffff	                           jmp 0x400942d	       104	stdio2.h	CALL_16
0x400b13b	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x400b140	        0x488d4508	                      lea rax, [rbp + 8]	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b144	          0x4939c5	                            cmp r13, rax	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b147	     0xf83e5070000	                           jae 0x400b932	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b14d	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b156	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b15f	        0x4883c510	                           add rbp, 0x10	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b163	          0x4939ed	                            cmp r13, rbp	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b166	     0xf83a5070000	                           jae 0x400b911	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b16c	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b175	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b17e	          0x4531c9	                            xor r9d, r9d	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b181	          0x4531c0	                            xor r8d, r8d	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b184	    0x48813d000000	               cmp qword [0x0400b18f], 0	      1944	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400b18f	     0xf84e00b0000	                            je 0x400bd75	      1944	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400b195	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      1944	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400b19a	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1944	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400b19f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b1a4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b1a9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b1ab	      0xe800000000	                          call 0x400b1b0	       104	stdio2.h	CALL_16
0x400b1b0	          0x4531d2	                          xor r10d, r10d	       104	stdio2.h	CALL_16
0x400b1b3	      0xe938e5ffff	                           jmp 0x40096f0	       104	stdio2.h	CALL_16
0x400b1b8	     0xf1f84000000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x400b1c0	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x400b1c3	      0xe9f0e3ffff	                           jmp 0x40095b8	      1771	dwarf.c	FUNCTION_30
0x400b1c8	     0xf1f84000000	                   nop dword [rax + rax]	      1771	dwarf.c	FUNCTION_30
0x400b1d0	        0x488d4508	                      lea rax, [rbp + 8]	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1d4	          0x4939c5	                            cmp r13, rax	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1d7	      0x4889442418	             mov qword [rsp + 0x18], rax	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1dc	     0xf8304070000	                           jae 0x400b8e6	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1e2	    0x48c744246800	               mov qword [rsp + 0x68], 0	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1eb	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1f4	            0x31ff	                            xor edi, edi	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1f6	            0x31f6	                            xor esi, esi	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1f8	      0x488d542470	                   lea rdx, [rsp + 0x70]	      2106	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b1fd	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2106	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b202	      0xe84967ffff	    call sym.dwarf_vmatoa64.constprop.29	      2106	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b207	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x400b20c	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400b20f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b214	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b219	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b21b	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x400b21f	      0xe800000000	                          call 0x400b224	       104	stdio2.h	CALL_16
0x400b224	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400b229	          0x4531d2	                          xor r10d, r10d	       104	stdio2.h	CALL_16
0x400b22c	      0xe9bfe4ffff	                           jmp 0x40096f0	       104	stdio2.h	CALL_16
0x400b231	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400b238	    0x8b9424000100	           mov edx, dword [rsp + 0x100] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b23f	          0x83fa08	                              cmp edx, 8	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b242	     0xf8755070000	                            ja 0x400b99d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b248	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b24f	          0x4c01e0	                            add rax, r12	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b252	          0x4939c5	                            cmp r13, rax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b255	            0x770b	                            ja 0x400b262	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b257	          0x4d39ec	                            cmp r12, r13	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b25a	            0x7312	                           jae 0x400b26e	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b25c	          0x4489ea	                           mov edx, r13d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b25f	          0x4429e2	                           sub edx, r12d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b262	          0x8d42ff	                      lea eax, [rdx - 1]	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b265	          0x83f807	                              cmp eax, 7	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b268	     0xf86f00b0000	                           jbe 0x400be5e	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b26e	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b277	          0x4c89e5	                            mov rbp, r12	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b27a	    0x4803ac240001	            add rbp, qword [rsp + 0x100]	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b282	      0xe9dee0ffff	                           jmp 0x4009365	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b287	      0x488d742444	                   lea rsi, [rsp + 0x44]	       348	dwarf.c	FUNCTION_9	CALL_1
0x400b28c	          0x4c89e7	                            mov rdi, r12	       348	dwarf.c	FUNCTION_9	CALL_1
0x400b28f	          0x4c89e9	                            mov rcx, r13	       348	dwarf.c	FUNCTION_9	CALL_1
0x400b292	      0xba01000000	                              mov edx, 1	       348	dwarf.c	FUNCTION_9	CALL_1
0x400b297	      0xe800000000	                          call 0x400b29c	       348	dwarf.c	FUNCTION_9	CALL_1
0x400b29c	          0x4989c3	                            mov r11, rax	       348	dwarf.c	FUNCTION_9	CALL_1
0x400b29f	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      1852	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x400b2a3	          0x4901c4	                            add r12, rax	      1852	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x400b2a6	      0xe98ce1ffff	                           jmp 0x4009437	      1852	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x400b2ab	        0x4883fe1d	                           cmp rsi, 0x1d	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2af	     0xf84d80e0000	                            je 0x400c18d	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2b5	     0xf8725050000	                            ja 0x400b7e0	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2bb	        0x4883fe18	                           cmp rsi, 0x18	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2bf	     0xf84290e0000	                            je 0x400c0ee	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2c5	     0xf87190b0000	                            ja 0x400bde4	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2cb	        0x4883fe15	                           cmp rsi, 0x15	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2cf	     0xf84690d0000	                            je 0x400c03e	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2d5	     0xf824d0d0000	                            jb 0x400c028	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2db	        0x4883fe16	                           cmp rsi, 0x16	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2df	     0xf842d0d0000	                            je 0x400c012	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2e5	        0x4883fe17	                           cmp rsi, 0x17	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2e9	     0xf85190f0000	                           jne 0x400c208	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b2ef	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b2f4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b2f9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b2fb	      0xe800000000	                          call 0x400b300	       104	stdio2.h	CALL_16
0x400b300	      0xe9b0dfffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b305	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400b308	          0x4489d9	                           mov ecx, r11d	       104	stdio2.h	CALL_16
0x400b30b	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x400b30f	          0x4989e8	                             mov r8, rbp	       104	stdio2.h	CALL_16
0x400b312	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b317	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b31c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b31e	      0x4c895c2418	             mov qword [rsp + 0x18], r11	       104	stdio2.h	CALL_16
0x400b323	      0xe800000000	                          call 0x400b328	       104	stdio2.h	CALL_16
0x400b328	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400b32d	      0xe9e3edffff	                           jmp 0x400a115	       104	stdio2.h	CALL_16
0x400b332	    0x488b3d000000	            mov rdi, qword [0x0400b339] 	       798	dwarf.c	FUNCTION_16	IF_1
0x400b339	    0x488bb4240001	           mov rsi, qword [rsp + 0x100] 	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x400b341	    0x480faf742448	            imul rsi, qword [rsp + 0x48]	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x400b347	          0x4885ff	                           test rdi, rdi	       798	dwarf.c	FUNCTION_16	IF_1
0x400b34a	     0xf849a0f0000	                            je 0x400c2ea	       798	dwarf.c	FUNCTION_16	IF_1
0x400b350	          0x4889f0	                            mov rax, rsi	       801	dwarf.c	FUNCTION_16	IF_2
0x400b353	    0x480384240001	            add rax, qword [rsp + 0x100]	       801	dwarf.c	FUNCTION_16	IF_2
0x400b35b	    0x483b05000000	            cmp rax, qword [0x0400b362] 	       801	dwarf.c	FUNCTION_16	IF_2
0x400b362	     0xf8756080000	                            ja 0x400bbbe	       801	dwarf.c	FUNCTION_16	IF_2
0x400b368	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       801	dwarf.c	FUNCTION_16	IF_2
0x400b36d	          0x4801f7	                            add rdi, rsi	       808	dwarf.c	FUNCTION_16	CALL_6
0x400b370	    0x8bb424000100	           mov esi, dword [rsp + 0x100] 	       808	dwarf.c	FUNCTION_16	CALL_6
0x400b377	    0xff1500000000	                 call qword [0x0400b37d]	       808	dwarf.c	FUNCTION_16	CALL_6
0x400b37d	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b37f	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b382	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b387	      0xe8744fffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b38c	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b391	          0x4989c0	                             mov r8, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b394	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b399	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b39b	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b3a0	      0x44894c2428	             mov dword [rsp + 0x28], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b3a5	      0x4c89442420	              mov qword [rsp + 0x20], r8	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b3aa	      0xe8514fffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b3af	      0xba05000000	                              mov edx, 5	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x400b3b4	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b3b9	      0xbe00000000	                              mov esi, 0	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x400b3be	      0xe901eaffff	                           jmp 0x4009dc4	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x400b3c3	      0xba05000000	                              mov edx, 5	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400b3c8	      0xbe00000000	                              mov esi, 0	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400b3cd	            0x31ff	                            xor edi, edi	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400b3cf	      0xe800000000	                          call 0x400b3d4	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400b3d4	          0x4889c7	                            mov rdi, rax	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400b3d7	            0x31c0	                            xor eax, eax	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400b3d9	      0xe800000000	                          call 0x400b3de	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400b3de	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400b3e7	          0x4d89ea	                            mov r10, r13	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400b3ea	          0x4531c0	                            xor r8d, r8d	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400b3ed	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400b3f2	      0xe933efffff	                           jmp 0x400a32a	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400b3f7	            0x31ff	                            xor edi, edi	      2565	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_126
0x400b3f9	      0xba05000000	                              mov edx, 5	      2565	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_126
0x400b3fe	      0xbe00000000	                              mov esi, 0	      2565	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_126
0x400b403	      0xe800000000	                          call 0x400b408	      2565	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_126
0x400b408	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b40d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b410	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b412	      0xe800000000	                          call 0x400b417	       104	stdio2.h	CALL_16
0x400b417	      0xe999deffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b41c	            0x31ff	                            xor edi, edi	      2563	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_124
0x400b41e	      0xba05000000	                              mov edx, 5	      2563	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_124
0x400b423	      0xbe00000000	                              mov esi, 0	      2563	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_124
0x400b428	      0xe800000000	                          call 0x400b42d	      2563	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_124
0x400b42d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b432	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b435	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b437	      0xe800000000	                          call 0x400b43c	       104	stdio2.h	CALL_16
0x400b43c	      0xe974deffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b441	      0xbe08000000	                              mov esi, 8	       104	stdio2.h	CALL_16
0x400b446	      0x4c89442418	              mov qword [rsp + 0x18], r8	       104	stdio2.h	CALL_16
0x400b44b	          0x4889ef	                            mov rdi, rbp	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400b44e	    0xff1500000000	                 call qword [0x0400b454]	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400b454	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400b459	      0x4889442448	             mov qword [rsp + 0x48], rax	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400b45e	      0xe990e8ffff	                           jmp 0x4009cf3	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400b463	        0x4983fe4a	                           cmp r14, 0x4a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b467	     0xf8413eaffff	                            je 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b46d	        0x4983fe4d	                           cmp r14, 0x4d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b471	     0xf8595e2ffff	                           jne 0x400970c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b477	      0xe904eaffff	                           jmp 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b47c	      0x488b742408	                mov rsi, qword [rsp + 8]	      2642	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400b481	      0x4803742448	             add rsi, qword [rsp + 0x48]	      2642	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400b486	      0x4889742448	             mov qword [rsp + 0x48], rsi	      2642	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400b48b	      0xe9f4f8ffff	                           jmp 0x400ad84	      2642	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400b490	    0x4981fe830000	                           cmp r14, 0x83	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b497	     0xf83d1e5ffff	                           jae 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b49d	        0x4983fe6f	                           cmp r14, 0x6f	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b4a1	     0xf820edeffff	                            jb 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b4a7	        0x4983fe70	                           cmp r14, 0x70	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b4ab	     0xf8617f4ffff	                           jbe 0x400a8c8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b4b1	        0x4983fe7e	                           cmp r14, 0x7e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b4b5	     0xf84b3e5ffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b4bb	      0xe9f5ddffff	                           jmp 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b4c0	            0x89d1	                            mov ecx, edx	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4c2	            0x31ff	                            xor edi, edi	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4c4	    0x41b805000000	                              mov r8d, 5	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4ca	      0xba00000000	                              mov edx, 0	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4cf	      0xbe00000000	                              mov esi, 0	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4d4	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4d9	      0xe800000000	                          call 0x400b4de	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4de	    0x8bb424080100	           mov esi, dword [rsp + 0x108] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4e5	          0x4889c7	                            mov rdi, rax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4e8	      0xba08000000	                              mov edx, 8	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4ed	            0x31c0	                            xor eax, eax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4ef	      0xe800000000	                          call 0x400b4f4	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4f4	      0x498d442408	                      lea rax, [r12 + 8]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4f9	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b4fe	          0x4939c5	                            cmp r13, rax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b501	     0xf8630faffff	                           jbe 0x400af37	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b507	      0xbe08000000	                              mov esi, 8	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b50c	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b511	          0x4c89e7	                            mov rdi, r12	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b514	    0xff1500000000	                 call qword [0x0400b51a]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b51a	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b51f	      0x4889442448	             mov qword [rsp + 0x48], rax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b524	      0xe930faffff	                           jmp 0x400af59	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400b529	            0x31ff	                            xor edi, edi	      2555	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_123
0x400b52b	      0xba05000000	                              mov edx, 5	      2555	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_123
0x400b530	      0xbe00000000	                              mov esi, 0	      2555	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_123
0x400b535	      0xe800000000	                          call 0x400b53a	      2555	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_123
0x400b53a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b53f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b542	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b544	      0xe800000000	                          call 0x400b549	       104	stdio2.h	CALL_16
0x400b549	      0xe967ddffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b54e	        0x4983fe7e	                           cmp r14, 0x7e	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b552	     0xf85b4e1ffff	                           jne 0x400970c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b558	      0xe923e9ffff	                           jmp 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b55d	            0x31ff	                            xor edi, edi	      2552	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_120
0x400b55f	      0xba05000000	                              mov edx, 5	      2552	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_120
0x400b564	      0xbe00000000	                              mov esi, 0	      2552	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_120
0x400b569	      0xe800000000	                          call 0x400b56e	      2552	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_120
0x400b56e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b573	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b576	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b578	      0xe800000000	                          call 0x400b57d	       104	stdio2.h	CALL_16
0x400b57d	      0xe933ddffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b582	            0x31ff	                            xor edi, edi	      2553	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_121
0x400b584	      0xba05000000	                              mov edx, 5	      2553	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_121
0x400b589	      0xbe00000000	                              mov esi, 0	      2553	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_121
0x400b58e	      0xe800000000	                          call 0x400b593	      2553	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_121
0x400b593	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b598	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b59b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b59d	      0xe800000000	                          call 0x400b5a2	       104	stdio2.h	CALL_16
0x400b5a2	      0xe90eddffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b5a7	            0x31ff	                            xor edi, edi	      2488	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14	CALL_109
0x400b5a9	      0xba05000000	                              mov edx, 5	      2488	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14	CALL_109
0x400b5ae	      0xbe00000000	                              mov esi, 0	      2488	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14	CALL_109
0x400b5b3	      0xe800000000	                          call 0x400b5b8	      2488	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14	CALL_109
0x400b5b8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b5bd	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b5c0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b5c2	      0xe800000000	                          call 0x400b5c7	       104	stdio2.h	CALL_16
0x400b5c7	      0xe9e9dcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b5cc	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b5d1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b5d6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b5d8	      0xe800000000	                          call 0x400b5dd	       104	stdio2.h	CALL_16
0x400b5dd	      0xe9d3dcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b5e2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b5e7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b5ec	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b5ee	      0xe800000000	                          call 0x400b5f3	       104	stdio2.h	CALL_16
0x400b5f3	      0xe9bddcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b5f8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b5fd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b602	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b604	      0xe800000000	                          call 0x400b609	       104	stdio2.h	CALL_16
0x400b609	      0xe9a7dcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b60e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b613	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b618	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b61a	      0xe800000000	                          call 0x400b61f	       104	stdio2.h	CALL_16
0x400b61f	      0xe991dcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b624	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b629	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b62e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b630	      0xe800000000	                          call 0x400b635	       104	stdio2.h	CALL_16
0x400b635	      0xe97bdcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b63a	        0x4883e840	                           sub rax, 0x40	      2473	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	IF_53
0x400b63e	      0xba05000000	                              mov edx, 5	      2474	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_107
0x400b643	    0x483dbf000000	                           cmp rax, 0xbf	      2473	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	IF_53
0x400b649	     0xf8721060000	                            ja 0x400bc70	      2473	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	IF_53
0x400b64f	            0x31ff	                            xor edi, edi	      2474	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_107
0x400b651	      0xbe00000000	                              mov esi, 0	      2474	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_107
0x400b656	      0xe800000000	                          call 0x400b65b	      2474	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_107
0x400b65b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b660	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b663	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b665	      0xe800000000	                          call 0x400b66a	       104	stdio2.h	CALL_16
0x400b66a	      0xe946dcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b66f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b674	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b679	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b67b	      0xe800000000	                          call 0x400b680	       104	stdio2.h	CALL_16
0x400b680	      0xe930dcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b685	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b68a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b68f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b691	      0xe800000000	                          call 0x400b696	       104	stdio2.h	CALL_16
0x400b696	      0xe91adcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b69b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b6a0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b6a5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b6a7	      0xe800000000	                          call 0x400b6ac	       104	stdio2.h	CALL_16
0x400b6ac	      0xe904dcffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b6b1	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b6b6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b6bb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b6bd	      0xe800000000	                          call 0x400b6c2	       104	stdio2.h	CALL_16
0x400b6c2	      0xe9eedbffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b6c7	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b6cc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b6d1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b6d3	      0xe800000000	                          call 0x400b6d8	       104	stdio2.h	CALL_16
0x400b6d8	      0xe9d8dbffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b6dd	    0x448d80000400	                  lea r8d, [rax + 0x400]	      2160	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b6e4	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b6e8	      0x4c89542438	             mov qword [rsp + 0x38], r10	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b6ed	        0x894c2434	             mov dword [rsp + 0x34], ecx	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b6f1	    0x4e8d0cc50000	                          lea r9, [r8*8]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b6f9	      0x4489442428	             mov dword [rsp + 0x28], r8d	      2162	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39	CALL_65
0x400b6fe	      0x4c89442420	              mov qword [rsp + 0x20], r8	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b703	          0x4c89ce	                             mov rsi, r9	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b706	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b70b	      0xe800000000	                          call 0x400b710	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b710	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b715	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b719	        0x49894730	             mov qword [r15 + 0x30], rax	      2161	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b71d	          0x4c89ce	                             mov rsi, r9	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b720	      0xe800000000	                          call 0x400b725	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b725	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b72a	        0x498b7f40	            mov rdi, qword [r15 + 0x40] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b72e	        0x49894738	             mov qword [r15 + 0x38], rax	      2164	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b732	    0x4a8d34850000	                         lea rsi, [r8*4]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b73a	      0xe800000000	                          call 0x400b73f	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400b73f	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b743	        0x49894740	             mov qword [r15 + 0x40], rax	      2167	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b747	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b74c	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b750	        0x4189574c	             mov dword [r15 + 0x4c], edx	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b754	      0xe961e7ffff	                           jmp 0x4009eba	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400b759	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b75e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b763	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b765	      0xe800000000	                          call 0x400b76a	       104	stdio2.h	CALL_16
0x400b76a	      0xe946dbffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b76f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b774	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b779	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b77b	      0xe800000000	                          call 0x400b780	       104	stdio2.h	CALL_16
0x400b780	      0xe930dbffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b785	        0x418b4750	            mov eax, dword [r15 + 0x50] 	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400b789	            0x39c1	                            cmp ecx, eax	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400b78b	     0xf82770c0000	                            jb 0x400c408	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400b791	        0x413b4748	            cmp eax, dword [r15 + 0x48] 	      2192	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	IF_43
0x400b795	     0xf87fa060000	                            ja 0x400be95	      2192	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	IF_43
0x400b79b	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      2196	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x400b79f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2196	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x400b7a4	            0x89c1	                            mov ecx, eax	      2196	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x400b7a6	          0x83c001	                              add eax, 1	      2197	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x400b7a9	        0x488934ca	            mov qword [rdx + rcx*8], rsi	      2196	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x400b7ad	        0x41894750	             mov dword [r15 + 0x50], eax	      2197	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x400b7b1	      0xe9ffdaffff	                           jmp 0x40092b5	      2197	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x400b7b6	    0x4981fe860000	                           cmp r14, 0x86	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b7bd	     0xf8549dfffff	                           jne 0x400970c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b7c3	      0xe9b8e6ffff	                           jmp 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b7c8	        0x4983fe51	                           cmp r14, 0x51	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b7cc	     0xf86bee2ffff	                           jbe 0x4009a90	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b7d2	      0xe9dedaffff	                           jmp 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b7d7	    0x660f1f840000	                    nop word [rax + rax]	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400b7e0	        0x4883fe22	                           cmp rsi, 0x22	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b7e4	     0xf84920a0000	                            je 0x400c27c	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b7ea	     0xf872e060000	                            ja 0x400be1e	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b7f0	        0x4883fe1f	                           cmp rsi, 0x1f	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b7f4	     0xf8470080000	                            je 0x400c06a	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b7fa	     0xf8254080000	                            jb 0x400c054	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b800	        0x4883fe20	                           cmp rsi, 0x20	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b804	     0xf84b0070000	                            je 0x400bfba	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b80a	        0x4883fe21	                           cmp rsi, 0x21	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b80e	     0xf85f4090000	                           jne 0x400c208	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b814	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b819	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b81e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b820	      0xe800000000	                          call 0x400b825	       104	stdio2.h	CALL_16
0x400b825	      0xe98bdaffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b82a	        0x4c2b6020	             sub r12, qword [rax + 0x20]	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b82e	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b830	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b835	      0xe8c64affff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b83a	            0x31ff	                            xor edi, edi	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b83c	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b83f	      0xba05000000	                              mov edx, 5	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b844	      0xbe00000000	                              mov esi, 0	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b849	      0xe800000000	                          call 0x400b84e	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b84e	          0x4c89e2	                            mov rdx, r12	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b851	          0x4889c7	                            mov rdi, rax	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b854	          0x4889de	                            mov rsi, rbx	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b857	            0x31c0	                            xor eax, eax	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b859	      0xe800000000	                          call 0x400b85e	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b85e	      0xe952daffff	                           jmp 0x40092b5	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x400b863	        0x4983fe46	                           cmp r14, 0x46	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b867	     0xf859fdeffff	                           jne 0x400970c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b86d	      0xe90ee6ffff	                           jmp 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b872	    0x4981fe372100	                         cmp r14, 0x2137	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b879	     0xf858ddeffff	                           jne 0x400970c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b87f	      0xe9fce5ffff	                           jmp 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b884	        0x4983fe2a	                           cmp r14, 0x2a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b888	     0xf857edeffff	                           jne 0x400970c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b88e	      0xe9ede5ffff	                           jmp 0x4009e80	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400b893	      0x488d742468	                   lea rsi, [rsp + 0x68]	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400b898	      0x488d542448	                   lea rdx, [rsp + 0x48]	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400b89d	          0x4889ef	                            mov rdi, rbp	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400b8a0	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400b8a5	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400b8aa	      0xe800000000	                          call 0x400b8af	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400b8af	        0x4883fb14	                           cmp rbx, 0x14	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400b8b3	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400b8b8	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400b8bd	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400b8c2	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400b8c7	     0xf8570e9ffff	                           jne 0x400a23d	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x400b8cd	      0x4803742408	                add rsi, qword [rsp + 8]	      1678	dwarf.c	FUNCTION_27	IF_1
0x400b8d2	     0xf8365e9ffff	                           jae 0x400a23d	      1678	dwarf.c	FUNCTION_27	IF_1
0x400b8d8	        0x4883c701	                              add rdi, 1	      1680	dwarf.c	FUNCTION_27	IF_1
0x400b8dc	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      1680	dwarf.c	FUNCTION_27	IF_1
0x400b8e1	      0xe957e9ffff	                           jmp 0x400a23d	      1680	dwarf.c	FUNCTION_27	IF_1
0x400b8e6	      0x488d742468	                   lea rsi, [rsp + 0x68]	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b8eb	      0x488d542448	                   lea rdx, [rsp + 0x48]	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b8f0	          0x4889ef	                            mov rdi, rbp	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b8f3	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b8f8	      0xe800000000	                          call 0x400b8fd	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b8fd	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b902	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b907	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b90c	      0xe9e7f8ffff	                           jmp 0x400b1f8	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400b911	      0x488d542468	                   lea rdx, [rsp + 0x68]	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b916	      0x488d742460	                   lea rsi, [rsp + 0x60]	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b91b	          0x4889c7	                            mov rdi, rax	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b91e	      0xe800000000	                          call 0x400b923	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b923	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b928	      0x4c8b4c2468	              mov r9, qword [rsp + 0x68]	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b92d	      0xe952f8ffff	                           jmp 0x400b184	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b932	      0x488d542458	                   lea rdx, [rsp + 0x58]	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b937	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b93c	          0x4889ef	                            mov rdi, rbp	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b93f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b944	      0xe800000000	                          call 0x400b949	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b949	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b94e	      0xe90cf8ffff	                           jmp 0x400b15f	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400b953	        0x4883fe04	                              cmp rsi, 4	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b957	     0xf844f070000	                            je 0x400c0ac	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b95d	     0xf8602050000	                           jbe 0x400be65	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b963	        0x4883fe06	                              cmp rsi, 6	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b967	     0xf846b070000	                            je 0x400c0d8	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b96d	     0xf824f070000	                            jb 0x400c0c2	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b973	        0x4883fe07	                              cmp rsi, 7	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b977	     0xf8403070000	                            je 0x400c080	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b97d	        0x4883fe08	                              cmp rsi, 8	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b981	     0xf8581080000	                           jne 0x400c208	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400b987	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400b98c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b991	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b993	      0xe800000000	                          call 0x400b998	       104	stdio2.h	CALL_16
0x400b998	      0xe918d9ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400b99d	            0x89d1	                            mov ecx, edx	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b99f	            0x31ff	                            xor edi, edi	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9a1	    0x41b805000000	                              mov r8d, 5	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9a7	      0xba00000000	                              mov edx, 0	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9ac	      0xbe00000000	                              mov esi, 0	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9b1	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9b6	      0xe800000000	                          call 0x400b9bb	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9bb	    0x8bb424000100	           mov esi, dword [rsp + 0x100] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9c2	          0x4889c7	                            mov rdi, rax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9c5	      0xba08000000	                              mov edx, 8	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9ca	            0x31c0	                            xor eax, eax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9cc	      0xe800000000	                          call 0x400b9d1	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9d1	      0x498d442408	                      lea rax, [r12 + 8]	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9d6	      0xbe08000000	                              mov esi, 8	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9db	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9e0	          0x4939c5	                            cmp r13, rax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9e3	     0xf866ef8ffff	                           jbe 0x400b257	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9e9	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9ee	          0x4c89e7	                            mov rdi, r12	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9f1	    0xff1500000000	                 call qword [0x0400b9f7]	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9f7	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400b9fc	      0x4889442448	             mov qword [rsp + 0x48], rax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400ba01	      0xe971f8ffff	                           jmp 0x400b277	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400ba06	            0x31ff	                            xor edi, edi	      2500	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15	CALL_110
0x400ba08	      0xba05000000	                              mov edx, 5	      2500	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15	CALL_110
0x400ba0d	      0xbe00000000	                              mov esi, 0	      2500	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15	CALL_110
0x400ba12	      0xe800000000	                          call 0x400ba17	      2500	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15	CALL_110
0x400ba17	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ba1c	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ba1f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ba21	      0xe800000000	                          call 0x400ba26	       104	stdio2.h	CALL_16
0x400ba26	      0xe98ad8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ba2b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ba30	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ba35	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ba37	      0xe800000000	                          call 0x400ba3c	       104	stdio2.h	CALL_16
0x400ba3c	      0xe974d8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ba41	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ba46	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ba4b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ba4d	      0xe800000000	                          call 0x400ba52	       104	stdio2.h	CALL_16
0x400ba52	      0xe95ed8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ba57	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ba5c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ba61	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ba63	      0xe800000000	                          call 0x400ba68	       104	stdio2.h	CALL_16
0x400ba68	      0xe948d8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400ba6d	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ba6f	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ba74	      0xe88748ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ba79	            0x31ff	                            xor edi, edi	      2329	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_97
0x400ba7b	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ba7e	      0xba05000000	                              mov edx, 5	      2329	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_97
0x400ba83	      0xbe00000000	                              mov esi, 0	      2329	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_97
0x400ba88	      0xe800000000	                          call 0x400ba8d	      2329	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_97
0x400ba8d	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400ba90	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ba93	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ba98	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ba9a	      0xe800000000	                          call 0x400ba9f	       104	stdio2.h	CALL_16
0x400ba9f	      0xe911d8ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400baa4	            0x31ff	                            xor edi, edi	      2323	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_95
0x400baa6	      0xba05000000	                              mov edx, 5	      2323	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_95
0x400baab	      0xbe00000000	                              mov esi, 0	      2323	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_95
0x400bab0	      0xe800000000	                          call 0x400bab5	      2323	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_95
0x400bab5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400baba	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400babd	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400babf	      0xe800000000	                          call 0x400bac4	       104	stdio2.h	CALL_16
0x400bac4	      0xe9ecd7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400bac9	            0x31ff	                            xor edi, edi	      2317	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_93
0x400bacb	      0xba05000000	                              mov edx, 5	      2317	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_93
0x400bad0	      0xbe00000000	                              mov esi, 0	      2317	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_93
0x400bad5	      0xe800000000	                          call 0x400bada	      2317	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_93
0x400bada	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400badf	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400bae2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bae4	      0xe800000000	                          call 0x400bae9	       104	stdio2.h	CALL_16
0x400bae9	      0xe9c7d7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400baee	            0x31ff	                            xor edi, edi	      2320	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_94
0x400baf0	      0xba05000000	                              mov edx, 5	      2320	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_94
0x400baf5	      0xbe00000000	                              mov esi, 0	      2320	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_94
0x400bafa	      0xe800000000	                          call 0x400baff	      2320	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_94
0x400baff	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bb04	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400bb07	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bb09	      0xe800000000	                          call 0x400bb0e	       104	stdio2.h	CALL_16
0x400bb0e	      0xe9a2d7ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400bb13	        0x488b7808	                mov rdi, qword [rax + 8]	      2665	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	CALL_136
0x400bb17	      0xe8e456ffff	                   call sym.get_TAG_name	      2665	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	CALL_136
0x400bb1c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400bb21	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x400bb24	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bb29	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bb2b	      0xe800000000	                          call 0x400bb30	       104	stdio2.h	CALL_16
0x400bb30	      0xe9cdf2ffff	                           jmp 0x400ae02	       104	stdio2.h	CALL_16
0x400bb35	      0xba05000000	                              mov edx, 5	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb3a	      0xbe00000000	                              mov esi, 0	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb3f	            0x31ff	                            xor edi, edi	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb41	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb46	      0xe800000000	                          call 0x400bb4b	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb4b	          0x4889c7	                            mov rdi, rax	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb4e	            0x31c0	                            xor eax, eax	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb50	      0xe800000000	                          call 0x400bb55	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb55	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb5a	      0xe9addbffff	                           jmp 0x400970c	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x400bb5f	        0x4883fb08	                              cmp rbx, 8	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400bb63	     0xf857d010000	                           jne 0x400bce6	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400bb69	    0x4c8925000000	            mov qword [0x0400bb70], r12 	      2275	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400bb70	      0xe940d7ffff	                           jmp 0x40092b5	      2276	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400bb75	      0xbf31210000	                         mov edi, 0x2131	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb7a	      0xe8e156ffff	                    call sym.get_AT_name	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb7f	          0x4889df	                            mov rdi, rbx	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb82	          0x4989c4	                            mov r12, rax	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb85	      0xe84657ffff	                  call sym.get_FORM_name	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb8a	      0xba05000000	                              mov edx, 5	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb8f	          0x4889c3	                            mov rbx, rax	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb92	      0xbe00000000	                              mov esi, 0	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb97	            0x31ff	                            xor edi, edi	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb99	      0xe800000000	                          call 0x400bb9e	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bb9e	          0x4c89e2	                            mov rdx, r12	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bba1	          0x4889c7	                            mov rdi, rax	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bba4	          0x4889de	                            mov rsi, rbx	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bba7	            0x31c0	                            xor eax, eax	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bba9	      0xe800000000	                          call 0x400bbae	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x400bbae	    0x48c705000000	               mov qword [0x0400bbb9], 0	      2296	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x400bbb9	      0xe9f7d6ffff	                           jmp 0x40092b5	      2297	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x400bbbe	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bbc0	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bbc5	      0x44894c2428	             mov dword [rsp + 0x28], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bbca	      0xe83147ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bbcf	    0x488b0d000000	            mov rcx, qword [0x0400bbd6] 	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbd6	      0xba05000000	                              mov edx, 5	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbdb	      0xbe00000000	                              mov esi, 0	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbe0	            0x31ff	                            xor edi, edi	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbe2	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bbe7	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbec	      0xe800000000	                          call 0x400bbf1	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbf1	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbf6	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbfb	          0x4889c7	                            mov rdi, rax	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bbfe	            0x31c0	                            xor eax, eax	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bc00	      0xe800000000	                          call 0x400bc05	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x400bc05	    0x41b800000000	                              mov r8d, 0	       805	dwarf.c	FUNCTION_16	IF_2
0x400bc0b	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       805	dwarf.c	FUNCTION_16	IF_2
0x400bc10	      0xe97ff7ffff	                           jmp 0x400b394	       805	dwarf.c	FUNCTION_16	IF_2
0x400bc15	    0x4c8925000000	            mov qword [0x0400bc1c], r12 	      2250	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400bc1c	      0xe9ebdaffff	                           jmp 0x400970c	      2251	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400bc21	    0x488b94240801	           mov rdx, qword [rsp + 0x108] 	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x400bc29	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x400bc2e	            0x31c9	                            xor ecx, ecx	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x400bc30	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x400bc35	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x400bc3a	      0xe8e147ffff	           call sym.fetch_indexed_string	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x400bc3f	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2248	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400bc44	    0x488905000000	            mov qword [0x0400bc4b], rax 	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x400bc4b	      0xe9bcdaffff	                           jmp 0x400970c	      2248	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400bc50	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2244	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_74
0x400bc55	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2244	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_74
0x400bc5a	      0xe8b18fffff	          call sym.fetch_indirect_string	      2244	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_74
0x400bc5f	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      2245	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400bc64	    0x488905000000	            mov qword [0x0400bc6b], rax 	      2244	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_74
0x400bc6b	      0xe99cdaffff	                           jmp 0x400970c	      2245	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400bc70	            0x31ff	                            xor edi, edi	      2476	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_108
0x400bc72	      0xbe00000000	                              mov esi, 0	      2476	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_108
0x400bc77	      0xe800000000	                          call 0x400bc7c	      2476	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_108
0x400bc7c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bc81	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400bc84	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bc86	      0xe800000000	                          call 0x400bc8b	       104	stdio2.h	CALL_16
0x400bc8b	      0xe925d6ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400bc90	    0x8db000040000	                  lea esi, [rax + 0x400]	      2227	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400bc96	        0x498b7f58	            mov rdi, qword [r15 + 0x58] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400bc9a	          0x4989f4	                            mov r12, rsi	      2227	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400bc9d	        0x48c1e603	                              shl rsi, 3	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400bca1	      0xe800000000	                          call 0x400bca6	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400bca6	        0x45896764	            mov dword [r15 + 0x64], r12d	      2231	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400bcaa	        0x49894758	             mov qword [r15 + 0x58], rax	      2228	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400bcae	        0x418b5760	            mov edx, dword [r15 + 0x60] 	      2228	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400bcb2	      0xe935e9ffff	                           jmp 0x400a5ec	      2228	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400bcb7	    0x4881fb021f00	                         cmp rbx, 0x1f02	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400bcbe	     0xf85bce6ffff	                           jne 0x400a380	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400bcc4	      0xe96fe0ffff	                           jmp 0x4009d38	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400bcc9	     0xf1f80000000	                         nop dword [rax]	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400bcd0	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2269	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_82
0x400bcd5	      0xe88690ffff	     call sym.fetch_indirect_line_string	      2269	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_82
0x400bcda	    0x488905000000	            mov qword [0x0400bce1], rax 	      2269	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_82
0x400bce1	      0xe9cfd5ffff	                           jmp 0x40092b5	      2270	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400bce6	      0xbf1b000000	                           mov edi, 0x1b	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bceb	      0xe87055ffff	                    call sym.get_AT_name	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bcf0	          0x4889df	                            mov rdi, rbx	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bcf3	          0x4989c4	                            mov r12, rax	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bcf6	      0xe8d555ffff	                  call sym.get_FORM_name	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bcfb	      0xba05000000	                              mov edx, 5	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd00	          0x4889c3	                            mov rbx, rax	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd03	      0xbe00000000	                              mov esi, 0	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd08	            0x31ff	                            xor edi, edi	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd0a	      0xe800000000	                          call 0x400bd0f	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd0f	          0x4c89e2	                            mov rdx, r12	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd12	          0x4889c7	                            mov rdi, rax	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd15	          0x4889de	                            mov rsi, rbx	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd18	            0x31c0	                            xor eax, eax	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd1a	      0xe800000000	                          call 0x400bd1f	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400bd1f	      0xba05000000	                              mov edx, 5	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400bd24	      0xbe00000000	                              mov esi, 0	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400bd29	            0x31ff	                            xor edi, edi	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400bd2b	      0xe800000000	                          call 0x400bd30	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400bd30	    0x488905000000	            mov qword [0x0400bd37], rax 	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400bd37	      0xe979d5ffff	                           jmp 0x40092b5	      2281	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400bd3c	     0xf8793010000	                            ja 0x400bed5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bd42	    0x4981fe860000	                           cmp r14, 0x86	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bd49	     0xf841fddffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bd4f	      0xe961d5ffff	                           jmp 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bd54	         0xf1f4000	                         nop dword [rax]	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bd58	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2266	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_81
0x400bd5d	      0xe8ae8effff	          call sym.fetch_indirect_string	      2266	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_81
0x400bd62	    0x488905000000	            mov qword [0x0400bd69], rax 	      2266	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_81
0x400bd69	      0xe947d5ffff	                           jmp 0x40092b5	      2267	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400bd6e	            0x31c9	                            xor ecx, ecx	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x400bd70	      0xe90ee0ffff	                           jmp 0x4009d83	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x400bd75	          0x4c89c2	                             mov rdx, r8	      1947	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd78	          0x4c89c9	                             mov rcx, r9	      1950	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd7b	      0x4833542450	             xor rdx, qword [rsp + 0x50]	      1947	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd80	      0x48334c2458	             xor rcx, qword [rsp + 0x58]	      1950	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd85	          0x4931d0	                             xor r8, rdx	      1948	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd88	          0x4931c9	                             xor r9, rcx	      1951	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd8b	          0x4c31c2	                             xor rdx, r8	      1949	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd8e	      0x4c89442460	              mov qword [rsp + 0x60], r8	      1948	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd93	          0x4c31c9	                             xor rcx, r9	      1952	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd96	      0x4889542450	             mov qword [rsp + 0x50], rdx	      1949	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bd9b	      0x4c894c2468	              mov qword [rsp + 0x68], r9	      1951	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bda0	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      1952	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bda5	      0xe9f5f3ffff	                           jmp 0x400b19f	      1952	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400bdaa	        0x4883fe10	                           cmp rsi, 0x10	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdae	     0xf847c030000	                            je 0x400c130	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdb4	     0xf8260030000	                            jb 0x400c11a	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdba	        0x4883fe11	                           cmp rsi, 0x11	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdbe	     0xf8440030000	                            je 0x400c104	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdc4	        0x4883fe12	                           cmp rsi, 0x12	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdc8	     0xf853a040000	                           jne 0x400c208	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdce	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400bdd3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bdd8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bdda	      0xe800000000	                          call 0x400bddf	       104	stdio2.h	CALL_16
0x400bddf	      0xe9d1d4ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400bde4	        0x4883fe1a	                           cmp rsi, 0x1a	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bde8	     0xf84d0040000	                            je 0x400c2be	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdee	     0xf82b4040000	                            jb 0x400c2a8	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdf4	        0x4883fe1b	                           cmp rsi, 0x1b	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdf8	     0xf8494040000	                            je 0x400c292	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400bdfe	        0x4883fe1c	                           cmp rsi, 0x1c	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be02	     0xf8500040000	                           jne 0x400c208	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be08	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400be0d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400be12	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400be14	      0xe800000000	                          call 0x400be19	       104	stdio2.h	CALL_16
0x400be19	      0xe997d4ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400be1e	        0x4883fe24	                           cmp rsi, 0x24	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be22	     0xf844f030000	                            je 0x400c177	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be28	     0xf8233030000	                            jb 0x400c161	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be2e	    0x4881fe018000	                         cmp rsi, 0x8001	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be35	     0xf8410030000	                            je 0x400c14b	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be3b	    0x4881fe658700	                         cmp rsi, 0x8765	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be42	     0xf85c0030000	                           jne 0x400c208	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be48	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400be4d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400be52	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400be54	      0xe800000000	                          call 0x400be59	       104	stdio2.h	CALL_16
0x400be59	      0xe957d4ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400be5e	            0x89d6	                            mov esi, edx	       104	stdio2.h	CALL_16
0x400be60	      0xe984fbffff	                           jmp 0x400b9e9	       104	stdio2.h	CALL_16
0x400be65	        0x4883fe02	                              cmp rsi, 2	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be69	     0xf844a030000	                            je 0x400c1b9	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be6f	     0xf872e030000	                            ja 0x400c1a3	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be75	        0x4883fe01	                              cmp rsi, 1	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be79	     0xf8589030000	                           jne 0x400c208	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400be7f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400be84	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400be89	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400be8b	      0xe800000000	                          call 0x400be90	       104	stdio2.h	CALL_16
0x400be90	      0xe920d4ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400be95	            0x31ff	                            xor edi, edi	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400be97	      0xba05000000	                              mov edx, 5	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400be9c	      0xbe00000000	                              mov esi, 0	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400bea1	      0xe800000000	                          call 0x400bea6	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400bea6	          0x4889c7	                            mov rdi, rax	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400bea9	            0x31c0	                            xor eax, eax	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400beab	      0xe800000000	                          call 0x400beb0	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400beb0	      0xe900d4ffff	                           jmp 0x40092b5	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400beb5	            0x31ff	                            xor edi, edi	      2520	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_112
0x400beb7	      0xbe00000000	                              mov esi, 0	      2520	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_112
0x400bebc	      0xe800000000	                          call 0x400bec1	      2520	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_112
0x400bec1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bec6	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400bec9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400becb	      0xe800000000	                          call 0x400bed0	       104	stdio2.h	CALL_16
0x400bed0	      0xe9e0d3ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400bed5	    0x4981ee112100	                         sub r14, 0x2111	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bedc	        0x4983fe03	                              cmp r14, 3	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bee0	     0xf8688dbffff	                           jbe 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bee6	      0xe9cad3ffff	                           jmp 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400beeb	        0x4983fe46	                           cmp r14, 0x46	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400beef	     0xf8479dbffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bef5	      0xe9bbd3ffff	                           jmp 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400befa	        0x4983fe02	                              cmp r14, 2	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400befe	     0xf846adbffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf04	      0xe9acd3ffff	                           jmp 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf09	        0x4983fe38	                           cmp r14, 0x38	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf0d	     0xf845bdbffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf13	      0xe99dd3ffff	                           jmp 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf18	        0x4983fe2a	                           cmp r14, 0x2a	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf1c	     0xf844cdbffff	                            je 0x4009a6e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf22	      0xe98ed3ffff	                           jmp 0x40092b5	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf27	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400bf2c	      0xba05000000	                              mov edx, 5	      1705	dwarf.c	FUNCTION_28	CALL_3
0x400bf31	      0xbe00000000	                              mov esi, 0	      1705	dwarf.c	FUNCTION_28	CALL_3
0x400bf36	            0x31ff	                            xor edi, edi	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400bf38	      0xe800000000	                          call 0x400bf3d	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400bf3d	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400bf42	          0x4989c0	                             mov r8, rax	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400bf45	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400bf4a	      0xe9f9e0ffff	                           jmp 0x400a048	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400bf4f	          0x4889ce	                            mov rsi, rcx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bf52	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bf54	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bf59	      0xe8a243ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bf5e	      0xba05000000	                              mov edx, 5	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400bf63	      0xbe00000000	                              mov esi, 0	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400bf68	            0x31ff	                            xor edi, edi	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400bf6a	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bf6f	      0xe800000000	                          call 0x400bf74	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400bf74	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400bf79	          0x4889c7	                            mov rdi, rax	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400bf7c	            0x31c0	                            xor eax, eax	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400bf7e	      0xe800000000	                          call 0x400bf83	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400bf83	      0xba05000000	                              mov edx, 5	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bf88	      0xbe00000000	                              mov esi, 0	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bf8d	            0x31ff	                            xor edi, edi	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bf8f	      0xe800000000	                          call 0x400bf94	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bf94	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bf99	          0x4989c0	                             mov r8, rax	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bf9c	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bfa1	      0xe9a2e0ffff	                           jmp 0x400a048	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bfa6	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400bfab	      0xba05000000	                              mov edx, 5	      1702	dwarf.c	FUNCTION_28	CALL_1
0x400bfb0	      0xbe00000000	                              mov esi, 0	      1702	dwarf.c	FUNCTION_28	CALL_1
0x400bfb5	      0xe97cffffff	                           jmp 0x400bf36	      1702	dwarf.c	FUNCTION_28	CALL_1
0x400bfba	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400bfbf	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bfc4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bfc6	      0xe800000000	                          call 0x400bfcb	       104	stdio2.h	CALL_16
0x400bfcb	      0xe9e5d2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400bfd0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400bfd5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bfda	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bfdc	      0xe800000000	                          call 0x400bfe1	       104	stdio2.h	CALL_16
0x400bfe1	      0xe9cfd2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400bfe6	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400bfeb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bff0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bff2	      0xe800000000	                          call 0x400bff7	       104	stdio2.h	CALL_16
0x400bff7	      0xe9b9d2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400bffc	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c001	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c006	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c008	      0xe800000000	                          call 0x400c00d	       104	stdio2.h	CALL_16
0x400c00d	      0xe9a3d2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c012	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c017	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c01c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c01e	      0xe800000000	                          call 0x400c023	       104	stdio2.h	CALL_16
0x400c023	      0xe98dd2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c028	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c02d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c032	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c034	      0xe800000000	                          call 0x400c039	       104	stdio2.h	CALL_16
0x400c039	      0xe977d2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c03e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c043	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c048	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c04a	      0xe800000000	                          call 0x400c04f	       104	stdio2.h	CALL_16
0x400c04f	      0xe961d2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c054	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c059	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c05e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c060	      0xe800000000	                          call 0x400c065	       104	stdio2.h	CALL_16
0x400c065	      0xe94bd2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c06a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c06f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c074	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c076	      0xe800000000	                          call 0x400c07b	       104	stdio2.h	CALL_16
0x400c07b	      0xe935d2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c080	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c085	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c08a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c08c	      0xe800000000	                          call 0x400c091	       104	stdio2.h	CALL_16
0x400c091	      0xe91fd2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c096	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c09b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c0a0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c0a2	      0xe800000000	                          call 0x400c0a7	       104	stdio2.h	CALL_16
0x400c0a7	      0xe909d2ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c0ac	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c0b1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c0b6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c0b8	      0xe800000000	                          call 0x400c0bd	       104	stdio2.h	CALL_16
0x400c0bd	      0xe9f3d1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c0c2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c0c7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c0cc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c0ce	      0xe800000000	                          call 0x400c0d3	       104	stdio2.h	CALL_16
0x400c0d3	      0xe9ddd1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c0d8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c0dd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c0e2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c0e4	      0xe800000000	                          call 0x400c0e9	       104	stdio2.h	CALL_16
0x400c0e9	      0xe9c7d1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c0ee	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c0f3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c0f8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c0fa	      0xe800000000	                          call 0x400c0ff	       104	stdio2.h	CALL_16
0x400c0ff	      0xe9b1d1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c104	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c109	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c10e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c110	      0xe800000000	                          call 0x400c115	       104	stdio2.h	CALL_16
0x400c115	      0xe99bd1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c11a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c11f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c124	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c126	      0xe800000000	                          call 0x400c12b	       104	stdio2.h	CALL_16
0x400c12b	      0xe985d1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c130	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c135	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c13a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c13c	      0xe800000000	                          call 0x400c141	       104	stdio2.h	CALL_16
0x400c141	      0xe96fd1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c146	      0xe800000000	                          call 0x400c14b	      2677	dwarf.c	FUNCTION_30
0x400c14b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c150	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c155	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c157	      0xe800000000	                          call 0x400c15c	       104	stdio2.h	CALL_16
0x400c15c	      0xe954d1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c161	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c166	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c16b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c16d	      0xe800000000	                          call 0x400c172	       104	stdio2.h	CALL_16
0x400c172	      0xe93ed1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c177	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c17c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c181	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c183	      0xe800000000	                          call 0x400c188	       104	stdio2.h	CALL_16
0x400c188	      0xe928d1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c18d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c192	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c197	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c199	      0xe800000000	                          call 0x400c19e	       104	stdio2.h	CALL_16
0x400c19e	      0xe912d1ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c1a3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c1a8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c1ad	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c1af	      0xe800000000	                          call 0x400c1b4	       104	stdio2.h	CALL_16
0x400c1b4	      0xe9fcd0ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c1b9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c1be	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c1c3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c1c5	      0xe800000000	                          call 0x400c1ca	       104	stdio2.h	CALL_16
0x400c1ca	      0xe9e6d0ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c1cf	        0x4983fe38	                           cmp r14, 0x38	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1d3	     0xf849cdcffff	                            je 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1d9	     0xf8773dcffff	                            ja 0x4009e52	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1df	        0x4983fe19	                           cmp r14, 0x19	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1e3	     0xf848cdcffff	                            je 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1e9	     0xf876c010000	                            ja 0x400c35b	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1ef	        0x4983fe02	                              cmp r14, 2	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1f3	     0xf847cdcffff	                            je 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1f9	        0x4983fe11	                           cmp r14, 0x11	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c1fd	     0xf8409d8ffff	                            je 0x4009a0c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c203	      0xe9add0ffff	                           jmp 0x40092b5	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c208	    0x488d860080ff	                 lea rax, [rsi - 0x8000]	      2385	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51
0x400c20f	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400c211	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400c216	    0x483dff7f0000	                         cmp rax, 0x7fff	      2385	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51
0x400c21c	     0xf8709010000	                            ja 0x400c32b	      2385	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51
0x400c222	      0xe8d940ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400c227	            0x31ff	                            xor edi, edi	      2386	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51	CALL_99
0x400c229	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400c22c	      0xba05000000	                              mov edx, 5	      2386	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51	CALL_99
0x400c231	      0xbe00000000	                              mov esi, 0	      2386	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51	CALL_99
0x400c236	      0xe800000000	                          call 0x400c23b	      2386	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51	CALL_99
0x400c23b	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400c23e	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400c241	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c246	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c248	      0xe800000000	                          call 0x400c24d	       104	stdio2.h	CALL_16
0x400c24d	      0xe963d0ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c252	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c257	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c25c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c25e	      0xe800000000	                          call 0x400c263	       104	stdio2.h	CALL_16
0x400c263	      0xe94dd0ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c268	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       104	stdio2.h	CALL_16
0x400c26d	      0xba05000000	                              mov edx, 5	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400c272	      0xbe00000000	                              mov esi, 0	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400c277	      0xe9bafcffff	                           jmp 0x400bf36	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400c27c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c281	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c286	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c288	      0xe800000000	                          call 0x400c28d	       104	stdio2.h	CALL_16
0x400c28d	      0xe923d0ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c292	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c297	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c29c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c29e	      0xe800000000	                          call 0x400c2a3	       104	stdio2.h	CALL_16
0x400c2a3	      0xe90dd0ffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c2a8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c2ad	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c2b2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c2b4	      0xe800000000	                          call 0x400c2b9	       104	stdio2.h	CALL_16
0x400c2b9	      0xe9f7cfffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c2be	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c2c3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c2c8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c2ca	      0xe800000000	                          call 0x400c2cf	       104	stdio2.h	CALL_16
0x400c2cf	      0xe9e1cfffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c2d4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400c2d9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c2de	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c2e0	      0xe800000000	                          call 0x400c2e5	       104	stdio2.h	CALL_16
0x400c2e5	      0xe9cbcfffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c2ea	      0xba05000000	                              mov edx, 5	       799	dwarf.c	FUNCTION_16	CALL_1
0x400c2ef	      0xbe00000000	                              mov esi, 0	       799	dwarf.c	FUNCTION_16	CALL_1
0x400c2f4	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       799	dwarf.c	FUNCTION_16	CALL_1
0x400c2f9	      0xe800000000	                          call 0x400c2fe	       799	dwarf.c	FUNCTION_16	CALL_1
0x400c2fe	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	       799	dwarf.c	FUNCTION_16	CALL_1
0x400c303	          0x4989c0	                             mov r8, rax	       799	dwarf.c	FUNCTION_16	CALL_1
0x400c306	      0xe989f0ffff	                           jmp 0x400b394	       799	dwarf.c	FUNCTION_16	CALL_1
0x400c30b	            0x31ff	                            xor edi, edi	      2436	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_104
0x400c30d	      0xbe00000000	                              mov esi, 0	      2436	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_104
0x400c312	      0xe800000000	                          call 0x400c317	      2436	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_104
0x400c317	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c31c	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400c31f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c321	      0xe800000000	                          call 0x400c326	       104	stdio2.h	CALL_16
0x400c326	      0xe98acfffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c32b	      0xe8d03fffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400c330	            0x31ff	                            xor edi, edi	      2389	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	CALL_102
0x400c332	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400c335	      0xba05000000	                              mov edx, 5	      2389	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	CALL_102
0x400c33a	      0xbe00000000	                              mov esi, 0	      2389	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	CALL_102
0x400c33f	      0xe800000000	                          call 0x400c344	      2389	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	CALL_102
0x400c344	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400c347	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400c34a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400c34f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400c351	      0xe800000000	                          call 0x400c356	       104	stdio2.h	CALL_16
0x400c356	      0xe95acfffff	                           jmp 0x40092b5	       104	stdio2.h	CALL_16
0x400c35b	        0x4983fe1b	                           cmp r14, 0x1b	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c35f	     0xf84d5e0ffff	                            je 0x400a43a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c365	        0x4983fe2a	                           cmp r14, 0x2a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c369	     0xf8546cfffff	                           jne 0x40092b5	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c36f	      0xe901dbffff	                           jmp 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c374	          0x4531d2	                          xor r10d, r10d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c377	      0xe985e1ffff	                           jmp 0x400a501	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c37c	    0x4981fe332100	                         cmp r14, 0x2133	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c383	     0xf8424e1ffff	                            je 0x400a4ad	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c389	    0x4981fe372100	                         cmp r14, 0x2137	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c390	     0xf851fcfffff	                           jne 0x40092b5	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c396	      0xe9dadaffff	                           jmp 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c39b	    0x4981fe112100	                         cmp r14, 0x2111	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3a2	     0xf83cddaffff	                           jae 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3a8	    0x4981fe840000	                           cmp r14, 0x84	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3af	     0xf8785000000	                            ja 0x400c43a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3b5	    0x4981fe830000	                           cmp r14, 0x83	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3bc	     0xf83b3daffff	                           jae 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3c2	        0x4983fe76	                           cmp r14, 0x76	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3c6	            0x74ac	                            je 0x400c374	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3c8	        0x4983fe7e	                           cmp r14, 0x7e	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3cc	     0xf85e3ceffff	                           jne 0x40092b5	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3d2	      0xe99edaffff	                           jmp 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3d7	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c3dc	      0xba05000000	                              mov edx, 5	      1709	dwarf.c	FUNCTION_28	CALL_4
0x400c3e1	      0xbe00000000	                              mov esi, 0	      1709	dwarf.c	FUNCTION_28	CALL_4
0x400c3e6	      0xe94bfbffff	                           jmp 0x400bf36	      1709	dwarf.c	FUNCTION_28	CALL_4
0x400c3eb	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1709	dwarf.c	FUNCTION_28	CALL_4
0x400c3f0	          0x4889ef	                            mov rdi, rbp	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400c3f3	    0xff1500000000	                 call qword [0x0400c3f9]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400c3f9	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400c3fe	      0x4889442448	             mov qword [rsp + 0x48], rax	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400c403	      0xe928dbffff	                           jmp 0x4009f30	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400c408	      0xb900000000	                              mov ecx, 0	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400c40d	      0xba8e080000	                          mov edx, 0x88e	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400c412	      0xbe00000000	                              mov esi, 0	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400c417	      0xbf00000000	                              mov edi, 0	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400c41c	      0xe800000000	                          call 0x400c421	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400c421	        0x4983fe4a	                           cmp r14, 0x4a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c425	     0xf844adaffff	                            je 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c42b	        0x4983fe4d	                           cmp r14, 0x4d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c42f	     0xf8580ceffff	                           jne 0x40092b5	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c435	      0xe93bdaffff	                           jmp 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c43a	    0x4981fe860000	                           cmp r14, 0x86	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c441	     0xf856eceffff	                           jne 0x40092b5	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400c447	      0xe929daffff	                           jmp 0x4009e75	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
range_entry_compar	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:CALL,0:functions,0	9
0x40000a0	          0x488b16	                    mov rdx, qword [rsi]	      6551	dwarf.c	FUNCTION_66
0x40000a3	          0x488b0f	                    mov rcx, qword [rdi]	      6550	dwarf.c	FUNCTION_66
0x40000a6	            0x31c0	                            xor eax, eax	      6553	dwarf.c	FUNCTION_66
0x40000a8	          0x4839d1	                            cmp rcx, rdx	      6553	dwarf.c	FUNCTION_66
0x40000ab	           0xf92c2	                                 setb dl	      6553	dwarf.c	FUNCTION_66
0x40000ae	           0xf97c0	                                 seta al	      6553	dwarf.c	FUNCTION_66
0x40000b1	           0xfb6d2	                           movzx edx, dl	      6553	dwarf.c	FUNCTION_66
0x40000b4	            0x29d0	                            sub eax, edx	      6553	dwarf.c	FUNCTION_66
0x40000b6	              0xc3	                                     ret	      6554	dwarf.c	FUNCTION_66
frame_display_row	ELSE,2:WHILE,0:FOR,2:SWITCH,1:DO,0:IF,6:CALL,10:functions,0	243
0x4006be0	            0x4154	                                push r12	      7180	dwarf.c	FUNCTION_79
0x4006be2	              0x55	                                push rbp	      7180	dwarf.c	FUNCTION_79
0x4006be3	          0x4989d4	                            mov r12, rdx	      7180	dwarf.c	FUNCTION_79
0x4006be6	              0x53	                                push rbx	      7180	dwarf.c	FUNCTION_79
0x4006be7	          0x4889fd	                            mov rbp, rdi	      7180	dwarf.c	FUNCTION_79
0x4006bea	        0x4883ec70	                           sub rsp, 0x70	      7180	dwarf.c	FUNCTION_79
0x4006bee	    0x64488b042528	                mov rax, qword fs:[0x28]	      7180	dwarf.c	FUNCTION_79
0x4006bf7	      0x4889442468	             mov qword [rsp + 0x68], rax	      7180	dwarf.c	FUNCTION_79
0x4006bfc	            0x31c0	                            xor eax, eax	      7180	dwarf.c	FUNCTION_79
0x4006bfe	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      7184	dwarf.c	FUNCTION_79	IF_1
0x4006c01	            0x3902	                    cmp dword [rdx], eax	      7184	dwarf.c	FUNCTION_79	IF_1
0x4006c03	            0x7402	                            je 0x4006c07	      7184	dwarf.c	FUNCTION_79	IF_1
0x4006c05	            0x8902	                    mov dword [rdx], eax	      7185	dwarf.c	FUNCTION_79	IF_1
0x4006c07	            0x8b3e	                    mov edi, dword [rsi]	      7187	dwarf.c	FUNCTION_79	IF_2
0x4006c09	            0x85ff	                           test edi, edi	      7187	dwarf.c	FUNCTION_79	IF_2
0x4006c0b	     0xf85af020000	                           jne 0x4006ec0	      7187	dwarf.c	FUNCTION_79	IF_2
0x4006c11	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       256	dwarf.c	FUNCTION_5	CALL_1
0x4006c15	    0x8b1500000000	            mov edx, dword [0x04006c1b] 	       256	dwarf.c	FUNCTION_5	CALL_1
0x4006c1b	            0x31ff	                            xor edi, edi	       256	dwarf.c	FUNCTION_5	CALL_1
0x4006c1d	      0xe8de96ffff	                 call sym.dwarf_vmatoa_1	       256	dwarf.c	FUNCTION_5	CALL_1
0x4006c22	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006c27	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006c2a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006c2f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006c31	      0xe800000000	                          call 0x4006c36	       104	stdio2.h	CALL_16
0x4006c36	        0x807d5d00	                cmp byte [rbp + 0x5d], 0	      7208	dwarf.c	FUNCTION_79	IF_5
0x4006c3a	     0xf8400020000	                            je 0x4006e40	      7208	dwarf.c	FUNCTION_79	IF_5
0x4006c40	    0xc70424657870	               mov dword [rsp], 0x707865	       110	string3.h	FUNCTION_135	CALL_3
0x4006c47	          0x4989e4	                            mov r12, rsp	       110	string3.h	FUNCTION_135	CALL_3
0x4006c4a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006c4c	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4006c4f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006c54	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006c59	            0x31db	                            xor ebx, ebx	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006c5b	      0xe800000000	                          call 0x4006c60	       104	stdio2.h	CALL_16
0x4006c60	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006c63	            0x85c9	                           test ecx, ecx	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006c65	            0x7557	                           jne 0x4006cbe	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006c67	      0xe9ac000000	                           jmp 0x4006d18	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006c6c	         0xf1f4000	                         nop dword [rax]	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006c70	        0x6683f808	                               cmp ax, 8	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006c74	     0xf8486010000	                            je 0x4006e00	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006c7a	        0x6683f809	                               cmp ax, 9	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006c7e	     0xf84dc000000	                            je 0x4006d60	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006c84	        0x6683f807	                               cmp ax, 7	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006c88	     0xf84c2000000	                            je 0x4006d50	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006c8e	    0x41c704246e2f	               mov dword [r12], 0x612f6e	       110	string3.h	FUNCTION_135	CALL_3
0x4006c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       110	string3.h	FUNCTION_135	CALL_3
0x4006ca0	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4006ca3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006ca8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006cad	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006caf	      0xe800000000	                          call 0x4006cb4	       104	stdio2.h	CALL_16
0x4006cb4	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	       104	stdio2.h	CALL_16
0x4006cb7	          0x83c301	                              add ebx, 1	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006cba	            0x39cb	                            cmp ebx, ecx	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006cbc	            0x735a	                           jae 0x4006d18	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4006cbe	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x4006cc2	            0x89da	                            mov edx, ebx	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x4006cc4	         0xfb70450	           movzx eax, word [rax + rdx*2]	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x4006cc8	        0x6683f8ff	              cmp ax, 0xffffffffffffffff	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x4006ccc	            0x74e9	                            je 0x4006cb7	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x4006cce	        0x6683f810	                            cmp ax, 0x10	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006cd2	            0x746c	                            je 0x4006d40	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006cd4	            0x7e9a	                           jle 0x4006c70	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006cd6	        0x6683f816	                            cmp ax, 0x16	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006cda	     0xf8448010000	                            je 0x4006e28	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006ce0	        0x663d8000	                            cmp ax, 0x80	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006ce4	     0xf8426010000	                            je 0x4006e10	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006cea	        0x6683f814	                            cmp ax, 0x14	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006cee	            0x759e	                           jne 0x4006c8e	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006cf0	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      7230	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006cf4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006cf9	        0x448b0490	            mov r8d, dword [rax + rdx*4]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006cfd	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006d02	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006d07	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006d0a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006d0c	      0xe800000000	                          call 0x4006d11	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006d11	            0xeb8d	                           jmp 0x4006ca0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006d13	       0xf1f440000	                   nop dword [rax + rax]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006d18	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4006d1d	      0xe800000000	                          call 0x4006d22	       104	stdio2.h	CALL_16
0x4006d22	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      7249	dwarf.c	FUNCTION_79
0x4006d27	    0x644833042528	                xor rax, qword fs:[0x28]	      7249	dwarf.c	FUNCTION_79
0x4006d30	     0xf8569020000	                           jne 0x4006f9f	      7249	dwarf.c	FUNCTION_79
0x4006d36	        0x4883c470	                           add rsp, 0x70	      7249	dwarf.c	FUNCTION_79
0x4006d3a	              0x5b	                                 pop rbx	      7249	dwarf.c	FUNCTION_79
0x4006d3b	              0x5d	                                 pop rbp	      7249	dwarf.c	FUNCTION_79
0x4006d3c	            0x415c	                                 pop r12	      7249	dwarf.c	FUNCTION_79
0x4006d3e	              0xc3	                                     ret	      7249	dwarf.c	FUNCTION_79
0x4006d3f	              0x90	                                     nop	      7249	dwarf.c	FUNCTION_79
0x4006d40	    0x41c704246578	               mov dword [r12], 0x707865	       110	string3.h	FUNCTION_135	CALL_3
0x4006d48	      0xe953ffffff	                           jmp 0x4006ca0	       110	string3.h	FUNCTION_135	CALL_3
0x4006d4d	           0xf1f00	                         nop dword [rax]	       110	string3.h	FUNCTION_135	CALL_3
0x4006d50	      0xbe75000000	                           mov esi, 0x75	       110	string3.h	FUNCTION_135	CALL_3
0x4006d55	      0x6641893424	                      mov word [r12], si	       110	string3.h	FUNCTION_135	CALL_3
0x4006d5a	      0xe941ffffff	                           jmp 0x4006ca0	       110	string3.h	FUNCTION_135	CALL_3
0x4006d5f	              0x90	                                     nop	       110	string3.h	FUNCTION_135	CALL_3
0x4006d60	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      7233	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1	CALL_7
0x4006d64	        0x448b0c90	            mov r9d, dword [rax + rdx*4]	      7233	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1	CALL_7
0x4006d68	    0x488b05000000	            mov rax, qword [0x04006d6f] 	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006d6f	          0x4885c0	                           test rax, rax	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006d72	            0x7444	                            je 0x4006db8	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006d74	    0x443b0d000000	            cmp r9d, dword [0x04006d7b] 	      7165	dwarf.c	FUNCTION_78	IF_1
0x4006d7b	            0x733b	                           jae 0x4006db8	      7165	dwarf.c	FUNCTION_78	IF_1
0x4006d7d	          0x4489ca	                            mov edx, r9d	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006d80	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006d84	          0x4885c0	                           test rax, rax	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006d87	            0x742f	                            je 0x4006db8	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006d89	        0x4883ec08	                              sub rsp, 8	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006d8d	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006d92	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006d98	              0x50	                                push rax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006d99	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006d9e	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006da3	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006da8	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006daa	      0xe800000000	                          call 0x4006daf	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006daf	              0x58	                                 pop rax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006db0	              0x5a	                                 pop rdx	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006db1	            0xeb26	                           jmp 0x4006dd9	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006db3	       0xf1f440000	                   nop dword [rax + rax]	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006db8	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006dbe	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006dc3	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006dc8	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006dcd	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006dd2	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006dd4	      0xe800000000	                          call 0x4006dd9	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006dd9	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006ddf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006de4	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006de9	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006dee	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006df1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006df3	      0xe800000000	                          call 0x4006df8	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006df8	      0xe9a3feffff	                           jmp 0x4006ca0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006dfd	           0xf1f00	                         nop dword [rax]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e00	      0xb973000000	                           mov ecx, 0x73	       110	string3.h	FUNCTION_135	CALL_3
0x4006e05	      0x6641890c24	                      mov word [r12], cx	       110	string3.h	FUNCTION_135	CALL_3
0x4006e0a	      0xe991feffff	                           jmp 0x4006ca0	       110	string3.h	FUNCTION_135	CALL_3
0x4006e0f	              0x90	                                     nop	       110	string3.h	FUNCTION_135	CALL_3
0x4006e10	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      7227	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4006e14	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e19	        0x448b0490	            mov r8d, dword [rax + rdx*4]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e1d	      0xe9dbfeffff	                           jmp 0x4006cfd	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e22	    0x660f1f440000	                    nop word [rax + rax]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e28	    0x41c704247665	            mov dword [r12], 0x70786576 	       110	string3.h	FUNCTION_135	CALL_3
0x4006e30	    0x41c644240400	                   mov byte [r12 + 4], 0	       110	string3.h	FUNCTION_135	CALL_3
0x4006e36	      0xe965feffff	                           jmp 0x4006ca0	       110	string3.h	FUNCTION_135	CALL_3
0x4006e3b	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_135	CALL_3
0x4006e40	    0x488b05000000	            mov rax, qword [0x04006e47] 	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006e47	        0x488b5d50	            mov rbx, qword [rbp + 0x50] 	      7211	dwarf.c	FUNCTION_79	CALL_4
0x4006e4b	        0x448b4d48	            mov r9d, dword [rbp + 0x48] 	      7211	dwarf.c	FUNCTION_79	CALL_4
0x4006e4f	          0x4885c0	                           test rax, rax	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006e52	            0x743c	                            je 0x4006e90	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006e54	    0x443b0d000000	            cmp r9d, dword [0x04006e5b] 	      7165	dwarf.c	FUNCTION_78	IF_1
0x4006e5b	            0x7333	                           jae 0x4006e90	      7165	dwarf.c	FUNCTION_78	IF_1
0x4006e5d	          0x4489ca	                            mov edx, r9d	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006e60	        0x4c8b04d0	             mov r8, qword [rax + rdx*8]	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006e64	          0x4d85c0	                             test r8, r8	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006e67	            0x7427	                            je 0x4006e90	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006e69	          0x4189d9	                            mov r9d, ebx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e6c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e71	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e76	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e7b	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e7e	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e80	          0x4989e4	                            mov r12, rsp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e83	      0xe800000000	                          call 0x4006e88	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e88	      0xe9bdfdffff	                           jmp 0x4006c4a	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e8d	           0xf1f00	                         nop dword [rax]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4006e90	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006e96	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006e9b	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006ea0	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006ea5	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006eaa	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006eac	      0xe800000000	                          call 0x4006eb1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006eb1	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006eb7	            0xebb0	                           jmp 0x4006e69	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006eb9	     0xf1f80000000	                         nop dword [rax]	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006ec0	    0xc70600000000	                      mov dword [rsi], 0	      7191	dwarf.c	FUNCTION_79	IF_2
0x4006ec6	    0x8b0500000000	            mov eax, dword [0x04006ecc] 	       104	stdio2.h	CALL_16
0x4006ecc	      0xb900000000	                              mov ecx, 0	       104	stdio2.h	CALL_16
0x4006ed1	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006ed6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006edb	            0x31db	                            xor ebx, ebx	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006edd	          0x8d1400	                    lea edx, [rax + rax]	       104	stdio2.h	CALL_16
0x4006ee0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006ee2	      0xe800000000	                          call 0x4006ee7	       104	stdio2.h	CALL_16
0x4006ee7	        0x418b0c24	                    mov ecx, dword [r12]	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006eeb	            0x85c9	                           test ecx, ecx	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006eed	            0x752e	                           jne 0x4006f1d	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006eef	      0xe99c000000	                           jmp 0x4006f90	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006ef4	         0xf1f4000	                         nop dword [rax]	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006ef8	        0x488b14c2	            mov rdx, qword [rdx + rax*8]	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006efc	          0x4885d2	                           test rdx, rdx	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006eff	            0x7442	                            je 0x4006f43	      7166	dwarf.c	FUNCTION_78	IF_1
0x4006f01	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006f06	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006f0b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006f0d	      0xe800000000	                          call 0x4006f12	       104	stdio2.h	CALL_16
0x4006f12	        0x418b0c24	                    mov ecx, dword [r12]	       104	stdio2.h	CALL_16
0x4006f16	          0x83c301	                              add ebx, 1	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006f19	            0x39cb	                            cmp ebx, ecx	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006f1b	            0x7373	                           jae 0x4006f90	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006f1d	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      7196	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3
0x4006f21	            0x89d8	                            mov eax, ebx	      7196	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3
0x4006f23	      0x66833c42ff	cmp word [rdx + rax*2], 0xffffffffffffffff	      7196	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3
0x4006f28	            0x74ec	                            je 0x4006f16	      7196	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3
0x4006f2a	          0x395d58	            cmp dword [rbp + 0x58], ebx 	      7198	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3	IF_4
0x4006f2d	            0x7441	                            je 0x4006f70	      7198	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3	IF_4
0x4006f2f	    0x488b15000000	            mov rdx, qword [0x04006f36] 	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006f36	          0x4885d2	                           test rdx, rdx	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006f39	            0x7408	                            je 0x4006f43	      7164	dwarf.c	FUNCTION_78	IF_1
0x4006f3b	    0x391d00000000	            cmp dword [0x04006f41], ebx 	      7165	dwarf.c	FUNCTION_78	IF_1
0x4006f41	            0x77b5	                            ja 0x4006ef8	      7165	dwarf.c	FUNCTION_78	IF_1
0x4006f43	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f48	          0x4189d9	                            mov r9d, ebx	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f4b	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f51	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f56	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f5b	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f60	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f62	      0xe800000000	                          call 0x4006f67	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f67	      0xba00000000	                              mov edx, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f6c	            0xeb93	                           jmp 0x4006f01	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f6e	            0x6690	                                     nop	        64	stdio2.h	FUNCTION_114	CALL_1
0x4006f70	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006f72	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006f77	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006f7c	      0xe800000000	                          call 0x4006f81	       104	stdio2.h	CALL_16
0x4006f81	        0x418b0c24	                    mov ecx, dword [r12]	       104	stdio2.h	CALL_16
0x4006f85	          0x83c301	                              add ebx, 1	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006f88	            0x39cb	                            cmp ebx, ecx	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006f8a	            0x7291	                            jb 0x4006f1d	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006f8c	         0xf1f4000	                         nop dword [rax]	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4006f90	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4006f95	      0xe800000000	                          call 0x4006f9a	       104	stdio2.h	CALL_16
0x4006f9a	      0xe972fcffff	                           jmp 0x4006c11	       104	stdio2.h	CALL_16
0x4006f9f	      0xe800000000	                          call 0x4006fa4	      7249	dwarf.c	FUNCTION_79
display_debug_macinfo	ELSE,0:WHILE,1:FOR,0:SWITCH,1:DO,0:IF,0:CALL,14:functions,0	682
0x4004180	            0x4155	                                push r13	      4907	dwarf.c	FUNCTION_46
0x4004182	            0x4154	                                push r12	      4907	dwarf.c	FUNCTION_46
0x4004184	        0x488d7718	                   lea rsi, [rdi + 0x18]	      4907	dwarf.c	FUNCTION_46
0x4004188	              0x55	                                push rbp	      4907	dwarf.c	FUNCTION_46
0x4004189	              0x53	                                push rbx	      4907	dwarf.c	FUNCTION_46
0x400418a	        0x4883ec08	                              sub rsp, 8	      4907	dwarf.c	FUNCTION_46
0x400418e	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	      4908	dwarf.c	FUNCTION_46
0x4004192	          0x4889dd	                            mov rbp, rbx	      4909	dwarf.c	FUNCTION_46
0x4004195	        0x48036f30	             add rbp, qword [rdi + 0x30]	      4909	dwarf.c	FUNCTION_46
0x4004199	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4914	dwarf.c	FUNCTION_46	CALL_1
0x400419d	      0xe8aed5ffff	  call sym.introduce.isra.5.constprop.33	      4914	dwarf.c	FUNCTION_46	CALL_1
0x40041a2	          0x4839eb	                            cmp rbx, rbp	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x40041a5	     0xf82bf010000	                            jb 0x400436a	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x40041ab	      0xe976060000	                           jmp 0x4004826	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x40041b0	            0x3c01	                               cmp al, 1	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40041b2	     0xf8498060000	                            je 0x4004850	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40041b8	            0x3c02	                               cmp al, 2	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40041ba	     0xf8580060000	                           jne 0x4004840	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40041c0	          0x4c39ed	                            cmp rbp, r13	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40041c3	     0xf8664080000	                           jbe 0x4004a2d	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40041c9	         0xfb65301	               movzx edx, byte [rbx + 1]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40041cd	        0x488d4b02	                      lea rcx, [rbx + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40041d1	          0x4189d4	                           mov r12d, edx	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40041d4	        0x4183e47f	                          and r12d, 0x7f	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40041d8	          0x4839cd	                            cmp rbp, rcx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40041db	        0x410fb6c4	                         movzx eax, r12b	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40041df	     0xf865c080000	                           jbe 0x4004a41	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40041e5	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40041e7	     0xf8954080000	                           jns 0x4004a41	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40041ed	         0xfb64b02	               movzx ecx, byte [rbx + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40041f1	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40041f4	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40041f7	        0x48c1e207	                              shl rdx, 7	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40041fb	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40041fe	        0x488d5303	                      lea rdx, [rbx + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004202	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004205	     0xf868a080000	                           jbe 0x4004a95	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400420b	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400420d	     0xf8982080000	                           jns 0x4004a95	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004213	         0xfb64b03	               movzx ecx, byte [rbx + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004217	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400421a	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400421d	        0x48c1e20e	                            shl rdx, 0xe	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004221	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004224	        0x488d5304	                      lea rdx, [rbx + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004228	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400422b	     0xf86a2080000	                           jbe 0x4004ad3	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004231	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004233	     0xf899a080000	                           jns 0x4004ad3	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004239	         0xfb64b04	               movzx ecx, byte [rbx + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400423d	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004240	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004243	        0x48c1e215	                           shl rdx, 0x15	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004247	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400424a	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400424c	     0xf89b2080000	                           jns 0x4004b04	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004252	        0x488d5305	                      lea rdx, [rbx + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004256	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004259	     0xf86a5080000	                           jbe 0x4004b04	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400425f	         0xfb64b05	               movzx ecx, byte [rbx + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004263	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004266	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004269	        0x48c1e21c	                           shl rdx, 0x1c	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400426d	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004270	        0x488d5306	                      lea rdx, [rbx + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004274	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004277	     0xf86b8080000	                           jbe 0x4004b35	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400427d	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400427f	     0xf89b0080000	                           jns 0x4004b35	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004285	         0xfb64b06	               movzx ecx, byte [rbx + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004289	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400428c	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400428f	        0x48c1e223	                           shl rdx, 0x23	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004293	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004296	        0x488d5307	                      lea rdx, [rbx + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400429a	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400429d	     0xf86c3080000	                           jbe 0x4004b66	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042a3	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042a5	     0xf89bb080000	                           jns 0x4004b66	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042ab	         0xfb64b07	               movzx ecx, byte [rbx + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40042af	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40042b2	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40042b5	        0x48c1e22a	                           shl rdx, 0x2a	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40042b9	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40042bc	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042be	     0xf89d3080000	                           jns 0x4004b97	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042c4	        0x488d5308	                      lea rdx, [rbx + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40042c8	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042cb	     0xf86c6080000	                           jbe 0x4004b97	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042d1	         0xfb64b08	               movzx ecx, byte [rbx + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40042d5	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40042d8	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40042db	        0x48c1e231	                           shl rdx, 0x31	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40042df	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40042e2	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042e4	     0xf89c7080000	                           jns 0x4004bb1	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042ea	        0x488d5309	                      lea rdx, [rbx + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40042ee	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042f1	     0xf86ba080000	                           jbe 0x4004bb1	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40042f7	         0xfb64b09	               movzx ecx, byte [rbx + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40042fb	        0x4883c30a	                            add rbx, 0xa	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40042ff	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004302	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004305	        0x48c1e238	                           shl rdx, 0x38	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004309	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400430c	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400430f	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004312	     0xf86d1080000	                           jbe 0x4004be9	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004318	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400431a	     0xf89c9080000	                           jns 0x4004be9	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004320	      0xb80a000000	                            mov eax, 0xa	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004325	          0x4901c5	                            add r13, rax	      4955	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4004328	          0x4889ee	                            mov rsi, rbp	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x400432b	          0x4c29ee	                            sub rsi, r13	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x400432e	          0x4c89ef	                            mov rdi, r13	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x4004331	      0xe800000000	                          call 0x4004336	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x4004336	      0x498d5c0501	                lea rbx, [r13 + rax + 1]	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x400433b	      0xba05000000	                              mov edx, 5	      4958	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_11
0x4004340	      0xbe00000000	                              mov esi, 0	      4958	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_11
0x4004345	            0x31ff	                            xor edi, edi	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4004347	      0xe800000000	                          call 0x400434c	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x400434c	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_16
0x400434f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4004352	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4004355	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400435a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400435c	      0xe800000000	                          call 0x4004361	       104	stdio2.h	CALL_16
0x4004361	          0x4839dd	                            cmp rbp, rbx	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4004364	     0xf86bc040000	                           jbe 0x4004826	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x400436a	           0xfb603	                   movzx eax, byte [rbx]	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x400436d	        0x4c8d6b01	                      lea r13, [rbx + 1]	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004371	            0x3c03	                               cmp al, 3	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4004373	     0xf84a7010000	                            je 0x4004520	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4004379	     0xf8631feffff	                           jbe 0x40041b0	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x400437f	            0x3c04	                               cmp al, 4	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4004381	     0xf8459060000	                            je 0x40049e0	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4004387	            0x3cff	                            cmp al, 0xff	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4004389	     0xf85b1040000	                           jne 0x4004840	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x400438f	          0x4c39ed	                            cmp rbp, r13	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004392	     0xf869f060000	                           jbe 0x4004a37	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004398	         0xfb65301	               movzx edx, byte [rbx + 1]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400439c	        0x488d4b02	                      lea rcx, [rbx + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40043a0	          0x4189d4	                           mov r12d, edx	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40043a3	        0x4183e47f	                          and r12d, 0x7f	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40043a7	          0x4839cd	                            cmp rbp, rcx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043aa	        0x410fb6c4	                         movzx eax, r12b	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043ae	     0xf86a4060000	                           jbe 0x4004a58	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043b4	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043b6	     0xf899c060000	                           jns 0x4004a58	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043bc	         0xfb64b02	               movzx ecx, byte [rbx + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40043c0	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043c3	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043c6	        0x48c1e207	                              shl rdx, 7	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043ca	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043cd	        0x488d5303	                      lea rdx, [rbx + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40043d1	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043d4	     0xf86ae060000	                           jbe 0x4004a88	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043da	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043dc	     0xf89a6060000	                           jns 0x4004a88	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043e2	         0xfb64b03	               movzx ecx, byte [rbx + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40043e6	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043e9	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043ec	        0x48c1e20e	                            shl rdx, 0xe	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043f0	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40043f3	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043f5	     0xf89cb060000	                           jns 0x4004ac6	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40043fb	        0x488d5304	                      lea rdx, [rbx + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40043ff	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004402	     0xf86be060000	                           jbe 0x4004ac6	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004408	         0xfb64b04	               movzx ecx, byte [rbx + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400440c	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400440f	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004412	        0x48c1e215	                           shl rdx, 0x15	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004416	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004419	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400441b	     0xf89c9060000	                           jns 0x4004aea	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004421	        0x488d5305	                      lea rdx, [rbx + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004425	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004428	     0xf86bc060000	                           jbe 0x4004aea	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400442e	         0xfb64b05	               movzx ecx, byte [rbx + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004432	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004435	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004438	        0x48c1e21c	                           shl rdx, 0x1c	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400443c	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400443f	        0x488d5306	                      lea rdx, [rbx + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004443	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004446	     0xf86c5060000	                           jbe 0x4004b11	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400444c	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400444e	     0xf89bd060000	                           jns 0x4004b11	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004454	         0xfb64b06	               movzx ecx, byte [rbx + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004458	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400445b	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400445e	        0x48c1e223	                           shl rdx, 0x23	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004462	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004465	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004467	     0xf89ec060000	                           jns 0x4004b59	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400446d	        0x488d5307	                      lea rdx, [rbx + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004471	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004474	     0xf86df060000	                           jbe 0x4004b59	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400447a	         0xfb64b07	               movzx ecx, byte [rbx + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400447e	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004481	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004484	        0x48c1e22a	                           shl rdx, 0x2a	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004488	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400448b	        0x488d5308	                      lea rdx, [rbx + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400448f	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004492	     0xf86f2060000	                           jbe 0x4004b8a	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004498	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400449a	     0xf89ea060000	                           jns 0x4004b8a	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044a0	         0xfb64b08	               movzx ecx, byte [rbx + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40044a4	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044a7	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044aa	        0x48c1e231	                           shl rdx, 0x31	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044ae	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044b1	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044b3	     0xf890f070000	                           jns 0x4004bc8	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044b9	        0x488d5309	                      lea rdx, [rbx + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40044bd	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044c0	     0xf8602070000	                           jbe 0x4004bc8	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044c6	         0xfb64b09	               movzx ecx, byte [rbx + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40044ca	        0x4883c30a	                            add rbx, 0xa	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40044ce	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044d1	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044d4	        0x48c1e238	                           shl rdx, 0x38	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044d8	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044db	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044de	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044e1	     0xf86ee060000	                           jbe 0x4004bd5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044e7	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044e9	     0xf89e6060000	                           jns 0x4004bd5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40044ef	      0xb80a000000	                            mov eax, 0xa	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40044f4	          0x4901c5	                            add r13, rax	      4967	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40044f7	          0x4889ee	                            mov rsi, rbp	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x40044fa	          0x4c29ee	                            sub rsi, r13	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x40044fd	          0x4c89ef	                            mov rdi, r13	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x4004500	      0xe800000000	                          call 0x4004505	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x4004505	      0xba05000000	                              mov edx, 5	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x400450a	      0x498d5c0501	                lea rbx, [r13 + rax + 1]	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x400450f	      0xbe00000000	                              mov esi, 0	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4004514	      0xe92cfeffff	                           jmp 0x4004345	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4004519	     0xf1f80000000	                         nop dword [rax]	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4004520	          0x4c39ed	                            cmp rbp, r13	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004523	     0xf86ef040000	                           jbe 0x4004a18	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004529	         0xfb64301	               movzx eax, byte [rbx + 1]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400452d	          0x4989c4	                            mov r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004530	        0x4183e47f	                          and r12d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004534	            0x84c0	                             test al, al	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004536	     0xf892a050000	                           jns 0x4004a66	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400453c	        0x488d4302	                      lea rax, [rbx + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004540	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004543	     0xf861d050000	                           jbe 0x4004a66	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004549	         0xfb65302	               movzx edx, byte [rbx + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400454d	          0x4889d0	                            mov rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004550	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004553	        0x48c1e007	                              shl rax, 7	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004557	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400455a	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400455c	     0xf891c050000	                           jns 0x4004a7e	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004562	        0x488d4303	                      lea rax, [rbx + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004566	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004569	     0xf860f050000	                           jbe 0x4004a7e	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400456f	         0xfb65303	               movzx edx, byte [rbx + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004573	          0x4889d0	                            mov rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004576	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004579	        0x48c1e00e	                            shl rax, 0xe	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400457d	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004580	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004582	     0xf8934050000	                           jns 0x4004abc	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004588	        0x488d4304	                      lea rax, [rbx + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400458c	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400458f	     0xf8627050000	                           jbe 0x4004abc	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004595	         0xfb65304	               movzx edx, byte [rbx + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004599	          0x4889d0	                            mov rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400459c	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400459f	        0x48c1e015	                           shl rax, 0x15	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045a3	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045a6	        0x488d4305	                      lea rax, [rbx + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40045aa	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045ad	     0xf862d050000	                           jbe 0x4004ae0	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045b3	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045b5	     0xf8925050000	                           jns 0x4004ae0	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045bb	         0xfb65305	               movzx edx, byte [rbx + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40045bf	          0x4889d0	                            mov rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045c2	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045c5	        0x48c1e01c	                           shl rax, 0x1c	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045c9	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045cc	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045ce	     0xf894a050000	                           jns 0x4004b1e	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045d4	        0x488d4306	                      lea rax, [rbx + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40045d8	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045db	     0xf863d050000	                           jbe 0x4004b1e	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045e1	         0xfb65306	               movzx edx, byte [rbx + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40045e5	          0x4889d0	                            mov rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045e8	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045eb	        0x48c1e023	                           shl rax, 0x23	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045ef	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40045f2	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045f4	     0xf8948050000	                           jns 0x4004b42	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40045fa	        0x488d4307	                      lea rax, [rbx + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40045fe	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004601	     0xf863b050000	                           jbe 0x4004b42	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004607	         0xfb65307	               movzx edx, byte [rbx + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400460b	          0x4889d0	                            mov rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400460e	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004611	        0x48c1e02a	                           shl rax, 0x2a	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004615	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004618	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400461a	     0xf8960050000	                           jns 0x4004b80	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004620	        0x488d4308	                      lea rax, [rbx + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004624	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004627	     0xf8653050000	                           jbe 0x4004b80	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400462d	         0xfb65308	               movzx edx, byte [rbx + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004631	          0x4889d0	                            mov rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004634	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004637	        0x48c1e031	                           shl rax, 0x31	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400463b	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400463e	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004640	     0xf8978050000	                           jns 0x4004bbe	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004646	        0x488d4309	                      lea rax, [rbx + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400464a	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400464d	     0xf866b050000	                           jbe 0x4004bbe	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004653	         0xfb65309	               movzx edx, byte [rbx + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004657	          0x4889d0	                            mov rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400465a	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400465d	        0x48c1e038	                           shl rax, 0x38	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004661	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004664	        0x488d430a	                    lea rax, [rbx + 0xa]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004668	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400466b	     0xf8682050000	                           jbe 0x4004bf3	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004671	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004673	     0xf897a050000	                           jns 0x4004bf3	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004679	         0xfb6430a	            movzx eax, byte [rbx + 0xa] 	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400467d	        0x48c1e03f	                           shl rax, 0x3f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004681	          0x4909c4	                             or r12, rax	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004684	      0xb80a000000	                            mov eax, 0xa	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004689	          0x4c01e8	                            add rax, r13	      4931	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x400468c	          0x4839c5	                            cmp rbp, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400468f	     0xf8668050000	                           jbe 0x4004bfd	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004695	           0xfb608	                   movzx ecx, byte [rax]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004698	        0x488d5801	                      lea rbx, [rax + 1]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400469c	          0x4189cd	                           mov r13d, ecx	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400469f	        0x4183e57f	                          and r13d, 0x7f	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40046a3	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046a5	        0x410fb6d5	                         movzx edx, r13b	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046a9	     0xf89a0030000	                           jns 0x4004a4f	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046af	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046b2	     0xf8697030000	                           jbe 0x4004a4f	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046b8	         0xfb67001	               movzx esi, byte [rax + 1]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40046bc	        0x488d5802	                      lea rbx, [rax + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40046c0	          0x4889f1	                            mov rcx, rsi	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046c3	          0x83e17f	                           and ecx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046c6	        0x48c1e107	                              shl rcx, 7	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046ca	          0x4809ca	                             or rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046cd	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046d0	     0xf863a030000	                           jbe 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046d6	          0x4084f6	                           test sil, sil	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046d9	     0xf8931030000	                           jns 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046df	         0xfb64802	               movzx ecx, byte [rax + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40046e3	        0x488d5803	                      lea rbx, [rax + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40046e7	          0x4989cd	                            mov r13, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046ea	        0x4183e57f	                          and r13d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046ee	        0x49c1e50e	                            shl r13, 0xe	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046f2	          0x4c09ea	                             or rdx, r13	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40046f5	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046f7	     0xf8913030000	                           jns 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40046fd	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004700	     0xf860a030000	                           jbe 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004706	         0xfb64803	               movzx ecx, byte [rax + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400470a	        0x488d5804	                      lea rbx, [rax + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400470e	          0x4989cd	                            mov r13, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004711	        0x4183e57f	                          and r13d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004715	        0x49c1e515	                           shl r13, 0x15	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004719	          0x4c09ea	                             or rdx, r13	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400471c	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400471e	     0xf89ec020000	                           jns 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004724	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004727	     0xf86e3020000	                           jbe 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400472d	         0xfb64804	               movzx ecx, byte [rax + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004731	        0x488d5805	                      lea rbx, [rax + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004735	          0x4989cd	                            mov r13, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004738	        0x4183e57f	                          and r13d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400473c	        0x49c1e51c	                           shl r13, 0x1c	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004740	          0x4c09ea	                             or rdx, r13	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004743	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004746	     0xf86c4020000	                           jbe 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400474c	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400474e	     0xf89bc020000	                           jns 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004754	         0xfb64805	               movzx ecx, byte [rax + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004758	        0x488d5806	                      lea rbx, [rax + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400475c	          0x4989cd	                            mov r13, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400475f	        0x4183e57f	                          and r13d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004763	        0x49c1e523	                           shl r13, 0x23	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004767	          0x4c09ea	                             or rdx, r13	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400476a	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400476d	     0xf869d020000	                           jbe 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004773	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004775	     0xf8995020000	                           jns 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400477b	         0xfb64806	               movzx ecx, byte [rax + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400477f	        0x488d5807	                      lea rbx, [rax + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004783	          0x4989cd	                            mov r13, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004786	        0x4183e57f	                          and r13d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400478a	        0x49c1e52a	                           shl r13, 0x2a	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400478e	          0x4c09ea	                             or rdx, r13	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004791	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004794	     0xf8676020000	                           jbe 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400479a	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400479c	     0xf896e020000	                           jns 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047a2	         0xfb64807	               movzx ecx, byte [rax + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40047a6	        0x488d5808	                      lea rbx, [rax + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40047aa	          0x4989cd	                            mov r13, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047ad	        0x4183e57f	                          and r13d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047b1	        0x49c1e531	                           shl r13, 0x31	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047b5	          0x4c09ea	                             or rdx, r13	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047b8	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047bb	     0xf864f020000	                           jbe 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047c1	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047c3	     0xf8947020000	                           jns 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047c9	         0xfb64808	               movzx ecx, byte [rax + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40047cd	        0x488d5809	                      lea rbx, [rax + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40047d1	          0x4989cd	                            mov r13, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047d4	        0x4183e57f	                          and r13d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047d8	        0x49c1e538	                           shl r13, 0x38	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047dc	          0x4c09ea	                             or rdx, r13	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047df	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047e1	     0xf8929020000	                           jns 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047e7	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047ea	     0xf8620020000	                           jbe 0x4004a10	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40047f0	        0x488d580a	                    lea rbx, [rax + 0xa]	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047f4	          0x4189d5	                           mov r13d, edx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40047f7	            0x31ff	                            xor edi, edi	      4935	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_4
0x40047f9	      0xba05000000	                              mov edx, 5	      4935	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_4
0x40047fe	      0xbe00000000	                              mov esi, 0	      4935	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_4
0x4004803	      0xe800000000	                          call 0x4004808	      4935	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_4
0x4004808	          0x4489e9	                           mov ecx, r13d	       104	stdio2.h	CALL_16
0x400480b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400480e	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4004811	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4004813	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4004818	      0xe800000000	                          call 0x400481d	       104	stdio2.h	CALL_16
0x400481d	          0x4839dd	                            cmp rbp, rbx	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4004820	     0xf8744fbffff	                            ja 0x400436a	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4004826	        0x4883c408	                              add rsp, 8	      4978	dwarf.c	FUNCTION_46
0x400482a	      0xb801000000	                              mov eax, 1	      4978	dwarf.c	FUNCTION_46
0x400482f	              0x5b	                                 pop rbx	      4978	dwarf.c	FUNCTION_46
0x4004830	              0x5d	                                 pop rbp	      4978	dwarf.c	FUNCTION_46
0x4004831	            0x415c	                                 pop r12	      4978	dwarf.c	FUNCTION_46
0x4004833	            0x415d	                                 pop r13	      4978	dwarf.c	FUNCTION_46
0x4004835	              0xc3	                                     ret	      4978	dwarf.c	FUNCTION_46
0x4004836	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4978	dwarf.c	FUNCTION_46
0x4004840	          0x4c89eb	                            mov rbx, r13	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004843	      0xe919fbffff	                           jmp 0x4004361	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004848	     0xf1f84000000	                   nop dword [rax + rax]	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004850	          0x4c39ed	                            cmp rbp, r13	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004853	     0xf86cd010000	                           jbe 0x4004a26	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004859	         0xfb65301	               movzx edx, byte [rbx + 1]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400485d	        0x488d4b02	                      lea rcx, [rbx + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004861	          0x4189d4	                           mov r12d, edx	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004864	        0x4183e47f	                          and r12d, 0x7f	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004868	          0x4839cd	                            cmp rbp, rcx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400486b	        0x410fb6c4	                         movzx eax, r12b	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400486f	     0xf86fb010000	                           jbe 0x4004a70	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004875	            0x84d2	                             test dl, dl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004877	     0xf89f3010000	                           jns 0x4004a70	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400487d	         0xfb64b02	               movzx ecx, byte [rbx + 2]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004881	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004884	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004887	        0x48c1e207	                              shl rdx, 7	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400488b	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400488e	        0x488d5303	                      lea rdx, [rbx + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004892	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004895	     0xf8607020000	                           jbe 0x4004aa2	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400489b	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400489d	     0xf89ff010000	                           jns 0x4004aa2	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048a3	         0xfb64b03	               movzx ecx, byte [rbx + 3]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40048a7	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048aa	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048ad	        0x48c1e20e	                            shl rdx, 0xe	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048b1	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048b4	        0x488d5304	                      lea rdx, [rbx + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40048b8	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048bb	     0xf86ee010000	                           jbe 0x4004aaf	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048c1	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048c3	     0xf89e6010000	                           jns 0x4004aaf	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048c9	         0xfb64b04	               movzx ecx, byte [rbx + 4]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40048cd	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048d0	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048d3	        0x48c1e215	                           shl rdx, 0x15	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048d7	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048da	        0x488d5305	                      lea rdx, [rbx + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40048de	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048e1	     0xf8610020000	                           jbe 0x4004af7	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048e7	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048e9	     0xf8908020000	                           jns 0x4004af7	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40048ef	         0xfb64b05	               movzx ecx, byte [rbx + 5]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40048f3	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048f6	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048f9	        0x48c1e21c	                           shl rdx, 0x1c	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40048fd	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004900	        0x488d5306	                      lea rdx, [rbx + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004904	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004907	     0xf861b020000	                           jbe 0x4004b28	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400490d	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400490f	     0xf8913020000	                           jns 0x4004b28	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004915	         0xfb64b06	               movzx ecx, byte [rbx + 6]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004919	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400491c	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400491f	        0x48c1e223	                           shl rdx, 0x23	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004923	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004926	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004928	     0xf891e020000	                           jns 0x4004b4c	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400492e	        0x488d5307	                      lea rdx, [rbx + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004932	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004935	     0xf8611020000	                           jbe 0x4004b4c	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400493b	         0xfb64b07	               movzx ecx, byte [rbx + 7]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400493f	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004942	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004945	        0x48c1e22a	                           shl rdx, 0x2a	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004949	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400494c	        0x488d5308	                      lea rdx, [rbx + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004950	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004953	     0xf861a020000	                           jbe 0x4004b73	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004959	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400495b	     0xf8912020000	                           jns 0x4004b73	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004961	         0xfb64b08	               movzx ecx, byte [rbx + 8]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004965	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004968	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400496b	        0x48c1e231	                           shl rdx, 0x31	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400496f	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004972	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004974	     0xf892a020000	                           jns 0x4004ba4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400497a	        0x488d5309	                      lea rdx, [rbx + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400497e	          0x4839d5	                            cmp rbp, rdx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004981	     0xf861d020000	                           jbe 0x4004ba4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004987	         0xfb64b09	               movzx ecx, byte [rbx + 9]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x400498b	          0x4889ca	                            mov rdx, rcx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400498e	          0x83e27f	                           and edx, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004991	        0x48c1e238	                           shl rdx, 0x38	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004995	          0x4809d0	                             or rax, rdx	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004998	            0x84c9	                             test cl, cl	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400499a	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400499d	     0xf893c020000	                           jns 0x4004bdf	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40049a3	        0x4883c30a	                            add rbx, 0xa	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40049a7	          0x4839dd	                            cmp rbp, rbx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40049aa	     0xf862f020000	                           jbe 0x4004bdf	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40049b0	      0xb80a000000	                            mov eax, 0xa	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40049b5	          0x4901c5	                            add r13, rax	      4946	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40049b8	          0x4889ee	                            mov rsi, rbp	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x40049bb	          0x4c29ee	                            sub rsi, r13	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x40049be	          0x4c89ef	                            mov rdi, r13	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x40049c1	      0xe800000000	                          call 0x40049c6	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x40049c6	      0xba05000000	                              mov edx, 5	      4949	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_8
0x40049cb	      0x498d5c0501	                lea rbx, [r13 + rax + 1]	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x40049d0	      0xbe00000000	                              mov esi, 0	      4949	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_8
0x40049d5	      0xe96bf9ffff	                           jmp 0x4004345	      4949	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_8
0x40049da	    0x660f1f440000	                    nop word [rax + rax]	      4949	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_8
0x40049e0	      0xba05000000	                              mov edx, 5	      4941	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_5
0x40049e5	      0xbe00000000	                              mov esi, 0	      4941	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_5
0x40049ea	            0x31ff	                            xor edi, edi	      4941	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_5
0x40049ec	      0xe800000000	                          call 0x40049f1	      4941	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_5
0x40049f1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40049f6	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40049f9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40049fb	      0xe800000000	                          call 0x4004a00	       104	stdio2.h	CALL_16
0x4004a00	          0x4c89eb	                            mov rbx, r13	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004a03	      0xe959f9ffff	                           jmp 0x4004361	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004a08	     0xf1f84000000	                   nop dword [rax + rax]	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004a10	          0x4189d5	                           mov r13d, edx	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004a13	      0xe9dffdffff	                           jmp 0x40047f7	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x4004a18	          0x4c89eb	                            mov rbx, r13	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a1b	          0x4531e4	                          xor r12d, r12d	      4930	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_2
0x4004a1e	          0x4531ed	                          xor r13d, r13d	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a21	      0xe9d1fdffff	                           jmp 0x40047f7	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a26	            0x31c0	                            xor eax, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a28	          0x4531e4	                          xor r12d, r12d	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a2b	            0xeb88	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a2d	            0x31c0	                            xor eax, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a2f	          0x4531e4	                          xor r12d, r12d	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a32	      0xe9eef8ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a37	            0x31c0	                            xor eax, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a39	          0x4531e4	                          xor r12d, r12d	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a3c	      0xe9b3faffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a41	        0x450fb6e4	                        movzx r12d, r12b	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a45	      0xb801000000	                              mov eax, 1	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a4a	      0xe9d6f8ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a4f	        0x450fb6ed	                        movzx r13d, r13b	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a53	      0xe99ffdffff	                           jmp 0x40047f7	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a58	        0x450fb6e4	                        movzx r12d, r12b	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a5c	      0xb801000000	                              mov eax, 1	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a61	      0xe98efaffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a66	      0xb801000000	                              mov eax, 1	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a6b	      0xe919fcffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a70	        0x450fb6e4	                        movzx r12d, r12b	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a74	      0xb801000000	                              mov eax, 1	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a79	      0xe937ffffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a7e	      0xb802000000	                              mov eax, 2	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a83	      0xe901fcffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a88	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a8b	      0xb802000000	                              mov eax, 2	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a90	      0xe95ffaffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a95	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a98	      0xb802000000	                              mov eax, 2	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004a9d	      0xe983f8ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004aa2	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004aa5	      0xb802000000	                              mov eax, 2	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004aaa	      0xe906ffffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004aaf	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ab2	      0xb803000000	                              mov eax, 3	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ab7	      0xe9f9feffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004abc	      0xb803000000	                              mov eax, 3	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ac1	      0xe9c3fbffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ac6	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ac9	      0xb803000000	                              mov eax, 3	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ace	      0xe921faffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ad3	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ad6	      0xb803000000	                              mov eax, 3	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004adb	      0xe945f8ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ae0	      0xb804000000	                              mov eax, 4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ae5	      0xe99ffbffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004aea	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004aed	      0xb804000000	                              mov eax, 4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004af2	      0xe9fdf9ffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004af7	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004afa	      0xb804000000	                              mov eax, 4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004aff	      0xe9b1feffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b04	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b07	      0xb804000000	                              mov eax, 4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b0c	      0xe914f8ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b11	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b14	      0xb805000000	                              mov eax, 5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b19	      0xe9d6f9ffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b1e	      0xb805000000	                              mov eax, 5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b23	      0xe961fbffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b28	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b2b	      0xb805000000	                              mov eax, 5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b30	      0xe980feffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b35	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b38	      0xb805000000	                              mov eax, 5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b3d	      0xe9e3f7ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b42	      0xb806000000	                              mov eax, 6	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b47	      0xe93dfbffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b4c	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b4f	      0xb806000000	                              mov eax, 6	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b54	      0xe95cfeffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b59	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b5c	      0xb806000000	                              mov eax, 6	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b61	      0xe98ef9ffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b66	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b69	      0xb806000000	                              mov eax, 6	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b6e	      0xe9b2f7ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b73	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b76	      0xb807000000	                              mov eax, 7	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b7b	      0xe935feffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b80	      0xb807000000	                              mov eax, 7	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b85	      0xe9fffaffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b8a	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b8d	      0xb807000000	                              mov eax, 7	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b92	      0xe95df9ffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b97	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b9a	      0xb807000000	                              mov eax, 7	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004b9f	      0xe981f7ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ba4	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004ba7	      0xb808000000	                              mov eax, 8	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bac	      0xe904feffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bb1	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bb4	      0xb808000000	                              mov eax, 8	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bb9	      0xe967f7ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bbe	      0xb808000000	                              mov eax, 8	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bc3	      0xe9c1faffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bc8	          0x4189c4	                           mov r12d, eax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bcb	      0xb808000000	                              mov eax, 8	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bd0	      0xe91ff9ffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bd5	      0xb809000000	                              mov eax, 9	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bda	      0xe915f9ffff	                           jmp 0x40044f4	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bdf	      0xb809000000	                              mov eax, 9	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004be4	      0xe9ccfdffff	                           jmp 0x40049b5	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004be9	      0xb809000000	                              mov eax, 9	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bee	      0xe932f7ffff	                           jmp 0x4004325	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bf3	      0xb809000000	                              mov eax, 9	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bf8	      0xe98cfaffff	                           jmp 0x4004689	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004bfd	          0x4889c3	                            mov rbx, rax	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004c00	          0x4531ed	                          xor r13d, r13d	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004c03	      0xe9effbffff	                           jmp 0x40047f7	       316	dwarf.c	FUNCTION_8	WHILE_1
display_cu_index	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:CALL,1:functions,0	2
0x4003a90	      0xbe01000000	                              mov esi, 1	      9472	dwarf.c	FUNCTION_94	CALL_1
0x4003a95	      0xe936eeffff	             jmp sym.process_cu_tu_index	      9472	dwarf.c	FUNCTION_94	CALL_1
find_cu_tu_set	ELSE,0:WHILE,1:FOR,1:SWITCH,0:DO,0:IF,3:CALL,1:functions,0	86
0x40270d0	              0x55	                                push rbp	      9446	dwarf.c	FUNCTION_93
0x40270d1	              0x53	                                push rbx	      9446	dwarf.c	FUNCTION_93
0x40270d2	            0x89f3	                            mov ebx, esi	      9446	dwarf.c	FUNCTION_93
0x40270d4	        0x4883ec08	                              sub rsp, 8	      9446	dwarf.c	FUNCTION_93
0x40270d8	    0x8b0500000000	            mov eax, dword [0x040270de] 	      9426	dwarf.c	FUNCTION_92	IF_1
0x40270de	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      9426	dwarf.c	FUNCTION_92	IF_1
0x40270e1	     0xf8489000000	                            je 0x4027170	      9426	dwarf.c	FUNCTION_92	IF_1
0x40270e7	            0x85c0	                           test eax, eax	      9449	dwarf.c	FUNCTION_93	IF_1	CALL_1
0x40270e9	            0x743a	                            je 0x4027125	      9449	dwarf.c	FUNCTION_93	IF_1	CALL_1
0x40270eb	    0x8b3d00000000	            mov edi, dword [0x040270f1] 	      9453	dwarf.c	FUNCTION_93	FOR_1
0x40270f1	            0x85ff	                           test edi, edi	      9453	dwarf.c	FUNCTION_93	FOR_1
0x40270f3	            0x7430	                            je 0x4027125	      9453	dwarf.c	FUNCTION_93	FOR_1
0x40270f5	    0x488b05000000	            mov rax, qword [0x040270fc] 	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x40270fc	            0x31d2	                            xor edx, edx	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x40270fe	            0x3b18	                    cmp ebx, dword [rax]	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4027100	        0x488d4804	                      lea rcx, [rax + 4]	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4027104	            0x7518	                           jne 0x402711e	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4027106	            0xeb1f	                           jmp 0x4027127	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4027108	     0xf1f84000000	                   nop dword [rax + rax]	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4027110	          0x4989c8	                             mov r8, rcx	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4027113	        0x4883c104	                              add rcx, 4	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4027117	          0x3959fc	                cmp dword [rcx - 4], ebx	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x402711a	            0x7414	                            je 0x4027130	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x402711c	            0x89f2	                            mov edx, esi	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x402711e	          0x8d7201	                      lea esi, [rdx + 1]	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4027121	            0x39fe	                            cmp esi, edi	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4027123	            0x75eb	                           jne 0x4027110	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4027125	            0x31c0	                            xor eax, eax	      9450	dwarf.c	FUNCTION_93	IF_1
0x4027127	        0x4883c408	                              add rsp, 8	      9465	dwarf.c	FUNCTION_93
0x402712b	              0x5b	                                 pop rbx	      9465	dwarf.c	FUNCTION_93
0x402712c	              0x5d	                                 pop rbp	      9465	dwarf.c	FUNCTION_93
0x402712d	              0xc3	                                     ret	      9465	dwarf.c	FUNCTION_93
0x402712e	            0x6690	                                     nop	      9465	dwarf.c	FUNCTION_93
0x4027130	            0x85f6	                           test esi, esi	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027132	            0x74f3	                            je 0x4027127	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027134	            0x89d1	                            mov ecx, edx	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027136	          0x8b3c88	            mov edi, dword [rax + rcx*4]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027139	            0x85ff	                           test edi, edi	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x402713b	            0x750d	                           jne 0x402714a	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x402713d	      0xe9a5000000	                           jmp 0x40271e7	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027142	    0x660f1f440000	                    nop word [rax + rax]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027148	            0x89ca	                            mov edx, ecx	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x402714a	            0x85d2	                           test edx, edx	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x402714c	            0x74d9	                            je 0x4027127	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x402714e	          0x8d72ff	                      lea esi, [rdx - 1]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027151	          0x4889f1	                            mov rcx, rsi	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027154	          0x8b34b0	            mov esi, dword [rax + rsi*4]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027157	            0x85f6	                           test esi, esi	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4027159	            0x75ed	                           jne 0x4027148	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x402715b	        0x4883c408	                              add rsp, 8	      9465	dwarf.c	FUNCTION_93
0x402715f	        0x488d0490	                  lea rax, [rax + rdx*4]	      9465	dwarf.c	FUNCTION_93
0x4027163	              0x5b	                                 pop rbx	      9465	dwarf.c	FUNCTION_93
0x4027164	              0x5d	                                 pop rbp	      9465	dwarf.c	FUNCTION_93
0x4027165	              0xc3	                                     ret	      9465	dwarf.c	FUNCTION_93
0x4027166	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9465	dwarf.c	FUNCTION_93
0x4027170	          0x4889fe	                            mov rsi, rdi	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x4027173	          0x4889fd	                            mov rbp, rdi	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x4027176	      0xbf26000000	                           mov edi, 0x26	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x402717b	    0xc70500000000	               mov dword [0x04027185], 1	      9428	dwarf.c	FUNCTION_92	IF_1
0x4027185	      0xe8969ffdff	 call sym.load_debug_section_with_follow	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x402718a	            0x85c0	                           test eax, eax	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x402718c	            0x753d	                           jne 0x40271cb	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x402718e	          0x4889ee	                            mov rsi, rbp	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x4027191	      0xbf27000000	                           mov edi, 0x27	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x4027196	      0xe8859ffdff	 call sym.load_debug_section_with_follow	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x402719b	            0x85c0	                           test eax, eax	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x402719d	            0x750b	                           jne 0x40271aa	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x402719f	    0x8b0500000000	            mov eax, dword [0x040271a5] 	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x40271a5	      0xe93dffffff	                           jmp 0x40270e7	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x40271aa	            0x31f6	                            xor esi, esi	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x40271ac	      0xbf00000000	                              mov edi, 0	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x40271b1	      0xe81ab7fdff	            call sym.process_cu_tu_index	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x40271b6	            0x85c0	                           test eax, eax	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x40271b8	            0x75e5	                           jne 0x402719f	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x40271ba	    0xc70500000000	               mov dword [0x040271c4], 0	      9436	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5
0x40271c4	            0x31c0	                            xor eax, eax	      9450	dwarf.c	FUNCTION_93	IF_1
0x40271c6	      0xe95cffffff	                           jmp 0x4027127	      9450	dwarf.c	FUNCTION_93	IF_1
0x40271cb	            0x31f6	                            xor esi, esi	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40271cd	      0xbf00000000	                              mov edi, 0	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40271d2	      0xe8f9b6fdff	            call sym.process_cu_tu_index	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40271d7	            0x85c0	                           test eax, eax	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40271d9	            0x75b3	                           jne 0x402718e	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40271db	    0xc70500000000	               mov dword [0x040271e5], 0	      9432	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3
0x40271e5	            0xeba7	                           jmp 0x402718e	      9432	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3
0x40271e7	          0x4c89c0	                             mov rax, r8	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x40271ea	      0xe938ffffff	                           jmp 0x4027127	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
dwarf_select_sections_by_letters	ELSE,0:WHILE,1:FOR,0:SWITCH,1:DO,0:IF,0:CALL,2:functions,0	94
0x40278e0	              0x55	                                push rbp	     10122	dwarf.c	FUNCTION_110
0x40278e1	              0x53	                                push rbx	     10122	dwarf.c	FUNCTION_110
0x40278e2	          0x4889fd	                            mov rbp, rdi	     10122	dwarf.c	FUNCTION_110
0x40278e5	            0x31db	                            xor ebx, ebx	     10123	dwarf.c	FUNCTION_110
0x40278e7	        0x4883ec08	                              sub rsp, 8	     10122	dwarf.c	FUNCTION_110
0x40278eb	       0xf1f440000	                   nop dword [rax + rax]	     10122	dwarf.c	FUNCTION_110
0x40278f0	            0x89d8	                            mov eax, ebx	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x40278f2	       0xfb6440500	             movzx eax, byte [rbp + rax]	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x40278f7	            0x84c0	                             test al, al	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x40278f9	            0x743c	                            je 0x4027937	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x40278fb	          0x83e841	                           sub eax, 0x41	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40278fe	          0x83c301	                              add ebx, 1	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027901	            0x3c34	                            cmp al, 0x34	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027903	     0xf8767010000	                            ja 0x4027a70	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027909	           0xfb6c0	                           movzx eax, al	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402790c	    0xff24c5000000	                       jmp qword [rax*8]	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027913	       0xf1f440000	                   nop dword [rax + rax]	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027918	    0xc70500000000	               mov dword [0x04027922], 1	     10131	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027922	            0x89d8	                            mov eax, ebx	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x4027924	    0xc70500000000	               mov dword [0x0402792e], 1	     10132	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402792e	       0xfb6440500	             movzx eax, byte [rbp + rax]	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x4027933	            0x84c0	                             test al, al	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x4027935	            0x75c4	                           jne 0x40278fb	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x4027937	        0x4883c408	                              add rsp, 8	     10154	dwarf.c	FUNCTION_110
0x402793b	              0x5b	                                 pop rbx	     10154	dwarf.c	FUNCTION_110
0x402793c	              0x5d	                                 pop rbp	     10154	dwarf.c	FUNCTION_110
0x402793d	              0xc3	                                     ret	     10154	dwarf.c	FUNCTION_110
0x402793e	            0x6690	                                     nop	     10154	dwarf.c	FUNCTION_110
0x4027940	    0xc70500000000	               mov dword [0x0402794a], 1	     10148	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402794a	            0xeba4	                           jmp 0x40278f0	     10148	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402794c	         0xf1f4000	                         nop dword [rax]	     10148	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027950	    0xc70500000000	               mov dword [0x0402795a], 1	     10146	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402795a	            0xeb94	                           jmp 0x40278f0	     10146	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402795c	         0xf1f4000	                         nop dword [rax]	     10146	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027960	    0xc70500000000	               mov dword [0x0402796a], 1	     10144	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402796a	            0xeb84	                           jmp 0x40278f0	     10144	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402796c	         0xf1f4000	                         nop dword [rax]	     10144	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027970	    0xc70500000000	               mov dword [0x0402797a], 1	     10143	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402797a	      0xe971ffffff	                           jmp 0x40278f0	     10143	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402797f	              0x90	                                     nop	     10143	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027980	    0xc70500000000	               mov dword [0x0402798a], 1	     10141	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402798a	      0xe961ffffff	                           jmp 0x40278f0	     10141	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402798f	              0x90	                                     nop	     10141	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027990	    0xc70500000000	               mov dword [0x0402799a], 1	     10140	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402799a	      0xe951ffffff	                           jmp 0x40278f0	     10140	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x402799f	              0x90	                                     nop	     10140	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279a0	    0xc70500000000	               mov dword [0x040279aa], 1	     10139	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279aa	      0xe941ffffff	                           jmp 0x40278f0	     10139	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279af	              0x90	                                     nop	     10139	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279b0	    0x830d00000000	                or dword [0x040279b7], 1	     10137	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279b7	      0xe934ffffff	                           jmp 0x40278f0	     10137	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279bc	         0xf1f4000	                         nop dword [rax]	     10137	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279c0	    0xc70500000000	               mov dword [0x040279ca], 1	     10136	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279ca	      0xe921ffffff	                           jmp 0x40278f0	     10136	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279cf	              0x90	                                     nop	     10136	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279d0	    0xc70500000000	               mov dword [0x040279da], 1	     10134	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279da	      0xe911ffffff	                           jmp 0x40278f0	     10134	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279df	              0x90	                                     nop	     10134	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279e0	    0xc70500000000	               mov dword [0x040279ea], 1	     10133	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279ea	      0xe901ffffff	                           jmp 0x40278f0	     10133	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279ef	              0x90	                                     nop	     10133	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279f0	    0xc70500000000	               mov dword [0x040279fa], 1	     10130	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279fa	      0xe9f1feffff	                           jmp 0x40278f0	     10130	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40279ff	              0x90	                                     nop	     10130	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a00	    0xc70500000000	               mov dword [0x04027a0a], 1	     10129	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a0a	      0xe9e1feffff	                           jmp 0x40278f0	     10129	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a0f	              0x90	                                     nop	     10129	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a10	    0xc70500000000	               mov dword [0x04027a1a], 1	     10147	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a1a	      0xe9d1feffff	                           jmp 0x40278f0	     10147	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a1f	              0x90	                                     nop	     10147	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a20	    0xc70500000000	               mov dword [0x04027a2a], 1	     10145	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a2a	      0xe9c1feffff	                           jmp 0x40278f0	     10145	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a2f	              0x90	                                     nop	     10145	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a30	    0xc70500000000	               mov dword [0x04027a3a], 1	     10142	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a3a	      0xe9b1feffff	                           jmp 0x40278f0	     10142	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a3f	              0x90	                                     nop	     10142	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a40	    0x830d00000000	                or dword [0x04027a47], 2	     10138	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a47	      0xe9a4feffff	                           jmp 0x40278f0	     10138	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a4c	         0xf1f4000	                         nop dword [rax]	     10138	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a50	    0xc70500000000	               mov dword [0x04027a5a], 1	     10135	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a5a	      0xe991feffff	                           jmp 0x40278f0	     10135	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a5f	              0x90	                                     nop	     10135	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a60	    0xc70500000000	               mov dword [0x04027a6a], 1	     10128	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a6a	      0xe981feffff	                           jmp 0x40278f0	     10128	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a6f	              0x90	                                     nop	     10128	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4027a70	            0x31ff	                            xor edi, edi	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4027a72	      0xba05000000	                              mov edx, 5	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4027a77	      0xbe00000000	                              mov esi, 0	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4027a7c	      0xe800000000	                          call 0x4027a81	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4027a81	          0x4889ee	                            mov rsi, rbp	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4027a84	          0x4889c7	                            mov rdi, rax	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4027a87	            0x31c0	                            xor eax, eax	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4027a89	      0xe800000000	                          call 0x4027a8e	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4027a8e	      0xe95dfeffff	                           jmp 0x40278f0	     10152	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
comp_addr_base	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:CALL,0:functions,0	3
0x4000090	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      6435	dwarf.c	FUNCTION_63
0x4000094	          0x2b4620	             sub eax, dword [rsi + 0x20]	      6435	dwarf.c	FUNCTION_63
0x4000097	              0xc3	                                     ret	      6436	dwarf.c	FUNCTION_63
display_debug_macro	ELSE,4:WHILE,2:FOR,3:SWITCH,2:DO,0:IF,13:CALL,52:functions,0	1099
0x4014560	            0x4157	                                push r15	      5080	dwarf.c	FUNCTION_48
0x4014562	            0x4156	                                push r14	      5080	dwarf.c	FUNCTION_48
0x4014564	            0x4155	                                push r13	      5080	dwarf.c	FUNCTION_48
0x4014566	            0x4154	                                push r12	      5080	dwarf.c	FUNCTION_48
0x4014568	              0x55	                                push rbp	      5080	dwarf.c	FUNCTION_48
0x4014569	              0x53	                                push rbx	      5080	dwarf.c	FUNCTION_48
0x401456a	          0x4889fd	                            mov rbp, rdi	      5080	dwarf.c	FUNCTION_48
0x401456d	          0x4889f3	                            mov rbx, rsi	      5080	dwarf.c	FUNCTION_48
0x4014570	    0x4881ec880800	                          sub rsp, 0x888	      5080	dwarf.c	FUNCTION_48
0x4014577	        0x4c8b7720	            mov r14, qword [rdi + 0x20] 	      5081	dwarf.c	FUNCTION_48
0x401457b	      0x48897c2450	             mov qword [rsp + 0x50], rdi	      5080	dwarf.c	FUNCTION_48
0x4014580	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      5080	dwarf.c	FUNCTION_48
0x4014589	    0x48898c247808	            mov qword [rsp + 0x878], rcx	      5080	dwarf.c	FUNCTION_48
0x4014591	            0x31c9	                            xor ecx, ecx	      5080	dwarf.c	FUNCTION_48
0x4014593	          0x4d89f7	                            mov r15, r14	      5082	dwarf.c	FUNCTION_48
0x4014596	        0x4c037f30	             add r15, qword [rdi + 0x30]	      5082	dwarf.c	FUNCTION_48
0x401459a	      0xbf0a000000	                            mov edi, 0xa	      5087	dwarf.c	FUNCTION_48	CALL_1
0x401459f	      0xe87ccbfeff	 call sym.load_debug_section_with_follow	      5087	dwarf.c	FUNCTION_48	CALL_1
0x40145a4	          0x4889de	                            mov rsi, rbx	      5088	dwarf.c	FUNCTION_48	CALL_2
0x40145a7	      0xbf04000000	                              mov edi, 4	      5088	dwarf.c	FUNCTION_48	CALL_2
0x40145ac	      0xe86fcbfeff	 call sym.load_debug_section_with_follow	      5088	dwarf.c	FUNCTION_48	CALL_2
0x40145b1	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      5090	dwarf.c	FUNCTION_48	CALL_3
0x40145b5	        0x488d7518	                   lea rsi, [rbp + 0x18]	      5090	dwarf.c	FUNCTION_48	CALL_3
0x40145b9	      0xe892d1feff	  call sym.introduce.isra.5.constprop.33	      5090	dwarf.c	FUNCTION_48	CALL_3
0x40145be	          0x4d39fe	                            cmp r14, r15	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x40145c1	     0xf83c3050000	                           jae 0x4014b8a	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x40145c7	      0x4c89742440	             mov qword [rsp + 0x40], r14	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x40145cc	          0x4c89f3	                            mov rbx, r14	      5006	dwarf.c	FUNCTION_47	IF_2
0x40145cf	          0x4d89fe	                            mov r14, r15	      5006	dwarf.c	FUNCTION_47	IF_2
0x40145d2	        0x4c8d6302	                      lea r12, [rbx + 2]	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x40145d6	          0x4889dd	                            mov rbp, rbx	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x40145d9	      0x482b6c2440	             sub rbp, qword [rsp + 0x40]	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x40145de	          0x4d39e6	                            cmp r14, r12	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x40145e1	            0x775d	                            ja 0x4014640	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x40145e3	          0x4c39f3	                            cmp rbx, r14	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x40145e6	     0xf82940b0000	                            jb 0x4015180	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x40145ec	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      5103	dwarf.c	FUNCTION_48	WHILE_1	IF_1	CALL_5
0x40145f1	      0xba05000000	                              mov edx, 5	      5103	dwarf.c	FUNCTION_48	WHILE_1	IF_1	CALL_5
0x40145f6	      0xbe00000000	                              mov esi, 0	      5103	dwarf.c	FUNCTION_48	WHILE_1	IF_1	CALL_5
0x40145fb	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5103	dwarf.c	FUNCTION_48	WHILE_1	IF_1	CALL_5
0x40145ff	            0x31ff	                            xor edi, edi	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4014601	      0xe800000000	                          call 0x4014606	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4014606	          0x4889de	                            mov rsi, rbx	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4014609	          0x4889c7	                            mov rdi, rax	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x401460c	            0x31c0	                            xor eax, eax	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x401460e	      0xe800000000	                          call 0x4014613	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4014613	            0x31c0	                            xor eax, eax	      5171	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1
0x4014615	    0x488b8c247808	           mov rcx, qword [rsp + 0x878] 	      5334	dwarf.c	FUNCTION_48
0x401461d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5334	dwarf.c	FUNCTION_48
0x4014626	     0xf857d100000	                           jne 0x40156a9	      5334	dwarf.c	FUNCTION_48
0x401462c	    0x4881c4880800	                          add rsp, 0x888	      5334	dwarf.c	FUNCTION_48
0x4014633	              0x5b	                                 pop rbx	      5334	dwarf.c	FUNCTION_48
0x4014634	              0x5d	                                 pop rbp	      5334	dwarf.c	FUNCTION_48
0x4014635	            0x415c	                                 pop r12	      5334	dwarf.c	FUNCTION_48
0x4014637	            0x415d	                                 pop r13	      5334	dwarf.c	FUNCTION_48
0x4014639	            0x415e	                                 pop r14	      5334	dwarf.c	FUNCTION_48
0x401463b	            0x415f	                                 pop r15	      5334	dwarf.c	FUNCTION_48
0x401463d	              0xc3	                                     ret	      5334	dwarf.c	FUNCTION_48
0x401463e	            0x6690	                                     nop	      5334	dwarf.c	FUNCTION_48
0x4014640	      0xbe02000000	                              mov esi, 2	      5334	dwarf.c	FUNCTION_48
0x4014645	          0x4889df	                            mov rdi, rbx	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4014648	    0xff1500000000	                 call qword [0x0401464e]	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x401464e	      0x4889442438	             mov qword [rsp + 0x38], rax	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4014653	          0x83e804	                              sub eax, 4	      5101	dwarf.c	FUNCTION_48	WHILE_1	IF_1
0x4014656	          0x83f801	                              cmp eax, 1	      5101	dwarf.c	FUNCTION_48	WHILE_1	IF_1
0x4014659	            0x7791	                            ja 0x40145ec	      5101	dwarf.c	FUNCTION_48	WHILE_1	IF_1
0x401465b	        0x4c8d6b03	                      lea r13, [rbx + 3]	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x401465f	          0x4d39ee	                            cmp r14, r13	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014662	     0xf8788070000	                            ja 0x4014df0	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014668	          0x4d39e6	                            cmp r14, r12	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x401466b	     0xf872f0b0000	                            ja 0x40151a0	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014671	      0xba05000000	                              mov edx, 5	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4014676	      0xbe00000000	                              mov esi, 0	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x401467b	            0x31ff	                            xor edi, edi	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x401467d	      0xe800000000	                          call 0x4014682	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4014682	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4014685	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014688	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x401468d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401468f	    0x41bf04000000	                             mov r15d, 4	       104	stdio2.h	CALL_16
0x4014695	      0xe800000000	                          call 0x401469a	       104	stdio2.h	CALL_16
0x401469a	      0xba05000000	                              mov edx, 5	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x401469f	      0xbe00000000	                              mov esi, 0	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x40146a4	            0x31ff	                            xor edi, edi	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x40146a6	      0xe800000000	                          call 0x40146ab	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x40146ab	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x40146af	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40146b2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40146b7	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40146b9	      0xe800000000	                          call 0x40146be	       104	stdio2.h	CALL_16
0x40146be	      0xba05000000	                              mov edx, 5	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x40146c3	      0xbe00000000	                              mov esi, 0	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x40146c8	            0x31ff	                            xor edi, edi	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x40146ca	      0xe800000000	                          call 0x40146cf	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x40146cf	      0xba04000000	                              mov edx, 4	       104	stdio2.h	CALL_16
0x40146d4	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40146d7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40146dc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40146de	      0xe800000000	                          call 0x40146e3	       104	stdio2.h	CALL_16
0x40146e3	    0xc74424580000	               mov dword [rsp + 0x58], 0	      5115	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40146eb	    0xc74424240400	               mov dword [rsp + 0x24], 4	      5095	dwarf.c	FUNCTION_48	WHILE_1
0x40146f3	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x40146fc	    0x48c744243000	               mov qword [rsp + 0x30], 0	      5098	dwarf.c	FUNCTION_48	WHILE_1
0x4014705	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x401470a	      0xe800000000	                          call 0x401470f	       104	stdio2.h	CALL_16
0x401470f	          0x4d39f5	                            cmp r13, r14	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4014712	     0xf833d020000	                           jae 0x4014955	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4014718	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x401471c	          0x4c89fd	                            mov rbp, r15	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x401471f	        0x89442418	             mov dword [rsp + 0x18], eax	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4014723	       0xf1f440000	                   nop dword [rax + rax]	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4014728	        0x498d5d01	                      lea rbx, [r13 + 1]	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401472c	          0x4939de	                            cmp r14, rbx	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401472f	     0xf873b040000	                            ja 0x4014b70	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014735	          0x4d39ee	                            cmp r14, r13	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014738	     0xf8642040000	                           jbe 0x4014b80	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401473e	          0x4c89f6	                            mov rsi, r14	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014741	          0x4c29ee	                            sub rsi, r13	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014744	          0x8d46ff	                      lea eax, [rsi - 1]	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014747	          0x83f807	                              cmp eax, 7	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401474a	     0xf8730040000	                            ja 0x4014b80	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014750	          0x4c89ef	                            mov rdi, r13	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014753	    0xff1500000000	                 call qword [0x04014759]	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014759	            0x85c0	                           test eax, eax	      5191	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_8
0x401475b	          0x4989c5	                            mov r13, rax	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401475e	            0x89c2	                            mov edx, eax	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014760	     0xf84f20c0000	                            je 0x4015458	      5191	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_8
0x4014766	          0x83f80a	                            cmp eax, 0xa	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014769	     0xf8791030000	                            ja 0x4014b00	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401476f	            0x89c0	                            mov eax, eax	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014771	    0xff24c5000000	                       jmp qword [rax*8]	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014778	     0xf1f84000000	                   nop dword [rax + rax]	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014780	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014785	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014787	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x401478a	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x401478d	      0xe800000000	                          call 0x4014792	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014792	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      5279	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014796	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014799	          0x4801df	                            add rdi, rbx	      5279	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401479c	        0x4c8d2c2f	                    lea r13, [rdi + rbp]	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147a0	          0x4d39ee	                            cmp r14, r13	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147a3	     0xf873f040000	                            ja 0x4014be8	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147a9	            0x31db	                            xor ebx, ebx	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147ab	          0x4939fe	                            cmp r14, rdi	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147ae	            0x7614	                           jbe 0x40147c4	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147b0	          0x4c89f0	                            mov rax, r14	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147b3	          0x4829f8	                            sub rax, rdi	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147b6	            0x89c6	                            mov esi, eax	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147b8	          0x83e801	                              sub eax, 1	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147bb	          0x83f807	                              cmp eax, 7	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147be	     0xf8628040000	                           jbe 0x4014bec	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147c4	      0xba05000000	                              mov edx, 5	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x40147c9	      0xbe00000000	                              mov esi, 0	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x40147ce	      0xe95d010000	                           jmp 0x4014930	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x40147d3	       0xf1f440000	                   nop dword [rax + rax]	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x40147d8	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40147dd	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40147df	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40147e2	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x40147e5	      0xe800000000	                          call 0x40147ea	       356	dwarf.c	FUNCTION_10	CALL_1
0x40147ea	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      5271	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147ee	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x40147f1	          0x4801df	                            add rdi, rbx	      5271	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147f4	        0x4c8d2c2f	                    lea r13, [rdi + rbp]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147f8	          0x4d39ee	                            cmp r14, r13	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40147fb	     0xf87af030000	                            ja 0x4014bb0	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014801	            0x31db	                            xor ebx, ebx	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014803	          0x4939fe	                            cmp r14, rdi	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014806	            0x7614	                           jbe 0x401481c	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014808	          0x4c89f0	                            mov rax, r14	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401480b	          0x4829f8	                            sub rax, rdi	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401480e	            0x89c6	                            mov esi, eax	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014810	          0x83e801	                              sub eax, 1	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014813	          0x83f807	                              cmp eax, 7	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014816	     0xf8698030000	                           jbe 0x4014bb4	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401481c	      0xba05000000	                              mov edx, 5	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4014821	      0xbe00000000	                              mov esi, 0	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4014826	      0xe905010000	                           jmp 0x4014930	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x401482b	       0xf1f440000	                   nop dword [rax + rax]	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4014830	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014835	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014838	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x401483a	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x401483d	      0xe800000000	                          call 0x4014842	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014842	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      5256	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014846	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014849	          0x4801fb	                            add rbx, rdi	      5256	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401484c	        0x4c8d2c2b	                    lea r13, [rbx + rbp]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014850	          0x4d39ee	                            cmp r14, r13	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014853	     0xf873f030000	                            ja 0x4014b98	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014859	            0x31ff	                            xor edi, edi	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401485b	          0x4939de	                            cmp r14, rbx	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401485e	            0x7614	                           jbe 0x4014874	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014860	          0x4c89f0	                            mov rax, r14	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014863	          0x4829d8	                            sub rax, rbx	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014866	            0x89c6	                            mov esi, eax	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014868	          0x83e801	                              sub eax, 1	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401486b	          0x83f807	                              cmp eax, 7	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401486e	     0xf8628030000	                           jbe 0x4014b9c	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014874	      0xe89703ffff	          call sym.fetch_indirect_string	      5258	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_39
0x4014879	      0xba05000000	                              mov edx, 5	      5259	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_40
0x401487e	          0x4889c3	                            mov rbx, rax	      5258	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_39
0x4014881	      0xbe00000000	                              mov esi, 0	      5259	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_40
0x4014886	      0xe9a5000000	                           jmp 0x4014930	      5259	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_40
0x401488b	       0xf1f440000	                   nop dword [rax + rax]	      5259	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_40
0x4014890	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014895	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014898	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x401489a	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x401489d	      0xe800000000	                          call 0x40148a2	       356	dwarf.c	FUNCTION_10	CALL_1
0x40148a2	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      5247	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148a6	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x40148a9	          0x4801fb	                            add rbx, rdi	      5247	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148ac	        0x4c8d2c2b	                    lea r13, [rbx + rbp]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148b0	          0x4d39ee	                            cmp r14, r13	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148b3	     0xf8717030000	                            ja 0x4014bd0	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148b9	            0x31ff	                            xor edi, edi	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148bb	          0x4939de	                            cmp r14, rbx	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148be	            0x7614	                           jbe 0x40148d4	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148c0	          0x4c89f0	                            mov rax, r14	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148c3	          0x4829d8	                            sub rax, rbx	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148c6	            0x89c6	                            mov esi, eax	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148c8	          0x83e801	                              sub eax, 1	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148cb	          0x83f807	                              cmp eax, 7	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148ce	     0xf8600030000	                           jbe 0x4014bd4	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40148d4	      0xe83703ffff	          call sym.fetch_indirect_string	      5249	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_36
0x40148d9	      0xba05000000	                              mov edx, 5	      5250	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_37
0x40148de	          0x4889c3	                            mov rbx, rax	      5249	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_36
0x40148e1	      0xbe00000000	                              mov esi, 0	      5250	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_37
0x40148e6	            0xeb48	                           jmp 0x4014930	      5250	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_37
0x40148e8	     0xf1f84000000	                   nop dword [rax + rax]	      5250	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_37
0x40148f0	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40148f5	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40148f7	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40148fa	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x40148fd	      0xe800000000	                          call 0x4014902	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014902	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      5238	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014906	          0x4c89f6	                            mov rsi, r14	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x4014909	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x401490c	          0x4801cb	                            add rbx, rcx	      5238	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401490f	          0x4829de	                            sub rsi, rbx	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x4014912	          0x4889df	                            mov rdi, rbx	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x4014915	      0xe800000000	                          call 0x401491a	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x401491a	      0x4c8d6c0301	                lea r13, [rbx + rax + 1]	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x401491f	      0xba05000000	                              mov edx, 5	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4014924	      0xbe00000000	                              mov esi, 0	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4014929	     0xf1f80000000	                         nop dword [rax]	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4014930	            0x31ff	                            xor edi, edi	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4014932	      0xe800000000	                          call 0x4014937	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4014937	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_16
0x401493a	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x401493d	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4014940	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014945	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014947	      0xe800000000	                          call 0x401494c	       104	stdio2.h	CALL_16
0x401494c	          0x4d39ee	                            cmp r14, r13	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x401494f	     0xf87d3fdffff	                            ja 0x4014728	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4014955	      0xba05000000	                              mov edx, 5	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x401495a	      0xbe00000000	                              mov esi, 0	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x401495f	            0x31ff	                            xor edi, edi	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4014961	      0xe800000000	                          call 0x4014966	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4014966	          0x4889c7	                            mov rdi, rax	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4014969	            0x31c0	                            xor eax, eax	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x401496b	      0xe800000000	                          call 0x4014970	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4014970	            0x31c0	                            xor eax, eax	      5187	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4014972	      0xe99efcffff	                           jmp 0x4014615	      5187	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4014977	    0x660f1f840000	                    nop word [rax + rax]	      5187	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4014980	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014985	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014987	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x401498a	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x401498d	      0xe800000000	                          call 0x4014992	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014992	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      5229	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014996	          0x4c89f6	                            mov rsi, r14	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x4014999	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x401499c	          0x4801cb	                            add rbx, rcx	      5229	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401499f	          0x4829de	                            sub rsi, rbx	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x40149a2	          0x4889df	                            mov rdi, rbx	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x40149a5	      0xe800000000	                          call 0x40149aa	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x40149aa	      0xba05000000	                              mov edx, 5	      5232	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_31
0x40149af	      0x4c8d6c0301	                lea r13, [rbx + rax + 1]	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x40149b4	      0xbe00000000	                              mov esi, 0	      5232	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_31
0x40149b9	      0xe972ffffff	                           jmp 0x4014930	      5232	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_31
0x40149be	            0x6690	                                     nop	      5232	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_31
0x40149c0	      0xba05000000	                              mov edx, 5	      5224	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_28
0x40149c5	      0xbe00000000	                              mov esi, 0	      5224	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_28
0x40149ca	            0x31ff	                            xor edi, edi	      5224	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_28
0x40149cc	      0xe800000000	                          call 0x40149d1	      5224	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_28
0x40149d1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40149d6	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40149d9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40149db	      0xe800000000	                          call 0x40149e0	       104	stdio2.h	CALL_16
0x40149e0	          0x4989dd	                            mov r13, rbx	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x40149e3	      0xe964ffffff	                           jmp 0x401494c	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x40149e8	     0xf1f84000000	                   nop dword [rax + rax]	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x40149f0	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40149f5	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40149f7	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40149fa	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x40149fd	      0xe800000000	                          call 0x4014a02	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014a02	      0x448b542468	           mov r10d, dword [rsp + 0x68] 	      5202	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a07	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014a0c	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014a0e	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014a11	      0x4889442410	             mov qword [rsp + 0x10], rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014a16	          0x4c01d3	                            add rbx, r10	      5202	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a19	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014a1c	      0xe800000000	                          call 0x4014a21	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014a21	      0x448b542468	           mov r10d, dword [rsp + 0x68] 	      5204	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a26	        0x8b742458	            mov esi, dword [rsp + 0x58] 	      5206	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_9
0x4014a2a	      0x4889442408	                mov qword [rsp + 8], rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014a2f	            0x85f6	                           test esi, esi	      5206	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_9
0x4014a31	        0x4e8d2c13	                    lea r13, [rbx + r10]	      5204	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a35	     0xf85f5010000	                           jne 0x4014c30	      5206	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_9
0x4014a3b	            0x31ff	                            xor edi, edi	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4014a3d	      0xba05000000	                              mov edx, 5	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4014a42	      0xbe00000000	                              mov esi, 0	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4014a47	      0xe800000000	                          call 0x4014a4c	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4014a4c	          0x4889c7	                            mov rdi, rax	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4014a4f	            0x31c0	                            xor eax, eax	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4014a51	      0xe800000000	                          call 0x4014a56	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4014a56	            0x31ff	                            xor edi, edi	      5213	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_10	CALL_26
0x4014a58	      0xba05000000	                              mov edx, 5	      5213	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_10	CALL_26
0x4014a5d	      0xbe00000000	                              mov esi, 0	      5213	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_10	CALL_26
0x4014a62	      0xe800000000	                          call 0x4014a67	      5213	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_10	CALL_26
0x4014a67	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       104	stdio2.h	CALL_16
0x4014a6b	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4014a6f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014a72	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014a77	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014a79	      0xe800000000	                          call 0x4014a7e	       104	stdio2.h	CALL_16
0x4014a7e	      0xe9c9feffff	                           jmp 0x401494c	       104	stdio2.h	CALL_16
0x4014a83	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x4014a88	        0x4c8d2c2b	                    lea r13, [rbx + rbp]	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a8c	          0x4d39ee	                            cmp r14, r13	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a8f	     0xf864b020000	                           jbe 0x4014ce0	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a95	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a99	          0x4889df	                            mov rdi, rbx	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014a9c	    0xff1500000000	                 call qword [0x04014aa2]	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014aa2	          0x4989c4	                            mov r12, rax	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014aa5	      0xba05000000	                              mov edx, 5	      5265	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_41
0x4014aaa	      0xbe00000000	                              mov esi, 0	      5265	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_41
0x4014aaf	            0x31ff	                            xor edi, edi	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4014ab1	      0xe800000000	                          call 0x4014ab6	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4014ab6	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4014ab9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014abc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014ac1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014ac3	      0xe800000000	                          call 0x4014ac8	       104	stdio2.h	CALL_16
0x4014ac8	      0xe97ffeffff	                           jmp 0x401494c	       104	stdio2.h	CALL_16
0x4014acd	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4014ad0	        0x4c8d2c2b	                    lea r13, [rbx + rbp]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014ad4	          0x4d39ee	                            cmp r14, r13	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014ad7	     0xf862b010000	                           jbe 0x4014c08	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014add	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014ae1	          0x4889df	                            mov rdi, rbx	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014ae4	    0xff1500000000	                 call qword [0x04014aea]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014aea	          0x4989c4	                            mov r12, rax	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014aed	      0xba05000000	                              mov edx, 5	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4014af2	      0xbe00000000	                              mov esi, 0	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4014af7	            0xebb6	                           jmp 0x4014aaf	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4014af9	     0xf1f80000000	                         nop dword [rax]	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4014b00	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4014b05	          0x4885c9	                           test rcx, rcx	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4014b08	     0xf847c0a0000	                            je 0x401558a	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4014b0e	          0x4489e8	                           mov eax, r13d	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4014b11	        0x4c8b1cc1	            mov r11, qword [rcx + rax*8]	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4014b15	          0x4d85db	                           test r11, r11	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4014b18	     0xf846c0a0000	                            je 0x401558a	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4014b1e	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014b23	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014b25	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014b28	          0x4c89df	                            mov rdi, r11	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014b2b	      0xe800000000	                          call 0x4014b30	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014b30	          0x4885c0	                           test rax, rax	      5304	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12
0x4014b33	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4014b36	     0xf85cc010000	                           jne 0x4014d08	      5304	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12
0x4014b3c	      0xba05000000	                              mov edx, 5	      5306	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12	CALL_50
0x4014b41	      0xbe00000000	                              mov esi, 0	      5306	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12	CALL_50
0x4014b46	            0x31ff	                            xor edi, edi	      5306	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12	CALL_50
0x4014b48	      0xe800000000	                          call 0x4014b4d	      5306	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12	CALL_50
0x4014b4d	          0x4489ea	                           mov edx, r13d	       104	stdio2.h	CALL_16
0x4014b50	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014b53	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014b58	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014b5a	          0x4989dd	                            mov r13, rbx	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014b5d	      0xe800000000	                          call 0x4014b62	       104	stdio2.h	CALL_16
0x4014b62	      0xe9e5fdffff	                           jmp 0x401494c	       104	stdio2.h	CALL_16
0x4014b67	    0x660f1f840000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4014b70	      0xbe01000000	                              mov esi, 1	       104	stdio2.h	CALL_16
0x4014b75	      0xe9d6fbffff	                           jmp 0x4014750	       104	stdio2.h	CALL_16
0x4014b7a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4014b80	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4014b85	      0xe800000000	                          call 0x4014b8a	       104	stdio2.h	CALL_16
0x4014b8a	      0xb801000000	                              mov eax, 1	      5333	dwarf.c	FUNCTION_48
0x4014b8f	      0xe981faffff	                           jmp 0x4014615	      5333	dwarf.c	FUNCTION_48
0x4014b94	         0xf1f4000	                         nop dword [rax]	      5333	dwarf.c	FUNCTION_48
0x4014b98	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5333	dwarf.c	FUNCTION_48
0x4014b9c	          0x4889df	                            mov rdi, rbx	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014b9f	    0xff1500000000	                 call qword [0x04014ba5]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014ba5	          0x4889c7	                            mov rdi, rax	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014ba8	      0xe9c7fcffff	                           jmp 0x4014874	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bad	           0xf1f00	                         nop dword [rax]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bb0	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bb4	    0xff1500000000	                 call qword [0x04014bba]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bba	      0xba05000000	                              mov edx, 5	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4014bbf	          0x4889c3	                            mov rbx, rax	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bc2	      0xbe00000000	                              mov esi, 0	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4014bc7	      0xe964fdffff	                           jmp 0x4014930	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4014bcc	         0xf1f4000	                         nop dword [rax]	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4014bd0	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4014bd4	          0x4889df	                            mov rdi, rbx	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bd7	    0xff1500000000	                 call qword [0x04014bdd]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bdd	          0x4889c7	                            mov rdi, rax	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014be0	      0xe9effcffff	                           jmp 0x40148d4	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014be5	           0xf1f00	                         nop dword [rax]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014be8	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bec	    0xff1500000000	                 call qword [0x04014bf2]	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bf2	      0xba05000000	                              mov edx, 5	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x4014bf7	          0x4889c3	                            mov rbx, rax	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014bfa	      0xbe00000000	                              mov esi, 0	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x4014bff	      0xe92cfdffff	                           jmp 0x4014930	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x4014c04	         0xf1f4000	                         nop dword [rax]	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x4014c08	          0x4531e4	                          xor r12d, r12d	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c0b	          0x4939de	                            cmp r14, rbx	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c0e	     0xf86d9feffff	                           jbe 0x4014aed	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c14	          0x4c89f0	                            mov rax, r14	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c17	          0x4829d8	                            sub rax, rbx	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c1a	            0x89c6	                            mov esi, eax	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c1c	          0x83e801	                              sub eax, 1	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c1f	          0x83f807	                              cmp eax, 7	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c22	     0xf87c5feffff	                            ja 0x4014aed	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c28	      0xe9b4feffff	                           jmp 0x4014ae1	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c2d	           0xf1f00	                         nop dword [rax]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c30	        0x8b442408	                mov eax, dword [rsp + 8]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014c34	    0x4c8b25000000	            mov r12, qword [0x04014c3b] 	      4997	dwarf.c	FUNCTION_47	IF_1
0x4014c3b	          0x4d85e4	                           test r12, r12	      4997	dwarf.c	FUNCTION_47	IF_1
0x4014c3e	          0x4889c1	                            mov rcx, rax	      4997	dwarf.c	FUNCTION_47	IF_1
0x4014c41	      0x4889442438	             mov qword [rsp + 0x38], rax	      4997	dwarf.c	FUNCTION_47	IF_1
0x4014c46	     0xf840afeffff	                            je 0x4014a56	      4997	dwarf.c	FUNCTION_47	IF_1
0x4014c4c	    0x488b05000000	            mov rax, qword [0x04014c53] 	      4998	dwarf.c	FUNCTION_47	IF_1
0x4014c53	          0x4885c9	                           test rcx, rcx	      4999	dwarf.c	FUNCTION_47	IF_1
0x4014c56	          0x4889c6	                            mov rsi, rax	      4998	dwarf.c	FUNCTION_47	IF_1
0x4014c59	     0xf84f7fdffff	                            je 0x4014a56	      4999	dwarf.c	FUNCTION_47	IF_1
0x4014c5f	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      4999	dwarf.c	FUNCTION_47	IF_1
0x4014c64	          0x4839c1	                            cmp rcx, rax	      4999	dwarf.c	FUNCTION_47	IF_1
0x4014c67	     0xf83e9fdffff	                           jae 0x4014a56	      4999	dwarf.c	FUNCTION_47	IF_1
0x4014c6d	        0x498d1c0c	                    lea rbx, [r12 + rcx]	      5002	dwarf.c	FUNCTION_47
0x4014c71	          0x4901c4	                            add r12, rax	      5003	dwarf.c	FUNCTION_47
0x4014c74	        0x4c8d7b04	                      lea r15, [rbx + 4]	      5005	dwarf.c	FUNCTION_47
0x4014c78	          0x4d39fc	                            cmp r12, r15	      5005	dwarf.c	FUNCTION_47
0x4014c7b	     0xf86a7020000	                           jbe 0x4014f28	      5005	dwarf.c	FUNCTION_47
0x4014c81	      0xbe04000000	                              mov esi, 4	      5005	dwarf.c	FUNCTION_47
0x4014c86	          0x4889df	                            mov rdi, rbx	      5005	dwarf.c	FUNCTION_47
0x4014c89	    0xff1500000000	                 call qword [0x04014c8f]	      5005	dwarf.c	FUNCTION_47
0x4014c8f	      0xb9ffffffff	                     mov ecx, 0xffffffff	      5006	dwarf.c	FUNCTION_47	IF_2
0x4014c94	          0x4839c8	                            cmp rax, rcx	      5006	dwarf.c	FUNCTION_47	IF_2
0x4014c97	     0xf8585080000	                           jne 0x4015522	      5006	dwarf.c	FUNCTION_47	IF_2
0x4014c9d	        0x4883c30c	                            add rbx, 0xc	      5009	dwarf.c	FUNCTION_47	IF_2
0x4014ca1	          0x4939dc	                            cmp r12, rbx	      5009	dwarf.c	FUNCTION_47	IF_2
0x4014ca4	     0xf8639080000	                           jbe 0x40154e3	      5009	dwarf.c	FUNCTION_47	IF_2
0x4014caa	      0xbe08000000	                              mov esi, 8	      5009	dwarf.c	FUNCTION_47	IF_2
0x4014caf	          0x4c89ff	                            mov rdi, r15	      5009	dwarf.c	FUNCTION_47	IF_2
0x4014cb2	          0x4989df	                            mov r15, rbx	      5009	dwarf.c	FUNCTION_47	IF_2
0x4014cb5	    0xff1500000000	                 call qword [0x04014cbb]	      5009	dwarf.c	FUNCTION_47	IF_2
0x4014cbb	        0x488d480c	                    lea rcx, [rax + 0xc]	      5009	dwarf.c	FUNCTION_47	IF_2
0x4014cbf	      0xba08000000	                              mov edx, 8	      5010	dwarf.c	FUNCTION_47	IF_2
0x4014cc4	          0x4839c8	                            cmp rax, rcx	      5018	dwarf.c	FUNCTION_47	IF_3
0x4014cc7	    0x488b35000000	            mov rsi, qword [0x04014cce] 	      5018	dwarf.c	FUNCTION_47	IF_3
0x4014cce	     0xf8667020000	                           jbe 0x4014f3b	      5018	dwarf.c	FUNCTION_47	IF_3
0x4014cd4	      0xe97dfdffff	                           jmp 0x4014a56	      5018	dwarf.c	FUNCTION_47	IF_3
0x4014cd9	     0xf1f80000000	                         nop dword [rax]	      5018	dwarf.c	FUNCTION_47	IF_3
0x4014ce0	          0x4531e4	                          xor r12d, r12d	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014ce3	          0x4939de	                            cmp r14, rbx	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014ce6	     0xf86b9fdffff	                           jbe 0x4014aa5	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014cec	          0x4c89f0	                            mov rax, r14	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014cef	          0x4829d8	                            sub rax, rbx	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014cf2	            0x89c6	                            mov esi, eax	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014cf4	          0x83e801	                              sub eax, 1	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014cf7	          0x83f807	                              cmp eax, 7	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014cfa	     0xf87a5fdffff	                            ja 0x4014aa5	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014d00	      0xe994fdffff	                           jmp 0x4014a99	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014d05	           0xf1f00	                         nop dword [rax]	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4014d08	      0x448b7c2468	           mov r15d, dword [rsp + 0x68] 	      5303	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4
0x4014d0d	      0xba05000000	                              mov edx, 5	      5309	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	CALL_51
0x4014d12	      0xbe00000000	                              mov esi, 0	      5309	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	CALL_51
0x4014d17	            0x31ff	                            xor edi, edi	      5309	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	CALL_51
0x4014d19	          0x4d01df	                            add r15, r11	      5303	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4
0x4014d1c	      0xe800000000	                          call 0x4014d21	      5309	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	CALL_51
0x4014d21	          0x4489ea	                           mov edx, r13d	       104	stdio2.h	CALL_16
0x4014d24	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014d27	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014d2c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014d2e	          0x4d89fd	                            mov r13, r15	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014d31	      0xe800000000	                          call 0x4014d36	       104	stdio2.h	CALL_16
0x4014d36	      0x498d4424ff	                      lea rax, [r12 - 1]	       104	stdio2.h	CALL_16
0x4014d3b	      0x4889442408	                mov qword [rsp + 8], rax	       104	stdio2.h	CALL_16
0x4014d40	        0x4b8d0427	                    lea rax, [r15 + r12]	       104	stdio2.h	CALL_16
0x4014d44	          0x4989dc	                            mov r12, rbx	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014d47	      0x4889442410	             mov qword [rsp + 0x10], rax	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014d4c	            0xeb67	                           jmp 0x4014db5	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014d4e	            0x6690	                                     nop	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014d50	            0x31f6	                            xor esi, esi	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4014d52	          0x4d39f5	                            cmp r13, r14	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014d55	            0x7312	                           jae 0x4014d69	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014d57	          0x4c89f0	                            mov rax, r14	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014d5a	          0x4c29e8	                            sub rax, r13	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014d5d	          0x8d50ff	                      lea edx, [rax - 1]	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014d60	          0x83fa07	                              cmp edx, 7	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014d63	     0xf86f4080000	                           jbe 0x401565d	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014d69	            0x6a20	                               push 0x20	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d6b	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d6d	          0x4531c9	                            xor r9d, r9d	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d70	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d72	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d74	          0x4c89e1	                            mov rcx, r12	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d77	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d79	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d7d	            0x31d2	                            xor edx, edx	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d7f	            0x31ff	                            xor edi, edi	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d81	          0x4d89f0	                             mov r8, r14	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d84	              0x50	                                push rax	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d85	              0x55	                                push rbp	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d86	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d88	      0xe89344ffff	    call sym.read_and_display_attr_value	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d8d	          0x4d89ea	                            mov r10, r13	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4014d90	        0x4883c440	                           add rsp, 0x40	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4014d94	          0x4989c4	                            mov r12, rax	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4014d97	          0x4d29fa	                            sub r10, r15	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4014d9a	      0x4c39542408	                cmp qword [rsp + 8], r10	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4014d9f	            0x740a	                            je 0x4014dab	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4014da1	      0xbf2c000000	                           mov edi, 0x2c	       104	stdio2.h	CALL_16
0x4014da6	      0xe800000000	                          call 0x4014dab	       104	stdio2.h	CALL_16
0x4014dab	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	      5310	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014db0	          0x4989dd	                            mov r13, rbx	      5310	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014db3	            0x7423	                            je 0x4014dd8	      5310	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014db5	        0x498d5d01	                      lea rbx, [r13 + 1]	      5310	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014db9	          0x4939de	                            cmp r14, rbx	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014dbc	            0x7692	                           jbe 0x4014d50	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014dbe	      0xbe01000000	                              mov esi, 1	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014dc3	          0x4c89ef	                            mov rdi, r13	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014dc6	    0xff1500000000	                 call qword [0x04014dcc]	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014dcc	          0x4863f0	                         movsxd rsi, eax	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014dcf	            0xeb98	                           jmp 0x4014d69	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014dd1	     0xf1f80000000	                         nop dword [rax]	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4014dd8	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4014ddd	          0x4d89e5	                            mov r13, r12	       104	stdio2.h	CALL_16
0x4014de0	      0xe800000000	                          call 0x4014de5	       104	stdio2.h	CALL_16
0x4014de5	      0xe962fbffff	                           jmp 0x401494c	       104	stdio2.h	CALL_16
0x4014dea	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4014df0	      0xbe01000000	                              mov esi, 1	       104	stdio2.h	CALL_16
0x4014df5	          0x4c89e7	                            mov rdi, r12	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014df8	    0xff1500000000	                 call qword [0x04014dfe]	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014dfe	            0x89c1	                            mov ecx, eax	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014e00	          0x4189c4	                           mov r12d, eax	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014e03	          0x83e102	                              and ecx, 2	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014e06	        0x4183e404	                             and r12d, 4	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4014e0a	            0xa801	                              test al, 1	      5109	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4014e0c	        0x894c2458	             mov dword [rsp + 0x58], ecx	      5109	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4014e10	     0xf840b080000	                            je 0x4015621	      5109	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4014e16	    0x48c744244808	               mov qword [rsp + 0x48], 8	      5109	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4014e1f	    0xc74424240800	               mov dword [rsp + 0x24], 8	      5110	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4014e27	            0x31ff	                            xor edi, edi	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4014e29	      0xba05000000	                              mov edx, 5	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4014e2e	      0xbe00000000	                              mov esi, 0	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4014e33	      0xe800000000	                          call 0x4014e38	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4014e38	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4014e3b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014e3e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014e43	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014e45	      0xe800000000	                          call 0x4014e4a	       104	stdio2.h	CALL_16
0x4014e4a	            0x31ff	                            xor edi, edi	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x4014e4c	      0xba05000000	                              mov edx, 5	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x4014e51	      0xbe00000000	                              mov esi, 0	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x4014e56	      0xe800000000	                          call 0x4014e5b	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x4014e5b	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x4014e5f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014e62	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014e67	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014e69	      0xe800000000	                          call 0x4014e6e	       104	stdio2.h	CALL_16
0x4014e6e	            0x31ff	                            xor edi, edi	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4014e70	      0xba05000000	                              mov edx, 5	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4014e75	      0xbe00000000	                              mov esi, 0	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4014e7a	      0xe800000000	                          call 0x4014e7f	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4014e7f	        0x8b542424	            mov edx, dword [rsp + 0x24] 	       104	stdio2.h	CALL_16
0x4014e83	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014e86	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014e8b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014e8d	      0xe800000000	                          call 0x4014e92	       104	stdio2.h	CALL_16
0x4014e92	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      5115	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014e96	            0x85c0	                           test eax, eax	      5115	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014e98	     0xf8413060000	                            je 0x40154b1	      5115	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014e9e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014ea3	      0x498d5c0500	                    lea rbx, [r13 + rax]	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014ea8	          0x4939de	                            cmp r14, rbx	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014eab	     0xf860f030000	                           jbe 0x40151c0	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014eb1	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014eb5	          0x4c89ef	                            mov rdi, r13	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014eb8	    0xff1500000000	                 call qword [0x04014ebe]	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014ebe	      0x4889442428	             mov qword [rsp + 0x28], rax	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4014ec3	      0xba05000000	                              mov edx, 5	      5118	dwarf.c	FUNCTION_48	WHILE_1	IF_3	CALL_9
0x4014ec8	      0xbe00000000	                              mov esi, 0	      5118	dwarf.c	FUNCTION_48	WHILE_1	IF_3	CALL_9
0x4014ecd	            0x31ff	                            xor edi, edi	      5118	dwarf.c	FUNCTION_48	WHILE_1	IF_3	CALL_9
0x4014ecf	      0xe800000000	                          call 0x4014ed4	      5118	dwarf.c	FUNCTION_48	WHILE_1	IF_3	CALL_9
0x4014ed4	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       104	stdio2.h	CALL_16
0x4014ed9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4014edc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4014ee1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4014ee3	      0xe800000000	                          call 0x4014ee8	       104	stdio2.h	CALL_16
0x4014ee8	          0x4585e4	                         test r12d, r12d	      5121	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014eeb	     0xf8473070000	                            je 0x4015664	      5121	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014ef1	        0x4c8d6b01	                      lea r13, [rbx + 1]	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014ef5	          0x4d39ee	                            cmp r14, r13	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014ef8	     0xf87f2020000	                            ja 0x40151f0	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014efe	          0x4c39f3	                            cmp rbx, r14	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014f01	            0x7312	                           jae 0x4014f15	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014f03	          0x4c89f6	                            mov rsi, r14	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014f06	          0x4829de	                            sub rsi, rbx	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014f09	          0x8d46ff	                      lea eax, [rsi - 1]	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014f0c	          0x83f807	                              cmp eax, 7	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014f0f	     0xf8668070000	                           jbe 0x401567d	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4014f15	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4014f1a	      0xe800000000	                          call 0x4014f1f	       104	stdio2.h	CALL_16
0x4014f1f	      0xe931faffff	                           jmp 0x4014955	       104	stdio2.h	CALL_16
0x4014f24	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4014f28	          0x4c39e3	                            cmp rbx, r12	      5005	dwarf.c	FUNCTION_47
0x4014f2b	     0xf8291050000	                            jb 0x40154c2	      5005	dwarf.c	FUNCTION_47
0x4014f31	      0xb904000000	                              mov ecx, 4	      5005	dwarf.c	FUNCTION_47
0x4014f36	      0xba04000000	                              mov edx, 4	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x4014f3b	          0x4889f0	                            mov rax, rsi	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x4014f3e	          0x4839c1	                            cmp rcx, rax	      5019	dwarf.c	FUNCTION_47	IF_3
0x4014f41	     0xf870ffbffff	                            ja 0x4014a56	      5019	dwarf.c	FUNCTION_47	IF_3
0x4014f47	        0x498d4702	                      lea rax, [r15 + 2]	      5022	dwarf.c	FUNCTION_47
0x4014f4b	          0x4939c4	                            cmp r12, rax	      5022	dwarf.c	FUNCTION_47
0x4014f4e	     0xf87b4050000	                            ja 0x4015508	      5022	dwarf.c	FUNCTION_47
0x4014f54	          0x4d39e7	                            cmp r15, r12	      5022	dwarf.c	FUNCTION_47
0x4014f57	     0xf83f9faffff	                           jae 0x4014a56	      5022	dwarf.c	FUNCTION_47
0x4014f5d	          0x4c89e6	                            mov rsi, r12	      5022	dwarf.c	FUNCTION_47
0x4014f60	          0x4c29fe	                            sub rsi, r15	      5022	dwarf.c	FUNCTION_47
0x4014f63	          0x8d46ff	                      lea eax, [rsi - 1]	      5022	dwarf.c	FUNCTION_47
0x4014f66	          0x83f807	                              cmp eax, 7	      5022	dwarf.c	FUNCTION_47
0x4014f69	     0xf87e7faffff	                            ja 0x4014a56	      5022	dwarf.c	FUNCTION_47
0x4014f6f	              0x90	                                     nop	      5022	dwarf.c	FUNCTION_47
0x4014f70	        0x89542448	             mov dword [rsp + 0x48], edx	      5022	dwarf.c	FUNCTION_47
0x4014f74	          0x4c89ff	                            mov rdi, r15	      5022	dwarf.c	FUNCTION_47
0x4014f77	    0xff1500000000	                 call qword [0x04014f7d]	      5022	dwarf.c	FUNCTION_47
0x4014f7d	          0x8d48fe	                      lea ecx, [rax - 2]	      5023	dwarf.c	FUNCTION_47	IF_4
0x4014f80	          0x83f902	                              cmp ecx, 2	      5023	dwarf.c	FUNCTION_47	IF_4
0x4014f83	     0xf87cdfaffff	                            ja 0x4014a56	      5023	dwarf.c	FUNCTION_47	IF_4
0x4014f89	        0x8b542448	            mov edx, dword [rsp + 0x48] 	      5025	dwarf.c	FUNCTION_47
0x4014f8d	          0x83c201	                              add edx, 1	      5025	dwarf.c	FUNCTION_47
0x4014f90	          0x83f804	                              cmp eax, 4	      5027	dwarf.c	FUNCTION_47	IF_5
0x4014f93	           0xf94c0	                                 sete al	      5027	dwarf.c	FUNCTION_47	IF_5
0x4014f96	      0x4d8d7c1702	                lea r15, [r15 + rdx + 2]	      5025	dwarf.c	FUNCTION_47
0x4014f9b	           0xfb6c0	                           movzx eax, al	      5027	dwarf.c	FUNCTION_47	IF_5
0x4014f9e	          0x4901c7	                            add r15, rax	      5027	dwarf.c	FUNCTION_47	IF_5
0x4014fa1	        0x498d7f03	                      lea rdi, [r15 + 3]	      5028	dwarf.c	FUNCTION_47
0x4014fa5	        0x4983c704	                              add r15, 4	      5030	dwarf.c	FUNCTION_47
0x4014fa9	          0x4d39fc	                            cmp r12, r15	      5030	dwarf.c	FUNCTION_47
0x4014fac	     0xf8766050000	                            ja 0x4015518	      5030	dwarf.c	FUNCTION_47
0x4014fb2	          0x4939fc	                            cmp r12, rdi	      5030	dwarf.c	FUNCTION_47
0x4014fb5	     0xf869bfaffff	                           jbe 0x4014a56	      5030	dwarf.c	FUNCTION_47
0x4014fbb	          0x4c89e6	                            mov rsi, r12	      5030	dwarf.c	FUNCTION_47
0x4014fbe	          0x4829fe	                            sub rsi, rdi	      5030	dwarf.c	FUNCTION_47
0x4014fc1	          0x8d46ff	                      lea eax, [rsi - 1]	      5030	dwarf.c	FUNCTION_47
0x4014fc4	          0x83f807	                              cmp eax, 7	      5030	dwarf.c	FUNCTION_47
0x4014fc7	     0xf8789faffff	                            ja 0x4014a56	      5030	dwarf.c	FUNCTION_47
0x4014fcd	           0xf1f00	                         nop dword [rax]	      5030	dwarf.c	FUNCTION_47
0x4014fd0	    0xff1500000000	                 call qword [0x04014fd6]	      5030	dwarf.c	FUNCTION_47
0x4014fd6	            0x85c0	                           test eax, eax	      5031	dwarf.c	FUNCTION_47	IF_6
0x4014fd8	     0xf8478faffff	                            je 0x4014a56	      5031	dwarf.c	FUNCTION_47	IF_6
0x4014fde	          0x83e801	                              sub eax, 1	      5034	dwarf.c	FUNCTION_47
0x4014fe1	          0x4c01f8	                            add rax, r15	      5034	dwarf.c	FUNCTION_47
0x4014fe4	          0x4939c4	                            cmp r12, rax	      5035	dwarf.c	FUNCTION_47	IF_7
0x4014fe7	      0x4889442448	             mov qword [rsp + 0x48], rax	      5034	dwarf.c	FUNCTION_47
0x4014fec	     0xf8664faffff	                           jbe 0x4014a56	      5035	dwarf.c	FUNCTION_47	IF_7
0x4014ff2	          0x4889c3	                            mov rbx, rax	      5035	dwarf.c	FUNCTION_47	IF_7
0x4014ff5	            0xeb25	                           jmp 0x401501c	      5035	dwarf.c	FUNCTION_47	IF_7
0x4014ff7	    0x660f1f840000	                    nop word [rax + rax]	      5035	dwarf.c	FUNCTION_47	IF_7
0x4015000	          0x4c89e6	                            mov rsi, r12	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x4015003	          0x4889df	                            mov rdi, rbx	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x4015006	          0x4829de	                            sub rsi, rbx	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x4015009	      0xe800000000	                          call 0x401500e	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x401500e	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x4015013	          0x4939dc	                            cmp r12, rbx	      5043	dwarf.c	FUNCTION_47	WHILE_1	IF_8
0x4015016	     0xf863afaffff	                           jbe 0x4014a56	      5043	dwarf.c	FUNCTION_47	WHILE_1	IF_8
0x401501c	          0x803b00	                       cmp byte [rbx], 0	      5040	dwarf.c	FUNCTION_47	WHILE_1
0x401501f	            0x75df	                           jne 0x4015000	      5040	dwarf.c	FUNCTION_47	WHILE_1
0x4015021	        0x4c8d7b01	                      lea r15, [rbx + 1]	      5046	dwarf.c	FUNCTION_47
0x4015025	          0x4d39fc	                            cmp r12, r15	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4015028	     0xf8628faffff	                           jbe 0x4014a56	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401502e	         0xfb64301	               movzx eax, byte [rbx + 1]	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4015032	            0x84c0	                             test al, al	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4015034	     0xf848f000000	                            je 0x40150c9	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401503a	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401503f	        0x4883f901	                              cmp rcx, 1	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4015043	     0xf8480000000	                            je 0x40150c9	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4015049	          0x4889cb	                            mov rbx, rcx	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401504c	            0xeb06	                           jmp 0x4015054	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401504e	            0x6690	                                     nop	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4015050	            0x84c0	                             test al, al	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4015052	            0x7475	                            je 0x40150c9	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4015054	          0x4c89e6	                            mov rsi, r12	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x4015057	          0x4c89ff	                            mov rdi, r15	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x401505a	        0x4883eb01	                              sub rbx, 1	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401505e	          0x4c29fe	                            sub rsi, r15	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x4015061	      0xe800000000	                          call 0x4015066	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x4015066	      0x4d8d7c0701	                lea r15, [r15 + rax + 1]	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x401506b	      0x488d74246c	                   lea rsi, [rsp + 0x6c]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015070	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015072	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015075	          0x4c89ff	                            mov rdi, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015078	      0xe800000000	                          call 0x401507d	       356	dwarf.c	FUNCTION_10	CALL_1
0x401507d	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      5053	dwarf.c	FUNCTION_47	FOR_1
0x4015081	      0x488d74246c	                   lea rsi, [rsp + 0x6c]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015086	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015088	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x401508b	          0x4901c7	                            add r15, rax	      5053	dwarf.c	FUNCTION_47	FOR_1
0x401508e	          0x4c89ff	                            mov rdi, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015091	      0xe800000000	                          call 0x4015096	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015096	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      5055	dwarf.c	FUNCTION_47	FOR_1
0x401509a	      0x488d74246c	                   lea rsi, [rsp + 0x6c]	       356	dwarf.c	FUNCTION_10	CALL_1
0x401509f	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40150a1	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x40150a4	          0x4901c7	                            add r15, rax	      5055	dwarf.c	FUNCTION_47	FOR_1
0x40150a7	          0x4c89ff	                            mov rdi, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x40150aa	      0xe800000000	                          call 0x40150af	       356	dwarf.c	FUNCTION_10	CALL_1
0x40150af	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      5057	dwarf.c	FUNCTION_47	FOR_1
0x40150b3	          0x4901c7	                            add r15, rax	      5057	dwarf.c	FUNCTION_47	FOR_1
0x40150b6	          0x4d39fc	                            cmp r12, r15	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40150b9	     0xf8697f9ffff	                           jbe 0x4014a56	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40150bf	        0x4883fb01	                              cmp rbx, 1	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40150c3	        0x410fb607	                   movzx eax, byte [r15]	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40150c7	            0x7587	                           jne 0x4015050	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40150c9	            0x84c0	                             test al, al	      5059	dwarf.c	FUNCTION_47	IF_9
0x40150cb	     0xf8485f9ffff	                            je 0x4014a56	      5059	dwarf.c	FUNCTION_47	IF_9
0x40150d1	          0x4c89e6	                            mov rsi, r12	      5063	dwarf.c	FUNCTION_47	CALL_6
0x40150d4	          0x4c89ff	                            mov rdi, r15	      5063	dwarf.c	FUNCTION_47	CALL_6
0x40150d7	          0x4c29fe	                            sub rsi, r15	      5063	dwarf.c	FUNCTION_47	CALL_6
0x40150da	      0xe800000000	                          call 0x40150df	      5063	dwarf.c	FUNCTION_47	CALL_6
0x40150df	      0x498d7c0701	                lea rdi, [r15 + rax + 1]	      5063	dwarf.c	FUNCTION_47	CALL_6
0x40150e4	          0x4939fc	                            cmp r12, rdi	      5064	dwarf.c	FUNCTION_47	IF_10
0x40150e7	     0xf8669f9ffff	                           jbe 0x4014a56	      5064	dwarf.c	FUNCTION_47	IF_10
0x40150ed	      0x488d74246c	                   lea rsi, [rsp + 0x6c]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40150f2	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40150f4	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x40150f7	      0xe800000000	                          call 0x40150fc	       356	dwarf.c	FUNCTION_10	CALL_1
0x40150fc	          0x4885c0	                           test rax, rax	      5067	dwarf.c	FUNCTION_47	IF_11
0x40150ff	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015102	     0xf84aa040000	                            je 0x40155b2	      5067	dwarf.c	FUNCTION_47	IF_11
0x4015108	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      5069	dwarf.c	FUNCTION_47	FOR_2
0x401510d	        0x4883fb01	                              cmp rbx, 1	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015111	           0xfb601	                   movzx eax, byte [rcx]	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015114	            0x7651	                           jbe 0x4015167	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015116	            0x84c0	                             test al, al	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015118	            0x744d	                            je 0x4015167	      5069	dwarf.c	FUNCTION_47	FOR_2
0x401511a	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      5069	dwarf.c	FUNCTION_47	FOR_2
0x401511f	          0x4989df	                            mov r15, rbx	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015122	          0x4889cb	                            mov rbx, rcx	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015125	            0xeb0f	                           jmp 0x4015136	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015127	    0x660f1f840000	                    nop word [rax + rax]	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015130	        0x4983ff01	                              cmp r15, 1	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015134	            0x7627	                           jbe 0x401515d	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015136	          0x4c89e6	                            mov rsi, r12	      5070	dwarf.c	FUNCTION_47	CALL_8
0x4015139	          0x4889df	                            mov rdi, rbx	      5070	dwarf.c	FUNCTION_47	CALL_8
0x401513c	        0x4983ef01	                              sub r15, 1	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015140	          0x4829de	                            sub rsi, rbx	      5070	dwarf.c	FUNCTION_47	CALL_8
0x4015143	      0xe800000000	                          call 0x4015148	      5070	dwarf.c	FUNCTION_47	CALL_8
0x4015148	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	      5070	dwarf.c	FUNCTION_47	CALL_8
0x401514d	          0x4939dc	                            cmp r12, rbx	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015150	     0xf8600f9ffff	                           jbe 0x4014a56	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015156	           0xfb603	                   movzx eax, byte [rbx]	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015159	            0x84c0	                             test al, al	      5069	dwarf.c	FUNCTION_47	FOR_2
0x401515b	            0x75d3	                           jne 0x4015130	      5069	dwarf.c	FUNCTION_47	FOR_2
0x401515d	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015162	      0x48895c2448	             mov qword [rsp + 0x48], rbx	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4015167	            0x84c0	                             test al, al	      5071	dwarf.c	FUNCTION_47	IF_12
0x4015169	     0xf84e7f8ffff	                            je 0x4014a56	      5071	dwarf.c	FUNCTION_47	IF_12
0x401516f	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      5071	dwarf.c	FUNCTION_47	IF_12
0x4015174	    0x41bc00000000	                             mov r12d, 0	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x401517a	      0xe93c040000	                           jmp 0x40155bb	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x401517f	              0x90	                                     nop	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x4015180	          0x4c89f6	                            mov rsi, r14	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4015183	          0x4829de	                            sub rsi, rbx	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4015186	          0x8d46ff	                      lea eax, [rsi - 1]	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4015189	          0x83f807	                              cmp eax, 7	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x401518c	     0xf875af4ffff	                            ja 0x40145ec	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4015192	      0xe9aef4ffff	                           jmp 0x4014645	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4015197	    0x660f1f840000	                    nop word [rax + rax]	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x40151a0	          0x4c89f6	                            mov rsi, r14	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40151a3	          0x4c29e6	                            sub rsi, r12	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40151a6	          0x8d46ff	                      lea eax, [rsi - 1]	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40151a9	          0x83f807	                              cmp eax, 7	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40151ac	     0xf87bff4ffff	                            ja 0x4014671	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40151b2	      0xe93efcffff	                           jmp 0x4014df5	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40151b7	    0x660f1f840000	                    nop word [rax + rax]	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40151c0	          0x4d39ee	                            cmp r14, r13	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151c3	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151cc	     0xf86f1fcffff	                           jbe 0x4014ec3	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151d2	          0x4c89f0	                            mov rax, r14	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151d5	          0x4c29e8	                            sub rax, r13	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151d8	            0x89c6	                            mov esi, eax	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151da	          0x83e801	                              sub eax, 1	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151dd	          0x83f807	                              cmp eax, 7	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151e0	     0xf87ddfcffff	                            ja 0x4014ec3	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151e6	      0xe9cafcffff	                           jmp 0x4014eb5	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151eb	       0xf1f440000	                   nop dword [rax + rax]	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x40151f0	          0x4889df	                            mov rdi, rbx	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40151f3	      0xbe01000000	                              mov esi, 1	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40151f8	    0xff1500000000	                 call qword [0x040151fe]	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40151fe	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        90	string3.h	FUNCTION_132	CALL_6
0x4015203	          0x4889c2	                            mov rdx, rax	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4015206	        0x8944245c	             mov dword [rsp + 0x5c], eax	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401520a	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_132	CALL_6
0x401520f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_132	CALL_6
0x4015211	            0x85d2	                           test edx, edx	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x4015213	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_132	CALL_6
0x4015216	     0xf8474020000	                            je 0x4015490	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x401521c	      0xba05000000	                              mov edx, 5	      5132	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	CALL_11
0x4015221	      0xbe00000000	                              mov esi, 0	      5132	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	CALL_11
0x4015226	            0x31ff	                            xor edi, edi	      5132	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	CALL_11
0x4015228	      0xe800000000	                          call 0x401522d	      5132	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	CALL_11
0x401522d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4015232	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4015235	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4015237	      0xe800000000	                          call 0x401523c	       104	stdio2.h	CALL_16
0x401523c	    0xc74424300000	               mov dword [rsp + 0x30], 0	       104	stdio2.h	CALL_16
0x4015244	        0x498d5d01	                      lea rbx, [r13 + 1]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015248	          0x4939de	                            cmp r14, rbx	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401524b	     0xf878f000000	                            ja 0x40152e0	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015251	          0x4d39ee	                            cmp r14, r13	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015254	            0x7612	                           jbe 0x4015268	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015256	          0x4c89f6	                            mov rsi, r14	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015259	          0x4c29ee	                            sub rsi, r13	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401525c	          0x8d46ff	                      lea eax, [rsi - 1]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401525f	          0x83f807	                              cmp eax, 7	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015262	     0xf867d000000	                           jbe 0x40152e5	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015268	      0x488d442470	                   lea rax, [rsp + 0x70]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401526d	            0x31ed	                            xor ebp, ebp	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401526f	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015274	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015276	          0x488918	                    mov qword [rax], rbx	      5136	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015279	          0x4c89f1	                            mov rcx, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x401527c	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x401527f	      0xe800000000	                          call 0x4015284	       356	dwarf.c	FUNCTION_10	CALL_1
0x4015284	      0x448b6c2468	           mov r13d, dword [rsp + 0x68] 	      5138	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015289	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x401528c	      0xba05000000	                              mov edx, 5	      5140	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	CALL_13
0x4015291	          0x4901dd	                            add r13, rbx	      5138	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015294	          0x4885c0	                           test rax, rax	      5139	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	IF_6
0x4015297	            0x7567	                           jne 0x4015300	      5139	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	IF_6
0x4015299	      0xbe00000000	                              mov esi, 0	      5140	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	CALL_13
0x401529e	            0x31ff	                            xor edi, edi	      5140	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	CALL_13
0x40152a0	      0xe800000000	                          call 0x40152a5	      5140	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	CALL_13
0x40152a5	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x40152a7	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40152aa	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40152af	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40152b1	      0xe800000000	                          call 0x40152b6	       104	stdio2.h	CALL_16
0x40152b6	      0x8344243001	               add dword [rsp + 0x30], 1	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152bb	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152bf	        0x3944245c	            cmp dword [rsp + 0x5c], eax 	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152c3	     0xf857bffffff	                           jne 0x4015244	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152c9	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152ce	          0x4989c7	                            mov r15, rax	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152d1	      0x488d442470	                   lea rax, [rsp + 0x70]	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40152d6	      0x4889442430	             mov qword [rsp + 0x30], rax	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40152db	      0xe925f4ffff	                           jmp 0x4014705	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40152e0	      0xbe01000000	                              mov esi, 1	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40152e5	          0x4c89ef	                            mov rdi, r13	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152e8	    0xff1500000000	                 call qword [0x040152ee]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152ee	            0x89c5	                            mov ebp, eax	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152f0	            0x89c0	                            mov eax, eax	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152f2	      0x488d44c470	          lea rax, [rsp + rax*8 + 0x70] 	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152f7	      0xe973ffffff	                           jmp 0x401526f	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40152fc	         0xf1f4000	                         nop dword [rax]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4015300	      0xbe00000000	                              mov esi, 0	      5143	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	CALL_14
0x4015305	            0x31ff	                            xor edi, edi	      5143	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	CALL_14
0x4015307	          0x4c89eb	                            mov rbx, r13	       104	stdio2.h	CALL_16
0x401530a	      0xe800000000	                          call 0x401530f	      5143	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	CALL_14
0x401530f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4015314	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4015317	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x4015319	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401531b	      0xe800000000	                          call 0x4015320	       104	stdio2.h	CALL_16
0x4015320	      0x498d4424ff	                      lea rax, [r12 - 1]	       104	stdio2.h	CALL_16
0x4015325	      0x4c896c2410	             mov qword [rsp + 0x10], r13	       104	stdio2.h	CALL_16
0x401532a	          0x4c89ef	                            mov rdi, r13	       104	stdio2.h	CALL_16
0x401532d	      0x4889442408	                mov qword [rsp + 8], rax	       104	stdio2.h	CALL_16
0x4015332	      0x4b8d442500	                    lea rax, [r13 + r12]	       104	stdio2.h	CALL_16
0x4015337	      0x4889442418	             mov qword [rsp + 0x18], rax	       104	stdio2.h	CALL_16
0x401533c	            0xeb7f	                           jmp 0x40153bd	       104	stdio2.h	CALL_16
0x401533e	            0x6690	                                     nop	       104	stdio2.h	CALL_16
0x4015340	          0x4939de	                            cmp r14, rbx	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4015343	            0x760e	                           jbe 0x4015353	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4015345	          0x4c89f6	                            mov rsi, r14	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4015348	          0x4829de	                            sub rsi, rbx	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x401534b	          0x8d46ff	                      lea eax, [rsi - 1]	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x401534e	          0x83f807	                              cmp eax, 7	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4015351	            0x767c	                           jbe 0x40153cf	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4015353	          0x4889d8	                            mov rax, rbx	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4015356	      0x482b442410	             sub rax, qword [rsp + 0x10]	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401535b	      0x483b442408	                cmp rax, qword [rsp + 8]	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4015360	     0xf84d1020000	                            je 0x4015637	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4015366	          0x4531ed	                          xor r13d, r13d	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4015369	    0x41bf00000000	                             mov r15d, 0	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401536f	          0x4531e4	                          xor r12d, r12d	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4015372	      0xba00000000	                              mov edx, 0	      1011	dwarf.c	FUNCTION_22	IF_1
0x4015377	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4015379	          0x4c89f9	                            mov rcx, r15	       104	stdio2.h	CALL_16
0x401537c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4015381	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4015386	      0xe800000000	                          call 0x401538b	       104	stdio2.h	CALL_16
0x401538b	        0x4183fc17	                          cmp r12d, 0x17	       104	stdio2.h	CALL_16
0x401538f	     0xf87db000000	                            ja 0x4015470	       104	stdio2.h	CALL_16
0x4015395	      0xb801000000	                              mov eax, 1	       104	stdio2.h	CALL_16
0x401539a	          0x4489e1	                           mov ecx, r12d	       104	stdio2.h	CALL_16
0x401539d	          0x48d3e0	                             shl rax, cl	       104	stdio2.h	CALL_16
0x40153a0	      0xa9f8ff8000	                      test eax, 0x80fff8	       104	stdio2.h	CALL_16
0x40153a5	     0xf84c5000000	                            je 0x4015470	       104	stdio2.h	CALL_16
0x40153ab	        0x4883c301	                              add rbx, 1	       104	stdio2.h	CALL_16
0x40153af	      0x483b6c2418	            cmp rbp, qword [rsp + 0x18] 	      5144	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153b4	          0x4889ef	                            mov rdi, rbp	      5144	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153b7	     0xf8473010000	                            je 0x4015530	      5144	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153bd	        0x488d6f01	                      lea rbp, [rdi + 1]	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153c1	          0x4939ee	                            cmp r14, rbp	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153c4	     0xf8676ffffff	                           jbe 0x4015340	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153ca	      0xbe01000000	                              mov esi, 1	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153cf	    0xff1500000000	                 call qword [0x040153d5]	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153d5	          0x4889da	                            mov rdx, rbx	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40153d8	      0x482b542410	             sub rdx, qword [rsp + 0x10]	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40153dd	          0x4189c5	                           mov r13d, eax	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40153e0	      0x4839542408	                cmp qword [rsp + 8], rdx	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40153e5	    0x41ba00000000	                             mov r10d, 0	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40153eb	    0x41bf00000000	                             mov r15d, 0	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40153f1	          0x4189c4	                           mov r12d, eax	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40153f4	      0xba00000000	                              mov edx, 0	      1011	dwarf.c	FUNCTION_22	IF_1
0x40153f9	        0x4d0f45fa	                         cmovne r15, r10	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40153fd	          0x4d85ed	                           test r13, r13	      1010	dwarf.c	FUNCTION_22	IF_1
0x4015400	     0xf8471ffffff	                            je 0x4015377	      1010	dwarf.c	FUNCTION_22	IF_1
0x4015406	            0x89c7	                            mov edi, eax	      1013	dwarf.c	FUNCTION_22	CALL_1
0x4015408	      0xe800000000	                          call 0x401540d	      1013	dwarf.c	FUNCTION_22	CALL_1
0x401540d	          0x4885c0	                           test rax, rax	      1014	dwarf.c	FUNCTION_22	IF_2
0x4015410	          0x4889c2	                            mov rdx, rax	      1013	dwarf.c	FUNCTION_22	CALL_1
0x4015413	     0xf855effffff	                           jne 0x4015377	      1014	dwarf.c	FUNCTION_22	IF_2
0x4015419	      0xba05000000	                              mov edx, 5	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x401541e	      0xbe00000000	                              mov esi, 0	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x4015423	            0x31ff	                            xor edi, edi	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x4015425	      0xe800000000	                          call 0x401542a	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x401542a	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x401542f	          0x4989c0	                             mov r8, rax	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x4015432	          0x4d89e9	                             mov r9, r13	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015435	      0xb964000000	                           mov ecx, 0x64	        64	stdio2.h	FUNCTION_114	CALL_1
0x401543a	      0xbe64000000	                           mov esi, 0x64	        64	stdio2.h	FUNCTION_114	CALL_1
0x401543f	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015444	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015446	      0xe800000000	                          call 0x401544b	        64	stdio2.h	FUNCTION_114	CALL_1
0x401544b	      0xba00000000	                              mov edx, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015450	      0xe922ffffff	                           jmp 0x4015377	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015455	           0xf1f00	                         nop dword [rax]	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015458	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x401545d	      0xe800000000	                          call 0x4015462	       104	stdio2.h	CALL_16
0x4015462	          0x4939de	                            cmp r14, rbx	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x4015465	     0xf8767f1ffff	                            ja 0x40145d2	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x401546b	      0xe91af7ffff	                           jmp 0x4014b8a	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x4015470	          0x4d85ed	                           test r13, r13	      1010	dwarf.c	FUNCTION_22	IF_1
0x4015473	      0xbb00000000	                              mov ebx, 0	      1011	dwarf.c	FUNCTION_22	IF_1
0x4015478	     0xf85bc000000	                           jne 0x401553a	      1010	dwarf.c	FUNCTION_22	IF_1
0x401547e	      0xba05000000	                              mov edx, 5	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4015483	      0xbe00000000	                              mov esi, 0	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4015488	      0xe972f1ffff	                           jmp 0x40145ff	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x401548d	           0xf1f00	                         nop dword [rax]	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4015490	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4015495	      0xe800000000	                          call 0x401549a	       104	stdio2.h	CALL_16
0x401549a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       104	stdio2.h	CALL_16
0x401549f	          0x4989c7	                            mov r15, rax	       104	stdio2.h	CALL_16
0x40154a2	      0x488d442470	                   lea rax, [rsp + 0x70]	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40154a7	      0x4889442430	             mov qword [rsp + 0x30], rax	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40154ac	      0xe967f2ffff	                           jmp 0x4014718	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40154b1	          0x4c89eb	                            mov rbx, r13	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40154b4	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x40154bd	      0xe926faffff	                           jmp 0x4014ee8	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x40154c2	          0x4c89e6	                            mov rsi, r12	      5005	dwarf.c	FUNCTION_47
0x40154c5	          0x4829de	                            sub rsi, rbx	      5005	dwarf.c	FUNCTION_47
0x40154c8	          0x8d4eff	                      lea ecx, [rsi - 1]	      5005	dwarf.c	FUNCTION_47
0x40154cb	          0x83f907	                              cmp ecx, 7	      5005	dwarf.c	FUNCTION_47
0x40154ce	     0xf86b2f7ffff	                           jbe 0x4014c86	      5005	dwarf.c	FUNCTION_47
0x40154d4	      0xb904000000	                              mov ecx, 4	      5005	dwarf.c	FUNCTION_47
0x40154d9	      0xba04000000	                              mov edx, 4	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x40154de	      0xe95bfaffff	                           jmp 0x4014f3e	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x40154e3	          0x4d39fc	                            cmp r12, r15	      5009	dwarf.c	FUNCTION_47	IF_2
0x40154e6	     0xf870a010000	                            ja 0x40155f6	      5009	dwarf.c	FUNCTION_47	IF_2
0x40154ec	    0x488b05000000	            mov rax, qword [0x040154f3] 	      5009	dwarf.c	FUNCTION_47	IF_2
0x40154f3	          0x4989df	                            mov r15, rbx	      5009	dwarf.c	FUNCTION_47	IF_2
0x40154f6	      0xb90c000000	                            mov ecx, 0xc	      5009	dwarf.c	FUNCTION_47	IF_2
0x40154fb	      0xba08000000	                              mov edx, 8	      5010	dwarf.c	FUNCTION_47	IF_2
0x4015500	      0xe939faffff	                           jmp 0x4014f3e	      5010	dwarf.c	FUNCTION_47	IF_2
0x4015505	           0xf1f00	                         nop dword [rax]	      5010	dwarf.c	FUNCTION_47	IF_2
0x4015508	      0xbe02000000	                              mov esi, 2	      5022	dwarf.c	FUNCTION_47
0x401550d	      0xe95efaffff	                           jmp 0x4014f70	      5022	dwarf.c	FUNCTION_47
0x4015512	    0x660f1f440000	                    nop word [rax + rax]	      5022	dwarf.c	FUNCTION_47
0x4015518	      0xbe01000000	                              mov esi, 1	      5030	dwarf.c	FUNCTION_47
0x401551d	      0xe9aefaffff	                           jmp 0x4014fd0	      5030	dwarf.c	FUNCTION_47
0x4015522	        0x488d4804	                      lea rcx, [rax + 4]	      5030	dwarf.c	FUNCTION_47
0x4015526	      0xba04000000	                              mov edx, 4	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x401552b	      0xe994f7ffff	                           jmp 0x4014cc4	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x4015530	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x4015535	      0xe97cfdffff	                           jmp 0x40152b6	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x401553a	          0x4489e7	                           mov edi, r12d	      1013	dwarf.c	FUNCTION_22	CALL_1
0x401553d	      0xe800000000	                          call 0x4015542	      1013	dwarf.c	FUNCTION_22	CALL_1
0x4015542	          0x4885c0	                           test rax, rax	      1014	dwarf.c	FUNCTION_22	IF_2
0x4015545	          0x4889c3	                            mov rbx, rax	      1013	dwarf.c	FUNCTION_22	CALL_1
0x4015548	     0xf8530ffffff	                           jne 0x401547e	      1014	dwarf.c	FUNCTION_22	IF_2
0x401554e	      0xba05000000	                              mov edx, 5	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x4015553	      0xbe00000000	                              mov esi, 0	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x4015558	            0x31ff	                            xor edi, edi	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x401555a	      0xe800000000	                          call 0x401555f	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x401555f	          0x4d89e9	                             mov r9, r13	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015562	          0x4989c0	                             mov r8, rax	      1018	dwarf.c	FUNCTION_22	IF_2	CALL_2
0x4015565	      0xb964000000	                           mov ecx, 0x64	        64	stdio2.h	FUNCTION_114	CALL_1
0x401556a	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x401556f	      0xbe64000000	                           mov esi, 0x64	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015574	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015579	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x401557b	      0xbb00000000	                              mov ebx, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015580	      0xe800000000	                          call 0x4015585	        64	stdio2.h	FUNCTION_114	CALL_1
0x4015585	      0xe9f4feffff	                           jmp 0x401547e	        64	stdio2.h	FUNCTION_114	CALL_1
0x401558a	          0x4189d5	                           mov r13d, edx	        64	stdio2.h	FUNCTION_114	CALL_1
0x401558d	      0xbe00000000	                              mov esi, 0	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x4015592	      0xba05000000	                              mov edx, 5	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x4015597	            0x31ff	                            xor edi, edi	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x4015599	      0xe800000000	                          call 0x401559e	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x401559e	          0x4489ee	                           mov esi, r13d	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40155a1	          0x4889c7	                            mov rdi, rax	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40155a4	            0x31c0	                            xor eax, eax	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40155a6	      0xe800000000	                          call 0x40155ab	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40155ab	            0x31c0	                            xor eax, eax	      5295	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x40155ad	      0xe963f0ffff	                           jmp 0x4014615	      5295	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x40155b2	    0x41bc00000000	                             mov r12d, 0	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40155b8	          0x4c89e3	                            mov rbx, r12	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40155bb	      0xba05000000	                              mov edx, 5	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40155c0	      0xbe00000000	                              mov esi, 0	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40155c5	            0x31ff	                            xor edi, edi	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40155c7	      0xe800000000	                          call 0x40155cc	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40155cc	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x40155d0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40155d3	          0x4d89e1	                             mov r9, r12	       104	stdio2.h	CALL_16
0x40155d6	            0x4157	                                push r15	       104	stdio2.h	CALL_16
0x40155d8	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40155dc	          0x4989d8	                             mov r8, rbx	       104	stdio2.h	CALL_16
0x40155df	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x40155e3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40155e8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40155ea	      0xe800000000	                          call 0x40155ef	       104	stdio2.h	CALL_16
0x40155ef	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x40155f0	              0x59	                                 pop rcx	       104	stdio2.h	CALL_16
0x40155f1	      0xe956f3ffff	                           jmp 0x401494c	       104	stdio2.h	CALL_16
0x40155f6	          0x4c89e6	                            mov rsi, r12	      5009	dwarf.c	FUNCTION_47	IF_2
0x40155f9	          0x4c29fe	                            sub rsi, r15	      5009	dwarf.c	FUNCTION_47	IF_2
0x40155fc	          0x8d46ff	                      lea eax, [rsi - 1]	      5009	dwarf.c	FUNCTION_47	IF_2
0x40155ff	          0x83f807	                              cmp eax, 7	      5009	dwarf.c	FUNCTION_47	IF_2
0x4015602	     0xf86a7f6ffff	                           jbe 0x4014caf	      5009	dwarf.c	FUNCTION_47	IF_2
0x4015608	    0x488b05000000	            mov rax, qword [0x0401560f] 	      5009	dwarf.c	FUNCTION_47	IF_2
0x401560f	          0x4989df	                            mov r15, rbx	      5009	dwarf.c	FUNCTION_47	IF_2
0x4015612	      0xba08000000	                              mov edx, 8	      5010	dwarf.c	FUNCTION_47	IF_2
0x4015617	      0xb90c000000	                            mov ecx, 0xc	      5018	dwarf.c	FUNCTION_47	IF_3
0x401561c	      0xe91df9ffff	                           jmp 0x4014f3e	      5018	dwarf.c	FUNCTION_47	IF_3
0x4015621	    0x48c744244804	               mov qword [rsp + 0x48], 4	      5109	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x401562a	    0xc74424240400	               mov dword [rsp + 0x24], 4	      5095	dwarf.c	FUNCTION_48	WHILE_1
0x4015632	      0xe9f0f7ffff	                           jmp 0x4014e27	      5095	dwarf.c	FUNCTION_48	WHILE_1
0x4015637	      0xb900000000	                              mov ecx, 0	       104	stdio2.h	CALL_16
0x401563c	      0xba00000000	                              mov edx, 0	       104	stdio2.h	CALL_16
0x4015641	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4015646	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x401564b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401564d	          0x4531e4	                          xor r12d, r12d	       104	stdio2.h	CALL_16
0x4015650	      0xe800000000	                          call 0x4015655	       104	stdio2.h	CALL_16
0x4015655	          0x4531ed	                          xor r13d, r13d	       104	stdio2.h	CALL_16
0x4015658	      0xe938fdffff	                           jmp 0x4015395	       104	stdio2.h	CALL_16
0x401565d	            0x89c6	                            mov esi, eax	       104	stdio2.h	CALL_16
0x401565f	      0xe95ff7ffff	                           jmp 0x4014dc3	       104	stdio2.h	CALL_16
0x4015664	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       104	stdio2.h	CALL_16
0x4015669	          0x4989dd	                            mov r13, rbx	       104	stdio2.h	CALL_16
0x401566c	    0x48c744243000	               mov qword [rsp + 0x30], 0	      5098	dwarf.c	FUNCTION_48	WHILE_1
0x4015675	          0x4989c7	                            mov r15, rax	      5098	dwarf.c	FUNCTION_48	WHILE_1
0x4015678	      0xe988f0ffff	                           jmp 0x4014705	      5098	dwarf.c	FUNCTION_48	WHILE_1
0x401567d	          0x4889df	                            mov rdi, rbx	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4015680	    0xff1500000000	                 call qword [0x04015686]	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4015686	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        90	string3.h	FUNCTION_132	CALL_6
0x401568b	          0x4889c2	                            mov rdx, rax	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401568e	        0x8944245c	             mov dword [rsp + 0x5c], eax	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4015692	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_132	CALL_6
0x4015697	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_132	CALL_6
0x4015699	            0x85d2	                           test edx, edx	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x401569b	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_132	CALL_6
0x401569e	     0xf8578fbffff	                           jne 0x401521c	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x40156a4	      0xe96cf8ffff	                           jmp 0x4014f15	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x40156a9	      0xe800000000	                          call 0x40156ae	      5334	dwarf.c	FUNCTION_48
free_debug_memory	ELSE,0:WHILE,0:FOR,2:SWITCH,0:DO,0:IF,5:CALL,8:functions,0	81
0x40276a0	            0x4154	                                push r12	      9999	dwarf.c	FUNCTION_108
0x40276a2	              0x55	                                push rbp	      9999	dwarf.c	FUNCTION_108
0x40276a3	    0x488b2d000000	            mov rbp, qword [0x040276aa] 	       843	dwarf.c	FUNCTION_17	FOR_1
0x40276aa	              0x53	                                push rbx	      9999	dwarf.c	FUNCTION_108
0x40276ab	          0x4885ed	                           test rbp, rbp	       843	dwarf.c	FUNCTION_17	FOR_1
0x40276ae	            0x7431	                            je 0x40276e1	       843	dwarf.c	FUNCTION_17	FOR_1
0x40276b0	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x40276b4	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	       845	dwarf.c	FUNCTION_17	FOR_1
0x40276b8	          0x4885ff	                           test rdi, rdi	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x40276bb	            0x7414	                            je 0x40276d1	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x40276bd	           0xf1f00	                         nop dword [rax]	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x40276c0	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	       850	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x40276c4	      0xe800000000	                          call 0x40276c9	       852	dwarf.c	FUNCTION_17	FOR_1	FOR_2	CALL_1
0x40276c9	          0x4885db	                           test rbx, rbx	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x40276cc	          0x4889df	                            mov rdi, rbx	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x40276cf	            0x75ef	                           jne 0x40276c0	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x40276d1	          0x4889ef	                            mov rdi, rbp	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x40276d4	          0x4c89e5	                            mov rbp, r12	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x40276d7	      0xe800000000	                          call 0x40276dc	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x40276dc	          0x4d85e4	                           test r12, r12	       843	dwarf.c	FUNCTION_17	FOR_1
0x40276df	            0x75cf	                           jne 0x40276b0	       843	dwarf.c	FUNCTION_17	FOR_1
0x40276e1	    0x48c705000000	               mov qword [0x040276ec], 0	       860	dwarf.c	FUNCTION_17
0x40276ec	    0x48c705000000	               mov qword [0x040276f7], 0	       860	dwarf.c	FUNCTION_17
0x40276f7	            0x31db	                            xor ebx, ebx	     10004	dwarf.c	FUNCTION_108	FOR_1
0x40276f9	     0xf1f80000000	                         nop dword [rax]	     10004	dwarf.c	FUNCTION_108	FOR_1
0x4027700	            0x89df	                            mov edi, ebx	     10005	dwarf.c	FUNCTION_108	CALL_2
0x4027702	          0x83c301	                              add ebx, 1	     10004	dwarf.c	FUNCTION_108	FOR_1
0x4027705	      0xe800000000	                          call 0x402770a	     10005	dwarf.c	FUNCTION_108	CALL_2
0x402770a	          0x83fb2b	                           cmp ebx, 0x2b	     10004	dwarf.c	FUNCTION_108	FOR_1
0x402770d	            0x75f1	                           jne 0x4027700	     10004	dwarf.c	FUNCTION_108	FOR_1
0x402770f	    0x4c8b25000000	            mov r12, qword [0x04027716] 	     10007	dwarf.c	FUNCTION_108	IF_1
0x4027716	          0x4d85e4	                           test r12, r12	     10007	dwarf.c	FUNCTION_108	IF_1
0x4027719	     0xf8491000000	                            je 0x40277b0	     10007	dwarf.c	FUNCTION_108	IF_1
0x402771f	    0x8b0500000000	            mov eax, dword [0x04027725] 	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027725	          0x83e801	                              sub eax, 1	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027728	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x402772b	            0x775c	                            ja 0x4027789	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x402772d	        0x488d1440	                  lea rdx, [rax + rax*2]	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027731	      0x498d5c244c	                   lea rbx, [r12 + 0x4c]	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027736	        0x488d0490	                  lea rax, [rax + rdx*4]	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x402773a	    0x498dacc4b400	          lea rbp, [r12 + rax*8 + 0xb4] 	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027742	            0xeb14	                           jmp 0x4027758	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027744	         0xf1f4000	                         nop dword [rax]	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027748	          0x8b4318	            mov eax, dword [rbx + 0x18] 	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x402774b	            0x85c0	                           test eax, eax	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x402774d	            0x7428	                            je 0x4027777	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x402774f	        0x4883c368	                           add rbx, 0x68	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x4027753	          0x4839eb	                            cmp rbx, rbp	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027756	            0x7431	                            je 0x4027789	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027758	            0x8b13	                    mov edx, dword [rbx]	     10013	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3
0x402775a	            0x85d2	                           test edx, edx	     10013	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3
0x402775c	            0x75ea	                           jne 0x4027748	     10013	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3
0x402775e	        0x488b7be4	             mov rdi, qword [rbx - 0x1c]	     10015	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3	CALL_3
0x4027762	      0xe800000000	                          call 0x4027767	     10015	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3	CALL_3
0x4027767	        0x488b7bf4	              mov rdi, qword [rbx - 0xc]	     10016	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3	CALL_4
0x402776b	      0xe800000000	                          call 0x4027770	     10016	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3	CALL_4
0x4027770	          0x8b4318	            mov eax, dword [rbx + 0x18] 	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x4027773	            0x85c0	                           test eax, eax	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x4027775	            0x75d8	                           jne 0x402774f	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x4027777	        0x488b7b0c	              mov rdi, qword [rbx + 0xc]	     10019	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	CALL_5
0x402777b	        0x4883c368	                           add rbx, 0x68	     10019	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	CALL_5
0x402777f	      0xe800000000	                          call 0x4027784	     10019	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	CALL_5
0x4027784	          0x4839eb	                            cmp rbx, rbp	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027787	            0x75cf	                           jne 0x4027758	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4027789	          0x4c89e7	                            mov rdi, r12	     10022	dwarf.c	FUNCTION_108	IF_1	CALL_6
0x402778c	      0xe800000000	                          call 0x4027791	     10022	dwarf.c	FUNCTION_108	IF_1	CALL_6
0x4027791	    0x48c705000000	               mov qword [0x0402779c], 0	     10023	dwarf.c	FUNCTION_108	IF_1
0x402779c	    0xc70500000000	               mov dword [0x040277a6], 0	     10024	dwarf.c	FUNCTION_108	IF_1
0x40277a6	    0xc70500000000	               mov dword [0x040277b0], 0	     10024	dwarf.c	FUNCTION_108	IF_1
0x40277b0	    0x488b3d000000	            mov rdi, qword [0x040277b7] 	     10027	dwarf.c	FUNCTION_108	IF_5
0x40277b7	          0x4885ff	                           test rdi, rdi	     10027	dwarf.c	FUNCTION_108	IF_5
0x40277ba	            0x7427	                            je 0x40277e3	     10027	dwarf.c	FUNCTION_108	IF_5
0x40277bc	      0xe800000000	                          call 0x40277c1	     10029	dwarf.c	FUNCTION_108	IF_5	CALL_7
0x40277c1	    0x488b3d000000	            mov rdi, qword [0x040277c8] 	     10032	dwarf.c	FUNCTION_108	IF_5	CALL_8
0x40277c8	    0x48c705000000	               mov qword [0x040277d3], 0	     10030	dwarf.c	FUNCTION_108	IF_5
0x40277d3	      0xe800000000	                          call 0x40277d8	     10032	dwarf.c	FUNCTION_108	IF_5	CALL_8
0x40277d8	    0x48c705000000	               mov qword [0x040277e3], 0	     10033	dwarf.c	FUNCTION_108	IF_5
0x40277e3	              0x5b	                                 pop rbx	     10035	dwarf.c	FUNCTION_108
0x40277e4	              0x5d	                                 pop rbp	     10035	dwarf.c	FUNCTION_108
0x40277e5	            0x415c	                                 pop r12	     10035	dwarf.c	FUNCTION_108
0x40277e7	              0xc3	                                     ret	     10035	dwarf.c	FUNCTION_108
fetch_indexed_string	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,6:CALL,15:functions,0	117
0x4000420	              0x55	                                push rbp	       747	dwarf.c	FUNCTION_15
0x4000421	              0x53	                                push rbx	       747	dwarf.c	FUNCTION_15
0x4000422	        0x4883ec08	                              sub rsp, 8	       747	dwarf.c	FUNCTION_15
0x4000426	            0x85c9	                           test ecx, ecx	       748	dwarf.c	FUNCTION_15
0x4000428	            0x7426	                            je 0x4000450	       748	dwarf.c	FUNCTION_15
0x400042a	    0x4c8b05000000	              mov r8, qword [0x04000431]	       756	dwarf.c	FUNCTION_15	IF_1
0x4000431	        0x480faffa	                           imul rdi, rdx	       752	dwarf.c	FUNCTION_15
0x4000435	          0x4d85c0	                             test r8, r8	       756	dwarf.c	FUNCTION_15	IF_1
0x4000438	     0xf84e2000000	                            je 0x4000520	       756	dwarf.c	FUNCTION_15	IF_1
0x400043e	      0xbb22000000	                           mov ebx, 0x22	       748	dwarf.c	FUNCTION_15
0x4000443	      0xb824000000	                           mov eax, 0x24	       749	dwarf.c	FUNCTION_15
0x4000448	            0xeb24	                           jmp 0x400046e	       749	dwarf.c	FUNCTION_15
0x400044a	    0x660f1f440000	                    nop word [rax + rax]	       749	dwarf.c	FUNCTION_15
0x4000450	    0x4c8b05000000	              mov r8, qword [0x04000457]	       756	dwarf.c	FUNCTION_15	IF_1
0x4000457	        0x480faffa	                           imul rdi, rdx	       752	dwarf.c	FUNCTION_15
0x400045b	          0x4d85c0	                             test r8, r8	       756	dwarf.c	FUNCTION_15	IF_1
0x400045e	     0xf84cc000000	                            je 0x4000530	       756	dwarf.c	FUNCTION_15	IF_1
0x4000464	      0xbb0a000000	                            mov ebx, 0xa	       748	dwarf.c	FUNCTION_15
0x4000469	      0xb823000000	                           mov eax, 0x23	       749	dwarf.c	FUNCTION_15
0x400046e	          0x4885f6	                           test rsi, rsi	       760	dwarf.c	FUNCTION_15	IF_2
0x4000471	            0x7404	                            je 0x4000477	       760	dwarf.c	FUNCTION_15	IF_2
0x4000473	        0x48037e38	             add rdi, qword [rsi + 0x38]	       761	dwarf.c	FUNCTION_15	IF_2
0x4000477	          0x4889c6	                            mov rsi, rax	       762	dwarf.c	FUNCTION_15	IF_3
0x400047a	        0x48c1e007	                              shl rax, 7	       762	dwarf.c	FUNCTION_15	IF_3
0x400047e	        0x48c1e604	                              shl rsi, 4	       762	dwarf.c	FUNCTION_15	IF_3
0x4000482	          0x4829f0	                            sub rax, rsi	       762	dwarf.c	FUNCTION_15	IF_3
0x4000485	    0x483bb8000000	                    cmp rdi, qword [rax]	       762	dwarf.c	FUNCTION_15	IF_3
0x400048c	     0xf83ae000000	                           jae 0x4000540	       762	dwarf.c	FUNCTION_15	IF_3
0x4000492	          0x4889d8	                            mov rax, rbx	       769	dwarf.c	FUNCTION_15	IF_4
0x4000495	        0x48c1e307	                              shl rbx, 7	       769	dwarf.c	FUNCTION_15	IF_4
0x4000499	        0x48c1e004	                              shl rax, 4	       769	dwarf.c	FUNCTION_15	IF_4
0x400049d	          0x4829c3	                            sub rbx, rax	       769	dwarf.c	FUNCTION_15	IF_4
0x40004a0	    0x4881c3000000	                              add rbx, 0	       769	dwarf.c	FUNCTION_15	IF_4
0x40004a7	      0x48837b2000	               cmp qword [rbx + 0x20], 0	       769	dwarf.c	FUNCTION_15	IF_4
0x40004ac	            0x744a	                            je 0x40004f8	       769	dwarf.c	FUNCTION_15	IF_4
0x40004ae	          0x4c01c7	                             add rdi, r8	       773	dwarf.c	FUNCTION_15	CALL_9
0x40004b1	            0x89d6	                            mov esi, edx	       773	dwarf.c	FUNCTION_15	CALL_9
0x40004b3	    0xff1500000000	                 call qword [0x040004b9]	       773	dwarf.c	FUNCTION_15	CALL_9
0x40004b9	        0x482b4328	             sub rax, qword [rbx + 0x28]	       774	dwarf.c	FUNCTION_15
0x40004bd	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       775	dwarf.c	FUNCTION_15	IF_5
0x40004c1	          0x4839f0	                            cmp rax, rsi	       775	dwarf.c	FUNCTION_15	IF_5
0x40004c4	     0xf83c6000000	                           jae 0x4000590	       775	dwarf.c	FUNCTION_15	IF_5
0x40004ca	          0x4889c5	                            mov rbp, rax	       782	dwarf.c	FUNCTION_15
0x40004cd	        0x48036b20	             add rbp, qword [rbx + 0x20]	       782	dwarf.c	FUNCTION_15
0x40004d1	          0x4889f3	                            mov rbx, rsi	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x40004d4	          0x4829c3	                            sub rbx, rax	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x40004d7	          0x4889de	                            mov rsi, rbx	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x40004da	          0x4889ef	                            mov rdi, rbp	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x40004dd	      0xe800000000	                          call 0x40004e2	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x40004e2	          0x4839c3	                            cmp rbx, rax	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x40004e5	     0xf84e5000000	                            je 0x40005d0	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x40004eb	        0x4883c408	                              add rsp, 8	       791	dwarf.c	FUNCTION_15
0x40004ef	          0x4889e8	                            mov rax, rbp	       791	dwarf.c	FUNCTION_15
0x40004f2	              0x5b	                                 pop rbx	       791	dwarf.c	FUNCTION_15
0x40004f3	              0x5d	                                 pop rbp	       791	dwarf.c	FUNCTION_15
0x40004f4	              0xc3	                                     ret	       791	dwarf.c	FUNCTION_15
0x40004f5	           0xf1f00	                         nop dword [rax]	       791	dwarf.c	FUNCTION_15
0x40004f8	            0x85c9	                           test ecx, ecx	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x40004fa	      0xba05000000	                              mov edx, 5	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x40004ff	      0xbe00000000	                              mov esi, 0	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x4000504	            0x7505	                           jne 0x400050b	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x4000506	      0xbe00000000	                              mov esi, 0	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x400050b	        0x4883c408	                              add rsp, 8	       791	dwarf.c	FUNCTION_15
0x400050f	            0x31ff	                            xor edi, edi	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000511	              0x5b	                                 pop rbx	       791	dwarf.c	FUNCTION_15
0x4000512	              0x5d	                                 pop rbp	       791	dwarf.c	FUNCTION_15
0x4000513	      0xe900000000	                           jmp 0x4000518	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000518	     0xf1f84000000	                   nop dword [rax + rax]	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000520	      0xba05000000	                              mov edx, 5	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x4000525	      0xbe00000000	                              mov esi, 0	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x400052a	            0xebdf	                           jmp 0x400050b	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x400052c	         0xf1f4000	                         nop dword [rax]	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x4000530	      0xba05000000	                              mov edx, 5	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x4000535	      0xbe00000000	                              mov esi, 0	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x400053a	            0xebcf	                           jmp 0x400050b	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x400053c	         0xf1f4000	                         nop dword [rax]	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x4000540	          0x4889fe	                            mov rsi, rdi	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000543	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000545	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400054a	      0xe8b1fdffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400054f	      0xba05000000	                              mov edx, 5	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000554	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000557	      0xbe00000000	                              mov esi, 0	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x400055c	            0x31ff	                            xor edi, edi	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x400055e	      0xe800000000	                          call 0x4000563	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000563	          0x4889de	                            mov rsi, rbx	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000566	          0x4889c7	                            mov rdi, rax	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000569	            0x31c0	                            xor eax, eax	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x400056b	      0xe800000000	                          call 0x4000570	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000570	        0x4883c408	                              add rsp, 8	       791	dwarf.c	FUNCTION_15
0x4000574	      0xba05000000	                              mov edx, 5	       766	dwarf.c	FUNCTION_15	IF_3	CALL_6
0x4000579	      0xbe00000000	                              mov esi, 0	       766	dwarf.c	FUNCTION_15	IF_3	CALL_6
0x400057e	              0x5b	                                 pop rbx	       791	dwarf.c	FUNCTION_15
0x400057f	              0x5d	                                 pop rbp	       791	dwarf.c	FUNCTION_15
0x4000580	            0x31ff	                            xor edi, edi	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000582	      0xe900000000	                           jmp 0x4000587	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000587	    0x660f1f840000	                    nop word [rax + rax]	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000590	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000592	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000595	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400059a	      0xe861fdffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400059f	      0xba05000000	                              mov edx, 5	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005a4	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x40005a7	      0xbe00000000	                              mov esi, 0	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005ac	            0x31ff	                            xor edi, edi	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005ae	      0xe800000000	                          call 0x40005b3	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005b3	          0x4889de	                            mov rsi, rbx	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005b6	          0x4889c7	                            mov rdi, rax	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005b9	            0x31c0	                            xor eax, eax	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005bb	      0xe800000000	                          call 0x40005c0	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005c0	      0xba05000000	                              mov edx, 5	       779	dwarf.c	FUNCTION_15	IF_5	CALL_13
0x40005c5	      0xbe00000000	                              mov esi, 0	       779	dwarf.c	FUNCTION_15	IF_5	CALL_13
0x40005ca	      0xe93cffffff	                           jmp 0x400050b	       779	dwarf.c	FUNCTION_15	IF_5	CALL_13
0x40005cf	              0x90	                                     nop	       779	dwarf.c	FUNCTION_15	IF_5	CALL_13
0x40005d0	      0xba05000000	                              mov edx, 5	       788	dwarf.c	FUNCTION_15	CALL_15
0x40005d5	      0xbe00000000	                              mov esi, 0	       788	dwarf.c	FUNCTION_15	CALL_15
0x40005da	      0xe92cffffff	                           jmp 0x400050b	       788	dwarf.c	FUNCTION_15	CALL_15
parse_gnu_debugaltlink	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,3:CALL,2:functions,0	41
0x4000280	            0x4155	                                push r13	      9704	dwarf.c	FUNCTION_104
0x4000282	            0x4154	                                push r12	      9704	dwarf.c	FUNCTION_104
0x4000284	          0x4989f5	                            mov r13, rsi	      9704	dwarf.c	FUNCTION_104
0x4000287	              0x55	                                push rbp	      9704	dwarf.c	FUNCTION_104
0x4000288	              0x53	                                push rbx	      9704	dwarf.c	FUNCTION_104
0x4000289	        0x4883ec08	                              sub rsp, 8	      9704	dwarf.c	FUNCTION_104
0x400028d	        0x488b6f30	            mov rbp, qword [rdi + 0x30] 	      9714	dwarf.c	FUNCTION_104	CALL_1
0x4000291	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	      9713	dwarf.c	FUNCTION_104
0x4000295	          0x4889ee	                            mov rsi, rbp	      9714	dwarf.c	FUNCTION_104	CALL_1
0x4000298	          0x4c89e7	                            mov rdi, r12	      9714	dwarf.c	FUNCTION_104	CALL_1
0x400029b	      0xe800000000	                          call 0x40002a0	      9714	dwarf.c	FUNCTION_104	CALL_1
0x40002a0	        0x488d5801	                      lea rbx, [rax + 1]	      9714	dwarf.c	FUNCTION_104	CALL_1
0x40002a4	          0x4839dd	                            cmp rbp, rbx	      9715	dwarf.c	FUNCTION_104	IF_1
0x40002a7	            0x763f	                           jbe 0x40002e8	      9715	dwarf.c	FUNCTION_104	IF_1
0x40002a9	          0x4829dd	                            sub rbp, rbx	      9718	dwarf.c	FUNCTION_104
0x40002ac	        0x4883fd13	                           cmp rbp, 0x13	      9719	dwarf.c	FUNCTION_104	IF_2
0x40002b0	            0x7636	                           jbe 0x40002e8	      9719	dwarf.c	FUNCTION_104	IF_2
0x40002b2	      0xbe10000000	                           mov esi, 0x10	      9722	dwarf.c	FUNCTION_104	CALL_2
0x40002b7	      0xbf01000000	                              mov edi, 1	      9722	dwarf.c	FUNCTION_104	CALL_2
0x40002bc	      0xe800000000	                          call 0x40002c1	      9722	dwarf.c	FUNCTION_104	CALL_2
0x40002c1	          0x4885c0	                           test rax, rax	      9723	dwarf.c	FUNCTION_104	IF_3
0x40002c4	            0x7422	                            je 0x40002e8	      9723	dwarf.c	FUNCTION_104	IF_3
0x40002c6	          0x4c01e3	                            add rbx, r12	      9727	dwarf.c	FUNCTION_104
0x40002c9	          0x488928	                    mov qword [rax], rbp	      9726	dwarf.c	FUNCTION_104
0x40002cc	        0x49894500	                    mov qword [r13], rax	      9729	dwarf.c	FUNCTION_104
0x40002d0	        0x48895808	                mov qword [rax + 8], rbx	      9727	dwarf.c	FUNCTION_104
0x40002d4	        0x4883c408	                              add rsp, 8	      9732	dwarf.c	FUNCTION_104
0x40002d8	          0x4c89e0	                            mov rax, r12	      9731	dwarf.c	FUNCTION_104
0x40002db	              0x5b	                                 pop rbx	      9732	dwarf.c	FUNCTION_104
0x40002dc	              0x5d	                                 pop rbp	      9732	dwarf.c	FUNCTION_104
0x40002dd	            0x415c	                                 pop r12	      9732	dwarf.c	FUNCTION_104
0x40002df	            0x415d	                                 pop r13	      9732	dwarf.c	FUNCTION_104
0x40002e1	              0xc3	                                     ret	      9732	dwarf.c	FUNCTION_104
0x40002e2	    0x660f1f440000	                    nop word [rax + rax]	      9732	dwarf.c	FUNCTION_104
0x40002e8	        0x4883c408	                              add rsp, 8	      9732	dwarf.c	FUNCTION_104
0x40002ec	            0x31c0	                            xor eax, eax	      9716	dwarf.c	FUNCTION_104	IF_1
0x40002ee	              0x5b	                                 pop rbx	      9732	dwarf.c	FUNCTION_104
0x40002ef	              0x5d	                                 pop rbp	      9732	dwarf.c	FUNCTION_104
0x40002f0	            0x415c	                                 pop r12	      9732	dwarf.c	FUNCTION_104
0x40002f2	            0x415d	                                 pop r13	      9732	dwarf.c	FUNCTION_104
0x40002f4	              0xc3	                                     ret	      9732	dwarf.c	FUNCTION_104
display_debug_pubnames	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:CALL,1:functions,0	408
0x4013780	            0x4157	                                push r15	      4894	dwarf.c	FUNCTION_44
0x4013782	            0x4156	                                push r14	      4894	dwarf.c	FUNCTION_44
0x4013784	          0x4989fe	                            mov r14, rdi	      4894	dwarf.c	FUNCTION_44
0x4013787	            0x4155	                                push r13	      4894	dwarf.c	FUNCTION_44
0x4013789	            0x4154	                                push r12	      4894	dwarf.c	FUNCTION_44
0x401378b	              0x55	                                push rbp	      4894	dwarf.c	FUNCTION_44
0x401378c	              0x53	                                push rbx	      4894	dwarf.c	FUNCTION_44
0x401378d	        0x4883ec58	                           sub rsp, 0x58	      4894	dwarf.c	FUNCTION_44
0x4013791	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	      4761	dwarf.c	FUNCTION_43
0x4013795	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      4894	dwarf.c	FUNCTION_44
0x401379e	      0x48895c2448	             mov qword [rsp + 0x48], rbx	      4894	dwarf.c	FUNCTION_44
0x40137a3	            0x31db	                            xor ebx, ebx	      4894	dwarf.c	FUNCTION_44
0x40137a5	        0x48893c24	                    mov qword [rsp], rdi	      4894	dwarf.c	FUNCTION_44
0x40137a9	          0x4c89e3	                            mov rbx, r12	      4762	dwarf.c	FUNCTION_43
0x40137ac	        0x48035f30	             add rbx, qword [rdi + 0x30]	      4762	dwarf.c	FUNCTION_43
0x40137b0	          0x4889f7	                            mov rdi, rsi	      4766	dwarf.c	FUNCTION_43	CALL_1
0x40137b3	      0xe898c3ffff	                call sym.load_debug_info	      4766	dwarf.c	FUNCTION_43	CALL_1
0x40137b8	    0x8b3500000000	            mov esi, dword [0x040137be] 	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x40137be	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x40137c2	      0xba05000000	                              mov edx, 5	      2748	dwarf.c	FUNCTION_33	ELSE_2	IF_3	CALL_3
0x40137c7	            0x85f6	                           test esi, esi	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x40137c9	            0x7435	                            je 0x4013800	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x40137cb	        0x4d8b6e18	            mov r13, qword [r14 + 0x18] 	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x40137cf	          0x4d85ed	                           test r13, r13	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x40137d2	            0x742c	                            je 0x4013800	      2747	dwarf.c	FUNCTION_33	ELSE_2	IF_3
0x40137d4	            0x31ff	                            xor edi, edi	      2748	dwarf.c	FUNCTION_33	ELSE_2	IF_3	CALL_3
0x40137d6	      0xbe00000000	                              mov esi, 0	      2748	dwarf.c	FUNCTION_33	ELSE_2	IF_3	CALL_3
0x40137db	      0xe800000000	                          call 0x40137e0	      2748	dwarf.c	FUNCTION_33	ELSE_2	IF_3	CALL_3
0x40137e0	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_16
0x40137e3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40137e6	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x40137e9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40137ee	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40137f0	      0xe800000000	                          call 0x40137f5	       104	stdio2.h	CALL_16
0x40137f5	            0xeb27	                           jmp 0x401381e	       104	stdio2.h	CALL_16
0x40137f7	    0x660f1f840000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4013800	      0xbe00000000	                              mov esi, 0	      2751	dwarf.c	FUNCTION_33	ELSE_2	CALL_4
0x4013805	            0x31ff	                            xor edi, edi	      2751	dwarf.c	FUNCTION_33	ELSE_2	CALL_4
0x4013807	      0xe800000000	                          call 0x401380c	      2751	dwarf.c	FUNCTION_33	ELSE_2	CALL_4
0x401380c	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x401380f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4013812	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4013817	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4013819	      0xe800000000	                          call 0x401381e	       104	stdio2.h	CALL_16
0x401381e	          0x4939dc	                            cmp r12, rbx	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x4013821	     0xf8332020000	                           jae 0x4013a59	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x4013827	    0x660f1f840000	                    nop word [rax + rax]	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x4013830	      0x498d6c2404	                      lea rbp, [r12 + 4]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013835	          0x4839eb	                            cmp rbx, rbp	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013838	     0xf8752020000	                            ja 0x4013a90	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x401383e	          0x4c39e3	                            cmp rbx, r12	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013841	     0xf8679040000	                           jbe 0x4013cc0	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013847	          0x4889de	                            mov rsi, rbx	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x401384a	          0x4c29e6	                            sub rsi, r12	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x401384d	          0x8d46ff	                      lea eax, [rsi - 1]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013850	          0x83f807	                              cmp eax, 7	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013853	     0xf863c020000	                           jbe 0x4013a95	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013859	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x401385e	    0x41be04000000	                             mov r14d, 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x4013864	        0x488b3c24	                    mov rdi, qword [rsp]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013868	          0x4989ec	                            mov r12, rbp	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x401386b	          0x4889e8	                            mov rax, rbp	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x401386e	          0x4531ed	                          xor r13d, r13d	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013871	        0x4c2b6720	             sub r12, qword [rdi + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013875	          0x4c89e2	                            mov rdx, r12	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013878	        0x48395730	            cmp qword [rdi + 0x30], rdx 	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x401387c	     0xf827e020000	                            jb 0x4013b00	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013882	        0x488d5502	                      lea rdx, [rbp + 2]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013886	      0x4e8d642d00	                    lea r12, [rbp + r13]	      4801	dwarf.c	FUNCTION_43	WHILE_1
0x401388b	          0x4839d3	                            cmp rbx, rdx	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x401388e	     0xf871c030000	                            ja 0x4013bb0	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013894	          0x4839eb	                            cmp rbx, rbp	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013897	            0x7612	                           jbe 0x40138ab	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013899	          0x4889de	                            mov rsi, rbx	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x401389c	          0x4829c6	                            sub rsi, rax	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x401389f	          0x8d46ff	                      lea eax, [rsi - 1]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x40138a2	          0x83f807	                              cmp eax, 7	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x40138a5	     0xf860a030000	                           jbe 0x4013bb5	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x40138ab	          0x4489f5	                           mov ebp, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138ae	        0x4c8d0c2a	                     lea r9, [rdx + rbp]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138b2	          0x4c39cb	                             cmp rbx, r9	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138b5	     0xf862d040000	                           jbe 0x4013ce8	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138bb	      0xb8feffffff	                     mov eax, 0xfffffffe	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138c0	          0x4489f6	                           mov esi, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138c3	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138cb	      0x668944241e	               mov word [rsp + 0x1e], ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138d0	          0x8d46ff	                      lea eax, [rsi - 1]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138d3	          0x4531ff	                          xor r15d, r15d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138d6	          0x83f807	                              cmp eax, 7	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138d9	            0x7716	                            ja 0x40138f1	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138db	      0x4c894c2408	                 mov qword [rsp + 8], r9	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138e0	          0x4889d7	                            mov rdi, rdx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138e3	    0xff1500000000	                 call qword [0x040138e9]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138e9	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138ee	          0x4989c7	                            mov r15, rax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x40138f1	    0x8b0d00000000	            mov ecx, dword [0x040138f7] 	      4807	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x40138f7	          0x8d41ff	                      lea eax, [rcx - 1]	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x40138fa	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x40138fd	            0x775b	                            ja 0x401395a	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x40138ff	    0x488b05000000	            mov rax, qword [0x04013906] 	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013906	            0x31d2	                            xor edx, edx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013908	        0x4883c010	                           add rax, 0x10	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x401390c	         0xf1f4000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013910	          0x4c3938	                    cmp qword [rax], r15	      4730	dwarf.c	FUNCTION_41	FOR_1	IF_2
0x4013913	            0x7445	                            je 0x401395a	      4730	dwarf.c	FUNCTION_41	FOR_1	IF_2
0x4013915	          0x83c201	                              add edx, 1	      4729	dwarf.c	FUNCTION_41	FOR_1
0x4013918	        0x4883c068	                           add rax, 0x68	      4729	dwarf.c	FUNCTION_41	FOR_1
0x401391c	            0x39ca	                            cmp edx, ecx	      4729	dwarf.c	FUNCTION_41	FOR_1
0x401391e	            0x72f0	                            jb 0x4013910	      4729	dwarf.c	FUNCTION_41	FOR_1
0x4013920	        0x488b0424	                    mov rax, qword [rsp]	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013924	      0xba05000000	                              mov edx, 5	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013929	      0xbe00000000	                              mov esi, 0	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x401392e	            0x31ff	                            xor edi, edi	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013930	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013935	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013939	      0x4889442408	                mov qword [rsp + 8], rax	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x401393e	      0xe800000000	                          call 0x4013943	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013943	      0x488b542408	                mov rdx, qword [rsp + 8]	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013948	          0x4889c7	                            mov rdi, rax	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x401394b	          0x4c89fe	                            mov rsi, r15	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x401394e	            0x31c0	                            xor eax, eax	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013950	      0xe800000000	                          call 0x4013955	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x4013955	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x401395a	        0x498d0c29	                     lea rcx, [r9 + rbp]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401395e	          0x4839cb	                            cmp rbx, rcx	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013961	     0xf8799020000	                            ja 0x4013c00	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013967	          0x4531d2	                          xor r10d, r10d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401396a	          0x4c39cb	                             cmp rbx, r9	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401396d	            0x7626	                           jbe 0x4013995	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401396f	            0x89de	                            mov esi, ebx	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013971	          0x4429ce	                            sub esi, r9d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013974	          0x8d46ff	                      lea eax, [rsi - 1]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013977	          0x4531d2	                          xor r10d, r10d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401397a	          0x83f807	                              cmp eax, 7	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401397d	            0x7716	                            ja 0x4013995	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401397f	      0x48894c2408	                mov qword [rsp + 8], rcx	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013984	          0x4c89cf	                             mov rdi, r9	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013987	    0xff1500000000	                 call qword [0x0401398d]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x401398d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013992	          0x4989c2	                            mov r10, rax	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013995	            0x31ff	                            xor edi, edi	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x4013997	      0xba05000000	                              mov edx, 5	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x401399c	      0xbe00000000	                              mov esi, 0	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x40139a1	      0x48894c2408	                mov qword [rsp + 8], rcx	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x40139a6	      0x4c89542410	             mov qword [rsp + 0x10], r10	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x40139ab	      0xe800000000	                          call 0x40139b0	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x40139b0	          0x4c89ea	                            mov rdx, r13	       104	stdio2.h	CALL_16
0x40139b3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40139b6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40139bb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40139bd	      0xe800000000	                          call 0x40139c2	       104	stdio2.h	CALL_16
0x40139c2	            0x31ff	                            xor edi, edi	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x40139c4	      0xba05000000	                              mov edx, 5	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x40139c9	      0xbe00000000	                              mov esi, 0	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x40139ce	      0xe800000000	                          call 0x40139d3	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x40139d3	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40139d7	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40139da	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40139df	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40139e1	      0xe800000000	                          call 0x40139e6	       104	stdio2.h	CALL_16
0x40139e6	            0x31ff	                            xor edi, edi	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x40139e8	      0xba05000000	                              mov edx, 5	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x40139ed	      0xbe00000000	                              mov esi, 0	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x40139f2	      0xe800000000	                          call 0x40139f7	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x40139f7	          0x4c89fa	                            mov rdx, r15	       104	stdio2.h	CALL_16
0x40139fa	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40139fd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4013a02	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4013a04	      0xe800000000	                          call 0x4013a09	       104	stdio2.h	CALL_16
0x4013a09	            0x31ff	                            xor edi, edi	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x4013a0b	      0xba05000000	                              mov edx, 5	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x4013a10	      0xbe00000000	                              mov esi, 0	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x4013a15	      0xe800000000	                          call 0x4013a1a	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x4013a1a	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4013a1f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4013a22	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4013a27	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4013a29	          0x4c89d2	                            mov rdx, r10	       104	stdio2.h	CALL_16
0x4013a2c	      0xe800000000	                          call 0x4013a31	       104	stdio2.h	CALL_16
0x4013a31	    0x66837c241e01	                cmp word [rsp + 0x1e], 1	      4823	dwarf.c	FUNCTION_43	WHILE_1	IF_4
0x4013a37	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4823	dwarf.c	FUNCTION_43	WHILE_1	IF_4
0x4013a3c	     0xf86ce010000	                           jbe 0x4013c10	      4823	dwarf.c	FUNCTION_43	WHILE_1	IF_4
0x4013a42	    0x8b1500000000	            mov edx, dword [0x04013a48] 	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x4013a48	            0x85d2	                           test edx, edx	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x4013a4a	     0xf8400030000	                            je 0x4013d50	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x4013a50	          0x4c39e3	                            cmp rbx, r12	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x4013a53	     0xf87d7fdffff	                            ja 0x4013830	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x4013a59	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4013a5e	      0xe800000000	                          call 0x4013a63	       104	stdio2.h	CALL_16
0x4013a63	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      4896	dwarf.c	FUNCTION_44
0x4013a68	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4896	dwarf.c	FUNCTION_44
0x4013a71	      0xb801000000	                              mov eax, 1	      4896	dwarf.c	FUNCTION_44
0x4013a76	     0xf856f030000	                           jne 0x4013deb	      4896	dwarf.c	FUNCTION_44
0x4013a7c	        0x4883c458	                           add rsp, 0x58	      4896	dwarf.c	FUNCTION_44
0x4013a80	              0x5b	                                 pop rbx	      4896	dwarf.c	FUNCTION_44
0x4013a81	              0x5d	                                 pop rbp	      4896	dwarf.c	FUNCTION_44
0x4013a82	            0x415c	                                 pop r12	      4896	dwarf.c	FUNCTION_44
0x4013a84	            0x415d	                                 pop r13	      4896	dwarf.c	FUNCTION_44
0x4013a86	            0x415e	                                 pop r14	      4896	dwarf.c	FUNCTION_44
0x4013a88	            0x415f	                                 pop r15	      4896	dwarf.c	FUNCTION_44
0x4013a8a	              0xc3	                                     ret	      4896	dwarf.c	FUNCTION_44
0x4013a8b	       0xf1f440000	                   nop dword [rax + rax]	      4896	dwarf.c	FUNCTION_44
0x4013a90	      0xbe04000000	                              mov esi, 4	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013a95	          0x4c89e7	                            mov rdi, r12	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013a98	    0xff1500000000	                 call qword [0x04013a9e]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013a9e	          0x4989c5	                            mov r13, rax	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013aa1	      0xb8ffffffff	                     mov eax, 0xffffffff	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013aa6	          0x4939c5	                            cmp r13, rax	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013aa9	     0xf8571020000	                           jne 0x4013d20	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013aaf	        0x4983c40c	                            add r12, 0xc	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ab3	          0x4c39e3	                            cmp rbx, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ab6	     0xf87c4020000	                            ja 0x4013d80	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013abc	          0x4839eb	                            cmp rbx, rbp	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013abf	     0xf8603030000	                           jbe 0x4013dc8	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ac5	          0x4889de	                            mov rsi, rbx	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ac8	          0x4829ee	                            sub rsi, rbp	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013acb	          0x8d46ff	                      lea eax, [rsi - 1]	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ace	          0x83f807	                              cmp eax, 7	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ad1	     0xf86ae020000	                           jbe 0x4013d85	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ad7	        0x488b3c24	                    mov rdi, qword [rsp]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013adb	          0x4c89e0	                            mov rax, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013ade	          0x4531ed	                          xor r13d, r13d	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ae1	          0x4889c5	                            mov rbp, rax	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013ae4	    0x41be08000000	                             mov r14d, 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013aea	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013aef	        0x4c2b6720	             sub r12, qword [rdi + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013af3	          0x4c89e2	                            mov rdx, r12	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013af6	        0x48395730	            cmp qword [rdi + 0x30], rdx 	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013afa	     0xf8382fdffff	                           jae 0x4013882	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013b00	          0x4189ca	                           mov r10d, ecx	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013b03	    0x48631d000000	         movsxd rbx, dword [0x04013b0a] 	       217	dwarf.c	FUNCTION_3
0x4013b0a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b0f	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b15	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b1b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b20	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b25	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b2a	      0x4c89542408	                mov qword [rsp + 8], r10	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b2f	          0x4889d8	                            mov rax, rbx	       217	dwarf.c	FUNCTION_3
0x4013b32	        0x48c1e306	                              shl rbx, 6	       217	dwarf.c	FUNCTION_3
0x4013b36	          0x83c001	                              add eax, 1	       218	dwarf.c	FUNCTION_3	CALL_1
0x4013b39	    0x4881c3000000	                              add rbx, 0	       217	dwarf.c	FUNCTION_3
0x4013b40	          0x83e00f	                            and eax, 0xf	       218	dwarf.c	FUNCTION_3	CALL_1
0x4013b43	    0x890500000000	            mov dword [0x04013b49], eax 	       218	dwarf.c	FUNCTION_3	CALL_1
0x4013b49	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b4b	      0xe800000000	                          call 0x4013b50	        33	stdio2.h	FUNCTION_112	CALL_1
0x4013b50	      0x4c8d442420	                    lea r8, [rsp + 0x20]	        64	stdio2.h	FUNCTION_114	CALL_1
0x4013b55	          0x4d89e9	                             mov r9, r13	        64	stdio2.h	FUNCTION_114	CALL_1
0x4013b58	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4013b5d	          0x4889df	                            mov rdi, rbx	        64	stdio2.h	FUNCTION_114	CALL_1
0x4013b60	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4013b65	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4013b6a	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x4013b6c	      0xe800000000	                          call 0x4013b71	        64	stdio2.h	FUNCTION_114	CALL_1
0x4013b71	        0x488b0424	                    mov rax, qword [rsp]	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b75	            0x31ff	                            xor edi, edi	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b77	      0xba05000000	                              mov edx, 5	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b7c	      0xbe00000000	                              mov esi, 0	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b81	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b85	      0xe800000000	                          call 0x4013b8a	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b8a	      0x4c8b542408	                mov r10, qword [rsp + 8]	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b8f	          0x4c89e2	                            mov rdx, r12	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b92	          0x4889c7	                            mov rdi, rax	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b95	          0x4889d9	                            mov rcx, rbx	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b98	          0x4889ee	                            mov rsi, rbp	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b9b	            0x31c0	                            xor eax, eax	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013b9d	          0x4c29d2	                            sub rdx, r10	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013ba0	      0xe800000000	                          call 0x4013ba5	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013ba5	      0xe9affeffff	                           jmp 0x4013a59	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013baa	    0x660f1f440000	                    nop word [rax + rax]	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x4013bb0	      0xbe02000000	                              mov esi, 2	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013bb5	          0x4889ef	                            mov rdi, rbp	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013bb8	      0x4889542408	                mov qword [rsp + 8], rdx	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013bbd	          0x4489f5	                           mov ebp, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bc0	    0xff1500000000	                 call qword [0x04013bc6]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x4013bc6	      0x488b542408	                mov rdx, qword [rsp + 8]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bcb	           0xfb7f8	                           movzx edi, ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bce	          0x83e802	                              sub eax, 2	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bd1	        0x897c2418	             mov dword [rsp + 0x18], edi	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bd5	      0x668944241e	               mov word [rsp + 0x1e], ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bda	        0x4c8d0c2a	                     lea r9, [rdx + rbp]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bde	          0x4c39cb	                             cmp rbx, r9	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013be1	     0xf8731010000	                            ja 0x4013d18	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013be7	          0x4839d3	                            cmp rbx, rdx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bea	     0xf860a010000	                           jbe 0x4013cfa	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bf0	            0x89de	                            mov esi, ebx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bf2	            0x29d6	                            sub esi, edx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bf4	      0xe9d7fcffff	                           jmp 0x40138d0	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013bf9	     0xf1f80000000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013c00	          0x4489f6	                           mov esi, r14d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013c03	      0xe96cfdffff	                           jmp 0x4013974	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013c08	     0xf1f84000000	                   nop dword [rax + rax]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013c10	      0xba05000000	                              mov edx, 5	      4839	dwarf.c	FUNCTION_43	WHILE_1	CALL_16
0x4013c15	      0xbe00000000	                              mov esi, 0	      4839	dwarf.c	FUNCTION_43	WHILE_1	CALL_16
0x4013c1a	            0x31ff	                            xor edi, edi	      4839	dwarf.c	FUNCTION_43	WHILE_1	CALL_16
0x4013c1c	      0x48894c2408	                mov qword [rsp + 8], rcx	      4839	dwarf.c	FUNCTION_43	WHILE_1	CALL_16
0x4013c21	      0xe800000000	                          call 0x4013c26	      4839	dwarf.c	FUNCTION_43	WHILE_1	CALL_16
0x4013c26	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4013c2b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4013c2e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4013c30	      0xe800000000	                          call 0x4013c35	       104	stdio2.h	CALL_16
0x4013c35	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       104	stdio2.h	CALL_16
0x4013c3a	            0xeb75	                           jmp 0x4013cb1	       104	stdio2.h	CALL_16
0x4013c3c	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4013c40	          0x4839cb	                            cmp rbx, rcx	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c43	     0xf8607feffff	                           jbe 0x4013a50	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c49	            0x89de	                            mov esi, ebx	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c4b	            0x29ce	                            sub esi, ecx	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c4d	          0x8d46ff	                      lea eax, [rsi - 1]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c50	          0x83f807	                              cmp eax, 7	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c53	     0xf87f7fdffff	                            ja 0x4013a50	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c59	          0x4889cf	                            mov rdi, rcx	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c5c	    0xff1500000000	                 call qword [0x04013c62]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c62	          0x4885c0	                           test rax, rax	      4848	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_7
0x4013c65	          0x4889c2	                            mov rdx, rax	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c68	     0xf84e2fdffff	                            je 0x4013a50	      4848	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_7
0x4013c6e	          0x4c39eb	                            cmp rbx, r13	      4852	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_8
0x4013c71	     0xf86d9fdffff	                           jbe 0x4013a50	      4852	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_8
0x4013c77	          0x4989d9	                             mov r9, rbx	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c7a	          0x4d89e8	                             mov r8, r13	       104	stdio2.h	CALL_16
0x4013c7d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4013c82	          0x4d29e9	                             sub r9, r13	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c85	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4013c8a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4013c8c	        0x4d8d79ff	                       lea r15, [r9 - 1]	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013c90	          0x4489f9	                           mov ecx, r15d	       104	stdio2.h	CALL_16
0x4013c93	      0xe800000000	                          call 0x4013c98	       104	stdio2.h	CALL_16
0x4013c98	          0x4c89fe	                            mov rsi, r15	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x4013c9b	          0x4c89ef	                            mov rdi, r13	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x4013c9e	      0xe800000000	                          call 0x4013ca3	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x4013ca3	      0x498d4c0501	                lea rcx, [r13 + rax + 1]	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x4013ca8	          0x4839cb	                            cmp rbx, rcx	      4883	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_10
0x4013cab	     0xf869ffdffff	                           jbe 0x4013a50	      4883	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_10
0x4013cb1	        0x4c8d2c29	                    lea r13, [rcx + rbp]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013cb5	          0x4c39eb	                            cmp rbx, r13	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013cb8	            0x7686	                           jbe 0x4013c40	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013cba	          0x4489f6	                           mov esi, r14d	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013cbd	            0xeb8e	                           jmp 0x4013c4d	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013cbf	              0x90	                                     nop	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x4013cc0	        0x488b3c24	                    mov rdi, qword [rsp]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013cc4	          0x4989ec	                            mov r12, rbp	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013cc7	          0x4889e8	                            mov rax, rbp	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013cca	    0x41be04000000	                             mov r14d, 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x4013cd0	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x4013cd5	          0x4531ed	                          xor r13d, r13d	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x4013cd8	        0x4c2b6720	             sub r12, qword [rdi + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013cdc	          0x4c89e2	                            mov rdx, r12	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013cdf	      0xe994fbffff	                           jmp 0x4013878	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013ce4	         0xf1f4000	                         nop dword [rax]	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013ce8	      0xb9feffffff	                     mov ecx, 0xfffffffe	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013ced	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013cf5	      0x66894c241e	               mov word [rsp + 0x1e], cx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013cfa	    0x8b0d00000000	            mov ecx, dword [0x04013d00] 	      4807	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013d00	          0x8d41ff	                      lea eax, [rcx - 1]	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013d03	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013d06	     0xf87a4000000	                            ja 0x4013db0	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x4013d0c	          0x4531ff	                          xor r15d, r15d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013d0f	      0xe9ebfbffff	                           jmp 0x40138ff	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013d14	         0xf1f4000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013d18	          0x4489f6	                           mov esi, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013d1b	      0xe9b0fbffff	                           jmp 0x40138d0	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013d20	    0x41ba04000000	                             mov r10d, 4	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013d26	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x4013d2b	    0x41be04000000	                             mov r14d, 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x4013d31	        0x488b3c24	                    mov rdi, qword [rsp]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013d35	          0x4989ec	                            mov r12, rbp	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013d38	          0x4889e8	                            mov rax, rbp	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013d3b	        0x4c2b6720	             sub r12, qword [rdi + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x4013d3f	          0x4c89e2	                            mov rdx, r12	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013d42	          0x4c01ea	                            add rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013d45	     0xf832dfbffff	                           jae 0x4013878	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013d4b	      0xe9b3fdffff	                           jmp 0x4013b03	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x4013d50	      0xba05000000	                              mov edx, 5	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x4013d55	      0xbe00000000	                              mov esi, 0	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x4013d5a	            0x31ff	                            xor edi, edi	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x4013d5c	      0xe800000000	                          call 0x4013d61	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x4013d61	          0x4889c7	                            mov rdi, rax	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x4013d64	            0x31c0	                            xor eax, eax	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x4013d66	      0xe800000000	                          call 0x4013d6b	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x4013d6b	    0xc70500000000	               mov dword [0x04013d75], 1	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x4013d75	      0xe9d6fcffff	                           jmp 0x4013a50	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x4013d7a	    0x660f1f440000	                    nop word [rax + rax]	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x4013d80	      0xbe08000000	                              mov esi, 8	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013d85	          0x4889ef	                            mov rdi, rbp	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013d88	    0x41be08000000	                             mov r14d, 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013d8e	          0x4c89e5	                            mov rbp, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013d91	    0xff1500000000	                 call qword [0x04013d97]	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013d97	    0x41ba0c000000	                           mov r10d, 0xc	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013d9d	          0x4989c5	                            mov r13, rax	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013da0	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013da5	            0xeb8a	                           jmp 0x4013d31	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013da7	    0x660f1f840000	                    nop word [rax + rax]	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013db0	        0x498d0c29	                     lea rcx, [r9 + rbp]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013db4	          0x4839cb	                            cmp rbx, rcx	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013db7	            0x7627	                           jbe 0x4013de0	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013db9	          0x4489f6	                           mov esi, r14d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013dbc	          0x4531ff	                          xor r15d, r15d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013dbf	      0xe9b0fbffff	                           jmp 0x4013974	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013dc4	         0xf1f4000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013dc8	          0x4c89e5	                            mov rbp, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013dcb	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013dd0	    0x41be08000000	                             mov r14d, 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013dd6	      0xe989faffff	                           jmp 0x4013864	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013ddb	       0xf1f440000	                   nop dword [rax + rax]	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x4013de0	          0x4531d2	                          xor r10d, r10d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x4013de3	          0x4531ff	                          xor r15d, r15d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013de6	      0xe9aafbffff	                           jmp 0x4013995	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x4013deb	      0xe800000000	     call sym.display_debug_gnu_pubnames	      4896	dwarf.c	FUNCTION_44
load_separate_debug_info	ELSE,0:WHILE,0:FOR,1:SWITCH,0:DO,0:IF,12:CALL,49:functions,0	307
0x40005e0	            0x4157	                                push r15	      9740	dwarf.c	FUNCTION_105
0x40005e2	            0x4156	                                push r14	      9740	dwarf.c	FUNCTION_105
0x40005e4	          0x4989ce	                            mov r14, rcx	      9740	dwarf.c	FUNCTION_105
0x40005e7	            0x4155	                                push r13	      9740	dwarf.c	FUNCTION_105
0x40005e9	            0x4154	                                push r12	      9740	dwarf.c	FUNCTION_105
0x40005eb	          0x4989fd	                            mov r13, rdi	      9740	dwarf.c	FUNCTION_105
0x40005ee	              0x55	                                push rbp	      9740	dwarf.c	FUNCTION_105
0x40005ef	              0x53	                                push rbx	      9740	dwarf.c	FUNCTION_105
0x40005f0	          0x4889f3	                            mov rbx, rsi	      9740	dwarf.c	FUNCTION_105
0x40005f3	          0x4d89c4	                             mov r12, r8	      9740	dwarf.c	FUNCTION_105
0x40005f6	          0x4c89c6	                             mov rsi, r8	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x40005f9	          0x4889df	                            mov rdi, rbx	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x40005fc	        0x4883ec18	                           sub rsp, 0x18	      9740	dwarf.c	FUNCTION_105
0x4000600	            0xffd2	                                call rdx	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x4000602	          0x4885c0	                           test rax, rax	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x4000605	     0xf84ed030000	                            je 0x40009f8	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x400060b	          0x4c89ef	                            mov rdi, r13	      9757	dwarf.c	FUNCTION_105	CALL_4
0x400060e	          0x4889c5	                            mov rbp, rax	      9757	dwarf.c	FUNCTION_105	CALL_4
0x4000611	      0xe800000000	                          call 0x4000616	      9757	dwarf.c	FUNCTION_105	CALL_4
0x4000616	          0x4889c7	                            mov rdi, rax	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000619	          0x4989c7	                            mov r15, rax	      9757	dwarf.c	FUNCTION_105	CALL_4
0x400061c	      0xe800000000	                          call 0x4000621	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000621	          0x4885c0	                           test rax, rax	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000624	     0xf84fc030000	                            je 0x4000a26	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x400062a	    0x41807c07ff2f	         cmp byte [r15 + rax - 1], 0x2f 	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000630	        0x488d58ff	                      lea rbx, [rax - 1]	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000634	            0x7519	                           jne 0x400064f	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000636	      0xe9f2030000	                           jmp 0x4000a2d	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x400063b	       0xf1f440000	                   nop dword [rax + rax]	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000640	    0x41807c1fff2f	         cmp byte [r15 + rbx - 1], 0x2f 	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000646	        0x488d43ff	                      lea rax, [rbx - 1]	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x400064a	            0x7408	                            je 0x4000654	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x400064c	          0x4889c3	                            mov rbx, rax	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x400064f	          0x4885db	                           test rbx, rbx	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000652	            0x75ec	                           jne 0x4000640	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000654	      0x41c6041f00	                 mov byte [r15 + rbx], 0	      9762	dwarf.c	FUNCTION_105
0x4000659	          0x4889ef	                            mov rdi, rbp	      9783	dwarf.c	FUNCTION_105	CALL_12
0x400065c	      0xe800000000	                          call 0x4000661	      9783	dwarf.c	FUNCTION_105	CALL_12
0x4000661	      0x488d7c0333	            lea rdi, [rbx + rax + 0x33] 	      9774	dwarf.c	FUNCTION_105	CALL_8
0x4000666	      0x4889442408	                mov qword [rsp + 8], rax	      9774	dwarf.c	FUNCTION_105	CALL_8
0x400066b	      0xe800000000	                          call 0x4000670	      9774	dwarf.c	FUNCTION_105	CALL_8
0x4000670	          0x4885c0	                           test rax, rax	      9785	dwarf.c	FUNCTION_105	IF_3
0x4000673	          0x4889c3	                            mov rbx, rax	      9774	dwarf.c	FUNCTION_105	CALL_8
0x4000676	      0x488b542408	                mov rdx, qword [rsp + 8]	      9785	dwarf.c	FUNCTION_105	IF_3
0x400067b	     0xf84da030000	                            je 0x4000a5b	      9785	dwarf.c	FUNCTION_105	IF_3
0x4000681	        0x4883c201	                              add rdx, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000685	          0x4889ee	                            mov rsi, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000688	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_112	CALL_1
0x400068b	      0xe800000000	                          call 0x4000690	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000690	          0x4c89e6	                            mov rsi, r12	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x4000693	          0x4889df	                            mov rdi, rbx	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x4000696	          0x41ffd6	                                call r14	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x4000699	            0x85c0	                           test eax, eax	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x400069b	            0x7473	                            je 0x4000710	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x400069d	          0x4c89ff	                            mov rdi, r15	      9866	dwarf.c	FUNCTION_105	CALL_44
0x40006a0	      0xe800000000	                          call 0x40006a5	      9866	dwarf.c	FUNCTION_105	CALL_44
0x40006a5	          0x4889df	                            mov rdi, rbx	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x40006a8	      0xe800000000	                          call 0x40006ad	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x40006ad	          0x4885c0	                           test rax, rax	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x40006b0	          0x4889c5	                            mov rbp, rax	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x40006b3	    0x488905000000	            mov qword [0x040006ba], rax 	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x40006ba	      0xba05000000	                              mov edx, 5	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x40006bf	     0xf8470030000	                            je 0x4000a35	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x40006c5	      0xbe00000000	                              mov esi, 0	      9879	dwarf.c	FUNCTION_105	CALL_49
0x40006ca	            0x31ff	                            xor edi, edi	      9879	dwarf.c	FUNCTION_105	CALL_49
0x40006cc	      0xe800000000	                          call 0x40006d1	      9879	dwarf.c	FUNCTION_105	CALL_49
0x40006d1	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_16
0x40006d4	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40006d7	          0x4c89ea	                            mov rdx, r13	       104	stdio2.h	CALL_16
0x40006da	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40006df	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40006e1	      0xe800000000	                          call 0x40006e6	       104	stdio2.h	CALL_16
0x40006e6	    0x488b2d000000	            mov rbp, qword [0x040006ed] 	      9884	dwarf.c	FUNCTION_105
0x40006ed	    0x48891d000000	            mov qword [0x040006f4], rbx 	      9880	dwarf.c	FUNCTION_105
0x40006f4	        0x4883c418	                           add rsp, 0x18	      9885	dwarf.c	FUNCTION_105
0x40006f8	          0x4889e8	                            mov rax, rbp	      9885	dwarf.c	FUNCTION_105
0x40006fb	              0x5b	                                 pop rbx	      9885	dwarf.c	FUNCTION_105
0x40006fc	              0x5d	                                 pop rbp	      9885	dwarf.c	FUNCTION_105
0x40006fd	            0x415c	                                 pop r12	      9885	dwarf.c	FUNCTION_105
0x40006ff	            0x415d	                                 pop r13	      9885	dwarf.c	FUNCTION_105
0x4000701	            0x415e	                                 pop r14	      9885	dwarf.c	FUNCTION_105
0x4000703	            0x415f	                                 pop r15	      9885	dwarf.c	FUNCTION_105
0x4000705	              0xc3	                                     ret	      9885	dwarf.c	FUNCTION_105
0x4000706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9885	dwarf.c	FUNCTION_105
0x4000710	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000713	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000718	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400071f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000724	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000727	      0xe800000000	                          call 0x400072c	        33	stdio2.h	FUNCTION_112	CALL_1
0x400072c	          0x4c89e6	                            mov rsi, r12	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x400072f	          0x4889df	                            mov rdi, rbx	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x4000732	          0x41ffd6	                                call r14	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x4000735	            0x85c0	                           test eax, eax	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x4000737	     0xf8560ffffff	                           jne 0x400069d	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x400073d	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000740	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000743	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000748	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400074f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000754	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000757	      0xe800000000	                          call 0x400075c	        33	stdio2.h	FUNCTION_112	CALL_1
0x400075c	          0x4c89e6	                            mov rsi, r12	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x400075f	          0x4889df	                            mov rdi, rbx	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x4000762	          0x41ffd6	                                call r14	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x4000765	            0x85c0	                           test eax, eax	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x4000767	     0xf8530ffffff	                           jne 0x400069d	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x400076d	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000770	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000773	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000778	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400077f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000784	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000787	      0xe800000000	                          call 0x400078c	        33	stdio2.h	FUNCTION_112	CALL_1
0x400078c	          0x4c89e6	                            mov rsi, r12	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x400078f	          0x4889df	                            mov rdi, rbx	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x4000792	          0x41ffd6	                                call r14	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x4000795	            0x85c0	                           test eax, eax	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x4000797	     0xf8500ffffff	                           jne 0x400069d	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x400079d	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007a0	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007a6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007ab	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007b2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007b7	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007ba	      0xe800000000	                          call 0x40007bf	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007bf	          0x4c89e6	                            mov rsi, r12	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x40007c2	          0x4889df	                            mov rdi, rbx	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x40007c5	          0x41ffd6	                                call r14	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x40007c8	            0x85c0	                           test eax, eax	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x40007ca	     0xf85cdfeffff	                           jne 0x400069d	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x40007d0	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007d3	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007d9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007de	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007e5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007ea	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007ed	      0xe800000000	                          call 0x40007f2	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007f2	          0x4c89e6	                            mov rsi, r12	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x40007f5	          0x4889df	                            mov rdi, rbx	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x40007f8	          0x41ffd6	                                call r14	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x40007fb	            0x85c0	                           test eax, eax	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x40007fd	     0xf859afeffff	                           jne 0x400069d	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x4000803	    0x48b82f6c6962	          movabs rax, 0x6265642f62696c2f	       110	string3.h	FUNCTION_135	CALL_3
0x400080d	        0x488d7b0b	                    lea rdi, [rbx + 0xb]	       148	string3.h	FUNCTION_139	CALL_3
0x4000811	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_139	CALL_3
0x4000814	          0x488903	                    mov qword [rbx], rax	       110	string3.h	FUNCTION_135	CALL_3
0x4000817	      0xb875670000	                         mov eax, 0x6775	       110	string3.h	FUNCTION_135	CALL_3
0x400081c	        0xc6430a2f	              mov byte [rbx + 0xa], 0x2f	       148	string3.h	FUNCTION_139	CALL_3
0x4000820	        0x66894308	                  mov word [rbx + 8], ax	       110	string3.h	FUNCTION_135	CALL_3
0x4000824	      0xe800000000	                          call 0x4000829	       148	string3.h	FUNCTION_139	CALL_3
0x4000829	          0x4c89e6	                            mov rsi, r12	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x400082c	          0x4889df	                            mov rdi, rbx	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x400082f	          0x41ffd6	                                call r14	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x4000832	            0x85c0	                           test eax, eax	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x4000834	     0xf8563feffff	                           jne 0x400069d	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x400083a	      0xba05000000	                              mov edx, 5	      9836	dwarf.c	FUNCTION_105	CALL_27
0x400083f	            0x31ff	                            xor edi, edi	      9836	dwarf.c	FUNCTION_105	CALL_27
0x4000841	      0xbe00000000	                              mov esi, 0	      9836	dwarf.c	FUNCTION_105	CALL_27
0x4000846	      0xe800000000	                          call 0x400084b	      9836	dwarf.c	FUNCTION_105	CALL_27
0x400084b	          0x4889ee	                            mov rsi, rbp	      9836	dwarf.c	FUNCTION_105	CALL_27
0x400084e	          0x4889c7	                            mov rdi, rax	      9836	dwarf.c	FUNCTION_105	CALL_27
0x4000851	            0x31c0	                            xor eax, eax	      9836	dwarf.c	FUNCTION_105	CALL_27
0x4000853	      0xe800000000	                          call 0x4000858	      9836	dwarf.c	FUNCTION_105	CALL_27
0x4000858	      0xba05000000	                              mov edx, 5	      9837	dwarf.c	FUNCTION_105	CALL_29
0x400085d	            0x31ff	                            xor edi, edi	      9837	dwarf.c	FUNCTION_105	CALL_29
0x400085f	      0xbe00000000	                              mov esi, 0	      9837	dwarf.c	FUNCTION_105	CALL_29
0x4000864	      0xe800000000	                          call 0x4000869	      9837	dwarf.c	FUNCTION_105	CALL_29
0x4000869	          0x4889de	                            mov rsi, rbx	      9837	dwarf.c	FUNCTION_105	CALL_29
0x400086c	          0x4889c7	                            mov rdi, rax	      9837	dwarf.c	FUNCTION_105	CALL_29
0x400086f	            0x31c0	                            xor eax, eax	      9837	dwarf.c	FUNCTION_105	CALL_29
0x4000871	      0xe800000000	                          call 0x4000876	      9837	dwarf.c	FUNCTION_105	CALL_29
0x4000876	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000879	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x400087f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000884	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400088b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000890	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000893	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000895	      0xe800000000	                          call 0x400089a	        33	stdio2.h	FUNCTION_112	CALL_1
0x400089a	      0xba05000000	                              mov edx, 5	      9841	dwarf.c	FUNCTION_105	CALL_31
0x400089f	            0x31ff	                            xor edi, edi	      9841	dwarf.c	FUNCTION_105	CALL_31
0x40008a1	      0xbe00000000	                              mov esi, 0	      9841	dwarf.c	FUNCTION_105	CALL_31
0x40008a6	      0xe800000000	                          call 0x40008ab	      9841	dwarf.c	FUNCTION_105	CALL_31
0x40008ab	          0x4889de	                            mov rsi, rbx	      9841	dwarf.c	FUNCTION_105	CALL_31
0x40008ae	          0x4889c7	                            mov rdi, rax	      9841	dwarf.c	FUNCTION_105	CALL_31
0x40008b1	            0x31c0	                            xor eax, eax	      9841	dwarf.c	FUNCTION_105	CALL_31
0x40008b3	      0xe800000000	                          call 0x40008b8	      9841	dwarf.c	FUNCTION_105	CALL_31
0x40008b8	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008bb	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008c1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008c6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008cd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008d2	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008d5	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008d7	      0xe800000000	                          call 0x40008dc	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008dc	      0xba05000000	                              mov edx, 5	      9846	dwarf.c	FUNCTION_105	CALL_33
0x40008e1	            0x31ff	                            xor edi, edi	      9846	dwarf.c	FUNCTION_105	CALL_33
0x40008e3	      0xbe00000000	                              mov esi, 0	      9846	dwarf.c	FUNCTION_105	CALL_33
0x40008e8	      0xe800000000	                          call 0x40008ed	      9846	dwarf.c	FUNCTION_105	CALL_33
0x40008ed	          0x4889de	                            mov rsi, rbx	      9846	dwarf.c	FUNCTION_105	CALL_33
0x40008f0	          0x4889c7	                            mov rdi, rax	      9846	dwarf.c	FUNCTION_105	CALL_33
0x40008f3	            0x31c0	                            xor eax, eax	      9846	dwarf.c	FUNCTION_105	CALL_33
0x40008f5	      0xe800000000	                          call 0x40008fa	      9846	dwarf.c	FUNCTION_105	CALL_33
0x40008fa	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40008fd	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000900	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000905	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400090c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000911	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000914	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000916	      0xe800000000	                          call 0x400091b	        33	stdio2.h	FUNCTION_112	CALL_1
0x400091b	      0xba05000000	                              mov edx, 5	      9850	dwarf.c	FUNCTION_105	CALL_35
0x4000920	            0x31ff	                            xor edi, edi	      9850	dwarf.c	FUNCTION_105	CALL_35
0x4000922	      0xbe00000000	                              mov esi, 0	      9850	dwarf.c	FUNCTION_105	CALL_35
0x4000927	      0xe800000000	                          call 0x400092c	      9850	dwarf.c	FUNCTION_105	CALL_35
0x400092c	          0x4889de	                            mov rsi, rbx	      9850	dwarf.c	FUNCTION_105	CALL_35
0x400092f	          0x4889c7	                            mov rdi, rax	      9850	dwarf.c	FUNCTION_105	CALL_35
0x4000932	            0x31c0	                            xor eax, eax	      9850	dwarf.c	FUNCTION_105	CALL_35
0x4000934	      0xe800000000	                          call 0x4000939	      9850	dwarf.c	FUNCTION_105	CALL_35
0x4000939	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x400093c	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_112	CALL_1
0x400093f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000944	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400094b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000950	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000953	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000955	      0xe800000000	                          call 0x400095a	        33	stdio2.h	FUNCTION_112	CALL_1
0x400095a	      0xba05000000	                              mov edx, 5	      9853	dwarf.c	FUNCTION_105	CALL_37
0x400095f	            0x31ff	                            xor edi, edi	      9853	dwarf.c	FUNCTION_105	CALL_37
0x4000961	      0xbe00000000	                              mov esi, 0	      9853	dwarf.c	FUNCTION_105	CALL_37
0x4000966	      0xe800000000	                          call 0x400096b	      9853	dwarf.c	FUNCTION_105	CALL_37
0x400096b	          0x4889de	                            mov rsi, rbx	      9853	dwarf.c	FUNCTION_105	CALL_37
0x400096e	          0x4889c7	                            mov rdi, rax	      9853	dwarf.c	FUNCTION_105	CALL_37
0x4000971	            0x31c0	                            xor eax, eax	      9853	dwarf.c	FUNCTION_105	CALL_37
0x4000973	      0xe800000000	                          call 0x4000978	      9853	dwarf.c	FUNCTION_105	CALL_37
0x4000978	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x400097a	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x400097d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000982	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000989	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x400098e	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000991	      0xe800000000	                          call 0x4000996	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000996	      0xba05000000	                              mov edx, 5	      9856	dwarf.c	FUNCTION_105	CALL_39
0x400099b	      0xbe00000000	                              mov esi, 0	      9856	dwarf.c	FUNCTION_105	CALL_39
0x40009a0	            0x31ff	                            xor edi, edi	      9856	dwarf.c	FUNCTION_105	CALL_39
0x40009a2	      0xe800000000	                          call 0x40009a7	      9856	dwarf.c	FUNCTION_105	CALL_39
0x40009a7	          0x4889de	                            mov rsi, rbx	      9856	dwarf.c	FUNCTION_105	CALL_39
0x40009aa	          0x4889c7	                            mov rdi, rax	      9856	dwarf.c	FUNCTION_105	CALL_39
0x40009ad	            0x31c0	                            xor eax, eax	      9856	dwarf.c	FUNCTION_105	CALL_39
0x40009af	      0xe800000000	                          call 0x40009b4	      9856	dwarf.c	FUNCTION_105	CALL_39
0x40009b4	          0x4889ee	                            mov rsi, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009b7	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009ba	            0x31ed	                            xor ebp, ebp	      9863	dwarf.c	FUNCTION_105
0x40009bc	      0xe800000000	                          call 0x40009c1	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009c1	      0xba05000000	                              mov edx, 5	      9859	dwarf.c	FUNCTION_105	CALL_41
0x40009c6	      0xbe00000000	                              mov esi, 0	      9859	dwarf.c	FUNCTION_105	CALL_41
0x40009cb	            0x31ff	                            xor edi, edi	      9859	dwarf.c	FUNCTION_105	CALL_41
0x40009cd	      0xe800000000	                          call 0x40009d2	      9859	dwarf.c	FUNCTION_105	CALL_41
0x40009d2	          0x4889de	                            mov rsi, rbx	      9859	dwarf.c	FUNCTION_105	CALL_41
0x40009d5	          0x4889c7	                            mov rdi, rax	      9859	dwarf.c	FUNCTION_105	CALL_41
0x40009d8	            0x31c0	                            xor eax, eax	      9859	dwarf.c	FUNCTION_105	CALL_41
0x40009da	      0xe800000000	                          call 0x40009df	      9859	dwarf.c	FUNCTION_105	CALL_41
0x40009df	          0x4c89ff	                            mov rdi, r15	      9861	dwarf.c	FUNCTION_105	CALL_42
0x40009e2	      0xe800000000	                          call 0x40009e7	      9861	dwarf.c	FUNCTION_105	CALL_42
0x40009e7	          0x4889df	                            mov rdi, rbx	      9862	dwarf.c	FUNCTION_105	CALL_43
0x40009ea	      0xe800000000	                          call 0x40009ef	      9862	dwarf.c	FUNCTION_105	CALL_43
0x40009ef	      0xe900fdffff	                           jmp 0x40006f4	      9863	dwarf.c	FUNCTION_105
0x40009f4	         0xf1f4000	                         nop dword [rax]	      9863	dwarf.c	FUNCTION_105
0x40009f8	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      9750	dwarf.c	FUNCTION_105	IF_1
0x40009fc	          0x4885ed	                           test rbp, rbp	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x40009ff	            0x747c	                            je 0x4000a7d	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a01	      0xba05000000	                              mov edx, 5	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a06	      0xbe00000000	                              mov esi, 0	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a0b	            0x31ff	                            xor edi, edi	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a0d	      0xe800000000	                          call 0x4000a12	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a12	          0x4889ee	                            mov rsi, rbp	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a15	          0x4889c7	                            mov rdi, rax	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a18	            0x31c0	                            xor eax, eax	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a1a	      0xe800000000	                          call 0x4000a1f	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a1f	            0x31ed	                            xor ebp, ebp	      9751	dwarf.c	FUNCTION_105	IF_1
0x4000a21	      0xe9cefcffff	                           jmp 0x40006f4	      9751	dwarf.c	FUNCTION_105	IF_1
0x4000a26	            0x31db	                            xor ebx, ebx	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000a28	      0xe927fcffff	                           jmp 0x4000654	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000a2d	          0x4889c3	                            mov rbx, rax	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000a30	      0xe91ffcffff	                           jmp 0x4000654	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000a35	            0x31ff	                            xor edi, edi	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000a37	      0xbe00000000	                              mov esi, 0	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000a3c	      0xe800000000	                          call 0x4000a41	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000a41	          0x4889de	                            mov rsi, rbx	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000a44	          0x4889c7	                            mov rdi, rax	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000a47	            0x31c0	                            xor eax, eax	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000a49	      0xe800000000	                          call 0x4000a4e	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000a4e	          0x4889df	                            mov rdi, rbx	      9872	dwarf.c	FUNCTION_105	IF_12	CALL_48
0x4000a51	      0xe800000000	                          call 0x4000a56	      9872	dwarf.c	FUNCTION_105	IF_12	CALL_48
0x4000a56	      0xe999fcffff	                           jmp 0x40006f4	      9873	dwarf.c	FUNCTION_105	IF_12
0x4000a5b	      0xba05000000	                              mov edx, 5	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000a60	      0xbe00000000	                              mov esi, 0	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000a65	            0x31ff	                            xor edi, edi	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000a67	      0xe800000000	                          call 0x4000a6c	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000a6c	          0x4889c7	                            mov rdi, rax	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000a6f	            0x31c0	                            xor eax, eax	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000a71	            0x31ed	                            xor ebp, ebp	      9788	dwarf.c	FUNCTION_105	IF_3
0x4000a73	      0xe800000000	                          call 0x4000a78	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000a78	      0xe977fcffff	                           jmp 0x40006f4	      9788	dwarf.c	FUNCTION_105	IF_3
0x4000a7d	          0x488b2b	                    mov rbp, qword [rbx]	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a80	      0xe97cffffff	                           jmp 0x4000a01	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
check_gnu_debugaltlink	ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:CALL,1:functions,0	7
0x40000f0	        0x4883ec08	                              sub rsp, 8	      9684	dwarf.c	FUNCTION_103
0x40000f4	      0xe800000000	                          call 0x40000f9	      9685	dwarf.c	FUNCTION_103	CALL_1
0x40000f9	          0x4885c0	                           test rax, rax	      9685	dwarf.c	FUNCTION_103	CALL_1
0x40000fc	           0xf95c0	                                setne al	      9685	dwarf.c	FUNCTION_103	CALL_1
0x40000ff	        0x4883c408	                              add rsp, 8	      9694	dwarf.c	FUNCTION_103
0x4000103	           0xfb6c0	                           movzx eax, al	      9694	dwarf.c	FUNCTION_103
0x4000106	              0xc3	                                     ret	      9694	dwarf.c	FUNCTION_103
dwarf_select_sections_by_names	ELSE,0:WHILE,1:FOR,1:SWITCH,0:DO,0:IF,5:CALL,5:functions,0	70
0x40277f0	            0x4155	                                push r13	     10039	dwarf.c	FUNCTION_109
0x40277f2	            0x4154	                                push r12	     10039	dwarf.c	FUNCTION_109
0x40277f4	          0x4989fd	                            mov r13, rdi	     10039	dwarf.c	FUNCTION_109
0x40277f7	              0x55	                                push rbp	     10039	dwarf.c	FUNCTION_109
0x40277f8	              0x53	                                push rbx	     10039	dwarf.c	FUNCTION_109
0x40277f9	        0x4883ec08	                              sub rsp, 8	     10039	dwarf.c	FUNCTION_109
0x40277fd	           0xfb607	                   movzx eax, byte [rdi]	     10039	dwarf.c	FUNCTION_109
0x4027800	            0x84c0	                             test al, al	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x4027802	     0xf84a2000000	                            je 0x40278aa	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x4027808	      0xbd06000000	                              mov ebp, 6	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x402780d	      0xbb00000000	                              mov ebx, 0	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x4027812	    0x41bc00000000	                             mov r12d, 0	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x4027818	            0xeb11	                           jmp 0x402782b	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x402781a	    0x660f1f440000	                    nop word [rax + rax]	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x4027820	          0x4889df	                            mov rdi, rbx	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x4027823	      0xe800000000	                          call 0x4027828	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x4027828	          0x4889c5	                            mov rbp, rax	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x402782b	          0x4889ea	                            mov rdx, rbp	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x402782e	          0x4889de	                            mov rsi, rbx	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x4027831	          0x4c89ef	                            mov rdi, r13	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x4027834	      0xe800000000	                          call 0x4027839	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x4027839	            0x85c0	                           test eax, eax	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x402783b	            0x750f	                           jne 0x402784c	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x402783d	          0x4c01ed	                            add rbp, r13	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x4027840	         0xfb64500	                   movzx eax, byte [rbp]	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x4027844	            0x3c2c	                            cmp al, 0x2c	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x4027846	            0x7470	                            je 0x40278b8	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x4027848	            0x84c0	                             test al, al	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x402784a	            0x746c	                            je 0x40278b8	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x402784c	        0x4983c418	                           add r12, 0x18	     10088	dwarf.c	FUNCTION_109	WHILE_1	FOR_1
0x4027850	        0x498b1c24	                    mov rbx, qword [r12]	     10088	dwarf.c	FUNCTION_109	WHILE_1	FOR_1
0x4027854	          0x4885db	                           test rbx, rbx	     10088	dwarf.c	FUNCTION_109	WHILE_1	FOR_1
0x4027857	            0x75c7	                           jne 0x4027820	     10088	dwarf.c	FUNCTION_109	WHILE_1	FOR_1
0x4027859	      0xba05000000	                              mov edx, 5	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x402785e	            0x31ff	                            xor edi, edi	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4027860	      0xbe00000000	                              mov esi, 0	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4027865	      0xe800000000	                          call 0x402786a	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x402786a	          0x4c89ee	                            mov rsi, r13	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x402786d	          0x4889c7	                            mov rdi, rax	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4027870	            0x31c0	                            xor eax, eax	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4027872	      0xe800000000	                          call 0x4027877	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4027877	          0x4c89ef	                            mov rdi, r13	     10110	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_5
0x402787a	      0xbe2c000000	                           mov esi, 0x2c	     10110	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_5
0x402787f	      0xe800000000	                          call 0x4027884	     10110	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_5
0x4027884	          0x4885c0	                           test rax, rax	     10111	dwarf.c	FUNCTION_109	WHILE_1	IF_3	IF_4
0x4027887	          0x4989c5	                            mov r13, rax	     10110	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_5
0x402788a	            0x741e	                            je 0x40278aa	     10111	dwarf.c	FUNCTION_109	WHILE_1	IF_3	IF_4
0x402788c	      0x410fb64500	                   movzx eax, byte [r13]	     10115	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x4027891	            0x3c2c	                            cmp al, 0x2c	     10115	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x4027893	     0xf8567ffffff	                           jne 0x4027800	     10115	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x4027899	      0x410fb64501	               movzx eax, byte [r13 + 1]	     10115	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x402789e	        0x4983c501	                              add r13, 1	     10116	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x40278a2	            0x84c0	                             test al, al	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40278a4	     0xf855effffff	                           jne 0x4027808	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40278aa	        0x4883c408	                              add rsp, 8	     10118	dwarf.c	FUNCTION_109
0x40278ae	              0x5b	                                 pop rbx	     10118	dwarf.c	FUNCTION_109
0x40278af	              0x5d	                                 pop rbp	     10118	dwarf.c	FUNCTION_109
0x40278b0	            0x415c	                                 pop r12	     10118	dwarf.c	FUNCTION_109
0x40278b2	            0x415d	                                 pop r13	     10118	dwarf.c	FUNCTION_109
0x40278b4	              0xc3	                                     ret	     10118	dwarf.c	FUNCTION_109
0x40278b5	           0xf1f00	                         nop dword [rax]	     10118	dwarf.c	FUNCTION_109
0x40278b8	      0x498b442408	                mov rax, qword [r12 + 8]	     10095	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40278bd	      0x418b542410	            mov edx, dword [r12 + 0x10] 	     10095	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40278c2	             0x910	                     or dword [rax], edx	     10095	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40278c4	    0x8b0500000000	            mov eax, dword [0x040278ca] 	     10099	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	IF_2
0x40278ca	            0x85c0	                           test eax, eax	     10099	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	IF_2
0x40278cc	            0x740a	                            je 0x40278d8	     10099	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	IF_2
0x40278ce	    0xc70500000000	               mov dword [0x040278d8], 1	     10100	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	IF_2
0x40278d8	          0x4989ed	                            mov r13, rbp	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40278db	            0xebaf	                           jmp 0x402788c	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
check_gnu_debuglink	ELSE,0:WHILE,1:FOR,0:SWITCH,0:DO,0:IF,3:CALL,11:functions,0	83
0x4000110	            0x4157	                                push r15	      9625	dwarf.c	FUNCTION_101
0x4000112	            0x4156	                                push r14	      9625	dwarf.c	FUNCTION_101
0x4000114	          0x4531ff	                          xor r15d, r15d	      9634	dwarf.c	FUNCTION_101	IF_1
0x4000117	            0x4155	                                push r13	      9625	dwarf.c	FUNCTION_101
0x4000119	            0x4154	                                push r12	      9625	dwarf.c	FUNCTION_101
0x400011b	          0x4989f5	                            mov r13, rsi	      9625	dwarf.c	FUNCTION_101
0x400011e	              0x55	                                push rbp	      9625	dwarf.c	FUNCTION_101
0x400011f	              0x53	                                push rbx	      9625	dwarf.c	FUNCTION_101
0x4000120	          0x4889fd	                            mov rbp, rdi	      9625	dwarf.c	FUNCTION_101
0x4000123	        0x4883ec08	                              sub rsp, 8	      9625	dwarf.c	FUNCTION_101
0x4000127	      0xe800000000	                          call 0x400012c	      9632	dwarf.c	FUNCTION_101	CALL_1
0x400012c	          0x4885c0	                           test rax, rax	      9633	dwarf.c	FUNCTION_101	IF_1
0x400012f	     0xf84be000000	                            je 0x40001f3	      9633	dwarf.c	FUNCTION_101	IF_1
0x4000135	      0xbe00000000	                              mov esi, 0	      9637	dwarf.c	FUNCTION_101	CALL_2
0x400013a	          0x4889ef	                            mov rdi, rbp	      9637	dwarf.c	FUNCTION_101	CALL_2
0x400013d	          0x4989c4	                            mov r12, rax	      9637	dwarf.c	FUNCTION_101	CALL_2
0x4000140	      0xe800000000	                          call 0x4000145	      9637	dwarf.c	FUNCTION_101	CALL_2
0x4000145	          0x4885c0	                           test rax, rax	      9638	dwarf.c	FUNCTION_101	IF_2
0x4000148	          0x4889c3	                            mov rbx, rax	      9637	dwarf.c	FUNCTION_101	CALL_2
0x400014b	     0xf84b4000000	                            je 0x4000205	      9638	dwarf.c	FUNCTION_101	IF_2
0x4000151	          0x4531f6	                          xor r14d, r14d	      9638	dwarf.c	FUNCTION_101	IF_2
0x4000154	         0xf1f4000	                         nop dword [rax]	      9638	dwarf.c	FUNCTION_101	IF_2
0x4000158	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_126	CALL_9
0x400015b	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_126	CALL_9
0x4000160	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_126	CALL_9
0x4000165	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_126	CALL_9
0x400016a	      0xe800000000	                          call 0x400016f	       295	stdio2.h	FUNCTION_126	CALL_9
0x400016f	          0x4885c0	                           test rax, rax	      9646	dwarf.c	FUNCTION_101	WHILE_1	CALL_6
0x4000172	            0x7442	                            je 0x40001b6	      9646	dwarf.c	FUNCTION_101	WHILE_1	CALL_6
0x4000174	    0x480500000000	                              add rax, 0	      9615	dwarf.c	FUNCTION_100	FOR_1
0x400017a	          0x4489f2	                           mov edx, r14d	      9614	dwarf.c	FUNCTION_100
0x400017d	    0x483d00000000	                              cmp rax, 0	      9615	dwarf.c	FUNCTION_100	FOR_1
0x4000183	            0xf7d2	                                 not edx	      9614	dwarf.c	FUNCTION_100
0x4000185	            0x7627	                           jbe 0x40001ae	      9615	dwarf.c	FUNCTION_100	FOR_1
0x4000187	      0xb900000000	                              mov ecx, 0	      9615	dwarf.c	FUNCTION_100	FOR_1
0x400018c	         0xf1f4000	                         nop dword [rax]	      9615	dwarf.c	FUNCTION_100	FOR_1
0x4000190	            0x89d6	                            mov esi, edx	      9616	dwarf.c	FUNCTION_100	FOR_1
0x4000192	          0x403231	                     xor sil, byte [rcx]	      9616	dwarf.c	FUNCTION_100	FOR_1
0x4000195	        0x4883c101	                              add rcx, 1	      9615	dwarf.c	FUNCTION_100	FOR_1
0x4000199	        0x48c1ea08	                              shr rdx, 8	      9616	dwarf.c	FUNCTION_100	FOR_1
0x400019d	        0x400fb6f6	                          movzx esi, sil	      9616	dwarf.c	FUNCTION_100	FOR_1
0x40001a1	    0x483314f50000	                  xor rdx, qword [rsi*8]	      9616	dwarf.c	FUNCTION_100	FOR_1
0x40001a9	          0x4839c8	                            cmp rax, rcx	      9615	dwarf.c	FUNCTION_100	FOR_1
0x40001ac	            0x75e2	                           jne 0x4000190	      9615	dwarf.c	FUNCTION_100	FOR_1
0x40001ae	          0x4189d6	                           mov r14d, edx	      9617	dwarf.c	FUNCTION_100
0x40001b1	          0x41f7d6	                                not r14d	      9617	dwarf.c	FUNCTION_100
0x40001b4	            0xeba2	                           jmp 0x4000158	      9617	dwarf.c	FUNCTION_100
0x40001b6	          0x4889df	                            mov rdi, rbx	      9649	dwarf.c	FUNCTION_101	CALL_8
0x40001b9	    0x41bf01000000	                             mov r15d, 1	      9659	dwarf.c	FUNCTION_101
0x40001bf	      0xe800000000	                          call 0x40001c4	      9649	dwarf.c	FUNCTION_101	CALL_8
0x40001c4	        0x4d3b7500	                    cmp r14, qword [r13]	      9651	dwarf.c	FUNCTION_101	IF_3
0x40001c8	            0x7429	                            je 0x40001f3	      9651	dwarf.c	FUNCTION_101	IF_3
0x40001ca	          0x4c89e7	                            mov rdi, r12	      9653	dwarf.c	FUNCTION_101	IF_3	CALL_9
0x40001cd	          0x4531ff	                          xor r15d, r15d	      9656	dwarf.c	FUNCTION_101	IF_3
0x40001d0	      0xe800000000	                          call 0x40001d5	      9653	dwarf.c	FUNCTION_101	IF_3	CALL_9
0x40001d5	      0xba05000000	                              mov edx, 5	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001da	      0xbe00000000	                              mov esi, 0	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001df	            0x31ff	                            xor edi, edi	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001e1	      0xe800000000	                          call 0x40001e6	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001e6	          0x4889ee	                            mov rsi, rbp	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001e9	          0x4889c7	                            mov rdi, rax	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001ec	            0x31c0	                            xor eax, eax	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001ee	      0xe800000000	                          call 0x40001f3	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001f3	        0x4883c408	                              add rsp, 8	      9660	dwarf.c	FUNCTION_101
0x40001f7	          0x4489f8	                           mov eax, r15d	      9660	dwarf.c	FUNCTION_101
0x40001fa	              0x5b	                                 pop rbx	      9660	dwarf.c	FUNCTION_101
0x40001fb	              0x5d	                                 pop rbp	      9660	dwarf.c	FUNCTION_101
0x40001fc	            0x415c	                                 pop r12	      9660	dwarf.c	FUNCTION_101
0x40001fe	            0x415d	                                 pop r13	      9660	dwarf.c	FUNCTION_101
0x4000200	            0x415e	                                 pop r14	      9660	dwarf.c	FUNCTION_101
0x4000202	            0x415f	                                 pop r15	      9660	dwarf.c	FUNCTION_101
0x4000204	              0xc3	                                     ret	      9660	dwarf.c	FUNCTION_101
0x4000205	          0x4c89e7	                            mov rdi, r12	      9641	dwarf.c	FUNCTION_101	IF_2	CALL_3
0x4000208	      0xe800000000	                          call 0x400020d	      9641	dwarf.c	FUNCTION_101	IF_2	CALL_3
0x400020d	            0x31ff	                            xor edi, edi	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x400020f	      0xba05000000	                              mov edx, 5	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000214	      0xbe00000000	                              mov esi, 0	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000219	      0xe800000000	                          call 0x400021e	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x400021e	          0x4889ee	                            mov rsi, rbp	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000221	          0x4889c7	                            mov rdi, rax	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000224	            0x31c0	                            xor eax, eax	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000226	      0xe800000000	                          call 0x400022b	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x400022b	            0xebc6	                           jmp 0x40001f3	      9643	dwarf.c	FUNCTION_101	IF_2
process_debug_info	ELSE,10:WHILE,1:FOR,5:SWITCH,2:DO,0:IF,48:CALL,83:functions,0	1422
0x400e2b0	            0x4157	                                push r15	      2771	dwarf.c	FUNCTION_34
0x400e2b2	            0x4156	                                push r14	      2771	dwarf.c	FUNCTION_34
0x400e2b4	            0x4155	                                push r13	      2771	dwarf.c	FUNCTION_34
0x400e2b6	            0x4154	                                push r12	      2771	dwarf.c	FUNCTION_34
0x400e2b8	              0x55	                                push rbp	      2771	dwarf.c	FUNCTION_34
0x400e2b9	              0x53	                                push rbx	      2771	dwarf.c	FUNCTION_34
0x400e2ba	          0x4889f5	                            mov rbp, rsi	      2771	dwarf.c	FUNCTION_34
0x400e2bd	            0x89d3	                            mov ebx, edx	      2771	dwarf.c	FUNCTION_34
0x400e2bf	    0x4881ec180100	                          sub rsp, 0x118	      2771	dwarf.c	FUNCTION_34
0x400e2c6	    0x64488b342528	                mov rsi, qword fs:[0x28]	      2771	dwarf.c	FUNCTION_34
0x400e2cf	    0x4889b4240801	            mov qword [rsp + 0x108], rsi	      2771	dwarf.c	FUNCTION_34
0x400e2d7	            0x31f6	                            xor esi, esi	      2771	dwarf.c	FUNCTION_34
0x400e2d9	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	      2772	dwarf.c	FUNCTION_34
0x400e2dd	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      2771	dwarf.c	FUNCTION_34
0x400e2e2	        0x894c2464	             mov dword [rsp + 0x64], ecx	      2771	dwarf.c	FUNCTION_34
0x400e2e6	      0x4489442460	             mov dword [rsp + 0x60], r8d	      2771	dwarf.c	FUNCTION_34
0x400e2eb	          0x4989f6	                            mov r14, rsi	      2773	dwarf.c	FUNCTION_34
0x400e2ee	        0x4c037730	             add r14, qword [rdi + 0x30]	      2773	dwarf.c	FUNCTION_34
0x400e2f2	            0x85c9	                           test ecx, ecx	      2778	dwarf.c	FUNCTION_34	IF_1
0x400e2f4	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2772	dwarf.c	FUNCTION_34
0x400e2f9	     0xf85ce000000	                           jne 0x400e3cd	      2778	dwarf.c	FUNCTION_34	IF_1
0x400e2ff	    0x8b3d00000000	            mov edi, dword [0x0400e305] 	      2778	dwarf.c	FUNCTION_34	IF_1
0x400e305	            0x85ff	                           test edi, edi	      2778	dwarf.c	FUNCTION_34	IF_1
0x400e307	     0xf8473040000	                            je 0x400e780	      2778	dwarf.c	FUNCTION_34	IF_1
0x400e30d	    0x448b05000000	            mov r8d, dword [0x0400e314] 	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e314	          0x4585c0	                           test r8d, r8d	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e317	     0xf8571040000	                           jne 0x400e78e	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e31d	        0x8b7c2460	            mov edi, dword [rsp + 0x60] 	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e321	            0x85ff	                           test edi, edi	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e323	     0xf8565040000	                           jne 0x400e78e	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e329	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e32e	    0xc78424940000	               mov dword [rsp + 0x94], 0	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e339	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2793	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400e33f	          0x4c39f0	                            cmp rax, r14	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e342	          0x4989c5	                            mov r13, rax	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e345	     0xf831e170000	                           jae 0x400fa69	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e34b	        0x895c2410	             mov dword [rsp + 0x10], ebx	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e34f	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e354	          0x4531ff	                          xor r15d, r15d	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e357	      0x48896c2408	                mov qword [rsp + 8], rbp	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e35c	          0x4c89f5	                            mov rbp, r14	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e35f	              0x90	                                     nop	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e360	        0x4d8d7504	                      lea r14, [r13 + 4]	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e364	          0x4c39f5	                            cmp rbp, r14	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e367	     0xf875b0b0000	                            ja 0x400eec8	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e36d	          0x4c39ed	                            cmp rbp, r13	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e370	     0xf86a00c0000	                           jbe 0x400f016	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e376	          0x4889ee	                            mov rsi, rbp	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e379	          0x4c29ee	                            sub rsi, r13	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e37c	          0x8d46ff	                      lea eax, [rsi - 1]	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e37f	          0x83f807	                              cmp eax, 7	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e382	     0xf86450b0000	                           jbe 0x400eecd	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e388	            0x31c0	                            xor eax, eax	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400e38a	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e38f	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e391	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e394	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e399	        0x488b6910	            mov rbp, qword [rcx + 0x10] 	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e39d	      0xe85e1fffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e3a2	      0xba05000000	                              mov edx, 5	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3a7	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e3aa	      0xbe00000000	                              mov esi, 0	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3af	            0x31ff	                            xor edi, edi	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3b1	      0xe800000000	                          call 0x400e3b6	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3b6	          0x4889ea	                            mov rdx, rbp	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3b9	          0x4889c7	                            mov rdi, rax	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3bc	          0x4889de	                            mov rsi, rbx	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3bf	            0x31c0	                            xor eax, eax	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3c1	      0xe800000000	                          call 0x400e3c6	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400e3c6	            0x31c0	                            xor eax, eax	      2814	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4
0x400e3c8	      0xe9c20f0000	                           jmp 0x400f38f	      2814	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4
0x400e3cd	    0x448b15000000	           mov r10d, dword [0x0400e3d4] 	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e3d4	          0x4585d2	                         test r10d, r10d	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e3d7	            0x750e	                           jne 0x400e3e7	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e3d9	      0x448b4c2460	            mov r9d, dword [rsp + 0x60] 	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e3de	          0x4585c9	                           test r9d, r9d	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e3e1	     0xf8442ffffff	                            je 0x400e329	      2780	dwarf.c	FUNCTION_34	IF_1
0x400e3e7	          0x4889ee	                            mov rsi, rbp	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400e3ea	            0x89df	                            mov edi, ebx	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400e3ec	      0xe82f2dffff	 call sym.load_debug_section_with_follow	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400e3f1	          0x4889da	                            mov rdx, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e3f4	          0x4889d8	                            mov rax, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e3f7	        0x48c1e204	                              shl rdx, 4	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e3fb	        0x48c1e007	                              shl rax, 7	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e3ff	          0x4829d0	                            sub rax, rdx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e402	    0x4883b8000000	                      cmp qword [rax], 0	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e40a	     0xf84b40c0000	                            je 0x400f0c4	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e410	      0x4c39742428	            cmp qword [rsp + 0x28], r14 	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400e415	    0xc78424940000	               mov dword [rsp + 0x94], 0	      2776	dwarf.c	FUNCTION_34
0x400e420	     0xf8336030000	                           jae 0x400e75c	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400e426	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2772	dwarf.c	FUNCTION_34
0x400e42b	    0xc78424880000	               mov dword [rsp + 0x88], 0	      2772	dwarf.c	FUNCTION_34
0x400e436	          0x4d89f5	                            mov r13, r14	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e439	      0x4889442408	                mov qword [rsp + 8], rax	      2772	dwarf.c	FUNCTION_34
0x400e43e	          0x4889d8	                            mov rax, rbx	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e441	        0x48c1e307	                              shl rbx, 7	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e445	        0x48c1e004	                              shl rax, 4	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e449	          0x4829c3	                            sub rbx, rax	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e44c	    0x488d83000000	                          lea rax, [rbx]	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e453	      0x4889442478	             mov qword [rsp + 0x78], rax	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e458	     0xf1f84000000	                   nop dword [rax + rax]	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e460	      0x488b442408	                mov rax, qword [rsp + 8]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e465	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      2876	dwarf.c	FUNCTION_34	FOR_2
0x400e471	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      2877	dwarf.c	FUNCTION_34	FOR_2
0x400e47d	        0x4c8d7004	                      lea r14, [rax + 4]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e481	          0x4d39f5	                            cmp r13, r14	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e484	     0xf8636040000	                           jbe 0x400e8c0	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e48a	      0xbe04000000	                              mov esi, 4	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e48f	          0x4889c3	                            mov rbx, rax	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e492	          0x4889df	                            mov rdi, rbx	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e495	    0xff1500000000	                 call qword [0x0400e49b]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e49b	          0x4889c5	                            mov rbp, rax	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e49e	      0xb8ffffffff	                     mov eax, 0xffffffff	      2887	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4a3	          0x4839c5	                            cmp rbp, rax	      2887	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4a6	     0xf85cc090000	                           jne 0x400ee78	      2887	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4ac	        0x488d5b0c	                    lea rbx, [rbx + 0xc]	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4b0	          0x4939dd	                            cmp r13, rbx	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4b3	     0xf87770a0000	                            ja 0x400ef30	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4b9	          0x4d39f5	                            cmp r13, r14	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4bc	            0x7612	                           jbe 0x400e4d0	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4be	          0x4c89ee	                            mov rsi, r13	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4c1	          0x4c29f6	                            sub rsi, r14	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4c4	          0x8d46ff	                      lea eax, [rsi - 1]	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4c7	          0x83f807	                              cmp eax, 7	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4ca	     0xf86650a0000	                           jbe 0x400ef35	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4d0	          0x4989de	                            mov r14, rbx	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4d3	    0x41bc0c000000	                           mov r12d, 0xc	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4d9	    0x48c744241808	               mov qword [rsp + 0x18], 8	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4e2	        0x498d5e02	                      lea rbx, [r14 + 2]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e4e6	    0xc74424380800	               mov dword [rsp + 0x38], 8	      2890	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400e4ee	          0x4939dd	                            cmp r13, rbx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e4f1	     0xf8679090000	                           jbe 0x400ee70	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e4f7	      0xbe02000000	                              mov esi, 2	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e4fc	            0x31ed	                            xor ebp, ebp	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e4fe	          0x4c89f7	                            mov rdi, r14	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e501	    0xff1500000000	                 call qword [0x0400e507]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e507	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e50c	      0x6689442420	               mov word [rsp + 0x20], ax	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e511	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      1642	dwarf.c	FUNCTION_26	IF_1
0x400e515	      0x4c2b7c2428	             sub r15, qword [rsp + 0x28]	      2901	dwarf.c	FUNCTION_34	FOR_2
0x400e51a	            0x85c0	                           test eax, eax	      1642	dwarf.c	FUNCTION_26	IF_1
0x400e51c	     0xf84be040000	                            je 0x400e9e0	      1642	dwarf.c	FUNCTION_26	IF_1
0x400e522	    0x488b05000000	            mov rax, qword [0x0400e529] 	      1644	dwarf.c	FUNCTION_26	IF_1
0x400e529	    0x8b0d00000000	            mov ecx, dword [0x0400e52f] 	      1645	dwarf.c	FUNCTION_26	IF_1
0x400e52f	      0xba02000000	                              mov edx, 2	      1646	dwarf.c	FUNCTION_26	IF_1
0x400e534	            0x85c9	                           test ecx, ecx	      1654	dwarf.c	FUNCTION_26	WHILE_1
0x400e536	            0x743e	                            je 0x400e576	      1654	dwarf.c	FUNCTION_26	WHILE_1
0x400e538	      0x4c3b7cd008	       cmp r15, qword [rax + rdx*8 + 8] 	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e53d	     0xf84bd040000	                            je 0x400ea00	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e543	          0x83e901	                              sub ecx, 1	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e546	        0x4883c101	                              add rcx, 1	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e54a	          0x4889ce	                            mov rsi, rcx	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e54d	        0x48c1e607	                              shl rsi, 7	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e551	        0x488d0cce	                  lea rcx, [rsi + rcx*8]	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e555	          0x4801c1	                            add rcx, rax	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e558	            0xeb11	                           jmp 0x400e56b	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e55a	    0x660f1f440000	                    nop word [rax + rax]	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e560	      0x4c3b7cd008	       cmp r15, qword [rax + rdx*8 + 8] 	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e565	     0xf8495040000	                            je 0x400ea00	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400e56b	    0x480588000000	                           add rax, 0x88	      1658	dwarf.c	FUNCTION_26	WHILE_1
0x400e571	          0x4839c8	                            cmp rax, rcx	      1654	dwarf.c	FUNCTION_26	WHILE_1
0x400e574	            0x75ea	                           jne 0x400e560	      1654	dwarf.c	FUNCTION_26	WHILE_1
0x400e576	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1661	dwarf.c	FUNCTION_26
0x400e57f	    0x66837c242004	                cmp word [rsp + 0x20], 4	      2905	dwarf.c	FUNCTION_34	FOR_2	IF_11
0x400e585	     0xf862d040000	                           jbe 0x400e9b8	      2905	dwarf.c	FUNCTION_34	FOR_2	IF_11
0x400e58b	        0x498d5603	                      lea rdx, [r14 + 3]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e58f	          0x4939d5	                            cmp r13, rdx	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e592	     0xf87f0070000	                            ja 0x400ed88	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e598	          0x4939dd	                            cmp r13, rbx	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e59b	            0x7612	                           jbe 0x400e5af	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e59d	          0x4c89ee	                            mov rsi, r13	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5a0	          0x4829de	                            sub rsi, rbx	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5a3	          0x8d46ff	                      lea eax, [rsi - 1]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5a6	          0x83f807	                              cmp eax, 7	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5a9	     0xf861b150000	                           jbe 0x400faca	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5af	        0x498d5e04	                      lea rbx, [r14 + 4]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5b3	          0x4939dd	                            cmp r13, rbx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5b6	     0xf86fc090000	                           jbe 0x400efb8	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5bc	      0xbe01000000	                              mov esi, 1	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5c1	    0xc74424600000	               mov dword [rsp + 0x60], 0	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5c9	    0xc74424500000	               mov dword [rsp + 0x50], 0	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5d1	          0x4889d7	                            mov rdi, rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5d4	    0xff1500000000	                 call qword [0x0400e5da]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5da	        0x88442440	               mov byte [rsp + 0x40], al	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400e5de	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e5e3	        0x488d1403	                    lea rdx, [rbx + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e5e7	          0x4939d5	                            cmp r13, rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e5ea	     0xf87e7030000	                            ja 0x400e9d7	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e5f0	          0x4c39eb	                            cmp rbx, r13	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e5f3	     0xf83f7090000	                           jae 0x400eff0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e5f9	          0x4489ee	                           mov esi, r13d	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e5fc	            0x29de	                            sub esi, ebx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e5fe	          0x8d46ff	                      lea eax, [rsi - 1]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e601	          0x4989d6	                            mov r14, rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e604	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e60d	          0x83f807	                              cmp eax, 7	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e610	            0x771b	                            ja 0x400e62d	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e612	      0x4889542458	             mov qword [rsp + 0x58], rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e617	          0x4889df	                            mov rdi, rbx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e61a	    0xff1500000000	                 call qword [0x0400e620]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e620	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e625	      0x4889442448	             mov qword [rsp + 0x48], rax	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e62a	          0x4989d6	                            mov r14, rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e62d	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e633	     0xf84cf070000	                            je 0x400ee08	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400e639	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2928	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400e63e	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      2928	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400e642	        0x488b4060	            mov rax, qword [rax + 0x60] 	      2929	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400e646	      0x4889742468	             mov qword [rsp + 0x68], rsi	      2928	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400e64b	      0x4889442458	             mov qword [rsp + 0x58], rax	      2929	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400e650	    0x66837c242004	                cmp word [rsp + 0x20], 4	      2932	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e656	     0xf8746020000	                            ja 0x400e8a2	      2932	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e65c	        0x4c8d7201	                      lea r14, [rdx + 1]	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e660	          0x4d39f5	                            cmp r13, r14	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e663	     0xf8727020000	                            ja 0x400e890	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e669	          0x4939d5	                            cmp r13, rdx	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e66c	            0x7612	                           jbe 0x400e680	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e66e	          0x4c89ee	                            mov rsi, r13	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e671	          0x4829d6	                            sub rsi, rdx	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e674	          0x8d46ff	                      lea eax, [rsi - 1]	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e677	          0x83f807	                              cmp eax, 7	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e67a	     0xf8615020000	                           jbe 0x400e895	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e680	            0x31db	                            xor ebx, ebx	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e682	      0xba05000000	                              mov edx, 5	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e687	      0xbe00000000	                              mov esi, 0	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e68c	            0x31ff	                            xor edi, edi	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e68e	      0xe800000000	                          call 0x400e693	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e693	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e697	          0x4889c7	                            mov rdi, rax	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e69a	            0x89de	                            mov esi, ebx	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e69c	            0x31c0	                            xor eax, eax	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e69e	      0xe800000000	                          call 0x400e6a3	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400e6a3	       0xfb6442438	           movzx eax, byte [rsp + 0x38] 	      2940	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e6a8	        0x88442440	               mov byte [rsp + 0x40], al	      2940	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e6ac	        0x8b5c2460	            mov ebx, dword [rsp + 0x60] 	      2943	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6b0	          0x4531c9	                            xor r9d, r9d	      2878	dwarf.c	FUNCTION_34	FOR_2
0x400e6b3	            0x85db	                           test ebx, ebx	      2943	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6b5	            0x7461	                            je 0x400e718	      2943	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6b7	        0x498d5e08	                      lea rbx, [r14 + 8]	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6bb	          0x4939dd	                            cmp r13, rbx	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6be	     0xf834c080000	                           jae 0x400ef10	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6c4	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6d0	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6dc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6e1	        0x4c8d3403	                    lea r14, [rbx + rax]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6e5	          0x4d39f5	                            cmp r13, r14	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6e8	     0xf873a070000	                            ja 0x400ee28	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6ee	          0x4531c9	                            xor r9d, r9d	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6f1	          0x4939dd	                            cmp r13, rbx	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6f4	            0x7622	                           jbe 0x400e718	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6f6	          0x4489ee	                           mov esi, r13d	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6f9	            0x29de	                            sub esi, ebx	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6fb	          0x8d46ff	                      lea eax, [rsi - 1]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e6fe	          0x4531c9	                            xor r9d, r9d	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e701	          0x83f807	                              cmp eax, 7	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e704	            0x7712	                            ja 0x400e718	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e706	          0x4889df	                            mov rdi, rbx	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e709	    0xff1500000000	                 call qword [0x0400e70f]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e70f	          0x4989c1	                             mov r9, rax	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e712	    0x660f1f440000	                    nop word [rax + rax]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e718	      0x4e8d442500	                     lea r8, [rbp + r12]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400e71d	    0x488b15000000	            mov rdx, qword [0x0400e724] 	      2950	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400e724	        0x4b8d0407	                     lea rax, [r15 + r8]	      2951	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400e728	          0x4839d0	                            cmp rax, rdx	      2950	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400e72b	     0xf83cf010000	                           jae 0x400e900	      2950	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400e731	      0x4803442428	             add rax, qword [rsp + 0x28]	      2953	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400e736	      0x4889442408	                mov qword [rsp + 8], rax	      2953	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400e73b	    0x838424880000	               add dword [rsp + 0x88], 1	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400e743	      0x4c396c2408	                cmp qword [rsp + 8], r13	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400e748	     0xf8212fdffff	                            jb 0x400e460	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400e74e	      0x448b642464	           mov r12d, dword [rsp + 0x64] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e753	          0x4585e4	                         test r12d, r12d	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e756	     0xf84cd000000	                            je 0x400e829	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e75c	    0x8b1500000000	            mov edx, dword [0x0400e762] 	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e762	            0x85d2	                           test edx, edx	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e764	     0xf85200c0000	                           jne 0x400f38a	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e76a	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e76e	            0x85c0	                           test eax, eax	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e770	     0xf85140c0000	                           jne 0x400f38a	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e776	      0xe9d4000000	                           jmp 0x400e84f	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e77b	       0xf1f440000	                   nop dword [rax + rax]	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e780	    0x8b3500000000	            mov esi, dword [0x0400e786] 	      2778	dwarf.c	FUNCTION_34	IF_1
0x400e786	            0x85f6	                           test esi, esi	      2778	dwarf.c	FUNCTION_34	IF_1
0x400e788	     0xf857ffbffff	                           jne 0x400e30d	      2778	dwarf.c	FUNCTION_34	IF_1
0x400e78e	    0xc78424940000	               mov dword [rsp + 0x94], 0	      2776	dwarf.c	FUNCTION_34
0x400e799	          0x4889ee	                            mov rsi, rbp	      2847	dwarf.c	FUNCTION_34	IF_7	CALL_13
0x400e79c	      0xbf0a000000	                            mov edi, 0xa	      2847	dwarf.c	FUNCTION_34	IF_7	CALL_13
0x400e7a1	      0xe87a29ffff	 call sym.load_debug_section_with_follow	      2847	dwarf.c	FUNCTION_34	IF_7	CALL_13
0x400e7a6	          0x4889ee	                            mov rsi, rbp	      2848	dwarf.c	FUNCTION_34	IF_7	CALL_14
0x400e7a9	      0xbf0b000000	                            mov edi, 0xb	      2848	dwarf.c	FUNCTION_34	IF_7	CALL_14
0x400e7ae	      0xe86d29ffff	 call sym.load_debug_section_with_follow	      2848	dwarf.c	FUNCTION_34	IF_7	CALL_14
0x400e7b3	          0x4889ee	                            mov rsi, rbp	      2849	dwarf.c	FUNCTION_34	IF_7	CALL_15
0x400e7b6	      0xbf22000000	                           mov edi, 0x22	      2849	dwarf.c	FUNCTION_34	IF_7	CALL_15
0x400e7bb	      0xe86029ffff	 call sym.load_debug_section_with_follow	      2849	dwarf.c	FUNCTION_34	IF_7	CALL_15
0x400e7c0	          0x4889ee	                            mov rsi, rbp	      2850	dwarf.c	FUNCTION_34	IF_7	CALL_16
0x400e7c3	      0xbf23000000	                           mov edi, 0x23	      2850	dwarf.c	FUNCTION_34	IF_7	CALL_16
0x400e7c8	      0xe85329ffff	 call sym.load_debug_section_with_follow	      2850	dwarf.c	FUNCTION_34	IF_7	CALL_16
0x400e7cd	          0x4889ee	                            mov rsi, rbp	      2851	dwarf.c	FUNCTION_34	IF_7	CALL_17
0x400e7d0	      0xbf24000000	                           mov edi, 0x24	      2851	dwarf.c	FUNCTION_34	IF_7	CALL_17
0x400e7d5	      0xe84629ffff	 call sym.load_debug_section_with_follow	      2851	dwarf.c	FUNCTION_34	IF_7	CALL_17
0x400e7da	          0x4889ee	                            mov rsi, rbp	      2852	dwarf.c	FUNCTION_34	IF_7	CALL_18
0x400e7dd	      0xbf25000000	                           mov edi, 0x25	      2852	dwarf.c	FUNCTION_34	IF_7	CALL_18
0x400e7e2	      0xe83929ffff	 call sym.load_debug_section_with_follow	      2852	dwarf.c	FUNCTION_34	IF_7	CALL_18
0x400e7e7	          0x4889ee	                            mov rsi, rbp	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400e7ea	            0x89df	                            mov edi, ebx	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400e7ec	      0xe82f29ffff	 call sym.load_debug_section_with_follow	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400e7f1	          0x4889da	                            mov rdx, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e7f4	          0x4889d8	                            mov rax, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e7f7	        0x48c1e204	                              shl rdx, 4	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e7fb	        0x48c1e007	                              shl rax, 7	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e7ff	          0x4829d0	                            sub rax, rdx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e802	    0x4883b8000000	                      cmp qword [rax], 0	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e80a	     0xf84b4080000	                            je 0x400f0c4	      2856	dwarf.c	FUNCTION_34	IF_8
0x400e810	    0x48833d000000	               cmp qword [0x0400e818], 0	      2863	dwarf.c	FUNCTION_34	IF_9
0x400e818	     0xf8434120000	                            je 0x400fa52	      2863	dwarf.c	FUNCTION_34	IF_9
0x400e81e	      0x4c39742428	            cmp qword [rsp + 0x28], r14 	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400e823	     0xf82fdfbffff	                            jb 0x400e426	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400e829	    0x8b2d00000000	            mov ebp, dword [0x0400e82f] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e82f	            0x85ed	                           test ebp, ebp	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e831	            0x750a	                           jne 0x400e83d	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e833	    0x8b1d00000000	            mov ebx, dword [0x0400e839] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e839	            0x85db	                           test ebx, ebx	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e83b	            0x7438	                            je 0x400e875	      3253	dwarf.c	FUNCTION_34	IF_46
0x400e83d	    0x8b3500000000	            mov esi, dword [0x0400e843] 	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e843	            0x85f6	                           test esi, esi	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e845	            0x752e	                           jne 0x400e875	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e847	        0x8b4c2460	            mov ecx, dword [rsp + 0x60] 	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e84b	            0x85c9	                           test ecx, ecx	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e84d	            0x7526	                           jne 0x400e875	      3255	dwarf.c	FUNCTION_34	IF_46
0x400e84f	    0x8b0500000000	            mov eax, dword [0x0400e855] 	      3257	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400e855	    0x8b8c24940000	            mov ecx, dword [rsp + 0x94] 	      3258	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400e85c	      0x448b5c2464	           mov r11d, dword [rsp + 0x64] 	      3263	dwarf.c	FUNCTION_34	IF_48
0x400e861	            0x39c8	                            cmp eax, ecx	      3258	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400e863	           0xf43c1	                         cmovae eax, ecx	      3258	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400e866	          0x4585db	                         test r11d, r11d	      3263	dwarf.c	FUNCTION_34	IF_48
0x400e869	    0x890500000000	            mov dword [0x0400e86f], eax 	      3258	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400e86f	     0xf85150b0000	                           jne 0x400f38a	      3263	dwarf.c	FUNCTION_34	IF_48
0x400e875	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400e87a	      0xe800000000	                          call 0x400e87f	       104	stdio2.h	CALL_16
0x400e87f	      0xb801000000	                              mov eax, 1	      3266	dwarf.c	FUNCTION_34
0x400e884	      0xe9060b0000	                           jmp 0x400f38f	      3266	dwarf.c	FUNCTION_34
0x400e889	     0xf1f80000000	                         nop dword [rax]	      3266	dwarf.c	FUNCTION_34
0x400e890	      0xbe01000000	                              mov esi, 1	      3266	dwarf.c	FUNCTION_34
0x400e895	          0x4889d7	                            mov rdi, rdx	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e898	    0xff1500000000	                 call qword [0x0400e89e]	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e89e	        0x88442440	               mov byte [rsp + 0x40], al	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400e8a2	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e8a7	       0xfb65c2440	           movzx ebx, byte [rsp + 0x40] 	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e8ac	          0x83e802	                              sub eax, 2	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e8af	            0x3c06	                               cmp al, 6	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e8b1	     0xf86f5fdffff	                           jbe 0x400e6ac	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e8b7	      0xe9c6fdffff	                           jmp 0x400e682	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e8bc	         0xf1f4000	                         nop dword [rax]	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400e8c0	          0x4939c5	                            cmp r13, rax	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e8c3	     0xf876f050000	                            ja 0x400ee38	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e8c9	        0x488d5806	                      lea rbx, [rax + 6]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e8cd	    0x41bc04000000	                             mov r12d, 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e8d3	    0x48c744241804	               mov qword [rsp + 0x18], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e8dc	          0x4939dd	                            cmp r13, rbx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e8df	     0xf868f0e0000	                           jbe 0x400f774	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e8e5	      0xbe02000000	                              mov esi, 2	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400e8ea	            0x31ed	                            xor ebp, ebp	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400e8ec	    0xc74424380400	               mov dword [rsp + 0x38], 4	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400e8f4	      0xe905fcffff	                           jmp 0x400e4fe	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400e8f9	     0xf1f80000000	                         nop dword [rax]	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400e900	      0x448b5c2464	           mov r11d, dword [rsp + 0x64] 	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e905	          0x4585db	                         test r11d, r11d	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e908	     0xf8502010000	                           jne 0x400ea10	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e90e	    0x448b15000000	           mov r10d, dword [0x0400e915] 	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e915	          0x4585d2	                         test r10d, r10d	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e918	     0xf85f2000000	                           jne 0x400ea10	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e91e	    0x8b3d00000000	            mov edi, dword [0x0400e924] 	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e924	            0x85ff	                           test edi, edi	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e926	     0xf85e4000000	                           jne 0x400ea10	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400e92c	          0x4885d2	                           test rdx, rdx	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400e92f	     0xf8483010000	                            je 0x400eab8	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400e935	           0xf1f00	                         nop dword [rax]	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400e938	          0x4d01fc	                            add r12, r15	      3021	dwarf.c	FUNCTION_34	FOR_2
0x400e93b	          0x4901ec	                            add r12, rbp	      3022	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400e93e	     0xf82ab100000	                            jb 0x400f9ef	      3022	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400e944	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      3023	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400e949	        0x4c3b6030	            cmp r12, qword [rax + 0x30] 	      3023	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400e94d	     0xf879c100000	                            ja 0x400f9ef	      3023	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400e953	       0xfb7442420	           movzx eax, word [rsp + 0x20] 	      3036	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400e958	      0x4c01442408	                 add qword [rsp + 8], r8	      3034	dwarf.c	FUNCTION_34	FOR_2
0x400e95d	          0x83e802	                              sub eax, 2	      3036	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400e960	        0x6683f803	                               cmp ax, 3	      3036	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400e964	     0xf870e060000	                            ja 0x400ef78	      3036	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400e96a	        0x8b6c2450	            mov ebp, dword [rsp + 0x50] 	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400e96e	            0x89e8	                            mov eax, ebp	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400e970	          0x83e801	                              sub eax, 1	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400e973	          0x83f801	                              cmp eax, 1	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400e976	     0xf8684070000	                           jbe 0x400f100	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400e97c	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e97e	          0x4c89fe	                            mov rsi, r15	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e981	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e986	      0xe87519ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e98b	            0x31ff	                            xor edi, edi	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e98d	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400e990	      0xba05000000	                              mov edx, 5	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e995	      0xbe00000000	                              mov esi, 0	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e99a	      0xe800000000	                          call 0x400e99f	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e99f	            0x89ea	                            mov edx, ebp	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e9a1	          0x4889c7	                            mov rdi, rax	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e9a4	          0x4889de	                            mov rsi, rbx	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e9a7	            0x31c0	                            xor eax, eax	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e9a9	      0xe800000000	                          call 0x400e9ae	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400e9ae	      0xe988fdffff	                           jmp 0x400e73b	      3050	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400e9b3	       0xf1f440000	                   nop dword [rax + rax]	      3050	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400e9b8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e9bd	    0xc74424500100	               mov dword [rsp + 0x50], 1	      2907	dwarf.c	FUNCTION_34	FOR_2	IF_11
0x400e9c5	      0xc6442440ff	            mov byte [rsp + 0x40], 0xff 	      2909	dwarf.c	FUNCTION_34	FOR_2	IF_11
0x400e9ca	        0x488d1403	                    lea rdx, [rbx + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e9ce	          0x4939d5	                            cmp r13, rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e9d1	     0xf8619fcffff	                           jbe 0x400e5f0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e9d7	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e9db	      0xe91efcffff	                           jmp 0x400e5fe	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400e9e0	    0x488b05000000	            mov rax, qword [0x0400e9e7] 	      1650	dwarf.c	FUNCTION_26	ELSE_1
0x400e9e7	    0x8b0d00000000	            mov ecx, dword [0x0400e9ed] 	      1651	dwarf.c	FUNCTION_26	ELSE_1
0x400e9ed	      0xba01000000	                              mov edx, 1	      1652	dwarf.c	FUNCTION_26	ELSE_1
0x400e9f2	      0xe93dfbffff	                           jmp 0x400e534	      1652	dwarf.c	FUNCTION_26	ELSE_1
0x400e9f7	    0x660f1f840000	                    nop word [rax + rax]	      1652	dwarf.c	FUNCTION_26	ELSE_1
0x400ea00	      0x4889442410	             mov qword [rsp + 0x10], rax	      1658	dwarf.c	FUNCTION_26	WHILE_1
0x400ea05	      0xe975fbffff	                           jmp 0x400e57f	      1658	dwarf.c	FUNCTION_26	WHILE_1
0x400ea0a	    0x660f1f440000	                    nop word [rax + rax]	      1658	dwarf.c	FUNCTION_26	WHILE_1
0x400ea10	    0x8b3500000000	            mov esi, dword [0x0400ea16] 	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea16	            0x85f6	                           test esi, esi	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea18	     0xf8585000000	                           jne 0x400eaa3	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea1e	        0x8b4c2460	            mov ecx, dword [rsp + 0x60] 	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea22	            0x85c9	                           test ecx, ecx	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea24	            0x757d	                           jne 0x400eaa3	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea26	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea2d	        0x488d0c40	                  lea rcx, [rax + rax*2]	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea31	        0x488d0c88	                  lea rcx, [rax + rcx*4]	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea35	    0x488b05000000	            mov rax, qword [0x0400ea3c] 	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea3c	        0x488d04c8	                  lea rax, [rax + rcx*8]	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea40	       0xfb64c2440	           movzx ecx, byte [rsp + 0x40] 	      2964	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea45	        0x4c897810	             mov qword [rax + 0x10], r15	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea49	    0x48c740180000	               mov qword [rax + 0x18], 0	      2967	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea51	    0x48c740300000	               mov qword [rax + 0x30], 0	      2970	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea59	    0x48c740400000	               mov qword [rax + 0x40], 0	      2971	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea61	            0x8908	                    mov dword [rax], ecx	      2964	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea63	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      2965	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea67	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      2972	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea6e	    0xc74048000000	               mov dword [rax + 0x48], 0	      2973	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea75	    0x48c740580000	               mov qword [rax + 0x58], 0	      2974	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea7d	    0xc74064000000	               mov dword [rax + 0x64], 0	      2975	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea84	          0x894804	                mov dword [rax + 4], ecx	      2965	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea87	       0xfb74c2420	           movzx ecx, word [rsp + 0x20] 	      2966	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea8c	    0xc74060000000	               mov dword [rax + 0x60], 0	      2976	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea93	          0x894808	                mov dword [rax + 8], ecx	      2966	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea96	      0xb9ffffffff	                     mov ecx, 0xffffffff	      2968	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea9b	        0x48894820	             mov qword [rax + 0x20], rcx	      2968	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ea9f	        0x48894828	             mov qword [rax + 0x28], rcx	      2969	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400eaa3	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400eaa7	            0x85c0	                           test eax, eax	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400eaa9	     0xf8589feffff	                           jne 0x400e938	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400eaaf	          0x4885d2	                           test rdx, rdx	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400eab2	     0xf8580feffff	                           jne 0x400e938	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400eab8	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eaba	          0x4c89fe	                            mov rsi, r15	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eabd	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eac2	    0x4c8984248000	              mov qword [rsp + 0x80], r8	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eaca	      0x4c894c2470	              mov qword [rsp + 0x70], r9	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eacf	      0xe82c18ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ead4	            0x31ff	                            xor edi, edi	      2981	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_26
0x400ead6	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ead9	      0xba05000000	                              mov edx, 5	      2981	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_26
0x400eade	      0xbe00000000	                              mov esi, 0	      2981	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_26
0x400eae3	      0xe800000000	                          call 0x400eae8	      2981	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_26
0x400eae8	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400eaeb	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400eaee	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400eaf3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400eaf5	      0xe800000000	                          call 0x400eafa	       104	stdio2.h	CALL_16
0x400eafa	      0x837c243808	               cmp dword [rsp + 0x38], 8	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eaff	      0xba00000000	                              mov edx, 0	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eb04	      0xb800000000	                              mov eax, 0	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eb09	          0x4889ee	                            mov rsi, rbp	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb0c	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb11	        0x480f45c2	                         cmovne rax, rdx	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eb15	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb17	      0x4889442438	             mov qword [rsp + 0x38], rax	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eb1c	      0xe8df17ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb21	            0x31ff	                            xor edi, edi	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eb23	      0xba05000000	                              mov edx, 5	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eb28	      0xbe00000000	                              mov esi, 0	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eb2d	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb30	      0xe800000000	                          call 0x400eb35	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400eb35	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x400eb3a	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400eb3d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400eb40	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400eb45	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400eb47	      0xe800000000	                          call 0x400eb4c	       104	stdio2.h	CALL_16
0x400eb4c	            0x31ff	                            xor edi, edi	      2986	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_30
0x400eb4e	      0xba05000000	                              mov edx, 5	      2986	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_30
0x400eb53	      0xbe00000000	                              mov esi, 0	      2986	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_30
0x400eb58	      0xe800000000	                          call 0x400eb5d	      2986	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_30
0x400eb5d	       0xfb7542420	           movzx edx, word [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x400eb62	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400eb65	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400eb6a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400eb6c	      0xe800000000	                          call 0x400eb71	       104	stdio2.h	CALL_16
0x400eb71	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb76	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb78	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb7d	      0xe87e17ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb82	            0x31ff	                            xor edi, edi	      2987	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_31
0x400eb84	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb87	      0xba05000000	                              mov edx, 5	      2987	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_31
0x400eb8c	      0xbe00000000	                              mov esi, 0	      2987	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_31
0x400eb91	      0xe800000000	                          call 0x400eb96	      2987	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_31
0x400eb96	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400eb99	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400eb9c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400eba1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400eba3	      0xe800000000	                          call 0x400eba8	       104	stdio2.h	CALL_16
0x400eba8	            0x31ff	                            xor edi, edi	      2989	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_33
0x400ebaa	      0xba05000000	                              mov edx, 5	      2989	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_33
0x400ebaf	      0xbe00000000	                              mov esi, 0	      2989	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_33
0x400ebb4	      0xe800000000	                          call 0x400ebb9	      2989	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_33
0x400ebb9	       0xfb6542440	           movzx edx, byte [rsp + 0x40] 	       104	stdio2.h	CALL_16
0x400ebbe	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ebc1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ebc6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ebc8	      0xe800000000	                          call 0x400ebcd	       104	stdio2.h	CALL_16
0x400ebcd	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400ebd1	      0x4c8b4c2470	              mov r9, qword [rsp + 0x70]	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400ebd6	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400ebde	            0x85c0	                           test eax, eax	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400ebe0	     0xf85520d0000	                           jne 0x400f938	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400ebe6	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      3000	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20
0x400ebeb	          0x4885db	                           test rbx, rbx	      3000	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20
0x400ebee	     0xf8444fdffff	                            je 0x400e938	      3000	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20
0x400ebf4	      0xba05000000	                              mov edx, 5	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400ebf9	            0x31ff	                            xor edi, edi	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400ebfb	      0xbe00000000	                              mov esi, 0	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400ec00	      0x4c89442470	              mov qword [rsp + 0x70], r8	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400ec05	      0xe800000000	                          call 0x400ec0a	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400ec0a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ec0f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ec12	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ec14	      0xe800000000	                          call 0x400ec19	       104	stdio2.h	CALL_16
0x400ec19	        0x488b7360	            mov rsi, qword [rbx + 0x60] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec1d	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec1f	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec24	      0xe8d716ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec29	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec2d	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec2f	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec34	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec39	      0x4889442438	             mov qword [rsp + 0x38], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec3e	      0xe8bd16ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec43	            0x31ff	                            xor edi, edi	      3006	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_39
0x400ec45	      0xba05000000	                              mov edx, 5	      3006	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_39
0x400ec4a	      0xbe00000000	                              mov esi, 0	      3006	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_39
0x400ec4f	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec52	      0xe800000000	                          call 0x400ec57	      3006	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_39
0x400ec57	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x400ec5c	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400ec5f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ec62	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ec67	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ec69	      0xe800000000	                          call 0x400ec6e	       104	stdio2.h	CALL_16
0x400ec6e	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec73	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec75	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec7a	        0x488b7368	            mov rsi, qword [rbx + 0x68] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec7e	      0xe87d16ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec83	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec87	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec89	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec8e	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec93	      0x4889442438	             mov qword [rsp + 0x38], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec98	      0xe86316ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ec9d	            0x31ff	                            xor edi, edi	      3009	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_42
0x400ec9f	      0xba05000000	                              mov edx, 5	      3009	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_42
0x400eca4	      0xbe00000000	                              mov esi, 0	      3009	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_42
0x400eca9	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ecac	      0xe800000000	                          call 0x400ecb1	      3009	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_42
0x400ecb1	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x400ecb6	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400ecb9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ecbc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ecc1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ecc3	      0xe800000000	                          call 0x400ecc8	       104	stdio2.h	CALL_16
0x400ecc8	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eccd	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eccf	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ecd4	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ecd8	      0xe82316ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ecdd	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ece1	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ece3	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ece8	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eced	      0x4889442438	             mov qword [rsp + 0x38], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ecf2	      0xe80916ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ecf7	            0x31ff	                            xor edi, edi	      3012	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_45
0x400ecf9	      0xba05000000	                              mov edx, 5	      3012	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_45
0x400ecfe	      0xbe00000000	                              mov esi, 0	      3012	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_45
0x400ed03	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed06	      0xe800000000	                          call 0x400ed0b	      3012	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_45
0x400ed0b	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x400ed10	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400ed13	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ed16	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ed1b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ed1d	      0xe800000000	                          call 0x400ed22	       104	stdio2.h	CALL_16
0x400ed22	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed27	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed29	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed2e	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed32	      0xe8c915ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed37	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed3b	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed3d	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed42	      0x4889442438	             mov qword [rsp + 0x38], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed47	      0xe8b415ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed4c	            0x31ff	                            xor edi, edi	      3015	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_48
0x400ed4e	      0xba05000000	                              mov edx, 5	      3015	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_48
0x400ed53	      0xbe00000000	                              mov esi, 0	      3015	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_48
0x400ed58	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ed5b	      0xe800000000	                          call 0x400ed60	      3015	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_48
0x400ed60	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x400ed65	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ed68	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400ed6b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ed70	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ed72	      0xe800000000	                          call 0x400ed77	       104	stdio2.h	CALL_16
0x400ed77	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	       104	stdio2.h	CALL_16
0x400ed7c	      0xe9b7fbffff	                           jmp 0x400e938	       104	stdio2.h	CALL_16
0x400ed81	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400ed88	          0x4889df	                            mov rdi, rbx	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400ed8b	        0x498d5e04	                      lea rbx, [r14 + 4]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400ed8f	      0x4889542440	             mov qword [rsp + 0x40], rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400ed94	      0xbe01000000	                              mov esi, 1	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400ed99	    0xff1500000000	                 call qword [0x0400ed9f]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400ed9f	            0x31f6	                            xor esi, esi	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400eda1	          0x83f802	                              cmp eax, 2	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400eda4	            0x89c1	                            mov ecx, eax	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400eda6	        0x400f94c6	                                sete sil	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edaa	          0x4939dd	                            cmp r13, rbx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edad	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edb2	        0x89742460	             mov dword [rsp + 0x60], esi	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edb6	     0xf874c020000	                            ja 0x400f008	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edbc	          0x4c89ee	                            mov rsi, r13	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edbf	          0x4829d6	                            sub rsi, rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edc2	          0x8d46ff	                      lea eax, [rsi - 1]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edc5	          0x83f807	                              cmp eax, 7	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edc8	     0xf86e40c0000	                           jbe 0x400fab2	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400edce	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400edd3	        0x894c2450	             mov dword [rsp + 0x50], ecx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400edd7	        0x488d1403	                    lea rdx, [rbx + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400eddb	          0x4939d5	                            cmp r13, rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400edde	     0xf87f6010000	                            ja 0x400efda	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ede4	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400edea	          0x4989d6	                            mov r14, rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400eded	      0xc644244000	                mov byte [rsp + 0x40], 0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400edf2	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400edfb	     0xf8538f8ffff	                           jne 0x400e639	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee01	     0xf1f80000000	                         nop dword [rax]	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee08	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee0d	    0x48c744246800	               mov qword [rsp + 0x68], 0	      2923	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee16	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee1a	      0x4889442458	             mov qword [rsp + 0x58], rax	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee1f	      0xe92cf8ffff	                           jmp 0x400e650	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee24	         0xf1f4000	                         nop dword [rax]	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee28	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee2c	      0xe9caf8ffff	                           jmp 0x400e6fb	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee31	     0xf1f80000000	                         nop dword [rax]	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ee38	          0x4c89ee	                            mov rsi, r13	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400ee3b	      0x482b742408	                sub rsi, qword [rsp + 8]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400ee40	          0x8d46ff	                      lea eax, [rsi - 1]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400ee43	          0x83f807	                              cmp eax, 7	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400ee46	     0xf866f0c0000	                           jbe 0x400fabb	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400ee4c	        0x498d5e02	                      lea rbx, [r14 + 2]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee50	    0x41bc04000000	                             mov r12d, 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee56	    0x48c744241804	               mov qword [rsp + 0x18], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee5f	    0xc74424380400	               mov dword [rsp + 0x38], 4	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400ee67	          0x4939dd	                            cmp r13, rbx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee6a	     0xf8787f6ffff	                            ja 0x400e4f7	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee70	            0x31ed	                            xor ebp, ebp	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee72	            0xeb3f	                           jmp 0x400eeb3	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee74	         0xf1f4000	                         nop dword [rax]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee78	        0x498d5e02	                      lea rbx, [r14 + 2]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee7c	    0x41bc04000000	                             mov r12d, 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee82	    0x48c744241804	               mov qword [rsp + 0x18], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee8b	    0xc74424380400	               mov dword [rsp + 0x38], 4	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400ee93	          0x4939dd	                            cmp r13, rbx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee96	     0xf87cc000000	                            ja 0x400ef68	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee9c	          0x4d39ee	                            cmp r14, r13	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ee9f	            0x7312	                           jae 0x400eeb3	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eea1	          0x4c89ee	                            mov rsi, r13	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eea4	          0x4c29f6	                            sub rsi, r14	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eea7	          0x8d46ff	                      lea eax, [rsi - 1]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eeaa	          0x83f807	                              cmp eax, 7	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eead	     0xf864bf6ffff	                           jbe 0x400e4fe	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eeb3	            0x31c0	                            xor eax, eax	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eeb5	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eeba	      0x6689442420	               mov word [rsp + 0x20], ax	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eebf	      0xe94df6ffff	                           jmp 0x400e511	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eec4	         0xf1f4000	                         nop dword [rax]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eec8	      0xbe04000000	                              mov esi, 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400eecd	          0x4c89ef	                            mov rdi, r13	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400eed0	    0xff1500000000	                 call qword [0x0400eed6]	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400eed6	          0x4c39e0	                            cmp rax, r12	      2793	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eed9	     0xf85f2070000	                           jne 0x400f6d1	      2793	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eedf	        0x498d450c	                    lea rax, [r13 + 0xc]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eee3	          0x4839c5	                            cmp rbp, rax	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eee6	     0xf874e080000	                            ja 0x400f73a	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eeec	          0x4c39f5	                            cmp rbp, r14	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eeef	     0xf8693f4ffff	                           jbe 0x400e388	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eef5	          0x4889ee	                            mov rsi, rbp	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eef8	          0x4c29f6	                            sub rsi, r14	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eefb	          0x8d46ff	                      lea eax, [rsi - 1]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400eefe	          0x83f807	                              cmp eax, 7	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400ef01	     0xf8781f4ffff	                            ja 0x400e388	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400ef07	      0xe933080000	                           jmp 0x400f73f	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400ef0c	         0xf1f4000	                         nop dword [rax]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400ef10	    0x488d9424b800	                   lea rdx, [rsp + 0xb8]	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ef18	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ef20	          0x4c89f7	                            mov rdi, r14	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ef23	      0xe800000000	                          call 0x400ef28	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ef28	      0xe9aff7ffff	                           jmp 0x400e6dc	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ef2d	           0xf1f00	                         nop dword [rax]	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ef30	      0xbe08000000	                              mov esi, 8	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ef35	          0x4c89f7	                            mov rdi, r14	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400ef38	          0x4989de	                            mov r14, rbx	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400ef3b	    0x41bc0c000000	                           mov r12d, 0xc	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400ef41	        0x498d5e02	                      lea rbx, [r14 + 2]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ef45	    0xff1500000000	                 call qword [0x0400ef4b]	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400ef4b	          0x4939dd	                            cmp r13, rbx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ef4e	          0x4889c5	                            mov rbp, rax	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400ef51	    0x48c744241808	               mov qword [rsp + 0x18], 8	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400ef5a	    0xc74424380800	               mov dword [rsp + 0x38], 8	      2890	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400ef62	     0xf8634ffffff	                           jbe 0x400ee9c	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ef68	      0xbe02000000	                              mov esi, 2	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ef6d	      0xe98cf5ffff	                           jmp 0x400e4fe	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ef72	    0x660f1f440000	                    nop word [rax + rax]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400ef78	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ef7a	          0x4c89fe	                            mov rsi, r15	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ef7d	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ef82	      0xe87913ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ef87	            0x31ff	                            xor edi, edi	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400ef89	      0xba05000000	                              mov edx, 5	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400ef8e	      0xbe00000000	                              mov esi, 0	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400ef93	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ef96	      0xe800000000	                          call 0x400ef9b	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400ef9b	       0xfb7542420	           movzx edx, word [rsp + 0x20] 	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400efa0	          0x4889c7	                            mov rdi, rax	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400efa3	          0x4889de	                            mov rsi, rbx	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400efa6	            0x31c0	                            xor eax, eax	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400efa8	      0xe800000000	                          call 0x400efad	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400efad	      0xe989f7ffff	                           jmp 0x400e73b	      3041	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400efb2	    0x660f1f440000	                    nop word [rax + rax]	      3041	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400efb8	    0xc74424500000	               mov dword [rsp + 0x50], 0	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400efc0	    0xc74424600000	               mov dword [rsp + 0x60], 0	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400efc8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400efcd	        0x488d1403	                    lea rdx, [rbx + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400efd1	          0x4939d5	                            cmp r13, rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400efd4	     0xf860afeffff	                           jbe 0x400ede4	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400efda	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400efde	      0xc644244000	                mov byte [rsp + 0x40], 0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400efe3	      0xe916f6ffff	                           jmp 0x400e5fe	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400efe8	     0xf1f84000000	                   nop dword [rax + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400eff0	          0x4989d6	                            mov r14, rdx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400eff3	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400effc	      0xe92cf6ffff	                           jmp 0x400e62d	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400f001	     0xf1f80000000	                         nop dword [rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400f008	        0x89442450	             mov dword [rsp + 0x50], eax	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400f00c	      0xbe01000000	                              mov esi, 1	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400f011	      0xe9bbf5ffff	                           jmp 0x400e5d1	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400f016	            0x31c0	                            xor eax, eax	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f018	      0x4d8d6c0504	                lea r13, [r13 + rax + 4]	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f01d	          0x4885c0	                           test rax, rax	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f020	        0x400f9ec6	                               setle sil	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f024	          0x4c39eb	                            cmp rbx, r13	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f027	           0xf97c1	                                 seta cl	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f02a	             0x9f1	                             or ecx, esi	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f02c	            0x84c9	                             test cl, cl	      2810	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4
0x400f02e	     0xf8556f3ffff	                           jne 0x400e38a	      2810	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4
0x400f034	        0x4183c701	                             add r15d, 1	      2786	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f038	          0x4939ed	                            cmp r13, rbp	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f03b	     0xf821ff3ffff	                            jb 0x400e360	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400f041	          0x4489f8	                           mov eax, r15d	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400f044	          0x4989ee	                            mov r14, rbp	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400f047	    0x4489bc249400	            mov dword [rsp + 0x94], r15d	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400f04f	            0x85c0	                           test eax, eax	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400f051	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400f056	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400f05a	     0xf84090a0000	                            je 0x400fa69	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400f060	        0x488d1440	                  lea rdx, [rax + rax*2]	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400f064	        0x4c8d2490	                  lea r12, [rax + rdx*4]	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400f068	        0x49c1e403	                              shl r12, 3	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400f06c	          0x4c89e7	                            mov rdi, r12	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400f06f	      0xe800000000	                          call 0x400f074	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400f074	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_132	CALL_6
0x400f076	          0x4c89e2	                            mov rdx, r12	        90	string3.h	FUNCTION_132	CALL_6
0x400f079	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_132	CALL_6
0x400f07c	    0x488905000000	            mov qword [0x0400f083], rax 	      2825	dwarf.c	FUNCTION_34	IF_1	CALL_9
0x400f083	      0xe800000000	                          call 0x400f088	        90	string3.h	FUNCTION_132	CALL_6
0x400f088	        0x8b4c2464	            mov ecx, dword [rsp + 0x64] 	      2845	dwarf.c	FUNCTION_34	IF_7
0x400f08c	    0x44893d000000	           mov dword [0x0400f093], r15d 	      2842	dwarf.c	FUNCTION_34	IF_1
0x400f093	            0x85c9	                           test ecx, ecx	      2845	dwarf.c	FUNCTION_34	IF_7
0x400f095	     0xf84fef6ffff	                            je 0x400e799	      2845	dwarf.c	FUNCTION_34	IF_7
0x400f09b	          0x4889ee	                            mov rsi, rbp	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400f09e	            0x89df	                            mov edi, ebx	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400f0a0	      0xe87b20ffff	 call sym.load_debug_section_with_follow	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400f0a5	          0x4889da	                            mov rdx, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400f0a8	          0x4889d8	                            mov rax, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400f0ab	        0x48c1e204	                              shl rdx, 4	      2856	dwarf.c	FUNCTION_34	IF_8
0x400f0af	        0x48c1e007	                              shl rax, 7	      2856	dwarf.c	FUNCTION_34	IF_8
0x400f0b3	          0x4829d0	                            sub rax, rdx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400f0b6	    0x4883b8000000	                      cmp qword [rax], 0	      2856	dwarf.c	FUNCTION_34	IF_8
0x400f0be	     0xf8562f3ffff	                           jne 0x400e426	      2856	dwarf.c	FUNCTION_34	IF_8
0x400f0c4	          0x4889d8	                            mov rax, rbx	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0c7	        0x48c1e307	                              shl rbx, 7	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0cb	      0xba05000000	                              mov edx, 5	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0d0	        0x48c1e004	                              shl rax, 4	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0d4	      0xbe00000000	                              mov esi, 0	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0d9	            0x31ff	                            xor edi, edi	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0db	          0x4829c3	                            sub rbx, rax	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0de	    0x488b9b000000	                    mov rbx, qword [rbx]	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0e5	      0xe800000000	                          call 0x400f0ea	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0ea	          0x4889c7	                            mov rdi, rax	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0ed	            0x31c0	                            xor eax, eax	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0ef	          0x4889de	                            mov rsi, rbx	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0f2	      0xe800000000	                          call 0x400f0f7	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400f0f7	            0x31c0	                            xor eax, eax	      2860	dwarf.c	FUNCTION_34	IF_8
0x400f0f9	      0xe991020000	                           jmp 0x400f38f	      2860	dwarf.c	FUNCTION_34	IF_8
0x400f0fe	            0x6690	                                     nop	      2860	dwarf.c	FUNCTION_34	IF_8
0x400f100	    0x488b2d000000	            mov rbp, qword [0x0400f107] 	       843	dwarf.c	FUNCTION_17	FOR_1
0x400f107	          0x4885ed	                           test rbp, rbp	       843	dwarf.c	FUNCTION_17	FOR_1
0x400f10a	            0x7435	                            je 0x400f141	       843	dwarf.c	FUNCTION_17	FOR_1
0x400f10c	         0xf1f4000	                         nop dword [rax]	       843	dwarf.c	FUNCTION_17	FOR_1
0x400f110	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400f114	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	       845	dwarf.c	FUNCTION_17	FOR_1
0x400f118	          0x4885ff	                           test rdi, rdi	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400f11b	            0x7414	                            je 0x400f131	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400f11d	           0xf1f00	                         nop dword [rax]	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400f120	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	       850	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400f124	      0xe800000000	                          call 0x400f129	       852	dwarf.c	FUNCTION_17	FOR_1	FOR_2	CALL_1
0x400f129	          0x4885db	                           test rbx, rbx	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400f12c	          0x4889df	                            mov rdi, rbx	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400f12f	            0x75ef	                           jne 0x400f120	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400f131	          0x4889ef	                            mov rdi, rbp	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x400f134	          0x4c89e5	                            mov rbp, r12	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x400f137	      0xe800000000	                          call 0x400f13c	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x400f13c	          0x4d85e4	                           test r12, r12	       843	dwarf.c	FUNCTION_17	FOR_1
0x400f13f	            0x75cf	                           jne 0x400f110	       843	dwarf.c	FUNCTION_17	FOR_1
0x400f141	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      3056	dwarf.c	FUNCTION_34	FOR_2	IF_24
0x400f146	      0x48394c2458	            cmp qword [rsp + 0x58], rcx 	      3056	dwarf.c	FUNCTION_34	FOR_2	IF_24
0x400f14b	    0x48c705000000	               mov qword [0x0400f156], 0	       860	dwarf.c	FUNCTION_17
0x400f156	    0x48c705000000	               mov qword [0x0400f161], 0	       860	dwarf.c	FUNCTION_17
0x400f161	     0xf86a7070000	                           jbe 0x400f90e	      3056	dwarf.c	FUNCTION_34	FOR_2	IF_24
0x400f167	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3062	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400f16c	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	      3061	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400f171	      0x48035c2468	             add rbx, qword [rsp + 0x68]	      3061	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400f176	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      3062	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400f17a	          0x4839eb	                            cmp rbx, rbp	      3061	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400f17d	     0xf8746080000	                            ja 0x400f9c9	      3061	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400f183	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400f187	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400f18c	      0x4803442448	             add rax, qword [rsp + 0x48]	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400f191	        0x488d341f	                    lea rsi, [rdi + rbx]	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400f195	          0x4801c7	                            add rdi, rax	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400f198	      0xe8132dffff	 call sym.process_abbrev_section.part.15	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400f19d	      0x4c3b742408	                cmp r14, qword [rsp + 8]	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1a2	     0xf8393f5ffff	                           jae 0x400e73b	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1a8	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1af	    0xc784248c0000	     mov dword [rsp + 0x8c], 0xffffffff 	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1ba	    0xc78424900000	               mov dword [rsp + 0x90], 0	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1c5	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1cd	      0x4c897c2450	             mov qword [rsp + 0x50], r15	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1d2	        0x488d1440	                  lea rdx, [rax + rax*2]	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1d6	        0x488d0490	                  lea rax, [rax + rdx*4]	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1da	        0x48c1e003	                              shl rax, 3	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1de	    0x488984249800	             mov qword [rsp + 0x98], rax	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1e6	       0xfb7442420	           movzx eax, word [rsp + 0x20] 	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1eb	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1f0	        0x89442448	             mov dword [rsp + 0x48], eax	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1f4	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1f9	      0x4889442440	             mov qword [rsp + 0x40], rax	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f1fe	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400f203	    0x488db424ac00	                   lea rsi, [rsp + 0xac]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400f20b	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400f20d	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x400f210	          0x4d89f4	                            mov r12, r14	      3085	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f213	      0x4c2b642428	             sub r12, qword [rsp + 0x28]	      3085	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f218	          0x4889d9	                            mov rcx, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400f21b	      0xe800000000	                          call 0x400f220	       356	dwarf.c	FUNCTION_10	CALL_1
0x400f220	          0x4889c5	                            mov rbp, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x400f223	    0x8b8424ac0000	            mov eax, dword [rsp + 0xac] 	      3088	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f22a	          0x4901c6	                            add r14, rax	      3088	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f22d	          0x4885ed	                           test rbp, rbp	      3092	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26
0x400f230	            0x7556	                           jne 0x400f288	      3092	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26
0x400f232	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400f236	            0x85c0	                           test eax, eax	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400f238	     0xf85f2000000	                           jne 0x400f330	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400f23e	      0x48395c2420	            cmp qword [rsp + 0x20], rbx 	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400f243	     0xf85e7000000	                           jne 0x400f330	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400f249	          0x4c39f3	                            cmp rbx, r14	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400f24c	     0xf86cc000000	                           jbe 0x400f31e	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400f252	        0x41803e00	                       cmp byte [r14], 0	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400f256	     0xf85c2000000	                           jne 0x400f31e	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400f25c	          0x4c89f0	                            mov rax, r14	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400f25f	          0x4889da	                            mov rdx, rbx	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400f262	            0xeb0d	                           jmp 0x400f271	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400f264	         0xf1f4000	                         nop dword [rax]	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400f268	          0x803800	                       cmp byte [rax], 0	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400f26b	     0xf85bf000000	                           jne 0x400f330	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400f271	        0x4883c001	                              add rax, 1	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400f275	          0x4839c2	                            cmp rdx, rax	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400f278	            0x75ee	                           jne 0x400f268	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400f27a	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400f27f	      0xe9b7f4ffff	                           jmp 0x400e73b	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400f284	         0xf1f4000	                         nop dword [rax]	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400f288	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      3131	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35
0x400f28c	            0x85c0	                           test eax, eax	      3131	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35
0x400f28e	     0xf859c010000	                           jne 0x400f430	      3131	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35
0x400f294	    0x488b05000000	            mov rax, qword [0x0400f29b] 	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f29b	          0x4885c0	                           test rax, rax	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f29e	            0x741c	                            je 0x400f2bc	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f2a0	          0x4939c4	                            cmp r12, rax	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f2a3	     0xf82e7050000	                            jb 0x400f890	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f2a9	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f2b0	       0xf44442470	           cmove eax, dword [rsp + 0x70]	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f2b5	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f2bc	    0x8b0500000000	            mov eax, dword [0x0400f2c2] 	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2c2	        0x8b5c2470	            mov ebx, dword [rsp + 0x70] 	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2c6	            0x39d8	                            cmp eax, ebx	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2c8	           0xf9fc1	                                 setg cl	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2cb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2ce	           0xf94c2	                                 sete dl	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2d1	             0x8d1	                               or cl, dl	      3140	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2d3	        0x884c2438	               mov byte [rsp + 0x38], cl	      3140	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2d7	     0xf8523050000	                           jne 0x400f800	      3140	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400f2dd	    0x3b8424900000	            cmp eax, dword [rsp + 0x90] 	      3145	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400f2e4	     0xf8eb3050000	                           jle 0x400f89d	      3145	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400f2ea	      0xba05000000	                              mov edx, 5	      3146	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400f2ef	      0xbe00000000	                              mov esi, 0	      3146	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400f2f4	            0x31ff	                            xor edi, edi	      3146	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400f2f6	      0xe800000000	                          call 0x400f2fb	      3146	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400f2fb	          0x4c89e1	                            mov rcx, r12	       104	stdio2.h	CALL_16
0x400f2fe	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400f301	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x400f303	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400f308	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400f30a	          0x4531ff	                          xor r15d, r15d	       104	stdio2.h	CALL_16
0x400f30d	      0xe800000000	                          call 0x400f312	       104	stdio2.h	CALL_16
0x400f312	    0x899c24900000	             mov dword [rsp + 0x90], ebx	       104	stdio2.h	CALL_16
0x400f319	      0xe91d010000	                           jmp 0x400f43b	       104	stdio2.h	CALL_16
0x400f31e	      0x4c39742408	                cmp qword [rsp + 8], r14	      3102	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	IF_29
0x400f323	     0xf8451ffffff	                            je 0x400f27a	      3102	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	IF_29
0x400f329	     0xf1f80000000	                         nop dword [rax]	      3102	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	IF_29
0x400f330	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f334	            0x85c0	                           test eax, eax	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f336	            0x7528	                           jne 0x400f360	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f338	    0x4c3b25000000	            cmp r12, qword [0x0400f33f] 	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f33f	            0x721f	                            jb 0x400f360	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f341	    0x8b0500000000	            mov eax, dword [0x0400f347] 	      3107	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f347	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f34a	     0xf845c050000	                            je 0x400f8ac	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f350	        0x3b442470	            cmp eax, dword [rsp + 0x70] 	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f354	     0xf8f52050000	                            jg 0x400f8ac	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f35a	    0x660f1f440000	                    nop word [rax + rax]	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400f360	      0x836c247001	               sub dword [rsp + 0x70], 1	      3113	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31
0x400f365	     0xf8822040000	                            js 0x400f78d	      3113	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31
0x400f36b	    0x48833d000000	               cmp qword [0x0400f373], 0	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400f373	     0xf84a1000000	                            je 0x400f41a	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400f379	    0x8b8c248c0000	            mov ecx, dword [rsp + 0x8c] 	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400f380	        0x394c2470	            cmp dword [rsp + 0x70], ecx 	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400f384	     0xf8d90000000	                           jge 0x400f41a	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400f38a	      0xb801000000	                              mov eax, 1	      3266	dwarf.c	FUNCTION_34
0x400f38f	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      3267	dwarf.c	FUNCTION_34
0x400f397	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3267	dwarf.c	FUNCTION_34
0x400f3a0	     0xf851f070000	                           jne 0x400fac5	      3267	dwarf.c	FUNCTION_34
0x400f3a6	    0x4881c4180100	                          add rsp, 0x118	      3267	dwarf.c	FUNCTION_34
0x400f3ad	              0x5b	                                 pop rbx	      3267	dwarf.c	FUNCTION_34
0x400f3ae	              0x5d	                                 pop rbp	      3267	dwarf.c	FUNCTION_34
0x400f3af	            0x415c	                                 pop r12	      3267	dwarf.c	FUNCTION_34
0x400f3b1	            0x415d	                                 pop r13	      3267	dwarf.c	FUNCTION_34
0x400f3b3	            0x415e	                                 pop r14	      3267	dwarf.c	FUNCTION_34
0x400f3b5	            0x415f	                                 pop r15	      3267	dwarf.c	FUNCTION_34
0x400f3b7	              0xc3	                                     ret	      3267	dwarf.c	FUNCTION_34
0x400f3b8	     0xf1f84000000	                   nop dword [rax + rax]	      3267	dwarf.c	FUNCTION_34
0x400f3c0	          0x4d85e4	                           test r12, r12	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400f3c3	    0x4c8bac248000	            mov r13, qword [rsp + 0x80] 	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400f3cb	            0x7443	                            je 0x400f410	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400f3cd	      0x418b4c2448	            mov ecx, dword [r12 + 0x48] 	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400f3d2	      0x418b442450	            mov eax, dword [r12 + 0x50] 	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400f3d7	            0x89ca	                            mov edx, ecx	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f3d9	            0x29c2	                            sub edx, eax	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f3db	          0x83fa01	                              cmp edx, 1	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f3de	     0xf8473040000	                            je 0x400f857	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f3e4	            0x722a	                            jb 0x400f410	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f3e6	          0x83faff	             cmp edx, 0xffffffffffffffff	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f3e9	     0xf854f040000	                           jne 0x400f83e	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f3ef	      0xba05000000	                              mov edx, 5	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400f3f4	      0xbe00000000	                              mov esi, 0	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400f3f9	            0x31ff	                            xor edi, edi	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400f3fb	      0xe800000000	                          call 0x400f400	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400f400	          0x4889c7	                            mov rdi, rax	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400f403	            0x31c0	                            xor eax, eax	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400f405	      0xe800000000	                          call 0x400f40a	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400f40a	    0x41836c245001	               sub dword [r12 + 0x50], 1	      3239	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f410	      0x41837d1001	               cmp dword [r13 + 0x10], 1	      3247	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_45
0x400f415	      0x835c2470ff	sbb dword [rsp + 0x70], 0xffffffffffffffff	      3247	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_45
0x400f41a	      0x4c3b742408	                cmp r14, qword [rsp + 8]	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f41f	     0xf82d9fdffff	                            jb 0x400f1fe	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f425	      0xe950feffff	                           jmp 0x400f27a	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f42a	    0x660f1f440000	                    nop word [rax + rax]	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f430	      0xc644243800	                mov byte [rsp + 0x38], 0	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f435	    0x41bf01000000	                             mov r15d, 1	      3083	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f43b	    0x4c8b2d000000	            mov r13, qword [0x0400f442] 	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f442	          0x4d85ed	                           test r13, r13	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f445	     0xf848d040000	                            je 0x400f8d8	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f44b	        0x49396d00	                    cmp qword [r13], rbp	      3154	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f44f	            0x7413	                            je 0x400f464	      3154	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f451	        0x4d8b6d28	            mov r13, qword [r13 + 0x28] 	      3155	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f455	          0x4d85ed	                           test r13, r13	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f458	     0xf847a040000	                            je 0x400f8d8	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f45e	        0x493b6d00	                    cmp rbp, qword [r13]	      3154	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f462	            0x75ed	                           jne 0x400f451	      3154	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400f464	      0x807c243800	                cmp byte [rsp + 0x38], 0	      3170	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_42
0x400f469	     0xf85e3020000	                           jne 0x400f752	      3170	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_42
0x400f46f	        0x498b4508	                mov rax, qword [r13 + 8]	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f473	        0x4883f811	                           cmp rax, 0x11	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f477	     0xf8495020000	                            je 0x400f712	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f47d	        0x4883f82e	                           cmp rax, 0x2e	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f481	    0xc70500000000	               mov dword [0x0400f48b], 0	      3184	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f48b	     0xf849a020000	                            je 0x400f72b	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f491	        0x4883f803	                              cmp rax, 3	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f495	     0xf8490020000	                            je 0x400f72b	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f49b	    0x4c8b25000000	            mov r12, qword [0x0400f4a2] 	      3191	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f4a2	          0x4d85e4	                           test r12, r12	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f4a5	     0xf8405020000	                            je 0x400f6b0	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f4ab	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      3191	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f4b2	    0x390500000000	            cmp dword [0x0400f4b8], eax 	      3191	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f4b8	     0xf86f2010000	                           jbe 0x400f6b0	      3191	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400f4be	    0x4c03a4249800	             add r12, qword [rsp + 0x98]	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400f4c6	     0xf84e4010000	                            je 0x400f6b0	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400f4cc	      0x418b442450	            mov eax, dword [r12 + 0x50] 	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400f4d1	      0x4139442448	            cmp dword [r12 + 0x48], eax 	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400f4d6	     0xf852f060000	                           jne 0x400fb0b	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400f4dc	        0x498b5d18	            mov rbx, qword [r13 + 0x18] 	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f4e0	          0x4885db	                           test rbx, rbx	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f4e3	     0xf8427ffffff	                            je 0x400f410	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f4e9	          0x488b2b	                    mov rbp, qword [rbx]	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f4ec	          0x4885ed	                           test rbp, rbp	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f4ef	     0xf84d8feffff	                            je 0x400f3cd	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f4f5	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f4f9	    0x4c89ac248000	             mov qword [rsp + 0x80], r13	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f501	            0x85c0	                           test eax, eax	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f503	           0xf95c0	                                setne al	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f506	        0x4183f701	                             xor r15d, 1	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f50a	          0x4409f8	                            or eax, r15d	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f50d	        0x88442458	               mov byte [rsp + 0x58], al	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f511	        0x440fb6f8	                          movzx r15d, al	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f515	            0xeb75	                           jmp 0x400f58c	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f517	    0x660f1f840000	                    nop word [rax + rax]	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f520	      0x807c245800	                cmp byte [rsp + 0x58], 0	      2694	dwarf.c	FUNCTION_31	IF_1
0x400f525	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      3206	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	CALL_79
0x400f529	        0x4c8b5b08	                mov r11, qword [rbx + 8]	      3206	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	CALL_79
0x400f52d	     0xf840d010000	                            je 0x400f640	      2694	dwarf.c	FUNCTION_31	IF_1
0x400f533	            0x6a20	                               push 0x20	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f535	        0xff742418	                 push qword [rsp + 0x18]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f539	          0x4c89f1	                            mov rcx, r14	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f53c	        0xff742440	                 push qword [rsp + 0x40]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f540	            0x4157	                                push r15	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f542	          0x4c89ea	                            mov rdx, r13	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f545	            0x4154	                                push r12	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f547	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f54b	          0x4c89de	                            mov rsi, r11	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f54e	          0x4889ef	                            mov rdi, rbp	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f551	              0x50	                                push rax	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f552	        0xff742448	                 push qword [rsp + 0x48]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f556	        0xff742478	                 push qword [rsp + 0x78]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f55a	    0x4c8b8c249000	              mov r9, qword [rsp + 0x90]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f562	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f567	      0xe8b49cffff	    call sym.read_and_display_attr_value	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f56c	        0x4883c440	                           add rsp, 0x40	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f570	          0x4989c6	                            mov r14, rax	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f573	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      3200	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f577	          0x4885db	                           test rbx, rbx	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f57a	     0xf8440feffff	                            je 0x400f3c0	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f580	          0x488b2b	                    mov rbp, qword [rbx]	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f583	          0x4885ed	                           test rbp, rbp	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f586	     0xf8434feffff	                            je 0x400f3c0	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f58c	      0x807c243800	                cmp byte [rsp + 0x38], 0	      3202	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	IF_43
0x400f591	            0x748d	                            je 0x400f520	      3202	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	IF_43
0x400f593	          0x4c89f2	                            mov rdx, r14	       104	stdio2.h	CALL_16
0x400f596	      0x482b542428	             sub rdx, qword [rsp + 0x28]	       104	stdio2.h	CALL_16
0x400f59b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400f59d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400f5a2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400f5a7	      0xe800000000	                          call 0x400f5ac	       104	stdio2.h	CALL_16
0x400f5ac	      0x807c245800	                cmp byte [rsp + 0x58], 0	      2694	dwarf.c	FUNCTION_31	IF_1
0x400f5b1	          0x488b2b	                    mov rbp, qword [rbx]	      2694	dwarf.c	FUNCTION_31	IF_1
0x400f5b4	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      3206	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	CALL_79
0x400f5b8	        0x4c8b5b08	                mov r11, qword [rbx + 8]	      3206	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	CALL_79
0x400f5bc	     0xf8571ffffff	                           jne 0x400f533	      2694	dwarf.c	FUNCTION_31	IF_1
0x400f5c2	          0x4885ed	                           test rbp, rbp	      1733	dwarf.c	FUNCTION_29	IF_1
0x400f5c5	            0x7579	                           jne 0x400f640	      1733	dwarf.c	FUNCTION_29	IF_1
0x400f5c7	      0xba00000000	                              mov edx, 0	      1734	dwarf.c	FUNCTION_29	IF_1
0x400f5cc	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400f5d1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400f5d6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400f5d8	      0x4c895c2468	             mov qword [rsp + 0x68], r11	       104	stdio2.h	CALL_16
0x400f5dd	      0xe800000000	                          call 0x400f5e2	       104	stdio2.h	CALL_16
0x400f5e2	            0x6a20	                               push 0x20	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5e4	        0xff742418	                 push qword [rsp + 0x18]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5e8	          0x4c89f1	                            mov rcx, r14	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5eb	        0xff742440	                 push qword [rsp + 0x40]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5ef	            0x4157	                                push r15	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5f1	          0x4889ef	                            mov rdi, rbp	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5f4	            0x4154	                                push r12	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5f6	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5fa	          0x4c89ea	                            mov rdx, r13	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5fd	              0x50	                                push rax	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f5fe	        0xff742448	                 push qword [rsp + 0x48]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f602	        0xff742478	                 push qword [rsp + 0x78]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f606	    0x4c8b9c24a800	            mov r11, qword [rsp + 0xa8] 	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f60e	    0x4c8b8c249000	              mov r9, qword [rsp + 0x90]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f616	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f61b	          0x4c89de	                            mov rsi, r11	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f61e	      0xe8fd9bffff	    call sym.read_and_display_attr_value	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f623	        0x4883c440	                           add rsp, 0x40	       104	stdio2.h	CALL_16
0x400f627	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400f62c	          0x4989c6	                            mov r14, rax	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400f62f	      0xe800000000	                          call 0x400f634	       104	stdio2.h	CALL_16
0x400f634	      0xe93affffff	                           jmp 0x400f573	       104	stdio2.h	CALL_16
0x400f639	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400f640	    0x4881fd012000	                         cmp rbp, 0x2001	      1737	dwarf.c	FUNCTION_29	IF_2
0x400f647	      0xba00000000	                              mov edx, 0	      1738	dwarf.c	FUNCTION_29	IF_2
0x400f64c	     0xf847affffff	                            je 0x400f5cc	      1737	dwarf.c	FUNCTION_29	IF_2
0x400f652	            0x89ef	                            mov edi, ebp	      1740	dwarf.c	FUNCTION_29	CALL_1
0x400f654	      0x4c895c2468	             mov qword [rsp + 0x68], r11	      1740	dwarf.c	FUNCTION_29	CALL_1
0x400f659	      0xe800000000	                          call 0x400f65e	      1740	dwarf.c	FUNCTION_29	CALL_1
0x400f65e	          0x4885c0	                           test rax, rax	      1742	dwarf.c	FUNCTION_29	IF_3
0x400f661	          0x4889c2	                            mov rdx, rax	      1740	dwarf.c	FUNCTION_29	CALL_1
0x400f664	      0x4c8b5c2468	            mov r11, qword [rsp + 0x68] 	      1742	dwarf.c	FUNCTION_29	IF_3
0x400f669	     0xf855dffffff	                           jne 0x400f5cc	      1742	dwarf.c	FUNCTION_29	IF_3
0x400f66f	      0xba05000000	                              mov edx, 5	      1746	dwarf.c	FUNCTION_29	IF_3	CALL_2
0x400f674	      0xbe00000000	                              mov esi, 0	      1746	dwarf.c	FUNCTION_29	IF_3	CALL_2
0x400f679	            0x31ff	                            xor edi, edi	      1746	dwarf.c	FUNCTION_29	IF_3	CALL_2
0x400f67b	      0xe800000000	                          call 0x400f680	      1746	dwarf.c	FUNCTION_29	IF_3	CALL_2
0x400f680	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f685	          0x4989c0	                             mov r8, rax	      1746	dwarf.c	FUNCTION_29	IF_3	CALL_2
0x400f688	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f68b	      0xb964000000	                           mov ecx, 0x64	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f690	      0xbe64000000	                           mov esi, 0x64	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f695	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f69a	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f69c	      0xe800000000	                          call 0x400f6a1	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f6a1	      0xba00000000	                              mov edx, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f6a6	      0x4c8b5c2468	            mov r11, qword [rsp + 0x68] 	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f6ab	      0xe91cffffff	                           jmp 0x400f5cc	        64	stdio2.h	FUNCTION_114	CALL_1
0x400f6b0	        0x498b5d18	            mov rbx, qword [r13 + 0x18] 	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f6b4	          0x4885db	                           test rbx, rbx	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f6b7	     0xf8453fdffff	                            je 0x400f410	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f6bd	          0x488b2b	                    mov rbp, qword [rbx]	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f6c0	          0x4885ed	                           test rbp, rbp	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f6c3	     0xf8447fdffff	                            je 0x400f410	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f6c9	          0x4531e4	                          xor r12d, r12d	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f6cc	      0xe924feffff	                           jmp 0x400f4f5	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400f6d1	    0x48b910000000	          movabs rcx, 0xffffffff00000010	      2798	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3
0x400f6db	          0x4801c1	                            add rcx, rax	      2798	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3
0x400f6de	        0x4883f90e	                            cmp rcx, 0xe	      2798	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3
0x400f6e2	     0xf8730f9ffff	                            ja 0x400f018	      2798	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3
0x400f6e8	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400f6ed	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f6ef	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f6f2	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f6f7	        0x488b6910	            mov rbp, qword [rcx + 0x10] 	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400f6fb	      0xe8000cffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f700	      0xba05000000	                              mov edx, 5	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400f705	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f708	      0xbe00000000	                              mov esi, 0	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400f70d	      0xe99decffff	                           jmp 0x400e3af	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400f712	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      3180	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f716	    0xc70500000000	               mov dword [0x0400f720], 1	      3179	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f720	    0x890500000000	            mov dword [0x0400f726], eax 	      3180	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f726	      0xe970fdffff	                           jmp 0x400f49b	      3181	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f72b	    0xc70500000000	               mov dword [0x0400f735], 0	      3186	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f735	      0xe961fdffff	                           jmp 0x400f49b	      3187	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f73a	      0xbe08000000	                              mov esi, 8	      3187	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400f73f	          0x4c89f7	                            mov rdi, r14	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400f742	    0xff1500000000	                 call qword [0x0400f748]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400f748	      0x4d8d6c050c	              lea r13, [r13 + rax + 0xc]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400f74d	      0xe9cbf8ffff	                           jmp 0x400f01d	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400f752	        0x498b7d08	                mov rdi, qword [r13 + 8]	      3171	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_77
0x400f756	      0xe8a51affff	                   call sym.get_TAG_name	      3171	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_77
0x400f75b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400f760	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x400f763	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400f768	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400f76a	      0xe800000000	                          call 0x400f76f	       104	stdio2.h	CALL_16
0x400f76f	      0xe9fbfcffff	                           jmp 0x400f46f	       104	stdio2.h	CALL_16
0x400f774	            0x31d2	                            xor edx, edx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400f776	            0x31ed	                            xor ebp, ebp	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400f778	    0xc74424380400	               mov dword [rsp + 0x38], 4	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400f780	      0x6689542420	               mov word [rsp + 0x20], dx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400f785	          0x4989c7	                            mov r15, rax	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400f788	      0xe984edffff	                           jmp 0x400e511	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400f78d	    0x833d00000000	               cmp dword [0x0400f794], 2	      3117	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400f794	     0xf87d1fbffff	                            ja 0x400f36b	      3117	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400f79a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f79f	            0x31ff	                            xor edi, edi	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7a1	      0xba05000000	                              mov edx, 5	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7a6	      0xbe00000000	                              mov esi, 0	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7ab	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7af	      0xe800000000	                          call 0x400f7b4	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7b4	          0x4c89e6	                            mov rsi, r12	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7b7	          0x4889c7	                            mov rdi, rax	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7ba	            0x31c0	                            xor eax, eax	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7bc	          0x4889da	                            mov rdx, rbx	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7bf	      0xe800000000	                          call 0x400f7c4	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400f7c4	    0x8b0500000000	            mov eax, dword [0x0400f7ca] 	      3121	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400f7ca	          0x83c001	                              add eax, 1	      3121	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400f7cd	          0x83f803	                              cmp eax, 3	      3122	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	IF_33
0x400f7d0	    0x890500000000	            mov dword [0x0400f7d6], eax 	      3121	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400f7d6	     0xf858ffbffff	                           jne 0x400f36b	      3122	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	IF_33
0x400f7dc	            0x31ff	                            xor edi, edi	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f7de	      0xba05000000	                              mov edx, 5	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f7e3	      0xbe00000000	                              mov esi, 0	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f7e8	      0xe800000000	                          call 0x400f7ed	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f7ed	          0x4889c7	                            mov rdi, rax	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f7f0	            0x31c0	                            xor eax, eax	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f7f2	      0xe800000000	                          call 0x400f7f7	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f7f7	      0xe96ffbffff	                           jmp 0x400f36b	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f7fc	         0xf1f4000	                         nop dword [rax]	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400f800	      0xba05000000	                              mov edx, 5	      3142	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	IF_38	CALL_72
0x400f805	      0xbe00000000	                              mov esi, 0	      3142	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	IF_38	CALL_72
0x400f80a	            0x31ff	                            xor edi, edi	      3142	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	IF_38	CALL_72
0x400f80c	      0xe800000000	                          call 0x400f811	      3142	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	IF_38	CALL_72
0x400f811	        0x8b5c2470	            mov ebx, dword [rsp + 0x70] 	       104	stdio2.h	CALL_16
0x400f815	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400f818	          0x4989e8	                             mov r8, rbp	       104	stdio2.h	CALL_16
0x400f81b	          0x4c89e1	                            mov rcx, r12	       104	stdio2.h	CALL_16
0x400f81e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400f823	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400f825	    0x41bf01000000	                             mov r15d, 1	       104	stdio2.h	CALL_16
0x400f82b	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x400f82d	      0xe800000000	                          call 0x400f832	       104	stdio2.h	CALL_16
0x400f832	    0x899c24900000	             mov dword [rsp + 0x90], ebx	       104	stdio2.h	CALL_16
0x400f839	      0xe9fdfbffff	                           jmp 0x400f43b	       104	stdio2.h	CALL_16
0x400f83e	      0xb900000000	                              mov ecx, 0	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400f843	      0xbaab0c0000	                          mov edx, 0xcab	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400f848	      0xbe00000000	                              mov esi, 0	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400f84d	      0xbf00000000	                              mov edi, 0	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400f852	      0xe800000000	                          call 0x400f857	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400f857	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      3228	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f85c	            0x89c6	                            mov esi, eax	      3228	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f85e	          0x83c001	                              add eax, 1	      3229	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f861	            0x39c8	                            cmp eax, ecx	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f863	    0x48c704f2ffff	mov qword [rdx + rsi*8], 0xffffffffffffffff	      3228	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f86b	      0x4189442450	             mov dword [r12 + 0x50], eax	      3229	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400f870	     0xf849afbffff	                            je 0x400f410	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f876	      0xb900000000	                              mov ecx, 0	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f87b	      0xba9f0c0000	                          mov edx, 0xc9f	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f880	      0xbe00000000	                              mov esi, 0	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f885	      0xbf00000000	                              mov edi, 0	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f88a	      0xe800000000	                          call 0x400f88f	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f88f	              0x90	                                     nop	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f890	      0xc644243800	                mov byte [rsp + 0x38], 0	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400f895	          0x4531ff	                          xor r15d, r15d	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f898	      0xe99efbffff	                           jmp 0x400f43b	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f89d	    0x899c24900000	             mov dword [rsp + 0x90], ebx	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f8a4	          0x4531ff	                          xor r15d, r15d	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f8a7	      0xe98ffbffff	                           jmp 0x400f43b	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400f8ac	            0x31ff	                            xor edi, edi	      3109	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30	CALL_67
0x400f8ae	      0xba05000000	                              mov edx, 5	      3109	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30	CALL_67
0x400f8b3	      0xbe00000000	                              mov esi, 0	      3109	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30	CALL_67
0x400f8b8	      0xe800000000	                          call 0x400f8bd	      3109	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30	CALL_67
0x400f8bd	        0x8b542470	            mov edx, dword [rsp + 0x70] 	       104	stdio2.h	CALL_16
0x400f8c1	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400f8c4	          0x4c89e1	                            mov rcx, r12	       104	stdio2.h	CALL_16
0x400f8c7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400f8cc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400f8ce	      0xe800000000	                          call 0x400f8d3	       104	stdio2.h	CALL_16
0x400f8d3	      0xe988faffff	                           jmp 0x400f360	       104	stdio2.h	CALL_16
0x400f8d8	      0x807c243800	                cmp byte [rsp + 0x38], 0	      3160	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41
0x400f8dd	          0x4d89e7	                            mov r15, r12	      3160	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41
0x400f8e0	     0xf85b1010000	                           jne 0x400fa97	      3160	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41
0x400f8e6	      0xba05000000	                              mov edx, 5	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f8eb	      0xbe00000000	                              mov esi, 0	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f8f0	            0x31ff	                            xor edi, edi	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f8f2	      0xe800000000	                          call 0x400f8f7	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f8f7	          0x4889ea	                            mov rdx, rbp	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f8fa	          0x4889c7	                            mov rdi, rax	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f8fd	          0x4c89fe	                            mov rsi, r15	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f900	            0x31c0	                            xor eax, eax	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f902	      0xe800000000	                          call 0x400f907	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400f907	            0x31c0	                            xor eax, eax	      3167	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40
0x400f909	      0xe981faffff	                           jmp 0x400f38f	      3167	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40
0x400f90e	            0x31ff	                            xor edi, edi	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f910	      0xba05000000	                              mov edx, 5	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f915	      0xbe00000000	                              mov esi, 0	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f91a	      0xe800000000	                          call 0x400f91f	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f91f	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f924	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f929	          0x4889c7	                            mov rdi, rax	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f92c	            0x31c0	                            xor eax, eax	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f92e	      0xe800000000	                          call 0x400f933	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f933	      0xe965f8ffff	                           jmp 0x400f19d	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400f938	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f940	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f948	    0x488d9424c000	                   lea rdx, [rsp + 0xc0]	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f950	      0x4c89442470	              mov qword [rsp + 0x70], r8	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f955	      0x4c894c2438	              mov qword [rsp + 0x38], r9	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f95a	      0xe8f11fffff	    call sym.dwarf_vmatoa64.constprop.29	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f95f	      0xba05000000	                              mov edx, 5	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f964	          0x4889c3	                            mov rbx, rax	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f967	      0xbe00000000	                              mov esi, 0	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f96c	            0x31ff	                            xor edi, edi	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f96e	      0xe800000000	                          call 0x400f973	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400f973	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400f976	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400f979	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400f97e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400f980	      0xe800000000	                          call 0x400f985	       104	stdio2.h	CALL_16
0x400f985	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f98a	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f98c	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f991	          0x4c89ce	                             mov rsi, r9	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f994	      0xe86709ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f999	      0xba05000000	                              mov edx, 5	      2997	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_36
0x400f99e	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f9a1	      0xbe00000000	                              mov esi, 0	      2997	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_36
0x400f9a6	            0x31ff	                            xor edi, edi	      2997	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_36
0x400f9a8	      0xe800000000	                          call 0x400f9ad	      2997	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_36
0x400f9ad	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400f9b0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400f9b3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400f9b8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400f9ba	      0xe800000000	                          call 0x400f9bf	       104	stdio2.h	CALL_16
0x400f9bf	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	       104	stdio2.h	CALL_16
0x400f9c4	      0xe91df2ffff	                           jmp 0x400ebe6	       104	stdio2.h	CALL_16
0x400f9c9	            0x31ff	                            xor edi, edi	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9cb	      0xba05000000	                              mov edx, 5	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9d0	      0xbe00000000	                              mov esi, 0	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9d5	      0xe800000000	                          call 0x400f9da	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9da	          0x4889ea	                            mov rdx, rbp	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9dd	          0x4889c7	                            mov rdi, rax	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9e0	          0x4889de	                            mov rsi, rbx	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9e3	            0x31c0	                            xor eax, eax	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9e5	      0xe800000000	                          call 0x400f9ea	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9ea	      0xe9aef7ffff	                           jmp 0x400f19d	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400f9ef	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f9f1	          0x4889ee	                            mov rsi, rbp	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f9f4	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f9f9	      0xe80209ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400f9fe	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400fa01	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa06	            0x31ff	                            xor edi, edi	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa08	      0xba05000000	                              mov edx, 5	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa0d	      0xbe00000000	                              mov esi, 0	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa12	          0x4d89fd	                            mov r13, r15	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa15	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa19	      0xe800000000	                          call 0x400fa1e	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa1e	          0x4889e9	                            mov rcx, rbp	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa21	          0x4889c7	                            mov rdi, rax	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa24	          0x4c89ea	                            mov rdx, r13	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa27	            0x31c0	                            xor eax, eax	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa29	          0x4889de	                            mov rsi, rbx	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa2c	      0xe800000000	                          call 0x400fa31	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400fa31	      0x448b642464	           mov r12d, dword [rsp + 0x64] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400fa36	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      3030	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400fa3d	          0x4585e4	                         test r12d, r12d	      3253	dwarf.c	FUNCTION_34	IF_46
0x400fa40	    0x898424940000	             mov dword [rsp + 0x94], eax	      3030	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400fa47	     0xf850fedffff	                           jne 0x400e75c	      3253	dwarf.c	FUNCTION_34	IF_46
0x400fa4d	      0xe9d7edffff	                           jmp 0x400e829	      3253	dwarf.c	FUNCTION_34	IF_46
0x400fa52	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400fa57	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2864	dwarf.c	FUNCTION_34	CALL_22
0x400fa5b	        0x488d7018	                   lea rsi, [rax + 0x18]	      2864	dwarf.c	FUNCTION_34	CALL_22
0x400fa5f	      0xe8ec1cffff	  call sym.introduce.isra.5.constprop.33	      2864	dwarf.c	FUNCTION_34	CALL_22
0x400fa64	      0xe9b5edffff	                           jmp 0x400e81e	      2864	dwarf.c	FUNCTION_34	CALL_22
0x400fa69	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa6e	      0xba05000000	                              mov edx, 5	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa73	      0xbe00000000	                              mov esi, 0	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa78	            0x31ff	                            xor edi, edi	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa7a	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa7e	      0xe800000000	                          call 0x400fa83	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa83	          0x4889c7	                            mov rdi, rax	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa86	            0x31c0	                            xor eax, eax	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa88	          0x4889de	                            mov rsi, rbx	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa8b	      0xe800000000	                          call 0x400fa90	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400fa90	            0x31c0	                            xor eax, eax	      2821	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400fa92	      0xe9f8f8ffff	                           jmp 0x400f38f	      2821	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400fa97	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400fa9c	      0xe800000000	                          call 0x400faa1	       104	stdio2.h	CALL_16
0x400faa1	    0x488b3d000000	            mov rdi, qword [0x0400faa8] 	      3163	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41	CALL_74
0x400faa8	      0xe800000000	                          call 0x400faad	      3163	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41	CALL_74
0x400faad	      0xe934feffff	                           jmp 0x400f8e6	      3163	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41	CALL_74
0x400fab2	        0x894c2450	             mov dword [rsp + 0x50], ecx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fab6	      0xe916ebffff	                           jmp 0x400e5d1	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fabb	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fac0	      0xe9cde9ffff	                           jmp 0x400e492	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fac5	      0xe800000000	                          call 0x400faca	      3267	dwarf.c	FUNCTION_34
0x400faca	          0x4889df	                            mov rdi, rbx	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400facd	        0x498d5e04	                      lea rbx, [r14 + 4]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fad1	      0x4889542440	             mov qword [rsp + 0x40], rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fad6	    0xff1500000000	                 call qword [0x0400fadc]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fadc	            0x31f6	                            xor esi, esi	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fade	          0x83f802	                              cmp eax, 2	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fae1	            0x89c1	                            mov ecx, eax	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fae3	        0x400f94c6	                                sete sil	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fae7	          0x4939dd	                            cmp r13, rbx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400faea	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400faef	        0x89742460	             mov dword [rsp + 0x60], esi	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400faf3	     0xf870ff5ffff	                            ja 0x400f008	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400faf9	          0x4939d5	                            cmp r13, rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fafc	     0xf87baf2ffff	                            ja 0x400edbc	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fb02	        0x89442450	             mov dword [rsp + 0x50], eax	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fb06	      0xe9bdf4ffff	                           jmp 0x400efc8	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400fb0b	      0xb900000000	                              mov ecx, 0	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400fb10	      0xba7c0c0000	                          mov edx, 0xc7c	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400fb15	      0xbe00000000	                              mov esi, 0	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400fb1a	      0xbf00000000	                              mov edi, 0	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400fb1f	      0xe800000000	                          call 0x400fb24	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
