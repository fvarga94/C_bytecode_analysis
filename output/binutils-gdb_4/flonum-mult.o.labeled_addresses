flonum_multip	WHILE,0:SWITCH,0:CALL,4:IF,7:ELSE,4:DO,0:functions,0:FOR,3	153
0x4000040	         0xfb64720	           movzx eax, byte [rdi + 0x20] 	        92	flonum-mult.c	FUNCTION_1	IF_1
0x4000044	          0x8d48d5	                   lea ecx, [rax - 0x2b]	        92	flonum-mult.c	FUNCTION_1	IF_1
0x4000047	    0x81e1fd000000	                           and ecx, 0xfd	        92	flonum-mult.c	FUNCTION_1	IF_1
0x400004d	     0xf856d010000	                           jne 0x40001c0	        92	flonum-mult.c	FUNCTION_1	IF_1
0x4000053	         0xfb64e20	           movzx ecx, byte [rsi + 0x20] 	        93	flonum-mult.c	FUNCTION_1	IF_1
0x4000057	        0x448d41d5	                   lea r8d, [rcx - 0x2b]	        93	flonum-mult.c	FUNCTION_1	IF_1
0x400005b	    0x4181e0fd0000	                           and r8d, 0xfd	        93	flonum-mult.c	FUNCTION_1	IF_1
0x4000062	     0xf8558010000	                           jne 0x40001c0	        93	flonum-mult.c	FUNCTION_1	IF_1
0x4000068	            0x38c8	                              cmp al, cl	        99	flonum-mult.c	FUNCTION_1
0x400006a	            0x4157	                                push r15	        75	flonum-mult.c	FUNCTION_1
0x400006c	            0x4156	                                push r14	        75	flonum-mult.c	FUNCTION_1
0x400006e	           0xf95c0	                                setne al	        99	flonum-mult.c	FUNCTION_1
0x4000071	            0x4155	                                push r13	        75	flonum-mult.c	FUNCTION_1
0x4000073	            0x4154	                                push r12	        75	flonum-mult.c	FUNCTION_1
0x4000075	        0x8d44002b	            lea eax, [rax + rax + 0x2b] 	        99	flonum-mult.c	FUNCTION_1
0x4000079	              0x55	                                push rbp	        75	flonum-mult.c	FUNCTION_1
0x400007a	              0x53	                                push rbx	        75	flonum-mult.c	FUNCTION_1
0x400007b	          0x4531ed	                          xor r13d, r13d	       113	flonum-mult.c	FUNCTION_1	ELSE_1
0x400007e	          0x884220	               mov byte [rdx + 0x20], al	        99	flonum-mult.c	FUNCTION_1
0x4000081	          0x488b07	                    mov rax, qword [rdi]	       100	flonum-mult.c	FUNCTION_1
0x4000084	          0x4c8b26	                    mov r12, qword [rsi]	       101	flonum-mult.c	FUNCTION_1
0x4000087	          0x4889c3	                            mov rbx, rax	       100	flonum-mult.c	FUNCTION_1
0x400008a	      0x48894424d8	             mov qword [rsp - 0x28], rax	       100	flonum-mult.c	FUNCTION_1
0x400008f	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       100	flonum-mult.c	FUNCTION_1
0x4000093	          0x4829d8	                            sub rax, rbx	       100	flonum-mult.c	FUNCTION_1
0x4000096	          0x488b1a	                    mov rbx, qword [rdx]	       103	flonum-mult.c	FUNCTION_1
0x4000099	          0x48d1f8	                              sar rax, 1	       100	flonum-mult.c	FUNCTION_1
0x400009c	          0x4889c1	                            mov rcx, rax	       100	flonum-mult.c	FUNCTION_1
0x400009f	            0x89c5	                            mov ebp, eax	       100	flonum-mult.c	FUNCTION_1
0x40000a1	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       101	flonum-mult.c	FUNCTION_1
0x40000a5	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       102	flonum-mult.c	FUNCTION_1
0x40000a9	        0x48037718	             add rsi, qword [rdi + 0x18]	       102	flonum-mult.c	FUNCTION_1
0x40000ad	      0x48895c24f0	             mov qword [rsp - 0x10], rbx	       103	flonum-mult.c	FUNCTION_1
0x40000b2	          0x4c29e0	                            sub rax, r12	       101	flonum-mult.c	FUNCTION_1
0x40000b5	          0x48d1f8	                              sar rax, 1	       101	flonum-mult.c	FUNCTION_1
0x40000b8	          0x4189c3	                           mov r11d, eax	       101	flonum-mult.c	FUNCTION_1
0x40000bb	             0x1c8	                            add eax, ecx	       104	flonum-mult.c	FUNCTION_1
0x40000bd	        0x488b4a08	                mov rcx, qword [rdx + 8]	       105	flonum-mult.c	FUNCTION_1
0x40000c1	      0x48897424e0	             mov qword [rsp - 0x20], rsi	       102	flonum-mult.c	FUNCTION_1
0x40000c6	          0x4829d9	                            sub rcx, rbx	       105	flonum-mult.c	FUNCTION_1
0x40000c9	          0x48d1f9	                              sar rcx, 1	       105	flonum-mult.c	FUNCTION_1
0x40000cc	            0x89cb	                            mov ebx, ecx	       106	flonum-mult.c	FUNCTION_1	IF_2
0x40000ce	            0x29c3	                            sub ebx, eax	       106	flonum-mult.c	FUNCTION_1	IF_2
0x40000d0	        0x895c24ec	             mov dword [rsp - 0x14], ebx	       106	flonum-mult.c	FUNCTION_1	IF_2
0x40000d4	     0xf8816010000	                            js 0x40001f0	       106	flonum-mult.c	FUNCTION_1	IF_2
0x40000da	            0x85c0	                           test eax, eax	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000dc	     0xf88fd000000	                            js 0x40001df	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000e2	          0x83c001	                              add eax, 1	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000e5	          0x4531f6	                          xor r14d, r14d	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000e8	            0x31db	                            xor ebx, ebx	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000ea	          0x4189c2	                           mov r10d, eax	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000ed	      0x48895424f8	                mov qword [rsp - 8], rdx	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000f2	            0x31c0	                            xor eax, eax	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000f4	         0xf1f4000	                         nop dword [rax]	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000f8	      0x4c8b4424d8	              mov r8, qword [rsp - 0x28]	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x40000fd	        0x448d4801	                      lea r9d, [rax + 1]	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x4000101	          0x4889da	                            mov rdx, rbx	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x4000104	          0x4c89e7	                            mov rdi, r12	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x4000107	            0x31f6	                            xor esi, esi	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x4000109	            0x31db	                            xor ebx, ebx	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x400010b	       0xf1f440000	                   nop dword [rax + rax]	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x4000110	            0x89c1	                            mov ecx, eax	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000112	            0xf7d1	                                 not ecx	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000114	          0xc1e91f	                           shr ecx, 0x1f	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000117	          0x4139c3	                           cmp r11d, eax	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x400011a	        0x410f9dc7	                              setge r15b	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x400011e	          0x4184cf	                           test r15b, cl	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000121	            0x741f	                            je 0x4000142	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000123	            0x39f5	                            cmp ebp, esi	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000125	            0x7c1b	                            jl 0x4000142	       124	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000127	        0x450fb738	                   movzx r15d, word [r8]	       134	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x400012b	           0xfb70f	                   movzx ecx, word [rdi]	       134	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x400012e	        0x490fafcf	                           imul rcx, r15	       134	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000132	          0x4801ca	                            add rdx, rcx	       134	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000135	          0x4889d1	                            mov rcx, rdx	       135	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000138	           0xfb7d2	                           movzx edx, dx	       136	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x400013b	        0x48c1e910	                           shr rcx, 0x10	       135	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x400013f	          0x4801cb	                            add rbx, rcx	       135	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2	IF_3
0x4000142	          0x83c601	                              add esi, 1	       121	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2
0x4000145	          0x83e801	                              sub eax, 1	       121	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2
0x4000148	        0x4983c002	                               add r8, 2	       121	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2
0x400014c	        0x4883ef02	                              sub rdi, 2	       121	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2
0x4000150	          0x4439ce	                            cmp esi, r9d	       121	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2
0x4000153	            0x75bb	                           jne 0x4000110	       121	flonum-mult.c	FUNCTION_1	FOR_1	FOR_2
0x4000155	          0x4909d6	                             or r14, rdx	       143	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x4000158	            0x756e	                           jne 0x40001c8	       143	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x400015a	          0x4489e8	                           mov eax, r13d	       143	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x400015d	          0xc1e81f	                           shr eax, 0x1f	       143	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x4000160	            0x84c0	                             test al, al	       143	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x4000162	            0x7564	                           jne 0x40001c8	       143	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x4000164	      0x834424ec01	               add dword [rsp - 0x14], 1	       156	flonum-mult.c	FUNCTION_1	FOR_1	ELSE_2
0x4000169	    0x48834424e001	               add qword [rsp - 0x20], 1	       157	flonum-mult.c	FUNCTION_1	FOR_1	ELSE_2
0x400016f	        0x4983c402	                              add r12, 2	       157	flonum-mult.c	FUNCTION_1	FOR_1	ELSE_2
0x4000173	          0x4539ca	                           cmp r10d, r9d	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x4000176	          0x4489c8	                            mov eax, r9d	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x4000179	     0xf8579ffffff	                           jne 0x40000f8	       117	flonum-mult.c	FUNCTION_1	FOR_1
0x400017f	          0x4885db	                           test rbx, rbx	       165	flonum-mult.c	FUNCTION_1	IF_6
0x4000182	      0x488b5424f8	                mov rdx, qword [rsp - 8]	       165	flonum-mult.c	FUNCTION_1	IF_6
0x4000187	            0x7456	                            je 0x40001df	       165	flonum-mult.c	FUNCTION_1	IF_6
0x4000189	        0x8b4424ec	             mov eax, dword [rsp - 0x14]	       167	flonum-mult.c	FUNCTION_1	IF_6	IF_7
0x400018d	            0x85c0	                           test eax, eax	       167	flonum-mult.c	FUNCTION_1	IF_6	IF_7
0x400018f	            0x7e6f	                           jle 0x4000200	       167	flonum-mult.c	FUNCTION_1	IF_6	IF_7
0x4000191	      0x488b4424f0	             mov rax, qword [rsp - 0x10]	       168	flonum-mult.c	FUNCTION_1	IF_6	IF_7
0x4000196	          0x4d63ed	                        movsxd r13, r13d	       168	flonum-mult.c	FUNCTION_1	IF_6	IF_7
0x4000199	        0x4a8d0468	                  lea rax, [rax + r13*2]	       168	flonum-mult.c	FUNCTION_1	IF_6	IF_7
0x400019d	          0x668918	                      mov word [rax], bx	       168	flonum-mult.c	FUNCTION_1	IF_6	IF_7
0x40001a0	        0x48894210	             mov qword [rdx + 0x10], rax	       185	flonum-mult.c	FUNCTION_1
0x40001a4	      0x488b4424e0	             mov rax, qword [rsp - 0x20]	       186	flonum-mult.c	FUNCTION_1
0x40001a9	        0x48894218	             mov qword [rdx + 0x18], rax	       186	flonum-mult.c	FUNCTION_1
0x40001ad	              0x5b	                                 pop rbx	       187	flonum-mult.c	FUNCTION_1
0x40001ae	              0x5d	                                 pop rbp	       187	flonum-mult.c	FUNCTION_1
0x40001af	            0x415c	                                 pop r12	       187	flonum-mult.c	FUNCTION_1
0x40001b1	            0x415d	                                 pop r13	       187	flonum-mult.c	FUNCTION_1
0x40001b3	            0x415e	                                 pop r14	       187	flonum-mult.c	FUNCTION_1
0x40001b5	            0x415f	                                 pop r15	       187	flonum-mult.c	FUNCTION_1
0x40001b7	              0xc3	                                     ret	       187	flonum-mult.c	FUNCTION_1
0x40001b8	     0xf1f84000000	                   nop dword [rax + rax]	       187	flonum-mult.c	FUNCTION_1
0x40001c0	        0xc6422000	                mov byte [rdx + 0x20], 0	        96	flonum-mult.c	FUNCTION_1	IF_1
0x40001c4	              0xc3	                                     ret	        96	flonum-mult.c	FUNCTION_1	IF_1
0x40001c5	           0xf1f00	                         nop dword [rax]	        96	flonum-mult.c	FUNCTION_1	IF_1
0x40001c8	          0x4585ed	                         test r13d, r13d	       145	flonum-mult.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x40001cb	            0x780c	                            js 0x40001d9	       145	flonum-mult.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x40001cd	      0x488b7c24f0	             mov rdi, qword [rsp - 0x10]	       147	flonum-mult.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x40001d2	          0x4963c5	                        movsxd rax, r13d	       147	flonum-mult.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x40001d5	        0x66891447	              mov word [rdi + rax*2], dx	       147	flonum-mult.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x40001d9	        0x4183c501	                             add r13d, 1	       152	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x40001dd	            0xeb90	                           jmp 0x400016f	       152	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x40001df	        0x418d45ff	                      lea eax, [r13 - 1]	       152	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x40001e3	      0x488b5c24f0	             mov rbx, qword [rsp - 0x10]	       152	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x40001e8	            0x4898	                                    cdqe	       152	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x40001ea	        0x488d0443	                  lea rax, [rbx + rax*2]	       152	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x40001ee	            0xebb0	                           jmp 0x40001a0	       152	flonum-mult.c	FUNCTION_1	FOR_1	IF_4
0x40001f0	          0x4863cb	                         movsxd rcx, ebx	       109	flonum-mult.c	FUNCTION_1	IF_2
0x40001f3	          0x4189dd	                           mov r13d, ebx	       109	flonum-mult.c	FUNCTION_1	IF_2
0x40001f6	      0x48294c24e0	             sub qword [rsp - 0x20], rcx	       109	flonum-mult.c	FUNCTION_1	IF_2
0x40001fb	      0xe9dafeffff	                           jmp 0x40000da	       109	flonum-mult.c	FUNCTION_1	IF_2
0x4000200	      0x488b7c24f0	             mov rdi, qword [rsp - 0x10]	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000205	        0x418d45ff	                      lea eax, [r13 - 1]	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000209	    0x48834424e001	               add qword [rsp - 0x20], 1	       173	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3
0x400020f	            0x4898	                                    cdqe	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000211	        0x488d0c47	                  lea rcx, [rdi + rax*2]	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000215	          0x4839cf	                            cmp rdi, rcx	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000218	          0x4889c8	                            mov rax, rcx	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x400021b	            0x7783	                            ja 0x40001a0	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x400021d	           0xf1f00	                         nop dword [rax]	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000220	           0xfb730	                   movzx esi, word [rax]	       177	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000223	          0x668918	                      mov word [rax], bx	       178	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000226	        0x4883e802	                              sub rax, 2	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x400022a	          0x4839c7	                            cmp rdi, rax	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x400022d	          0x4889f3	                            mov rbx, rsi	       179	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000230	            0x76ee	                           jbe 0x4000220	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000232	          0x4889c8	                            mov rax, rcx	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
0x4000235	      0xe966ffffff	                           jmp 0x40001a0	       175	flonum-mult.c	FUNCTION_1	IF_6	ELSE_3	FOR_3
