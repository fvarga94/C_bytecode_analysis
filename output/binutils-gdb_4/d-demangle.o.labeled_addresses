dlang_parse_mangle	functions,0:ELSE,1:FOR,0:WHILE,0:IF,6:CALL,17:DO,0:SWITCH,0	592
0x40072b0	            0x4157	                                push r15	      1341	d-demangle.c	FUNCTION_27
0x40072b2	            0x4156	                                push r14	      1341	d-demangle.c	FUNCTION_27
0x40072b4	        0x4883c602	                              add rsi, 2	      1352	d-demangle.c	FUNCTION_27
0x40072b8	            0x4155	                                push r13	      1341	d-demangle.c	FUNCTION_27
0x40072ba	            0x4154	                                push r12	      1341	d-demangle.c	FUNCTION_27
0x40072bc	          0x4189d4	                           mov r12d, edx	      1341	d-demangle.c	FUNCTION_27
0x40072bf	              0x55	                                push rbp	      1341	d-demangle.c	FUNCTION_27
0x40072c0	              0x53	                                push rbx	      1341	d-demangle.c	FUNCTION_27
0x40072c1	            0x31d2	                            xor edx, edx	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x40072c3	          0x4889fd	                            mov rbp, rdi	      1341	d-demangle.c	FUNCTION_27
0x40072c6	        0x4883ec18	                           sub rsp, 0x18	      1341	d-demangle.c	FUNCTION_27
0x40072ca	      0xe8f1f5ffff	          call sym.dlang_parse_qualified	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x40072cf	          0x4885c0	                           test rax, rax	      1356	d-demangle.c	FUNCTION_27	IF_1
0x40072d2	          0x4889c3	                            mov rbx, rax	      1354	d-demangle.c	FUNCTION_27	CALL_1
0x40072d5	     0xf8405030000	                            je 0x40075e0	      1356	d-demangle.c	FUNCTION_27	IF_1
0x40072db	           0xfb610	                   movzx edx, byte [rax]	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40072de	          0x80fa5a	                            cmp dl, 0x5a	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40072e1	     0xf84e9010000	                            je 0x40074d0	      1359	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40072e7	          0x80fa4d	                            cmp dl, 0x4d	      1367	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x40072ea	     0xf84f0010000	                            je 0x40074e0	      1367	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_3
0x40072f0	            0x84d2	                             test dl, dl	       315	d-demangle.c	FUNCTION_14	IF_1
0x40072f2	     0xf8418080000	                            je 0x4007b10	       315	d-demangle.c	FUNCTION_14	IF_1
0x40072f8	            0x31f6	                            xor esi, esi	       315	d-demangle.c	FUNCTION_14	IF_1
0x40072fa	          0x4531f6	                          xor r14d, r14d	       315	d-demangle.c	FUNCTION_14	IF_1
0x40072fd	          0x4531ff	                          xor r15d, r15d	       315	d-demangle.c	FUNCTION_14	IF_1
0x4007300	          0x80fa4f	                            cmp dl, 0x4f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007303	     0xf8457020000	                            je 0x4007560	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007309	     0xf8e09010000	                           jle 0x4007418	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400730f	          0x80fa78	                            cmp dl, 0x78	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007312	     0xf84f8010000	                            je 0x4007510	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007318	          0x80fa79	                            cmp dl, 0x79	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400731b	            0x7562	                           jne 0x400737f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400731d	          0x4d85ff	                           test r15, r15	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007320	        0x4c8d6b01	                      lea r13, [rbx + 1]	       325	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007324	     0xf84ae070000	                            je 0x4007ad8	        62	d-demangle.c	FUNCTION_1	IF_1
0x400732a	          0x4c29f6	                            sub rsi, r14	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400732d	        0x4883fe09	                              cmp rsi, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007331	            0x7f1c	                            jg 0x400734f	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007333	          0x4d29fe	                            sub r14, r15	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007336	          0x4c89ff	                            mov rdi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007339	      0x438d743614	            lea esi, [r14 + r14 + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400733e	          0x4d63f6	                        movsxd r14, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007341	          0x4863f6	                         movsxd rsi, esi	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007344	      0xe800000000	                          call 0x4007349	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007349	          0x4989c7	                            mov r15, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400734c	          0x4901c6	                            add r14, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400734f	    0x48b820696d6d	          movabs rax, 0x626174756d6d6920	        53	string3.h	FUNCTION_33	CALL_3
0x4007359	    0x41b86c650000	                         mov r8d, 0x656c	        53	string3.h	FUNCTION_33	CALL_3
0x400735f	        0x4983c60a	                            add r14, 0xa	       123	d-demangle.c	FUNCTION_6
0x4007363	        0x498946f6	              mov qword [r14 - 0xa], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4007367	      0x66458946fe	                 mov word [r14 - 2], r8w	        53	string3.h	FUNCTION_33	CALL_3
0x400736c	          0x4c89e8	                            mov rax, r13	       327	d-demangle.c	FUNCTION_14	SWITCH_1
0x400736f	          0x4885c0	                           test rax, rax	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4007372	     0xf8410010000	                            je 0x4007488	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4007378	         0xfb65301	               movzx edx, byte [rbx + 1]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400737c	          0x4889c3	                            mov rbx, rax	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400737f	          0x8d4aba	                   lea ecx, [rdx - 0x46]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4007382	          0x80f913	                            cmp cl, 0x13	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4007385	            0x7713	                            ja 0x400739a	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4007387	      0xb801000000	                              mov eax, 1	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400738c	          0x48d3e0	                             shl rax, cl	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400738f	      0xa901900b00	                       test eax, 0xb9001	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4007394	     0xf85fe000000	                           jne 0x4007498	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400739a	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400739e	        0x488b4500	                    mov rax, qword [rbp]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40073a2	          0x4839f8	                            cmp rax, rdi	       101	d-demangle.c	FUNCTION_4	IF_1
0x40073a5	     0xf8455020000	                            je 0x4007600	       101	d-demangle.c	FUNCTION_4	IF_1
0x40073ab	          0x4189fd	                           mov r13d, edi	       105	d-demangle.c	FUNCTION_4
0x40073ae	          0x4889de	                            mov rsi, rbx	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40073b1	          0x4889ef	                            mov rdi, rbp	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40073b4	          0x4129c5	                           sub r13d, eax	       105	d-demangle.c	FUNCTION_4
0x40073b7	      0xe8e4c1ffff	                     call sym.dlang_type	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40073bc	        0x488b5500	                    mov rdx, qword [rbp]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40073c0	          0x4889c3	                            mov rbx, rax	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40073c3	        0x488b4508	                mov rax, qword [rbp + 8]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x40073c7	          0x4839c2	                            cmp rdx, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x40073ca	     0xf8430010000	                            je 0x4007500	       101	d-demangle.c	FUNCTION_4	IF_1
0x40073d0	            0x29d0	                            sub eax, edx	       105	d-demangle.c	FUNCTION_4
0x40073d2	          0x4139c5	                           cmp r13d, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40073d5	     0xf88ed010000	                            js 0x40075c8	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40073db	          0x4d85ff	                           test r15, r15	        85	d-demangle.c	FUNCTION_2	IF_1
0x40073de	            0x7408	                            je 0x40073e8	        85	d-demangle.c	FUNCTION_2	IF_1
0x40073e0	          0x4c89ff	                            mov rdi, r15	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40073e3	      0xe800000000	                          call 0x40073e8	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40073e8	          0x4585e4	                         test r12d, r12d	      1400	d-demangle.c	FUNCTION_27	IF_5
0x40073eb	            0x7512	                           jne 0x40073ff	      1400	d-demangle.c	FUNCTION_27	IF_5
0x40073ed	          0x4885db	                           test rbx, rbx	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x40073f0	     0xf84fa010000	                            je 0x40075f0	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x40073f6	          0x803b00	                       cmp byte [rbx], 0	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x40073f9	     0xf85f1010000	                           jne 0x40075f0	      1402	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x40073ff	          0x4889d8	                            mov rax, rbx	      1406	d-demangle.c	FUNCTION_27
0x4007402	        0x4883c418	                           add rsp, 0x18	      1407	d-demangle.c	FUNCTION_27
0x4007406	              0x5b	                                 pop rbx	      1407	d-demangle.c	FUNCTION_27
0x4007407	              0x5d	                                 pop rbp	      1407	d-demangle.c	FUNCTION_27
0x4007408	            0x415c	                                 pop r12	      1407	d-demangle.c	FUNCTION_27
0x400740a	            0x415d	                                 pop r13	      1407	d-demangle.c	FUNCTION_27
0x400740c	            0x415e	                                 pop r14	      1407	d-demangle.c	FUNCTION_27
0x400740e	            0x415f	                                 pop r15	      1407	d-demangle.c	FUNCTION_27
0x4007410	              0xc3	                                     ret	      1407	d-demangle.c	FUNCTION_27
0x4007411	     0xf1f80000000	                         nop dword [rax]	      1407	d-demangle.c	FUNCTION_27
0x4007418	          0x80fa4e	                            cmp dl, 0x4e	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400741b	     0xf855effffff	                           jne 0x400737f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007421	        0x807b0167	                cmp byte [rbx + 1], 0x67	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4007425	            0x7561	                           jne 0x4007488	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4007427	        0x4883c302	                              add rbx, 2	       336	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x400742b	          0x4d85ff	                           test r15, r15	        62	d-demangle.c	FUNCTION_1	IF_1
0x400742e	     0xf84bc060000	                            je 0x4007af0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007434	          0x4889f0	                            mov rax, rsi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007437	          0x4c29f0	                            sub rax, r14	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400743a	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400743e	            0x7f23	                            jg 0x4007463	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007440	          0x4d29fe	                            sub r14, r15	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007443	          0x4c89ff	                            mov rdi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007446	      0x438d74360c	              lea esi, [r14 + r14 + 0xc]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400744b	          0x4d63f6	                        movsxd r14, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400744e	          0x4c63ee	                         movsxd r13, esi	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007451	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007454	      0xe800000000	                          call 0x4007459	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007459	        0x4a8d3428	                    lea rsi, [rax + r13]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400745d	          0x4989c7	                            mov r15, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007460	          0x4901c6	                            add r14, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007463	      0xb975740000	                         mov ecx, 0x7475	        53	string3.h	FUNCTION_33	CALL_3
0x4007468	    0x41c70620696e	            mov dword [r14], 0x6f6e6920 	        53	string3.h	FUNCTION_33	CALL_3
0x400746f	        0x4983c606	                              add r14, 6	       123	d-demangle.c	FUNCTION_6
0x4007473	      0x6641894efe	                  mov word [r14 - 2], cx	        53	string3.h	FUNCTION_33	CALL_3
0x4007478	           0xfb613	                   movzx edx, byte [rbx]	       315	d-demangle.c	FUNCTION_14	IF_1
0x400747b	            0x84d2	                             test dl, dl	       315	d-demangle.c	FUNCTION_14	IF_1
0x400747d	     0xf857dfeffff	                           jne 0x4007300	       315	d-demangle.c	FUNCTION_14	IF_1
0x4007483	       0xf1f440000	                   nop dword [rax + rax]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4007488	        0x488b7d08	                mov rdi, qword [rbp + 8]	       315	d-demangle.c	FUNCTION_14	IF_1
0x400748c	            0x31db	                            xor ebx, ebx	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400748e	      0xe90bffffff	                           jmp 0x400739e	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4007493	       0xf1f440000	                   nop dword [rax + rax]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x4007498	        0x488b4d08	                mov rcx, qword [rbp + 8]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x400749c	        0x488b7d00	                    mov rdi, qword [rbp]	      1374	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_4
0x40074a0	      0xb800000000	                              mov eax, 0	       105	d-demangle.c	FUNCTION_4
0x40074a5	          0x4189cd	                           mov r13d, ecx	       105	d-demangle.c	FUNCTION_4
0x40074a8	          0x4129fd	                           sub r13d, edi	       105	d-demangle.c	FUNCTION_4
0x40074ab	          0x4839cf	                            cmp rdi, rcx	       105	d-demangle.c	FUNCTION_4
0x40074ae	        0x440f44e8	                         cmove r13d, eax	       105	d-demangle.c	FUNCTION_4
0x40074b2	          0x83ea46	                           sub edx, 0x46	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40074b5	          0x80fa13	                            cmp dl, 0x13	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40074b8	     0xf8772050000	                            ja 0x4007a30	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40074be	           0xfb6d2	                           movzx edx, dl	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40074c1	    0xff24d5000000	                       jmp qword [rdx*8]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40074c8	     0xf1f84000000	                   nop dword [rax + rax]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40074d0	        0x4883c301	                              add rbx, 1	      1360	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40074d4	      0xe90fffffff	                           jmp 0x40073e8	      1360	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40074d9	     0xf1f80000000	                         nop dword [rax]	      1360	d-demangle.c	FUNCTION_27	IF_1	IF_2
0x40074e0	        0x4883c001	                              add rax, 1	       315	d-demangle.c	FUNCTION_14	IF_1
0x40074e4	     0xf8426060000	                            je 0x4007b10	       315	d-demangle.c	FUNCTION_14	IF_1
0x40074ea	         0xfb65301	               movzx edx, byte [rbx + 1]	       315	d-demangle.c	FUNCTION_14	IF_1
0x40074ee	          0x4889c3	                            mov rbx, rax	       315	d-demangle.c	FUNCTION_14	IF_1
0x40074f1	      0xe9fafdffff	                           jmp 0x40072f0	       315	d-demangle.c	FUNCTION_14	IF_1
0x40074f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4007500	            0x31c0	                            xor eax, eax	       103	d-demangle.c	FUNCTION_4	IF_1
0x4007502	      0xe9cbfeffff	                           jmp 0x40073d2	       103	d-demangle.c	FUNCTION_4	IF_1
0x4007507	    0x660f1f840000	                    nop word [rax + rax]	       103	d-demangle.c	FUNCTION_4	IF_1
0x4007510	          0x4d85ff	                           test r15, r15	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007513	        0x4c8d6b01	                      lea r13, [rbx + 1]	       321	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007517	     0xf84a3050000	                            je 0x4007ac0	        62	d-demangle.c	FUNCTION_1	IF_1
0x400751d	          0x4c29f6	                            sub rsi, r14	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007520	        0x4883fe05	                              cmp rsi, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007524	            0x7f1c	                            jg 0x4007542	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007526	          0x4d29fe	                            sub r14, r15	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007529	          0x4c89ff	                            mov rdi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400752c	      0x438d74360c	              lea esi, [r14 + r14 + 0xc]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007531	          0x4d63f6	                        movsxd r14, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007534	          0x4863f6	                         movsxd rsi, esi	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007537	      0xe800000000	                          call 0x400753c	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400753c	          0x4989c7	                            mov r15, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400753f	          0x4901c6	                            add r14, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007542	    0x41b973740000	                         mov r9d, 0x7473	        53	string3.h	FUNCTION_33	CALL_3
0x4007548	    0x41c70620636f	            mov dword [r14], 0x6e6f6320 	        53	string3.h	FUNCTION_33	CALL_3
0x400754f	          0x4c89e8	                            mov rax, r13	       323	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007552	      0x6645894e04	                 mov word [r14 + 4], r9w	        53	string3.h	FUNCTION_33	CALL_3
0x4007557	        0x4983c606	                              add r14, 6	       123	d-demangle.c	FUNCTION_6
0x400755b	      0xe90ffeffff	                           jmp 0x400736f	       123	d-demangle.c	FUNCTION_6
0x4007560	        0x4883c301	                              add rbx, 1	       329	d-demangle.c	FUNCTION_14	SWITCH_1
0x4007564	          0x4d85ff	                           test r15, r15	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007567	     0xf8433050000	                            je 0x4007aa0	        62	d-demangle.c	FUNCTION_1	IF_1
0x400756d	          0x4889f0	                            mov rax, rsi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007570	          0x4c29f0	                            sub rax, r14	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007573	        0x4883f806	                              cmp rax, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007577	            0x7f23	                            jg 0x400759c	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007579	          0x4d29fe	                            sub r14, r15	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400757c	          0x4c89ff	                            mov rdi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400757f	      0x438d74360e	              lea esi, [r14 + r14 + 0xe]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007584	          0x4d63f6	                        movsxd r14, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007587	          0x4c63ee	                         movsxd r13, esi	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400758a	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400758d	      0xe800000000	                          call 0x4007592	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007592	        0x4a8d3428	                    lea rsi, [rax + r13]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007596	          0x4989c7	                            mov r15, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007599	          0x4901c6	                            add r14, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400759c	      0xbf72650000	                         mov edi, 0x6572	        53	string3.h	FUNCTION_33	CALL_3
0x40075a1	    0x41c706207368	            mov dword [r14], 0x61687320 	        53	string3.h	FUNCTION_33	CALL_3
0x40075a8	      0x41c6460664	                mov byte [r14 + 6], 0x64	        53	string3.h	FUNCTION_33	CALL_3
0x40075ad	      0x6641897e04	                  mov word [r14 + 4], di	        53	string3.h	FUNCTION_33	CALL_3
0x40075b2	        0x4983c607	                              add r14, 7	       123	d-demangle.c	FUNCTION_6
0x40075b6	          0x4885db	                           test rbx, rbx	       315	d-demangle.c	FUNCTION_14	IF_1
0x40075b9	     0xf85b9feffff	                           jne 0x4007478	       315	d-demangle.c	FUNCTION_14	IF_1
0x40075bf	      0xe9d6fdffff	                           jmp 0x400739a	       315	d-demangle.c	FUNCTION_14	IF_1
0x40075c4	         0xf1f4000	                         nop dword [rax]	       315	d-demangle.c	FUNCTION_14	IF_1
0x40075c8	          0x4963fd	                        movsxd rdi, r13d	       113	d-demangle.c	FUNCTION_5	IF_1
0x40075cb	          0x4801d7	                            add rdi, rdx	       113	d-demangle.c	FUNCTION_5	IF_1
0x40075ce	        0x48897d08	                mov qword [rbp + 8], rdi	       113	d-demangle.c	FUNCTION_5	IF_1
0x40075d2	      0xe904feffff	                           jmp 0x40073db	       113	d-demangle.c	FUNCTION_5	IF_1
0x40075d7	    0x660f1f840000	                    nop word [rax + rax]	       113	d-demangle.c	FUNCTION_5	IF_1
0x40075e0	          0x4585e4	                         test r12d, r12d	      1400	d-demangle.c	FUNCTION_27	IF_5
0x40075e3	     0xf8516feffff	                           jne 0x40073ff	      1400	d-demangle.c	FUNCTION_27	IF_5
0x40075e9	     0xf1f80000000	                         nop dword [rax]	      1400	d-demangle.c	FUNCTION_27	IF_5
0x40075f0	            0x31c0	                            xor eax, eax	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x40075f2	      0xe90bfeffff	                           jmp 0x4007402	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x40075f7	    0x660f1f840000	                    nop word [rax + rax]	      1403	d-demangle.c	FUNCTION_27	IF_5	IF_6
0x4007600	          0x4889de	                            mov rsi, rbx	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4007603	          0x4889ef	                            mov rdi, rbp	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4007606	      0xe895bfffff	                     call sym.dlang_type	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x400760b	        0x488b5500	                    mov rdx, qword [rbp]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x400760f	          0x4889c3	                            mov rbx, rax	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4007612	        0x488b4508	                mov rax, qword [rbp + 8]	      1392	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	CALL_15
0x4007616	          0x4839d0	                            cmp rax, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x4007619	     0xf84bcfdffff	                            je 0x40073db	       101	d-demangle.c	FUNCTION_4	IF_1
0x400761f	          0x4531ed	                          xor r13d, r13d	       103	d-demangle.c	FUNCTION_4	IF_1
0x4007622	      0xe9a9fdffff	                           jmp 0x40073d0	       103	d-demangle.c	FUNCTION_4	IF_1
0x4007627	    0x660f1f840000	                    nop word [rax + rax]	       103	d-demangle.c	FUNCTION_4	IF_1
0x4007630	        0x4883c301	                              add rbx, 1	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007634	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007637	     0xf8414050000	                            je 0x4007b51	        62	d-demangle.c	FUNCTION_1	IF_1
0x400763d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007641	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007644	        0x4883f80b	                            cmp rax, 0xb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007648	            0x7f39	                            jg 0x4007683	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400764a	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400764d	        0x8d540918	            lea edx, [rcx + rcx + 0x18] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007651	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007656	          0x4863d2	                         movsxd rdx, edx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007659	          0x4889d6	                            mov rsi, rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400765c	        0x48891424	                    mov qword [rsp], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007660	      0xe800000000	                          call 0x4007665	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007665	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400766a	        0x488b1424	                    mov rdx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400766e	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007672	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007675	          0x4801c2	                            add rdx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007678	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400767b	        0x48895510	            mov qword [rbp + 0x10], rdx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400767f	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007683	    0x48b865787465	          movabs rax, 0x43286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x400768d	    0xc741082b2b29	        mov dword [rcx + 8], 0x20292b2b 	        53	string3.h	FUNCTION_33	CALL_3
0x4007694	          0x4889de	                            mov rsi, rbx	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007697	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x400769a	      0x488345080c	                add qword [rbp + 8], 0xc	       123	d-demangle.c	FUNCTION_6
0x400769f	              0x90	                                     nop	       123	d-demangle.c	FUNCTION_6
0x40076a0	          0x4889ef	                            mov rdi, rbp	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40076a3	      0xe8488bffff	               call sym.dlang_attributes	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40076a8	        0x488b5508	                mov rdx, qword [rbp + 8]	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40076ac	          0x4889c3	                            mov rbx, rax	      1379	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_7
0x40076af	      0xb900000000	                              mov ecx, 0	       105	d-demangle.c	FUNCTION_4
0x40076b4	        0x488b7d00	                    mov rdi, qword [rbp]	       105	d-demangle.c	FUNCTION_4
0x40076b8	            0x89d0	                            mov eax, edx	       105	d-demangle.c	FUNCTION_4
0x40076ba	            0x29f8	                            sub eax, edi	       105	d-demangle.c	FUNCTION_4
0x40076bc	          0x4839d7	                            cmp rdi, rdx	       105	d-demangle.c	FUNCTION_4
0x40076bf	           0xf44c1	                          cmove eax, ecx	       105	d-demangle.c	FUNCTION_4
0x40076c2	          0x4139c5	                           cmp r13d, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40076c5	     0xf8875030000	                            js 0x4007a40	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40076cb	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40076ce	     0xf847c030000	                            je 0x4007a50	        62	d-demangle.c	FUNCTION_1	IF_1
0x40076d4	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40076d8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40076db	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40076de	            0x7f32	                            jg 0x4007712	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40076e0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40076e3	        0x8d4c1202	                lea ecx, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40076e7	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40076ea	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40076ed	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40076f0	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40076f4	      0xe800000000	                          call 0x40076f9	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40076f9	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40076fd	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007700	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007704	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007707	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400770b	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400770e	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007712	          0xc60228	                    mov byte [rdx], 0x28	        53	string3.h	FUNCTION_33	CALL_3
0x4007715	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x400771a	          0x4889de	                            mov rsi, rbx	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x400771d	          0x4889ef	                            mov rdi, rbp	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4007720	      0xe8abdaffff	            call sym.dlang_function_args	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x4007725	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007729	          0x4889c3	                            mov rbx, rax	      1383	d-demangle.c	FUNCTION_27	IF_1	ELSE_1	IF_4	CALL_10
0x400772c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400772f	     0xf8443030000	                            je 0x4007a78	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007735	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007739	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400773d	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007740	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007743	            0x7f32	                            jg 0x4007777	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007745	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007748	        0x8d4c1202	                lea ecx, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400774c	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400774f	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007752	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007755	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007759	      0xe800000000	                          call 0x400775e	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400775e	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007762	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007765	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007769	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400776c	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007770	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007773	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007777	          0xc60229	                    mov byte [rdx], 0x29	        53	string3.h	FUNCTION_33	CALL_3
0x400777a	        0x488b4508	                mov rax, qword [rbp + 8]	       123	d-demangle.c	FUNCTION_6
0x400777e	          0x4d39f7	                            cmp r15, r14	       101	d-demangle.c	FUNCTION_4	IF_1
0x4007781	        0x488d7801	                      lea rdi, [rax + 1]	       123	d-demangle.c	FUNCTION_6
0x4007785	        0x48897d08	                mov qword [rbp + 8], rdi	       123	d-demangle.c	FUNCTION_6
0x4007789	     0xf840ffcffff	                            je 0x400739e	       101	d-demangle.c	FUNCTION_4	IF_1
0x400778f	          0x4d29fe	                            sub r14, r15	       105	d-demangle.c	FUNCTION_4
0x4007792	          0x4585f6	                         test r14d, r14d	       129	d-demangle.c	FUNCTION_7	IF_1
0x4007795	     0xf8403fcffff	                            je 0x400739e	       129	d-demangle.c	FUNCTION_7	IF_1
0x400779b	        0x488b4d00	                    mov rcx, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400779f	          0x4885c9	                           test rcx, rcx	        62	d-demangle.c	FUNCTION_1	IF_1
0x40077a2	     0xf8478030000	                            je 0x4007b20	        62	d-demangle.c	FUNCTION_1	IF_1
0x40077a8	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077ac	          0x4963d6	                        movsxd rdx, r14d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077af	          0x4829f8	                            sub rax, rdi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077b2	          0x4839d0	                            cmp rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077b5	            0x7d3f	                           jge 0x40077f6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077b7	          0x4829cf	                            sub rdi, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077ba	      0x4889542408	                mov qword [rsp + 8], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077bf	        0x468d2c37	                   lea r13d, [rdi + r14]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077c3	        0x48893c24	                    mov qword [rsp], rdi	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077c7	          0x4889cf	                            mov rdi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40077ca	          0x4501ed	                          add r13d, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40077cd	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40077d0	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40077d3	      0xe800000000	                          call 0x40077d8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40077d8	        0x4c8b0424	                     mov r8, qword [rsp]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077dc	      0x488b542408	                mov rdx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077e1	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077e4	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40077e8	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077ec	          0x4963f8	                         movsxd rdi, r8d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077ef	          0x4801c7	                            add rdi, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077f2	        0x48897d08	                mov qword [rbp + 8], rdi	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077f6	          0x4989d6	                            mov r14, rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40077f9	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_33	CALL_3
0x40077fc	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_33	CALL_3
0x40077ff	      0xe800000000	                          call 0x4007804	        53	string3.h	FUNCTION_33	CALL_3
0x4007804	          0x4c89f7	                            mov rdi, r14	       133	d-demangle.c	FUNCTION_7	IF_1
0x4007807	        0x48037d08	                add rdi, qword [rbp + 8]	       133	d-demangle.c	FUNCTION_7	IF_1
0x400780b	        0x48897d08	                mov qword [rbp + 8], rdi	       133	d-demangle.c	FUNCTION_7	IF_1
0x400780f	      0xe98afbffff	                           jmp 0x400739e	       133	d-demangle.c	FUNCTION_7	IF_1
0x4007814	         0xf1f4000	                         nop dword [rax]	       133	d-demangle.c	FUNCTION_7	IF_1
0x4007818	        0x4883c301	                              add rbx, 1	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x400781c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400781f	     0xf84b4030000	                            je 0x4007bd9	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007825	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007829	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400782c	        0x4883f809	                              cmp rax, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007830	            0x7f39	                            jg 0x400786b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007832	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007835	        0x8d540914	            lea edx, [rcx + rcx + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007839	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400783e	          0x4863d2	                         movsxd rdx, edx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007841	          0x4889d6	                            mov rsi, rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007844	        0x48891424	                    mov qword [rsp], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007848	      0xe800000000	                          call 0x400784d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400784d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007852	        0x488b1424	                    mov rdx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007856	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400785a	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400785d	          0x4801c2	                            add rdx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007860	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007863	        0x48895510	            mov qword [rbp + 0x10], rdx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007867	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400786b	    0x48b865787465	          movabs rax, 0x43286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4007875	      0xba29200000	                         mov edx, 0x2029	        53	string3.h	FUNCTION_33	CALL_3
0x400787a	          0x4889de	                            mov rsi, rbx	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x400787d	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4007880	        0x66895108	                  mov word [rcx + 8], dx	        53	string3.h	FUNCTION_33	CALL_3
0x4007884	      0x488345080a	                add qword [rbp + 8], 0xa	       123	d-demangle.c	FUNCTION_6
0x4007889	      0xe912feffff	                           jmp 0x40076a0	       123	d-demangle.c	FUNCTION_6
0x400788e	            0x6690	                                     nop	       123	d-demangle.c	FUNCTION_6
0x4007890	        0x4883c301	                              add rbx, 1	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007894	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007897	     0xf84f8020000	                            je 0x4007b95	        62	d-demangle.c	FUNCTION_1	IF_1
0x400789d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078a1	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078a4	        0x4883f80e	                            cmp rax, 0xe	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078a8	            0x7f39	                            jg 0x40078e3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078aa	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078ad	        0x8d54091e	            lea edx, [rcx + rcx + 0x1e] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40078b1	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40078b6	          0x4863d2	                         movsxd rdx, edx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40078b9	          0x4889d6	                            mov rsi, rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40078bc	        0x48891424	                    mov qword [rsp], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40078c0	      0xe800000000	                          call 0x40078c5	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40078c5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078ca	        0x488b1424	                    mov rdx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078ce	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40078d2	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078d5	          0x4801c2	                            add rdx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078d8	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078db	        0x48895510	            mov qword [rbp + 0x10], rdx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078df	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40078e3	    0x48b865787465	          movabs rax, 0x50286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x40078ed	    0xc74108617363	        mov dword [rcx + 8], 0x61637361 	        53	string3.h	FUNCTION_33	CALL_3
0x40078f4	        0xc6410e20	              mov byte [rcx + 0xe], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x40078f8	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x40078fb	      0xb86c290000	                         mov eax, 0x296c	        53	string3.h	FUNCTION_33	CALL_3
0x4007900	          0x4889de	                            mov rsi, rbx	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007903	        0x6689410c	                mov word [rcx + 0xc], ax	        53	string3.h	FUNCTION_33	CALL_3
0x4007907	      0x488345080f	                add qword [rbp + 8], 0xf	       123	d-demangle.c	FUNCTION_6
0x400790c	      0xe98ffdffff	                           jmp 0x40076a0	       123	d-demangle.c	FUNCTION_6
0x4007911	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4007918	        0x4883c301	                              add rbx, 1	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x400791c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400791f	     0xf844e020000	                            je 0x4007b73	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007925	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007929	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400792c	        0x4883f80f	                            cmp rax, 0xf	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007930	            0x7f39	                            jg 0x400796b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007932	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007935	        0x8d540920	            lea edx, [rcx + rcx + 0x20] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007939	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400793e	          0x4863d2	                         movsxd rdx, edx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007941	          0x4889d6	                            mov rsi, rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007944	        0x48891424	                    mov qword [rsp], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007948	      0xe800000000	                          call 0x400794d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400794d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007952	        0x488b1424	                    mov rdx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007956	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400795a	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400795d	          0x4801c2	                            add rdx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007960	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007963	        0x48895510	            mov qword [rbp + 0x10], rdx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007967	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400796b	    0x48b865787465	          movabs rax, 0x57286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4007975	          0x4889de	                            mov rsi, rbx	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007978	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x400797b	    0x48b8696e646f	          movabs rax, 0x202973776f646e69	        53	string3.h	FUNCTION_33	CALL_3
0x4007985	        0x48894108	                mov qword [rcx + 8], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4007989	      0x4883450810	               add qword [rbp + 8], 0x10	       123	d-demangle.c	FUNCTION_6
0x400798e	      0xe90dfdffff	                           jmp 0x40076a0	       123	d-demangle.c	FUNCTION_6
0x4007993	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4007998	        0x4883c301	                              add rbx, 1	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x400799c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400799f	     0xf8412020000	                            je 0x4007bb7	        62	d-demangle.c	FUNCTION_1	IF_1
0x40079a5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079a9	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079ac	        0x4883f813	                           cmp rax, 0x13	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079b0	            0x7f39	                            jg 0x40079eb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079b2	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079b5	        0x8d540928	            lea edx, [rcx + rcx + 0x28] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40079b9	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40079be	          0x4863d2	                         movsxd rdx, edx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40079c1	          0x4889d6	                            mov rsi, rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40079c4	        0x48891424	                    mov qword [rsp], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40079c8	      0xe800000000	                          call 0x40079cd	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40079cd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079d2	        0x488b1424	                    mov rdx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079d6	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40079da	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079dd	          0x4801c2	                            add rdx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079e0	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079e3	        0x48895510	            mov qword [rbp + 0x10], rdx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079e7	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40079eb	    0x48b865787465	          movabs rax, 0x4f286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x40079f5	    0xc741102d4329	     mov dword [rcx + 0x10], 0x2029432d 	        53	string3.h	FUNCTION_33	CALL_3
0x40079fc	          0x4889de	                            mov rsi, rbx	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x40079ff	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4007a02	    0x48b8626a6563	          movabs rax, 0x6576697463656a62	        53	string3.h	FUNCTION_33	CALL_3
0x4007a0c	        0x48894108	                mov qword [rcx + 8], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4007a10	      0x4883450814	               add qword [rbp + 8], 0x14	       123	d-demangle.c	FUNCTION_6
0x4007a15	      0xe986fcffff	                           jmp 0x40076a0	       123	d-demangle.c	FUNCTION_6
0x4007a1a	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4007a20	        0x488d7301	                      lea rsi, [rbx + 1]	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007a24	      0xe977fcffff	                           jmp 0x40076a0	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007a29	     0xf1f80000000	                         nop dword [rax]	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007a30	            0x31f6	                            xor esi, esi	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007a32	      0xe969fcffff	                           jmp 0x40076a0	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007a37	    0x660f1f840000	                    nop word [rax + rax]	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4007a40	          0x4d63ed	                        movsxd r13, r13d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4007a43	        0x4a8d142f	                    lea rdx, [rdi + r13]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4007a47	        0x48895508	                mov qword [rbp + 8], rdx	       113	d-demangle.c	FUNCTION_5	IF_1
0x4007a4b	      0xe97bfcffff	                           jmp 0x40076cb	       113	d-demangle.c	FUNCTION_5	IF_1
0x4007a50	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007a55	      0xe800000000	                          call 0x4007a5a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007a5a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a5e	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007a62	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007a66	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a6a	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a6d	      0xe9a0fcffff	                           jmp 0x4007712	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a72	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a78	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007a7d	      0xe800000000	                          call 0x4007a82	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007a82	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a86	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007a8a	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007a8e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a92	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a95	      0xe9ddfcffff	                           jmp 0x4007777	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007a9a	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007aa0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007aa5	      0xe800000000	                          call 0x4007aaa	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007aaa	          0x4989c6	                            mov r14, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007aad	        0x488d7020	                   lea rsi, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007ab1	          0x4989c7	                            mov r15, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ab4	      0xe9e3faffff	                           jmp 0x400759c	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ab9	     0xf1f80000000	                         nop dword [rax]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ac0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ac5	      0xe800000000	                          call 0x4007aca	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007aca	          0x4989c6	                            mov r14, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007acd	          0x4989c7	                            mov r15, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ad0	      0xe96dfaffff	                           jmp 0x4007542	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ad5	           0xf1f00	                         nop dword [rax]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ad8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007add	      0xe800000000	                          call 0x4007ae2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ae2	          0x4989c6	                            mov r14, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ae5	          0x4989c7	                            mov r15, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ae8	      0xe962f8ffff	                           jmp 0x400734f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007aed	           0xf1f00	                         nop dword [rax]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007af0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007af5	      0xe800000000	                          call 0x4007afa	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007afa	          0x4989c7	                            mov r15, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007afd	        0x488d7020	                   lea rsi, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b01	          0x4989c6	                            mov r14, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b04	      0xe95af9ffff	                           jmp 0x4007463	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b09	     0xf1f80000000	                         nop dword [rax]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b10	        0x488b7d08	                mov rdi, qword [rbp + 8]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b14	          0x4531ff	                          xor r15d, r15d	        95	d-demangle.c	FUNCTION_3
0x4007b17	            0x31db	                            xor ebx, ebx	        95	d-demangle.c	FUNCTION_3
0x4007b19	      0xe980f8ffff	                           jmp 0x400739e	        95	d-demangle.c	FUNCTION_3
0x4007b1e	            0x6690	                                     nop	        95	d-demangle.c	FUNCTION_3
0x4007b20	        0x4183fe1f	                          cmp r14d, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4007b24	    0x41bd20000000	                          mov r13d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4007b2a	          0x4d63f6	                        movsxd r14, r14d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4007b2d	            0x7e03	                           jle 0x4007b32	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4007b2f	          0x4d89f5	                            mov r13, r14	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4007b32	          0x4c89ef	                            mov rdi, r13	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b35	      0xe800000000	                          call 0x4007b3a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b3a	          0x4901c5	                            add r13, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b3d	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b41	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b45	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b49	          0x4889c7	                            mov rdi, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b4c	      0xe9a8fcffff	                           jmp 0x40077f9	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b51	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b56	      0xe800000000	                          call 0x4007b5b	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b5b	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b5f	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b63	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b67	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b6a	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b6e	      0xe910fbffff	                           jmp 0x4007683	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b73	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b78	      0xe800000000	                          call 0x4007b7d	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b7d	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b81	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b85	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b89	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b8c	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b90	      0xe9d6fdffff	                           jmp 0x400796b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007b95	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b9a	      0xe800000000	                          call 0x4007b9f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007b9f	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007ba3	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007ba7	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007bab	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bae	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bb2	      0xe92cfdffff	                           jmp 0x40078e3	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bb7	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007bbc	      0xe800000000	                          call 0x4007bc1	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007bc1	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bc5	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007bc9	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007bcd	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bd0	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bd4	      0xe912feffff	                           jmp 0x40079eb	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bd9	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007bde	      0xe800000000	                          call 0x4007be3	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007be3	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007be7	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007beb	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007bef	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bf2	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007bf6	      0xe970fcffff	                           jmp 0x400786b	        69	d-demangle.c	FUNCTION_1	IF_1
dlang_parse_qualified	functions,0:ELSE,0:FOR,0:WHILE,1:IF,4:CALL,15:DO,1:SWITCH,0	630
0x40068c0	            0x4157	                                push r15	      1414	d-demangle.c	FUNCTION_28
0x40068c2	            0x4156	                                push r14	      1414	d-demangle.c	FUNCTION_28
0x40068c4	          0x4189d6	                           mov r14d, edx	      1414	d-demangle.c	FUNCTION_28
0x40068c7	            0x4155	                                push r13	      1414	d-demangle.c	FUNCTION_28
0x40068c9	            0x4154	                                push r12	      1414	d-demangle.c	FUNCTION_28
0x40068cb	          0x4531e4	                          xor r12d, r12d	      1414	d-demangle.c	FUNCTION_28
0x40068ce	              0x55	                                push rbp	      1414	d-demangle.c	FUNCTION_28
0x40068cf	              0x53	                                push rbx	      1414	d-demangle.c	FUNCTION_28
0x40068d0	          0x4889fd	                            mov rbp, rdi	      1414	d-demangle.c	FUNCTION_28
0x40068d3	          0x4889f3	                            mov rbx, rsi	      1414	d-demangle.c	FUNCTION_28
0x40068d6	        0x4883ec18	                           sub rsp, 0x18	      1414	d-demangle.c	FUNCTION_28
0x40068da	    0x660f1f440000	                    nop word [rax + rax]	      1414	d-demangle.c	FUNCTION_28
0x40068e0	          0x4d85e4	                           test r12, r12	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x40068e3	            0x745f	                            je 0x4006944	      1430	d-demangle.c	FUNCTION_28	DO_1	IF_1
0x40068e5	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40068e9	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40068ec	     0xf8466040000	                            je 0x4006d58	        62	d-demangle.c	FUNCTION_1	IF_1
0x40068f2	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40068f6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40068fa	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40068fd	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006900	            0x7f2b	                            jg 0x400692d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006902	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006905	        0x8d4c1202	                lea ecx, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006909	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400690c	          0x4c63f9	                         movsxd r15, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400690f	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006912	      0xe800000000	                          call 0x4006917	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006917	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400691a	        0x4a8d0c38	                    lea rcx, [rax + r15]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400691e	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006922	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006925	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006929	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400692d	          0xc6022e	                    mov byte [rdx], 0x2e	        53	string3.h	FUNCTION_33	CALL_3
0x4006930	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4006935	            0xeb0d	                           jmp 0x4006944	       123	d-demangle.c	FUNCTION_6
0x4006937	    0x660f1f840000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4006940	        0x4883c301	                              add rbx, 1	      1435	d-demangle.c	FUNCTION_28	DO_1
0x4006944	          0x803b30	                    cmp byte [rbx], 0x30	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4006947	            0x74f7	                            je 0x4006940	      1434	d-demangle.c	FUNCTION_28	DO_1
0x4006949	          0x4889de	                            mov rsi, rbx	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x400694c	          0x4489f2	                           mov edx, r14d	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x400694f	          0x4889ef	                            mov rdi, rbp	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4006952	      0xe849f6ffff	               call sym.dlang_identifier	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x4006957	          0x4885c0	                           test rax, rax	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x400695a	          0x4889c3	                            mov rbx, rax	      1437	d-demangle.c	FUNCTION_28	DO_1	CALL_2
0x400695d	     0xf8416030000	                            je 0x4006c79	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006963	           0xfb600	                   movzx eax, byte [rax]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006966	            0x3c4d	                            cmp al, 0x4d	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006968	     0xf8422030000	                            je 0x4006c90	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x400696e	          0x8d48ba	                   lea ecx, [rax - 0x46]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006971	          0x80f913	                            cmp cl, 0x13	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006974	     0xf87f5020000	                            ja 0x4006c6f	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x400697a	      0xba01000000	                              mov edx, 1	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x400697f	          0x48d3e2	                             shl rdx, cl	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006982	    0xf7c201900b00	                       test edx, 0xb9001	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006988	     0xf84e1020000	                            je 0x4006c6f	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x400698e	        0x488b5508	                mov rdx, qword [rbp + 8]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006992	        0x488b7d00	                    mov rdi, qword [rbp]	      1443	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_3
0x4006996	          0x4189d5	                           mov r13d, edx	       105	d-demangle.c	FUNCTION_4
0x4006999	          0x4129fd	                           sub r13d, edi	       105	d-demangle.c	FUNCTION_4
0x400699c	          0x4839fa	                            cmp rdx, rdi	       105	d-demangle.c	FUNCTION_4
0x400699f	      0xba00000000	                              mov edx, 0	       105	d-demangle.c	FUNCTION_4
0x40069a4	        0x440f44ea	                         cmove r13d, edx	       105	d-demangle.c	FUNCTION_4
0x40069a8	          0x4889da	                            mov rdx, rbx	       103	d-demangle.c	FUNCTION_4	IF_1
0x40069ab	          0x83e846	                           sub eax, 0x46	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40069ae	            0x3c13	                            cmp al, 0x13	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40069b0	     0xf8793020000	                            ja 0x4006c49	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40069b6	           0xfb6c0	                           movzx eax, al	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40069b9	    0xff24c5000000	                       jmp qword [rax*8]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40069c0	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40069c3	        0x4c8d7a01	                      lea r15, [rdx + 1]	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x40069c7	     0xf840a080000	                            je 0x40071d7	        62	d-demangle.c	FUNCTION_1	IF_1
0x40069cd	        0x488b4d08	                mov rcx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40069d1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40069d5	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40069d8	        0x4883f813	                           cmp rax, 0x13	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40069dc	     0xf8e06050000	                           jle 0x4006ee8	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40069e2	    0x48b865787465	          movabs rax, 0x4f286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x40069ec	    0xc741102d4329	     mov dword [rcx + 0x10], 0x2029432d 	        53	string3.h	FUNCTION_33	CALL_3
0x40069f3	          0x4c89fe	                            mov rsi, r15	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x40069f6	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x40069f9	    0x48b8626a6563	          movabs rax, 0x6576697463656a62	        53	string3.h	FUNCTION_33	CALL_3
0x4006a03	        0x48894108	                mov qword [rcx + 8], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4006a07	      0x4883450814	               add qword [rbp + 8], 0x14	       123	d-demangle.c	FUNCTION_6
0x4006a0c	      0xe9df000000	                           jmp 0x4006af0	       123	d-demangle.c	FUNCTION_6
0x4006a11	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006a14	        0x4c8d7a01	                      lea r15, [rdx + 1]	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006a18	     0xf8475070000	                            je 0x4007193	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006a1e	        0x488b4d08	                mov rcx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a22	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a26	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a29	        0x4883f80f	                            cmp rax, 0xf	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a2d	     0xf8e76040000	                           jle 0x4006ea9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a33	    0x48b865787465	          movabs rax, 0x57286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4006a3d	          0x4c89fe	                            mov rsi, r15	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006a40	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4006a43	    0x48b8696e646f	          movabs rax, 0x202973776f646e69	        53	string3.h	FUNCTION_33	CALL_3
0x4006a4d	        0x48894108	                mov qword [rcx + 8], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4006a51	      0x4883450810	               add qword [rbp + 8], 0x10	       123	d-demangle.c	FUNCTION_6
0x4006a56	      0xe995000000	                           jmp 0x4006af0	       123	d-demangle.c	FUNCTION_6
0x4006a5b	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006a5e	        0x4c8d7a01	                      lea r15, [rdx + 1]	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006a62	     0xf844d070000	                            je 0x40071b5	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006a68	        0x488b4d08	                mov rcx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a6c	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a70	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a73	        0x4883f80e	                            cmp rax, 0xe	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a77	     0xf8ee9040000	                           jle 0x4006f66	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006a7d	    0x48b865787465	          movabs rax, 0x50286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4006a87	    0xc74108617363	        mov dword [rcx + 8], 0x61637361 	        53	string3.h	FUNCTION_33	CALL_3
0x4006a8e	        0xc6410e20	              mov byte [rcx + 0xe], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x4006a92	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4006a95	      0xb86c290000	                         mov eax, 0x296c	        53	string3.h	FUNCTION_33	CALL_3
0x4006a9a	          0x4c89fe	                            mov rsi, r15	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006a9d	        0x6689410c	                mov word [rcx + 0xc], ax	        53	string3.h	FUNCTION_33	CALL_3
0x4006aa1	      0x488345080f	                add qword [rbp + 8], 0xf	       123	d-demangle.c	FUNCTION_6
0x4006aa6	            0xeb48	                           jmp 0x4006af0	       123	d-demangle.c	FUNCTION_6
0x4006aa8	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006aab	        0x4c8d7a01	                      lea r15, [rdx + 1]	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006aaf	     0xf849a060000	                            je 0x400714f	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006ab5	        0x488b4d08	                mov rcx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ab9	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006abd	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ac0	        0x4883f809	                              cmp rax, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ac4	     0xf8e5d040000	                           jle 0x4006f27	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006aca	    0x48b865787465	          movabs rax, 0x43286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4006ad4	      0xba29200000	                         mov edx, 0x2029	        53	string3.h	FUNCTION_33	CALL_3
0x4006ad9	          0x4c89fe	                            mov rsi, r15	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006adc	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4006adf	        0x66895108	                  mov word [rcx + 8], dx	        53	string3.h	FUNCTION_33	CALL_3
0x4006ae3	      0x488345080a	                add qword [rbp + 8], 0xa	       123	d-demangle.c	FUNCTION_6
0x4006ae8	            0xeb06	                           jmp 0x4006af0	       123	d-demangle.c	FUNCTION_6
0x4006aea	        0x488d7201	                      lea rsi, [rdx + 1]	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006aee	            0x6690	                                     nop	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006af0	          0x4889ef	                            mov rdi, rbp	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4006af3	      0xe8f896ffff	               call sym.dlang_attributes	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4006af8	        0x488b5508	                mov rdx, qword [rbp + 8]	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4006afc	        0x488b7d00	                    mov rdi, qword [rbp]	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4006b00	          0x4989c7	                            mov r15, rax	      1464	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_8
0x4006b03	      0xb900000000	                              mov ecx, 0	       105	d-demangle.c	FUNCTION_4
0x4006b08	            0x89d0	                            mov eax, edx	       105	d-demangle.c	FUNCTION_4
0x4006b0a	            0x29f8	                            sub eax, edi	       105	d-demangle.c	FUNCTION_4
0x4006b0c	          0x4839d7	                            cmp rdi, rdx	       105	d-demangle.c	FUNCTION_4
0x4006b0f	           0xf44c1	                          cmove eax, ecx	       105	d-demangle.c	FUNCTION_4
0x4006b12	          0x4139c5	                           cmp r13d, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006b15	     0xf8865020000	                            js 0x4006d80	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006b1b	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006b1e	     0xf846f020000	                            je 0x4006d93	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006b24	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b28	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b2b	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b2e	            0x7f39	                            jg 0x4006b69	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b30	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b33	        0x8d441202	                lea eax, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006b37	      0x4889542408	                mov qword [rsp + 8], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006b3c	          0x4863c8	                         movsxd rcx, eax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006b3f	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006b42	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006b46	      0xe800000000	                          call 0x4006b4b	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006b4b	      0x488b542408	                mov rdx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b50	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b54	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006b58	          0x4863d2	                         movsxd rdx, edx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b5b	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b5e	          0x4801c8	                            add rax, rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b61	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b65	        0x48894510	            mov qword [rbp + 0x10], rax 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b69	          0xc60228	                    mov byte [rdx], 0x28	        53	string3.h	FUNCTION_33	CALL_3
0x4006b6c	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4006b71	          0x4c89fe	                            mov rsi, r15	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4006b74	          0x4889ef	                            mov rdi, rbp	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4006b77	      0xe854e6ffff	            call sym.dlang_function_args	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4006b7c	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006b80	          0x4989c7	                            mov r15, rax	      1468	d-demangle.c	FUNCTION_28	DO_1	IF_2	CALL_11
0x4006b83	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006b86	     0xf8438020000	                            je 0x4006dc4	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006b8c	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b90	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b94	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b97	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b9a	            0x7f39	                            jg 0x4006bd5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b9c	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006b9f	        0x8d441202	                lea eax, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ba3	      0x4889542408	                mov qword [rsp + 8], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ba8	          0x4c63c0	                          movsxd r8, eax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006bab	          0x4c89c6	                             mov rsi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006bae	        0x4c890424	                     mov qword [rsp], r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006bb2	      0xe800000000	                          call 0x4006bb7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006bb7	      0x488b542408	                mov rdx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006bbc	        0x4c8b0424	                     mov r8, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006bc0	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006bc4	          0x4863d2	                         movsxd rdx, edx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006bc7	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006bca	          0x4c01c0	                             add rax, r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006bcd	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006bd1	        0x48894510	            mov qword [rbp + 0x10], rax 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006bd5	          0xc60229	                    mov byte [rdx], 0x29	        53	string3.h	FUNCTION_33	CALL_3
0x4006bd8	        0x488b4508	                mov rax, qword [rbp + 8]	       123	d-demangle.c	FUNCTION_6
0x4006bdc	        0x4883c001	                              add rax, 1	       123	d-demangle.c	FUNCTION_6
0x4006be0	          0x4d85ff	                           test r15, r15	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4006be3	        0x48894508	                mov qword [rbp + 8], rax	       123	d-demangle.c	FUNCTION_6
0x4006be7	            0x7467	                            je 0x4006c50	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4006be9	        0x410fb617	                   movzx edx, byte [r15]	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4006bed	    0xf68412000000	                test byte [rdx + rdx], 4	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4006bf5	            0x7459	                            je 0x4006c50	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4006bf7	          0x4c89fb	                            mov rbx, r15	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4006bfa	        0x4983c401	                              add r12, 1	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4006bfe	      0xe9ddfcffff	                           jmp 0x40068e0	      1471	d-demangle.c	FUNCTION_28	DO_1	IF_2	IF_4	CALL_13
0x4006c03	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006c06	        0x4c8d7a01	                      lea r15, [rdx + 1]	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006c0a	     0xf8461050000	                            je 0x4007171	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006c10	        0x488b4d08	                mov rcx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006c14	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006c18	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006c1b	        0x4883f80b	                            cmp rax, 0xb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006c1f	     0xf8e45020000	                           jle 0x4006e6a	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006c25	    0x48b865787465	          movabs rax, 0x43286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4006c2f	    0xc741082b2b29	        mov dword [rcx + 8], 0x20292b2b 	        53	string3.h	FUNCTION_33	CALL_3
0x4006c36	          0x4c89fe	                            mov rsi, r15	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006c39	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4006c3c	      0x488345080c	                add qword [rbp + 8], 0xc	       123	d-demangle.c	FUNCTION_6
0x4006c41	      0xe9aafeffff	                           jmp 0x4006af0	       123	d-demangle.c	FUNCTION_6
0x4006c46	          0x4531ed	                          xor r13d, r13d	       103	d-demangle.c	FUNCTION_4	IF_1
0x4006c49	            0x31f6	                            xor esi, esi	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006c4b	      0xe9a0feffff	                           jmp 0x4006af0	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006c50	        0x488b5500	                    mov rdx, qword [rbp]	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006c54	            0x89c1	                            mov ecx, eax	       105	d-demangle.c	FUNCTION_4
0x4006c56	            0x29d1	                            sub ecx, edx	       105	d-demangle.c	FUNCTION_4
0x4006c58	          0x4839c2	                            cmp rdx, rax	       105	d-demangle.c	FUNCTION_4
0x4006c5b	      0xb800000000	                              mov eax, 0	       105	d-demangle.c	FUNCTION_4
0x4006c60	           0xf45c1	                         cmovne eax, ecx	       105	d-demangle.c	FUNCTION_4
0x4006c63	          0x4139c5	                           cmp r13d, eax	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006c66	     0xf8849010000	                            js 0x4006db5	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006c6c	           0xfb603	                   movzx eax, byte [rbx]	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006c6f	    0xf68400000000	                test byte [rax + rax], 4	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x4006c77	            0x7581	                           jne 0x4006bfa	      1479	d-demangle.c	FUNCTION_28	CALL_15
0x4006c79	        0x4883c418	                           add rsp, 0x18	      1482	d-demangle.c	FUNCTION_28
0x4006c7d	          0x4889d8	                            mov rax, rbx	      1482	d-demangle.c	FUNCTION_28
0x4006c80	              0x5b	                                 pop rbx	      1482	d-demangle.c	FUNCTION_28
0x4006c81	              0x5d	                                 pop rbp	      1482	d-demangle.c	FUNCTION_28
0x4006c82	            0x415c	                                 pop r12	      1482	d-demangle.c	FUNCTION_28
0x4006c84	            0x415d	                                 pop r13	      1482	d-demangle.c	FUNCTION_28
0x4006c86	            0x415e	                                 pop r14	      1482	d-demangle.c	FUNCTION_28
0x4006c88	            0x415f	                                 pop r15	      1482	d-demangle.c	FUNCTION_28
0x4006c8a	              0xc3	                                     ret	      1482	d-demangle.c	FUNCTION_28
0x4006c8b	       0xf1f440000	                   nop dword [rax + rax]	      1482	d-demangle.c	FUNCTION_28
0x4006c90	        0x488b7d00	                    mov rdi, qword [rbp]	      1482	d-demangle.c	FUNCTION_28
0x4006c94	        0x488b4d08	                mov rcx, qword [rbp + 8]	      1482	d-demangle.c	FUNCTION_28
0x4006c98	          0x4839f9	                            cmp rcx, rdi	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006c9b	     0xf8445010000	                            je 0x4006de6	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006ca1	          0x4189cd	                           mov r13d, ecx	       105	d-demangle.c	FUNCTION_4
0x4006ca4	          0x4889da	                            mov rdx, rbx	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006ca7	          0x4129fd	                           sub r13d, edi	       105	d-demangle.c	FUNCTION_4
0x4006caa	        0x4883c201	                              add rdx, 1	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006cae	            0x747d	                            je 0x4006d2d	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006cb0	         0xfb64301	               movzx eax, byte [rbx + 1]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006cb4	            0x84c0	                             test al, al	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006cb6	     0xf84e5050000	                            je 0x40072a1	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006cbc	         0xf1f4000	                         nop dword [rax]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006cc0	            0x3c4f	                            cmp al, 0x4f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006cc2	     0xf8440030000	                            je 0x4007008	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006cc8	     0xf8ed7020000	                           jle 0x4006fa5	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006cce	            0x3c78	                            cmp al, 0x78	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006cd0	     0xf8448010000	                            je 0x4006e1e	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006cd6	            0x3c79	                            cmp al, 0x79	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006cd8	     0xf857f010000	                           jne 0x4006e5d	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006cde	        0x4883c201	                              add rdx, 1	       325	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006ce2	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006ce5	     0xf8462050000	                            je 0x400724d	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006ceb	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006cef	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006cf2	        0x4883f809	                              cmp rax, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006cf6	     0xf8e93030000	                           jle 0x400708f	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006cfc	    0x48b820696d6d	          movabs rax, 0x626174756d6d6920	        53	string3.h	FUNCTION_33	CALL_3
0x4006d06	    0x41b86c650000	                         mov r8d, 0x656c	        53	string3.h	FUNCTION_33	CALL_3
0x4006d0c	          0x488901	                    mov qword [rcx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4006d0f	      0x6644894108	                 mov word [rcx + 8], r8w	        53	string3.h	FUNCTION_33	CALL_3
0x4006d14	        0x488b4508	                mov rax, qword [rbp + 8]	       123	d-demangle.c	FUNCTION_6
0x4006d18	        0x488d480a	                    lea rcx, [rax + 0xa]	       123	d-demangle.c	FUNCTION_6
0x4006d1c	        0x48894d08	                mov qword [rbp + 8], rcx	       123	d-demangle.c	FUNCTION_6
0x4006d20	        0x488b7d00	                    mov rdi, qword [rbp]	       123	d-demangle.c	FUNCTION_6
0x4006d24	          0x4839f9	                            cmp rcx, rdi	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006d27	     0xf84d7000000	                            je 0x4006e04	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006d2d	            0x29f9	                            sub ecx, edi	       105	d-demangle.c	FUNCTION_4
0x4006d2f	          0x4139cd	                           cmp r13d, ecx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006d32	     0xf88d7000000	                            js 0x4006e0f	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006d38	          0x4885d2	                           test rdx, rdx	       275	d-demangle.c	FUNCTION_13	IF_1
0x4006d3b	     0xf8408ffffff	                            je 0x4006c49	       275	d-demangle.c	FUNCTION_13	IF_1
0x4006d41	           0xfb602	                   movzx eax, byte [rdx]	       275	d-demangle.c	FUNCTION_13	IF_1
0x4006d44	            0x84c0	                             test al, al	       275	d-demangle.c	FUNCTION_13	IF_1
0x4006d46	     0xf855ffcffff	                           jne 0x40069ab	       275	d-demangle.c	FUNCTION_13	IF_1
0x4006d4c	            0x31f6	                            xor esi, esi	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006d4e	      0xe99dfdffff	                           jmp 0x4006af0	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006d53	       0xf1f440000	                   nop dword [rax + rax]	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4006d58	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006d5d	      0xe800000000	                          call 0x4006d62	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006d62	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006d66	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006d6a	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006d6e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006d72	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006d75	      0xe9b3fbffff	                           jmp 0x400692d	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006d7a	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006d80	          0x4963d5	                        movsxd rdx, r13d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006d83	          0x4801fa	                            add rdx, rdi	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006d86	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006d89	        0x48895508	                mov qword [rbp + 8], rdx	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006d8d	     0xf8591fdffff	                           jne 0x4006b24	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006d93	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006d98	      0xe800000000	                          call 0x4006d9d	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006d9d	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006da1	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006da5	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006da9	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006dad	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006db0	      0xe9b4fdffff	                           jmp 0x4006b69	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006db5	          0x4d63ed	                        movsxd r13, r13d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006db8	          0x4c01ea	                            add rdx, r13	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006dbb	        0x48895508	                mov qword [rbp + 8], rdx	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006dbf	      0xe9a8feffff	                           jmp 0x4006c6c	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006dc4	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006dc9	      0xe800000000	                          call 0x4006dce	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006dce	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006dd2	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006dd6	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006dda	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006dde	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006de1	      0xe9effdffff	                           jmp 0x4006bd5	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006de6	          0x4889da	                            mov rdx, rbx	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006de9	        0x4883c201	                              add rdx, 1	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006ded	     0xf8453feffff	                            je 0x4006c46	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006df3	         0xfb64301	               movzx eax, byte [rbx + 1]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006df7	          0x4531ed	                          xor r13d, r13d	       103	d-demangle.c	FUNCTION_4	IF_1
0x4006dfa	            0x84c0	                             test al, al	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006dfc	     0xf85befeffff	                           jne 0x4006cc0	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006e02	            0x31d2	                            xor edx, edx	       316	d-demangle.c	FUNCTION_14	IF_1
0x4006e04	            0x31c9	                            xor ecx, ecx	       103	d-demangle.c	FUNCTION_4	IF_1
0x4006e06	          0x4139cd	                           cmp r13d, ecx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006e09	     0xf8929ffffff	                           jns 0x4006d38	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x4006e0f	          0x4963c5	                        movsxd rax, r13d	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006e12	          0x4801f8	                            add rax, rdi	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006e15	        0x48894508	                mov qword [rbp + 8], rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006e19	      0xe91affffff	                           jmp 0x4006d38	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006e1e	        0x4883c201	                              add rdx, 1	       321	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006e22	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006e25	     0xf84ce030000	                            je 0x40071f9	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006e2b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e2f	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e32	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e36	     0xf8e13020000	                           jle 0x400704f	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e3c	    0x41b973740000	                         mov r9d, 0x7473	        53	string3.h	FUNCTION_33	CALL_3
0x4006e42	    0xc70120636f6e	            mov dword [rcx], 0x6e6f6320 	        53	string3.h	FUNCTION_33	CALL_3
0x4006e48	      0x6644894904	                 mov word [rcx + 4], r9w	        53	string3.h	FUNCTION_33	CALL_3
0x4006e4d	        0x488b4508	                mov rax, qword [rbp + 8]	       123	d-demangle.c	FUNCTION_6
0x4006e51	        0x488b7d00	                    mov rdi, qword [rbp]	       123	d-demangle.c	FUNCTION_6
0x4006e55	        0x488d4806	                      lea rcx, [rax + 6]	       123	d-demangle.c	FUNCTION_6
0x4006e59	        0x48894d08	                mov qword [rbp + 8], rcx	       123	d-demangle.c	FUNCTION_6
0x4006e5d	          0x4839f9	                            cmp rcx, rdi	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006e60	     0xf85c7feffff	                           jne 0x4006d2d	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006e66	            0x31c9	                            xor ecx, ecx	       103	d-demangle.c	FUNCTION_4	IF_1
0x4006e68	            0xeb9c	                           jmp 0x4006e06	       103	d-demangle.c	FUNCTION_4	IF_1
0x4006e6a	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e6d	      0x448d440918	            lea r8d, [rcx + rcx + 0x18] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006e72	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006e77	          0x4d63c0	                          movsxd r8, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006e7a	          0x4c89c6	                             mov rsi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006e7d	        0x4c890424	                     mov qword [rsp], r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006e81	      0xe800000000	                          call 0x4006e86	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006e86	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e8b	        0x4c8b0424	                     mov r8, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e8f	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006e93	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e96	          0x4901c0	                             add r8, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e99	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006e9c	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ea0	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ea4	      0xe97cfdffff	                           jmp 0x4006c25	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ea9	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006eac	      0x448d440920	            lea r8d, [rcx + rcx + 0x20] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006eb1	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006eb6	          0x4d63c0	                          movsxd r8, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006eb9	          0x4c89c6	                             mov rsi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ebc	        0x4c890424	                     mov qword [rsp], r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ec0	      0xe800000000	                          call 0x4006ec5	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ec5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006eca	        0x4c8b0424	                     mov r8, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ece	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ed2	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ed5	          0x4901c0	                             add r8, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ed8	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006edb	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006edf	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ee3	      0xe94bfbffff	                           jmp 0x4006a33	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006ee8	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006eeb	      0x448d440928	            lea r8d, [rcx + rcx + 0x28] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ef0	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ef5	          0x4d63c0	                          movsxd r8, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006ef8	          0x4c89c6	                             mov rsi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006efb	        0x4c890424	                     mov qword [rsp], r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006eff	      0xe800000000	                          call 0x4006f04	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f04	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f09	        0x4c8b0424	                     mov r8, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f0d	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f11	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f14	          0x4901c0	                             add r8, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f17	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f1a	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f1e	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f22	      0xe9bbfaffff	                           jmp 0x40069e2	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f27	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f2a	      0x448d440914	            lea r8d, [rcx + rcx + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f2f	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f34	          0x4d63c0	                          movsxd r8, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f37	          0x4c89c6	                             mov rsi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f3a	        0x4c890424	                     mov qword [rsp], r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f3e	      0xe800000000	                          call 0x4006f43	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f43	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f48	        0x4c8b0424	                     mov r8, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f4c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f50	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f53	          0x4901c0	                             add r8, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f56	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f59	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f5d	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f61	      0xe964fbffff	                           jmp 0x4006aca	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f66	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f69	      0x448d44091e	            lea r8d, [rcx + rcx + 0x1e] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f6e	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f73	          0x4d63c0	                          movsxd r8, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f76	          0x4c89c6	                             mov rsi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f79	        0x4c890424	                     mov qword [rsp], r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f7d	      0xe800000000	                          call 0x4006f82	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f82	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f87	        0x4c8b0424	                     mov r8, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f8b	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006f8f	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f92	          0x4901c0	                             add r8, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f95	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f98	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006f9c	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006fa0	      0xe9d8faffff	                           jmp 0x4006a7d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006fa5	            0x3c4e	                            cmp al, 0x4e	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006fa7	     0xf85b0feffff	                           jne 0x4006e5d	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4006fad	        0x807a0167	                cmp byte [rdx + 1], 0x67	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4006fb1	            0x7548	                           jne 0x4006ffb	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4006fb3	        0x4883c202	                              add rdx, 2	       336	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4006fb7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006fba	     0xf84b7020000	                            je 0x4007277	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006fc0	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006fc4	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006fc7	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006fcb	     0xf8e3e010000	                           jle 0x400710f	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006fd1	      0xbe75740000	                         mov esi, 0x7475	        53	string3.h	FUNCTION_33	CALL_3
0x4006fd6	    0xc70120696e6f	            mov dword [rcx], 0x6f6e6920 	        53	string3.h	FUNCTION_33	CALL_3
0x4006fdc	        0x66897104	                  mov word [rcx + 4], si	        53	string3.h	FUNCTION_33	CALL_3
0x4006fe0	        0x488b4508	                mov rax, qword [rbp + 8]	       123	d-demangle.c	FUNCTION_6
0x4006fe4	        0x488d4806	                      lea rcx, [rax + 6]	       123	d-demangle.c	FUNCTION_6
0x4006fe8	        0x48894d08	                mov qword [rbp + 8], rcx	       123	d-demangle.c	FUNCTION_6
0x4006fec	           0xfb602	                   movzx eax, byte [rdx]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006fef	        0x488b7d00	                    mov rdi, qword [rbp]	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006ff3	            0x84c0	                             test al, al	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006ff5	     0xf85c5fcffff	                           jne 0x4006cc0	       315	d-demangle.c	FUNCTION_14	IF_1
0x4006ffb	            0x31d2	                            xor edx, edx	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x4006ffd	      0xe95bfeffff	                           jmp 0x4006e5d	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x4007002	    0x660f1f440000	                    nop word [rax + rax]	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x4007008	        0x4883c201	                              add rdx, 1	       329	d-demangle.c	FUNCTION_14	SWITCH_1
0x400700c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400700f	     0xf840e020000	                            je 0x4007223	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007015	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007019	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400701c	        0x4883f806	                              cmp rax, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007020	     0xf8ea9000000	                           jle 0x40070cf	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007026	      0xbf72650000	                         mov edi, 0x6572	        53	string3.h	FUNCTION_33	CALL_3
0x400702b	    0xc70120736861	            mov dword [rcx], 0x61687320 	        53	string3.h	FUNCTION_33	CALL_3
0x4007031	        0xc6410664	                mov byte [rcx + 6], 0x64	        53	string3.h	FUNCTION_33	CALL_3
0x4007035	        0x66897904	                  mov word [rcx + 4], di	        53	string3.h	FUNCTION_33	CALL_3
0x4007039	        0x488b4508	                mov rax, qword [rbp + 8]	       123	d-demangle.c	FUNCTION_6
0x400703d	          0x4885d2	                           test rdx, rdx	       315	d-demangle.c	FUNCTION_14	IF_1
0x4007040	        0x488d4807	                      lea rcx, [rax + 7]	       123	d-demangle.c	FUNCTION_6
0x4007044	        0x48894d08	                mov qword [rbp + 8], rcx	       123	d-demangle.c	FUNCTION_6
0x4007048	            0x75a2	                           jne 0x4006fec	       315	d-demangle.c	FUNCTION_14	IF_1
0x400704a	      0xe9d1fcffff	                           jmp 0x4006d20	       315	d-demangle.c	FUNCTION_14	IF_1
0x400704f	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007052	      0x4889542408	                mov qword [rsp + 8], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007057	      0x448d44090c	              lea r8d, [rcx + rcx + 0xc]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400705c	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007060	          0x4d63f8	                         movsxd r15, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007063	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007066	      0xe800000000	                          call 0x400706b	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400706b	        0x488b0c24	                    mov rcx, qword [rsp]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400706f	        0x4e8d0438	                     lea r8, [rax + r15]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007073	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007077	      0x488b542408	                mov rdx, qword [rsp + 8]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400707c	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007080	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007083	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007086	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400708a	      0xe9adfdffff	                           jmp 0x4006e3c	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400708f	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007092	      0x4889542408	                mov qword [rsp + 8], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007097	      0x448d440914	            lea r8d, [rcx + rcx + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400709c	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070a0	          0x4d63f8	                         movsxd r15, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070a3	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070a6	      0xe800000000	                          call 0x40070ab	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070ab	        0x488b0c24	                    mov rcx, qword [rsp]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070af	        0x4e8d0438	                     lea r8, [rax + r15]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070b3	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070b7	      0x488b542408	                mov rdx, qword [rsp + 8]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070bc	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070c0	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070c3	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070c6	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070ca	      0xe92dfcffff	                           jmp 0x4006cfc	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070cf	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070d2	      0x4889542408	                mov qword [rsp + 8], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070d7	      0x448d44090e	              lea r8d, [rcx + rcx + 0xe]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070dc	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070e0	          0x4d63f8	                         movsxd r15, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070e3	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070e6	      0xe800000000	                          call 0x40070eb	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070eb	        0x488b0c24	                    mov rcx, qword [rsp]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070ef	        0x4e8d0438	                     lea r8, [rax + r15]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070f3	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40070f7	      0x488b542408	                mov rdx, qword [rsp + 8]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40070fc	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007100	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007103	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007106	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400710a	      0xe917ffffff	                           jmp 0x4007026	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400710f	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007112	      0x4889542408	                mov qword [rsp + 8], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007117	      0x448d44090c	              lea r8d, [rcx + rcx + 0xc]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400711c	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007120	          0x4d63f8	                         movsxd r15, r8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007123	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007126	      0xe800000000	                          call 0x400712b	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400712b	        0x488b0c24	                    mov rcx, qword [rsp]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400712f	        0x4e8d0438	                     lea r8, [rax + r15]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007133	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007137	      0x488b542408	                mov rdx, qword [rsp + 8]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400713c	        0x4c894510	              mov qword [rbp + 0x10], r8	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007140	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007143	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007146	        0x48894d08	                mov qword [rbp + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400714a	      0xe982feffff	                           jmp 0x4006fd1	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400714f	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007154	      0xe800000000	                          call 0x4007159	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007159	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400715d	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007161	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007165	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007169	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400716c	      0xe959f9ffff	                           jmp 0x4006aca	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007171	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007176	      0xe800000000	                          call 0x400717b	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400717b	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400717f	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007183	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007187	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x400718b	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400718e	      0xe992faffff	                           jmp 0x4006c25	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007193	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007198	      0xe800000000	                          call 0x400719d	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400719d	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071a1	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071a5	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071a9	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071ad	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071b0	      0xe97ef8ffff	                           jmp 0x4006a33	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071b5	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071ba	      0xe800000000	                          call 0x40071bf	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071bf	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071c3	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071c7	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071cb	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071cf	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071d2	      0xe9a6f8ffff	                           jmp 0x4006a7d	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071d7	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071dc	      0xe800000000	                          call 0x40071e1	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071e1	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071e5	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071e9	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071ed	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071f1	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071f4	      0xe9e9f7ffff	                           jmp 0x40069e2	        69	d-demangle.c	FUNCTION_1	IF_1
0x40071f9	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40071fe	        0x48891424	                    mov qword [rsp], rdx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007202	      0xe800000000	                          call 0x4007207	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007207	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400720b	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400720f	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007213	        0x488b1424	                    mov rdx, qword [rsp]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007217	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x400721b	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400721e	      0xe919fcffff	                           jmp 0x4006e3c	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007223	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007228	        0x48891424	                    mov qword [rsp], rdx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400722c	      0xe800000000	                          call 0x4007231	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007231	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007235	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007239	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400723d	        0x488b1424	                    mov rdx, qword [rsp]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007241	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007245	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007248	      0xe9d9fdffff	                           jmp 0x4007026	        69	d-demangle.c	FUNCTION_1	IF_1
0x400724d	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007252	        0x48891424	                    mov qword [rsp], rdx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007256	      0xe800000000	                          call 0x400725b	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400725b	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400725f	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007263	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007267	        0x488b1424	                    mov rdx, qword [rsp]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400726b	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x400726f	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007272	      0xe985faffff	                           jmp 0x4006cfc	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007277	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400727c	        0x48891424	                    mov qword [rsp], rdx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007280	      0xe800000000	                          call 0x4007285	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007285	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007289	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400728d	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007291	        0x488b1424	                    mov rdx, qword [rsp]	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007295	        0x48894d10	            mov qword [rbp + 0x10], rcx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007299	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400729c	      0xe930fdffff	                           jmp 0x4006fd1	        69	d-demangle.c	FUNCTION_1	IF_1
0x40072a1	            0x31d2	                            xor edx, edx	       316	d-demangle.c	FUNCTION_14	IF_1
0x40072a3	      0xe985faffff	                           jmp 0x4006d2d	       316	d-demangle.c	FUNCTION_14	IF_1
dlang_function_type	functions,0:ELSE,0:FOR,0:WHILE,0:IF,1:CALL,18:DO,0:SWITCH,0	520
0x4005760	            0x4157	                                push r15	       421	d-demangle.c	FUNCTION_16
0x4005762	            0x4156	                                push r14	       421	d-demangle.c	FUNCTION_16
0x4005764	            0x4155	                                push r13	       421	d-demangle.c	FUNCTION_16
0x4005766	            0x4154	                                push r12	       421	d-demangle.c	FUNCTION_16
0x4005768	              0x55	                                push rbp	       421	d-demangle.c	FUNCTION_16
0x4005769	              0x53	                                push rbx	       421	d-demangle.c	FUNCTION_16
0x400576a	        0x4883ec78	                           sub rsp, 0x78	       421	d-demangle.c	FUNCTION_16
0x400576e	    0x64488b042528	                mov rax, qword fs:[0x28]	       421	d-demangle.c	FUNCTION_16
0x4005777	      0x4889442468	             mov qword [rsp + 0x68], rax	       421	d-demangle.c	FUNCTION_16
0x400577c	            0x31c0	                            xor eax, eax	       421	d-demangle.c	FUNCTION_16
0x400577e	          0x4885f6	                           test rsi, rsi	       425	d-demangle.c	FUNCTION_16	IF_1
0x4005781	     0xf8411070000	                            je 0x4005e98	       425	d-demangle.c	FUNCTION_16	IF_1
0x4005787	           0xfb616	                   movzx edx, byte [rsi]	       425	d-demangle.c	FUNCTION_16	IF_1
0x400578a	            0x31ed	                            xor ebp, ebp	       426	d-demangle.c	FUNCTION_16	IF_1
0x400578c	            0x84d2	                             test dl, dl	       425	d-demangle.c	FUNCTION_16	IF_1
0x400578e	     0xf8411020000	                            je 0x40059a5	       425	d-demangle.c	FUNCTION_16	IF_1
0x4005794	          0x83ea46	                           sub edx, 0x46	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005797	          0x4889fb	                            mov rbx, rdi	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x400579a	    0x48c744242000	               mov qword [rsp + 0x20], 0	        95	d-demangle.c	FUNCTION_3
0x40057a3	          0x80fa13	                            cmp dl, 0x13	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40057a6	    0x48c744241800	               mov qword [rsp + 0x18], 0	        95	d-demangle.c	FUNCTION_3
0x40057af	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x40057b8	    0x48c744244000	               mov qword [rsp + 0x40], 0	        95	d-demangle.c	FUNCTION_3
0x40057c1	    0x48c744243800	               mov qword [rsp + 0x38], 0	        95	d-demangle.c	FUNCTION_3
0x40057ca	    0x48c744243000	               mov qword [rsp + 0x30], 0	        95	d-demangle.c	FUNCTION_3
0x40057d3	    0x48c744246000	               mov qword [rsp + 0x60], 0	        95	d-demangle.c	FUNCTION_3
0x40057dc	    0x48c744245800	               mov qword [rsp + 0x58], 0	        95	d-demangle.c	FUNCTION_3
0x40057e5	    0x48c744245000	               mov qword [rsp + 0x50], 0	        95	d-demangle.c	FUNCTION_3
0x40057ee	     0xf8734040000	                            ja 0x4005c28	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40057f4	           0xfb6d2	                           movzx edx, dl	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40057f7	    0xff24d5000000	                       jmp qword [rdx*8]	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x40057fe	            0x6690	                                     nop	       278	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005800	        0x4883c601	                              add rsi, 1	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005804	         0xf1f4000	                         nop dword [rax]	       281	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005808	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       442	d-demangle.c	FUNCTION_16	CALL_5
0x400580d	      0xe8dea9ffff	               call sym.dlang_attributes	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4005812	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       442	d-demangle.c	FUNCTION_16	CALL_5
0x4005817	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       442	d-demangle.c	FUNCTION_16	CALL_5
0x400581c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4005821	          0x4889c6	                            mov rsi, rax	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4005824	          0x4189d4	                           mov r12d, edx	       105	d-demangle.c	FUNCTION_4
0x4005827	          0x4129cc	                           sub r12d, ecx	       105	d-demangle.c	FUNCTION_4
0x400582a	          0x4839d1	                            cmp rcx, rdx	       105	d-demangle.c	FUNCTION_4
0x400582d	      0xba00000000	                              mov edx, 0	       105	d-demangle.c	FUNCTION_4
0x4005832	        0x440f44e2	                         cmove r12d, edx	       105	d-demangle.c	FUNCTION_4
0x4005836	      0xe895f9ffff	            call sym.dlang_function_args	       446	d-demangle.c	FUNCTION_16	CALL_7
0x400583b	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4005840	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       446	d-demangle.c	FUNCTION_16	CALL_7
0x4005845	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       450	d-demangle.c	FUNCTION_16	CALL_9
0x400584a	          0x4889c6	                            mov rsi, rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x400584d	          0x4189d5	                           mov r13d, edx	       105	d-demangle.c	FUNCTION_4
0x4005850	          0x4129cd	                           sub r13d, ecx	       105	d-demangle.c	FUNCTION_4
0x4005853	          0x4839d1	                            cmp rcx, rdx	       105	d-demangle.c	FUNCTION_4
0x4005856	      0xba00000000	                              mov edx, 0	       105	d-demangle.c	FUNCTION_4
0x400585b	        0x440f44ea	                         cmove r13d, edx	       105	d-demangle.c	FUNCTION_4
0x400585f	      0xe83cddffff	                     call sym.dlang_type	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4005864	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4005869	          0x4889c5	                            mov rbp, rax	       450	d-demangle.c	FUNCTION_16	CALL_9
0x400586c	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       450	d-demangle.c	FUNCTION_16	CALL_9
0x4005871	          0x4939c7	                            cmp r15, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x4005874	            0x740b	                            je 0x4005881	       101	d-demangle.c	FUNCTION_4	IF_1
0x4005876	          0x4c29f8	                            sub rax, r15	       105	d-demangle.c	FUNCTION_4
0x4005879	            0x85c0	                           test eax, eax	       129	d-demangle.c	FUNCTION_7	IF_1
0x400587b	     0xf85c7040000	                           jne 0x4005d48	       129	d-demangle.c	FUNCTION_7	IF_1
0x4005881	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005884	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005887	     0xf8438050000	                            je 0x4005dc5	        62	d-demangle.c	FUNCTION_1	IF_1
0x400588d	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005891	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005895	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005898	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400589b	            0x7f2a	                            jg 0x40058c7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400589d	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058a0	      0x448d7c1202	               lea r15d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40058a5	          0x4989d6	                            mov r14, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058a8	          0x4d63ff	                        movsxd r15, r15d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40058ab	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40058ae	      0xe800000000	                          call 0x40058b3	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40058b3	          0x4963d6	                        movsxd rdx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058b6	          0x4901c7	                            add r15, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058b9	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40058bc	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058bf	        0x4c897b10	             mov qword [rbx + 0x10], r15	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058c3	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058c7	          0xc60228	                    mov byte [rdx], 0x28	        53	string3.h	FUNCTION_33	CALL_3
0x40058ca	        0x488b4308	                mov rax, qword [rbx + 8]	       123	d-demangle.c	FUNCTION_6
0x40058ce	          0x4585ed	                         test r13d, r13d	       129	d-demangle.c	FUNCTION_7	IF_1
0x40058d1	        0x488d4801	                      lea rcx, [rax + 1]	       123	d-demangle.c	FUNCTION_6
0x40058d5	        0x48894b08	                mov qword [rbx + 8], rcx	       123	d-demangle.c	FUNCTION_6
0x40058d9	     0xf85c1030000	                           jne 0x4005ca0	       129	d-demangle.c	FUNCTION_7	IF_1
0x40058df	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40058e2	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40058e5	     0xf8439040000	                            je 0x4005d24	        62	d-demangle.c	FUNCTION_1	IF_1
0x40058eb	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058ef	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058f2	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058f6	            0x7f2a	                            jg 0x4005922	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058f8	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40058fb	      0x448d6c0904	               lea r13d, [rcx + rcx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005900	          0x4989ce	                            mov r14, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005903	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005906	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005909	      0xe800000000	                          call 0x400590e	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400590e	          0x4963ce	                        movsxd rcx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005911	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005914	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005917	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400591a	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400591e	        0x48894b08	                mov qword [rbx + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005922	      0xb829200000	                         mov eax, 0x2029	        53	string3.h	FUNCTION_33	CALL_3
0x4005927	          0x4585e4	                         test r12d, r12d	       129	d-demangle.c	FUNCTION_7	IF_1
0x400592a	          0x668901	                      mov word [rcx], ax	        53	string3.h	FUNCTION_33	CALL_3
0x400592d	        0x488b4308	                mov rax, qword [rbx + 8]	       123	d-demangle.c	FUNCTION_6
0x4005931	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       458	d-demangle.c	FUNCTION_16	CALL_15
0x4005936	        0x488d7802	                      lea rdi, [rax + 2]	       123	d-demangle.c	FUNCTION_6
0x400593a	        0x48897b08	                mov qword [rbx + 8], rdi	       123	d-demangle.c	FUNCTION_6
0x400593e	     0xf85ec020000	                           jne 0x4005c30	       129	d-demangle.c	FUNCTION_7	IF_1
0x4005944	          0x4d85ff	                           test r15, r15	        85	d-demangle.c	FUNCTION_2	IF_1
0x4005947	            0x7423	                            je 0x400596c	        85	d-demangle.c	FUNCTION_2	IF_1
0x4005949	          0x4c89ff	                            mov rdi, r15	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400594c	      0xe800000000	                          call 0x4005951	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4005951	    0x48c744241800	               mov qword [rsp + 0x18], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x400595a	    0x48c744242000	               mov qword [rsp + 0x20], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4005963	    0x48c744241000	               mov qword [rsp + 0x10], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x400596c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x4005971	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x4005974	            0x7420	                            je 0x4005996	        85	d-demangle.c	FUNCTION_2	IF_1
0x4005976	      0xe800000000	                          call 0x400597b	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400597b	    0x48c744243800	               mov qword [rsp + 0x38], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4005984	    0x48c744244000	               mov qword [rsp + 0x40], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x400598d	    0x48c744243000	               mov qword [rsp + 0x30], 0	        88	d-demangle.c	FUNCTION_2	IF_1
0x4005996	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x400599b	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x400599e	            0x7405	                            je 0x40059a5	        85	d-demangle.c	FUNCTION_2	IF_1
0x40059a0	      0xe800000000	                          call 0x40059a5	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40059a5	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       464	d-demangle.c	FUNCTION_16
0x40059aa	    0x644833342528	                xor rsi, qword fs:[0x28]	       464	d-demangle.c	FUNCTION_16
0x40059b3	          0x4889e8	                            mov rax, rbp	       464	d-demangle.c	FUNCTION_16
0x40059b6	     0xf85d7050000	                           jne 0x4005f93	       464	d-demangle.c	FUNCTION_16
0x40059bc	        0x4883c478	                           add rsp, 0x78	       464	d-demangle.c	FUNCTION_16
0x40059c0	              0x5b	                                 pop rbx	       464	d-demangle.c	FUNCTION_16
0x40059c1	              0x5d	                                 pop rbp	       464	d-demangle.c	FUNCTION_16
0x40059c2	            0x415c	                                 pop r12	       464	d-demangle.c	FUNCTION_16
0x40059c4	            0x415d	                                 pop r13	       464	d-demangle.c	FUNCTION_16
0x40059c6	            0x415e	                                 pop r14	       464	d-demangle.c	FUNCTION_16
0x40059c8	            0x415f	                                 pop r15	       464	d-demangle.c	FUNCTION_16
0x40059ca	              0xc3	                                     ret	       464	d-demangle.c	FUNCTION_16
0x40059cb	       0xf1f440000	                   nop dword [rax + rax]	       464	d-demangle.c	FUNCTION_16
0x40059d0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40059d3	        0x488d6e01	                      lea rbp, [rsi + 1]	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x40059d7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40059da	     0xf8460050000	                            je 0x4005f40	        62	d-demangle.c	FUNCTION_1	IF_1
0x40059e0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40059e4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40059e8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40059eb	        0x4883f813	                           cmp rax, 0x13	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40059ef	            0x7f2a	                            jg 0x4005a1b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40059f1	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40059f4	      0x448d6c1228	           lea r13d, [rdx + rdx + 0x28] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40059f9	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40059fc	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40059ff	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005a02	      0xe800000000	                          call 0x4005a07	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005a07	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a0a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a0d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005a10	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a13	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a17	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a1b	    0x48b865787465	          movabs rax, 0x4f286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4005a25	    0xc742102d4329	     mov dword [rdx + 0x10], 0x2029432d 	        53	string3.h	FUNCTION_33	CALL_3
0x4005a2c	          0x4889ee	                            mov rsi, rbp	       300	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005a2f	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4005a32	    0x48b8626a6563	          movabs rax, 0x6576697463656a62	        53	string3.h	FUNCTION_33	CALL_3
0x4005a3c	        0x48894208	                mov qword [rdx + 8], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4005a40	      0x4883430814	               add qword [rbx + 8], 0x14	       123	d-demangle.c	FUNCTION_6
0x4005a45	      0xe9befdffff	                           jmp 0x4005808	       123	d-demangle.c	FUNCTION_6
0x4005a4a	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4005a50	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005a53	        0x488d6e01	                      lea rbp, [rsi + 1]	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005a57	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005a5a	     0xf84b8040000	                            je 0x4005f18	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005a60	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a64	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a68	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a6b	        0x4883f80b	                            cmp rax, 0xb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a6f	            0x7f2a	                            jg 0x4005a9b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a71	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a74	      0x448d6c1218	           lea r13d, [rdx + rdx + 0x18] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005a79	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a7c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005a7f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005a82	      0xe800000000	                          call 0x4005a87	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005a87	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a8a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a8d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005a90	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a93	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a97	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005a9b	    0x48b865787465	          movabs rax, 0x43286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4005aa5	    0xc742082b2b29	        mov dword [rdx + 8], 0x20292b2b 	        53	string3.h	FUNCTION_33	CALL_3
0x4005aac	          0x4889ee	                            mov rsi, rbp	       296	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005aaf	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4005ab2	      0x488343080c	                add qword [rbx + 8], 0xc	       123	d-demangle.c	FUNCTION_6
0x4005ab7	      0xe94cfdffff	                           jmp 0x4005808	       123	d-demangle.c	FUNCTION_6
0x4005abc	         0xf1f4000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4005ac0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005ac3	        0x488d6e01	                      lea rbp, [rsi + 1]	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005ac7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005aca	     0xf8420040000	                            je 0x4005ef0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005ad0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005ad4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005ad8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005adb	        0x4883f809	                              cmp rax, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005adf	            0x7f2a	                            jg 0x4005b0b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005ae1	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005ae4	      0x448d6c1214	           lea r13d, [rdx + rdx + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005ae9	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005aec	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005aef	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005af2	      0xe800000000	                          call 0x4005af7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005af7	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005afa	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005afd	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005b00	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b03	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b07	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b0b	      0xbe29200000	                         mov esi, 0x2029	        53	string3.h	FUNCTION_33	CALL_3
0x4005b10	    0x48b865787465	          movabs rax, 0x43286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4005b1a	        0x66897208	                  mov word [rdx + 8], si	        53	string3.h	FUNCTION_33	CALL_3
0x4005b1e	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4005b21	          0x4889ee	                            mov rsi, rbp	       284	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005b24	      0x488343080a	                add qword [rbx + 8], 0xa	       123	d-demangle.c	FUNCTION_6
0x4005b29	      0xe9dafcffff	                           jmp 0x4005808	       123	d-demangle.c	FUNCTION_6
0x4005b2e	            0x6690	                                     nop	       123	d-demangle.c	FUNCTION_6
0x4005b30	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005b33	        0x488d6e01	                      lea rbp, [rsi + 1]	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005b37	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005b3a	     0xf8488030000	                            je 0x4005ec8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005b40	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b44	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b48	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b4b	        0x4883f80e	                            cmp rax, 0xe	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b4f	            0x7f2a	                            jg 0x4005b7b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b51	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b54	      0x448d6c121e	           lea r13d, [rdx + rdx + 0x1e] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005b59	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b5c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005b5f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005b62	      0xe800000000	                          call 0x4005b67	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005b67	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b6a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b6d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005b70	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b73	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b77	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005b7b	    0x48b865787465	          movabs rax, 0x50286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4005b85	      0xb96c290000	                         mov ecx, 0x296c	        53	string3.h	FUNCTION_33	CALL_3
0x4005b8a	    0xc74208617363	        mov dword [rdx + 8], 0x61637361 	        53	string3.h	FUNCTION_33	CALL_3
0x4005b91	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4005b94	        0x66894a0c	                mov word [rdx + 0xc], cx	        53	string3.h	FUNCTION_33	CALL_3
0x4005b98	          0x4889ee	                            mov rsi, rbp	       292	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005b9b	        0xc6420e20	              mov byte [rdx + 0xe], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x4005b9f	      0x488343080f	                add qword [rbx + 8], 0xf	       123	d-demangle.c	FUNCTION_6
0x4005ba4	      0xe95ffcffff	                           jmp 0x4005808	       123	d-demangle.c	FUNCTION_6
0x4005ba9	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4005bb0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005bb3	        0x488d6e01	                      lea rbp, [rsi + 1]	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005bb7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005bba	     0xf84e0020000	                            je 0x4005ea0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005bc0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bc4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bc8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bcb	        0x4883f80f	                            cmp rax, 0xf	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bcf	            0x7f2a	                            jg 0x4005bfb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bd1	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bd4	      0x448d6c1220	           lea r13d, [rdx + rdx + 0x20] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005bd9	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bdc	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005bdf	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005be2	      0xe800000000	                          call 0x4005be7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005be7	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bea	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bed	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005bf0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bf3	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bf7	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005bfb	    0x48b865787465	          movabs rax, 0x57286e7265747865	        53	string3.h	FUNCTION_33	CALL_3
0x4005c05	          0x4889ee	                            mov rsi, rbp	       288	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005c08	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4005c0b	    0x48b8696e646f	          movabs rax, 0x202973776f646e69	        53	string3.h	FUNCTION_33	CALL_3
0x4005c15	        0x48894208	                mov qword [rdx + 8], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4005c19	      0x4883430810	               add qword [rbx + 8], 0x10	       123	d-demangle.c	FUNCTION_6
0x4005c1e	      0xe9e5fbffff	                           jmp 0x4005808	       123	d-demangle.c	FUNCTION_6
0x4005c23	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4005c28	            0x31f6	                            xor esi, esi	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005c2a	      0xe9d9fbffff	                           jmp 0x4005808	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005c2f	              0x90	                                     nop	       304	d-demangle.c	FUNCTION_13	SWITCH_1
0x4005c30	          0x488b0b	                    mov rcx, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005c33	          0x4885c9	                           test rcx, rcx	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005c36	     0xf84b4010000	                            je 0x4005df0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005c3c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c40	          0x4963d4	                        movsxd rdx, r12d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c43	          0x4829f8	                            sub rax, rdi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c46	          0x4839d0	                            cmp rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c49	            0x7d37	                           jge 0x4005c82	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c4b	          0x4829cf	                            sub rdi, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c4e	        0x48891424	                    mov qword [rsp], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c52	        0x458d343c	                   lea r14d, [r12 + rdi]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c56	          0x4989fd	                            mov r13, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c59	          0x4889cf	                            mov rdi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005c5c	          0x4501f6	                          add r14d, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005c5f	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005c62	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005c65	      0xe800000000	                          call 0x4005c6a	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005c6a	          0x4963fd	                        movsxd rdi, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c6d	        0x488b1424	                    mov rdx, qword [rsp]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c71	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c74	          0x4801c7	                            add rdi, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c77	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005c7a	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c7e	        0x48897b08	                mov qword [rbx + 8], rdi	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c82	          0x4989d4	                            mov r12, rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005c85	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_33	CALL_3
0x4005c88	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_33	CALL_3
0x4005c8b	      0xe800000000	                          call 0x4005c90	        53	string3.h	FUNCTION_33	CALL_3
0x4005c90	        0x4c016308	                add qword [rbx + 8], r12	       133	d-demangle.c	FUNCTION_7	IF_1
0x4005c94	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       133	d-demangle.c	FUNCTION_7	IF_1
0x4005c99	      0xe9a6fcffff	                           jmp 0x4005944	       133	d-demangle.c	FUNCTION_7	IF_1
0x4005c9e	            0x6690	                                     nop	       133	d-demangle.c	FUNCTION_7	IF_1
0x4005ca0	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005ca3	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       456	d-demangle.c	FUNCTION_16	CALL_13
0x4005ca8	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005cab	     0xf84af010000	                            je 0x4005e60	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005cb1	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cb5	          0x4963d5	                        movsxd rdx, r13d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cb8	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cbb	          0x4839d0	                            cmp rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cbe	            0x7d3c	                           jge 0x4005cfc	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cc0	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cc3	      0x4889542408	                mov qword [rsp + 8], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cc8	      0x458d740d00	                   lea r14d, [r13 + rcx]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005ccd	        0x48890c24	                    mov qword [rsp], rcx	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cd1	          0x4501f6	                          add r14d, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005cd4	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005cd7	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005cda	      0xe800000000	                          call 0x4005cdf	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005cdf	        0x488b0c24	                    mov rcx, qword [rsp]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005ce3	      0x488b542408	                mov rdx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005ce8	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005ceb	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005cee	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cf2	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cf5	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cf8	        0x48894b08	                mov qword [rbx + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cfc	          0x4989d5	                            mov r13, rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005cff	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_33	CALL_3
0x4005d02	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_33	CALL_3
0x4005d05	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_33	CALL_3
0x4005d08	      0xe800000000	                          call 0x4005d0d	        53	string3.h	FUNCTION_33	CALL_3
0x4005d0d	          0x4c89e9	                            mov rcx, r13	       133	d-demangle.c	FUNCTION_7	IF_1
0x4005d10	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005d13	        0x48034b08	                add rcx, qword [rbx + 8]	       133	d-demangle.c	FUNCTION_7	IF_1
0x4005d17	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005d1a	        0x48894b08	                mov qword [rbx + 8], rcx	       133	d-demangle.c	FUNCTION_7	IF_1
0x4005d1e	     0xf85c7fbffff	                           jne 0x40058eb	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005d24	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005d29	      0xe800000000	                          call 0x4005d2e	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005d2e	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005d32	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005d35	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005d39	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005d3c	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005d40	      0xe9ddfbffff	                           jmp 0x4005922	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005d45	           0xf1f00	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005d48	          0x4c8b03	                     mov r8, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005d4b	          0x4d85c0	                             test r8, r8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005d4e	     0xf84d4000000	                            je 0x4005e28	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005d54	        0x488b7b08	                mov rdi, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d58	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d5c	          0x4863d0	                         movsxd rdx, eax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d5f	          0x4829f9	                            sub rcx, rdi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d62	          0x4839d1	                            cmp rcx, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d65	            0x7d40	                           jge 0x4005da7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d67	          0x4889f9	                            mov rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d6a	          0x4c89c7	                             mov rdi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005d6d	      0x4889542408	                mov qword [rsp + 8], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005d72	          0x4c29c1	                             sub rcx, r8	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d75	             0x1c8	                            add eax, ecx	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d77	        0x48890c24	                    mov qword [rsp], rcx	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d7b	        0x448d3400	                   lea r14d, [rax + rax]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005d7f	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005d82	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005d85	      0xe800000000	                          call 0x4005d8a	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005d8a	        0x488b0c24	                    mov rcx, qword [rsp]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d8e	      0x488b542408	                mov rdx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d93	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d96	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005d99	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005d9d	          0x4863f9	                         movsxd rdi, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005da0	          0x4801c7	                            add rdi, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005da3	        0x48897b08	                mov qword [rbx + 8], rdi	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005da7	          0x4989d6	                            mov r14, rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005daa	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_33	CALL_3
0x4005dad	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_33	CALL_3
0x4005db0	      0xe800000000	                          call 0x4005db5	        53	string3.h	FUNCTION_33	CALL_3
0x4005db5	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005db8	        0x4c017308	                add qword [rbx + 8], r14	       133	d-demangle.c	FUNCTION_7	IF_1
0x4005dbc	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005dbf	     0xf85c8faffff	                           jne 0x400588d	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005dc5	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005dca	      0xe800000000	                          call 0x4005dcf	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005dcf	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005dd3	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005dd6	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005dda	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005dde	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005de1	      0xe9e1faffff	                           jmp 0x40058c7	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005de6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005df0	        0x4183fc1f	                          cmp r12d, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005df4	     0xf8f6e010000	                            jg 0x4005f68	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005dfa	          0x4d63e4	                        movsxd r12, r12d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005dfd	    0x41bd20000000	                          mov r13d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e03	          0x4c89ef	                            mov rdi, r13	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e06	      0xe800000000	                          call 0x4005e0b	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e0b	          0x4901c5	                            add r13, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e0e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e11	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e15	        0x4c896b10	             mov qword [rbx + 0x10], r13	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e19	          0x4889c7	                            mov rdi, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e1c	      0xe964feffff	                           jmp 0x4005c85	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e21	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e28	          0x83f81f	                           cmp eax, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e2b	     0xf8f47010000	                            jg 0x4005f78	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e31	          0x4c63f0	                         movsxd r14, eax	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e34	      0xba20000000	                           mov edx, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e39	          0x4889d7	                            mov rdi, rdx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e3c	        0x48891424	                    mov qword [rsp], rdx	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e40	      0xe800000000	                          call 0x4005e45	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e45	        0x488b1424	                    mov rdx, qword [rsp]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e49	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e4c	          0x4889c7	                            mov rdi, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e4f	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e53	          0x4801c2	                            add rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e56	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e5a	      0xe94bffffff	                           jmp 0x4005daa	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e5f	              0x90	                                     nop	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e60	        0x4183fd1f	                          cmp r13d, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e64	     0xf8f1e010000	                            jg 0x4005f88	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e6a	          0x4d63ed	                        movsxd r13, r13d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e6d	    0x41be20000000	                          mov r14d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005e73	          0x4c89f7	                            mov rdi, r14	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e76	      0xe800000000	                          call 0x4005e7b	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e7b	          0x4901c6	                            add r14, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e7e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e81	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005e85	        0x4c897310	             mov qword [rbx + 0x10], r14	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e89	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e8c	      0xe96efeffff	                           jmp 0x4005cff	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e91	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005e98	            0x31ed	                            xor ebp, ebp	       426	d-demangle.c	FUNCTION_16	IF_1
0x4005e9a	      0xe906fbffff	                           jmp 0x40059a5	       426	d-demangle.c	FUNCTION_16	IF_1
0x4005e9f	              0x90	                                     nop	       426	d-demangle.c	FUNCTION_16	IF_1
0x4005ea0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005ea5	      0xe800000000	                          call 0x4005eaa	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005eaa	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005eae	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005eb1	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005eb5	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005eb9	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005ebc	      0xe93afdffff	                           jmp 0x4005bfb	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005ec1	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005ec8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005ecd	      0xe800000000	                          call 0x4005ed2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005ed2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005ed6	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005ed9	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005edd	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005ee1	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005ee4	      0xe992fcffff	                           jmp 0x4005b7b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005ee9	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005ef0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005ef5	      0xe800000000	                          call 0x4005efa	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005efa	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005efe	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f01	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f05	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f09	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f0c	      0xe9fafbffff	                           jmp 0x4005b0b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f11	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f18	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f1d	      0xe800000000	                          call 0x4005f22	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f22	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f26	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f29	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f2d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f31	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f34	      0xe962fbffff	                           jmp 0x4005a9b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f39	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f40	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f45	      0xe800000000	                          call 0x4005f4a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f4a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f4e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f51	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005f55	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f59	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f5c	      0xe9bafaffff	                           jmp 0x4005a1b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f61	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f68	          0x4d63ec	                        movsxd r13, r12d	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005f6b	          0x4d89ec	                            mov r12, r13	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f6e	      0xe990feffff	                           jmp 0x4005e03	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f73	       0xf1f440000	                   nop dword [rax + rax]	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f78	          0x4863d0	                         movsxd rdx, eax	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f7b	          0x4989d6	                            mov r14, rdx	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f7e	      0xe9b6feffff	                           jmp 0x4005e39	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f83	       0xf1f440000	                   nop dword [rax + rax]	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f88	          0x4d63f5	                        movsxd r14, r13d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f8b	          0x4d89f5	                            mov r13, r14	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f8e	      0xe9e0feffff	                           jmp 0x4005e73	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005f93	      0xe800000000	                          call 0x4005f98	       464	d-demangle.c	FUNCTION_16
dlang_parse_integer	functions,0:ELSE,4:FOR,1:WHILE,2:IF,7:CALL,16:DO,0:SWITCH,2	681
0x4001630	            0x4157	                                push r15	       938	d-demangle.c	FUNCTION_20
0x4001632	            0x4156	                                push r14	       938	d-demangle.c	FUNCTION_20
0x4001634	            0x4155	                                push r13	       938	d-demangle.c	FUNCTION_20
0x4001636	            0x4154	                                push r12	       938	d-demangle.c	FUNCTION_20
0x4001638	          0x4189d5	                           mov r13d, edx	       938	d-demangle.c	FUNCTION_20
0x400163b	              0x55	                                push rbp	       938	d-demangle.c	FUNCTION_20
0x400163c	              0x53	                                push rbx	       938	d-demangle.c	FUNCTION_20
0x400163d	          0x4989fc	                            mov r12, rdi	       938	d-demangle.c	FUNCTION_20
0x4001640	          0x4889f5	                            mov rbp, rsi	       938	d-demangle.c	FUNCTION_20
0x4001643	        0x4883ec38	                           sub rsp, 0x38	       938	d-demangle.c	FUNCTION_20
0x4001647	    0x64488b042528	                mov rax, qword fs:[0x28]	       938	d-demangle.c	FUNCTION_20
0x4001650	      0x4889442428	             mov qword [rsp + 0x28], rax	       938	d-demangle.c	FUNCTION_20
0x4001655	            0x31c0	                            xor eax, eax	       938	d-demangle.c	FUNCTION_20
0x4001657	          0x80fa61	                            cmp dl, 0x61	       939	d-demangle.c	FUNCTION_20	IF_1
0x400165a	            0x89d0	                            mov eax, edx	       939	d-demangle.c	FUNCTION_20	IF_1
0x400165c	        0x410f94c6	                               sete r14b	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001660	          0x83e0fd	                     and eax, 0xfffffffd	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001663	            0x3c75	                            cmp al, 0x75	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001665	            0x7469	                            je 0x40016d0	       939	d-demangle.c	FUNCTION_20	IF_1
0x4001667	          0x4584f6	                         test r14b, r14b	       939	d-demangle.c	FUNCTION_20	IF_1
0x400166a	            0x7564	                           jne 0x40016d0	       939	d-demangle.c	FUNCTION_20	IF_1
0x400166c	          0x80fa62	                            cmp dl, 0x62	       998	d-demangle.c	FUNCTION_20	ELSE_3	IF_5
0x400166f	     0xf84bb040000	                            je 0x4001b30	       998	d-demangle.c	FUNCTION_20	ELSE_3	IF_5
0x4001675	           0xfb606	                   movzx eax, byte [rsi]	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001678	    0xf68400000000	                test byte [rax + rax], 4	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001680	     0xf84ea050000	                            je 0x4001c70	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001686	          0x4889f3	                            mov rbx, rsi	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001689	            0x31c0	                            xor eax, eax	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x400168b	       0xf1f440000	                   nop dword [rax + rax]	      1015	d-demangle.c	FUNCTION_20	ELSE_4	IF_7	CALL_11
0x4001690	        0x4883c301	                              add rbx, 1	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4001694	           0xfb613	                   movzx edx, byte [rbx]	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x4001697	        0x4883c001	                              add rax, 1	      1020	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x400169b	    0xf68412000000	                test byte [rdx + rdx], 4	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x40016a3	            0x75eb	                           jne 0x4001690	      1018	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2	CALL_12
0x40016a5	            0x85c0	                           test eax, eax	       129	d-demangle.c	FUNCTION_7	IF_1
0x40016a7	            0x89c1	                            mov ecx, eax	      1023	d-demangle.c	FUNCTION_20	ELSE_4	CALL_13
0x40016a9	     0xf85d9050000	                           jne 0x4001c88	       129	d-demangle.c	FUNCTION_7	IF_1
0x40016af	        0x4183ed68	                          sub r13d, 0x68	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40016b3	        0x4180fd0c	                           cmp r13b, 0xc	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40016b7	     0xf8783050000	                            ja 0x4001c40	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40016bd	        0x450fb6ed	                        movzx r13d, r13b	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40016c1	    0x42ff24ed0000	                       jmp qword [r13*8]	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40016c9	     0xf1f80000000	                         nop dword [rax]	      1026	d-demangle.c	FUNCTION_20	ELSE_4	SWITCH_2
0x40016d0	          0x4885ed	                           test rbp, rbp	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40016d3	     0xf8497050000	                            je 0x4001c70	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40016d9	         0xfbe5500	                   movsx edx, byte [rbp]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40016dd	           0xfb6c2	                           movzx eax, dl	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40016e0	    0xf68400000000	                test byte [rax + rax], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40016e8	     0xf8482050000	                            je 0x4001c70	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40016ee	            0x31db	                            xor ebx, ebx	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40016f0	          0x83ea30	                           sub edx, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40016f3	        0x488d049b	                  lea rax, [rbx + rbx*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x40016f7	        0x4883c501	                              add rbp, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x40016fb	          0x4863d2	                         movsxd rdx, edx	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40016fe	        0x488d1c42	                  lea rbx, [rdx + rax*2]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4001702	         0xfbe5500	                   movsx edx, byte [rbp]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4001706	           0xfb6ca	                           movzx ecx, dl	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4001709	    0xf68409000000	                test byte [rcx + rcx], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4001711	            0x75dd	                           jne 0x40016f0	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4001713	            0x84d2	                             test dl, dl	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001715	     0xf8455050000	                            je 0x4001c70	       220	d-demangle.c	FUNCTION_10	IF_3
0x400171b	          0x4889d8	                            mov rax, rbx	       220	d-demangle.c	FUNCTION_10	IF_3
0x400171e	        0x48c1e83f	                           shr rax, 0x3f	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001722	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001724	     0xf8546050000	                           jne 0x4001c70	       220	d-demangle.c	FUNCTION_10	IF_3
0x400172a	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400172e	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001731	     0xf84b1060000	                            je 0x4001de8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001737	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400173c	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001741	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001744	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001747	            0x7f36	                            jg 0x400177f	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001749	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400174c	        0x8d4c1202	                lea ecx, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001750	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001753	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001756	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001759	      0x48894c2408	                mov qword [rsp + 8], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400175e	      0xe800000000	                          call 0x4001763	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001763	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001768	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400176b	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400176f	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001772	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001777	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400177a	      0x49894c2410	             mov qword [r12 + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400177f	          0xc60227	                    mov byte [rdx], 0x27	        53	string3.h	FUNCTION_33	CALL_3
0x4001782	      0x498b442408	                mov rax, qword [r12 + 8]	       123	d-demangle.c	FUNCTION_6
0x4001787	        0x488d5001	                      lea rdx, [rax + 1]	       123	d-demangle.c	FUNCTION_6
0x400178b	        0x488d43e0	                   lea rax, [rbx - 0x20]	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400178f	        0x4883f85e	                           cmp rax, 0x5e	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001793	      0x4989542408	                mov qword [r12 + 8], rdx	       123	d-demangle.c	FUNCTION_6
0x4001798	            0x7709	                            ja 0x40017a3	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400179a	          0x4584f6	                         test r14b, r14b	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x400179d	     0xf856d060000	                           jne 0x4001e10	       953	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x40017a3	        0x4180fd75	                          cmp r13b, 0x75	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40017a7	     0xf84b3050000	                            je 0x4001d60	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40017ad	        0x4180fd77	                          cmp r13b, 0x77	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40017b1	     0xf8449050000	                            je 0x4001d00	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40017b7	        0x4180fd61	                          cmp r13b, 0x61	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40017bb	     0xf84f7020000	                            je 0x4001ab8	       962	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x40017c1	          0x4885db	                           test rbx, rbx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017c4	     0xf8463010000	                            je 0x400192d	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017ca	            0x31c0	                            xor eax, eax	       944	d-demangle.c	FUNCTION_20	IF_1
0x40017cc	      0xb909000000	                              mov ecx, 9	       944	d-demangle.c	FUNCTION_20	IF_1
0x40017d1	            0xeb1d	                           jmp 0x40017f0	       944	d-demangle.c	FUNCTION_20	IF_1
0x40017d3	       0xf1f440000	                   nop dword [rax + rax]	       944	d-demangle.c	FUNCTION_20	IF_1
0x40017d8	        0x48c1fb04	                              sar rbx, 4	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017dc	          0x83c230	                           add edx, 0x30	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40017df	          0x83e901	                              sub ecx, 1	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40017e2	          0x4885db	                           test rbx, rbx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017e5	        0x88543c10	         mov byte [rsp + rdi + 0x10], dl	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40017e9	          0x8d50ff	                      lea edx, [rax - 1]	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017ec	            0x7429	                            je 0x4001817	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017ee	            0x89d0	                            mov eax, edx	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017f0	          0x4889da	                            mov rdx, rbx	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017f3	            0x89ce	                            mov esi, ecx	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40017f5	          0x4863f9	                         movsxd rdi, ecx	       983	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40017f8	          0x83e20f	                            and edx, 0xf	       980	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x40017fb	        0x4883fa09	                              cmp rdx, 9	       982	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x40017ff	            0x7ed7	                           jle 0x40017d8	       982	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	IF_4
0x4001801	        0x48c1fb04	                              sar rbx, 4	       987	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001805	          0x83c257	                           add edx, 0x57	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001808	          0x83e901	                              sub ecx, 1	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x400180b	          0x4885db	                           test rbx, rbx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x400180e	        0x88543c10	         mov byte [rsp + rdi + 0x10], dl	       985	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1	ELSE_2
0x4001812	          0x8d50ff	                      lea edx, [rax - 1]	       988	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001815	            0x75d7	                           jne 0x40017ee	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001817	            0x85d2	                           test edx, edx	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001819	     0xf8e55040000	                           jle 0x4001c74	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400181f	          0x8d56ff	                      lea edx, [rsi - 1]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001822	          0x83e802	                              sub eax, 2	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001825	          0x4863da	                         movsxd rbx, edx	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001828	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400182d	     0xf8431060000	                            je 0x4001e64	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001833	          0x8d72ff	                      lea esi, [rdx - 1]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001836	          0x83f801	                              cmp eax, 1	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001839	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400183c	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001841	            0x747b	                            je 0x40018be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001843	          0x8d72fe	                      lea esi, [rdx - 2]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001846	          0x83f802	                              cmp eax, 2	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001849	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400184c	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001851	            0x746b	                            je 0x40018be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001853	          0x8d72fd	                      lea esi, [rdx - 3]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001856	          0x83f803	                              cmp eax, 3	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001859	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400185c	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001861	            0x745b	                            je 0x40018be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001863	          0x8d72fc	                      lea esi, [rdx - 4]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001866	          0x83f804	                              cmp eax, 4	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001869	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400186c	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001871	            0x744b	                            je 0x40018be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001873	          0x8d72fb	                      lea esi, [rdx - 5]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001876	          0x83f805	                              cmp eax, 5	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001879	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400187c	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001881	            0x743b	                            je 0x40018be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001883	          0x8d72fa	                      lea esi, [rdx - 6]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001886	          0x83f806	                              cmp eax, 6	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001889	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400188c	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001891	            0x742b	                            je 0x40018be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001893	          0x8d72f9	                      lea esi, [rdx - 7]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001896	          0x83f807	                              cmp eax, 7	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001899	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400189c	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018a1	            0x741b	                            je 0x40018be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018a3	          0x8d72f8	                      lea esi, [rdx - 8]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018a6	          0x83f808	                              cmp eax, 8	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018a9	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018ac	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018b1	            0x740b	                            je 0x40018be	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018b3	          0x8d72f7	                      lea esi, [rdx - 9]	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018b6	          0x4863de	                         movsxd rbx, esi	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018b9	      0xc6441c1030	      mov byte [rsp + rbx + 0x10], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40018be	      0xb80a000000	                            mov eax, 0xa	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x40018c3	            0x29f0	                            sub eax, esi	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x40018c5	        0x498b0c24	                    mov rcx, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40018c9	          0x4885c9	                           test rcx, rcx	        62	d-demangle.c	FUNCTION_1	IF_1
0x40018cc	     0xf84e8050000	                            je 0x4001eba	        62	d-demangle.c	FUNCTION_1	IF_1
0x40018d2	      0x498b7c2408	                mov rdi, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018d7	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018dc	          0x4c63f8	                         movsxd r15, eax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018df	          0x4829fa	                            sub rdx, rdi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018e2	          0x4c39fa	                            cmp rdx, r15	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018e5	            0x7d31	                           jge 0x4001918	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018e7	          0x4829cf	                            sub rdi, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018ea	             0x1f8	                            add eax, edi	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018ec	          0x4989fe	                            mov r14, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40018ef	          0x4889cf	                            mov rdi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40018f2	        0x448d2c00	                   lea r13d, [rax + rax]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40018f6	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40018f9	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40018fc	      0xe800000000	                          call 0x4001901	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001901	          0x4963fe	                        movsxd rdi, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001904	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001907	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400190b	          0x4801c7	                            add rdi, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400190e	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001913	      0x49897c2408	                mov qword [r12 + 8], rdi	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001918	          0x4d89fe	                            mov r14, r15	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400191b	      0x488d741c10	            lea rsi, [rsp + rbx + 0x10] 	        53	string3.h	FUNCTION_33	CALL_3
0x4001920	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_33	CALL_3
0x4001923	      0xe800000000	                          call 0x4001928	        53	string3.h	FUNCTION_33	CALL_3
0x4001928	      0x4d01742408	                add qword [r12 + 8], r14	       133	d-demangle.c	FUNCTION_7	IF_1
0x400192d	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001931	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001934	     0xf8486040000	                            je 0x4001dc0	        62	d-demangle.c	FUNCTION_1	IF_1
0x400193a	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400193f	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001944	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001947	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400194a	            0x7f2d	                            jg 0x4001979	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400194c	          0x4889d3	                            mov rbx, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400194f	          0x4829fb	                            sub rbx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001952	      0x448d6c1b02	               lea r13d, [rbx + rbx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001957	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400195a	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400195d	      0xe800000000	                          call 0x4001962	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001962	          0x4863d3	                         movsxd rdx, ebx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001965	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001968	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400196c	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400196f	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001974	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001979	          0xc60227	                    mov byte [rdx], 0x27	        53	string3.h	FUNCTION_33	CALL_3
0x400197c	          0x4889e8	                            mov rax, rbp	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x400197f	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4001985	      0xe9be020000	                           jmp 0x4001c48	       940	d-demangle.c	FUNCTION_20	IF_1
0x400198a	    0x660f1f440000	                    nop word [rax + rax]	       940	d-demangle.c	FUNCTION_20	IF_1
0x4001990	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001994	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001997	     0xf8437060000	                            je 0x4001fd4	        62	d-demangle.c	FUNCTION_1	IF_1
0x400199d	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019a2	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019a7	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019aa	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019ae	            0x7f2d	                            jg 0x40019dd	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019b0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019b3	      0x448d6c1204	               lea r13d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40019b8	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019bb	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40019be	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40019c1	      0xe800000000	                          call 0x40019c6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40019c6	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019c9	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019cc	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40019d0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019d3	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019d8	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40019dd	      0xb8754c0000	                         mov eax, 0x4c75	        53	string3.h	FUNCTION_33	CALL_3
0x40019e2	          0x668902	                      mov word [rdx], ax	        53	string3.h	FUNCTION_33	CALL_3
0x40019e5	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x40019e8	    0x498344240802	                  add qword [r12 + 8], 2	       123	d-demangle.c	FUNCTION_6
0x40019ee	      0xe955020000	                           jmp 0x4001c48	       123	d-demangle.c	FUNCTION_6
0x40019f3	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40019f8	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40019fc	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40019ff	     0xf84ab050000	                            je 0x4001fb0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001a05	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a0a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a0f	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a12	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a15	            0x7f2d	                            jg 0x4001a44	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a17	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a1a	      0x448d6c1202	               lea r13d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a1f	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a22	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a25	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a28	      0xe800000000	                          call 0x4001a2d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a2d	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a30	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a33	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a37	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a3a	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a3f	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a44	          0xc6024c	                    mov byte [rdx], 0x4c	        53	string3.h	FUNCTION_33	CALL_3
0x4001a47	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4001a4a	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4001a50	      0xe9f3010000	                           jmp 0x4001c48	       123	d-demangle.c	FUNCTION_6
0x4001a55	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4001a58	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001a5c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001a5f	     0xf8427050000	                            je 0x4001f8c	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001a65	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a6a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a6f	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a72	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a75	            0x7f2d	                            jg 0x4001aa4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a77	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a7a	      0x448d6c1202	               lea r13d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a7f	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a82	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a85	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a88	      0xe800000000	                          call 0x4001a8d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a8d	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a90	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a93	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001a97	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a9a	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001a9f	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001aa4	          0xc60275	                    mov byte [rdx], 0x75	        53	string3.h	FUNCTION_33	CALL_3
0x4001aa7	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4001aaa	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4001ab0	      0xe993010000	                           jmp 0x4001c48	       123	d-demangle.c	FUNCTION_6
0x4001ab5	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4001ab8	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001abc	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001abf	     0xf847f040000	                            je 0x4001f44	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001ac5	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001aca	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001acd	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ad1	            0x7f2d	                            jg 0x4001b00	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ad3	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ad6	      0x448d6c1204	               lea r13d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001adb	          0x4989d6	                            mov r14, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ade	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001ae1	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001ae4	      0xe800000000	                          call 0x4001ae9	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001ae9	          0x4963d6	                        movsxd rdx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001aec	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001aef	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001af3	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001af6	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001afb	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001b00	      0xbf5c780000	                         mov edi, 0x785c	        53	string3.h	FUNCTION_33	CALL_3
0x4001b05	      0xb802000000	                              mov eax, 2	       966	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001b0a	          0x66893a	                      mov word [rdx], di	        53	string3.h	FUNCTION_33	CALL_3
0x4001b0d	    0x498344240802	                  add qword [r12 + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4001b13	          0x4885db	                           test rbx, rbx	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001b16	     0xf85b0fcffff	                           jne 0x40017cc	       978	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	WHILE_1
0x4001b1c	      0xc644241930	            mov byte [rsp + 0x19], 0x30 	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001b21	          0x83e801	                              sub eax, 1	       991	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001b24	      0xba09000000	                              mov edx, 9	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001b29	      0xe905fdffff	                           jmp 0x4001833	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001b2e	            0x6690	                                     nop	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001b30	          0x4885f6	                           test rsi, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4001b33	     0xf8437010000	                            je 0x4001c70	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4001b39	           0xfbe06	                   movsx eax, byte [rsi]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4001b3c	           0xfb6d0	                           movzx edx, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4001b3f	    0xf68412000000	                test byte [rdx + rdx], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4001b47	     0xf8423010000	                            je 0x4001c70	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4001b4d	            0x31d2	                            xor edx, edx	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4001b4f	              0x90	                                     nop	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4001b50	          0x83e830	                           sub eax, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4001b53	        0x488d1492	                  lea rdx, [rdx + rdx*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4001b57	        0x4883c501	                              add rbp, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x4001b5b	            0x4898	                                    cdqe	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4001b5d	        0x488d1450	                  lea rdx, [rax + rdx*2]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4001b61	         0xfbe4500	                   movsx eax, byte [rbp]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4001b65	           0xfb6f0	                           movzx esi, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4001b68	    0xf68436000000	                test byte [rsi + rsi], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4001b70	            0x75de	                           jne 0x4001b50	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4001b72	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001b74	     0xf84f6000000	                            je 0x4001c70	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001b7a	          0x4889d0	                            mov rax, rdx	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001b7d	        0x48c1e83f	                           shr rax, 0x3f	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001b81	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001b83	     0xf85e7000000	                           jne 0x4001c70	       220	d-demangle.c	FUNCTION_10	IF_3
0x4001b89	        0x4883fa01	                              cmp rdx, 1	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001b8d	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001b91	    0x41be00000000	                             mov r14d, 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001b97	          0x4819c9	                            sbb rcx, rcx	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001b9a	          0x48f7d1	                                 not rcx	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001b9d	        0x4883c105	                              add rcx, 5	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001ba1	        0x4883fa01	                              cmp rdx, 1	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001ba5	            0x19c0	                            sbb eax, eax	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001ba7	          0x4989cd	                            mov r13, rcx	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001baa	            0xf7d0	                                 not eax	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001bac	          0x83c005	                              add eax, 5	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001baf	          0x4885d2	                           test rdx, rdx	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001bb2	      0xba00000000	                              mov edx, 0	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001bb7	        0x4c0f45f2	                         cmovne r14, rdx	      1007	d-demangle.c	FUNCTION_20	ELSE_3	IF_5	CALL_10
0x4001bbb	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001bbe	     0xf8434040000	                            je 0x4001ff8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001bc4	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bc9	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bce	          0x4829d6	                            sub rsi, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bd1	          0x4839f1	                            cmp rcx, rsi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bd4	            0x7e2d	                           jle 0x4001c03	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bd6	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bd9	          0x8d1c10	                    lea ebx, [rax + rdx]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bdc	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bdf	             0x1db	                            add ebx, ebx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001be1	          0x4863db	                         movsxd rbx, ebx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001be4	          0x4889de	                            mov rsi, rbx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001be7	      0xe800000000	                          call 0x4001bec	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001bec	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bef	          0x4801c3	                            add rbx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bf2	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001bf6	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bf9	      0x49895c2410	             mov qword [r12 + 0x10], rbx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001bfe	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001c03	        0x4183fd08	                             cmp r13d, 8	        53	string3.h	FUNCTION_33	CALL_3
0x4001c07	          0x4489e8	                           mov eax, r13d	        53	string3.h	FUNCTION_33	CALL_3
0x4001c0a	     0xf835b020000	                           jae 0x4001e6b	        53	string3.h	FUNCTION_33	CALL_3
0x4001c10	        0x41f6c504	                            test r13b, 4	        53	string3.h	FUNCTION_33	CALL_3
0x4001c14	     0xf8518040000	                           jne 0x4002032	        53	string3.h	FUNCTION_33	CALL_3
0x4001c1a	            0x85c0	                           test eax, eax	        53	string3.h	FUNCTION_33	CALL_3
0x4001c1c	            0x740e	                            je 0x4001c2c	        53	string3.h	FUNCTION_33	CALL_3
0x4001c1e	        0x410fb60e	                   movzx ecx, byte [r14]	        53	string3.h	FUNCTION_33	CALL_3
0x4001c22	            0xa802	                              test al, 2	        53	string3.h	FUNCTION_33	CALL_3
0x4001c24	            0x880a	                      mov byte [rdx], cl	        53	string3.h	FUNCTION_33	CALL_3
0x4001c26	     0xf853d040000	                           jne 0x4002069	        53	string3.h	FUNCTION_33	CALL_3
0x4001c2c	      0x4d016c2408	                add qword [r12 + 8], r13	       123	d-demangle.c	FUNCTION_6
0x4001c31	          0x4889e8	                            mov rax, rbp	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x4001c34	            0xeb12	                           jmp 0x4001c48	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x4001c36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x4001c40	          0x4889d8	                            mov rax, rbx	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4001c43	       0xf1f440000	                   nop dword [rax + rax]	      1021	d-demangle.c	FUNCTION_20	ELSE_4	WHILE_2
0x4001c48	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1043	d-demangle.c	FUNCTION_20
0x4001c4d	    0x644833342528	                xor rsi, qword fs:[0x28]	      1043	d-demangle.c	FUNCTION_20
0x4001c56	     0xf851d040000	                           jne 0x4002079	      1043	d-demangle.c	FUNCTION_20
0x4001c5c	        0x4883c438	                           add rsp, 0x38	      1043	d-demangle.c	FUNCTION_20
0x4001c60	              0x5b	                                 pop rbx	      1043	d-demangle.c	FUNCTION_20
0x4001c61	              0x5d	                                 pop rbp	      1043	d-demangle.c	FUNCTION_20
0x4001c62	            0x415c	                                 pop r12	      1043	d-demangle.c	FUNCTION_20
0x4001c64	            0x415d	                                 pop r13	      1043	d-demangle.c	FUNCTION_20
0x4001c66	            0x415e	                                 pop r14	      1043	d-demangle.c	FUNCTION_20
0x4001c68	            0x415f	                                 pop r15	      1043	d-demangle.c	FUNCTION_20
0x4001c6a	              0xc3	                                     ret	      1043	d-demangle.c	FUNCTION_20
0x4001c6b	       0xf1f440000	                   nop dword [rax + rax]	      1043	d-demangle.c	FUNCTION_20
0x4001c70	            0x31c0	                            xor eax, eax	       949	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4001c72	            0xebd4	                           jmp 0x4001c48	       949	d-demangle.c	FUNCTION_20	IF_1	IF_2
0x4001c74	      0xb80a000000	                            mov eax, 0xa	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c79	          0x4863de	                         movsxd rbx, esi	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c7c	            0x29f0	                            sub eax, esi	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c7e	      0xe942fcffff	                           jmp 0x40018c5	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c83	       0xf1f440000	                   nop dword [rax + rax]	       994	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	CALL_7
0x4001c88	        0x4d8b0424	                     mov r8, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001c8c	          0x4d85c0	                             test r8, r8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001c8f	     0xf8458020000	                            je 0x4001eed	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001c95	      0x498b7c2408	                mov rdi, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001c9a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001c9f	          0x4863d1	                         movsxd rdx, ecx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ca2	          0x4829f8	                            sub rax, rdi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ca5	          0x4839d0	                            cmp rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ca8	            0x7d3c	                           jge 0x4001ce6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001caa	          0x4c29c7	                             sub rdi, r8	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001cad	      0x4889542408	                mov qword [rsp + 8], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001cb2	        0x448d3439	                   lea r14d, [rcx + rdi]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001cb6	          0x4989ff	                            mov r15, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001cb9	          0x4c89c7	                             mov rdi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001cbc	          0x4501f6	                          add r14d, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001cbf	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001cc2	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001cc5	      0xe800000000	                          call 0x4001cca	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001cca	          0x4963ff	                        movsxd rdi, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ccd	      0x488b542408	                mov rdx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001cd2	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001cd5	          0x4801c7	                            add rdi, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001cd8	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001cdc	      0x4d89742410	             mov qword [r12 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ce1	      0x49897c2408	                mov qword [r12 + 8], rdi	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ce6	          0x4989d7	                            mov r15, rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001ce9	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_33	CALL_3
0x4001cec	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_33	CALL_3
0x4001cef	      0xe800000000	                          call 0x4001cf4	        53	string3.h	FUNCTION_33	CALL_3
0x4001cf4	      0x4d017c2408	                add qword [r12 + 8], r15	       133	d-demangle.c	FUNCTION_7	IF_1
0x4001cf9	      0xe9b1f9ffff	                           jmp 0x40016af	       133	d-demangle.c	FUNCTION_7	IF_1
0x4001cfe	            0x6690	                                     nop	       133	d-demangle.c	FUNCTION_7	IF_1
0x4001d00	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001d04	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001d07	     0xf845b020000	                            je 0x4001f68	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001d0d	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d12	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d15	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d19	            0x7f2d	                            jg 0x4001d48	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d1b	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d1e	      0x448d6c1204	               lea r13d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d23	          0x4989d6	                            mov r14, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d26	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d29	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d2c	      0xe800000000	                          call 0x4001d31	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d31	          0x4963d6	                        movsxd rdx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d34	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d37	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d3b	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d3e	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d43	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d48	      0xb95c550000	                         mov ecx, 0x555c	        53	string3.h	FUNCTION_33	CALL_3
0x4001d4d	      0xb808000000	                              mov eax, 8	       974	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001d52	          0x66890a	                      mov word [rdx], cx	        53	string3.h	FUNCTION_33	CALL_3
0x4001d55	    0x498344240802	                  add qword [r12 + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4001d5b	      0xe9b3fdffff	                           jmp 0x4001b13	       123	d-demangle.c	FUNCTION_6
0x4001d60	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001d64	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001d67	     0xf84b3010000	                            je 0x4001f20	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001d6d	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d72	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d75	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d79	            0x7f2d	                            jg 0x4001da8	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d7b	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d7e	      0x448d6c1204	               lea r13d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d83	          0x4989d6	                            mov r14, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d86	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d89	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d8c	      0xe800000000	                          call 0x4001d91	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d91	          0x4963d6	                        movsxd rdx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d94	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d97	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001d9b	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001d9e	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001da3	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001da8	      0xbe5c750000	                         mov esi, 0x755c	        53	string3.h	FUNCTION_33	CALL_3
0x4001dad	      0xb804000000	                              mov eax, 4	       970	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	SWITCH_1
0x4001db2	          0x668932	                      mov word [rdx], si	        53	string3.h	FUNCTION_33	CALL_3
0x4001db5	    0x498344240802	                  add qword [r12 + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4001dbb	      0xe953fdffff	                           jmp 0x4001b13	       123	d-demangle.c	FUNCTION_6
0x4001dc0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001dc5	      0xe800000000	                          call 0x4001dca	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001dca	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001dce	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001dd2	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001dd7	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001ddc	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001ddf	      0xe995fbffff	                           jmp 0x4001979	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001de4	         0xf1f4000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001de8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001ded	      0xe800000000	                          call 0x4001df2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001df2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001df6	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001dfa	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001dff	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001e04	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001e07	      0xe973f9ffff	                           jmp 0x400177f	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001e0c	         0xf1f4000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001e10	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001e14	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001e17	     0xf8428020000	                            je 0x4002045	        62	d-demangle.c	FUNCTION_1	IF_1
0x4001e1d	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e22	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e25	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e28	            0x7f2d	                            jg 0x4001e57	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e2a	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e2d	      0x448d6c1202	               lea r13d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001e32	          0x4989d6	                            mov r14, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e35	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001e38	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001e3b	      0xe800000000	                          call 0x4001e40	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001e40	          0x4963d6	                        movsxd rdx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e43	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e46	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4001e4a	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e4d	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e52	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4001e57	            0x881a	                      mov byte [rdx], bl	        53	string3.h	FUNCTION_33	CALL_3
0x4001e59	    0x498344240801	                  add qword [r12 + 8], 1	       133	d-demangle.c	FUNCTION_7	IF_1
0x4001e5f	      0xe9c9faffff	                           jmp 0x400192d	       954	d-demangle.c	FUNCTION_20	IF_1	IF_3
0x4001e64	            0x89d6	                            mov esi, edx	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001e66	      0xe953faffff	                           jmp 0x40018be	       992	d-demangle.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4001e6b	          0x498b06	                    mov rax, qword [r14]	        53	string3.h	FUNCTION_33	CALL_3
0x4001e6e	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4001e71	          0x4489e8	                           mov eax, r13d	        53	string3.h	FUNCTION_33	CALL_3
0x4001e74	      0x498b4c06f8	          mov rcx, qword [r14 + rax - 8]	        53	string3.h	FUNCTION_33	CALL_3
0x4001e79	      0x48894c02f8	          mov qword [rdx + rax - 8], rcx	        53	string3.h	FUNCTION_33	CALL_3
0x4001e7e	        0x488d4a08	                      lea rcx, [rdx + 8]	        53	string3.h	FUNCTION_33	CALL_3
0x4001e82	        0x4883e1f8	             and rcx, 0xfffffffffffffff8	        53	string3.h	FUNCTION_33	CALL_3
0x4001e86	          0x4829ca	                            sub rdx, rcx	        53	string3.h	FUNCTION_33	CALL_3
0x4001e89	      0x418d441500	                    lea eax, [r13 + rdx]	        53	string3.h	FUNCTION_33	CALL_3
0x4001e8e	          0x4929d6	                            sub r14, rdx	        53	string3.h	FUNCTION_33	CALL_3
0x4001e91	          0x83e0f8	                     and eax, 0xfffffff8	        53	string3.h	FUNCTION_33	CALL_3
0x4001e94	          0x83f808	                              cmp eax, 8	        53	string3.h	FUNCTION_33	CALL_3
0x4001e97	     0xf828ffdffff	                            jb 0x4001c2c	        53	string3.h	FUNCTION_33	CALL_3
0x4001e9d	          0x83e0f8	                     and eax, 0xfffffff8	        53	string3.h	FUNCTION_33	CALL_3
0x4001ea0	            0x89c2	                            mov edx, eax	        53	string3.h	FUNCTION_33	CALL_3
0x4001ea2	            0x31c0	                            xor eax, eax	        53	string3.h	FUNCTION_33	CALL_3
0x4001ea4	            0x89c6	                            mov esi, eax	        53	string3.h	FUNCTION_33	CALL_3
0x4001ea6	          0x83c008	                              add eax, 8	        53	string3.h	FUNCTION_33	CALL_3
0x4001ea9	        0x498b3c36	              mov rdi, qword [r14 + rsi]	        53	string3.h	FUNCTION_33	CALL_3
0x4001ead	            0x39d0	                            cmp eax, edx	        53	string3.h	FUNCTION_33	CALL_3
0x4001eaf	        0x48893c31	              mov qword [rcx + rsi], rdi	        53	string3.h	FUNCTION_33	CALL_3
0x4001eb3	            0x72ef	                            jb 0x4001ea4	        53	string3.h	FUNCTION_33	CALL_3
0x4001eb5	      0xe972fdffff	                           jmp 0x4001c2c	        53	string3.h	FUNCTION_33	CALL_3
0x4001eba	          0x83f81f	                           cmp eax, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4001ebd	     0xf8f59010000	                            jg 0x400201c	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4001ec3	          0x4c63f0	                         movsxd r14, eax	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4001ec6	    0x41bd20000000	                          mov r13d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4001ecc	          0x4c89ef	                            mov rdi, r13	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001ecf	      0xe800000000	                          call 0x4001ed4	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001ed4	          0x4901c5	                            add r13, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001ed7	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001edb	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001ee0	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001ee5	          0x4889c7	                            mov rdi, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001ee8	      0xe92efaffff	                           jmp 0x400191b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001eed	          0x83f81f	                           cmp eax, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4001ef0	     0xf8f31010000	                            jg 0x4002027	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4001ef6	          0x4c63f8	                         movsxd r15, eax	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4001ef9	    0x41be20000000	                          mov r14d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4001eff	          0x4c89f7	                            mov rdi, r14	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f02	      0xe800000000	                          call 0x4001f07	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f07	          0x4901c6	                            add r14, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f0a	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f0e	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f13	      0x4d89742410	             mov qword [r12 + 0x10], r14	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f18	          0x4889c7	                            mov rdi, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f1b	      0xe9c9fdffff	                           jmp 0x4001ce9	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f20	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f25	      0xe800000000	                          call 0x4001f2a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f2a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f2e	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f32	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f37	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f3c	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f3f	      0xe964feffff	                           jmp 0x4001da8	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f44	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f49	      0xe800000000	                          call 0x4001f4e	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f4e	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f52	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f56	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f5b	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f60	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f63	      0xe998fbffff	                           jmp 0x4001b00	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f68	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f6d	      0xe800000000	                          call 0x4001f72	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f72	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f76	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f7a	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f7f	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f84	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f87	      0xe9bcfdffff	                           jmp 0x4001d48	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f8c	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f91	      0xe800000000	                          call 0x4001f96	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f96	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001f9a	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001f9e	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001fa3	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001fa8	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001fab	      0xe9f4faffff	                           jmp 0x4001aa4	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001fb0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001fb5	      0xe800000000	                          call 0x4001fba	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001fba	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001fbe	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001fc2	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001fc7	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001fcc	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001fcf	      0xe970faffff	                           jmp 0x4001a44	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001fd4	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001fd9	      0xe800000000	                          call 0x4001fde	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001fde	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001fe2	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001fe6	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001feb	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001ff0	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001ff3	      0xe9e5f9ffff	                           jmp 0x40019dd	        69	d-demangle.c	FUNCTION_1	IF_1
0x4001ff8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4001ffd	      0xe800000000	                          call 0x4002002	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002002	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002006	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400200a	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400200f	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002014	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002017	      0xe9e7fbffff	                           jmp 0x4001c03	        69	d-demangle.c	FUNCTION_1	IF_1
0x400201c	          0x4c63e8	                         movsxd r13, eax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400201f	          0x4d89ee	                            mov r14, r13	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002022	      0xe9a5feffff	                           jmp 0x4001ecc	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002027	          0x4c63f0	                         movsxd r14, eax	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400202a	          0x4d89f7	                            mov r15, r14	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400202d	      0xe9cdfeffff	                           jmp 0x4001eff	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002032	          0x418b0e	                    mov ecx, dword [r14]	        53	string3.h	FUNCTION_33	CALL_3
0x4002035	            0x890a	                    mov dword [rdx], ecx	        53	string3.h	FUNCTION_33	CALL_3
0x4002037	      0x418b4c06fc	          mov ecx, dword [r14 + rax - 4]	        53	string3.h	FUNCTION_33	CALL_3
0x400203c	        0x894c02fc	          mov dword [rdx + rax - 4], ecx	        53	string3.h	FUNCTION_33	CALL_3
0x4002040	      0xe9e7fbffff	                           jmp 0x4001c2c	        53	string3.h	FUNCTION_33	CALL_3
0x4002045	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400204a	      0xe800000000	                          call 0x400204f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400204f	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002053	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002057	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400205c	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002061	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002064	      0xe9eefdffff	                           jmp 0x4001e57	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002069	    0x410fb74c06fe	         movzx ecx, word [r14 + rax - 2]	        53	string3.h	FUNCTION_33	CALL_3
0x400206f	      0x66894c02fe	            mov word [rdx + rax - 2], cx	        53	string3.h	FUNCTION_33	CALL_3
0x4002074	      0xe9b3fbffff	                           jmp 0x4001c2c	        53	string3.h	FUNCTION_33	CALL_3
0x4002079	      0xe800000000	                          call 0x400207e	      1043	d-demangle.c	FUNCTION_20
dlang_parse_string	functions,0:ELSE,1:FOR,0:WHILE,1:IF,4:CALL,15:DO,0:SWITCH,1	533
0x40007d0	            0x4157	                                push r15	      1118	d-demangle.c	FUNCTION_22
0x40007d2	            0x4156	                                push r14	      1118	d-demangle.c	FUNCTION_22
0x40007d4	            0x4155	                                push r13	      1118	d-demangle.c	FUNCTION_22
0x40007d6	            0x4154	                                push r12	      1118	d-demangle.c	FUNCTION_22
0x40007d8	          0x4989f4	                            mov r12, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40007db	              0x55	                                push rbp	      1118	d-demangle.c	FUNCTION_22
0x40007dc	              0x53	                                push rbx	      1118	d-demangle.c	FUNCTION_22
0x40007dd	        0x4883ec18	                           sub rsp, 0x18	      1118	d-demangle.c	FUNCTION_22
0x40007e1	        0x4983c401	                              add r12, 1	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40007e5	     0xf8411020000	                            je 0x40009fc	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40007eb	         0xfbe4601	               movsx eax, byte [rsi + 1]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40007ef	           0xfb6d0	                           movzx edx, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40007f2	    0xf68412000000	                test byte [rdx + rdx], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40007fa	     0xf84fc010000	                            je 0x40009fc	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000800	            0x31ed	                            xor ebp, ebp	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000802	    0x660f1f440000	                    nop word [rax + rax]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4000808	      0x488d54ad00	                  lea rdx, [rbp + rbp*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x400080d	          0x83e830	                           sub eax, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4000810	        0x4983c401	                              add r12, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x4000814	            0x4898	                                    cdqe	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4000816	        0x488d2c50	                  lea rbp, [rax + rdx*2]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x400081a	      0x410fbe0424	                   movsx eax, byte [r12]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x400081f	           0xfb6c8	                           movzx ecx, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4000822	            0x89c2	                            mov edx, eax	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4000824	    0xf68409000000	                test byte [rcx + rcx], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x400082c	            0x75da	                           jne 0x4000808	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x400082e	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000830	     0xf84c6010000	                            je 0x40009fc	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000836	          0x4889e8	                            mov rax, rbp	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000839	        0x48c1e83f	                           shr rax, 0x3f	       220	d-demangle.c	FUNCTION_10	IF_3
0x400083d	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x400083f	     0xf85b7010000	                           jne 0x40009fc	       220	d-demangle.c	FUNCTION_10	IF_3
0x4000845	          0x80fa5f	                            cmp dl, 0x5f	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000848	     0xf85ae010000	                           jne 0x40009fc	      1124	d-demangle.c	FUNCTION_22	IF_1
0x400084e	          0x4889fb	                            mov rbx, rdi	      1124	d-demangle.c	FUNCTION_22	IF_1
0x4000851	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000854	        0x440fb62e	                  movzx r13d, byte [rsi]	      1119	d-demangle.c	FUNCTION_22
0x4000858	      0x4d8d742401	                      lea r14, [r12 + 1]	      1127	d-demangle.c	FUNCTION_22
0x400085d	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000860	     0xf84a9050000	                            je 0x4000e0f	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000866	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400086a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400086e	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000871	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000874	            0x7f31	                            jg 0x40008a7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000876	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000879	        0x8d4c1202	                lea ecx, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400087d	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000880	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000883	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000886	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400088a	      0xe800000000	                          call 0x400088f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400088f	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000893	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000896	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000899	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400089c	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40008a0	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40008a3	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40008a7	          0xc60222	                    mov byte [rdx], 0x22	        53	string3.h	FUNCTION_33	CALL_3
0x40008aa	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40008af	          0x4885ed	                           test rbp, rbp	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x40008b2	     0xf84c0010000	                            je 0x4000a78	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x40008b8	          0x4d85f6	                           test r14, r14	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008bb	     0xf843b010000	                            je 0x40009fc	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008c1	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008c7	     0xfb78c000000	             movzx ecx, word [rax + rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008cf	          0x4889c7	                            mov rdi, rax	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008d2	          0xf6c501	                              test ch, 1	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008d5	     0xf8421010000	                            je 0x40009fc	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008db	    0x410fb6542402	               movzx edx, byte [r12 + 2]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008e1	        0x4883ed01	                              sub rbp, 1	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008e5	          0x4531e4	                          xor r12d, r12d	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008e8	     0xfb7b4120000	             movzx esi, word [rdx + rdx]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008f0	          0x4889d0	                            mov rax, rdx	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008f3	      0x66f7c60001	                          test si, 0x100	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008f8	     0xf84fe000000	                            je 0x40009fc	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40008fe	            0x6690	                                     nop	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x4000900	          0xf6c104	                              test cl, 4	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000903	          0x8d57d0	                   lea edx, [rdi - 0x30]	       241	d-demangle.c	FUNCTION_11	ELSE_1
0x4000906	            0x7515	                           jne 0x400091d	       238	d-demangle.c	FUNCTION_11	IF_2	CALL_3
0x4000908	      0x6681e18000	                            and cx, 0x80	       239	d-demangle.c	FUNCTION_11	CALL_4
0x400090d	        0x6683f901	                               cmp cx, 1	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000911	            0x19d2	                            sbb edx, edx	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000913	          0x83e220	                           and edx, 0x20	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000916	            0x29d7	                            sub edi, edx	       239	d-demangle.c	FUNCTION_11	CALL_4
0x4000918	            0x89fa	                            mov edx, edi	       239	d-demangle.c	FUNCTION_11	CALL_4
0x400091a	          0x83ea37	                           sub edx, 0x37	       239	d-demangle.c	FUNCTION_11	CALL_4
0x400091d	          0xc1e204	                              shl edx, 4	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000920	        0x40f6c604	                             test sil, 4	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x4000924	     0xf85e6030000	                           jne 0x4000d10	       244	d-demangle.c	FUNCTION_11	IF_3	CALL_5
0x400092a	      0x6681e68000	                            and si, 0x80	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400092f	        0x6683fe01	                               cmp si, 1	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000933	            0x19c9	                            sbb ecx, ecx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000935	          0x83e120	                           and ecx, 0x20	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000938	            0x29c8	                            sub eax, ecx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400093a	        0x448d78c9	                  lea r15d, [rax - 0x37]	       245	d-demangle.c	FUNCTION_11	CALL_6
0x400093e	          0x4109d7	                            or r15d, edx	       245	d-demangle.c	FUNCTION_11	CALL_6
0x4000941	        0x4983c602	                              add r14, 2	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4000945	     0xf84b1000000	                            je 0x40009fc	      1134	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x400094b	        0x418d57f7	                      lea edx, [r15 - 9]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x400094f	          0x80fa17	                            cmp dl, 0x17	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000952	     0xf8748030000	                            ja 0x4000ca0	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000958	           0xfb6d2	                           movzx edx, dl	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x400095b	    0xff24d5000000	                       jmp qword [rdx*8]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000962	    0x660f1f440000	                    nop word [rax + rax]	      1138	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1
0x4000968	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400096b	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400096e	     0xf8484050000	                            je 0x4000ef8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000974	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000978	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400097c	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400097f	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000982	            0x7f31	                            jg 0x40009b5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000984	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000987	        0x8d4c1202	                lea ecx, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400098b	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400098e	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000991	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000994	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000998	      0xe800000000	                          call 0x400099d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400099d	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40009a1	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40009a4	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40009a7	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40009aa	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40009ae	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40009b1	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40009b5	          0xc60220	                    mov byte [rdx], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x40009b8	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40009bd	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40009c0	          0x4c39e5	                            cmp rbp, r12	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x40009c3	     0xf84af000000	                            je 0x4000a78	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x40009c9	        0x410fb606	                   movzx eax, byte [r14]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009cd	     0xfb78c000000	             movzx ecx, word [rax + rax]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009d5	          0x4889c7	                            mov rdi, rax	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009d8	          0xf6c501	                              test ch, 1	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009db	            0x741f	                            je 0x40009fc	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009dd	      0x410fb67601	               movzx esi, byte [r14 + 1]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009e2	        0x4983c401	                              add r12, 1	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009e6	          0x4889f0	                            mov rax, rsi	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009e9	     0xfb7b4360000	             movzx esi, word [rsi + rsi]	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009f1	      0x66f7c60001	                          test si, 0x100	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009f6	     0xf8504ffffff	                           jne 0x4000900	       234	d-demangle.c	FUNCTION_11	IF_1	CALL_2
0x40009fc	            0x31c0	                            xor eax, eax	      1135	d-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x40009fe	        0x4883c418	                           add rsp, 0x18	      1177	d-demangle.c	FUNCTION_22
0x4000a02	              0x5b	                                 pop rbx	      1177	d-demangle.c	FUNCTION_22
0x4000a03	              0x5d	                                 pop rbp	      1177	d-demangle.c	FUNCTION_22
0x4000a04	            0x415c	                                 pop r12	      1177	d-demangle.c	FUNCTION_22
0x4000a06	            0x415d	                                 pop r13	      1177	d-demangle.c	FUNCTION_22
0x4000a08	            0x415e	                                 pop r14	      1177	d-demangle.c	FUNCTION_22
0x4000a0a	            0x415f	                                 pop r15	      1177	d-demangle.c	FUNCTION_22
0x4000a0c	              0xc3	                                     ret	      1177	d-demangle.c	FUNCTION_22
0x4000a0d	           0xf1f00	                         nop dword [rax]	      1177	d-demangle.c	FUNCTION_22
0x4000a10	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000a13	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000a16	     0xf84b4040000	                            je 0x4000ed0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000a1c	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a20	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a24	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a27	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a2b	            0x7f31	                            jg 0x4000a5e	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a2d	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a30	        0x8d4c1204	                lea ecx, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000a34	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a37	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000a3a	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000a3d	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000a41	      0xe800000000	                          call 0x4000a46	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000a46	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a4a	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a4d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000a50	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a53	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a57	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a5a	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a5e	      0xbf5c720000	                         mov edi, 0x725c	        53	string3.h	FUNCTION_33	CALL_3
0x4000a63	          0x66893a	                      mov word [rdx], di	        53	string3.h	FUNCTION_33	CALL_3
0x4000a66	      0x4883430802	                  add qword [rbx + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4000a6b	          0x4c39e5	                            cmp rbp, r12	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000a6e	     0xf8555ffffff	                           jne 0x40009c9	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000a74	         0xf1f4000	                         nop dword [rax]	      1129	d-demangle.c	FUNCTION_22	WHILE_1
0x4000a78	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000a7b	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000a7e	     0xf84f8040000	                            je 0x4000f7c	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000a84	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a88	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a8c	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a8f	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a92	     0xf8e48030000	                           jle 0x4000de0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000a98	          0xc60222	                    mov byte [rdx], 0x22	        53	string3.h	FUNCTION_33	CALL_3
0x4000a9b	        0x488b4308	                mov rax, qword [rbx + 8]	       123	d-demangle.c	FUNCTION_6
0x4000a9f	        0x4180fd61	                          cmp r13b, 0x61	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000aa3	        0x488d5001	                      lea rdx, [rax + 1]	       123	d-demangle.c	FUNCTION_6
0x4000aa7	          0x4c89f0	                            mov rax, r14	       123	d-demangle.c	FUNCTION_6
0x4000aaa	        0x48895308	                mov qword [rbx + 8], rdx	       123	d-demangle.c	FUNCTION_6
0x4000aae	     0xf844affffff	                            je 0x40009fe	      1173	d-demangle.c	FUNCTION_22	IF_4
0x4000ab4	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000ab7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000aba	     0xf84dd040000	                            je 0x4000f9d	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000ac0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000ac4	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000ac7	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000aca	            0x7f2a	                            jg 0x4000af6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000acc	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000acf	      0x448d641202	               lea r12d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000ad4	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000ad7	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000ada	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000add	      0xe800000000	                          call 0x4000ae2	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000ae2	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000ae5	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000ae8	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000aeb	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000aee	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000af2	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000af6	          0x44882a	                    mov byte [rdx], r13b	        53	string3.h	FUNCTION_33	CALL_3
0x4000af9	      0x4883430801	                  add qword [rbx + 8], 1	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000afe	        0x4883c418	                           add rsp, 0x18	      1177	d-demangle.c	FUNCTION_22
0x4000b02	              0x5b	                                 pop rbx	      1177	d-demangle.c	FUNCTION_22
0x4000b03	          0x4c89f0	                            mov rax, r14	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000b06	              0x5d	                                 pop rbp	      1177	d-demangle.c	FUNCTION_22
0x4000b07	            0x415c	                                 pop r12	      1177	d-demangle.c	FUNCTION_22
0x4000b09	            0x415d	                                 pop r13	      1177	d-demangle.c	FUNCTION_22
0x4000b0b	            0x415e	                                 pop r14	      1177	d-demangle.c	FUNCTION_22
0x4000b0d	            0x415f	                                 pop r15	      1177	d-demangle.c	FUNCTION_22
0x4000b0f	              0xc3	                                     ret	      1177	d-demangle.c	FUNCTION_22
0x4000b10	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000b13	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000b16	     0xf848c030000	                            je 0x4000ea8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000b1c	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b20	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b24	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b27	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b2b	            0x7f31	                            jg 0x4000b5e	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b2d	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b30	        0x8d4c1204	                lea ecx, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b34	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b37	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b3a	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b3d	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b41	      0xe800000000	                          call 0x4000b46	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b46	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b4a	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b4d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b50	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b53	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b57	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b5a	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b5e	      0xbe5c660000	                         mov esi, 0x665c	        53	string3.h	FUNCTION_33	CALL_3
0x4000b63	          0x668932	                      mov word [rdx], si	        53	string3.h	FUNCTION_33	CALL_3
0x4000b66	      0x4883430802	                  add qword [rbx + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4000b6b	      0xe950feffff	                           jmp 0x40009c0	       123	d-demangle.c	FUNCTION_6
0x4000b70	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000b73	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000b76	     0xf8404030000	                            je 0x4000e80	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000b7c	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b80	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b84	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b87	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b8b	            0x7f31	                            jg 0x4000bbe	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b8d	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b90	        0x8d4c1204	                lea ecx, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b94	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000b97	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b9a	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000b9d	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000ba1	      0xe800000000	                          call 0x4000ba6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000ba6	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000baa	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000bad	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000bb0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000bb3	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000bb7	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000bba	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000bbe	      0xb95c760000	                         mov ecx, 0x765c	        53	string3.h	FUNCTION_33	CALL_3
0x4000bc3	          0x66890a	                      mov word [rdx], cx	        53	string3.h	FUNCTION_33	CALL_3
0x4000bc6	      0x4883430802	                  add qword [rbx + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4000bcb	      0xe9f0fdffff	                           jmp 0x40009c0	       123	d-demangle.c	FUNCTION_6
0x4000bd0	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000bd3	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000bd6	     0xf847c020000	                            je 0x4000e58	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000bdc	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000be0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000be4	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000be7	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000beb	            0x7f31	                            jg 0x4000c1e	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000bed	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000bf0	        0x8d4c1204	                lea ecx, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000bf4	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000bf7	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000bfa	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000bfd	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c01	      0xe800000000	                          call 0x4000c06	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c06	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c0a	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c0d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c10	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c13	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c17	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c1a	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c1e	    0x41b85c6e0000	                         mov r8d, 0x6e5c	        53	string3.h	FUNCTION_33	CALL_3
0x4000c24	        0x66448902	                     mov word [rdx], r8w	        53	string3.h	FUNCTION_33	CALL_3
0x4000c28	      0x4883430802	                  add qword [rbx + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4000c2d	      0xe98efdffff	                           jmp 0x40009c0	       123	d-demangle.c	FUNCTION_6
0x4000c32	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4000c38	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000c3b	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000c3e	     0xf84ec010000	                            je 0x4000e30	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000c44	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c48	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c4c	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c4f	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c53	            0x7f31	                            jg 0x4000c86	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c55	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c58	        0x8d4c1204	                lea ecx, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c5c	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c5f	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c62	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c65	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c69	      0xe800000000	                          call 0x4000c6e	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c6e	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c72	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c75	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000c78	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c7b	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c7f	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c82	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000c86	    0x41b95c740000	                         mov r9d, 0x745c	        53	string3.h	FUNCTION_33	CALL_3
0x4000c8c	        0x6644890a	                     mov word [rdx], r9w	        53	string3.h	FUNCTION_33	CALL_3
0x4000c90	      0x4883430802	                  add qword [rbx + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4000c95	      0xe926fdffff	                           jmp 0x40009c0	       123	d-demangle.c	FUNCTION_6
0x4000c9a	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4000ca0	        0x410fb6c7	                         movzx eax, r15b	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000ca4	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000ca7	    0xf68400000000	            test byte [rax + rax], 0x10 	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000caf	            0x746f	                            je 0x4000d20	      1160	d-demangle.c	FUNCTION_22	WHILE_1	SWITCH_1	IF_3	CALL_10
0x4000cb1	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000cb4	     0xf84a1020000	                            je 0x4000f5b	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000cba	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cbe	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cc2	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cc5	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cc8	            0x7f38	                            jg 0x4000d02	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cca	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000ccd	        0x8d4c1202	                lea ecx, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000cd1	      0x4889542408	                mov qword [rsp + 8], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000cd6	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000cd9	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000cdc	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000ce0	      0xe800000000	                          call 0x4000ce5	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000ce5	      0x488b542408	                mov rdx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cea	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cee	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000cf1	          0x4863d2	                         movsxd rdx, edx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cf4	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cf7	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cfa	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000cfe	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d02	          0x44883a	                    mov byte [rdx], r15b	        53	string3.h	FUNCTION_33	CALL_3
0x4000d05	      0x4883430801	                  add qword [rbx + 8], 1	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000d0a	      0xe9b1fcffff	                           jmp 0x40009c0	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000d0f	              0x90	                                     nop	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000d10	        0x448d78d0	                  lea r15d, [rax - 0x30]	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000d14	          0x4109d7	                            or r15d, edx	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000d17	      0xe925fcffff	                           jmp 0x4000941	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000d1c	         0xf1f4000	                         nop dword [rax]	       247	d-demangle.c	FUNCTION_11	ELSE_2
0x4000d20	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000d23	     0xf8411020000	                            je 0x4000f3a	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000d29	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d2d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d31	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d34	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d38	            0x7f31	                            jg 0x4000d6b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d3a	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d3d	        0x8d4c1204	                lea ecx, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000d41	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d44	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000d47	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000d4a	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000d4e	      0xe800000000	                          call 0x4000d53	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000d53	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d57	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d5a	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000d5d	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d60	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d64	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d67	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d6b	      0xb85c780000	                         mov eax, 0x785c	        53	string3.h	FUNCTION_33	CALL_3
0x4000d70	          0x668902	                      mov word [rdx], ax	        53	string3.h	FUNCTION_33	CALL_3
0x4000d73	        0x488b4308	                mov rax, qword [rbx + 8]	       123	d-demangle.c	FUNCTION_6
0x4000d77	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000d7a	        0x488d5002	                      lea rdx, [rax + 2]	       123	d-demangle.c	FUNCTION_6
0x4000d7e	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000d81	        0x48895308	                mov qword [rbx + 8], rdx	       123	d-demangle.c	FUNCTION_6
0x4000d85	     0xf848e010000	                            je 0x4000f19	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000d8b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d8f	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d92	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d96	            0x7f31	                            jg 0x4000dc9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d98	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000d9b	        0x8d4c1204	                lea ecx, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000d9f	          0x4989d7	                            mov r15, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000da2	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000da5	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000da8	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000dac	      0xe800000000	                          call 0x4000db1	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000db1	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000db5	          0x4963d7	                        movsxd rdx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000db8	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000dbb	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000dbe	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000dc2	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000dc5	        0x48894b10	             mov qword [rbx + 0x10], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000dc9	      0x410fb746fe	               movzx eax, word [r14 - 2]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000dce	          0x668902	                      mov word [rdx], ax	        53	string3.h	FUNCTION_33	CALL_3
0x4000dd1	      0x4883430802	                  add qword [rbx + 8], 2	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000dd6	      0xe9e5fbffff	                           jmp 0x40009c0	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000ddb	       0xf1f440000	                   nop dword [rax + rax]	       133	d-demangle.c	FUNCTION_7	IF_1
0x4000de0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000de3	      0x448d641202	               lea r12d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000de8	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000deb	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000dee	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000df1	      0xe800000000	                          call 0x4000df6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000df6	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000df9	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000dfc	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000dff	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000e02	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000e06	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000e0a	      0xe989fcffff	                           jmp 0x4000a98	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000e0f	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e14	      0xe800000000	                          call 0x4000e19	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e19	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e1d	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e20	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e24	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e28	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e2b	      0xe977faffff	                           jmp 0x40008a7	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e30	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e35	      0xe800000000	                          call 0x4000e3a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e3a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e3e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e41	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e45	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e49	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e4c	      0xe935feffff	                           jmp 0x4000c86	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e51	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e58	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e5d	      0xe800000000	                          call 0x4000e62	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e62	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e66	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e69	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e6d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e71	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e74	      0xe9a5fdffff	                           jmp 0x4000c1e	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e79	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e80	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e85	      0xe800000000	                          call 0x4000e8a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e8a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e8e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e91	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000e95	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e99	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000e9c	      0xe91dfdffff	                           jmp 0x4000bbe	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ea1	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ea8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000ead	      0xe800000000	                          call 0x4000eb2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000eb2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000eb6	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000eb9	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000ebd	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ec1	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ec4	      0xe995fcffff	                           jmp 0x4000b5e	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ec9	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ed0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000ed5	      0xe800000000	                          call 0x4000eda	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000eda	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ede	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000ee1	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000ee5	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ee9	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000eec	      0xe96dfbffff	                           jmp 0x4000a5e	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ef1	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000ef8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000efd	      0xe800000000	                          call 0x4000f02	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f02	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f06	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f09	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f0d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f11	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f14	      0xe99cfaffff	                           jmp 0x40009b5	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f19	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f1e	      0xe800000000	                          call 0x4000f23	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f23	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f27	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f2a	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f2e	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f32	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f35	      0xe98ffeffff	                           jmp 0x4000dc9	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f3a	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f3f	      0xe800000000	                          call 0x4000f44	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f44	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f48	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f4b	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f4f	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f53	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f56	      0xe910feffff	                           jmp 0x4000d6b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f5b	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f60	      0xe800000000	                          call 0x4000f65	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f65	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f69	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f6c	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f70	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f74	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f77	      0xe986fdffff	                           jmp 0x4000d02	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f7c	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f81	      0xe800000000	                          call 0x4000f86	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f86	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f8a	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f8d	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000f91	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f95	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f98	      0xe9fbfaffff	                           jmp 0x4000a98	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000f9d	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000fa2	      0xe800000000	                          call 0x4000fa7	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000fa7	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000fab	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000fae	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000fb2	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000fb6	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000fb9	      0xe938fbffff	                           jmp 0x4000af6	        69	d-demangle.c	FUNCTION_1	IF_1
dlang_identifier	functions,0:ELSE,5:FOR,1:WHILE,0:IF,16:CALL,36:DO,0:SWITCH,1	584
0x4005fa0	            0x4157	                                push r15	       786	d-demangle.c	FUNCTION_19
0x4005fa2	            0x4156	                                push r14	       786	d-demangle.c	FUNCTION_19
0x4005fa4	            0x4155	                                push r13	       786	d-demangle.c	FUNCTION_19
0x4005fa6	            0x4154	                                push r12	       786	d-demangle.c	FUNCTION_19
0x4005fa8	              0x55	                                push rbp	       786	d-demangle.c	FUNCTION_19
0x4005fa9	              0x53	                                push rbx	       786	d-demangle.c	FUNCTION_19
0x4005faa	        0x4883ec38	                           sub rsp, 0x38	       786	d-demangle.c	FUNCTION_19
0x4005fae	    0x64488b042528	                mov rax, qword fs:[0x28]	       786	d-demangle.c	FUNCTION_19
0x4005fb7	      0x4889442428	             mov qword [rsp + 0x28], rax	       786	d-demangle.c	FUNCTION_19
0x4005fbc	            0x31c0	                            xor eax, eax	       786	d-demangle.c	FUNCTION_19
0x4005fbe	          0x4885f6	                           test rsi, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fc1	     0xf8439010000	                            je 0x4006100	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fc7	           0xfbe06	                   movsx eax, byte [rsi]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fca	          0x4889f3	                            mov rbx, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fcd	           0xfb6c8	                           movzx ecx, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fd0	    0xf68409000000	                test byte [rcx + rcx], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fd8	     0xf8422010000	                            je 0x4006100	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fde	          0x4989fd	                            mov r13, rdi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fe1	            0x31ed	                            xor ebp, ebp	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fe3	       0xf1f440000	                   nop dword [rax + rax]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4005fe8	      0x488d4cad00	                  lea rcx, [rbp + rbp*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4005fed	          0x83e830	                           sub eax, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4005ff0	        0x4883c301	                              add rbx, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x4005ff4	            0x4898	                                    cdqe	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4005ff6	        0x488d2c48	                  lea rbp, [rax + rcx*2]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4005ffa	           0xfbe03	                   movsx eax, byte [rbx]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4005ffd	           0xfb6c8	                           movzx ecx, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4006000	          0x4189c4	                           mov r12d, eax	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4006003	     0xfb78c090000	             movzx ecx, word [rcx + rcx]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x400600b	          0xf6c104	                              test cl, 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x400600e	            0x75d8	                           jne 0x4005fe8	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4006010	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x4006012	     0xf84e8000000	                            je 0x4006100	       220	d-demangle.c	FUNCTION_10	IF_3
0x4006018	          0x4885ed	                           test rbp, rbp	       790	d-demangle.c	FUNCTION_19	IF_1
0x400601b	     0xf8edf000000	                           jle 0x4006100	       790	d-demangle.c	FUNCTION_19	IF_1
0x4006021	          0x83fa04	                              cmp edx, 4	       796	d-demangle.c	FUNCTION_19	IF_2
0x4006024	     0xf84fe000000	                            je 0x4006128	       796	d-demangle.c	FUNCTION_19	IF_2
0x400602a	          0x4889df	                            mov rdi, rbx	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x400602d	      0xe800000000	                          call 0x4006032	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4006032	          0x4839e8	                            cmp rax, rbp	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x4006035	     0xf82c5000000	                            jb 0x4006100	       837	d-demangle.c	FUNCTION_19	ELSE_2	IF_7	CALL_8
0x400603b	        0x4883fd04	                              cmp rbp, 4	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400603f	            0x7f1f	                            jg 0x4006060	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4006041	        0x488d45fa	                      lea rax, [rbp - 6]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4006045	        0x4883f806	                              cmp rax, 6	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4006049	     0xf8781030000	                            ja 0x40063d0	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x400604f	    0xff24c5000000	                       jmp qword [rax*8]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4006056	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       847	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1
0x4006060	        0x4180fc5f	                          cmp r12b, 0x5f	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4006064	            0x75db	                           jne 0x4006041	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4006066	        0x807b015f	                cmp byte [rbx + 1], 0x5f	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400606a	            0x75d5	                           jne 0x4006041	       843	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x400606c	         0xfb64302	               movzx eax, byte [rbx + 2]	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4006070	          0x83e854	                           sub eax, 0x54	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4006073	            0x3c01	                               cmp al, 1	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4006075	            0x77ca	                            ja 0x4006041	       844	d-demangle.c	FUNCTION_19	ELSE_2	IF_8
0x4006077	         0xfb65303	               movzx edx, byte [rbx + 3]	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400607b	    0xf68412000000	                test byte [rdx + rdx], 4	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4006083	            0x747b	                            je 0x4006100	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4006085	          0x80fa30	                            cmp dl, 0x30	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4006088	            0x7476	                            je 0x4006100	      1590	d-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400608a	        0x488d7303	                      lea rsi, [rbx + 3]	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x400608e	      0xba03000000	                              mov edx, 3	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4006093	          0x4c89ef	                            mov rdi, r13	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x4006096	      0xe805ffffff	               call sym.dlang_identifier	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x400609b	      0xbe00000000	                              mov esi, 0	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x40060a0	          0x4989c4	                            mov r12, rax	      1596	d-demangle.c	FUNCTION_31	CALL_2
0x40060a3	          0x4c89ef	                            mov rdi, r13	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x40060a6	      0xe8959fffff	                  call sym.string_append	      1599	d-demangle.c	FUNCTION_31	CALL_3
0x40060ab	          0x4d85e4	                           test r12, r12	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40060ae	            0x7441	                            je 0x40060f1	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40060b0	      0x410fb60424	                   movzx eax, byte [r12]	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40060b5	            0x84c0	                             test al, al	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40060b7	     0xf84ed050000	                            je 0x40066aa	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40060bd	          0x4531ff	                          xor r15d, r15d	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40060c0	            0x3c5a	                            cmp al, 0x5a	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x40060c2	     0xf842e060000	                            je 0x40066f6	      1517	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x40060c8	          0x4d85ff	                           test r15, r15	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x40060cb	     0xf8544060000	                           jne 0x4006715	      1524	d-demangle.c	FUNCTION_30	WHILE_1	IF_1
0x40060d1	            0x3c48	                            cmp al, 0x48	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x40060d3	     0xf840e060000	                            je 0x40066e7	      1528	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x40060d9	            0x3c54	                            cmp al, 0x54	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40060db	     0xf849f050000	                            je 0x4006680	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40060e1	            0x3c56	                            cmp al, 0x56	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40060e3	     0xf8412050000	                            je 0x40065fb	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40060e9	            0x3c53	                            cmp al, 0x53	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40060eb	     0xf84df050000	                            je 0x40066d0	      1531	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40060f1	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40060f6	          0x4c89ef	                            mov rdi, r13	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40060f9	      0xe8429fffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40060fe	            0x6690	                                     nop	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4006100	            0x31c0	                            xor eax, eax	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4006102	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       931	d-demangle.c	FUNCTION_19
0x4006107	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       931	d-demangle.c	FUNCTION_19
0x4006110	     0xf8516060000	                           jne 0x400672c	       931	d-demangle.c	FUNCTION_19
0x4006116	        0x4883c438	                           add rsp, 0x38	       931	d-demangle.c	FUNCTION_19
0x400611a	              0x5b	                                 pop rbx	       931	d-demangle.c	FUNCTION_19
0x400611b	              0x5d	                                 pop rbp	       931	d-demangle.c	FUNCTION_19
0x400611c	            0x415c	                                 pop r12	       931	d-demangle.c	FUNCTION_19
0x400611e	            0x415d	                                 pop r13	       931	d-demangle.c	FUNCTION_19
0x4006120	            0x415e	                                 pop r14	       931	d-demangle.c	FUNCTION_19
0x4006122	            0x415f	                                 pop r15	       931	d-demangle.c	FUNCTION_19
0x4006124	              0xc3	                                     ret	       931	d-demangle.c	FUNCTION_19
0x4006125	           0xf1f00	                         nop dword [rax]	       931	d-demangle.c	FUNCTION_19
0x4006128	        0x498b4508	                mov rax, qword [r13 + 8]	       931	d-demangle.c	FUNCTION_19
0x400612c	        0x498b5500	                    mov rdx, qword [r13]	       931	d-demangle.c	FUNCTION_19
0x4006130	          0x4989ee	                            mov r14, rbp	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4006133	          0x4989df	                            mov r15, rbx	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4006136	          0x4189c4	                           mov r12d, eax	       105	d-demangle.c	FUNCTION_4
0x4006139	          0x4129d4	                           sub r12d, edx	       105	d-demangle.c	FUNCTION_4
0x400613c	          0x4839c2	                            cmp rdx, rax	       105	d-demangle.c	FUNCTION_4
0x400613f	      0xb800000000	                              mov eax, 0	       105	d-demangle.c	FUNCTION_4
0x4006144	        0x410f45c4	                        cmovne eax, r12d	       105	d-demangle.c	FUNCTION_4
0x4006148	          0x890424	                    mov dword [rsp], eax	       105	d-demangle.c	FUNCTION_4
0x400614b	            0x4898	                                    cdqe	       113	d-demangle.c	FUNCTION_5	IF_1
0x400614d	      0x4889442408	                mov qword [rsp + 8], rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006152	            0xeb7e	                           jmp 0x40061d2	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006154	         0xf1f4000	                         nop dword [rax]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006158	      0xbf00000000	                              mov edi, 0	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x400615d	      0xb902000000	                              mov ecx, 2	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x4006162	          0x4889de	                            mov rsi, rbx	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x4006165	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x4006167	     0xf84c3000000	                            je 0x4006230	       821	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5	CALL_5
0x400616d	          0x4889d8	                            mov rax, rbx	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4006170	          0x4c29e0	                            sub rax, r12	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4006173	          0x4939c6	                            cmp r14, rax	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4006176	     0xf849b000000	                            je 0x4006217	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400617c	    0x48b867666666	          movabs rax, 0x6666666666666667	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4006186	        0x498b4d08	                mov rcx, qword [r13 + 8]	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400618a	          0x4d89f0	                             mov r8, r14	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400618d	          0x49f7ee	                                imul r14	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4006190	        0x49c1f83f	                            sar r8, 0x3f	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4006194	        0x498b4500	                    mov rax, qword [r13]	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x4006198	        0x48c1fa02	                              sar rdx, 2	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400619c	          0x4c29c2	                             sub rdx, r8	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x400619f	          0x4989d6	                            mov r14, rdx	       828	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40061a2	            0x89ca	                            mov edx, ecx	       105	d-demangle.c	FUNCTION_4
0x40061a4	            0x29c2	                            sub edx, eax	       105	d-demangle.c	FUNCTION_4
0x40061a6	          0x4839c8	                            cmp rax, rcx	       105	d-demangle.c	FUNCTION_4
0x40061a9	      0xb900000000	                              mov ecx, 0	       105	d-demangle.c	FUNCTION_4
0x40061ae	           0xf44d1	                          cmove edx, ecx	       105	d-demangle.c	FUNCTION_4
0x40061b1	          0x391424	                    cmp dword [rsp], edx	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40061b4	            0x786a	                            js 0x4006220	       111	d-demangle.c	FUNCTION_5	IF_1	CALL_1
0x40061b6	          0x4d85ff	                           test r15, r15	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40061b9	      0x498d5c24ff	                      lea rbx, [r12 - 1]	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40061be	     0xf843cffffff	                            je 0x4006100	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40061c4	    0x410fb64424ff	               movzx eax, byte [r12 - 1]	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40061ca	     0xfb78c000000	             movzx ecx, word [rax + rax]	       803	d-demangle.c	FUNCTION_19	IF_2	FOR_1
0x40061d2	          0x4d85f6	                           test r14, r14	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40061d5	          0x4989dc	                            mov r12, rbx	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40061d8	            0x7509	                           jne 0x40061e3	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40061da	          0x4d89fc	                            mov r12, r15	       809	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40061dd	          0x4989ee	                            mov r14, rbp	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40061e0	          0x4531ff	                          xor r15d, r15d	       813	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_3
0x40061e3	          0x83e104	                              and ecx, 4	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40061e6	     0xf846cffffff	                            je 0x4006158	       818	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_3
0x40061ec	          0x4889de	                            mov rsi, rbx	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40061ef	      0xba03000000	                              mov edx, 3	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40061f4	          0x4c89ef	                            mov rdi, r13	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40061f7	      0xe8c4060000	          call sym.dlang_parse_qualified	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40061fc	          0x4889c3	                            mov rbx, rax	       819	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_4	CALL_4
0x40061ff	          0x4885db	                           test rbx, rbx	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4006202	     0xf8474ffffff	                            je 0x400617c	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4006208	          0x4889d8	                            mov rax, rbx	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400620b	          0x4c29e0	                            sub rax, r12	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400620e	          0x4939c6	                            cmp r14, rax	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4006211	     0xf8565ffffff	                           jne 0x400617c	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4006217	          0x4889d8	                            mov rax, rbx	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400621a	      0xe9e3feffff	                           jmp 0x4006102	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x400621f	              0x90	                                     nop	       825	d-demangle.c	FUNCTION_19	IF_2	FOR_1	IF_6
0x4006220	      0x4803442408	                add rax, qword [rsp + 8]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006225	        0x49894508	                mov qword [r13 + 8], rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006229	            0xeb8b	                           jmp 0x40061b6	       113	d-demangle.c	FUNCTION_5	IF_1
0x400622b	       0xf1f440000	                   nop dword [rax + rax]	       113	d-demangle.c	FUNCTION_5	IF_1
0x4006230	          0x4889de	                            mov rsi, rbx	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4006233	      0xba01000000	                              mov edx, 1	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4006238	          0x4c89ef	                            mov rdi, r13	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x400623b	      0xe870100000	             call sym.dlang_parse_mangle	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4006240	          0x4889c3	                            mov rbx, rax	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4006243	            0xebba	                           jmp 0x40061ff	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4006245	           0xf1f00	                         nop dword [rax]	       822	d-demangle.c	FUNCTION_19	IF_2	FOR_1	ELSE_1	IF_5
0x4006248	      0xbf00000000	                              mov edi, 0	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x400624d	      0xb90d000000	                            mov ecx, 0xd	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4006252	          0x4889de	                            mov rsi, rbx	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4006255	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x4006257	     0xf8420020000	                            je 0x400647d	       915	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16	CALL_32
0x400625d	            0x89e8	                            mov eax, ebp	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x400625f	        0x498b4d00	                    mov rcx, qword [r13]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006263	          0x4885c9	                           test rcx, rcx	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006266	     0xf84f4020000	                            je 0x4006560	        62	d-demangle.c	FUNCTION_1	IF_1
0x400626c	        0x498b7d08	                mov rdi, qword [r13 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006270	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006274	          0x4c63f0	                         movsxd r14, eax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006277	          0x4829fa	                            sub rdx, rdi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400627a	          0x4c39f2	                            cmp rdx, r14	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400627d	            0x7d30	                           jge 0x40062af	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400627f	          0x4829cf	                            sub rdi, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006282	        0x448d2438	                   lea r12d, [rax + rdi]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006286	          0x4989ff	                            mov r15, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006289	          0x4889cf	                            mov rdi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400628c	          0x4501e4	                          add r12d, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400628f	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006292	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006295	      0xe800000000	                          call 0x400629a	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400629a	          0x4963ff	                        movsxd rdi, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400629d	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40062a0	        0x49894500	                    mov qword [r13], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40062a4	          0x4801c7	                            add rdi, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40062a7	        0x4d896510	             mov qword [r13 + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40062ab	        0x49897d08	                mov qword [r13 + 8], rdi	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40062af	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_33	CALL_3
0x40062b2	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_33	CALL_3
0x40062b5	      0xe800000000	                          call 0x40062ba	        53	string3.h	FUNCTION_33	CALL_3
0x40062ba	        0x4d017508	                add qword [r13 + 8], r14	       133	d-demangle.c	FUNCTION_7	IF_1
0x40062be	      0xe917010000	                           jmp 0x40063da	       133	d-demangle.c	FUNCTION_7	IF_1
0x40062c3	       0xf1f440000	                   nop dword [rax + rax]	       133	d-demangle.c	FUNCTION_7	IF_1
0x40062c8	          0x4889de	                            mov rsi, rbx	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062cb	      0xbf00000000	                              mov edi, 0	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062d0	      0xb908000000	                              mov ecx, 8	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062d5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062d7	      0xbe00000000	                              mov esi, 0	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062dc	     0xf857bffffff	                           jne 0x400625d	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062e2	          0x4c89ef	                            mov rdi, r13	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062e5	      0xe8069effff	          call sym.string_prepend.part.4	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062ea	        0x498b4d00	                    mov rcx, qword [r13]	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062ee	        0x498b4508	                mov rax, qword [r13 + 8]	       883	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_13	CALL_22
0x40062f2	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       101	d-demangle.c	FUNCTION_4	IF_1
0x40062f9	          0x4839c1	                            cmp rcx, rax	       101	d-demangle.c	FUNCTION_4	IF_1
0x40062fc	            0x7409	                            je 0x4006307	       101	d-demangle.c	FUNCTION_4	IF_1
0x40062fe	          0x4829c8	                            sub rax, rcx	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006301	          0x83e801	                              sub eax, 1	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006304	          0x4863d0	                         movsxd rdx, eax	       101	d-demangle.c	FUNCTION_4	IF_1
0x4006307	        0x488d0411	                    lea rax, [rcx + rdx]	       113	d-demangle.c	FUNCTION_5	IF_1
0x400630b	        0x49894508	                mov qword [r13 + 8], rax	       113	d-demangle.c	FUNCTION_5	IF_1
0x400630f	        0x488d042b	                    lea rax, [rbx + rbp]	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4006313	      0xe9eafdffff	                           jmp 0x4006102	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4006318	     0xf1f84000000	                   nop dword [rax + rax]	       921	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_16
0x4006320	      0xbf00000000	                              mov edi, 0	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4006325	      0xb90d000000	                            mov ecx, 0xd	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400632a	          0x4889de	                            mov rsi, rbx	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400632d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x400632f	     0xf8528ffffff	                           jne 0x400625d	       894	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14	CALL_26
0x4006335	        0x498b7d00	                    mov rdi, qword [r13]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006339	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400633c	     0xf8475020000	                            je 0x40065b7	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006342	        0x498b5508	                mov rdx, qword [r13 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006346	        0x498b4510	            mov rax, qword [r13 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400634a	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400634d	        0x4883f809	                              cmp rax, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006351	            0x7f2b	                            jg 0x400637e	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006353	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006356	      0x448d741214	           lea r14d, [rdx + rdx + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400635b	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400635e	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006361	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006364	      0xe800000000	                          call 0x4006369	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006369	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400636c	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400636f	        0x49894500	                    mov qword [r13], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006373	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006376	        0x4d897510	             mov qword [r13 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400637a	        0x49895508	                mov qword [r13 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400637e	    0x48b874686973	          movabs rax, 0x6968742873696874	        53	string3.h	FUNCTION_33	CALL_3
0x4006388	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x400638b	      0xb873290000	                         mov eax, 0x2973	        53	string3.h	FUNCTION_33	CALL_3
0x4006390	        0x66894208	                  mov word [rdx + 8], ax	        53	string3.h	FUNCTION_33	CALL_3
0x4006394	      0x488d442b03	                lea rax, [rbx + rbp + 3]	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x4006399	      0x498345080a	                add qword [r13 + 8], 0xa	       123	d-demangle.c	FUNCTION_6
0x400639e	      0xe95ffdffff	                           jmp 0x4006102	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x40063a3	       0xf1f440000	                   nop dword [rax + rax]	       899	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_14
0x40063a8	          0x4889de	                            mov rsi, rbx	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x40063ab	      0xbf00000000	                              mov edi, 0	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x40063b0	      0xb90c000000	                            mov ecx, 0xc	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x40063b5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x40063b7	      0xbe00000000	                              mov esi, 0	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x40063bc	     0xf859bfeffff	                           jne 0x400625d	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x40063c2	      0xe91bffffff	                           jmp 0x40062e2	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x40063c7	    0x660f1f840000	                    nop word [rax + rax]	       904	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_15	CALL_28
0x40063d0	            0x85ed	                           test ebp, ebp	       129	d-demangle.c	FUNCTION_7	IF_1
0x40063d2	            0x89e8	                            mov eax, ebp	       926	d-demangle.c	FUNCTION_19	ELSE_2	CALL_36
0x40063d4	     0xf8585feffff	                           jne 0x400625f	       129	d-demangle.c	FUNCTION_7	IF_1
0x40063da	        0x488d042b	                    lea rax, [rbx + rbp]	       930	d-demangle.c	FUNCTION_19
0x40063de	      0xe91ffdffff	                           jmp 0x4006102	       930	d-demangle.c	FUNCTION_19
0x40063e3	        0x4883fd06	                              cmp rbp, 6	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40063e7	     0xf869a000000	                           jbe 0x4006487	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40063ed	      0xbf00000000	                              mov edi, 0	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40063f2	      0xb907000000	                              mov ecx, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40063f7	          0x4889de	                            mov rsi, rbx	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40063fa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40063fc	     0xf84a8000000	                            je 0x40064aa	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4006402	      0xbf00000000	                              mov edi, 0	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006407	      0xb907000000	                              mov ecx, 7	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400640c	          0x4889de	                            mov rsi, rbx	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400640f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006411	           0xf94c0	                                 sete al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006414	            0x84c0	                             test al, al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006416	     0xf84eb000000	                            je 0x4006507	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400641c	        0x498b7d00	                    mov rdi, qword [r13]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006420	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006423	     0xf84b0010000	                            je 0x40065d9	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006429	        0x498b5508	                mov rdx, qword [r13 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400642d	        0x498b4510	            mov rax, qword [r13 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006431	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006434	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006438	            0x7f2b	                            jg 0x4006465	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400643a	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400643d	      0x448d74120a	            lea r14d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006442	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006445	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006448	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400644b	      0xe800000000	                          call 0x4006450	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006450	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006453	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006456	        0x49894500	                    mov qword [r13], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400645a	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400645d	        0x4d897510	             mov qword [r13 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006461	        0x49895508	                mov qword [r13 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006465	    0xc7027e746869	            mov dword [rdx], 0x6968747e 	        53	string3.h	FUNCTION_33	CALL_3
0x400646b	        0xc6420473	                mov byte [rdx + 4], 0x73	        53	string3.h	FUNCTION_33	CALL_3
0x400646f	        0x488d042b	                    lea rax, [rbx + rbp]	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x4006473	      0x4983450805	                  add qword [r13 + 8], 5	       123	d-demangle.c	FUNCTION_6
0x4006478	      0xe985fcffff	                           jmp 0x4006102	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x400647d	      0xbe00000000	                              mov esi, 0	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x4006482	      0xe95bfeffff	                           jmp 0x40062e2	       862	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10
0x4006487	      0xb807000000	                              mov eax, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400648c	        0x4883fd07	                              cmp rbp, 7	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4006490	      0xbf00000000	                              mov edi, 0	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4006495	          0x4889c1	                            mov rcx, rax	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x4006498	          0x4889de	                            mov rsi, rbx	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400649b	        0x480f4ecd	                         cmovle rcx, rbp	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x400649f	          0x4839c9	                            cmp rcx, rcx	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40064a2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40064a4	     0xf8596000000	                           jne 0x4006540	       850	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9	CALL_10
0x40064aa	        0x498b7d00	                    mov rdi, qword [r13]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40064ae	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40064b1	     0xf84de000000	                            je 0x4006595	        62	d-demangle.c	FUNCTION_1	IF_1
0x40064b7	        0x498b5508	                mov rdx, qword [r13 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064bb	        0x498b4510	            mov rax, qword [r13 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064bf	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064c2	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064c6	            0x7f2b	                            jg 0x40064f3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064c8	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064cb	      0x448d741208	               lea r14d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40064d0	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064d3	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40064d6	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40064d9	      0xe800000000	                          call 0x40064de	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40064de	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064e1	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064e4	        0x49894500	                    mov qword [r13], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40064e8	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064eb	        0x4d897510	             mov qword [r13 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064ef	        0x49895508	                mov qword [r13 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40064f3	    0xc70274686973	            mov dword [rdx], 0x73696874 	        53	string3.h	FUNCTION_33	CALL_3
0x40064f9	        0x488d042b	                    lea rax, [rbx + rbp]	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x40064fd	      0x4983450804	                  add qword [r13 + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4006502	      0xe9fbfbffff	                           jmp 0x4006102	       855	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	IF_9
0x4006507	          0x4889de	                            mov rsi, rbx	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x400650a	      0xbf00000000	                              mov edi, 0	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x400650f	      0xb907000000	                              mov ecx, 7	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4006514	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4006516	      0xbe00000000	                              mov esi, 0	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x400651b	     0xf84c1fdffff	                            je 0x40062e2	       864	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_4	IF_11	CALL_14
0x4006521	          0x4889de	                            mov rsi, rbx	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4006524	      0xbf00000000	                              mov edi, 0	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4006529	      0xb907000000	                              mov ecx, 7	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400652e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4006530	      0xbe00000000	                              mov esi, 0	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4006535	     0xf8522fdffff	                           jne 0x400625d	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x400653b	      0xe9a2fdffff	                           jmp 0x40062e2	       872	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_5	IF_12	CALL_18
0x4006540	        0x4883fd07	                              cmp rbp, 7	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006544	      0xbf00000000	                              mov edi, 0	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006549	          0x4889de	                            mov rsi, rbx	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400654c	        0x480f4ec5	                         cmovle rax, rbp	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006550	          0x4889c1	                            mov rcx, rax	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006553	          0x4839c0	                            cmp rax, rax	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006556	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006558	           0xf94c0	                                 sete al	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x400655b	      0xe9b4feffff	                           jmp 0x4006414	       857	d-demangle.c	FUNCTION_19	ELSE_2	SWITCH_1	ELSE_3	IF_10	CALL_12
0x4006560	          0x83f81f	                           cmp eax, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4006563	            0x7f28	                            jg 0x400658d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4006565	          0x4c63f0	                         movsxd r14, eax	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4006568	    0x41bc20000000	                          mov r12d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400656e	          0x4c89e7	                            mov rdi, r12	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006571	      0xe800000000	                          call 0x4006576	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006576	          0x4901c4	                            add r12, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006579	        0x49894500	                    mov qword [r13], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400657d	        0x49894508	                mov qword [r13 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4006581	        0x4d896510	             mov qword [r13 + 0x10], r12	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006585	          0x4889c7	                            mov rdi, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006588	      0xe922fdffff	                           jmp 0x40062af	        69	d-demangle.c	FUNCTION_1	IF_1
0x400658d	          0x4c63e0	                         movsxd r12, eax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4006590	          0x4d89e6	                            mov r14, r12	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4006593	            0xebd9	                           jmp 0x400656e	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4006595	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400659a	      0xe800000000	                          call 0x400659f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400659f	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065a3	        0x49894500	                    mov qword [r13], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065a7	        0x49894508	                mov qword [r13 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065ab	        0x49895510	             mov qword [r13 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065af	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065b2	      0xe93cffffff	                           jmp 0x40064f3	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065b7	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065bc	      0xe800000000	                          call 0x40065c1	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065c1	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065c5	        0x49894500	                    mov qword [r13], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065c9	        0x49894508	                mov qword [r13 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065cd	        0x49895510	             mov qword [r13 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065d1	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065d4	      0xe9a5fdffff	                           jmp 0x400637e	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065d9	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065de	      0xe800000000	                          call 0x40065e3	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065e3	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065e7	        0x49894500	                    mov qword [r13], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065eb	        0x49894508	                mov qword [r13 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40065ef	        0x49895510	             mov qword [r13 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065f3	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065f6	      0xe96afeffff	                           jmp 0x4006465	        69	d-demangle.c	FUNCTION_1	IF_1
0x40065fb	      0x498d742401	                      lea rsi, [r12 + 1]	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4006600	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4006605	    0x450fb6742401	              movzx r14d, byte [r12 + 1]	      1548	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x400660b	    0x48c744242000	               mov qword [rsp + 0x20], 0	        95	d-demangle.c	FUNCTION_3
0x4006614	    0x48c744241800	               mov qword [rsp + 0x18], 0	        95	d-demangle.c	FUNCTION_3
0x400661d	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4006626	      0xe875cfffff	                     call sym.dlang_type	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x400662b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006630	          0x4989c4	                            mov r12, rax	      1553	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_5
0x4006633	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4006636	     0xf847c010000	                            je 0x40067b8	        62	d-demangle.c	FUNCTION_1	IF_1
0x400663c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006641	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006646	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006649	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400664c	     0xf8e25010000	                           jle 0x4006777	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006652	          0x4d85e4	                           test r12, r12	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4006655	          0xc60200	                       mov byte [rdx], 0	      1555	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4006658	     0xf8414010000	                            je 0x4006772	      1259	d-demangle.c	FUNCTION_26	IF_1
0x400665e	      0x410fb60424	                   movzx eax, byte [r12]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4006663	            0x84c0	                             test al, al	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4006665	     0xf8407010000	                            je 0x4006772	      1259	d-demangle.c	FUNCTION_26	IF_1
0x400666b	          0x83e830	                           sub eax, 0x30	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x400666e	            0x3c47	                            cmp al, 0x47	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4006670	     0xf87fc000000	                            ja 0x4006772	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4006676	           0xfb6c0	                           movzx eax, al	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4006679	    0xff24c5000000	                       jmp qword [rax*8]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4006680	      0x498d742401	                      lea rsi, [r12 + 1]	      1538	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x4006685	          0x4c89ef	                            mov rdi, r13	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4006688	      0xe813cfffff	                     call sym.dlang_type	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x400668d	          0x4989c4	                            mov r12, rax	      1539	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_3
0x4006690	          0x4d85e4	                           test r12, r12	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4006693	     0xf8458faffff	                            je 0x40060f1	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x4006699	      0x410fb60424	                   movzx eax, byte [r12]	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x400669e	        0x4983c701	                              add r15, 1	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40066a2	            0x84c0	                             test al, al	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40066a4	     0xf8516faffff	                           jne 0x40060c0	      1515	d-demangle.c	FUNCTION_30	WHILE_1
0x40066aa	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40066af	          0x4c89ef	                            mov rdi, r13	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40066b2	      0xe88999ffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40066b7	          0x4c89e0	                            mov rax, r12	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40066ba	          0x4889c2	                            mov rdx, rax	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40066bd	          0x4829da	                            sub rdx, rbx	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40066c0	          0x4839d5	                            cmp rbp, rdx	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40066c3	     0xf8439faffff	                            je 0x4006102	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40066c9	      0xe932faffff	                           jmp 0x4006100	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40066ce	            0x6690	                                     nop	      1604	d-demangle.c	FUNCTION_31	IF_2
0x40066d0	      0x498d742401	                      lea rsi, [r12 + 1]	      1534	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2
0x40066d5	      0xba04000000	                              mov edx, 4	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x40066da	          0x4c89ef	                            mov rdi, r13	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x40066dd	      0xe8bef8ffff	               call sym.dlang_identifier	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x40066e2	          0x4989c4	                            mov r12, rax	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x40066e5	            0xeba9	                           jmp 0x4006690	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x40066e7	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1535	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_2	CALL_2
0x40066ed	        0x4983c401	                              add r12, 1	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x40066f1	      0xe9e3f9ffff	                           jmp 0x40060d9	      1529	d-demangle.c	FUNCTION_30	WHILE_1	IF_2
0x40066f6	        0x4983c401	                              add r12, 1	      1520	d-demangle.c	FUNCTION_30	WHILE_1	SWITCH_1
0x40066fa	      0xbe00000000	                              mov esi, 0	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x40066ff	          0x4c89ef	                            mov rdi, r13	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4006702	      0xe83999ffff	                  call sym.string_append	      1601	d-demangle.c	FUNCTION_31	CALL_5
0x4006707	          0x4d85e4	                           test r12, r12	      1604	d-demangle.c	FUNCTION_31	IF_2
0x400670a	     0xf84f0f9ffff	                            je 0x4006100	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4006710	          0x4c89e0	                            mov rax, r12	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4006713	            0xeba5	                           jmp 0x40066ba	      1604	d-demangle.c	FUNCTION_31	IF_2
0x4006715	      0xbe00000000	                              mov esi, 0	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x400671a	          0x4c89ef	                            mov rdi, r13	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x400671d	      0xe81e99ffff	                  call sym.string_append	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4006722	      0x410fb60424	                   movzx eax, byte [r12]	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x4006727	      0xe9a5f9ffff	                           jmp 0x40060d1	      1525	d-demangle.c	FUNCTION_30	WHILE_1	CALL_1
0x400672c	      0xe800000000	                          call 0x4006731	       931	d-demangle.c	FUNCTION_19
0x4006731	      0xbe00000000	                              mov esi, 0	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x4006736	          0x4c89ef	                            mov rdi, r13	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x4006739	        0x4983c401	                              add r12, 1	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x400673d	      0xe8fe98ffff	                  call sym.string_append	      1267	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_1
0x4006742	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x4006747	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x400674a	     0xf8440ffffff	                            je 0x4006690	        85	d-demangle.c	FUNCTION_2	IF_1
0x4006750	      0xe800000000	                          call 0x4006755	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4006755	      0xe936ffffff	                           jmp 0x4006690	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x400675a	        0x4983c401	                              add r12, 1	      1278	d-demangle.c	FUNCTION_26	SWITCH_1
0x400675e	          0x4c89e6	                            mov rsi, r12	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4006761	        0x410fbed6	                         movsx edx, r14b	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4006765	          0x4c89ef	                            mov rdi, r13	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4006768	      0xe8c3aeffff	            call sym.dlang_parse_integer	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x400676d	          0x4989c4	                            mov r12, rax	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4006770	            0xebd0	                           jmp 0x4006742	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4006772	          0x4531e4	                          xor r12d, r12d	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4006775	            0xebcb	                           jmp 0x4006742	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4006777	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400677a	        0x8d4c1202	                lea ecx, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400677e	      0x4889542408	                mov qword [rsp + 8], rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006783	          0x4863c9	                         movsxd rcx, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006786	          0x4889ce	                            mov rsi, rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006789	        0x48890c24	                    mov qword [rsp], rcx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400678d	      0xe800000000	                          call 0x4006792	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4006792	      0x488b542408	                mov rdx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4006797	        0x488b0c24	                    mov rcx, qword [rsp]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400679b	      0x4889442410	             mov qword [rsp + 0x10], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40067a0	          0x4863d2	                         movsxd rdx, edx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40067a3	          0x4801c1	                            add rcx, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40067a6	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40067a9	      0x48894c2420	             mov qword [rsp + 0x20], rcx	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40067ae	      0x4889542418	             mov qword [rsp + 0x18], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40067b3	      0xe99afeffff	                           jmp 0x4006652	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40067b8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40067bd	      0xe800000000	                          call 0x40067c2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40067c2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40067c6	      0x4889442410	             mov qword [rsp + 0x10], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40067cb	      0x4889442418	             mov qword [rsp + 0x18], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40067d0	      0x4889542420	             mov qword [rsp + 0x20], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40067d5	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40067d8	      0xe975feffff	                           jmp 0x4006652	        69	d-demangle.c	FUNCTION_1	IF_1
0x40067dd	      0x498d742401	                      lea rsi, [r12 + 1]	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40067e2	          0x4c89ef	                            mov rdi, r13	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40067e5	      0xe8d6a7ffff	               call sym.dlang_parse_real	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40067ea	          0x4989c4	                            mov r12, rax	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40067ed	      0xe950ffffff	                           jmp 0x4006742	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40067f2	      0x498d742401	                      lea rsi, [r12 + 1]	      1297	d-demangle.c	FUNCTION_26	SWITCH_1
0x40067f7	          0x4c89ef	                            mov rdi, r13	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x40067fa	      0xe8c1a7ffff	               call sym.dlang_parse_real	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x40067ff	      0xbe00000000	                              mov esi, 0	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x4006804	          0x4989c4	                            mov r12, rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4006807	          0x4c89ef	                            mov rdi, r13	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x400680a	      0xe83198ffff	                  call sym.string_append	      1299	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_7
0x400680f	          0x4d85e4	                           test r12, r12	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4006812	     0xf845affffff	                            je 0x4006772	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4006818	      0x41803c2463	                    cmp byte [r12], 0x63	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x400681d	     0xf854fffffff	                           jne 0x4006772	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4006823	      0x498d742401	                      lea rsi, [r12 + 1]	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4006828	          0x4c89ef	                            mov rdi, r13	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x400682b	      0xe890a7ffff	               call sym.dlang_parse_real	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4006830	      0xbe00000000	                              mov esi, 0	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4006835	          0x4c89ef	                            mov rdi, r13	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4006838	          0x4989c4	                            mov r12, rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x400683b	      0xe80098ffff	                  call sym.string_append	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4006840	      0xe9fdfeffff	                           jmp 0x4006742	      1304	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_9
0x4006845	      0xbe00000000	                              mov esi, 0	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x400684a	          0x4c89ef	                            mov rdi, r13	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x400684d	      0xe8ee97ffff	                  call sym.string_append	      1273	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_2
0x4006852	      0x498d742401	                      lea rsi, [r12 + 1]	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4006857	        0x410fbed6	                         movsx edx, r14b	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x400685b	          0x4c89ef	                            mov rdi, r13	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x400685e	      0xe8cdadffff	            call sym.dlang_parse_integer	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4006863	          0x4989c4	                            mov r12, rax	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x4006866	      0xe9d7feffff	                           jmp 0x4006742	      1274	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_3
0x400686b	        0x4180fe48	                          cmp r14b, 0x48	      1317	d-demangle.c	FUNCTION_26	SWITCH_1	IF_3
0x400686f	      0x498d742401	                      lea rsi, [r12 + 1]	      1316	d-demangle.c	FUNCTION_26	SWITCH_1
0x4006874	          0x4c89ef	                            mov rdi, r13	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x4006877	            0x743a	                            je 0x40068b3	      1317	d-demangle.c	FUNCTION_26	SWITCH_1	IF_3
0x4006879	      0xe862c7ffff	       call sym.dlang_parse_arrayliteral	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x400687e	          0x4989c4	                            mov r12, rax	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4006881	      0xe9bcfeffff	                           jmp 0x4006742	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4006886	          0x4c89e6	                            mov rsi, r12	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4006889	          0x4c89ef	                            mov rdi, r13	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x400688c	      0xe83f9fffff	             call sym.dlang_parse_string	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4006891	          0x4989c4	                            mov r12, rax	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4006894	      0xe9a9feffff	                           jmp 0x4006742	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4006899	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x400689e	      0x498d742401	                      lea rsi, [r12 + 1]	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40068a3	          0x4c89ef	                            mov rdi, r13	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40068a6	      0xe8f5c0ffff	          call sym.dlang_parse_structlit	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40068ab	          0x4989c4	                            mov r12, rax	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40068ae	      0xe98ffeffff	                           jmp 0x4006742	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40068b3	      0xe8c8b7ffff	         call sym.dlang_parse_assocarray	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x40068b8	          0x4989c4	                            mov r12, rax	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
0x40068bb	      0xe982feffff	                           jmp 0x4006742	      1318	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_11
dlang_parse_arrayliteral	functions,0:ELSE,0:FOR,0:WHILE,1:IF,2:CALL,5:DO,0:SWITCH,0	360
0x4002fe0	          0x4885f6	                           test rsi, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4002fe3	     0xf84b0050000	                            je 0x4003599	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4002fe9	            0x4156	                                push r14	      1183	d-demangle.c	FUNCTION_23
0x4002feb	            0x4155	                                push r13	      1183	d-demangle.c	FUNCTION_23
0x4002fed	            0x4154	                                push r12	      1183	d-demangle.c	FUNCTION_23
0x4002fef	              0x55	                                push rbp	      1183	d-demangle.c	FUNCTION_23
0x4002ff0	              0x53	                                push rbx	      1183	d-demangle.c	FUNCTION_23
0x4002ff1	           0xfbe06	                   movsx eax, byte [rsi]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4002ff4	          0x4889f3	                            mov rbx, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4002ff7	           0xfb6d0	                           movzx edx, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4002ffa	    0xf68412000000	                test byte [rdx + rdx], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4003002	     0xf84d0040000	                            je 0x40034d8	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4003008	          0x4989fc	                            mov r12, rdi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400300b	            0x31ed	                            xor ebp, ebp	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400300d	           0xf1f00	                         nop dword [rax]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4003010	      0x488d54ad00	                  lea rdx, [rbp + rbp*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4003015	          0x83e830	                           sub eax, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4003018	        0x4883c301	                              add rbx, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x400301c	            0x4898	                                    cdqe	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x400301e	        0x488d2c50	                  lea rbp, [rax + rdx*2]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4003022	           0xfbe03	                   movsx eax, byte [rbx]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4003025	           0xfb6c8	                           movzx ecx, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4003028	            0x89c2	                            mov edx, eax	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x400302a	    0xf68409000000	                test byte [rcx + rcx], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4003032	            0x75dc	                           jne 0x4003010	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4003034	          0x4889e8	                            mov rax, rbp	       220	d-demangle.c	FUNCTION_10	IF_3
0x4003037	        0x48c1e83f	                           shr rax, 0x3f	       220	d-demangle.c	FUNCTION_10	IF_3
0x400303b	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x400303d	     0xf8595040000	                           jne 0x40034d8	       220	d-demangle.c	FUNCTION_10	IF_3
0x4003043	            0x84d2	                             test dl, dl	       220	d-demangle.c	FUNCTION_10	IF_3
0x4003045	     0xf848d040000	                            je 0x40034d8	       220	d-demangle.c	FUNCTION_10	IF_3
0x400304b	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400304f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003052	     0xf8458040000	                            je 0x40034b0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003058	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400305d	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003062	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003065	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003068	     0xf8ec2020000	                           jle 0x4003330	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400306e	          0xc6025b	                    mov byte [rdx], 0x5b	        53	string3.h	FUNCTION_33	CALL_3
0x4003071	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4003077	          0x4885ed	                           test rbp, rbp	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x400307a	        0x4c8d6dff	                      lea r13, [rbp - 1]	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x400307e	            0x7459	                            je 0x40030d9	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x4003080	          0x4885db	                           test rbx, rbx	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4003083	     0xf8497020000	                            je 0x4003320	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4003089	           0xfb603	                   movzx eax, byte [rbx]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x400308c	            0x84c0	                             test al, al	      1259	d-demangle.c	FUNCTION_26	IF_1
0x400308e	     0xf848c020000	                            je 0x4003320	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4003094	          0x83e830	                           sub eax, 0x30	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4003097	            0x3c47	                            cmp al, 0x47	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4003099	     0xf8781020000	                            ja 0x4003320	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x400309f	           0xfb6c0	                           movzx eax, al	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40030a2	    0xff24c5000000	                       jmp qword [rax*8]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40030a9	     0xf1f80000000	                         nop dword [rax]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40030b0	        0x4883c301	                              add rbx, 1	      1278	d-demangle.c	FUNCTION_26	SWITCH_1
0x40030b4	          0x4889de	                            mov rsi, rbx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x40030b7	            0x31d2	                            xor edx, edx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x40030b9	          0x4c89e7	                            mov rdi, r12	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x40030bc	      0xe86fe5ffff	            call sym.dlang_parse_integer	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x40030c1	          0x4889c3	                            mov rbx, rax	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x40030c4	          0x4d85ed	                           test r13, r13	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x40030c7	     0xf858b000000	                           jne 0x4003158	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x40030cd	          0x4c89ed	                            mov rbp, r13	        69	d-demangle.c	FUNCTION_1	IF_1
0x40030d0	          0x4885ed	                           test rbp, rbp	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x40030d3	        0x4c8d6dff	                      lea r13, [rbp - 1]	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x40030d7	            0x75a7	                           jne 0x4003080	      1191	d-demangle.c	FUNCTION_23	WHILE_1
0x40030d9	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40030dd	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40030e0	     0xf84a2030000	                            je 0x4003488	        62	d-demangle.c	FUNCTION_1	IF_1
0x40030e6	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40030eb	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40030f0	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40030f3	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40030f6	     0xf8e6c020000	                           jle 0x4003368	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40030fc	          0xc6025d	                    mov byte [rdx], 0x5d	        53	string3.h	FUNCTION_33	CALL_3
0x40030ff	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4003105	          0x4889d8	                            mov rax, rbx	       123	d-demangle.c	FUNCTION_6
0x4003108	              0x5b	                                 pop rbx	      1200	d-demangle.c	FUNCTION_23
0x4003109	              0x5d	                                 pop rbp	      1200	d-demangle.c	FUNCTION_23
0x400310a	            0x415c	                                 pop r12	      1200	d-demangle.c	FUNCTION_23
0x400310c	            0x415d	                                 pop r13	      1200	d-demangle.c	FUNCTION_23
0x400310e	            0x415e	                                 pop r14	      1200	d-demangle.c	FUNCTION_23
0x4003110	              0xc3	                                     ret	      1200	d-demangle.c	FUNCTION_23
0x4003111	     0xf1f80000000	                         nop dword [rax]	      1200	d-demangle.c	FUNCTION_23
0x4003118	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400311c	        0x4883c301	                              add rbx, 1	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x4003120	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003123	     0xf84bf030000	                            je 0x40034e8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003129	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400312e	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003133	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003136	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400313a	     0xf8e98020000	                           jle 0x40033d8	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003140	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x4003146	    0x498344240804	                  add qword [r12 + 8], 4	       123	d-demangle.c	FUNCTION_6
0x400314c	          0x4d85ed	                           test r13, r13	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x400314f	     0xf8478ffffff	                            je 0x40030cd	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4003155	           0xf1f00	                         nop dword [rax]	      1194	d-demangle.c	FUNCTION_23	WHILE_1	IF_2
0x4003158	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400315c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400315f	     0xf84fb020000	                            je 0x4003460	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003165	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400316a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400316f	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003172	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003176	            0x7f2d	                            jg 0x40031a5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003178	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400317b	      0x448d741204	               lea r14d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003180	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003183	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003186	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003189	      0xe800000000	                          call 0x400318e	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400318e	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003191	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003194	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003198	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400319b	      0x4d89742410	             mov qword [r12 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40031a0	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40031a5	      0xb82c200000	                         mov eax, 0x202c	        53	string3.h	FUNCTION_33	CALL_3
0x40031aa	          0x668902	                      mov word [rdx], ax	        53	string3.h	FUNCTION_33	CALL_3
0x40031ad	    0x498344240802	                  add qword [r12 + 8], 2	       123	d-demangle.c	FUNCTION_6
0x40031b3	      0xe915ffffff	                           jmp 0x40030cd	       123	d-demangle.c	FUNCTION_6
0x40031b8	     0xf1f84000000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40031c0	          0x4889de	                            mov rsi, rbx	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40031c3	          0x4c89e7	                            mov rdi, r12	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40031c6	      0xe805d6ffff	             call sym.dlang_parse_string	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40031cb	          0x4889c3	                            mov rbx, rax	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40031ce	      0xe9f1feffff	                           jmp 0x40030c4	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40031d3	       0xf1f440000	                   nop dword [rax + rax]	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x40031d8	        0x488d7301	                      lea rsi, [rbx + 1]	      1291	d-demangle.c	FUNCTION_26	SWITCH_1
0x40031dc	          0x4c89e7	                            mov rdi, r12	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40031df	      0xe8dcddffff	               call sym.dlang_parse_real	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40031e4	          0x4889c3	                            mov rbx, rax	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40031e7	      0xe9d8feffff	                           jmp 0x40030c4	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40031ec	         0xf1f4000	                         nop dword [rax]	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40031f0	        0x488d7301	                      lea rsi, [rbx + 1]	      1297	d-demangle.c	FUNCTION_26	SWITCH_1
0x40031f4	          0x4c89e7	                            mov rdi, r12	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x40031f7	      0xe8c4ddffff	               call sym.dlang_parse_real	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x40031fc	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003200	          0x4889c5	                            mov rbp, rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4003203	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003206	     0xf8414030000	                            je 0x4003520	        62	d-demangle.c	FUNCTION_1	IF_1
0x400320c	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003211	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003216	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003219	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400321c	     0xf8e7e010000	                           jle 0x40033a0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003222	          0xc6022b	                    mov byte [rdx], 0x2b	        53	string3.h	FUNCTION_33	CALL_3
0x4003225	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x400322b	          0x4885ed	                           test rbp, rbp	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x400322e	     0xf84ec000000	                            je 0x4003320	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4003234	        0x807d0063	                    cmp byte [rbp], 0x63	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4003238	     0xf85e2000000	                           jne 0x4003320	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x400323e	        0x488d7501	                      lea rsi, [rbp + 1]	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4003242	          0x4c89e7	                            mov rdi, r12	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4003245	      0xe876ddffff	               call sym.dlang_parse_real	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x400324a	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400324e	          0x4889c3	                            mov rbx, rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4003251	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003254	     0xf841b030000	                            je 0x4003575	        62	d-demangle.c	FUNCTION_1	IF_1
0x400325a	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400325f	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003264	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003267	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400326a	            0x7f2d	                            jg 0x4003299	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400326c	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400326f	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003274	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003277	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400327a	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400327d	      0xe800000000	                          call 0x4003282	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003282	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003285	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003288	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400328c	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400328f	      0x4d89742410	             mov qword [r12 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003294	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003299	          0xc60269	                    mov byte [rdx], 0x69	        53	string3.h	FUNCTION_33	CALL_3
0x400329c	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40032a2	      0xe91dfeffff	                           jmp 0x40030c4	       123	d-demangle.c	FUNCTION_6
0x40032a7	    0x660f1f840000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40032b0	        0x498b3c24	                    mov rdi, qword [r12]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40032b4	        0x4883c301	                              add rbx, 1	      1272	d-demangle.c	FUNCTION_26	SWITCH_1
0x40032b8	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40032bb	     0xf8487020000	                            je 0x4003548	        62	d-demangle.c	FUNCTION_1	IF_1
0x40032c1	      0x498b542408	                mov rdx, qword [r12 + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40032c6	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40032cb	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40032ce	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40032d1	     0xf8e49010000	                           jle 0x4003420	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40032d7	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x40032da	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40032e0	      0xe9cffdffff	                           jmp 0x40030b4	       123	d-demangle.c	FUNCTION_6
0x40032e5	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40032e8	        0x488d7301	                      lea rsi, [rbx + 1]	      1316	d-demangle.c	FUNCTION_26	SWITCH_1
0x40032ec	          0x4c89e7	                            mov rdi, r12	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40032ef	      0xe8ecfcffff	       call sym.dlang_parse_arrayliteral	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40032f4	          0x4889c3	                            mov rbx, rax	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40032f7	      0xe9c8fdffff	                           jmp 0x40030c4	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40032fc	         0xf1f4000	                         nop dword [rax]	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4003300	        0x488d7301	                      lea rsi, [rbx + 1]	      1325	d-demangle.c	FUNCTION_26	SWITCH_1
0x4003304	            0x31d2	                            xor edx, edx	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4003306	          0x4c89e7	                            mov rdi, r12	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4003309	      0xe892f6ffff	          call sym.dlang_parse_structlit	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x400330e	          0x4889c3	                            mov rbx, rax	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4003311	      0xe9aefdffff	                           jmp 0x40030c4	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4003316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4003320	            0x31db	                            xor ebx, ebx	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4003322	      0xe99dfdffff	                           jmp 0x40030c4	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4003327	    0x660f1f840000	                    nop word [rax + rax]	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4003330	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003333	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003338	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400333b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400333e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003341	      0xe800000000	                          call 0x4003346	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003346	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003349	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400334c	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003350	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003353	      0x4d89742410	             mov qword [r12 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003358	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400335d	      0xe90cfdffff	                           jmp 0x400306e	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003362	    0x660f1f440000	                    nop word [rax + rax]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003368	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400336b	      0x448d6c1202	               lea r13d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003370	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003373	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003376	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003379	      0xe800000000	                          call 0x400337e	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400337e	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003381	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003384	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003388	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400338b	      0x4d896c2410	             mov qword [r12 + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003390	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003395	      0xe962fdffff	                           jmp 0x40030fc	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400339a	    0x660f1f440000	                    nop word [rax + rax]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033a0	          0x4889d3	                            mov rbx, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033a3	          0x4829fb	                            sub rbx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033a6	      0x448d741b02	               lea r14d, [rbx + rbx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033ab	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033ae	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033b1	      0xe800000000	                          call 0x40033b6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033b6	          0x4863d3	                         movsxd rdx, ebx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033b9	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033bc	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033c0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033c3	      0x4d89742410	             mov qword [r12 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033c8	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033cd	      0xe950feffff	                           jmp 0x4003222	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033d2	    0x660f1f440000	                    nop word [rax + rax]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033d8	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033db	      0x448d741208	               lea r14d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033e0	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033e3	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033e6	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033e9	      0xe800000000	                          call 0x40033ee	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033ee	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033f1	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033f4	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40033f8	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40033fb	      0x4d89742410	             mov qword [r12 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003400	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003405	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x400340b	    0x498344240804	                  add qword [r12 + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4003411	      0xe936fdffff	                           jmp 0x400314c	       123	d-demangle.c	FUNCTION_6
0x4003416	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003420	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003423	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003428	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400342b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400342e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003431	      0xe800000000	                          call 0x4003436	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003436	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003439	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400343c	        0x49890424	                    mov qword [r12], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003440	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003443	      0x4d89742410	             mov qword [r12 + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003448	      0x4989542408	                mov qword [r12 + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400344d	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x4003450	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4003456	      0xe959fcffff	                           jmp 0x40030b4	       123	d-demangle.c	FUNCTION_6
0x400345b	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003460	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003465	      0xe800000000	                          call 0x400346a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400346a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400346e	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003472	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003477	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x400347c	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400347f	      0xe921fdffff	                           jmp 0x40031a5	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003484	         0xf1f4000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003488	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400348d	      0xe800000000	                          call 0x4003492	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003492	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003496	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400349a	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400349f	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034a4	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034a7	      0xe950fcffff	                           jmp 0x40030fc	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034ac	         0xf1f4000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034b0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40034b5	      0xe800000000	                          call 0x40034ba	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40034ba	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034be	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40034c2	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40034c7	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034cc	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034cf	      0xe99afbffff	                           jmp 0x400306e	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034d4	         0xf1f4000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034d8	              0x5b	                                 pop rbx	      1200	d-demangle.c	FUNCTION_23
0x40034d9	            0x31c0	                            xor eax, eax	      1188	d-demangle.c	FUNCTION_23	IF_1
0x40034db	              0x5d	                                 pop rbp	      1200	d-demangle.c	FUNCTION_23
0x40034dc	            0x415c	                                 pop r12	      1200	d-demangle.c	FUNCTION_23
0x40034de	            0x415d	                                 pop r13	      1200	d-demangle.c	FUNCTION_23
0x40034e0	            0x415e	                                 pop r14	      1200	d-demangle.c	FUNCTION_23
0x40034e2	              0xc3	                                     ret	      1200	d-demangle.c	FUNCTION_23
0x40034e3	       0xf1f440000	                   nop dword [rax + rax]	      1200	d-demangle.c	FUNCTION_23
0x40034e8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40034ed	      0xe800000000	                          call 0x40034f2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40034f2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40034f6	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40034fb	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40034ff	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003504	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003507	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x400350d	    0x498344240804	                  add qword [r12 + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4003513	      0xe934fcffff	                           jmp 0x400314c	       123	d-demangle.c	FUNCTION_6
0x4003518	     0xf1f84000000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003520	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003525	      0xe800000000	                          call 0x400352a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400352a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400352e	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003532	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003537	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x400353c	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400353f	      0xe9defcffff	                           jmp 0x4003222	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003544	         0xf1f4000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003548	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400354d	      0xe800000000	                          call 0x4003552	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003552	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003556	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400355b	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400355f	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003564	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003567	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x400356a	    0x498344240801	                  add qword [r12 + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4003570	      0xe93ffbffff	                           jmp 0x40030b4	       123	d-demangle.c	FUNCTION_6
0x4003575	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400357a	      0xe800000000	                          call 0x400357f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400357f	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003583	        0x49890424	                    mov qword [r12], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4003587	      0x4989442408	                mov qword [r12 + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400358c	      0x4989542410	             mov qword [r12 + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003591	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003594	      0xe900fdffff	                           jmp 0x4003299	        69	d-demangle.c	FUNCTION_1	IF_1
0x4003599	            0x31c0	                            xor eax, eax	      1188	d-demangle.c	FUNCTION_23	IF_1
0x400359b	              0xc3	                                     ret	      1200	d-demangle.c	FUNCTION_23
dlang_attributes	functions,0:ELSE,0:FOR,0:WHILE,1:IF,1:CALL,9:DO,0:SWITCH,1	362
0x40001f0	          0x4885f6	                           test rsi, rsi	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40001f3	     0xf8467040000	                            je 0x4000660	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40001f9	          0x803e00	                       cmp byte [rsi], 0	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x40001fc	     0xf845e040000	                            je 0x4000660	       353	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000202	            0x4155	                                push r13	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000204	            0x4154	                                push r12	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000206	              0x55	                                push rbp	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000207	              0x53	                                push rbx	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000208	        0x488d5e02	                      lea rbx, [rsi + 2]	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x400020c	          0x4889fd	                            mov rbp, rdi	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x400020f	        0x4883ec08	                              sub rsp, 8	       352	d-demangle.c	ELSE_1	FUNCTION_15
0x4000213	        0x807bfe4e	                cmp byte [rbx - 2], 0x4e	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x4000217	        0x488d43fe	                      lea rax, [rbx - 2]	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x400021b	            0x751d	                           jne 0x400023a	       356	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1
0x400021d	         0xfb64bff	               movzx ecx, byte [rbx - 1]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000221	          0x8d519f	                   lea edx, [rcx - 0x61]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000224	          0x80fa0b	                             cmp dl, 0xb	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000227	            0x770f	                            ja 0x4000238	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000229	           0xfb6d2	                           movzx edx, dl	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400022c	    0xff24d5000000	                       jmp qword [rdx*8]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000233	       0xf1f440000	                   nop dword [rax + rax]	       359	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000238	            0x31c0	                            xor eax, eax	       409	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400023a	        0x4883c408	                              add rsp, 8	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x400023e	              0x5b	                                 pop rbx	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x400023f	              0x5d	                                 pop rbp	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000240	            0x415c	                                 pop r12	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000242	            0x415d	                                 pop r13	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000244	              0xc3	                                     ret	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000245	           0xf1f00	                         nop dword [rax]	       415	d-demangle.c	ELSE_1	FUNCTION_15
0x4000248	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400024c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400024f	     0xf8413040000	                            je 0x4000668	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000255	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000259	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400025d	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000260	        0x4883f806	                              cmp rax, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000264	     0xf8ec6030000	                           jle 0x4000630	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400026a	      0xb9726e0000	                         mov ecx, 0x6e72	        53	string3.h	FUNCTION_33	CALL_3
0x400026f	    0xc70272657475	            mov dword [rdx], 0x75746572 	        53	string3.h	FUNCTION_33	CALL_3
0x4000275	        0xc6420620	                mov byte [rdx + 6], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x4000279	        0x66894a04	                  mov word [rdx + 4], cx	        53	string3.h	FUNCTION_33	CALL_3
0x400027d	      0x4883450807	                  add qword [rbp + 8], 7	       123	d-demangle.c	FUNCTION_6
0x4000282	      0xe9f9010000	                           jmp 0x4000480	       402	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000287	    0x660f1f840000	                    nop word [rax + rax]	       402	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000290	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000294	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000297	     0xf846b040000	                            je 0x4000708	        62	d-demangle.c	FUNCTION_1	IF_1
0x400029d	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002a1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002a5	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002a8	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002ac	     0xf8e4e030000	                           jle 0x4000600	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002b2	      0xbe63200000	                         mov esi, 0x2063	        53	string3.h	FUNCTION_33	CALL_3
0x40002b7	    0xc702406e6f67	            mov dword [rdx], 0x676f6e40 	        53	string3.h	FUNCTION_33	CALL_3
0x40002bd	        0x66897204	                  mov word [rdx + 4], si	        53	string3.h	FUNCTION_33	CALL_3
0x40002c1	      0x4883450806	                  add qword [rbp + 8], 6	       123	d-demangle.c	FUNCTION_6
0x40002c6	      0xe9b5010000	                           jmp 0x4000480	       398	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40002cb	       0xf1f440000	                   nop dword [rax + rax]	       398	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40002d0	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40002d4	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40002d7	     0xf8403040000	                            je 0x40006e0	        62	d-demangle.c	FUNCTION_1	IF_1
0x40002dd	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002e1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002e5	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002e8	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002ec	     0xf8ede020000	                           jle 0x40005d0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40002f2	      0xbf65200000	                         mov edi, 0x2065	        53	string3.h	FUNCTION_33	CALL_3
0x40002f7	    0xc70240736166	            mov dword [rdx], 0x66617340 	        53	string3.h	FUNCTION_33	CALL_3
0x40002fd	        0x66897a04	                  mov word [rdx + 4], di	        53	string3.h	FUNCTION_33	CALL_3
0x4000301	      0x4883450806	                  add qword [rbp + 8], 6	       123	d-demangle.c	FUNCTION_6
0x4000306	      0xe975010000	                           jmp 0x4000480	       384	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400030b	       0xf1f440000	                   nop dword [rax + rax]	       384	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000310	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000314	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000317	     0xf849b030000	                            je 0x40006b8	        62	d-demangle.c	FUNCTION_1	IF_1
0x400031d	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000321	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000325	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000328	        0x4883f808	                              cmp rax, 8	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400032c	     0xf8e6e020000	                           jle 0x40005a0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000332	    0x48b840747275	          movabs rax, 0x6465747375727440	        53	string3.h	FUNCTION_33	CALL_3
0x400033c	        0xc6420820	                mov byte [rdx + 8], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x4000340	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4000343	      0x4883450809	                  add qword [rbp + 8], 9	       123	d-demangle.c	FUNCTION_6
0x4000348	      0xe933010000	                           jmp 0x4000480	       380	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x400034d	           0xf1f00	                         nop dword [rax]	       380	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000350	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000354	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000357	     0xf8433030000	                            je 0x4000690	        62	d-demangle.c	FUNCTION_1	IF_1
0x400035d	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000361	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000365	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000368	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400036c	     0xf8eee010000	                           jle 0x4000560	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000372	    0xc70270757265	            mov dword [rdx], 0x65727570 	        53	string3.h	FUNCTION_33	CALL_3
0x4000378	        0xc6420420	                mov byte [rdx + 4], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x400037c	      0x4883450805	                  add qword [rbp + 8], 5	       123	d-demangle.c	FUNCTION_6
0x4000381	      0xe9fa000000	                           jmp 0x4000480	       364	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000386	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       364	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000390	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000394	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000397	     0xf840b040000	                            je 0x40007a8	        62	d-demangle.c	FUNCTION_1	IF_1
0x400039d	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003a1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003a5	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003a8	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003ac	     0xf8e6e010000	                           jle 0x4000520	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003b2	    0xc70272656620	            mov dword [rdx], 0x20666572 	        53	string3.h	FUNCTION_33	CALL_3
0x40003b8	      0x4883450804	                  add qword [rbp + 8], 4	       123	d-demangle.c	FUNCTION_6
0x40003bd	      0xe9be000000	                           jmp 0x4000480	       372	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003c2	    0x660f1f440000	                    nop word [rax + rax]	       372	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x40003c8	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40003cc	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40003cf	     0xf84ab030000	                            je 0x4000780	        62	d-demangle.c	FUNCTION_1	IF_1
0x40003d5	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003d9	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003dd	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003e0	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003e4	     0xf8e06010000	                           jle 0x40004f0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40003ea	      0xb865200000	                         mov eax, 0x2065	        53	string3.h	FUNCTION_33	CALL_3
0x40003ef	    0xc70273636f70	            mov dword [rdx], 0x706f6373 	        53	string3.h	FUNCTION_33	CALL_3
0x40003f5	        0x66894204	                  mov word [rdx + 4], ax	        53	string3.h	FUNCTION_33	CALL_3
0x40003f9	      0x4883450806	                  add qword [rbp + 8], 6	       123	d-demangle.c	FUNCTION_6
0x40003fe	      0xe97d000000	                           jmp 0x4000480	       406	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000403	       0xf1f440000	                   nop dword [rax + rax]	       406	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000408	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400040c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400040f	     0xf8443030000	                            je 0x4000758	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000415	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000419	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400041d	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000420	        0x4883f809	                              cmp rax, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000424	     0xf8e96000000	                           jle 0x40004c0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400042a	    0x48b84070726f	          movabs rax, 0x747265706f727040	        53	string3.h	FUNCTION_33	CALL_3
0x4000434	    0x41b879200000	                         mov r8d, 0x2079	        53	string3.h	FUNCTION_33	CALL_3
0x400043a	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x400043d	      0x6644894208	                 mov word [rdx + 8], r8w	        53	string3.h	FUNCTION_33	CALL_3
0x4000442	      0x488345080a	                add qword [rbp + 8], 0xa	       123	d-demangle.c	FUNCTION_6
0x4000447	            0xeb37	                           jmp 0x4000480	       376	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000449	     0xf1f80000000	                         nop dword [rax]	       376	d-demangle.c	ELSE_1	FUNCTION_15	WHILE_1	SWITCH_1
0x4000450	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000454	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4000457	     0xf84d3020000	                            je 0x4000730	        62	d-demangle.c	FUNCTION_1	IF_1
0x400045d	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000461	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000465	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000468	        0x4883f807	                              cmp rax, 7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400046c	            0x7e22	                           jle 0x4000490	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400046e	    0x48b86e6f7468	          movabs rax, 0x20776f7268746f6e	        53	string3.h	FUNCTION_33	CALL_3
0x4000478	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x400047b	      0x4883450808	                  add qword [rbp + 8], 8	       123	d-demangle.c	FUNCTION_6
0x4000480	        0x4883c302	                              add rbx, 2	       123	d-demangle.c	FUNCTION_6
0x4000484	      0xe98afdffff	                           jmp 0x4000213	       123	d-demangle.c	FUNCTION_6
0x4000489	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4000490	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000493	      0x448d6c1210	           lea r13d, [rdx + rdx + 0x10] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000498	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400049b	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400049e	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004a1	      0xe800000000	                          call 0x40004a6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004a6	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004a9	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004ac	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004b0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004b3	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004b7	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004bb	            0xebb1	                           jmp 0x400046e	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004bd	           0xf1f00	                         nop dword [rax]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004c0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004c3	      0x448d6c1214	           lea r13d, [rdx + rdx + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004c8	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004cb	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004ce	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004d1	      0xe800000000	                          call 0x40004d6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004d6	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004d9	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004dc	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004e0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004e3	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004e7	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004eb	      0xe93affffff	                           jmp 0x400042a	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004f0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004f3	      0x448d6c120c	            lea r13d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004f8	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40004fb	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40004fe	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000501	      0xe800000000	                          call 0x4000506	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000506	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000509	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400050c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000510	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000513	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000517	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400051b	      0xe9cafeffff	                           jmp 0x40003ea	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000520	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000523	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000528	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400052b	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400052e	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000531	      0xe800000000	                          call 0x4000536	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000536	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000539	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400053c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000540	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000543	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000547	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400054b	    0xc70272656620	            mov dword [rdx], 0x20666572 	        53	string3.h	FUNCTION_33	CALL_3
0x4000551	      0x4883450804	                  add qword [rbp + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4000556	      0xe925ffffff	                           jmp 0x4000480	       123	d-demangle.c	FUNCTION_6
0x400055b	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4000560	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000563	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000568	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400056b	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400056e	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000571	      0xe800000000	                          call 0x4000576	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000576	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000579	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400057c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000580	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000583	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000587	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400058b	    0xc70270757265	            mov dword [rdx], 0x65727570 	        53	string3.h	FUNCTION_33	CALL_3
0x4000591	        0xc6420420	                mov byte [rdx + 4], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x4000595	      0x4883450805	                  add qword [rbp + 8], 5	       123	d-demangle.c	FUNCTION_6
0x400059a	      0xe9e1feffff	                           jmp 0x4000480	       123	d-demangle.c	FUNCTION_6
0x400059f	              0x90	                                     nop	       123	d-demangle.c	FUNCTION_6
0x40005a0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005a3	      0x448d6c1212	           lea r13d, [rdx + rdx + 0x12] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005a8	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005ab	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005ae	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005b1	      0xe800000000	                          call 0x40005b6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005b6	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005b9	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005bc	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005c0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005c3	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005c7	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005cb	      0xe962fdffff	                           jmp 0x4000332	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005d0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005d3	      0x448d6c120c	            lea r13d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005d8	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005db	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005de	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005e1	      0xe800000000	                          call 0x40005e6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005e6	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005e9	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005ec	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40005f0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005f3	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005f7	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40005fb	      0xe9f2fcffff	                           jmp 0x40002f2	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000600	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000603	      0x448d6c120c	            lea r13d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000608	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400060b	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400060e	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000611	      0xe800000000	                          call 0x4000616	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000616	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000619	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400061c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000620	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000623	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000627	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400062b	      0xe982fcffff	                           jmp 0x40002b2	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000630	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000633	      0x448d6c120e	            lea r13d, [rdx + rdx + 0xe] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000638	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400063b	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400063e	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000641	      0xe800000000	                          call 0x4000646	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000646	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000649	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400064c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4000650	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000653	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000657	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400065b	      0xe90afcffff	                           jmp 0x400026a	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4000660	            0x31c0	                            xor eax, eax	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000662	              0xc3	                                     ret	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000663	       0xf1f440000	                   nop dword [rax + rax]	       354	d-demangle.c	ELSE_1	FUNCTION_15	IF_1
0x4000668	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400066d	      0xe800000000	                          call 0x4000672	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000672	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000676	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400067a	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400067e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000682	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000685	      0xe9e0fbffff	                           jmp 0x400026a	        69	d-demangle.c	FUNCTION_1	IF_1
0x400068a	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000690	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000695	      0xe800000000	                          call 0x400069a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400069a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400069e	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006a2	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006a6	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006aa	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006ad	      0xe9c0fcffff	                           jmp 0x4000372	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006b2	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006b8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006bd	      0xe800000000	                          call 0x40006c2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006c2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006c6	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006ca	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006ce	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006d2	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006d5	      0xe958fcffff	                           jmp 0x4000332	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006da	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006e0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006e5	      0xe800000000	                          call 0x40006ea	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006ea	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006ee	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006f2	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40006f6	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006fa	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40006fd	      0xe9f0fbffff	                           jmp 0x40002f2	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000702	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000708	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400070d	      0xe800000000	                          call 0x4000712	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000712	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000716	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400071a	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400071e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000722	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000725	      0xe988fbffff	                           jmp 0x40002b2	        69	d-demangle.c	FUNCTION_1	IF_1
0x400072a	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000730	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000735	      0xe800000000	                          call 0x400073a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400073a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400073e	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000742	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000746	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x400074a	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400074d	      0xe91cfdffff	                           jmp 0x400046e	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000752	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000758	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400075d	      0xe800000000	                          call 0x4000762	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000762	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000766	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400076a	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400076e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000772	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000775	      0xe9b0fcffff	                           jmp 0x400042a	        69	d-demangle.c	FUNCTION_1	IF_1
0x400077a	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4000780	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000785	      0xe800000000	                          call 0x400078a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400078a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400078e	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000792	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4000796	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x400079a	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400079d	      0xe948fcffff	                           jmp 0x40003ea	        69	d-demangle.c	FUNCTION_1	IF_1
0x40007a2	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40007a8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40007ad	      0xe800000000	                          call 0x40007b2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40007b2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40007b6	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40007ba	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40007be	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40007c2	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40007c5	      0xe9e8fbffff	                           jmp 0x40003b2	        69	d-demangle.c	FUNCTION_1	IF_1
dlang_parse_assocarray	functions,0:ELSE,0:FOR,0:WHILE,1:IF,2:CALL,7:DO,0:SWITCH,0	596
0x4002080	          0x4885f6	                           test rsi, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4002083	     0xf840d090000	                            je 0x4002996	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4002089	            0x4156	                                push r14	      1206	d-demangle.c	FUNCTION_24
0x400208b	            0x4155	                                push r13	      1206	d-demangle.c	FUNCTION_24
0x400208d	            0x4154	                                push r12	      1206	d-demangle.c	FUNCTION_24
0x400208f	              0x55	                                push rbp	      1206	d-demangle.c	FUNCTION_24
0x4002090	          0x4889f5	                            mov rbp, rsi	      1206	d-demangle.c	FUNCTION_24
0x4002093	              0x53	                                push rbx	      1206	d-demangle.c	FUNCTION_24
0x4002094	           0xfbe06	                   movsx eax, byte [rsi]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4002097	           0xfb6d0	                           movzx edx, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400209a	    0xf68412000000	                test byte [rdx + rdx], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40020a2	     0xf8490070000	                            je 0x4002838	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40020a8	          0x4889fb	                            mov rbx, rdi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40020ab	          0x4531ed	                          xor r13d, r13d	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40020ae	            0x6690	                                     nop	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40020b0	      0x4b8d54ad00	                  lea rdx, [r13 + r13*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x40020b5	          0x83e830	                           sub eax, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40020b8	        0x4883c501	                              add rbp, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x40020bc	            0x4898	                                    cdqe	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40020be	        0x4c8d2c50	                  lea r13, [rax + rdx*2]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40020c2	         0xfbe4500	                   movsx eax, byte [rbp]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40020c6	           0xfb6c8	                           movzx ecx, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40020c9	            0x89c2	                            mov edx, eax	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40020cb	    0xf68409000000	                test byte [rcx + rcx], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40020d3	            0x75db	                           jne 0x40020b0	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40020d5	          0x4c89e8	                            mov rax, r13	       220	d-demangle.c	FUNCTION_10	IF_3
0x40020d8	        0x48c1e83f	                           shr rax, 0x3f	       220	d-demangle.c	FUNCTION_10	IF_3
0x40020dc	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x40020de	     0xf8554070000	                           jne 0x4002838	       220	d-demangle.c	FUNCTION_10	IF_3
0x40020e4	            0x84d2	                             test dl, dl	       220	d-demangle.c	FUNCTION_10	IF_3
0x40020e6	     0xf844c070000	                            je 0x4002838	       220	d-demangle.c	FUNCTION_10	IF_3
0x40020ec	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40020ef	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40020f2	     0xf84f0060000	                            je 0x40027e8	        62	d-demangle.c	FUNCTION_1	IF_1
0x40020f8	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40020fc	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002100	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002103	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002106	     0xf8ef4040000	                           jle 0x4002600	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400210c	          0xc6025b	                    mov byte [rdx], 0x5b	        53	string3.h	FUNCTION_33	CALL_3
0x400210f	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002114	          0x4d85ed	                           test r13, r13	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002117	        0x4d8d65ff	                      lea r12, [r13 - 1]	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x400211b	     0xf84fc000000	                            je 0x400221d	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002121	     0xf1f80000000	                         nop dword [rax]	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002128	          0x4885ed	                           test rbp, rbp	      1259	d-demangle.c	FUNCTION_26	IF_1
0x400212b	     0xf84bf040000	                            je 0x40025f0	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002131	         0xfb64500	                   movzx eax, byte [rbp]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002135	            0x84c0	                             test al, al	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002137	     0xf84b3040000	                            je 0x40025f0	      1259	d-demangle.c	FUNCTION_26	IF_1
0x400213d	          0x83e830	                           sub eax, 0x30	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002140	            0x3c47	                            cmp al, 0x47	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002142	     0xf87a8040000	                            ja 0x40025f0	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002148	           0xfb6c0	                           movzx eax, al	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x400214b	    0xff24c5000000	                       jmp qword [rax*8]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002152	    0x660f1f440000	                    nop word [rax + rax]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002158	        0x4883c501	                              add rbp, 1	      1278	d-demangle.c	FUNCTION_26	SWITCH_1
0x400215c	          0x4889ee	                            mov rsi, rbp	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x400215f	            0x31d2	                            xor edx, edx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002161	          0x4889df	                            mov rdi, rbx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002164	      0xe8c7f4ffff	            call sym.dlang_parse_integer	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002169	          0x4889c5	                            mov rbp, rax	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x400216c	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400216f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002172	     0xf8420010000	                            je 0x4002298	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002178	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400217c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002180	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002183	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002186	            0x7f2a	                            jg 0x40021b2	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002188	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400218b	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002190	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002193	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002196	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002199	      0xe800000000	                          call 0x400219e	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400219e	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40021a1	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40021a4	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40021a7	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40021aa	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40021ae	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40021b2	          0xc6023a	                    mov byte [rdx], 0x3a	        53	string3.h	FUNCTION_33	CALL_3
0x40021b5	        0x488b4308	                mov rax, qword [rbx + 8]	       123	d-demangle.c	FUNCTION_6
0x40021b9	          0x4885ed	                           test rbp, rbp	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40021bc	        0x488d4801	                      lea rcx, [rax + 1]	       123	d-demangle.c	FUNCTION_6
0x40021c0	        0x48894b08	                mov qword [rbx + 8], rcx	       123	d-demangle.c	FUNCTION_6
0x40021c4	     0xf8416040000	                            je 0x40025e0	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40021ca	         0xfb65500	                   movzx edx, byte [rbp]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40021ce	            0x84d2	                             test dl, dl	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40021d0	     0xf840a040000	                            je 0x40025e0	      1259	d-demangle.c	FUNCTION_26	IF_1
0x40021d6	          0x83ea30	                           sub edx, 0x30	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40021d9	          0x80fa47	                            cmp dl, 0x47	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40021dc	     0xf87fe030000	                            ja 0x40025e0	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40021e2	           0xfb6d2	                           movzx edx, dl	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40021e5	    0xff24d5000000	                       jmp qword [rdx*8]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40021ec	         0xf1f4000	                         nop dword [rax]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x40021f0	        0x4883c501	                              add rbp, 1	      1278	d-demangle.c	FUNCTION_26	SWITCH_1
0x40021f4	          0x4889ee	                            mov rsi, rbp	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x40021f7	            0x31d2	                            xor edx, edx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x40021f9	          0x4889df	                            mov rdi, rbx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x40021fc	      0xe82ff4ffff	            call sym.dlang_parse_integer	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002201	          0x4889c5	                            mov rbp, rax	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002204	          0x4d85e4	                           test r12, r12	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x4002207	     0xf85eb000000	                           jne 0x40022f8	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x400220d	          0x4d89e5	                            mov r13, r12	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002210	          0x4d85ed	                           test r13, r13	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002213	        0x4d8d65ff	                      lea r12, [r13 - 1]	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x4002217	     0xf850bffffff	                           jne 0x4002128	      1214	d-demangle.c	FUNCTION_24	WHILE_1
0x400221d	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002220	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002223	     0xf84e7050000	                            je 0x4002810	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002229	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400222d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002231	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002234	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002237	     0xf8ef3030000	                           jle 0x4002630	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400223d	          0xc6025d	                    mov byte [rdx], 0x5d	        53	string3.h	FUNCTION_33	CALL_3
0x4002240	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002245	          0x4889e8	                            mov rax, rbp	       123	d-demangle.c	FUNCTION_6
0x4002248	              0x5b	                                 pop rbx	      1226	d-demangle.c	FUNCTION_24
0x4002249	              0x5d	                                 pop rbp	      1226	d-demangle.c	FUNCTION_24
0x400224a	            0x415c	                                 pop r12	      1226	d-demangle.c	FUNCTION_24
0x400224c	            0x415d	                                 pop r13	      1226	d-demangle.c	FUNCTION_24
0x400224e	            0x415e	                                 pop r14	      1226	d-demangle.c	FUNCTION_24
0x4002250	              0xc3	                                     ret	      1226	d-demangle.c	FUNCTION_24
0x4002251	     0xf1f80000000	                         nop dword [rax]	      1226	d-demangle.c	FUNCTION_24
0x4002258	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400225b	        0x4883c501	                              add rbp, 1	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x400225f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002262	     0xf8410060000	                            je 0x4002878	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002268	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400226c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002270	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002273	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002277	     0xf8e03050000	                           jle 0x4002780	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400227d	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x4002283	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4002288	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400228b	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400228e	     0xf85e4feffff	                           jne 0x4002178	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002294	         0xf1f4000	                         nop dword [rax]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002298	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400229d	      0xe800000000	                          call 0x40022a2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40022a2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40022a6	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40022a9	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40022ad	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40022b1	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40022b4	      0xe9f9feffff	                           jmp 0x40021b2	        69	d-demangle.c	FUNCTION_1	IF_1
0x40022b9	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40022c0	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40022c3	        0x4883c501	                              add rbp, 1	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x40022c7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40022ca	     0xf8458060000	                            je 0x4002928	        62	d-demangle.c	FUNCTION_1	IF_1
0x40022d0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40022d4	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40022d7	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40022db	     0xf8e5f040000	                           jle 0x4002740	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40022e1	    0xc7016e756c6c	            mov dword [rcx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x40022e7	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x40022ec	          0x4d85e4	                           test r12, r12	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x40022ef	     0xf8418ffffff	                            je 0x400220d	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x40022f5	           0xf1f00	                         nop dword [rax]	      1220	d-demangle.c	FUNCTION_24	WHILE_1	IF_2
0x40022f8	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40022fb	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40022fe	     0xf84bc040000	                            je 0x40027c0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002304	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002308	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400230c	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400230f	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002313	            0x7f2a	                            jg 0x400233f	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002315	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002318	      0x448d741204	               lea r14d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400231d	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002320	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002323	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002326	      0xe800000000	                          call 0x400232b	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400232b	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400232e	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002331	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002334	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002337	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400233b	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400233f	      0xb82c200000	                         mov eax, 0x202c	        53	string3.h	FUNCTION_33	CALL_3
0x4002344	          0x668902	                      mov word [rdx], ax	        53	string3.h	FUNCTION_33	CALL_3
0x4002347	      0x4883430802	                  add qword [rbx + 8], 2	       123	d-demangle.c	FUNCTION_6
0x400234c	      0xe9bcfeffff	                           jmp 0x400220d	       123	d-demangle.c	FUNCTION_6
0x4002351	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4002358	          0x4889ee	                            mov rsi, rbp	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x400235b	          0x4889df	                            mov rdi, rbx	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x400235e	      0xe86de4ffff	             call sym.dlang_parse_string	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002363	          0x4889c5	                            mov rbp, rax	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002366	      0xe901feffff	                           jmp 0x400216c	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x400236b	       0xf1f440000	                   nop dword [rax + rax]	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002370	          0x4889ee	                            mov rsi, rbp	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002373	          0x4889df	                            mov rdi, rbx	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002376	      0xe855e4ffff	             call sym.dlang_parse_string	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x400237b	          0x4889c5	                            mov rbp, rax	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x400237e	      0xe981feffff	                           jmp 0x4002204	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002383	       0xf1f440000	                   nop dword [rax + rax]	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002388	        0x488d7501	                      lea rsi, [rbp + 1]	      1325	d-demangle.c	FUNCTION_26	SWITCH_1
0x400238c	            0x31d2	                            xor edx, edx	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x400238e	          0x4889df	                            mov rdi, rbx	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002391	      0xe80a060000	          call sym.dlang_parse_structlit	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002396	          0x4889c5	                            mov rbp, rax	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002399	      0xe966feffff	                           jmp 0x4002204	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x400239e	            0x6690	                                     nop	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40023a0	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40023a3	        0x4883c501	                              add rbp, 1	      1272	d-demangle.c	FUNCTION_26	SWITCH_1
0x40023a7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40023aa	     0xf84f8040000	                            je 0x40028a8	        62	d-demangle.c	FUNCTION_1	IF_1
0x40023b0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40023b4	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40023b7	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40023ba	     0xf8e40030000	                           jle 0x4002700	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40023c0	          0xc6012d	                    mov byte [rcx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x40023c3	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40023c8	      0xe927feffff	                           jmp 0x40021f4	       123	d-demangle.c	FUNCTION_6
0x40023cd	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40023d0	        0x488d7501	                      lea rsi, [rbp + 1]	      1316	d-demangle.c	FUNCTION_26	SWITCH_1
0x40023d4	          0x4889df	                            mov rdi, rbx	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40023d7	      0xe8040c0000	       call sym.dlang_parse_arrayliteral	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40023dc	          0x4889c5	                            mov rbp, rax	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40023df	      0xe920feffff	                           jmp 0x4002204	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40023e4	         0xf1f4000	                         nop dword [rax]	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40023e8	        0x488d7501	                      lea rsi, [rbp + 1]	      1291	d-demangle.c	FUNCTION_26	SWITCH_1
0x40023ec	          0x4889df	                            mov rdi, rbx	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40023ef	      0xe8ccebffff	               call sym.dlang_parse_real	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40023f4	          0x4889c5	                            mov rbp, rax	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40023f7	      0xe908feffff	                           jmp 0x4002204	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40023fc	         0xf1f4000	                         nop dword [rax]	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002400	        0x488d7501	                      lea rsi, [rbp + 1]	      1297	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002404	          0x4889df	                            mov rdi, rbx	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4002407	      0xe8b4ebffff	               call sym.dlang_parse_real	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x400240c	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400240f	          0x4989c5	                            mov r13, rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4002412	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002415	     0xf84bd040000	                            je 0x40028d8	        62	d-demangle.c	FUNCTION_1	IF_1
0x400241b	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400241f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002423	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002426	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002429	     0xf8ea1020000	                           jle 0x40026d0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400242f	          0xc6022b	                    mov byte [rdx], 0x2b	        53	string3.h	FUNCTION_33	CALL_3
0x4002432	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002437	          0x4d85ed	                           test r13, r13	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x400243a	     0xf84a0010000	                            je 0x40025e0	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002440	      0x41807d0063	                    cmp byte [r13], 0x63	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002445	     0xf8595010000	                           jne 0x40025e0	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x400244b	        0x498d7501	                      lea rsi, [r13 + 1]	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x400244f	          0x4889df	                            mov rdi, rbx	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4002452	      0xe869ebffff	               call sym.dlang_parse_real	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4002457	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400245a	          0x4889c5	                            mov rbp, rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x400245d	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002460	     0xf84ee040000	                            je 0x4002954	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002466	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400246a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400246e	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002471	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002474	            0x7f2a	                            jg 0x40024a0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002476	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002479	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400247e	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002481	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002484	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002487	      0xe800000000	                          call 0x400248c	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400248c	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400248f	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002492	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002495	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002498	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400249c	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40024a0	          0xc60269	                    mov byte [rdx], 0x69	        53	string3.h	FUNCTION_33	CALL_3
0x40024a3	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40024a8	      0xe957fdffff	                           jmp 0x4002204	       123	d-demangle.c	FUNCTION_6
0x40024ad	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40024b0	        0x488d7501	                      lea rsi, [rbp + 1]	      1291	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024b4	          0x4889df	                            mov rdi, rbx	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40024b7	      0xe804ebffff	               call sym.dlang_parse_real	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40024bc	          0x4889c5	                            mov rbp, rax	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40024bf	      0xe9a8fcffff	                           jmp 0x400216c	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40024c4	         0xf1f4000	                         nop dword [rax]	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x40024c8	        0x488d7501	                      lea rsi, [rbp + 1]	      1297	d-demangle.c	FUNCTION_26	SWITCH_1
0x40024cc	          0x4889df	                            mov rdi, rbx	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x40024cf	      0xe8eceaffff	               call sym.dlang_parse_real	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x40024d4	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40024d7	          0x4989c5	                            mov r13, rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x40024da	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40024dd	     0xf841d040000	                            je 0x4002900	        62	d-demangle.c	FUNCTION_1	IF_1
0x40024e3	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40024e7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40024eb	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40024ee	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40024f1	     0xf8e69010000	                           jle 0x4002660	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40024f7	          0xc6022b	                    mov byte [rdx], 0x2b	        53	string3.h	FUNCTION_33	CALL_3
0x40024fa	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40024ff	          0x4d85ed	                           test r13, r13	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002502	     0xf84e8000000	                            je 0x40025f0	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002508	      0x41807d0063	                    cmp byte [r13], 0x63	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x400250d	     0xf85dd000000	                           jne 0x40025f0	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002513	        0x498d7501	                      lea rsi, [r13 + 1]	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4002517	          0x4889df	                            mov rdi, rbx	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x400251a	      0xe8a1eaffff	               call sym.dlang_parse_real	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x400251f	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002522	          0x4889c5	                            mov rbp, rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4002525	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002528	     0xf8447040000	                            je 0x4002975	        62	d-demangle.c	FUNCTION_1	IF_1
0x400252e	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002532	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002536	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002539	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400253c	            0x7f2a	                            jg 0x4002568	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400253e	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002541	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002546	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002549	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400254c	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400254f	      0xe800000000	                          call 0x4002554	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002554	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002557	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400255a	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400255d	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002560	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002564	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002568	          0xc60269	                    mov byte [rdx], 0x69	        53	string3.h	FUNCTION_33	CALL_3
0x400256b	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002570	      0xe9f7fbffff	                           jmp 0x400216c	       123	d-demangle.c	FUNCTION_6
0x4002575	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4002578	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400257b	        0x4883c501	                              add rbp, 1	      1272	d-demangle.c	FUNCTION_26	SWITCH_1
0x400257f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002582	     0xf84c0020000	                            je 0x4002848	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002588	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400258c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002590	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002593	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002596	     0xf8ef4000000	                           jle 0x4002690	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400259c	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x400259f	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40025a4	      0xe9b3fbffff	                           jmp 0x400215c	       123	d-demangle.c	FUNCTION_6
0x40025a9	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40025b0	        0x488d7501	                      lea rsi, [rbp + 1]	      1316	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025b4	          0x4889df	                            mov rdi, rbx	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40025b7	      0xe8240a0000	       call sym.dlang_parse_arrayliteral	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40025bc	          0x4889c5	                            mov rbp, rax	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40025bf	      0xe9a8fbffff	                           jmp 0x400216c	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40025c4	         0xf1f4000	                         nop dword [rax]	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x40025c8	        0x488d7501	                      lea rsi, [rbp + 1]	      1325	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025cc	            0x31d2	                            xor edx, edx	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40025ce	          0x4889df	                            mov rdi, rbx	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40025d1	      0xe8ca030000	          call sym.dlang_parse_structlit	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40025d6	          0x4889c5	                            mov rbp, rax	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40025d9	      0xe98efbffff	                           jmp 0x400216c	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40025de	            0x6690	                                     nop	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x40025e0	            0x31ed	                            xor ebp, ebp	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025e2	      0xe91dfcffff	                           jmp 0x4002204	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025e7	    0x660f1f840000	                    nop word [rax + rax]	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025f0	            0x31ed	                            xor ebp, ebp	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025f2	      0xe975fbffff	                           jmp 0x400216c	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x40025f7	    0x660f1f840000	                    nop word [rax + rax]	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002600	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002603	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002608	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400260b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400260e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002611	      0xe800000000	                          call 0x4002616	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002616	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002619	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400261c	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400261f	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002622	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002626	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400262a	      0xe9ddfaffff	                           jmp 0x400210c	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400262f	              0x90	                                     nop	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002630	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002633	      0x448d6c1202	               lea r13d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002638	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400263b	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400263e	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002641	      0xe800000000	                          call 0x4002646	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002646	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002649	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400264c	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400264f	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002652	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002656	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400265a	      0xe9defbffff	                           jmp 0x400223d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400265f	              0x90	                                     nop	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002660	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002663	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002668	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400266b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400266e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002671	      0xe800000000	                          call 0x4002676	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002676	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002679	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400267c	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400267f	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002682	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002686	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400268a	      0xe968feffff	                           jmp 0x40024f7	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400268f	              0x90	                                     nop	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002690	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002693	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002698	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400269b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400269e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40026a1	      0xe800000000	                          call 0x40026a6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40026a6	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026a9	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026ac	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40026af	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026b2	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026b6	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026ba	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x40026bd	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40026c2	      0xe995faffff	                           jmp 0x400215c	       123	d-demangle.c	FUNCTION_6
0x40026c7	    0x660f1f840000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40026d0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026d3	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40026d8	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026db	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40026de	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40026e1	      0xe800000000	                          call 0x40026e6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40026e6	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026e9	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026ec	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40026ef	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026f2	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026f6	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026fa	      0xe930fdffff	                           jmp 0x400242f	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40026ff	              0x90	                                     nop	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002700	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002703	      0x448d6c0902	               lea r13d, [rcx + rcx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002708	          0x4989ce	                            mov r14, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400270b	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400270e	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002711	      0xe800000000	                          call 0x4002716	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002716	          0x4963ce	                        movsxd rcx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002719	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400271c	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400271f	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002722	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002726	        0x48894b08	                mov qword [rbx + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400272a	          0xc6012d	                    mov byte [rcx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x400272d	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002732	      0xe9bdfaffff	                           jmp 0x40021f4	       123	d-demangle.c	FUNCTION_6
0x4002737	    0x660f1f840000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4002740	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002743	      0x448d6c0908	               lea r13d, [rcx + rcx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002748	          0x4989ce	                            mov r14, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400274b	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400274e	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002751	      0xe800000000	                          call 0x4002756	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002756	          0x4963ce	                        movsxd rcx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002759	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400275c	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400275f	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002762	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002766	        0x48894b08	                mov qword [rbx + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400276a	    0xc7016e756c6c	            mov dword [rcx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x4002770	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4002775	      0xe972fbffff	                           jmp 0x40022ec	       123	d-demangle.c	FUNCTION_6
0x400277a	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4002780	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002783	      0x448d741208	               lea r14d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002788	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400278b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400278e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002791	      0xe800000000	                          call 0x4002796	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002796	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002799	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400279c	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400279f	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40027a2	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40027a6	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40027aa	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x40027b0	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x40027b5	      0xe9cefaffff	                           jmp 0x4002288	       123	d-demangle.c	FUNCTION_6
0x40027ba	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40027c0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40027c5	      0xe800000000	                          call 0x40027ca	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40027ca	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40027ce	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40027d1	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40027d5	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40027d9	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40027dc	      0xe95efbffff	                           jmp 0x400233f	        69	d-demangle.c	FUNCTION_1	IF_1
0x40027e1	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40027e8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40027ed	      0xe800000000	                          call 0x40027f2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40027f2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40027f6	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40027f9	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40027fd	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002801	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002804	      0xe903f9ffff	                           jmp 0x400210c	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002809	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002810	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002815	      0xe800000000	                          call 0x400281a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400281a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400281e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002821	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002825	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002829	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400282c	      0xe90cfaffff	                           jmp 0x400223d	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002831	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002838	              0x5b	                                 pop rbx	      1226	d-demangle.c	FUNCTION_24
0x4002839	            0x31c0	                            xor eax, eax	      1211	d-demangle.c	FUNCTION_24	IF_1
0x400283b	              0x5d	                                 pop rbp	      1226	d-demangle.c	FUNCTION_24
0x400283c	            0x415c	                                 pop r12	      1226	d-demangle.c	FUNCTION_24
0x400283e	            0x415d	                                 pop r13	      1226	d-demangle.c	FUNCTION_24
0x4002840	            0x415e	                                 pop r14	      1226	d-demangle.c	FUNCTION_24
0x4002842	              0xc3	                                     ret	      1226	d-demangle.c	FUNCTION_24
0x4002843	       0xf1f440000	                   nop dword [rax + rax]	      1226	d-demangle.c	FUNCTION_24
0x4002848	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400284d	      0xe800000000	                          call 0x4002852	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002852	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002856	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400285a	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400285d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002861	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002864	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x4002867	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x400286c	      0xe9ebf8ffff	                           jmp 0x400215c	       123	d-demangle.c	FUNCTION_6
0x4002871	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4002878	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400287d	      0xe800000000	                          call 0x4002882	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002882	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002886	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400288a	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400288d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002891	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002894	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x400289a	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x400289f	      0xe9e4f9ffff	                           jmp 0x4002288	       123	d-demangle.c	FUNCTION_6
0x40028a4	         0xf1f4000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40028a8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40028ad	      0xe800000000	                          call 0x40028b2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40028b2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40028b6	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40028b9	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40028bd	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40028c0	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40028c4	          0xc6012d	                    mov byte [rcx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x40028c7	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x40028cc	      0xe923f9ffff	                           jmp 0x40021f4	       123	d-demangle.c	FUNCTION_6
0x40028d1	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40028d8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40028dd	      0xe800000000	                          call 0x40028e2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40028e2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40028e6	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40028e9	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40028ed	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40028f1	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40028f4	      0xe936fbffff	                           jmp 0x400242f	        69	d-demangle.c	FUNCTION_1	IF_1
0x40028f9	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002900	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002905	      0xe800000000	                          call 0x400290a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400290a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400290e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002911	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002915	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002919	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400291c	      0xe9d6fbffff	                           jmp 0x40024f7	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002921	     0xf1f80000000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002928	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400292d	      0xe800000000	                          call 0x4002932	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002932	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002936	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002939	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400293d	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002940	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002944	    0xc7016e756c6c	            mov dword [rcx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x400294a	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x400294f	      0xe998f9ffff	                           jmp 0x40022ec	       123	d-demangle.c	FUNCTION_6
0x4002954	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002959	      0xe800000000	                          call 0x400295e	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400295e	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002962	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002965	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002969	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x400296d	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002970	      0xe92bfbffff	                           jmp 0x40024a0	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002975	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400297a	      0xe800000000	                          call 0x400297f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400297f	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002983	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002986	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400298a	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x400298e	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002991	      0xe9d2fbffff	                           jmp 0x4002568	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002996	            0x31c0	                            xor eax, eax	      1211	d-demangle.c	FUNCTION_24	IF_1
0x4002998	              0xc3	                                     ret	      1226	d-demangle.c	FUNCTION_24
dlang_demangle	functions,0:ELSE,1:FOR,0:WHILE,0:IF,5:CALL,8:DO,0:SWITCH,0	84
0x4007c00	              0x53	                                push rbx	      1615	d-demangle.c	FUNCTION_32
0x4007c01	        0x4883ec20	                           sub rsp, 0x20	      1615	d-demangle.c	FUNCTION_32
0x4007c05	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      1615	d-demangle.c	FUNCTION_32
0x4007c0e	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      1615	d-demangle.c	FUNCTION_32
0x4007c13	            0x31db	                            xor ebx, ebx	      1615	d-demangle.c	FUNCTION_32
0x4007c15	          0x4885ff	                           test rdi, rdi	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4007c18	     0xf8422010000	                            je 0x4007d40	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4007c1e	          0x803f00	                       cmp byte [rdi], 0	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4007c21	          0x4889f8	                            mov rax, rdi	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4007c24	     0xf8416010000	                            je 0x4007d40	      1619	d-demangle.c	FUNCTION_32	IF_1
0x4007c2a	      0xbf00000000	                              mov edi, 0	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4007c2f	      0xb902000000	                              mov ecx, 2	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4007c34	          0x4889c6	                            mov rsi, rax	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4007c37	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4007c39	     0xf8501010000	                           jne 0x4007d40	      1622	d-demangle.c	FUNCTION_32	IF_2	CALL_1
0x4007c3f	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x4007c48	    0x48c744240800	                  mov qword [rsp + 8], 0	        95	d-demangle.c	FUNCTION_3
0x4007c51	      0xbf00000000	                              mov edi, 0	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4007c56	    0x48c704240000	                      mov qword [rsp], 0	        95	d-demangle.c	FUNCTION_3
0x4007c5e	      0xb907000000	                              mov ecx, 7	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4007c63	          0x4889c6	                            mov rsi, rax	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4007c66	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4007c68	     0xf8482000000	                            je 0x4007cf0	      1627	d-demangle.c	FUNCTION_32	IF_3	CALL_3
0x4007c6e	            0x31d2	                            xor edx, edx	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4007c70	          0x4889e7	                            mov rdi, rsp	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4007c73	          0x4889c6	                            mov rsi, rax	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4007c76	      0xe835f6ffff	             call sym.dlang_parse_mangle	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4007c7b	          0x4885c0	                           test rax, rax	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4007c7e	        0x488b3c24	                    mov rdi, qword [rsp]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4007c82	     0xf84a8000000	                            je 0x4007d30	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4007c88	      0x488b542408	                mov rdx, qword [rsp + 8]	      1633	d-demangle.c	FUNCTION_32	ELSE_1	IF_4	CALL_5
0x4007c8d	          0x4839d7	                            cmp rdi, rdx	       101	d-demangle.c	FUNCTION_4	IF_1
0x4007c90	     0xf84aa000000	                            je 0x4007d40	       101	d-demangle.c	FUNCTION_4	IF_1
0x4007c96	          0x4889d3	                            mov rbx, rdx	       105	d-demangle.c	FUNCTION_4
0x4007c99	          0x4829fb	                            sub rbx, rdi	       105	d-demangle.c	FUNCTION_4
0x4007c9c	            0x85db	                           test ebx, ebx	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x4007c9e	     0xf8e9c000000	                           jle 0x4007d40	      1637	d-demangle.c	FUNCTION_32	IF_5	CALL_7
0x4007ca4	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007ca7	     0xf849b000000	                            je 0x4007d48	        62	d-demangle.c	FUNCTION_1	IF_1
0x4007cad	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007cb2	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007cb5	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007cb8	            0x7f16	                            jg 0x4007cd0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007cba	        0x8d741b02	                lea esi, [rbx + rbx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007cbe	          0x4863f6	                         movsxd rsi, esi	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007cc1	      0xe800000000	                          call 0x4007cc6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007cc6	          0x4863d3	                         movsxd rdx, ebx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007cc9	        0x48890424	                    mov qword [rsp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4007ccd	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4007cd0	          0xc60200	                       mov byte [rdx], 0	      1640	d-demangle.c	FUNCTION_32	IF_5
0x4007cd3	        0x488b0424	                    mov rax, qword [rsp]	      1641	d-demangle.c	FUNCTION_32	IF_5
0x4007cd7	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1645	d-demangle.c	FUNCTION_32
0x4007cdc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1645	d-demangle.c	FUNCTION_32
0x4007ce5	            0x7577	                           jne 0x4007d5e	      1645	d-demangle.c	FUNCTION_32
0x4007ce7	        0x4883c420	                           add rsp, 0x20	      1645	d-demangle.c	FUNCTION_32
0x4007ceb	              0x5b	                                 pop rbx	      1645	d-demangle.c	FUNCTION_32
0x4007cec	              0xc3	                                     ret	      1645	d-demangle.c	FUNCTION_32
0x4007ced	           0xf1f00	                         nop dword [rax]	      1645	d-demangle.c	FUNCTION_32
0x4007cf0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007cf5	      0xe800000000	                          call 0x4007cfa	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007cfa	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007cfe	        0x48890424	                    mov qword [rsp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007d02	    0xc70044206d61	            mov dword [rax], 0x616d2044 	        53	string3.h	FUNCTION_33	CALL_3
0x4007d08	          0x4889c7	                            mov rdi, rax	       123	d-demangle.c	FUNCTION_6
0x4007d0b	      0x4889542410	             mov qword [rsp + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4007d10	      0xba696e0000	                         mov edx, 0x6e69	        53	string3.h	FUNCTION_33	CALL_3
0x4007d15	        0x66895004	                  mov word [rax + 4], dx	        53	string3.h	FUNCTION_33	CALL_3
0x4007d19	        0x488d5006	                      lea rdx, [rax + 6]	       123	d-demangle.c	FUNCTION_6
0x4007d1d	      0x4889542408	                mov qword [rsp + 8], rdx	       123	d-demangle.c	FUNCTION_6
0x4007d22	      0xe966ffffff	                           jmp 0x4007c8d	       123	d-demangle.c	FUNCTION_6
0x4007d27	    0x660f1f840000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4007d30	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x4007d33	     0xf844fffffff	                            je 0x4007c88	        85	d-demangle.c	FUNCTION_2	IF_1
0x4007d39	      0xe800000000	                          call 0x4007d3e	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4007d3e	            0x6690	                                     nop	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x4007d40	            0x31c0	                            xor eax, eax	      1620	d-demangle.c	FUNCTION_32	IF_1
0x4007d42	            0xeb93	                           jmp 0x4007cd7	      1620	d-demangle.c	FUNCTION_32	IF_1
0x4007d44	         0xf1f4000	                         nop dword [rax]	      1620	d-demangle.c	FUNCTION_32	IF_1
0x4007d48	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007d4d	      0xe800000000	                          call 0x4007d52	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007d52	        0x48890424	                    mov qword [rsp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007d56	          0x4889c2	                            mov rdx, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007d59	      0xe972ffffff	                           jmp 0x4007cd0	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4007d5e	      0xe800000000	         call section_end..text.unlikely	      1645	d-demangle.c	FUNCTION_32
dlang_function_args	functions,0:ELSE,0:FOR,0:WHILE,1:IF,4:CALL,10:DO,0:SWITCH,2	363
0x40051d0	          0x4885f6	                           test rsi, rsi	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x40051d3	     0xf8477040000	                            je 0x4005650	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x40051d9	            0x4157	                                push r15	       470	d-demangle.c	FUNCTION_17
0x40051db	            0x4156	                                push r14	       470	d-demangle.c	FUNCTION_17
0x40051dd	            0x4155	                                push r13	       470	d-demangle.c	FUNCTION_17
0x40051df	            0x4154	                                push r12	       470	d-demangle.c	FUNCTION_17
0x40051e1	              0x55	                                push rbp	       470	d-demangle.c	FUNCTION_17
0x40051e2	              0x53	                                push rbx	       470	d-demangle.c	FUNCTION_17
0x40051e3	          0x4889f3	                            mov rbx, rsi	       470	d-demangle.c	FUNCTION_17
0x40051e6	        0x4883ec08	                              sub rsp, 8	       470	d-demangle.c	FUNCTION_17
0x40051ea	           0xfb606	                   movzx eax, byte [rsi]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x40051ed	            0x84c0	                             test al, al	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x40051ef	            0x7471	                            je 0x4005262	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x40051f1	          0x4889fd	                            mov rbp, rdi	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x40051f4	          0x4531e4	                          xor r12d, r12d	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x40051f7	            0x3c59	                            cmp al, 0x59	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40051f9	     0xf84f9000000	                            je 0x40052f8	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40051ff	            0x3c5a	                            cmp al, 0x5a	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4005201	     0xf84d9000000	                            je 0x40052e0	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4005207	            0x3c58	                            cmp al, 0x58	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4005209	            0x7465	                            je 0x4005270	       475	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400520b	          0x4d85e4	                           test r12, r12	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x400520e	     0xf850c020000	                           jne 0x4005420	       492	d-demangle.c	FUNCTION_17	WHILE_1	IF_2
0x4005214	            0x3c4d	                            cmp al, 0x4d	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4005216	     0xf84c4030000	                            je 0x40055e0	       495	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x400521c	            0x3c4e	                            cmp al, 0x4e	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x400521e	     0xf843c020000	                            je 0x4005460	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4005224	            0x3c4b	                            cmp al, 0x4b	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4005226	     0xf8474010000	                            je 0x40053a0	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x400522c	            0x3c4c	                            cmp al, 0x4c	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x400522e	     0xf84ac020000	                            je 0x40054e0	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4005234	            0x3c4a	                            cmp al, 0x4a	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4005236	     0xf84a4010000	                            je 0x40053e0	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x400523c	         0xf1f4000	                         nop dword [rax]	       507	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x4005240	          0x4889de	                            mov rsi, rbx	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4005243	          0x4889ef	                            mov rdi, rbp	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4005246	      0xe855e3ffff	                     call sym.dlang_type	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x400524b	          0x4885c0	                           test rax, rax	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x400524e	          0x4889c3	                            mov rbx, rax	       522	d-demangle.c	FUNCTION_17	WHILE_1	CALL_10
0x4005251	     0xf84d3040000	                            je 0x400572a	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4005257	           0xfb600	                   movzx eax, byte [rax]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x400525a	        0x4983c401	                              add r12, 1	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x400525e	            0x84c0	                             test al, al	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4005260	            0x7595	                           jne 0x40051f7	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4005262	          0x4889d8	                            mov rax, rbx	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4005265	            0xeb6a	                           jmp 0x40052d1	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4005267	    0x660f1f840000	                    nop word [rax + rax]	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4005270	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005274	        0x4883c301	                              add rbx, 1	       478	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4005278	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400527b	     0xf848d000000	                            je 0x400530e	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005281	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005285	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005289	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400528c	        0x4883f802	                              cmp rax, 2	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005290	            0x7f2b	                            jg 0x40052bd	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005292	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005295	      0x448d6c1206	               lea r13d, [rdx + rdx + 6]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400529a	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400529d	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40052a0	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40052a3	      0xe800000000	                          call 0x40052a8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40052a8	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40052ab	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40052ae	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40052b2	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40052b5	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40052b9	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40052bd	      0xbf2e2e0000	                         mov edi, 0x2e2e	        53	string3.h	FUNCTION_33	CALL_3
0x40052c2	        0xc642022e	                mov byte [rdx + 2], 0x2e	        53	string3.h	FUNCTION_33	CALL_3
0x40052c6	          0x4889d8	                            mov rax, rbx	       486	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40052c9	          0x66893a	                      mov word [rdx], di	        53	string3.h	FUNCTION_33	CALL_3
0x40052cc	      0x4883450803	                  add qword [rbp + 8], 3	       123	d-demangle.c	FUNCTION_6
0x40052d1	        0x4883c408	                              add rsp, 8	       526	d-demangle.c	FUNCTION_17
0x40052d5	              0x5b	                                 pop rbx	       526	d-demangle.c	FUNCTION_17
0x40052d6	              0x5d	                                 pop rbp	       526	d-demangle.c	FUNCTION_17
0x40052d7	            0x415c	                                 pop r12	       526	d-demangle.c	FUNCTION_17
0x40052d9	            0x415d	                                 pop r13	       526	d-demangle.c	FUNCTION_17
0x40052db	            0x415e	                                 pop r14	       526	d-demangle.c	FUNCTION_17
0x40052dd	            0x415f	                                 pop r15	       526	d-demangle.c	FUNCTION_17
0x40052df	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
0x40052e0	        0x4883c408	                              add rsp, 8	       526	d-demangle.c	FUNCTION_17
0x40052e4	        0x488d4301	                      lea rax, [rbx + 1]	       489	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40052e8	              0x5b	                                 pop rbx	       526	d-demangle.c	FUNCTION_17
0x40052e9	              0x5d	                                 pop rbp	       526	d-demangle.c	FUNCTION_17
0x40052ea	            0x415c	                                 pop r12	       526	d-demangle.c	FUNCTION_17
0x40052ec	            0x415d	                                 pop r13	       526	d-demangle.c	FUNCTION_17
0x40052ee	            0x415e	                                 pop r14	       526	d-demangle.c	FUNCTION_17
0x40052f0	            0x415f	                                 pop r15	       526	d-demangle.c	FUNCTION_17
0x40052f2	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
0x40052f3	       0xf1f440000	                   nop dword [rax + rax]	       526	d-demangle.c	FUNCTION_17
0x40052f8	        0x4883c301	                              add rbx, 1	       482	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40052fc	          0x4d85e4	                           test r12, r12	       483	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x40052ff	            0x752f	                           jne 0x4005330	       483	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4005301	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005305	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005308	     0xf8573ffffff	                           jne 0x4005281	        62	d-demangle.c	FUNCTION_1	IF_1
0x400530e	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005313	      0xe800000000	                          call 0x4005318	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005318	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400531c	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005320	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005324	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005328	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400532b	            0xeb90	                           jmp 0x40052bd	        69	d-demangle.c	FUNCTION_1	IF_1
0x400532d	           0xf1f00	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005330	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005334	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005337	     0xf841b030000	                            je 0x4005658	        62	d-demangle.c	FUNCTION_1	IF_1
0x400533d	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005341	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005345	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005348	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400534c	            0x7f2b	                            jg 0x4005379	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400534e	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005351	      0x448d6c1204	               lea r13d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005356	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005359	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400535c	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400535f	      0xe800000000	                          call 0x4005364	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005364	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005367	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400536a	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400536e	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005371	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005375	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005379	    0x41b82c200000	                         mov r8d, 0x202c	        53	string3.h	FUNCTION_33	CALL_3
0x400537f	        0x66448902	                     mov word [rdx], r8w	        53	string3.h	FUNCTION_33	CALL_3
0x4005383	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005387	      0x4883450802	                  add qword [rbp + 8], 2	       123	d-demangle.c	FUNCTION_6
0x400538c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400538f	     0xf85ecfeffff	                           jne 0x4005281	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005395	      0xe974ffffff	                           jmp 0x400530e	        62	d-demangle.c	FUNCTION_1	IF_1
0x400539a	    0x660f1f440000	                    nop word [rax + rax]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40053a0	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40053a4	        0x4883c301	                              add rbx, 1	       514	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40053a8	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40053ab	     0xf84f1020000	                            je 0x40056a2	        62	d-demangle.c	FUNCTION_1	IF_1
0x40053b1	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40053b5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40053b9	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40053bc	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40053c0	     0xf8eba010000	                           jle 0x4005580	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40053c6	    0xc70272656620	            mov dword [rdx], 0x20666572 	        53	string3.h	FUNCTION_33	CALL_3
0x40053cc	      0x4883450804	                  add qword [rbp + 8], 4	       123	d-demangle.c	FUNCTION_6
0x40053d1	      0xe96afeffff	                           jmp 0x4005240	       123	d-demangle.c	FUNCTION_6
0x40053d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40053e0	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40053e4	        0x4883c301	                              add rbx, 1	       510	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40053e8	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40053eb	     0xf84f5020000	                            je 0x40056e6	        62	d-demangle.c	FUNCTION_1	IF_1
0x40053f1	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40053f5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40053f9	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40053fc	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005400	     0xf8e4a010000	                           jle 0x4005550	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005406	    0xc7026f757420	            mov dword [rdx], 0x2074756f 	        53	string3.h	FUNCTION_33	CALL_3
0x400540c	      0x4883450804	                  add qword [rbp + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4005411	      0xe92afeffff	                           jmp 0x4005240	       123	d-demangle.c	FUNCTION_6
0x4005416	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4005420	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005424	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005427	     0xf8453020000	                            je 0x4005680	        62	d-demangle.c	FUNCTION_1	IF_1
0x400542d	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005431	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005435	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005438	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400543c	     0xf8ede000000	                           jle 0x4005520	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005442	      0xbe2c200000	                         mov esi, 0x202c	        53	string3.h	FUNCTION_33	CALL_3
0x4005447	          0x668932	                      mov word [rdx], si	        53	string3.h	FUNCTION_33	CALL_3
0x400544a	      0x4883450802	                  add qword [rbp + 8], 2	       123	d-demangle.c	FUNCTION_6
0x400544f	           0xfb603	                   movzx eax, byte [rbx]	       123	d-demangle.c	FUNCTION_6
0x4005452	      0xe9bdfdffff	                           jmp 0x4005214	       123	d-demangle.c	FUNCTION_6
0x4005457	    0x660f1f840000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4005460	        0x807b016b	                cmp byte [rbx + 1], 0x6b	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4005464	     0xf85d6fdffff	                           jne 0x4005240	       501	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x400546a	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400546e	        0x4c8d7b02	                      lea r15, [rbx + 2]	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x4005472	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4005475	     0xf84b6020000	                            je 0x4005731	        62	d-demangle.c	FUNCTION_1	IF_1
0x400547b	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400547f	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005483	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005486	        0x4883f806	                              cmp rax, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400548a	            0x7f2b	                            jg 0x40054b7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400548c	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400548f	      0x448d74120e	            lea r14d, [rdx + rdx + 0xe] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005494	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005497	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400549a	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400549d	      0xe800000000	                          call 0x40054a2	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40054a2	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40054a5	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40054a8	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40054ac	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40054af	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40054b3	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40054b7	      0xb8726e0000	                         mov eax, 0x6e72	        53	string3.h	FUNCTION_33	CALL_3
0x40054bc	    0xc70272657475	            mov dword [rdx], 0x75746572 	        53	string3.h	FUNCTION_33	CALL_3
0x40054c2	        0xc6420620	                mov byte [rdx + 6], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x40054c6	        0x66894204	                  mov word [rdx + 4], ax	        53	string3.h	FUNCTION_33	CALL_3
0x40054ca	      0x4883450807	                  add qword [rbp + 8], 7	       123	d-demangle.c	FUNCTION_6
0x40054cf	         0xfb64302	               movzx eax, byte [rbx + 2]	       123	d-demangle.c	FUNCTION_6
0x40054d3	          0x4c89fb	                            mov rbx, r15	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x40054d6	      0xe949fdffff	                           jmp 0x4005224	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x40054db	       0xf1f440000	                   nop dword [rax + rax]	       503	d-demangle.c	FUNCTION_17	WHILE_1	IF_4
0x40054e0	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40054e4	        0x4883c301	                              add rbx, 1	       518	d-demangle.c	FUNCTION_17	WHILE_1	SWITCH_2
0x40054e8	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40054eb	     0xf84d3010000	                            je 0x40056c4	        62	d-demangle.c	FUNCTION_1	IF_1
0x40054f1	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40054f5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40054f9	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40054fc	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005500	     0xf8eaa000000	                           jle 0x40055b0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005506	    0xc7026c617a79	            mov dword [rdx], 0x797a616c 	        53	string3.h	FUNCTION_33	CALL_3
0x400550c	        0xc6420420	                mov byte [rdx + 4], 0x20	        53	string3.h	FUNCTION_33	CALL_3
0x4005510	      0x4883450805	                  add qword [rbp + 8], 5	       123	d-demangle.c	FUNCTION_6
0x4005515	      0xe926fdffff	                           jmp 0x4005240	       123	d-demangle.c	FUNCTION_6
0x400551a	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4005520	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005523	      0x448d741204	               lea r14d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005528	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400552b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400552e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005531	      0xe800000000	                          call 0x4005536	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005536	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005539	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400553c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005540	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005543	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005547	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400554b	      0xe9f2feffff	                           jmp 0x4005442	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005550	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005553	      0x448d741208	               lea r14d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005558	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400555b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400555e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005561	      0xe800000000	                          call 0x4005566	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005566	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005569	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400556c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005570	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005573	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005577	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400557b	      0xe986feffff	                           jmp 0x4005406	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005580	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005583	      0x448d741208	               lea r14d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005588	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400558b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400558e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005591	      0xe800000000	                          call 0x4005596	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005596	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005599	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400559c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40055a0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055a3	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055a7	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055ab	      0xe916feffff	                           jmp 0x40053c6	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055b0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055b3	      0x448d74120a	            lea r14d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40055b8	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055bb	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40055be	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40055c1	      0xe800000000	                          call 0x40055c6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40055c6	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055c9	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055cc	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40055d0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055d3	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055d7	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055db	      0xe926ffffff	                           jmp 0x4005506	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055e0	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40055e4	        0x4c8d7b01	                      lea r15, [rbx + 1]	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x40055e8	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40055eb	     0xf8417010000	                            je 0x4005708	        62	d-demangle.c	FUNCTION_1	IF_1
0x40055f1	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055f5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055f9	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40055fc	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005600	            0x7f2b	                            jg 0x400562d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005602	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005605	      0x448d74120c	            lea r14d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400560a	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400560d	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005610	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005613	      0xe800000000	                          call 0x4005618	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005618	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400561b	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400561e	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4005622	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005625	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005629	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400562d	      0xb965200000	                         mov ecx, 0x2065	        53	string3.h	FUNCTION_33	CALL_3
0x4005632	    0xc70273636f70	            mov dword [rdx], 0x706f6373 	        53	string3.h	FUNCTION_33	CALL_3
0x4005638	        0x66894a04	                  mov word [rdx + 4], cx	        53	string3.h	FUNCTION_33	CALL_3
0x400563c	      0x4883450806	                  add qword [rbp + 8], 6	       123	d-demangle.c	FUNCTION_6
0x4005641	         0xfb64301	               movzx eax, byte [rbx + 1]	       123	d-demangle.c	FUNCTION_6
0x4005645	          0x4c89fb	                            mov rbx, r15	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4005648	      0xe9cffbffff	                           jmp 0x400521c	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x400564d	           0xf1f00	                         nop dword [rax]	       497	d-demangle.c	FUNCTION_17	WHILE_1	IF_3
0x4005650	            0x31c0	                            xor eax, eax	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4005652	              0xc3	                                     ret	       526	d-demangle.c	FUNCTION_17
0x4005653	       0xf1f440000	                   nop dword [rax + rax]	       526	d-demangle.c	FUNCTION_17
0x4005658	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400565d	      0xe800000000	                          call 0x4005662	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005662	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005666	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400566a	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400566e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005672	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005675	      0xe9fffcffff	                           jmp 0x4005379	        69	d-demangle.c	FUNCTION_1	IF_1
0x400567a	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005680	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005685	      0xe800000000	                          call 0x400568a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400568a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400568e	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005692	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005696	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x400569a	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400569d	      0xe9a0fdffff	                           jmp 0x4005442	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056a2	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056a7	      0xe800000000	                          call 0x40056ac	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056ac	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056b0	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056b4	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056b8	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056bc	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056bf	      0xe902fdffff	                           jmp 0x40053c6	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056c4	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056c9	      0xe800000000	                          call 0x40056ce	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056ce	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056d2	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056d6	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056da	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056de	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056e1	      0xe920feffff	                           jmp 0x4005506	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056e6	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056eb	      0xe800000000	                          call 0x40056f0	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056f0	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40056f4	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056f8	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40056fc	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005700	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005703	      0xe9fefcffff	                           jmp 0x4005406	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005708	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400570d	      0xe800000000	                          call 0x4005712	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005712	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005716	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400571a	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400571e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005722	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005725	      0xe903ffffff	                           jmp 0x400562d	        69	d-demangle.c	FUNCTION_1	IF_1
0x400572a	            0x31c0	                            xor eax, eax	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x400572c	      0xe9a0fbffff	                           jmp 0x40052d1	       473	d-demangle.c	FUNCTION_17	WHILE_1
0x4005731	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005736	      0xe800000000	                          call 0x400573b	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400573b	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x400573f	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005743	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005747	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x400574b	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400574e	      0xe964fdffff	                           jmp 0x40054b7	        69	d-demangle.c	FUNCTION_1	IF_1
dlang_type	functions,0:ELSE,2:FOR,0:WHILE,1:IF,4:CALL,69:DO,0:SWITCH,2	1852
0x40035a0	            0x4157	                                push r15	       532	d-demangle.c	FUNCTION_18
0x40035a2	            0x4156	                                push r14	       532	d-demangle.c	FUNCTION_18
0x40035a4	            0x4155	                                push r13	       532	d-demangle.c	FUNCTION_18
0x40035a6	            0x4154	                                push r12	       532	d-demangle.c	FUNCTION_18
0x40035a8	              0x55	                                push rbp	       532	d-demangle.c	FUNCTION_18
0x40035a9	              0x53	                                push rbx	       532	d-demangle.c	FUNCTION_18
0x40035aa	        0x4883ec38	                           sub rsp, 0x38	       532	d-demangle.c	FUNCTION_18
0x40035ae	    0x64488b042528	                mov rax, qword fs:[0x28]	       532	d-demangle.c	FUNCTION_18
0x40035b7	      0x4889442428	             mov qword [rsp + 0x28], rax	       532	d-demangle.c	FUNCTION_18
0x40035bc	            0x31c0	                            xor eax, eax	       532	d-demangle.c	FUNCTION_18
0x40035be	          0x4885f6	                           test rsi, rsi	       533	d-demangle.c	FUNCTION_18	IF_1
0x40035c1	            0x741d	                            je 0x40035e0	       533	d-demangle.c	FUNCTION_18	IF_1
0x40035c3	           0xfb606	                   movzx eax, byte [rsi]	       533	d-demangle.c	FUNCTION_18	IF_1
0x40035c6	            0x84c0	                             test al, al	       533	d-demangle.c	FUNCTION_18	IF_1
0x40035c8	            0x7416	                            je 0x40035e0	       533	d-demangle.c	FUNCTION_18	IF_1
0x40035ca	          0x83e841	                           sub eax, 0x41	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035cd	            0x3c39	                            cmp al, 0x39	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035cf	            0x770f	                            ja 0x40035e0	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035d1	           0xfb6c0	                           movzx eax, al	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035d4	          0x4889fb	                            mov rbx, rdi	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035d7	    0xff24c5000000	                       jmp qword [rax*8]	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035de	            0x6690	                                     nop	       536	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035e0	            0x31c0	                            xor eax, eax	       774	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035e2	    0x660f1f440000	                    nop word [rax + rax]	       774	d-demangle.c	FUNCTION_18	SWITCH_1
0x40035e8	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       779	d-demangle.c	FUNCTION_18
0x40035ed	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       779	d-demangle.c	FUNCTION_18
0x40035f6	     0xf85a01b0000	                           jne 0x400519c	       779	d-demangle.c	FUNCTION_18
0x40035fc	        0x4883c438	                           add rsp, 0x38	       779	d-demangle.c	FUNCTION_18
0x4003600	              0x5b	                                 pop rbx	       779	d-demangle.c	FUNCTION_18
0x4003601	              0x5d	                                 pop rbp	       779	d-demangle.c	FUNCTION_18
0x4003602	            0x415c	                                 pop r12	       779	d-demangle.c	FUNCTION_18
0x4003604	            0x415d	                                 pop r13	       779	d-demangle.c	FUNCTION_18
0x4003606	            0x415e	                                 pop r14	       779	d-demangle.c	FUNCTION_18
0x4003608	            0x415f	                                 pop r15	       779	d-demangle.c	FUNCTION_18
0x400360a	              0xc3	                                     ret	       779	d-demangle.c	FUNCTION_18
0x400360b	       0xf1f440000	                   nop dword [rax + rax]	       779	d-demangle.c	FUNCTION_18
0x4003610	         0xfb64e01	               movzx ecx, byte [rsi + 1]	       779	d-demangle.c	FUNCTION_18
0x4003614	        0x488d4601	                      lea rax, [rsi + 1]	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003618	          0x83e946	                           sub ecx, 0x46	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x400361b	          0x80f913	                            cmp cl, 0x13	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x400361e	     0xf87dc110000	                            ja 0x4004800	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003624	      0xba01000000	                              mov edx, 1	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003629	          0x48d3e2	                             shl rdx, cl	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x400362c	    0xf7c201900b00	                       test edx, 0xb9001	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003632	     0xf84c8110000	                            je 0x4004800	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003638	          0x4889c6	                            mov rsi, rax	       618	d-demangle.c	FUNCTION_18	SWITCH_1
0x400363b	          0x4889df	                            mov rdi, rbx	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x400363e	      0xe81d210000	            call sym.dlang_function_type	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4003643	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003646	          0x4889c5	                            mov rbp, rax	       633	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_34
0x4003649	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400364c	     0xf8405150000	                            je 0x4004b57	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003652	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003656	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400365a	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400365d	        0x4883f807	                              cmp rax, 7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003661	            0x7f2a	                            jg 0x400368d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003663	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003666	      0x448d6c1210	           lea r13d, [rdx + rdx + 0x10] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400366b	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400366e	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003671	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003674	      0xe800000000	                          call 0x4003679	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003679	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400367c	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400367f	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003682	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003685	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003689	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400368d	    0x48b866756e63	          movabs rax, 0x6e6f6974636e7566	        53	string3.h	FUNCTION_33	CALL_3
0x4003697	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x400369a	          0x4889e8	                            mov rax, rbp	       635	d-demangle.c	FUNCTION_18	SWITCH_1
0x400369d	      0x4883430808	                  add qword [rbx + 8], 8	       123	d-demangle.c	FUNCTION_6
0x40036a2	      0xe941ffffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x40036a7	    0x660f1f840000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40036b0	          0x4889f5	                            mov rbp, rsi	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036b3	        0x4883c501	                              add rbp, 1	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036b7	     0xf84a01a0000	                            je 0x400515d	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036bd	         0xfb65601	               movzx edx, byte [rsi + 1]	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036c1	            0x84d2	                             test dl, dl	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036c3	     0xf84941a0000	                            je 0x400515d	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036c9	            0x31c9	                            xor ecx, ecx	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036cb	            0x31c0	                            xor eax, eax	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036cd	          0x4531e4	                          xor r12d, r12d	       315	d-demangle.c	FUNCTION_14	IF_1
0x40036d0	          0x80fa4f	                            cmp dl, 0x4f	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40036d3	     0xf8439130000	                            je 0x4004a12	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40036d9	     0xf8e89110000	                           jle 0x4004868	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40036df	          0x80fa78	                            cmp dl, 0x78	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40036e2	     0xf84db120000	                            je 0x40049c3	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40036e8	          0x80fa79	                            cmp dl, 0x79	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40036eb	     0xf858f130000	                           jne 0x4004a80	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x40036f1	        0x4883c501	                              add rbp, 1	       325	d-demangle.c	FUNCTION_14	SWITCH_1
0x40036f5	          0x4d85e4	                           test r12, r12	        62	d-demangle.c	FUNCTION_1	IF_1
0x40036f8	     0xf84e4190000	                            je 0x40050e2	        62	d-demangle.c	FUNCTION_1	IF_1
0x40036fe	          0x4829c1	                            sub rcx, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003701	        0x4883f909	                              cmp rcx, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003705	            0x7f1e	                            jg 0x4003725	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003707	          0x4c29e0	                            sub rax, r12	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400370a	          0x4c89e7	                            mov rdi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400370d	        0x8d740014	            lea esi, [rax + rax + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003711	          0x4989c5	                            mov r13, rax	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003714	          0x4863f6	                         movsxd rsi, esi	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003717	      0xe800000000	                          call 0x400371c	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400371c	          0x4989c4	                            mov r12, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400371f	          0x4963c5	                        movsxd rax, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003722	          0x4c01e0	                            add rax, r12	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003725	    0x48b920696d6d	          movabs rcx, 0x626174756d6d6920	        53	string3.h	FUNCTION_33	CALL_3
0x400372f	      0xba6c650000	                         mov edx, 0x656c	        53	string3.h	FUNCTION_33	CALL_3
0x4003734	        0x4883c00a	                            add rax, 0xa	       123	d-demangle.c	FUNCTION_6
0x4003738	        0x488948f6	              mov qword [rax - 0xa], rcx	        53	string3.h	FUNCTION_33	CALL_3
0x400373c	        0x668950fe	                  mov word [rax - 2], dx	        53	string3.h	FUNCTION_33	CALL_3
0x4003740	          0x4889ee	                            mov rsi, rbp	       327	d-demangle.c	FUNCTION_14	SWITCH_1
0x4003743	          0x4189c5	                           mov r13d, eax	       105	d-demangle.c	FUNCTION_4
0x4003746	          0x4529e5	                          sub r13d, r12d	       105	d-demangle.c	FUNCTION_4
0x4003749	          0x4c39e0	                            cmp rax, r12	       105	d-demangle.c	FUNCTION_4
0x400374c	      0xb800000000	                              mov eax, 0	       105	d-demangle.c	FUNCTION_4
0x4003751	        0x440f44e8	                         cmove r13d, eax	       105	d-demangle.c	FUNCTION_4
0x4003755	          0x4889df	                            mov rdi, rbx	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x4003758	      0xe803200000	            call sym.dlang_function_type	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x400375d	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003760	          0x4889c5	                            mov rbp, rax	       653	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_40
0x4003763	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003766	     0xf840c140000	                            je 0x4004b78	        62	d-demangle.c	FUNCTION_1	IF_1
0x400376c	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003770	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003774	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003777	        0x4883f807	                              cmp rax, 7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400377b	            0x7f2a	                            jg 0x40037a7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400377d	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003780	      0x448d7c1210	           lea r15d, [rdx + rdx + 0x10] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003785	          0x4989d6	                            mov r14, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003788	          0x4d63ff	                        movsxd r15, r15d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400378b	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400378e	      0xe800000000	                          call 0x4003793	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003793	          0x4963d6	                        movsxd rdx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003796	          0x4901c7	                            add r15, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003799	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400379c	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400379f	        0x4c897b10	             mov qword [rbx + 0x10], r15	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40037a3	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40037a7	    0x48b864656c65	          movabs rax, 0x65746167656c6564	        53	string3.h	FUNCTION_33	CALL_3
0x40037b1	          0x4585ed	                         test r13d, r13d	       129	d-demangle.c	FUNCTION_7	IF_1
0x40037b4	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x40037b7	        0x488b4308	                mov rax, qword [rbx + 8]	       123	d-demangle.c	FUNCTION_6
0x40037bb	        0x488d7808	                      lea rdi, [rax + 8]	       123	d-demangle.c	FUNCTION_6
0x40037bf	        0x48897b08	                mov qword [rbx + 8], rdi	       123	d-demangle.c	FUNCTION_6
0x40037c3	     0xf85bf120000	                           jne 0x4004a88	       129	d-demangle.c	FUNCTION_7	IF_1
0x40037c9	          0x4d85e4	                           test r12, r12	        85	d-demangle.c	FUNCTION_2	IF_1
0x40037cc	            0x7408	                            je 0x40037d6	        85	d-demangle.c	FUNCTION_2	IF_1
0x40037ce	          0x4c89e7	                            mov rdi, r12	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40037d1	      0xe800000000	                          call 0x40037d6	        87	d-demangle.c	FUNCTION_2	IF_1	CALL_1
0x40037d6	          0x4889e8	                            mov rax, rbp	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40037d9	      0xe90afeffff	                           jmp 0x40035e8	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40037de	            0x6690	                                     nop	       772	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40037e0	        0x4883c601	                              add rsi, 1	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40037e4	      0xba02000000	                              mov edx, 2	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40037e9	      0xe8d2300000	          call sym.dlang_parse_qualified	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40037ee	      0xe9f5fdffff	                           jmp 0x40035e8	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40037f3	       0xf1f440000	                   nop dword [rax + rax]	       642	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_36
0x40037f8	          0x4889f5	                            mov rbp, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40037fb	        0x4883c501	                              add rbp, 1	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40037ff	     0xf84dbfdffff	                            je 0x40035e0	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4003805	         0xfbe4601	               movsx eax, byte [rsi + 1]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4003809	           0xfb6d0	                           movzx edx, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400380c	    0xf68412000000	                test byte [rdx + rdx], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4003814	     0xf84c6fdffff	                            je 0x40035e0	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400381a	          0x4531e4	                          xor r12d, r12d	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x400381d	           0xf1f00	                         nop dword [rax]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x4003820	          0x83e830	                           sub eax, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4003823	        0x4b8d14a4	                  lea rdx, [r12 + r12*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x4003827	        0x4883c501	                              add rbp, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x400382b	            0x4898	                                    cdqe	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x400382d	        0x4c8d2450	                  lea r12, [rax + rdx*2]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x4003831	         0xfbe4500	                   movsx eax, byte [rbp]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4003835	           0xfb6c8	                           movzx ecx, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4003838	    0xf68409000000	                test byte [rcx + rcx], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4003840	            0x75de	                           jne 0x4003820	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4003842	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x4003844	     0xf8496fdffff	                            je 0x40035e0	       220	d-demangle.c	FUNCTION_10	IF_3
0x400384a	          0x4c89e0	                            mov rax, r12	       220	d-demangle.c	FUNCTION_10	IF_3
0x400384d	        0x48c1e83f	                           shr rax, 0x3f	       220	d-demangle.c	FUNCTION_10	IF_3
0x4003851	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x4003853	     0xf8587fdffff	                           jne 0x40035e0	       220	d-demangle.c	FUNCTION_10	IF_3
0x4003859	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400385c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400385f	     0xf8433170000	                            je 0x4004f98	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003865	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003869	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400386d	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003870	        0x4883f806	                              cmp rax, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003874	            0x7f2a	                            jg 0x40038a0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003876	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003879	      0x448d74120e	            lea r14d, [rdx + rdx + 0xe] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400387e	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003881	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003884	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003887	      0xe800000000	                          call 0x400388c	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400388c	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400388f	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003892	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003895	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003898	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400389c	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40038a0	    0x41bd65210000	                        mov r13d, 0x2165	        53	string3.h	FUNCTION_33	CALL_3
0x40038a6	    0xc7025475706c	            mov dword [rdx], 0x6c707554 	        53	string3.h	FUNCTION_33	CALL_3
0x40038ac	        0xc6420628	                mov byte [rdx + 6], 0x28	        53	string3.h	FUNCTION_33	CALL_3
0x40038b0	      0x6644896a04	                mov word [rdx + 4], r13w	        53	string3.h	FUNCTION_33	CALL_3
0x40038b5	      0x4883430807	                  add qword [rbx + 8], 7	       123	d-demangle.c	FUNCTION_6
0x40038ba	            0xeb07	                           jmp 0x40038c3	       123	d-demangle.c	FUNCTION_6
0x40038bc	         0xf1f4000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40038c0	          0x4d89ec	                            mov r12, r13	        69	d-demangle.c	FUNCTION_1	IF_1
0x40038c3	          0x4d85e4	                           test r12, r12	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x40038c6	      0x4d8d6c24ff	                      lea r13, [r12 - 1]	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x40038cb	     0xf84ff0e0000	                            je 0x40047d0	      1497	d-demangle.c	FUNCTION_29	WHILE_1
0x40038d1	          0x4889ee	                            mov rsi, rbp	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x40038d4	          0x4889df	                            mov rdi, rbx	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x40038d7	      0xe8c4fcffff	                     call sym.dlang_type	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x40038dc	          0x4d85ed	                           test r13, r13	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x40038df	          0x4889c5	                            mov rbp, rax	      1499	d-demangle.c	FUNCTION_29	WHILE_1	CALL_3
0x40038e2	            0x74dc	                            je 0x40038c0	      1500	d-demangle.c	FUNCTION_29	WHILE_1	IF_2
0x40038e4	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40038e7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40038ea	     0xf84f00f0000	                            je 0x40048e0	        62	d-demangle.c	FUNCTION_1	IF_1
0x40038f0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40038f4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40038f8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40038fb	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40038ff	            0x7f2a	                            jg 0x400392b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003901	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003904	      0x448d741204	               lea r14d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003909	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400390c	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400390f	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003912	      0xe800000000	                          call 0x4003917	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003917	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400391a	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400391d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003920	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003923	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003927	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400392b	    0x41bb2c200000	                        mov r11d, 0x202c	        53	string3.h	FUNCTION_33	CALL_3
0x4003931	        0x6644891a	                    mov word [rdx], r11w	        53	string3.h	FUNCTION_33	CALL_3
0x4003935	      0x4883430802	                  add qword [rbx + 8], 2	       123	d-demangle.c	FUNCTION_6
0x400393a	            0xeb84	                           jmp 0x40038c0	       123	d-demangle.c	FUNCTION_6
0x400393c	         0xf1f4000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4003940	        0x4883c601	                              add rsi, 1	       577	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003944	      0xe857fcffff	                     call sym.dlang_type	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x4003949	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400394c	          0x4889c5	                            mov rbp, rax	       578	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_16
0x400394f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003952	     0xf841f160000	                            je 0x4004f77	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003958	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400395c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003960	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003963	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003967	            0x7f2a	                            jg 0x4003993	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003969	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400396c	      0x448d6c1204	               lea r13d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003971	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003974	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003977	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400397a	      0xe800000000	                          call 0x400397f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400397f	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003982	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003985	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003988	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400398b	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400398f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003993	      0xbe5b5d0000	                         mov esi, 0x5d5b	        53	string3.h	FUNCTION_33	CALL_3
0x4003998	          0x4889e8	                            mov rax, rbp	       580	d-demangle.c	FUNCTION_18	SWITCH_1
0x400399b	          0x668932	                      mov word [rdx], si	        53	string3.h	FUNCTION_33	CALL_3
0x400399e	      0x4883430802	                  add qword [rbx + 8], 2	       123	d-demangle.c	FUNCTION_6
0x40039a3	      0xe940fcffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x40039a8	     0xf1f84000000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40039b0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40039b3	        0x488d6e01	                      lea rbp, [rsi + 1]	       694	d-demangle.c	FUNCTION_18	SWITCH_1
0x40039b7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40039ba	     0xf8496150000	                            je 0x4004f56	        62	d-demangle.c	FUNCTION_1	IF_1
0x40039c0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039c4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039c8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039cb	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039cf	            0x7f2a	                            jg 0x40039fb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039d1	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039d4	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40039d9	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039dc	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40039df	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40039e2	      0xe800000000	                          call 0x40039e7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40039e7	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039ea	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039ed	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40039f0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039f3	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039f7	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40039fb	    0xc70275696e74	            mov dword [rdx], 0x746e6975 	        53	string3.h	FUNCTION_33	CALL_3
0x4003a01	          0x4889e8	                            mov rax, rbp	       696	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003a04	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4003a09	      0xe9dafbffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003a0e	            0x6690	                                     nop	       123	d-demangle.c	FUNCTION_6
0x4003a10	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003a13	        0x488d6e01	                      lea rbp, [rsi + 1]	       728	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003a17	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003a1a	     0xf8415150000	                            je 0x4004f35	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003a20	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a24	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a28	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a2b	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a2f	            0x7f2a	                            jg 0x4003a5b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a31	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a34	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003a39	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a3c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003a3f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003a42	      0xe800000000	                          call 0x4003a47	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003a47	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a4a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a4d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003a50	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a53	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a57	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a5b	    0xc70269726561	            mov dword [rdx], 0x61657269 	        53	string3.h	FUNCTION_33	CALL_3
0x4003a61	        0xc642046c	                mov byte [rdx + 4], 0x6c	        53	string3.h	FUNCTION_33	CALL_3
0x4003a65	          0x4889e8	                            mov rax, rbp	       730	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003a68	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x4003a6d	      0xe976fbffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003a72	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003a78	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003a7b	        0x488d6e01	                      lea rbp, [rsi + 1]	       690	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003a7f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003a82	     0xf848c140000	                            je 0x4004f14	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003a88	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a8c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a90	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a93	        0x4883f802	                              cmp rax, 2	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a97	            0x7f2a	                            jg 0x4003ac3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a99	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003a9c	      0x448d6c1206	               lea r13d, [rdx + rdx + 6]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003aa1	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003aa4	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003aa7	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003aaa	      0xe800000000	                          call 0x4003aaf	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003aaf	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ab2	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ab5	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ab8	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003abb	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003abf	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ac3	    0x41b9696e0000	                         mov r9d, 0x6e69	        53	string3.h	FUNCTION_33	CALL_3
0x4003ac9	        0xc6420274	                mov byte [rdx + 2], 0x74	        53	string3.h	FUNCTION_33	CALL_3
0x4003acd	          0x4889e8	                            mov rax, rbp	       692	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003ad0	        0x6644890a	                     mov word [rdx], r9w	        53	string3.h	FUNCTION_33	CALL_3
0x4003ad4	      0x4883430803	                  add qword [rbx + 8], 3	       123	d-demangle.c	FUNCTION_6
0x4003ad9	      0xe90afbffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003ade	            0x6690	                                     nop	       123	d-demangle.c	FUNCTION_6
0x4003ae0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003ae3	        0x488d6e01	                      lea rbp, [rsi + 1]	       678	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003ae7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003aea	     0xf8403140000	                            je 0x4004ef3	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003af0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003af4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003af8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003afb	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003aff	            0x7f2a	                            jg 0x4003b2b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b01	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b04	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b09	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b0c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b0f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b12	      0xe800000000	                          call 0x4003b17	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b17	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b1a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b1d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b20	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b23	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b27	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b2b	    0xc70275627974	            mov dword [rdx], 0x74796275 	        53	string3.h	FUNCTION_33	CALL_3
0x4003b31	        0xc6420465	                mov byte [rdx + 4], 0x65	        53	string3.h	FUNCTION_33	CALL_3
0x4003b35	          0x4889e8	                            mov rax, rbp	       680	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003b38	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x4003b3d	      0xe9a6faffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003b42	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003b48	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003b4b	        0x488d6e01	                      lea rbp, [rsi + 1]	       674	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003b4f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003b52	     0xf847a130000	                            je 0x4004ed2	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003b58	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b5c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b60	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b63	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b67	            0x7f2a	                            jg 0x4003b93	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b69	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b6c	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b71	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b74	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b77	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b7a	      0xe800000000	                          call 0x4003b7f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b7f	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b82	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b85	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003b88	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b8b	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b8f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003b93	    0xc70262797465	            mov dword [rdx], 0x65747962 	        53	string3.h	FUNCTION_33	CALL_3
0x4003b99	          0x4889e8	                            mov rax, rbp	       676	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003b9c	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4003ba1	      0xe942faffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003ba6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003bb0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003bb3	        0x488d6e01	                      lea rbp, [rsi + 1]	       706	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003bb7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003bba	     0xf84f1120000	                            je 0x4004eb1	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003bc0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bc4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bc8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bcb	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bcf	            0x7f2a	                            jg 0x4003bfb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bd1	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bd4	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003bd9	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bdc	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003bdf	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003be2	      0xe800000000	                          call 0x4003be7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003be7	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bea	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bed	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003bf0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bf3	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bf7	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003bfb	    0xc702666c6f61	            mov dword [rdx], 0x616f6c66 	        53	string3.h	FUNCTION_33	CALL_3
0x4003c01	        0xc6420474	                mov byte [rdx + 4], 0x74	        53	string3.h	FUNCTION_33	CALL_3
0x4003c05	          0x4889e8	                            mov rax, rbp	       708	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003c08	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x4003c0d	      0xe9d6f9ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003c12	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003c18	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003c1b	        0x488d6e01	                      lea rbp, [rsi + 1]	       714	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003c1f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003c22	     0xf8468120000	                            je 0x4004e90	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003c28	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c2c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c30	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c33	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c37	            0x7f2a	                            jg 0x4003c63	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c39	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c3c	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003c41	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c44	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003c47	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003c4a	      0xe800000000	                          call 0x4003c4f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003c4f	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c52	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c55	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003c58	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c5b	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c5f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c63	    0xc7027265616c	            mov dword [rdx], 0x6c616572 	        53	string3.h	FUNCTION_33	CALL_3
0x4003c69	          0x4889e8	                            mov rax, rbp	       716	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003c6c	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4003c71	      0xe972f9ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003c76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003c80	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003c83	        0x488d6e01	                      lea rbp, [rsi + 1]	       710	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003c87	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003c8a	     0xf84df110000	                            je 0x4004e6f	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003c90	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c94	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c98	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c9b	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003c9f	            0x7f2a	                            jg 0x4003ccb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ca1	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ca4	      0x448d6c120c	            lea r13d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ca9	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003cac	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003caf	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003cb2	      0xe800000000	                          call 0x4003cb7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003cb7	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003cba	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003cbd	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003cc0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003cc3	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003cc7	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ccb	    0x41b86c650000	                         mov r8d, 0x656c	        53	string3.h	FUNCTION_33	CALL_3
0x4003cd1	    0xc702646f7562	            mov dword [rdx], 0x62756f64 	        53	string3.h	FUNCTION_33	CALL_3
0x4003cd7	          0x4889e8	                            mov rax, rbp	       712	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003cda	      0x6644894204	                 mov word [rdx + 4], r8w	        53	string3.h	FUNCTION_33	CALL_3
0x4003cdf	      0x4883430806	                  add qword [rbx + 8], 6	       123	d-demangle.c	FUNCTION_6
0x4003ce4	      0xe9fff8ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003ce9	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4003cf0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003cf3	        0x488d6e01	                      lea rbp, [rsi + 1]	       740	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003cf7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003cfa	     0xf844e110000	                            je 0x4004e4e	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003d00	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d04	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d08	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d0b	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d0f	            0x7f2a	                            jg 0x4003d3b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d11	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d14	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d19	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d1c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d1f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d22	      0xe800000000	                          call 0x4003d27	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d27	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d2a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d2d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d30	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d33	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d37	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d3b	    0xc70263726561	            mov dword [rdx], 0x61657263 	        53	string3.h	FUNCTION_33	CALL_3
0x4003d41	        0xc642046c	                mov byte [rdx + 4], 0x6c	        53	string3.h	FUNCTION_33	CALL_3
0x4003d45	          0x4889e8	                            mov rax, rbp	       742	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003d48	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x4003d4d	      0xe996f8ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003d52	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003d58	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003d5b	        0x488d6e01	                      lea rbp, [rsi + 1]	       746	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003d5f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003d62	     0xf84c5100000	                            je 0x4004e2d	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003d68	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d6c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d70	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d73	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d77	            0x7f2a	                            jg 0x4003da3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d79	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d7c	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d81	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d84	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d87	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d8a	      0xe800000000	                          call 0x4003d8f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d8f	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d92	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d95	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003d98	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d9b	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003d9f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003da3	    0xc702626f6f6c	            mov dword [rdx], 0x6c6f6f62 	        53	string3.h	FUNCTION_33	CALL_3
0x4003da9	          0x4889e8	                            mov rax, rbp	       748	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003dac	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4003db1	      0xe932f8ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003db6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003dc0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003dc3	        0x488d6e01	                      lea rbp, [rsi + 1]	       750	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003dc7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003dca	     0xf843c100000	                            je 0x4004e0c	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003dd0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003dd4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003dd8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ddb	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ddf	            0x7f2a	                            jg 0x4003e0b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003de1	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003de4	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003de9	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003dec	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003def	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003df2	      0xe800000000	                          call 0x4003df7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003df7	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003dfa	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003dfd	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003e00	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e03	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e07	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e0b	    0xc70263686172	            mov dword [rdx], 0x72616863 	        53	string3.h	FUNCTION_33	CALL_3
0x4003e11	          0x4889e8	                            mov rax, rbp	       752	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003e14	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4003e19	      0xe9caf7ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003e1e	            0x6690	                                     nop	       123	d-demangle.c	FUNCTION_6
0x4003e20	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003e23	        0x4c8d6e01	                      lea r13, [rsi + 1]	       539	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003e27	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003e2a	     0xf84690d0000	                            je 0x4004b99	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003e30	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e34	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e38	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e3b	        0x4883f806	                              cmp rax, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e3f	            0x7f2a	                            jg 0x4003e6b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e41	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e44	      0x448d64120e	            lea r12d, [rdx + rdx + 0xe] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003e49	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e4c	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003e4f	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003e52	      0xe800000000	                          call 0x4003e57	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003e57	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e5a	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e5d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003e60	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e63	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e67	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003e6b	    0x41ba65640000	                        mov r10d, 0x6465	        53	string3.h	FUNCTION_33	CALL_3
0x4003e71	    0xc70273686172	            mov dword [rdx], 0x72616873 	        53	string3.h	FUNCTION_33	CALL_3
0x4003e77	        0xc6420628	                mov byte [rdx + 6], 0x28	        53	string3.h	FUNCTION_33	CALL_3
0x4003e7b	      0x6644895204	                mov word [rdx + 4], r10w	        53	string3.h	FUNCTION_33	CALL_3
0x4003e80	      0x4883430807	                  add qword [rbx + 8], 7	       123	d-demangle.c	FUNCTION_6
0x4003e85	          0x4c89ee	                            mov rsi, r13	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4003e88	          0x4889df	                            mov rdi, rbx	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4003e8b	      0xe810f7ffff	                     call sym.dlang_type	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4003e90	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003e93	          0x4889c5	                            mov rbp, rax	       570	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3	CALL_14
0x4003e96	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003e99	     0xf843d090000	                            je 0x40047dc	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003e9f	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ea3	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ea7	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003eaa	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ead	            0x7f2a	                            jg 0x4003ed9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003eaf	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003eb2	      0x448d6c1202	               lea r13d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003eb7	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003eba	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ebd	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ec0	      0xe800000000	                          call 0x4003ec5	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ec5	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ec8	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ecb	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ece	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ed1	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ed5	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ed9	          0xc60229	                    mov byte [rdx], 0x29	        53	string3.h	FUNCTION_33	CALL_3
0x4003edc	          0x4889e8	                            mov rax, rbp	       123	d-demangle.c	FUNCTION_6
0x4003edf	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4003ee4	      0xe9fff6ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003ee9	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4003ef0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003ef3	        0x488d6e01	                      lea rbp, [rsi + 1]	       682	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003ef7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003efa	     0xf84c20d0000	                            je 0x4004cc2	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003f00	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f04	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f08	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f0b	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f0f	            0x7f2a	                            jg 0x4003f3b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f11	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f14	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f19	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f1c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f1f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f22	      0xe800000000	                          call 0x4003f27	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f27	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f2a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f2d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f30	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f33	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f37	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f3b	    0xc70273686f72	            mov dword [rdx], 0x726f6873 	        53	string3.h	FUNCTION_33	CALL_3
0x4003f41	        0xc6420474	                mov byte [rdx + 4], 0x74	        53	string3.h	FUNCTION_33	CALL_3
0x4003f45	          0x4889e8	                            mov rax, rbp	       684	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003f48	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x4003f4d	      0xe996f6ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003f52	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003f58	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003f5b	        0x488d6e01	                      lea rbp, [rsi + 1]	       736	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003f5f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003f62	     0xf84390d0000	                            je 0x4004ca1	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003f68	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f6c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f70	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f73	        0x4883f806	                              cmp rax, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f77	            0x7f2a	                            jg 0x4003fa3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f79	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f7c	      0x448d6c120e	            lea r13d, [rdx + rdx + 0xe] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f81	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f84	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f87	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f8a	      0xe800000000	                          call 0x4003f8f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f8f	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f92	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f95	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003f98	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f9b	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003f9f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003fa3	      0xb8626c0000	                         mov eax, 0x6c62	        53	string3.h	FUNCTION_33	CALL_3
0x4003fa8	    0xc70263646f75	            mov dword [rdx], 0x756f6463 	        53	string3.h	FUNCTION_33	CALL_3
0x4003fae	        0xc6420665	                mov byte [rdx + 6], 0x65	        53	string3.h	FUNCTION_33	CALL_3
0x4003fb2	        0x66894204	                  mov word [rdx + 4], ax	        53	string3.h	FUNCTION_33	CALL_3
0x4003fb6	          0x4889e8	                            mov rax, rbp	       738	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003fb9	      0x4883430807	                  add qword [rbx + 8], 7	       123	d-demangle.c	FUNCTION_6
0x4003fbe	      0xe925f6ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4003fc3	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4003fc8	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003fcb	        0x488d6e01	                      lea rbp, [rsi + 1]	       732	d-demangle.c	FUNCTION_18	SWITCH_1
0x4003fcf	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003fd2	     0xf84a80c0000	                            je 0x4004c80	        62	d-demangle.c	FUNCTION_1	IF_1
0x4003fd8	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003fdc	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003fe0	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003fe3	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003fe7	            0x7f2a	                            jg 0x4004013	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003fe9	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003fec	      0x448d6c120c	            lea r13d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ff1	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4003ff4	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ff7	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003ffa	      0xe800000000	                          call 0x4003fff	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4003fff	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004002	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004005	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004008	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400400b	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400400f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004013	      0xb961740000	                         mov ecx, 0x7461	        53	string3.h	FUNCTION_33	CALL_3
0x4004018	    0xc70263666c6f	            mov dword [rdx], 0x6f6c6663 	        53	string3.h	FUNCTION_33	CALL_3
0x400401e	          0x4889e8	                            mov rax, rbp	       734	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004021	        0x66894a04	                  mov word [rdx + 4], cx	        53	string3.h	FUNCTION_33	CALL_3
0x4004025	      0x4883430806	                  add qword [rbx + 8], 6	       123	d-demangle.c	FUNCTION_6
0x400402a	      0xe9b9f5ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x400402f	              0x90	                                     nop	       123	d-demangle.c	FUNCTION_6
0x4004030	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004033	        0x488d6e01	                      lea rbp, [rsi + 1]	       724	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004037	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400403a	     0xf841f0c0000	                            je 0x4004c5f	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004040	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004044	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004048	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400404b	        0x4883f806	                              cmp rax, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400404f	            0x7f2a	                            jg 0x400407b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004051	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004054	      0x448d6c120e	            lea r13d, [rdx + rdx + 0xe] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004059	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400405c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400405f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004062	      0xe800000000	                          call 0x4004067	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004067	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400406a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400406d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004070	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004073	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004077	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400407b	      0xbe626c0000	                         mov esi, 0x6c62	        53	string3.h	FUNCTION_33	CALL_3
0x4004080	    0xc70269646f75	            mov dword [rdx], 0x756f6469 	        53	string3.h	FUNCTION_33	CALL_3
0x4004086	        0xc6420665	                mov byte [rdx + 6], 0x65	        53	string3.h	FUNCTION_33	CALL_3
0x400408a	        0x66897204	                  mov word [rdx + 4], si	        53	string3.h	FUNCTION_33	CALL_3
0x400408e	          0x4889e8	                            mov rax, rbp	       726	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004091	      0x4883430807	                  add qword [rbx + 8], 7	       123	d-demangle.c	FUNCTION_6
0x4004096	      0xe94df5ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x400409b	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40040a0	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40040a3	        0x488d6e01	                      lea rbp, [rsi + 1]	       720	d-demangle.c	FUNCTION_18	SWITCH_1
0x40040a7	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40040aa	     0xf841a0d0000	                            je 0x4004dca	        62	d-demangle.c	FUNCTION_1	IF_1
0x40040b0	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040b4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040b8	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040bb	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040bf	            0x7f2a	                            jg 0x40040eb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040c1	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040c4	      0x448d6c120c	            lea r13d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40040c9	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040cc	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40040cf	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40040d2	      0xe800000000	                          call 0x40040d7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40040d7	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040da	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040dd	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40040e0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040e3	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040e7	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40040eb	      0xbf61740000	                         mov edi, 0x7461	        53	string3.h	FUNCTION_33	CALL_3
0x40040f0	    0xc70269666c6f	            mov dword [rdx], 0x6f6c6669 	        53	string3.h	FUNCTION_33	CALL_3
0x40040f6	          0x4889e8	                            mov rax, rbp	       722	d-demangle.c	FUNCTION_18	SWITCH_1
0x40040f9	        0x66897a04	                  mov word [rdx + 4], di	        53	string3.h	FUNCTION_33	CALL_3
0x40040fd	      0x4883430806	                  add qword [rbx + 8], 6	       123	d-demangle.c	FUNCTION_6
0x4004102	      0xe9e1f4ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4004107	    0x660f1f840000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4004110	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004113	        0x488d6e01	                      lea rbp, [rsi + 1]	       666	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004117	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400411a	     0xf84890c0000	                            je 0x4004da9	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004120	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004124	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004128	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400412b	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400412f	            0x7f2a	                            jg 0x400415b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004131	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004134	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004139	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400413c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400413f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004142	      0xe800000000	                          call 0x4004147	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004147	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400414a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400414d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004150	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004153	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004157	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400415b	    0xc7026e6f6e65	            mov dword [rdx], 0x656e6f6e 	        53	string3.h	FUNCTION_33	CALL_3
0x4004161	          0x4889e8	                            mov rax, rbp	       668	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004164	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4004169	      0xe97af4ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x400416e	            0x6690	                                     nop	       123	d-demangle.c	FUNCTION_6
0x4004170	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004173	        0x488d6e01	                      lea rbp, [rsi + 1]	       702	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004177	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400417a	     0xf84080c0000	                            je 0x4004d88	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004180	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004184	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004188	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400418b	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400418f	            0x7f2a	                            jg 0x40041bb	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004191	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004194	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004199	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400419c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400419f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40041a2	      0xe800000000	                          call 0x40041a7	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40041a7	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041aa	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041ad	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40041b0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041b3	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041b7	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041bb	    0xc702756c6f6e	            mov dword [rdx], 0x6e6f6c75 	        53	string3.h	FUNCTION_33	CALL_3
0x40041c1	        0xc6420467	                mov byte [rdx + 4], 0x67	        53	string3.h	FUNCTION_33	CALL_3
0x40041c5	          0x4889e8	                            mov rax, rbp	       704	d-demangle.c	FUNCTION_18	SWITCH_1
0x40041c8	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x40041cd	      0xe916f4ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x40041d2	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40041d8	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40041db	        0x488d6e01	                      lea rbp, [rsi + 1]	       698	d-demangle.c	FUNCTION_18	SWITCH_1
0x40041df	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40041e2	     0xf847f0b0000	                            je 0x4004d67	        62	d-demangle.c	FUNCTION_1	IF_1
0x40041e8	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041ec	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041f0	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041f3	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041f7	            0x7f2a	                            jg 0x4004223	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041f9	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40041fc	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004201	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004204	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004207	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400420a	      0xe800000000	                          call 0x400420f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400420f	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004212	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004215	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004218	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400421b	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400421f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004223	    0xc7026c6f6e67	            mov dword [rdx], 0x676e6f6c 	        53	string3.h	FUNCTION_33	CALL_3
0x4004229	          0x4889e8	                            mov rax, rbp	       700	d-demangle.c	FUNCTION_18	SWITCH_1
0x400422c	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4004231	      0xe9b2f3ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4004236	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4004240	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004243	        0x488d6e01	                      lea rbp, [rsi + 1]	       758	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004247	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400424a	     0xf84f60a0000	                            je 0x4004d46	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004250	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004254	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004258	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400425b	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400425f	            0x7f2a	                            jg 0x400428b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004261	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004264	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004269	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400426c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400426f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004272	      0xe800000000	                          call 0x4004277	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004277	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400427a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400427d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004280	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004283	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004287	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400428b	    0xc70264636861	            mov dword [rdx], 0x61686364 	        53	string3.h	FUNCTION_33	CALL_3
0x4004291	        0xc6420472	                mov byte [rdx + 4], 0x72	        53	string3.h	FUNCTION_33	CALL_3
0x4004295	          0x4889e8	                            mov rax, rbp	       760	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004298	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x400429d	      0xe946f3ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x40042a2	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x40042a8	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40042ab	        0x488d6e01	                      lea rbp, [rsi + 1]	       670	d-demangle.c	FUNCTION_18	SWITCH_1
0x40042af	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40042b2	     0xf846d0a0000	                            je 0x4004d25	        62	d-demangle.c	FUNCTION_1	IF_1
0x40042b8	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042bc	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042c0	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042c3	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042c7	            0x7f2a	                            jg 0x40042f3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042c9	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042cc	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40042d1	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042d4	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40042d7	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40042da	      0xe800000000	                          call 0x40042df	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40042df	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042e2	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042e5	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40042e8	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042eb	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042ef	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40042f3	    0xc702766f6964	            mov dword [rdx], 0x64696f76 	        53	string3.h	FUNCTION_33	CALL_3
0x40042f9	          0x4889e8	                            mov rax, rbp	       672	d-demangle.c	FUNCTION_18	SWITCH_1
0x40042fc	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4004301	      0xe9e2f2ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4004306	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4004310	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004313	        0x488d6e01	                      lea rbp, [rsi + 1]	       754	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004317	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400431a	     0xf84e4090000	                            je 0x4004d04	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004320	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004324	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004328	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400432b	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400432f	            0x7f2a	                            jg 0x400435b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004331	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004334	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004339	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400433c	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400433f	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004342	      0xe800000000	                          call 0x4004347	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004347	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400434a	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400434d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004350	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004353	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004357	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400435b	    0xc70277636861	            mov dword [rdx], 0x61686377 	        53	string3.h	FUNCTION_33	CALL_3
0x4004361	        0xc6420472	                mov byte [rdx + 4], 0x72	        53	string3.h	FUNCTION_33	CALL_3
0x4004365	          0x4889e8	                            mov rax, rbp	       756	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004368	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x400436d	      0xe976f2ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4004372	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4004378	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400437b	        0x488d6e01	                      lea rbp, [rsi + 1]	       686	d-demangle.c	FUNCTION_18	SWITCH_1
0x400437f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004382	     0xf845b090000	                            je 0x4004ce3	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004388	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400438c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004390	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004393	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004397	            0x7f2a	                            jg 0x40043c3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004399	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400439c	      0x448d6c120c	            lea r13d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40043a1	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40043a4	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40043a7	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40043aa	      0xe800000000	                          call 0x40043af	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40043af	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40043b2	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40043b5	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40043b8	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40043bb	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40043bf	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40043c3	    0x41ba72740000	                        mov r10d, 0x7472	        53	string3.h	FUNCTION_33	CALL_3
0x40043c9	    0xc7027573686f	            mov dword [rdx], 0x6f687375 	        53	string3.h	FUNCTION_33	CALL_3
0x40043cf	          0x4889e8	                            mov rax, rbp	       688	d-demangle.c	FUNCTION_18	SWITCH_1
0x40043d2	      0x6644895204	                mov word [rdx + 4], r10w	        53	string3.h	FUNCTION_33	CALL_3
0x40043d7	      0x4883430806	                  add qword [rbx + 8], 6	       123	d-demangle.c	FUNCTION_6
0x40043dc	      0xe907f2ffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x40043e1	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x40043e8	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40043eb	        0x4c8d6e01	                      lea r13, [rsi + 1]	       551	d-demangle.c	FUNCTION_18	SWITCH_1
0x40043ef	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40043f2	     0xf8404080000	                            je 0x4004bfc	        62	d-demangle.c	FUNCTION_1	IF_1
0x40043f8	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40043fc	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004400	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004403	        0x4883f809	                              cmp rax, 9	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004407	            0x7f2a	                            jg 0x4004433	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004409	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400440c	      0x448d641214	           lea r12d, [rdx + rdx + 0x14] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004411	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004414	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004417	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400441a	      0xe800000000	                          call 0x400441f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400441f	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004422	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004425	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004428	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400442b	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400442f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004433	    0x48b8696d6d75	          movabs rax, 0x6c626174756d6d69	        53	string3.h	FUNCTION_33	CALL_3
0x400443d	    0x41b865280000	                         mov r8d, 0x2865	        53	string3.h	FUNCTION_33	CALL_3
0x4004443	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x4004446	      0x6644894208	                 mov word [rdx + 8], r8w	        53	string3.h	FUNCTION_33	CALL_3
0x400444b	      0x488343080a	                add qword [rbx + 8], 0xa	       123	d-demangle.c	FUNCTION_6
0x4004450	      0xe930faffff	                           jmp 0x4003e85	       123	d-demangle.c	FUNCTION_6
0x4004455	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4004458	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400445b	        0x4c8d6e01	                      lea r13, [rsi + 1]	       545	d-demangle.c	FUNCTION_18	SWITCH_1
0x400445f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004462	     0xf8473070000	                            je 0x4004bdb	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004468	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400446c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004470	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004473	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004477	            0x7f2a	                            jg 0x40044a3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004479	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400447c	      0x448d64120c	            lea r12d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004481	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004484	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004487	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400448a	      0xe800000000	                          call 0x400448f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400448f	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004492	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004495	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004498	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400449b	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400449f	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40044a3	    0x41b974280000	                         mov r9d, 0x2874	        53	string3.h	FUNCTION_33	CALL_3
0x40044a9	    0xc702636f6e73	            mov dword [rdx], 0x736e6f63 	        53	string3.h	FUNCTION_33	CALL_3
0x40044af	      0x6644894a04	                 mov word [rdx + 4], r9w	        53	string3.h	FUNCTION_33	CALL_3
0x40044b4	      0x4883430806	                  add qword [rbx + 8], 6	       123	d-demangle.c	FUNCTION_6
0x40044b9	      0xe9c7f9ffff	                           jmp 0x4003e85	       123	d-demangle.c	FUNCTION_6
0x40044be	            0x6690	                                     nop	       123	d-demangle.c	FUNCTION_6
0x40044c0	         0xfb64601	               movzx eax, byte [rsi + 1]	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40044c4	            0x3c69	                            cmp al, 0x69	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40044c6	     0xf8499040000	                            je 0x4004965	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40044cc	            0x3c6b	                            cmp al, 0x6b	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40044ce	     0xf850cf1ffff	                           jne 0x40035e0	       763	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40044d4	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40044d7	        0x488d6e02	                      lea rbp, [rsi + 2]	       770	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40044db	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40044de	     0xf84b50b0000	                            je 0x4005099	        62	d-demangle.c	FUNCTION_1	IF_1
0x40044e4	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40044e8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40044ec	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40044ef	        0x4883f804	                              cmp rax, 4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40044f3	            0x7f2a	                            jg 0x400451f	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40044f5	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40044f8	      0x448d6c120a	            lea r13d, [rdx + rdx + 0xa] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40044fd	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004500	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004503	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004506	      0xe800000000	                          call 0x400450b	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400450b	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400450e	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004511	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004514	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004517	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400451b	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400451f	    0xc7027563656e	            mov dword [rdx], 0x6e656375 	        53	string3.h	FUNCTION_33	CALL_3
0x4004525	        0xc6420474	                mov byte [rdx + 4], 0x74	        53	string3.h	FUNCTION_33	CALL_3
0x4004529	      0x4883430805	                  add qword [rbx + 8], 5	       123	d-demangle.c	FUNCTION_6
0x400452e	      0xe9a3f2ffff	                           jmp 0x40037d6	       123	d-demangle.c	FUNCTION_6
0x4004533	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4004538	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x400453d	        0x4883c601	                              add rsi, 1	       603	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004541	    0x48c744242000	               mov qword [rsp + 0x20], 0	        95	d-demangle.c	FUNCTION_3
0x400454a	    0x48c744241800	               mov qword [rsp + 0x18], 0	        95	d-demangle.c	FUNCTION_3
0x4004553	    0x48c744241000	               mov qword [rsp + 0x10], 0	        95	d-demangle.c	FUNCTION_3
0x400455c	      0xe83ff0ffff	                     call sym.dlang_type	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4004561	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x4004566	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       606	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_24
0x400456b	          0x4889df	                            mov rdi, rbx	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x400456e	          0x4889c6	                            mov rsi, rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4004571	          0x4189d5	                           mov r13d, edx	       105	d-demangle.c	FUNCTION_4
0x4004574	          0x4129cd	                           sub r13d, ecx	       105	d-demangle.c	FUNCTION_4
0x4004577	          0x4839d1	                            cmp rcx, rdx	       105	d-demangle.c	FUNCTION_4
0x400457a	      0xba00000000	                              mov edx, 0	       105	d-demangle.c	FUNCTION_4
0x400457f	        0x440f44ea	                         cmove r13d, edx	       105	d-demangle.c	FUNCTION_4
0x4004583	      0xe818f0ffff	                     call sym.dlang_type	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x4004588	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400458b	          0x4889c5	                            mov rbp, rax	       609	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_26
0x400458e	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004591	     0xf84a7060000	                            je 0x4004c3e	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004597	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400459b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400459f	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045a2	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045a5	            0x7f2a	                            jg 0x40045d1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045a7	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045aa	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40045af	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045b2	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40045b5	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40045b8	      0xe800000000	                          call 0x40045bd	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40045bd	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045c0	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045c3	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40045c6	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045c9	        0x4c897310	             mov qword [rbx + 0x10], r14	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045cd	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045d1	          0xc6025b	                    mov byte [rdx], 0x5b	        53	string3.h	FUNCTION_33	CALL_3
0x40045d4	        0x488b4308	                mov rax, qword [rbx + 8]	       123	d-demangle.c	FUNCTION_6
0x40045d8	          0x4585ed	                         test r13d, r13d	       129	d-demangle.c	FUNCTION_7	IF_1
0x40045db	        0x488d4801	                      lea rcx, [rax + 1]	       123	d-demangle.c	FUNCTION_6
0x40045df	        0x48894b08	                mov qword [rbx + 8], rcx	       123	d-demangle.c	FUNCTION_6
0x40045e3	     0xf85fc040000	                           jne 0x4004ae5	       129	d-demangle.c	FUNCTION_7	IF_1
0x40045e9	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40045ec	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40045ef	     0xf84f6070000	                            je 0x4004deb	        62	d-demangle.c	FUNCTION_1	IF_1
0x40045f5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045f9	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045fc	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40045ff	            0x7f2a	                            jg 0x400462b	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004601	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004604	      0x448d640902	               lea r12d, [rcx + rcx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004609	          0x4989cd	                            mov r13, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400460c	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400460f	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004612	      0xe800000000	                          call 0x4004617	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004617	          0x4963cd	                        movsxd rcx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400461a	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400461d	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004620	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004623	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004627	        0x48894b08	                mov qword [rbx + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400462b	          0xc6015d	                    mov byte [rcx], 0x5d	        53	string3.h	FUNCTION_33	CALL_3
0x400462e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        85	d-demangle.c	FUNCTION_2	IF_1
0x4004633	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4004638	          0x4885ff	                           test rdi, rdi	        85	d-demangle.c	FUNCTION_2	IF_1
0x400463b	     0xf8590f1ffff	                           jne 0x40037d1	        85	d-demangle.c	FUNCTION_2	IF_1
0x4004641	      0xe990f1ffff	                           jmp 0x40037d6	        85	d-demangle.c	FUNCTION_2	IF_1
0x4004646	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        85	d-demangle.c	FUNCTION_2	IF_1
0x4004650	         0xfb64601	               movzx eax, byte [rsi + 1]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4004654	        0x4c8d6601	                      lea r12, [rsi + 1]	       585	d-demangle.c	FUNCTION_18	SWITCH_1
0x4004658	    0xf68400000000	                test byte [rax + rax], 4	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4004660	          0x4c89e0	                            mov rax, r12	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4004663	     0xf84b7090000	                            je 0x4005020	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4004669	     0xf1f80000000	                         nop dword [rax]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4004670	          0x4889c1	                            mov rcx, rax	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4004673	        0x4883c001	                              add rax, 1	       591	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1
0x4004677	           0xfb610	                   movzx edx, byte [rax]	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x400467a	          0x4829f1	                            sub rcx, rsi	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x400467d	    0xf68412000000	                test byte [rdx + rdx], 4	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4004685	            0x75e9	                           jne 0x4004670	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4004687	          0x4c63e9	                         movsxd r13, ecx	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x400468a	          0x4889df	                            mov rdi, rbx	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x400468d	          0x4889c6	                            mov rsi, rax	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4004690	      0xe80befffff	                     call sym.dlang_type	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x4004695	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004698	          0x4889c5	                            mov rbp, rax	       593	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_19
0x400469b	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400469e	     0xf8479050000	                            je 0x4004c1d	        62	d-demangle.c	FUNCTION_1	IF_1
0x40046a4	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046a8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046ac	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046af	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046b2	            0x7f2a	                            jg 0x40046de	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046b4	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046b7	      0x448d7c1202	               lea r15d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40046bc	          0x4989d6	                            mov r14, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046bf	          0x4d63ff	                        movsxd r15, r15d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40046c2	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40046c5	      0xe800000000	                          call 0x40046ca	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40046ca	          0x4963d6	                        movsxd rdx, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046cd	          0x4901c7	                            add r15, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046d0	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40046d3	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046d6	        0x4c897b10	             mov qword [rbx + 0x10], r15	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046da	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40046de	          0xc6025b	                    mov byte [rdx], 0x5b	        53	string3.h	FUNCTION_33	CALL_3
0x40046e1	        0x488b4308	                mov rax, qword [rbx + 8]	       123	d-demangle.c	FUNCTION_6
0x40046e5	          0x4585ed	                         test r13d, r13d	       129	d-demangle.c	FUNCTION_7	IF_1
0x40046e8	        0x488d4801	                      lea rcx, [rax + 1]	       123	d-demangle.c	FUNCTION_6
0x40046ec	        0x48894b08	                mov qword [rbx + 8], rcx	       123	d-demangle.c	FUNCTION_6
0x40046f0	     0xf850b020000	                           jne 0x4004901	       129	d-demangle.c	FUNCTION_7	IF_1
0x40046f6	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40046f9	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40046fc	     0xf84b8040000	                            je 0x4004bba	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004702	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004706	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004709	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400470c	            0x7f2a	                            jg 0x4004738	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400470e	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004711	      0x448d640902	               lea r12d, [rcx + rcx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004716	          0x4989cd	                            mov r13, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004719	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400471c	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400471f	      0xe800000000	                          call 0x4004724	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004724	          0x4963cd	                        movsxd rcx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004727	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400472a	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400472d	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004730	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004734	        0x48894b08	                mov qword [rbx + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004738	          0xc6015d	                    mov byte [rcx], 0x5d	        53	string3.h	FUNCTION_33	CALL_3
0x400473b	          0x4889e8	                            mov rax, rbp	       597	d-demangle.c	FUNCTION_18	SWITCH_1
0x400473e	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4004743	      0xe9a0eeffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4004748	     0xf1f84000000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4004750	         0xfb65601	               movzx edx, byte [rsi + 1]	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4004754	          0x80fa67	                            cmp dl, 0x67	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4004757	     0xf845c080000	                            je 0x4004fb9	       558	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x400475d	            0x31c0	                            xor eax, eax	       534	d-demangle.c	FUNCTION_18	IF_1
0x400475f	          0x80fa68	                            cmp dl, 0x68	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4004762	     0xf8580eeffff	                           jne 0x40035e8	       566	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x4004768	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400476b	        0x4c8d6e02	                      lea r13, [rsi + 2]	       568	d-demangle.c	FUNCTION_18	SWITCH_1	ELSE_1	IF_3
0x400476f	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004772	     0xf84b0080000	                            je 0x4005028	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004778	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400477c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004780	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004783	        0x4883f808	                              cmp rax, 8	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004787	            0x7f2a	                            jg 0x40047b3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004789	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400478c	      0x448d641212	           lea r12d, [rdx + rdx + 0x12] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004791	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004794	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004797	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400479a	      0xe800000000	                          call 0x400479f	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400479f	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40047a2	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40047a5	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40047a8	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40047ab	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40047af	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40047b3	    0x48b85f5f7665	          movabs rax, 0x726f746365765f5f	        53	string3.h	FUNCTION_33	CALL_3
0x40047bd	        0xc6420828	                mov byte [rdx + 8], 0x28	        53	string3.h	FUNCTION_33	CALL_3
0x40047c1	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_33	CALL_3
0x40047c4	      0x4883430809	                  add qword [rbx + 8], 9	       123	d-demangle.c	FUNCTION_6
0x40047c9	      0xe9b7f6ffff	                           jmp 0x4003e85	       123	d-demangle.c	FUNCTION_6
0x40047ce	            0x6690	                                     nop	       123	d-demangle.c	FUNCTION_6
0x40047d0	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x40047d3	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x40047d6	     0xf85c3f6ffff	                           jne 0x4003e9f	        62	d-demangle.c	FUNCTION_1	IF_1
0x40047dc	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40047e1	      0xe800000000	                          call 0x40047e6	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40047e6	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40047ea	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40047ed	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40047f1	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40047f5	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40047f8	      0xe9dcf6ffff	                           jmp 0x4003ed9	        69	d-demangle.c	FUNCTION_1	IF_1
0x40047fd	           0xf1f00	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004800	          0x4889df	                            mov rdi, rbx	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4004803	          0x4889c6	                            mov rsi, rax	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4004806	      0xe895edffff	                     call sym.dlang_type	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x400480b	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x400480e	          0x4889c5	                            mov rbp, rax	       621	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4	CALL_32
0x4004811	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004814	     0xf84f0080000	                            je 0x400510a	        62	d-demangle.c	FUNCTION_1	IF_1
0x400481a	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400481e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004822	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004825	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004828	            0x7f2a	                            jg 0x4004854	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400482a	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400482d	      0x448d6c1202	               lea r13d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004832	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004835	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004838	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400483b	      0xe800000000	                          call 0x4004840	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004840	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004843	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004846	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004849	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400484c	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004850	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004854	          0xc6022a	                    mov byte [rdx], 0x2a	        53	string3.h	FUNCTION_33	CALL_3
0x4004857	          0x4889e8	                            mov rax, rbp	       623	d-demangle.c	FUNCTION_18	SWITCH_1	IF_4
0x400485a	      0x4883430801	                  add qword [rbx + 8], 1	       123	d-demangle.c	FUNCTION_6
0x400485f	      0xe984edffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x4004864	         0xf1f4000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4004868	          0x80fa4e	                            cmp dl, 0x4e	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x400486b	     0xf850f020000	                           jne 0x4004a80	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4004871	        0x807d0167	                cmp byte [rbp + 1], 0x67	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4004875	            0x755f	                           jne 0x40048d6	       334	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x4004877	        0x4883c502	                              add rbp, 2	       336	d-demangle.c	FUNCTION_14	SWITCH_1	IF_2
0x400487b	          0x4d85e4	                           test r12, r12	        62	d-demangle.c	FUNCTION_1	IF_1
0x400487e	     0xf8470080000	                            je 0x40050f4	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004884	          0x4889ca	                            mov rdx, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004887	          0x4829c2	                            sub rdx, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400488a	        0x4883fa05	                              cmp rdx, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400488e	            0x7f25	                            jg 0x40048b5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004890	          0x4c29e0	                            sub rax, r12	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004893	          0x4c89e7	                            mov rdi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004896	        0x8d4c000c	              lea ecx, [rax + rax + 0xc]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400489a	          0x4989c6	                            mov r14, rax	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400489d	          0x4c63e9	                         movsxd r13, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40048a0	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40048a3	      0xe800000000	                          call 0x40048a8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40048a8	          0x4989c4	                            mov r12, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40048ab	          0x4963c6	                        movsxd rax, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40048ae	        0x4b8d0c2c	                    lea rcx, [r12 + r13]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40048b2	          0x4c01e0	                            add rax, r12	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40048b5	    0x41be75740000	                        mov r14d, 0x7475	        53	string3.h	FUNCTION_33	CALL_3
0x40048bb	    0xc70020696e6f	            mov dword [rax], 0x6f6e6920 	        53	string3.h	FUNCTION_33	CALL_3
0x40048c1	        0x4883c006	                              add rax, 6	       123	d-demangle.c	FUNCTION_6
0x40048c5	      0x66448970fe	                mov word [rax - 2], r14w	        53	string3.h	FUNCTION_33	CALL_3
0x40048ca	         0xfb65500	                   movzx edx, byte [rbp]	       315	d-demangle.c	FUNCTION_14	IF_1
0x40048ce	            0x84d2	                             test dl, dl	       315	d-demangle.c	FUNCTION_14	IF_1
0x40048d0	     0xf85faedffff	                           jne 0x40036d0	       315	d-demangle.c	FUNCTION_14	IF_1
0x40048d6	            0x31f6	                            xor esi, esi	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x40048d8	      0xe966eeffff	                           jmp 0x4003743	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x40048dd	           0xf1f00	                         nop dword [rax]	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x40048e0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40048e5	      0xe800000000	                          call 0x40048ea	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40048ea	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40048ee	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40048f1	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40048f5	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40048f9	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40048fc	      0xe92af0ffff	                           jmp 0x400392b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004901	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004904	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004907	     0xf843c070000	                            je 0x4005049	        62	d-demangle.c	FUNCTION_1	IF_1
0x400490d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004911	          0x4d63f5	                        movsxd r14, r13d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004914	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004917	          0x4c39f0	                            cmp rax, r14	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400491a	            0x7d2b	                           jge 0x4004947	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400491c	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400491f	          0x4101cd	                           add r13d, ecx	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004922	          0x4989cf	                            mov r15, rcx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004925	          0x4501ed	                          add r13d, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004928	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400492b	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400492e	      0xe800000000	                          call 0x4004933	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004933	          0x4963cf	                        movsxd rcx, r15d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004936	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004939	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400493c	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400493f	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004943	        0x48894b08	                mov qword [rbx + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004947	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_33	CALL_3
0x400494a	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_33	CALL_3
0x400494d	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_33	CALL_3
0x4004950	      0xe800000000	                          call 0x4004955	        53	string3.h	FUNCTION_33	CALL_3
0x4004955	          0x4c89f1	                            mov rcx, r14	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004958	        0x48034b08	                add rcx, qword [rbx + 8]	       133	d-demangle.c	FUNCTION_7	IF_1
0x400495c	        0x48894b08	                mov qword [rbx + 8], rcx	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004960	      0xe991fdffff	                           jmp 0x40046f6	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004965	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004968	        0x488d6e02	                      lea rbp, [rsi + 2]	       766	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x400496c	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x400496f	     0xf8403070000	                            je 0x4005078	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004975	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004979	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400497d	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004980	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004984	            0x7f2a	                            jg 0x40049b0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004986	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004989	      0x448d6c1208	               lea r13d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400498e	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004991	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004994	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004997	      0xe800000000	                          call 0x400499c	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x400499c	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x400499f	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049a2	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40049a5	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049a8	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049ac	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049b0	    0xc70263656e74	            mov dword [rdx], 0x746e6563 	        53	string3.h	FUNCTION_33	CALL_3
0x40049b6	          0x4889e8	                            mov rax, rbp	       768	d-demangle.c	FUNCTION_18	SWITCH_1	SWITCH_2
0x40049b9	      0x4883430804	                  add qword [rbx + 8], 4	       123	d-demangle.c	FUNCTION_6
0x40049be	      0xe925ecffff	                           jmp 0x40035e8	       123	d-demangle.c	FUNCTION_6
0x40049c3	        0x4883c501	                              add rbp, 1	       321	d-demangle.c	FUNCTION_14	SWITCH_1
0x40049c7	          0x4d85e4	                           test r12, r12	        62	d-demangle.c	FUNCTION_1	IF_1
0x40049ca	     0xf84ea060000	                            je 0x40050ba	        62	d-demangle.c	FUNCTION_1	IF_1
0x40049d0	          0x4829c1	                            sub rcx, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049d3	        0x4883f905	                              cmp rcx, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049d7	            0x7f1e	                            jg 0x40049f7	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049d9	          0x4c29e0	                            sub rax, r12	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049dc	          0x4c89e7	                            mov rdi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40049df	        0x8d74000c	              lea esi, [rax + rax + 0xc]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40049e3	          0x4989c5	                            mov r13, rax	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049e6	          0x4863f6	                         movsxd rsi, esi	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40049e9	      0xe800000000	                          call 0x40049ee	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40049ee	          0x4989c4	                            mov r12, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x40049f1	          0x4963c5	                        movsxd rax, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049f4	          0x4c01e0	                            add rax, r12	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x40049f7	      0xb973740000	                         mov ecx, 0x7473	        53	string3.h	FUNCTION_33	CALL_3
0x40049fc	    0xc70020636f6e	            mov dword [rax], 0x6e6f6320 	        53	string3.h	FUNCTION_33	CALL_3
0x4004a02	          0x4889ee	                            mov rsi, rbp	       323	d-demangle.c	FUNCTION_14	SWITCH_1
0x4004a05	        0x66894804	                  mov word [rax + 4], cx	        53	string3.h	FUNCTION_33	CALL_3
0x4004a09	        0x4883c006	                              add rax, 6	       123	d-demangle.c	FUNCTION_6
0x4004a0d	      0xe931edffff	                           jmp 0x4003743	       123	d-demangle.c	FUNCTION_6
0x4004a12	        0x4883c501	                              add rbp, 1	       329	d-demangle.c	FUNCTION_14	SWITCH_1
0x4004a16	          0x4d85e4	                           test r12, r12	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004a19	     0xf84ad060000	                            je 0x40050cc	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004a1f	          0x4889ca	                            mov rdx, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a22	          0x4829c2	                            sub rdx, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a25	        0x4883fa06	                              cmp rdx, 6	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a29	            0x7f25	                            jg 0x4004a50	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a2b	          0x4c29e0	                            sub rax, r12	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a2e	          0x4c89e7	                            mov rdi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004a31	        0x8d4c000e	              lea ecx, [rax + rax + 0xe]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004a35	          0x4989c6	                            mov r14, rax	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a38	          0x4c63e9	                         movsxd r13, ecx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004a3b	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004a3e	      0xe800000000	                          call 0x4004a43	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004a43	          0x4989c4	                            mov r12, rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004a46	          0x4963c6	                        movsxd rax, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a49	        0x4b8d0c2c	                    lea rcx, [r12 + r13]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a4d	          0x4c01e0	                            add rax, r12	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a50	    0x41bf72650000	                        mov r15d, 0x6572	        53	string3.h	FUNCTION_33	CALL_3
0x4004a56	    0xc70020736861	            mov dword [rax], 0x61687320 	        53	string3.h	FUNCTION_33	CALL_3
0x4004a5c	        0xc6400664	                mov byte [rax + 6], 0x64	        53	string3.h	FUNCTION_33	CALL_3
0x4004a60	      0x6644897804	                mov word [rax + 4], r15w	        53	string3.h	FUNCTION_33	CALL_3
0x4004a65	        0x4883c007	                              add rax, 7	       123	d-demangle.c	FUNCTION_6
0x4004a69	          0x4885ed	                           test rbp, rbp	       315	d-demangle.c	FUNCTION_14	IF_1
0x4004a6c	     0xf8558feffff	                           jne 0x40048ca	       315	d-demangle.c	FUNCTION_14	IF_1
0x4004a72	            0x31f6	                            xor esi, esi	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x4004a74	      0xe9caecffff	                           jmp 0x4003743	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x4004a79	     0xf1f80000000	                         nop dword [rax]	       341	d-demangle.c	FUNCTION_14	SWITCH_1	ELSE_1
0x4004a80	          0x4889ee	                            mov rsi, rbp	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4004a83	      0xe9bbecffff	                           jmp 0x4003743	       318	d-demangle.c	FUNCTION_14	SWITCH_1
0x4004a88	          0x488b13	                    mov rdx, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004a8b	          0x4885d2	                           test rdx, rdx	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004a8e	     0xf84d6060000	                            je 0x400516a	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004a94	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a98	          0x4d63fd	                        movsxd r15, r13d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a9b	          0x4829f8	                            sub rax, rdi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004a9e	          0x4c39f8	                            cmp rax, r15	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004aa1	            0x7d2e	                           jge 0x4004ad1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004aa3	          0x4829d7	                            sub rdi, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004aa6	          0x4101fd	                           add r13d, edi	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004aa9	          0x4989fe	                            mov r14, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004aac	          0x4889d7	                            mov rdi, rdx	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004aaf	          0x4501ed	                          add r13d, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004ab2	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004ab5	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004ab8	      0xe800000000	                          call 0x4004abd	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004abd	          0x4963fe	                        movsxd rdi, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004ac0	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004ac3	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004ac6	          0x4801c7	                            add rdi, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004ac9	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004acd	        0x48897b08	                mov qword [rbx + 8], rdi	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004ad1	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_33	CALL_3
0x4004ad4	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_33	CALL_3
0x4004ad7	      0xe800000000	                          call 0x4004adc	        53	string3.h	FUNCTION_33	CALL_3
0x4004adc	        0x4c017b08	                add qword [rbx + 8], r15	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004ae0	      0xe9e9ecffff	                           jmp 0x40037ce	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004ae5	          0x488b3b	                    mov rdi, qword [rbx]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004ae8	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       611	d-demangle.c	FUNCTION_18	SWITCH_1	CALL_28
0x4004aed	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004af0	     0xf8435060000	                            je 0x400512b	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004af6	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004afa	          0x4d63f5	                        movsxd r14, r13d	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004afd	          0x4829c8	                            sub rax, rcx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b00	          0x4c39f0	                            cmp rax, r14	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b03	            0x7d34	                           jge 0x4004b39	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b05	          0x4829f9	                            sub rcx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b08	      0x458d640d00	                   lea r12d, [r13 + rcx]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b0d	      0x48894c2408	                mov qword [rsp + 8], rcx	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b12	          0x4501e4	                          add r12d, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004b15	          0x4d63e4	                        movsxd r12, r12d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004b18	          0x4c89e6	                            mov rsi, r12	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004b1b	      0xe800000000	                          call 0x4004b20	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004b20	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b25	          0x4901c4	                            add r12, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b28	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004b2b	        0x4c896310	             mov qword [rbx + 0x10], r12	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b2f	          0x4863c9	                         movsxd rcx, ecx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b32	          0x4801c1	                            add rcx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b35	        0x48894b08	                mov qword [rbx + 8], rcx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004b39	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_33	CALL_3
0x4004b3c	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_33	CALL_3
0x4004b3f	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_33	CALL_3
0x4004b42	      0xe800000000	                          call 0x4004b47	        53	string3.h	FUNCTION_33	CALL_3
0x4004b47	          0x4c89f1	                            mov rcx, r14	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004b4a	        0x48034b08	                add rcx, qword [rbx + 8]	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004b4e	        0x48894b08	                mov qword [rbx + 8], rcx	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004b52	      0xe992faffff	                           jmp 0x40045e9	       133	d-demangle.c	FUNCTION_7	IF_1
0x4004b57	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b5c	      0xe800000000	                          call 0x4004b61	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b61	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004b65	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b68	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b6c	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004b70	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004b73	      0xe915ebffff	                           jmp 0x400368d	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004b78	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b7d	      0xe800000000	                          call 0x4004b82	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b82	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004b86	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b89	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b8d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004b91	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004b94	      0xe90eecffff	                           jmp 0x40037a7	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004b99	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004b9e	      0xe800000000	                          call 0x4004ba3	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ba3	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ba7	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004baa	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004bae	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bb2	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bb5	      0xe9b1f2ffff	                           jmp 0x4003e6b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bba	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004bbf	      0xe800000000	                          call 0x4004bc4	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004bc4	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bc8	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004bcb	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004bcf	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bd2	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bd6	      0xe95dfbffff	                           jmp 0x4004738	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bdb	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004be0	      0xe800000000	                          call 0x4004be5	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004be5	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004be9	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004bec	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004bf0	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bf4	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bf7	      0xe9a7f8ffff	                           jmp 0x40044a3	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004bfc	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c01	      0xe800000000	                          call 0x4004c06	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c06	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c0a	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c0d	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c11	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c15	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c18	      0xe916f8ffff	                           jmp 0x4004433	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c1d	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c22	      0xe800000000	                          call 0x4004c27	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c27	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c2b	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c2e	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c32	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c36	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c39	      0xe9a0faffff	                           jmp 0x40046de	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c3e	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c43	      0xe800000000	                          call 0x4004c48	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c48	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c4c	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c4f	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c53	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c57	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c5a	      0xe972f9ffff	                           jmp 0x40045d1	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c5f	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c64	      0xe800000000	                          call 0x4004c69	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c69	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c6d	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c70	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c74	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c78	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c7b	      0xe9fbf3ffff	                           jmp 0x400407b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c80	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c85	      0xe800000000	                          call 0x4004c8a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c8a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c8e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c91	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004c95	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c99	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004c9c	      0xe972f3ffff	                           jmp 0x4004013	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ca1	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ca6	      0xe800000000	                          call 0x4004cab	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004cab	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004caf	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004cb2	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004cb6	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cba	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cbd	      0xe9e1f2ffff	                           jmp 0x4003fa3	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cc2	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004cc7	      0xe800000000	                          call 0x4004ccc	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ccc	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cd0	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004cd3	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004cd7	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cdb	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cde	      0xe958f2ffff	                           jmp 0x4003f3b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ce3	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ce8	      0xe800000000	                          call 0x4004ced	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ced	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cf1	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004cf4	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004cf8	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cfc	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004cff	      0xe9bff6ffff	                           jmp 0x40043c3	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d04	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d09	      0xe800000000	                          call 0x4004d0e	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d0e	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d12	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d15	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d19	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d1d	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d20	      0xe936f6ffff	                           jmp 0x400435b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d25	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d2a	      0xe800000000	                          call 0x4004d2f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d2f	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d33	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d36	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d3a	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d3e	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d41	      0xe9adf5ffff	                           jmp 0x40042f3	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d46	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d4b	      0xe800000000	                          call 0x4004d50	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d50	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d54	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d57	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d5b	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d5f	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d62	      0xe924f5ffff	                           jmp 0x400428b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d67	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d6c	      0xe800000000	                          call 0x4004d71	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d71	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d75	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d78	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d7c	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d80	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d83	      0xe99bf4ffff	                           jmp 0x4004223	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d88	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d8d	      0xe800000000	                          call 0x4004d92	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d92	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004d96	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d99	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004d9d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004da1	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004da4	      0xe912f4ffff	                           jmp 0x40041bb	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004da9	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004dae	      0xe800000000	                          call 0x4004db3	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004db3	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004db7	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004dba	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004dbe	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004dc2	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004dc5	      0xe991f3ffff	                           jmp 0x400415b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004dca	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004dcf	      0xe800000000	                          call 0x4004dd4	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004dd4	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004dd8	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ddb	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ddf	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004de3	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004de6	      0xe900f3ffff	                           jmp 0x40040eb	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004deb	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004df0	      0xe800000000	                          call 0x4004df5	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004df5	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004df9	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004dfc	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e00	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e03	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e07	      0xe91ff8ffff	                           jmp 0x400462b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e0c	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e11	      0xe800000000	                          call 0x4004e16	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e16	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e1a	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e1d	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e21	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e25	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e28	      0xe9deefffff	                           jmp 0x4003e0b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e2d	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e32	      0xe800000000	                          call 0x4004e37	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e37	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e3b	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e3e	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e42	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e46	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e49	      0xe955efffff	                           jmp 0x4003da3	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e4e	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e53	      0xe800000000	                          call 0x4004e58	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e58	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e5c	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e5f	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e63	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e67	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e6a	      0xe9cceeffff	                           jmp 0x4003d3b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e6f	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e74	      0xe800000000	                          call 0x4004e79	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e79	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e7d	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e80	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e84	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e88	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e8b	      0xe93beeffff	                           jmp 0x4003ccb	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e90	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e95	      0xe800000000	                          call 0x4004e9a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004e9a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004e9e	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ea1	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ea5	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ea9	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004eac	      0xe9b2edffff	                           jmp 0x4003c63	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004eb1	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004eb6	      0xe800000000	                          call 0x4004ebb	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ebb	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ebf	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ec2	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ec6	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004eca	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ecd	      0xe929edffff	                           jmp 0x4003bfb	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ed2	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ed7	      0xe800000000	                          call 0x4004edc	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004edc	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ee0	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ee3	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ee7	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004eeb	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004eee	      0xe9a0ecffff	                           jmp 0x4003b93	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004ef3	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004ef8	      0xe800000000	                          call 0x4004efd	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004efd	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f01	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f04	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f08	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f0c	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f0f	      0xe917ecffff	                           jmp 0x4003b2b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f14	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f19	      0xe800000000	                          call 0x4004f1e	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f1e	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f22	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f25	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f29	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f2d	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f30	      0xe98eebffff	                           jmp 0x4003ac3	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f35	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f3a	      0xe800000000	                          call 0x4004f3f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f3f	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f43	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f46	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f4a	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f4e	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f51	      0xe905ebffff	                           jmp 0x4003a5b	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f56	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f5b	      0xe800000000	                          call 0x4004f60	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f60	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f64	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f67	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f6b	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f6f	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f72	      0xe984eaffff	                           jmp 0x40039fb	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f77	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f7c	      0xe800000000	                          call 0x4004f81	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f81	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f85	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f88	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f8c	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f90	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f93	      0xe9fbe9ffff	                           jmp 0x4003993	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004f98	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004f9d	      0xe800000000	                          call 0x4004fa2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004fa2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004fa6	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004fa9	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4004fad	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004fb1	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004fb4	      0xe9e7e8ffff	                           jmp 0x40038a0	        69	d-demangle.c	FUNCTION_1	IF_1
0x4004fb9	          0x488b3f	                    mov rdi, qword [rdi]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004fbc	        0x4c8d6602	                      lea r12, [rsi + 2]	       560	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2
0x4004fc0	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004fc3	     0xf84d8010000	                            je 0x40051a1	        62	d-demangle.c	FUNCTION_1	IF_1
0x4004fc9	        0x488b5308	                mov rdx, qword [rbx + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004fcd	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004fd1	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004fd4	        0x4883f805	                              cmp rax, 5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004fd8	            0x7f2a	                            jg 0x4005004	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004fda	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004fdd	      0x448d6c120c	            lea r13d, [rdx + rdx + 0xc] 	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004fe2	          0x4889d5	                            mov rbp, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004fe5	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004fe8	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004feb	      0xe800000000	                          call 0x4004ff0	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004ff0	          0x4863d5	                         movsxd rdx, ebp	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004ff3	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004ff6	          0x488903	                    mov qword [rbx], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4004ff9	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4004ffc	        0x4c896b10	             mov qword [rbx + 0x10], r13	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005000	        0x48895308	                mov qword [rbx + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4005004	      0xbf74280000	                         mov edi, 0x2874	        53	string3.h	FUNCTION_33	CALL_3
0x4005009	    0xc702696e6f75	            mov dword [rdx], 0x756f6e69 	        53	string3.h	FUNCTION_33	CALL_3
0x400500f	          0x4c89e6	                            mov rsi, r12	       562	d-demangle.c	FUNCTION_18	SWITCH_1	IF_2	CALL_11
0x4005012	        0x66897a04	                  mov word [rdx + 4], di	        53	string3.h	FUNCTION_33	CALL_3
0x4005016	      0x4883430806	                  add qword [rbx + 8], 6	       123	d-demangle.c	FUNCTION_6
0x400501b	      0xe968eeffff	                           jmp 0x4003e88	       123	d-demangle.c	FUNCTION_6
0x4005020	          0x4531ed	                          xor r13d, r13d	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4005023	      0xe962f6ffff	                           jmp 0x400468a	       588	d-demangle.c	FUNCTION_18	SWITCH_1	WHILE_1	CALL_18
0x4005028	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400502d	      0xe800000000	                          call 0x4005032	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005032	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005036	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005039	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400503d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005041	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005044	      0xe96af7ffff	                           jmp 0x40047b3	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005049	        0x4183fd20	                          cmp r13d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400504d	    0x41be20000000	                          mov r14d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005053	        0x4d0f4df5	                         cmovge r14, r13	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005057	          0x4c89f7	                            mov rdi, r14	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400505a	      0xe800000000	                          call 0x400505f	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400505f	          0x4901c6	                            add r14, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005062	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005065	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005069	        0x4c897310	             mov qword [rbx + 0x10], r14	        69	d-demangle.c	FUNCTION_1	IF_1
0x400506d	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005070	          0x4d63f5	                        movsxd r14, r13d	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005073	      0xe9cff8ffff	                           jmp 0x4004947	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005078	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400507d	      0xe800000000	                          call 0x4005082	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005082	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005086	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005089	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400508d	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005091	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005094	      0xe917f9ffff	                           jmp 0x40049b0	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005099	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400509e	      0xe800000000	                          call 0x40050a3	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050a3	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40050a7	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050aa	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050ae	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40050b2	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40050b5	      0xe965f4ffff	                           jmp 0x400451f	        69	d-demangle.c	FUNCTION_1	IF_1
0x40050ba	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050bf	      0xe800000000	                          call 0x40050c4	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050c4	          0x4989c4	                            mov r12, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050c7	      0xe92bf9ffff	                           jmp 0x40049f7	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050cc	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050d1	      0xe800000000	                          call 0x40050d6	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050d6	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40050da	          0x4989c4	                            mov r12, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050dd	      0xe96ef9ffff	                           jmp 0x4004a50	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050e2	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050e7	      0xe800000000	                          call 0x40050ec	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050ec	          0x4989c4	                            mov r12, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050ef	      0xe931e6ffff	                           jmp 0x4003725	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050f4	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050f9	      0xe800000000	                          call 0x40050fe	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40050fe	        0x488d4820	                   lea rcx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005102	          0x4989c4	                            mov r12, rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005105	      0xe9abf7ffff	                           jmp 0x40048b5	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400510a	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400510f	      0xe800000000	                          call 0x4005114	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005114	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005118	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400511b	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400511f	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005123	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005126	      0xe929f7ffff	                           jmp 0x4004854	        69	d-demangle.c	FUNCTION_1	IF_1
0x400512b	        0x4183fd20	                          cmp r13d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400512f	    0x41bc20000000	                          mov r12d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005135	          0x4d63f5	                        movsxd r14, r13d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005138	        0x450f4de5	                       cmovge r12d, r13d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400513c	          0x4d63e4	                        movsxd r12, r12d	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400513f	          0x4c89e7	                            mov rdi, r12	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005142	      0xe800000000	                          call 0x4005147	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005147	          0x4901c4	                            add r12, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x400514a	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400514d	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005151	        0x4c896310	             mov qword [rbx + 0x10], r12	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005155	          0x4889c1	                            mov rcx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005158	      0xe9dcf9ffff	                           jmp 0x4004b39	        69	d-demangle.c	FUNCTION_1	IF_1
0x400515d	          0x4531e4	                          xor r12d, r12d	       315	d-demangle.c	FUNCTION_14	IF_1
0x4005160	            0x31f6	                            xor esi, esi	       315	d-demangle.c	FUNCTION_14	IF_1
0x4005162	          0x4531ed	                          xor r13d, r13d	       103	d-demangle.c	FUNCTION_4	IF_1
0x4005165	      0xe9ebe5ffff	                           jmp 0x4003755	       103	d-demangle.c	FUNCTION_4	IF_1
0x400516a	        0x4183fd20	                          cmp r13d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400516e	    0x41be20000000	                          mov r14d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005174	          0x4d63fd	                        movsxd r15, r13d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4005177	        0x450f4df5	                       cmovge r14d, r13d	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x400517b	          0x4d63f6	                        movsxd r14, r14d	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400517e	          0x4c89f7	                            mov rdi, r14	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005181	      0xe800000000	                          call 0x4005186	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005186	          0x4901c6	                            add r14, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005189	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x400518c	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4005190	        0x4c897310	             mov qword [rbx + 0x10], r14	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005194	          0x4889c7	                            mov rdi, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4005197	      0xe935f9ffff	                           jmp 0x4004ad1	        69	d-demangle.c	FUNCTION_1	IF_1
0x400519c	      0xe800000000	                          call 0x40051a1	       779	d-demangle.c	FUNCTION_18
0x40051a1	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40051a6	      0xe800000000	                          call 0x40051ab	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40051ab	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x40051af	          0x488903	                    mov qword [rbx], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40051b2	        0x48894308	                mov qword [rbx + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x40051b6	        0x48895310	             mov qword [rbx + 0x10], rdx	        69	d-demangle.c	FUNCTION_1	IF_1
0x40051ba	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x40051bd	      0xe942feffff	                           jmp 0x4005004	        69	d-demangle.c	FUNCTION_1	IF_1
dlang_parse_structlit	functions,0:ELSE,0:FOR,0:WHILE,1:IF,3:CALL,6:DO,0:SWITCH,0	415
0x40029a0	          0x4885f6	                           test rsi, rsi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029a3	     0xf8434060000	                            je 0x4002fdd	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029a9	            0x4157	                                push r15	      1232	d-demangle.c	FUNCTION_25
0x40029ab	            0x4156	                                push r14	      1232	d-demangle.c	FUNCTION_25
0x40029ad	            0x4155	                                push r13	      1232	d-demangle.c	FUNCTION_25
0x40029af	            0x4154	                                push r12	      1232	d-demangle.c	FUNCTION_25
0x40029b1	          0x4989d5	                            mov r13, rdx	      1232	d-demangle.c	FUNCTION_25
0x40029b4	              0x55	                                push rbp	      1232	d-demangle.c	FUNCTION_25
0x40029b5	              0x53	                                push rbx	      1232	d-demangle.c	FUNCTION_25
0x40029b6	          0x4889f3	                            mov rbx, rsi	      1232	d-demangle.c	FUNCTION_25
0x40029b9	        0x4883ec18	                           sub rsp, 0x18	      1232	d-demangle.c	FUNCTION_25
0x40029bd	           0xfbe06	                   movsx eax, byte [rsi]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029c0	           0xfb6d0	                           movzx edx, al	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029c3	    0xf68412000000	                test byte [rdx + rdx], 4	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029cb	     0xf84bf050000	                            je 0x4002f90	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029d1	          0x4889fd	                            mov rbp, rdi	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029d4	          0x4531e4	                          xor r12d, r12d	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029d7	    0x660f1f840000	                    nop word [rax + rax]	       202	d-demangle.c	FUNCTION_10	IF_1	CALL_1
0x40029e0	        0x4b8d14a4	                  lea rdx, [r12 + r12*4]	       209	d-demangle.c	FUNCTION_10	WHILE_1
0x40029e4	          0x83e830	                           sub eax, 0x30	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40029e7	        0x4883c301	                              add rbx, 1	       217	d-demangle.c	FUNCTION_10	WHILE_1
0x40029eb	            0x4898	                                    cdqe	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40029ed	        0x4c8d2450	                  lea r12, [rax + rdx*2]	       216	d-demangle.c	FUNCTION_10	WHILE_1
0x40029f1	           0xfbe03	                   movsx eax, byte [rbx]	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40029f4	           0xfb6c8	                           movzx ecx, al	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40029f7	            0x89c2	                            mov edx, eax	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x40029f9	    0xf68409000000	                test byte [rcx + rcx], 4	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4002a01	            0x75dd	                           jne 0x40029e0	       207	d-demangle.c	FUNCTION_10	WHILE_1	CALL_2
0x4002a03	          0x4c89e0	                            mov rax, r12	       220	d-demangle.c	FUNCTION_10	IF_3
0x4002a06	        0x48c1e83f	                           shr rax, 0x3f	       220	d-demangle.c	FUNCTION_10	IF_3
0x4002a0a	            0x84c0	                             test al, al	       220	d-demangle.c	FUNCTION_10	IF_3
0x4002a0c	     0xf857e050000	                           jne 0x4002f90	       220	d-demangle.c	FUNCTION_10	IF_3
0x4002a12	            0x84d2	                             test dl, dl	       220	d-demangle.c	FUNCTION_10	IF_3
0x4002a14	     0xf8476050000	                            je 0x4002f90	       220	d-demangle.c	FUNCTION_10	IF_3
0x4002a1a	          0x4d85ed	                           test r13, r13	      1239	d-demangle.c	FUNCTION_25	IF_2
0x4002a1d	            0x743e	                            je 0x4002a5d	      1239	d-demangle.c	FUNCTION_25	IF_2
0x4002a1f	          0x4c89ef	                            mov rdi, r13	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4002a22	      0xe800000000	                          call 0x4002a27	       120	d-demangle.c	FUNCTION_6	CALL_1
0x4002a27	        0x4c8b4500	                     mov r8, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002a2b	          0x4d85c0	                             test r8, r8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002a2e	     0xf8474050000	                            je 0x4002fa8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002a34	        0x488b7d08	                mov rdi, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a38	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a3c	          0x4863d0	                         movsxd rdx, eax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a3f	          0x4829f9	                            sub rcx, rdi	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a42	          0x4839d1	                            cmp rcx, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a45	     0xf8ce5030000	                            jl 0x4002e30	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a4b	          0x4989d7	                            mov r15, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a4e	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_33	CALL_3
0x4002a51	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_33	CALL_3
0x4002a54	      0xe800000000	                          call 0x4002a59	        53	string3.h	FUNCTION_33	CALL_3
0x4002a59	        0x4c017d08	                add qword [rbp + 8], r15	       123	d-demangle.c	FUNCTION_6
0x4002a5d	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002a61	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002a64	     0xf844e040000	                            je 0x4002eb8	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002a6a	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a6e	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a72	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a75	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a78	            0x7f2b	                            jg 0x4002aa5	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a7a	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a7d	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002a82	          0x4989d5	                            mov r13, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a85	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002a88	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002a8b	      0xe800000000	                          call 0x4002a90	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002a90	          0x4963d5	                        movsxd rdx, r13d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a93	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a96	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002a9a	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002a9d	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002aa1	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002aa5	          0xc60228	                    mov byte [rdx], 0x28	        53	string3.h	FUNCTION_33	CALL_3
0x4002aa8	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002aad	          0x4d85e4	                           test r12, r12	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002ab0	      0x4d8d6c24ff	                      lea r13, [r12 - 1]	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002ab5	            0x7463	                            je 0x4002b1a	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002ab7	    0x660f1f840000	                    nop word [rax + rax]	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002ac0	          0x4885db	                           test rbx, rbx	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002ac3	     0xf84a7020000	                            je 0x4002d70	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002ac9	           0xfb603	                   movzx eax, byte [rbx]	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002acc	            0x84c0	                             test al, al	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002ace	     0xf849c020000	                            je 0x4002d70	      1259	d-demangle.c	FUNCTION_26	IF_1
0x4002ad4	          0x83e830	                           sub eax, 0x30	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002ad7	            0x3c47	                            cmp al, 0x47	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002ad9	     0xf8791020000	                            ja 0x4002d70	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002adf	           0xfb6c0	                           movzx eax, al	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002ae2	    0xff24c5000000	                       jmp qword [rax*8]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002ae9	     0xf1f80000000	                         nop dword [rax]	      1262	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002af0	        0x4883c301	                              add rbx, 1	      1278	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002af4	          0x4889de	                            mov rsi, rbx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002af7	            0x31d2	                            xor edx, edx	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002af9	          0x4889ef	                            mov rdi, rbp	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002afc	      0xe82febffff	            call sym.dlang_parse_integer	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002b01	          0x4889c3	                            mov rbx, rax	      1286	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_4
0x4002b04	          0x4d85ed	                           test r13, r13	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4002b07	     0xf85b3000000	                           jne 0x4002bc0	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4002b0d	          0x4d89ec	                            mov r12, r13	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002b10	          0x4d85e4	                           test r12, r12	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002b13	      0x4d8d6c24ff	                      lea r13, [r12 - 1]	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002b18	            0x75a6	                           jne 0x4002ac0	      1243	d-demangle.c	FUNCTION_25	WHILE_1
0x4002b1a	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002b1e	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002b21	     0xf84b9030000	                            je 0x4002ee0	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002b27	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b2b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b2f	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b32	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b35	            0x7f2b	                            jg 0x4002b62	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b37	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b3a	      0x448d6c1202	               lea r13d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002b3f	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b42	          0x4d63ed	                        movsxd r13, r13d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002b45	          0x4c89ee	                            mov rsi, r13	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002b48	      0xe800000000	                          call 0x4002b4d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002b4d	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b50	          0x4901c5	                            add r13, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b53	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002b57	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b5a	        0x4c896d10	            mov qword [rbp + 0x10], r13 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b5e	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b62	          0xc60229	                    mov byte [rdx], 0x29	        53	string3.h	FUNCTION_33	CALL_3
0x4002b65	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002b6a	        0x4883c418	                           add rsp, 0x18	      1252	d-demangle.c	FUNCTION_25
0x4002b6e	          0x4889d8	                            mov rax, rbx	       123	d-demangle.c	FUNCTION_6
0x4002b71	              0x5b	                                 pop rbx	      1252	d-demangle.c	FUNCTION_25
0x4002b72	              0x5d	                                 pop rbp	      1252	d-demangle.c	FUNCTION_25
0x4002b73	            0x415c	                                 pop r12	      1252	d-demangle.c	FUNCTION_25
0x4002b75	            0x415d	                                 pop r13	      1252	d-demangle.c	FUNCTION_25
0x4002b77	            0x415e	                                 pop r14	      1252	d-demangle.c	FUNCTION_25
0x4002b79	            0x415f	                                 pop r15	      1252	d-demangle.c	FUNCTION_25
0x4002b7b	              0xc3	                                     ret	      1252	d-demangle.c	FUNCTION_25
0x4002b7c	         0xf1f4000	                         nop dword [rax]	      1252	d-demangle.c	FUNCTION_25
0x4002b80	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002b84	        0x4883c301	                              add rbx, 1	      1266	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002b88	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002b8b	     0xf84a7030000	                            je 0x4002f38	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002b91	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b95	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b99	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002b9c	        0x4883f803	                              cmp rax, 3	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002ba0	     0xf8e4a020000	                           jle 0x4002df0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002ba6	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x4002bac	      0x4883450804	                  add qword [rbp + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4002bb1	          0x4d85ed	                           test r13, r13	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4002bb4	     0xf8453ffffff	                            je 0x4002b0d	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4002bba	    0x660f1f440000	                    nop word [rax + rax]	      1246	d-demangle.c	FUNCTION_25	WHILE_1	IF_3
0x4002bc0	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002bc4	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002bc7	     0xf84a3020000	                            je 0x4002e70	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002bcd	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002bd1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002bd5	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002bd8	        0x4883f801	                              cmp rax, 1	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002bdc	            0x7f2b	                            jg 0x4002c09	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002bde	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002be1	      0x448d741204	               lea r14d, [rdx + rdx + 4]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002be6	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002be9	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002bec	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002bef	      0xe800000000	                          call 0x4002bf4	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002bf4	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002bf7	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002bfa	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002bfe	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002c01	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002c05	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002c09	      0xb82c200000	                         mov eax, 0x202c	        53	string3.h	FUNCTION_33	CALL_3
0x4002c0e	          0x668902	                      mov word [rdx], ax	        53	string3.h	FUNCTION_33	CALL_3
0x4002c11	      0x4883450802	                  add qword [rbp + 8], 2	       123	d-demangle.c	FUNCTION_6
0x4002c16	      0xe9f2feffff	                           jmp 0x4002b0d	       123	d-demangle.c	FUNCTION_6
0x4002c1b	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4002c20	          0x4889de	                            mov rsi, rbx	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002c23	          0x4889ef	                            mov rdi, rbp	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002c26	      0xe8a5dbffff	             call sym.dlang_parse_string	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002c2b	          0x4889c3	                            mov rbx, rax	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002c2e	      0xe9d1feffff	                           jmp 0x4002b04	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002c33	       0xf1f440000	                   nop dword [rax + rax]	      1311	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_10
0x4002c38	        0x488d7301	                      lea rsi, [rbx + 1]	      1291	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002c3c	          0x4889ef	                            mov rdi, rbp	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002c3f	      0xe87ce3ffff	               call sym.dlang_parse_real	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002c44	          0x4889c3	                            mov rbx, rax	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002c47	      0xe9b8feffff	                           jmp 0x4002b04	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002c4c	         0xf1f4000	                         nop dword [rax]	      1292	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_5
0x4002c50	        0x488d7301	                      lea rsi, [rbx + 1]	      1297	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002c54	          0x4889ef	                            mov rdi, rbp	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4002c57	      0xe864e3ffff	               call sym.dlang_parse_real	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4002c5c	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002c60	          0x4989c4	                            mov r12, rax	      1298	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_6
0x4002c63	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002c66	     0xf84fc020000	                            je 0x4002f68	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002c6c	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002c70	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002c74	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002c77	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002c7a	     0xf8e40010000	                           jle 0x4002dc0	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002c80	          0xc6022b	                    mov byte [rdx], 0x2b	        53	string3.h	FUNCTION_33	CALL_3
0x4002c83	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002c88	          0x4d85e4	                           test r12, r12	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002c8b	     0xf84df000000	                            je 0x4002d70	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002c91	      0x41803c2463	                    cmp byte [r12], 0x63	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002c96	     0xf85d4000000	                           jne 0x4002d70	      1300	d-demangle.c	FUNCTION_26	SWITCH_1	IF_2
0x4002c9c	      0x498d742401	                      lea rsi, [r12 + 1]	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4002ca1	          0x4889ef	                            mov rdi, rbp	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4002ca4	      0xe817e3ffff	               call sym.dlang_parse_real	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4002ca9	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002cad	          0x4889c3	                            mov rbx, rax	      1303	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_8
0x4002cb0	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002cb3	     0xf84d9010000	                            je 0x4002e92	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002cb9	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cbd	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cc1	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cc4	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cc7	            0x7f2b	                            jg 0x4002cf4	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cc9	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002ccc	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002cd1	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cd4	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002cd7	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002cda	      0xe800000000	                          call 0x4002cdf	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002cdf	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002ce2	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002ce5	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002ce9	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cec	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cf0	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002cf4	          0xc60269	                    mov byte [rdx], 0x69	        53	string3.h	FUNCTION_33	CALL_3
0x4002cf7	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002cfc	      0xe903feffff	                           jmp 0x4002b04	       123	d-demangle.c	FUNCTION_6
0x4002d01	     0xf1f80000000	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4002d08	        0x488b7d00	                    mov rdi, qword [rbp]	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002d0c	        0x4883c301	                              add rbx, 1	      1272	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002d10	          0x4885ff	                           test rdi, rdi	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002d13	     0xf84ef010000	                            je 0x4002f08	        62	d-demangle.c	FUNCTION_1	IF_1
0x4002d19	        0x488b5508	                mov rdx, qword [rbp + 8]	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d1d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d21	          0x4829d0	                            sub rax, rdx	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d24	          0x4885c0	                           test rax, rax	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d27	            0x7e57	                           jle 0x4002d80	        71	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d29	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x4002d2c	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002d31	      0xe9befdffff	                           jmp 0x4002af4	       123	d-demangle.c	FUNCTION_6
0x4002d36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4002d40	        0x488d7301	                      lea rsi, [rbx + 1]	      1316	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002d44	          0x4889ef	                            mov rdi, rbp	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4002d47	      0xe894020000	       call sym.dlang_parse_arrayliteral	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4002d4c	          0x4889c3	                            mov rbx, rax	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4002d4f	      0xe9b0fdffff	                           jmp 0x4002b04	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4002d54	         0xf1f4000	                         nop dword [rax]	      1320	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_12
0x4002d58	        0x488d7301	                      lea rsi, [rbx + 1]	      1325	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002d5c	            0x31d2	                            xor edx, edx	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002d5e	          0x4889ef	                            mov rdi, rbp	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002d61	      0xe83afcffff	          call sym.dlang_parse_structlit	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002d66	          0x4889c3	                            mov rbx, rax	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002d69	      0xe996fdffff	                           jmp 0x4002b04	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002d6e	            0x6690	                                     nop	      1326	d-demangle.c	FUNCTION_26	SWITCH_1	CALL_13
0x4002d70	            0x31db	                            xor ebx, ebx	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002d72	      0xe98dfdffff	                           jmp 0x4002b04	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002d77	    0x660f1f840000	                    nop word [rax + rax]	      1330	d-demangle.c	FUNCTION_26	SWITCH_1
0x4002d80	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d83	      0x448d741202	               lea r14d, [rdx + rdx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002d88	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d8b	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002d8e	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002d91	      0xe800000000	                          call 0x4002d96	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002d96	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d99	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002d9c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002da0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002da3	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002da7	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002dab	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x4002dae	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002db3	      0xe93cfdffff	                           jmp 0x4002af4	       123	d-demangle.c	FUNCTION_6
0x4002db8	     0xf1f84000000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4002dc0	          0x4889d3	                            mov rbx, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002dc3	          0x4829fb	                            sub rbx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002dc6	      0x448d741b02	               lea r14d, [rbx + rbx + 2]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002dcb	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002dce	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002dd1	      0xe800000000	                          call 0x4002dd6	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002dd6	          0x4863d3	                         movsxd rdx, ebx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002dd9	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002ddc	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002de0	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002de3	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002de7	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002deb	      0xe990feffff	                           jmp 0x4002c80	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002df0	          0x4829fa	                            sub rdx, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002df3	      0x448d741208	               lea r14d, [rdx + rdx + 8]	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002df8	          0x4989d4	                            mov r12, rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002dfb	          0x4d63f6	                        movsxd r14, r14d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002dfe	          0x4c89f6	                            mov rsi, r14	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e01	      0xe800000000	                          call 0x4002e06	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e06	          0x4963d4	                        movsxd rdx, r12d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e09	          0x4901c6	                            add r14, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e0c	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e10	          0x4801c2	                            add rdx, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e13	        0x4c897510	            mov qword [rbp + 0x10], r14 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e17	        0x48895508	                mov qword [rbp + 8], rdx	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e1b	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x4002e21	      0x4883450804	                  add qword [rbp + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4002e26	      0xe986fdffff	                           jmp 0x4002bb1	       123	d-demangle.c	FUNCTION_6
0x4002e2b	       0xf1f440000	                   nop dword [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4002e30	          0x4c29c7	                             sub rdi, r8	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e33	      0x4889542408	                mov qword [rsp + 8], rdx	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e38	        0x448d3c07	                   lea r15d, [rdi + rax]	        74	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e3c	          0x4989fe	                            mov r14, rdi	        73	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e3f	          0x4c89c7	                             mov rdi, r8	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e42	          0x4501ff	                          add r15d, r15d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e45	          0x4d63ff	                        movsxd r15, r15d	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e48	          0x4c89fe	                            mov rsi, r15	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e4b	      0xe800000000	                          call 0x4002e50	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e50	          0x4963fe	                        movsxd rdi, r14d	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e53	          0x4901c7	                            add r15, rax	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e56	        0x48894500	                    mov qword [rbp], rax	        76	d-demangle.c	FUNCTION_1	ELSE_1	IF_3	CALL_2
0x4002e5a	          0x4801c7	                            add rdi, rax	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e5d	        0x4c897d10	            mov qword [rbp + 0x10], r15 	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e61	      0x488b542408	                mov rdx, qword [rsp + 8]	        78	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e66	        0x48897d08	                mov qword [rbp + 8], rdi	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e6a	      0xe9dcfbffff	                           jmp 0x4002a4b	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e6f	              0x90	                                     nop	        77	d-demangle.c	FUNCTION_1	ELSE_1	IF_3
0x4002e70	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002e75	      0xe800000000	                          call 0x4002e7a	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002e7a	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002e7e	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002e82	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002e86	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002e8a	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002e8d	      0xe977fdffff	                           jmp 0x4002c09	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002e92	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002e97	      0xe800000000	                          call 0x4002e9c	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002e9c	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002ea0	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002ea4	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002ea8	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002eac	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002eaf	      0xe940feffff	                           jmp 0x4002cf4	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002eb4	         0xf1f4000	                         nop dword [rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002eb8	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002ebd	      0xe800000000	                          call 0x4002ec2	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002ec2	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002ec6	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002eca	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002ece	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002ed2	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002ed5	      0xe9cbfbffff	                           jmp 0x4002aa5	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002eda	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002ee0	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002ee5	      0xe800000000	                          call 0x4002eea	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002eea	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002eee	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002ef2	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002ef6	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002efa	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002efd	      0xe960fcffff	                           jmp 0x4002b62	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f02	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f08	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f0d	      0xe800000000	                          call 0x4002f12	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f12	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f16	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f1a	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f1e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f22	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f25	          0xc6022d	                    mov byte [rdx], 0x2d	        53	string3.h	FUNCTION_33	CALL_3
0x4002f28	      0x4883450801	                  add qword [rbp + 8], 1	       123	d-demangle.c	FUNCTION_6
0x4002f2d	      0xe9c2fbffff	                           jmp 0x4002af4	       123	d-demangle.c	FUNCTION_6
0x4002f32	    0x660f1f440000	                    nop word [rax + rax]	       123	d-demangle.c	FUNCTION_6
0x4002f38	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f3d	      0xe800000000	                          call 0x4002f42	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f42	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f46	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f4a	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f4e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f52	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f55	    0xc7026e756c6c	            mov dword [rdx], 0x6c6c756e 	        53	string3.h	FUNCTION_33	CALL_3
0x4002f5b	      0x4883450804	                  add qword [rbp + 8], 4	       123	d-demangle.c	FUNCTION_6
0x4002f60	      0xe94cfcffff	                           jmp 0x4002bb1	       123	d-demangle.c	FUNCTION_6
0x4002f65	           0xf1f00	                         nop dword [rax]	       123	d-demangle.c	FUNCTION_6
0x4002f68	      0xbf20000000	                           mov edi, 0x20	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f6d	      0xe800000000	                          call 0x4002f72	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f72	        0x488d5020	                   lea rdx, [rax + 0x20]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f76	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f7a	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002f7e	        0x48895510	            mov qword [rbp + 0x10], rdx 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f82	          0x4889c2	                            mov rdx, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f85	      0xe9f6fcffff	                           jmp 0x4002c80	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f8a	    0x660f1f440000	                    nop word [rax + rax]	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002f90	        0x4883c418	                           add rsp, 0x18	      1252	d-demangle.c	FUNCTION_25
0x4002f94	            0x31c0	                            xor eax, eax	      1237	d-demangle.c	FUNCTION_25	IF_1
0x4002f96	              0x5b	                                 pop rbx	      1252	d-demangle.c	FUNCTION_25
0x4002f97	              0x5d	                                 pop rbp	      1252	d-demangle.c	FUNCTION_25
0x4002f98	            0x415c	                                 pop r12	      1252	d-demangle.c	FUNCTION_25
0x4002f9a	            0x415d	                                 pop r13	      1252	d-demangle.c	FUNCTION_25
0x4002f9c	            0x415e	                                 pop r14	      1252	d-demangle.c	FUNCTION_25
0x4002f9e	            0x415f	                                 pop r15	      1252	d-demangle.c	FUNCTION_25
0x4002fa0	              0xc3	                                     ret	      1252	d-demangle.c	FUNCTION_25
0x4002fa1	     0xf1f80000000	                         nop dword [rax]	      1252	d-demangle.c	FUNCTION_25
0x4002fa8	          0x83f81f	                           cmp eax, 0x1f	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002fab	            0x7f28	                            jg 0x4002fd5	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002fad	          0x4c63f8	                         movsxd r15, eax	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002fb0	    0x41be20000000	                          mov r14d, 0x20	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002fb6	          0x4c89f7	                            mov rdi, r14	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002fb9	      0xe800000000	                          call 0x4002fbe	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002fbe	          0x4901c6	                            add r14, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002fc1	        0x48894500	                    mov qword [rbp], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002fc5	        0x48894508	                mov qword [rbp + 8], rax	        68	d-demangle.c	FUNCTION_1	IF_1	CALL_1
0x4002fc9	        0x4c897510	            mov qword [rbp + 0x10], r14 	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002fcd	          0x4889c7	                            mov rdi, rax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002fd0	      0xe979faffff	                           jmp 0x4002a4e	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002fd5	          0x4c63f0	                         movsxd r14, eax	        69	d-demangle.c	FUNCTION_1	IF_1
0x4002fd8	          0x4d89f7	                            mov r15, r14	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002fdb	            0xebd9	                           jmp 0x4002fb6	        64	d-demangle.c	FUNCTION_1	IF_1	IF_2
0x4002fdd	            0x31c0	                            xor eax, eax	      1237	d-demangle.c	FUNCTION_25	IF_1
0x4002fdf	              0xc3	                                     ret	      1252	d-demangle.c	FUNCTION_25
