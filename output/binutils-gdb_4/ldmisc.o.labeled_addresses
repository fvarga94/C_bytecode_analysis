einfo	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:ELSE,0:WHILE,0:CALL,5	43
0x4000f20	              0x53	                                push rbx	       621	ldmisc.c	FUNCTION_3
0x4000f21	          0x4889fb	                            mov rbx, rdi	       621	ldmisc.c	FUNCTION_3
0x4000f24	    0x4881ecd00000	                           sub rsp, 0xd0	       621	ldmisc.c	FUNCTION_3
0x4000f2b	            0x84c0	                             test al, al	       621	ldmisc.c	FUNCTION_3
0x4000f2d	      0x4889742428	             mov qword [rsp + 0x28], rsi	       621	ldmisc.c	FUNCTION_3
0x4000f32	      0x4889542430	             mov qword [rsp + 0x30], rdx	       621	ldmisc.c	FUNCTION_3
0x4000f37	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       621	ldmisc.c	FUNCTION_3
0x4000f3c	      0x4c89442440	              mov qword [rsp + 0x40], r8	       621	ldmisc.c	FUNCTION_3
0x4000f41	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       621	ldmisc.c	FUNCTION_3
0x4000f46	            0x7437	                            je 0x4000f7f	       621	ldmisc.c	FUNCTION_3
0x4000f48	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       621	ldmisc.c	FUNCTION_3
0x4000f4d	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       621	ldmisc.c	FUNCTION_3
0x4000f52	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       621	ldmisc.c	FUNCTION_3
0x4000f57	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       621	ldmisc.c	FUNCTION_3
0x4000f5f	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       621	ldmisc.c	FUNCTION_3
0x4000f67	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       621	ldmisc.c	FUNCTION_3
0x4000f6f	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       621	ldmisc.c	FUNCTION_3
0x4000f77	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       621	ldmisc.c	FUNCTION_3
0x4000f7f	    0x64488b042528	                mov rax, qword fs:[0x28]	       621	ldmisc.c	FUNCTION_3
0x4000f88	      0x4889442418	             mov qword [rsp + 0x18], rax	       621	ldmisc.c	FUNCTION_3
0x4000f8d	            0x31c0	                            xor eax, eax	       621	ldmisc.c	FUNCTION_3
0x4000f8f	    0x488b3d000000	            mov rdi, qword [0x04000f96] 	       624	ldmisc.c	FUNCTION_3	CALL_1
0x4000f96	      0xe800000000	                          call 0x4000f9b	       624	ldmisc.c	FUNCTION_3	CALL_1
0x4000f9b	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000fa3	    0x488b3d000000	            mov rdi, qword [0x04000faa] 	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000faa	      0xb901000000	                              mov ecx, 1	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000faf	          0x4889e2	                            mov rdx, rsp	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000fb2	          0x4889de	                            mov rsi, rbx	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000fb5	    0xc70424080000	                      mov dword [rsp], 8	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000fbc	      0x4889442408	                mov qword [rsp + 8], rax	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000fc1	      0x488d442420	                   lea rax, [rsp + 0x20]	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000fc6	    0xc74424043000	               mov dword [rsp + 4], 0x30	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000fce	      0x4889442410	             mov qword [rsp + 0x10], rax	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000fd3	      0xe800000000	                          call 0x4000fd8	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000fd8	    0x488b3d000000	            mov rdi, qword [0x04000fdf] 	       628	ldmisc.c	FUNCTION_3	CALL_5
0x4000fdf	      0xe800000000	                          call 0x4000fe4	       628	ldmisc.c	FUNCTION_3	CALL_5
0x4000fe4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       629	ldmisc.c	FUNCTION_3
0x4000fe9	    0x644833042528	                xor rax, qword fs:[0x28]	       629	ldmisc.c	FUNCTION_3
0x4000ff2	            0x7509	                           jne 0x4000ffd	       629	ldmisc.c	FUNCTION_3
0x4000ff4	    0x4881c4d00000	                           add rsp, 0xd0	       629	ldmisc.c	FUNCTION_3
0x4000ffb	              0x5b	                                 pop rbx	       629	ldmisc.c	FUNCTION_3
0x4000ffc	              0xc3	                                     ret	       629	ldmisc.c	FUNCTION_3
0x4000ffd	      0xe800000000	                          call 0x4001002	       629	ldmisc.c	FUNCTION_3
vfinfo	functions,0:IF,49:FOR,3:SWITCH,3:DO,0:ELSE,15:WHILE,6:CALL,56	821
0x4000100	            0x4157	                                push r15	        70	ldmisc.c	FUNCTION_1
0x4000102	            0x4156	                                push r14	        70	ldmisc.c	FUNCTION_1
0x4000104	          0x4989fe	                            mov r14, rdi	        70	ldmisc.c	FUNCTION_1
0x4000107	            0x4155	                                push r13	        70	ldmisc.c	FUNCTION_1
0x4000109	            0x4154	                                push r12	        70	ldmisc.c	FUNCTION_1
0x400010b	          0x4889f7	                            mov rdi, rsi	        70	ldmisc.c	FUNCTION_1
0x400010e	              0x55	                                push rbp	        70	ldmisc.c	FUNCTION_1
0x400010f	              0x53	                                push rbx	        70	ldmisc.c	FUNCTION_1
0x4000110	          0x4531c0	                            xor r8d, r8d	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000113	      0xbb03010e00	                        mov ebx, 0xe0103	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x4000118	    0x4881ecc80100	                          sub rsp, 0x1c8	        70	ldmisc.c	FUNCTION_1
0x400011f	           0xfb636	                   movzx esi, byte [rsi]	        70	ldmisc.c	FUNCTION_1
0x4000122	        0x894c2404	                mov dword [rsp + 4], ecx	        70	ldmisc.c	FUNCTION_1
0x4000126	    0xc74424700000	               mov dword [rsp + 0x70], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x400012e	          0x4889f9	                            mov rcx, rdi	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000131	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	ldmisc.c	FUNCTION_1
0x400013a	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	        70	ldmisc.c	FUNCTION_1
0x4000142	            0x31c0	                            xor eax, eax	        70	ldmisc.c	FUNCTION_1
0x4000144	    0xc78424880000	               mov dword [rsp + 0x88], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x400014f	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x400015a	    0xc78424b80000	               mov dword [rsp + 0xb8], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000165	    0xc78424d00000	               mov dword [rsp + 0xd0], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000170	            0x89f0	                            mov eax, esi	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000172	    0xc78424e80000	               mov dword [rsp + 0xe8], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x400017d	    0xc78424000100	              mov dword [rsp + 0x100], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000188	    0xc78424180100	              mov dword [rsp + 0x118], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000193	    0xc78424300100	              mov dword [rsp + 0x130], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x400019e	            0x6690	                                     nop	        99	ldmisc.c	FUNCTION_1	FOR_1
0x40001a0	            0x84c0	                             test al, al	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x40001a2	            0x7460	                            je 0x4000204	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x40001a4	            0x3c25	                            cmp al, 0x25	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001a6	            0x750c	                           jne 0x40001b4	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001a8	            0xeb19	                           jmp 0x40001c3	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001aa	    0x660f1f440000	                    nop word [rax + rax]	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001b0	            0x84c0	                             test al, al	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001b2	            0x740b	                            je 0x40001bf	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001b4	        0x4883c101	                              add rcx, 1	       106	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001b8	           0xfb601	                   movzx eax, byte [rcx]	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001bb	            0x3c25	                            cmp al, 0x25	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001bd	            0x75f1	                           jne 0x40001b0	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x40001bf	            0x3c25	                            cmp al, 0x25	       108	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x40001c1	            0x75dd	                           jne 0x40001a0	       108	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x40001c3	         0xfb64101	               movzx eax, byte [rcx + 1]	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001c7	        0x4c8d5101	                      lea r10, [rcx + 1]	       110	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x40001cb	            0x3c30	                            cmp al, 0x30	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001cd	     0xf8423020000	                            je 0x40003f6	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001d3	        0x440fb6d8	                          movzx r11d, al	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001d7	           0xfbee8	                           movsx ebp, al	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001da	          0x4589c1	                            mov r9d, r8d	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001dd	    0x43f6841b0000	                test byte [r11 + r11], 4	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001e6	     0xf85ef010000	                           jne 0x40003db	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001ec	            0x3c76	                            cmp al, 0x76	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40001ee	        0x498d4a01	                      lea rcx, [r10 + 1]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40001f2	     0xf8702020000	                            ja 0x40003fa	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40001f8	        0x440fb6d8	                          movzx r11d, al	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40001fc	    0x42ff24dd0000	                       jmp qword [r11*8]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000204	          0x4585c0	                           test r8d, r8d	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000207	            0x744f	                            je 0x4000258	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000209	        0x418d48ff	                       lea ecx, [r8 - 1]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x400020d	      0x488d442470	                   lea rax, [rsp + 0x70]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000212	      0x488d4c4903	              lea rcx, [rcx + rcx*2 + 3]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000217	        0x4c8d04c8	                   lea r8, [rax + rcx*8]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x400021b	          0x833805	                      cmp dword [rax], 5	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x400021e	     0xf8750010000	                            ja 0x4000374	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000224	            0x8b08	                    mov ecx, dword [rax]	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000226	    0xff24cd000000	                       jmp qword [rcx*8]	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x400022d	           0xf1f00	                         nop dword [rax]	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000230	            0x8b0a	                    mov ecx, dword [rdx]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000232	          0x83f92f	                           cmp ecx, 0x2f	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000235	     0xf874d010000	                            ja 0x4000388	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400023b	            0x89ce	                            mov esi, ecx	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400023d	        0x48037210	             add rsi, qword [rdx + 0x10]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000241	          0x83c108	                              add ecx, 8	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000244	            0x890a	                    mov dword [rdx], ecx	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000246	          0x488b0e	                    mov rcx, qword [rsi]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000249	          0x488908	                    mov qword [rax], rcx	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400024c	        0x4883c018	                           add rax, 0x18	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000250	          0x4c39c0	                             cmp rax, r8	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000253	            0x75c6	                           jne 0x400021b	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000255	           0xfb637	                   movzx esi, byte [rdi]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000258	            0x89f0	                            mov eax, esi	       176	ldmisc.c	FUNCTION_1	FOR_2
0x400025a	          0x4531ed	                          xor r13d, r13d	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400025d	    0xc74424280000	               mov dword [rsp + 0x28], 0	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000265	            0x84c0	                             test al, al	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x4000267	            0x7455	                            je 0x40002be	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x4000269	     0xf1f80000000	                         nop dword [rax]	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x4000270	            0x3c25	                            cmp al, 0x25	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000272	          0x4889fb	                            mov rbx, rdi	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000275	          0x4989ff	                            mov r15, rdi	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000278	            0x750d	                           jne 0x4000287	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x400027a	      0xe985010000	                           jmp 0x4000404	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x400027f	              0x90	                                     nop	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000280	            0x84c0	                             test al, al	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000282	            0x740f	                            je 0x4000293	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000284	          0x4c89fb	                            mov rbx, r15	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000287	         0xfb64301	               movzx eax, byte [rbx + 1]	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x400028b	        0x4c8d7b01	                      lea r15, [rbx + 1]	       207	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x400028f	            0x3c25	                            cmp al, 0x25	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000291	            0x75ed	                           jne 0x4000280	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000293	          0x4c39ff	                            cmp rdi, r15	       208	ldmisc.c	FUNCTION_1	WHILE_3	IF_7
0x4000296	            0x7417	                            je 0x40002af	       208	ldmisc.c	FUNCTION_1	WHILE_3	IF_7
0x4000298	          0x4c89fa	                            mov rdx, r15	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x400029b	          0x4c89f1	                            mov rcx, r14	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x400029e	      0xbe01000000	                              mov esi, 1	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x40002a3	          0x4829fa	                            sub rdx, rdi	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x40002a6	      0xe800000000	                          call 0x40002ab	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x40002ab	         0xfb64301	               movzx eax, byte [rbx + 1]	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x40002af	            0x3c25	                            cmp al, 0x25	       214	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x40002b1	     0xf844d010000	                            je 0x4000404	       214	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x40002b7	            0x84c0	                             test al, al	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x40002b9	          0x4c89ff	                            mov rdi, r15	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40002bc	            0x75b2	                           jne 0x4000270	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x40002be	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       595	ldmisc.c	FUNCTION_1	IF_48
0x40002c2	            0x85c9	                           test ecx, ecx	       595	ldmisc.c	FUNCTION_1	IF_48
0x40002c4	     0xf8581010000	                           jne 0x400044b	       595	ldmisc.c	FUNCTION_1	IF_48
0x40002ca	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       598	ldmisc.c	FUNCTION_1	IF_49
0x40002ce	            0x85c0	                           test eax, eax	       598	ldmisc.c	FUNCTION_1	IF_49
0x40002d0	     0xf852b070000	                           jne 0x4000a01	       598	ldmisc.c	FUNCTION_1	IF_49
0x40002d6	    0x488b8424b801	           mov rax, qword [rsp + 0x1b8] 	       600	ldmisc.c	FUNCTION_1
0x40002de	    0x644833042528	                xor rax, qword fs:[0x28]	       600	ldmisc.c	FUNCTION_1
0x40002e7	     0xf851e070000	                           jne 0x4000a0b	       600	ldmisc.c	FUNCTION_1
0x40002ed	    0x4881c4c80100	                          add rsp, 0x1c8	       600	ldmisc.c	FUNCTION_1
0x40002f4	              0x5b	                                 pop rbx	       600	ldmisc.c	FUNCTION_1
0x40002f5	              0x5d	                                 pop rbp	       600	ldmisc.c	FUNCTION_1
0x40002f6	            0x415c	                                 pop r12	       600	ldmisc.c	FUNCTION_1
0x40002f8	            0x415d	                                 pop r13	       600	ldmisc.c	FUNCTION_1
0x40002fa	            0x415e	                                 pop r14	       600	ldmisc.c	FUNCTION_1
0x40002fc	            0x415f	                                 pop r15	       600	ldmisc.c	FUNCTION_1
0x40002fe	              0xc3	                                     ret	       600	ldmisc.c	FUNCTION_1
0x40002ff	            0x8b32	                    mov esi, dword [rdx]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000301	          0x83fe2f	                           cmp esi, 0x2f	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000304	     0xf879d000000	                            ja 0x40003a7	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400030a	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400030e	        0x448d4e08	                      lea r9d, [rsi + 8]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000312	          0x4189f2	                           mov r10d, esi	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000315	          0x44890a	                    mov dword [rdx], r9d	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000318	        0x4183f92f	                           cmp r9d, 0x2f	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400031c	        0x4e8b1411	              mov r10, qword [rcx + r10]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000320	          0x4c8910	                    mov qword [rax], r10	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000323	     0xf87e7060000	                            ja 0x4000a10	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000329	          0x4589ca	                           mov r10d, r9d	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400032c	        0x448d4e10	                   lea r9d, [rsi + 0x10]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000330	          0x44890a	                    mov dword [rdx], r9d	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000333	        0x4e8b1411	              mov r10, qword [rcx + r10]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000337	        0x4183f92f	                           cmp r9d, 0x2f	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400033b	        0x4c895008	                mov qword [rax + 8], r10	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400033f	     0xf8761060000	                            ja 0x40009a6	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000345	          0x83c618	                           add esi, 0x18	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000348	          0x4c01c9	                             add rcx, r9	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400034b	            0x8932	                    mov dword [rdx], esi	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400034d	          0x488b09	                    mov rcx, qword [rcx]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000350	        0x48894810	             mov qword [rax + 0x10], rcx	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000354	      0xe9f3feffff	                           jmp 0x400024c	       196	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000359	            0x8b0a	                    mov ecx, dword [rdx]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400035b	          0x83f92f	                           cmp ecx, 0x2f	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400035e	            0x7739	                            ja 0x4000399	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000360	            0x89ce	                            mov esi, ecx	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000362	        0x48037210	             add rsi, qword [rdx + 0x10]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000366	          0x83c108	                              add ecx, 8	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000369	            0x890a	                    mov dword [rdx], ecx	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400036b	            0x8b0e	                    mov ecx, dword [rsi]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400036d	            0x8908	                    mov dword [rax], ecx	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400036f	      0xe9d8feffff	                           jmp 0x400024c	       182	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000374	      0xba00000000	                              mov edx, 0	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x4000379	      0xbec6000000	                           mov esi, 0xc6	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x400037e	      0xbf00000000	                              mov edi, 0	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x4000383	      0xe800000000	                          call 0x4000388	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x4000388	        0x488b7208	                mov rsi, qword [rdx + 8]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400038c	        0x488d4e08	                      lea rcx, [rsi + 8]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000390	        0x48894a08	                mov qword [rdx + 8], rcx	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000394	      0xe9adfeffff	                           jmp 0x4000246	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000399	        0x488b7208	                mov rsi, qword [rdx + 8]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400039d	        0x488d4e08	                      lea rcx, [rsi + 8]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40003a1	        0x48894a08	                mov qword [rdx + 8], rcx	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40003a5	            0xebc4	                           jmp 0x400036b	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40003a7	        0x488b4a08	                mov rcx, qword [rdx + 8]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40003ab	          0x4889ce	                            mov rsi, rcx	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40003ae	        0x4883c108	                              add rcx, 8	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40003b2	        0x48894a08	                mov qword [rdx + 8], rcx	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40003b6	          0x488b36	                    mov rsi, qword [rsi]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40003b9	          0x488930	                    mov qword [rax], rsi	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40003bc	          0x4889ce	                            mov rsi, rcx	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40003bf	        0x4883c108	                              add rcx, 8	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40003c3	        0x48894a08	                mov qword [rdx + 8], rcx	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40003c7	          0x488b36	                    mov rsi, qword [rsi]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40003ca	        0x48897008	                mov qword [rax + 8], rsi	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40003ce	        0x488d7108	                      lea rsi, [rcx + 8]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40003d2	        0x48897208	                mov qword [rdx + 8], rsi	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40003d6	      0xe972ffffff	                           jmp 0x400034d	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40003db	        0x80790224	                cmp byte [rcx + 2], 0x24	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40003df	     0xf8507feffff	                           jne 0x40001ec	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40003e5	        0x448d4dcf	                   lea r9d, [rbp - 0x31]	       115	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40003e9	        0x4c8d5103	                      lea r10, [rcx + 3]	       116	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40003ed	         0xfb64103	               movzx eax, byte [rcx + 3]	       116	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40003f1	      0xe9f6fdffff	                           jmp 0x40001ec	       116	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40003f6	        0x4883c102	                              add rcx, 2	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40003fa	      0x410fb64201	               movzx eax, byte [r10 + 1]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40003ff	      0xe99cfdffff	                           jmp 0x40001a0	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000404	      0x410fb65701	               movzx edx, byte [r15 + 1]	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000409	        0x498d5f01	                      lea rbx, [r15 + 1]	       216	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x400040d	          0x80fa30	                            cmp dl, 0x30	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000410	     0xf842d050000	                            je 0x4000943	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000416	           0xfb6ca	                           movzx ecx, dl	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000419	           0xfbef2	                           movsx esi, dl	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x400041c	          0x4489e8	                           mov eax, r13d	       218	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x400041f	    0xf68409000000	                test byte [rcx + rcx], 4	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000427	            0x740b	                            je 0x4000434	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000429	      0x41807f0224	                cmp byte [r15 + 2], 0x24	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x400042e	     0xf84b1000000	                            je 0x40004e5	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000434	          0x80fa76	                            cmp dl, 0x76	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000437	        0x4c8d7b01	                      lea r15, [rbx + 1]	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400043b	     0xf8715040000	                            ja 0x4000856	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000441	           0xfb6ca	                           movzx ecx, dl	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000444	    0xff24cd000000	                       jmp qword [rcx*8]	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400044b	    0x8b1500000000	            mov edx, dword [0x04000451] 	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000451	            0x85d2	                           test edx, edx	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000453	     0xf8471feffff	                            je 0x40002ca	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000459	    0xc70500000000	               mov dword [0x04000463], 0	       596	ldmisc.c	FUNCTION_1	IF_48
0x4000463	      0xe962feffff	                           jmp 0x40002ca	       596	ldmisc.c	FUNCTION_1	IF_48
0x4000468	      0xb804000000	                              mov eax, 4	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400046d	        0x4183f908	                              cmp r9d, 8	       168	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	IF_6
0x4000471	     0xf8776050000	                            ja 0x40009ed	       168	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	IF_6
0x4000477	        0x4f8d0c49	                     lea r9, [r9 + r9*2]	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x400047b	        0x4183c001	                              add r8d, 1	       171	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x400047f	      0x428944cc70	      mov dword [rsp + r9*8 + 0x70], eax	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x4000484	           0xfb601	                   movzx eax, byte [rcx]	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x4000487	      0xe914fdffff	                           jmp 0x40001a0	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x400048c	      0xb801000000	                              mov eax, 1	       153	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000491	            0xebda	                           jmp 0x400046d	       153	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000493	      0x410fb64201	               movzx eax, byte [r10 + 1]	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000498	            0x3c64	                            cmp al, 0x64	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x400049a	            0x7408	                            je 0x40004a4	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x400049c	            0x3c75	                            cmp al, 0x75	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x400049e	     0xf85fcfcffff	                           jne 0x40001a0	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x40004a4	        0x498d4a02	                      lea rcx, [r10 + 2]	       158	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x40004a8	      0xb802000000	                              mov eax, 2	       158	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x40004ad	            0xebbe	                           jmp 0x400046d	       158	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x40004af	      0x410fb64201	               movzx eax, byte [r10 + 1]	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004b4	        0x448d58bf	                  lea r11d, [rax - 0x41]	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004b8	      0xb803000000	                              mov eax, 3	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004bd	        0x4180fb13	                          cmp r11b, 0x13	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004c1	            0x77aa	                            ja 0x400046d	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004c3	        0x4c0fa3db	                             bt rbx, r11	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004c7	            0x73a4	                           jae 0x400046d	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004c9	        0x498d4a02	                      lea rcx, [r10 + 2]	       139	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004cd	            0xeb9e	                           jmp 0x400046d	       139	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40004cf	          0x4c89d1	                            mov rcx, r10	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40004d2	      0xe9c9fcffff	                           jmp 0x40001a0	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40004d7	      0xb805000000	                              mov eax, 5	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40004dc	            0xeb8f	                           jmp 0x400046d	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40004de	      0xb803000000	                              mov eax, 3	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40004e3	            0xeb88	                           jmp 0x400046d	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40004e5	          0x8d46cf	                   lea eax, [rsi - 0x31]	       221	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x40004e8	        0x498d5f03	                      lea rbx, [r15 + 3]	       222	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x40004ec	      0x410fb65703	               movzx edx, byte [r15 + 3]	       222	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x40004f1	      0xe93effffff	                           jmp 0x4000434	       222	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x40004f6	          0x4989df	                            mov r15, rbx	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004f9	          0x4c89f6	                            mov rsi, r14	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x40004fc	      0xbf25000000	                           mov edi, 0x25	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x4000501	      0xe800000000	                          call 0x4000506	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x4000506	        0x410fb607	                   movzx eax, byte [r15]	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x400050a	      0xe9a8fdffff	                           jmp 0x40002b7	       234	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400050f	        0x488d0440	                  lea rax, [rax + rax*2]	       255	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000513	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	        33	stdio2.h	FUNCTION_10	CALL_1
0x400051b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000520	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000525	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x400052a	        0x4183c501	                             add r13d, 1	       256	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400052e	      0x4c8b44c470	     mov r8, qword [rsp + rax*8 + 0x70] 	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000533	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000535	      0xe800000000	                          call 0x400053a	        33	stdio2.h	FUNCTION_10	CALL_1
0x400053a	     0xfb684245001	          movzx eax, byte [rsp + 0x150] 	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000542	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x400054a	            0x3c30	                            cmp al, 0x30	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x400054c	            0x750b	                           jne 0x4000559	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x400054e	        0x4883c701	                              add rdi, 1	       259	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000552	           0xfb607	                   movzx eax, byte [rdi]	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000555	            0x3c30	                            cmp al, 0x30	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000557	            0x74f5	                            je 0x400054e	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000559	            0x3c01	                               cmp al, 1	       261	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_11
0x400055b	          0x4c89f6	                            mov rsi, r14	       262	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_16
0x400055e	        0x4883df00	                              sbb rdi, 0	       261	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_11
0x4000562	      0xe800000000	                          call 0x4000567	       262	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_16
0x4000567	         0xfb64301	               movzx eax, byte [rbx + 1]	       262	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_16
0x400056b	      0xe947fdffff	                           jmp 0x40002b7	       264	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000570	    0x488b3d000000	            mov rdi, qword [0x04000577] 	        97	stdio2.h	CALL_9
0x4000577	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x400057a	      0xe800000000	                          call 0x400057f	        97	stdio2.h	CALL_9
0x400057f	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x4000583	      0xe92ffdffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x4000588	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x400058c	    0xc74424280100	               mov dword [rsp + 0x28], 1	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000594	      0xe91efdffff	                           jmp 0x40002b7	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000599	      0xe800000000	                          call 0x400059e	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x400059e	            0x89c7	                            mov edi, eax	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x40005a0	      0xe800000000	                          call 0x40005a5	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x40005a5	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x40005a8	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_9
0x40005ab	      0xe800000000	                          call 0x40005b0	        97	stdio2.h	CALL_9
0x40005b0	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x40005b4	      0xe9fefcffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x40005b9	        0x488d0440	                  lea rax, [rax + rax*2]	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005bd	        0x4183c501	                             add r13d, 1	       330	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005c1	        0x48c1e003	                              shl rax, 3	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005c5	      0x488b6c0470	      mov rbp, qword [rsp + rax + 0x70] 	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005ca	      0x488b740478	      mov rsi, qword [rsp + rax + 0x78] 	       328	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005cf	    0x488b84048000	      mov rax, qword [rsp + rax + 0x80] 	       329	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005d7	          0x4885ed	                           test rbp, rbp	       332	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13
0x40005da	      0x4889742410	             mov qword [rsp + 0x10], rsi	       328	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005df	      0x4889442418	             mov qword [rsp + 0x18], rax	       329	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005e4	     0xf8406010000	                            je 0x40006f0	       332	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13
0x40005ea	          0x4889ef	                            mov rdi, rbp	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x40005ed	      0xe800000000	                          call 0x40005f2	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x40005f2	            0x85c0	                           test eax, eax	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x40005f4	     0xf8452030000	                            je 0x400094c	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x40005fa	    0x488bb5b00000	            mov rsi, qword [rbp + 0xb0] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000601	        0x488b4508	                mov rax, qword [rbp + 8]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000605	          0x4889ef	                            mov rdi, rbp	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000608	            0x6a00	                                  push 0	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400060a	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400060f	              0x52	                                push rdx	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000610	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000615	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400061a	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400061f	      0x4c8d442448	                    lea r8, [rsp + 0x48]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000624	    0xff9038020000	                call qword [rax + 0x238]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400062a	            0x85c0	                           test eax, eax	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400062c	              0x5f	                                 pop rdi	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400062d	            0x4158	                                  pop r8	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400062f	     0xf84bb000000	                            je 0x40006f0	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000635	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x400063a	          0x4885d2	                           test rdx, rdx	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x400063d	      0x4889542408	                mov qword [rsp + 8], rdx	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000642	            0x7415	                            je 0x4000659	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000644	           0xfb60b	                   movzx ecx, byte [rbx]	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000647	          0x80f943	                            cmp cl, 0x43	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x400064a	     0xf84de050000	                            je 0x4000c2e	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000650	          0x80f948	                            cmp cl, 0x48	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000653	     0xf84d5050000	                            je 0x4000c2e	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000659	          0x4889ea	                            mov rdx, rbp	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x400065c	      0xbe00000000	                              mov esi, 0	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x4000661	          0x4c89f7	                            mov rdi, r14	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x4000664	            0x31c0	                            xor eax, eax	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x4000666	    0x41bc01000000	                             mov r12d, 1	       348	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400066c	      0xe800000000	                          call 0x4000671	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x4000671	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x4000676	          0x4885c9	                           test rcx, rcx	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x4000679	     0xf84f0020000	                            je 0x400096f	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x400067f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000684	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000686	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400068b	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x400068e	            0x31ed	                            xor ebp, ebp	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x4000690	      0xe800000000	                          call 0x4000695	        97	stdio2.h	CALL_9
0x4000695	           0xfb603	                   movzx eax, byte [rbx]	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x4000698	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x400069d	            0x3c48	                            cmp al, 0x48	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x400069f	        0x400f95c5	                               setne bpl	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x40006a3	          0x4885d2	                           test rdx, rdx	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40006a6	            0x7408	                            je 0x40006b0	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40006a8	            0x3c47	                            cmp al, 0x47	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40006aa	     0xf84e2020000	                            je 0x4000992	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40006b0	    0x48837c243800	               cmp qword [rsp + 0x38], 0	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x40006b6	            0x7450	                            je 0x4000708	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x40006b8	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x40006bc	            0x85c9	                           test ecx, ecx	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x40006be	            0x7448	                            je 0x4000708	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x40006c0	            0x3c48	                            cmp al, 0x48	       399	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x40006c2	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_9
0x40006c8	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x40006cd	        0x4c0f44c0	                           cmove r8, rax	        97	stdio2.h	CALL_9
0x40006d1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40006d6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40006db	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x40006de	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x40006e0	      0xe800000000	                          call 0x40006e5	        97	stdio2.h	CALL_9
0x40006e5	            0x85ed	                           test ebp, ebp	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x40006e7	            0x7538	                           jne 0x4000721	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x40006e9	            0xeb1d	                           jmp 0x4000708	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x40006eb	       0xf1f440000	                   nop dword [rax + rax]	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x40006f0	          0x4889ea	                            mov rdx, rbp	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006f3	      0xbe00000000	                              mov esi, 0	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006f8	          0x4c89f7	                            mov rdi, r14	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006fb	            0x31c0	                            xor eax, eax	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006fd	    0x41bc01000000	                             mov r12d, 1	       348	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000703	      0xe800000000	                          call 0x4000708	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x4000708	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x400070d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x4000712	      0xbe00000000	                              mov esi, 0	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x4000717	          0x4c89f7	                            mov rdi, r14	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x400071a	            0x31c0	                            xor eax, eax	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x400071c	      0xe800000000	                          call 0x4000721	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x4000721	          0x4585e4	                         test r12d, r12d	       411	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x4000724	            0x7443	                            je 0x4000769	       411	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x4000726	    0x488b3d000000	            mov rdi, qword [0x0400072d] 	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x400072d	    0x48c705000000	               mov qword [0x04000738], 0	       413	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x4000738	          0x4885ff	                           test rdi, rdi	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x400073b	            0x7410	                            je 0x400074d	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x400073d	      0xe800000000	                          call 0x4000742	       416	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26	CALL_39
0x4000742	    0x48c705000000	               mov qword [0x0400074d], 0	       417	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x400074d	    0x488b3d000000	            mov rdi, qword [0x04000754] 	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000754	          0x4885ff	                           test rdi, rdi	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000757	            0x7410	                            je 0x4000769	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000759	      0xe800000000	                          call 0x400075e	       421	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27	CALL_40
0x400075e	    0x48c705000000	               mov qword [0x04000769], 0	       422	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000769	         0xfb64301	               movzx eax, byte [rbx + 1]	       422	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x400076d	      0xe945fbffff	                           jmp 0x40002b7	       422	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000772	        0x488d0440	                  lea rax, [rax + rax*2]	       567	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000776	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400077b	        0x8b4cc470	    mov ecx, dword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x400077f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000784	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000787	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000789	      0xe800000000	                          call 0x400078e	        97	stdio2.h	CALL_9
0x400078e	        0x4183c501	                             add r13d, 1	       568	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000792	         0xfb64301	               movzx eax, byte [rbx + 1]	       568	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000796	      0xe91cfbffff	                           jmp 0x40002b7	       569	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400079b	        0x488d0440	                  lea rax, [rax + rax*2]	       555	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400079f	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x40007a2	        0x4183c501	                             add r13d, 1	       556	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40007a6	      0x488b7cc470	    mov rdi, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x40007ab	      0xe800000000	                          call 0x40007b0	        97	stdio2.h	CALL_9
0x40007b0	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x40007b4	      0xe9fefaffff	                           jmp 0x40002b7	       557	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40007b9	         0xfb65301	               movzx edx, byte [rbx + 1]	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40007bd	          0x80fa41	                            cmp dl, 0x41	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40007c0	     0xf8474050000	                            je 0x4000d3a	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40007c6	          0x80fa42	                            cmp dl, 0x42	       455	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40007c9	     0xf84b8030000	                            je 0x4000b87	       455	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40007cf	          0x80fa49	                            cmp dl, 0x49	       471	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x40007d2	     0xf84cf020000	                            je 0x4000aa7	       471	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x40007d8	          0x80fa52	                            cmp dl, 0x52	       489	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x40007db	        0x488d0440	                  lea rax, [rax + rax*2]	       492	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x40007df	     0xf846c020000	                            je 0x4000a51	       489	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x40007e5	          0x80fa53	                            cmp dl, 0x53	       501	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x40007e8	     0xf842b020000	                            je 0x4000a19	       501	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x40007ee	          0x80fa54	                            cmp dl, 0x54	       518	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x40007f1	     0xf8511040000	                           jne 0x4000c08	       518	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x40007f7	      0x488b6cc470	    mov rbp, qword [rsp + rax*8 + 0x70] 	       521	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x40007fc	        0x4183c501	                             add r13d, 1	       524	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000800	        0x4c8d7b02	                      lea r15, [rbx + 2]	       523	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000804	          0x4885ed	                           test rbp, rbp	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x4000807	            0x740a	                            je 0x4000813	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x4000809	        0x807d0000	                       cmp byte [rbp], 0	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x400080d	     0xf852a030000	                           jne 0x4000b3d	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x4000813	      0xba05000000	                              mov edx, 5	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x4000818	      0xbe00000000	                              mov esi, 0	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x400081d	            0x31ff	                            xor edi, edi	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x400081f	      0xe800000000	                          call 0x4000824	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x4000824	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000829	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_9
0x400082c	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x400082f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000831	      0xe800000000	                          call 0x4000836	        97	stdio2.h	CALL_9
0x4000836	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x400083a	      0xe978faffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x400083f	              0x90	                                     nop	        97	stdio2.h	CALL_9
0x4000840	         0xfb64b01	               movzx ecx, byte [rbx + 1]	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000844	          0x80f964	                            cmp cl, 0x64	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000847	     0xf8490010000	                            je 0x40009dd	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x400084d	          0x80f975	                            cmp cl, 0x75	       579	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000850	     0xf8459010000	                            je 0x40009af	       579	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000856	           0xfbeca	                           movsx ecx, dl	        97	stdio2.h	CALL_9
0x4000859	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400085e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000863	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000866	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000868	      0xe800000000	                          call 0x400086d	        97	stdio2.h	CALL_9
0x400086d	      0xe9f7feffff	                           jmp 0x4000769	        97	stdio2.h	CALL_9
0x4000872	        0x488d0440	                  lea rax, [rax + rax*2]	       561	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000876	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400087b	        0x8b4cc470	    mov ecx, dword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x400087f	      0xe9fbfeffff	                           jmp 0x400077f	        97	stdio2.h	CALL_9
0x4000884	    0xc70500000000	               mov dword [0x0400088e], 0	       238	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400088e	         0xfb64301	               movzx eax, byte [rbx + 1]	       238	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000892	      0xe920faffff	                           jmp 0x40002b7	       239	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000897	        0x488d0440	                  lea rax, [rax + rax*2]	       275	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400089b	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008a3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008a8	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008ad	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008b2	        0x4183c501	                             add r13d, 1	       276	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40008b6	      0x4c8b44c470	     mov r8, qword [rsp + rax*8 + 0x70] 	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008bb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008bd	    0x488dac245001	                  lea rbp, [rsp + 0x150]	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008c5	      0xe800000000	                          call 0x40008ca	        33	stdio2.h	FUNCTION_10	CALL_1
0x40008ca	     0xfb684245001	          movzx eax, byte [rsp + 0x150] 	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008d2	            0x3c30	                            cmp al, 0x30	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008d4	            0x750c	                           jne 0x40008e2	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008d6	        0x4883c501	                              add rbp, 1	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008da	         0xfb64500	                   movzx eax, byte [rbp]	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008de	            0x3c30	                            cmp al, 0x30	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008e0	            0x74f4	                            je 0x40008d6	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008e2	            0x3c01	                               cmp al, 1	       281	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_12
0x40008e4	        0x4883dd00	                              sbb rbp, 0	       281	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_12
0x40008e8	          0x4889ef	                            mov rdi, rbp	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x40008eb	      0xe800000000	                          call 0x40008f0	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x40008f0	          0x83f807	                              cmp eax, 7	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40008f3	          0x4189c4	                           mov r12d, eax	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x40008f6	            0x7f17	                            jg 0x400090f	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40008f8	          0x4c89f6	                            mov rsi, r14	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x40008fb	      0xbf20000000	                           mov edi, 0x20	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x4000900	        0x4183c401	                             add r12d, 1	       286	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x4000904	      0xe800000000	                          call 0x4000909	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x4000909	        0x4183fc08	                             cmp r12d, 8	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x400090d	            0x75e9	                           jne 0x40008f8	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x400090f	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_9
0x4000912	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000917	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400091c	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x400091f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000921	      0xe800000000	                          call 0x4000926	        97	stdio2.h	CALL_9
0x4000926	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x400092a	      0xe988f9ffff	                           jmp 0x40002b7	       290	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400092f	        0x488d0440	                  lea rax, [rax + rax*2]	       244	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000933	        0x4183c501	                             add r13d, 1	       245	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000937	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400093c	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x4000941	            0xebd4	                           jmp 0x4000917	        97	stdio2.h	CALL_9
0x4000943	        0x4983c702	                              add r15, 2	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000947	      0xe90affffff	                           jmp 0x4000856	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400094c	            0x31ff	                            xor edi, edi	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400094e	      0xba05000000	                              mov edx, 5	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000953	      0xbe00000000	                              mov esi, 0	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000958	      0xe800000000	                          call 0x400095d	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400095d	          0x4889ee	                            mov rsi, rbp	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000960	          0x4889c7	                            mov rdi, rax	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000963	            0x31c0	                            xor eax, eax	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000965	      0xe800000000	                          call 0x400096a	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400096a	      0xe98bfcffff	                           jmp 0x40005fa	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400096f	           0xfb60b	                   movzx ecx, byte [rbx]	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000972	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000977	            0x31ed	                            xor ebp, ebp	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x4000979	          0x80f948	                            cmp cl, 0x48	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x400097c	        0x400f95c5	                               setne bpl	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x4000980	          0x80f947	                            cmp cl, 0x47	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000983	     0xf857ffdffff	                           jne 0x4000708	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000989	          0x4885d2	                           test rdx, rdx	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x400098c	     0xf8476fdffff	                            je 0x4000708	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000992	      0xbe00000000	                              mov esi, 0	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x4000997	          0x4c89f7	                            mov rdi, r14	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x400099a	            0x31c0	                            xor eax, eax	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x400099c	      0xe800000000	                          call 0x40009a1	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x40009a1	      0xe93ffdffff	                           jmp 0x40006e5	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x40009a6	        0x488b4a08	                mov rcx, qword [rdx + 8]	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x40009aa	      0xe91ffaffff	                           jmp 0x40003ce	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x40009af	        0x488d0440	                  lea rax, [rax + rax*2]	       581	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x40009b3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40009b8	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x40009bd	        0x4c8d7b02	                      lea r15, [rbx + 2]	       583	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x40009c1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40009c6	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x40009c9	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x40009cb	        0x4183c501	                             add r13d, 1	       582	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x40009cf	      0xe800000000	                          call 0x40009d4	        97	stdio2.h	CALL_9
0x40009d4	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x40009d8	      0xe9daf8ffff	                           jmp 0x40002b7	       584	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x40009dd	        0x488d0440	                  lea rax, [rax + rax*2]	       574	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x40009e1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40009e6	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x40009eb	            0xebd0	                           jmp 0x40009bd	        97	stdio2.h	CALL_9
0x40009ed	      0xba00000000	                              mov edx, 0	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x40009f2	      0xbea9000000	                           mov esi, 0xa9	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x40009f7	      0xbf00000000	                              mov edi, 0	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x40009fc	      0xe800000000	                          call 0x4000a01	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x4000a01	      0xbf01000000	                              mov edi, 1	       599	ldmisc.c	FUNCTION_1	CALL_56
0x4000a06	      0xe800000000	                          call 0x4000a0b	       599	ldmisc.c	FUNCTION_1	CALL_56
0x4000a0b	      0xe800000000	                          call 0x4000a10	       600	ldmisc.c	FUNCTION_1
0x4000a10	        0x488b4a08	                mov rcx, qword [rdx + 8]	       600	ldmisc.c	FUNCTION_1
0x4000a14	      0xe9a3f9ffff	                           jmp 0x40003bc	       600	ldmisc.c	FUNCTION_1
0x4000a19	      0x488b54c470	    mov rdx, qword [rsp + rax*8 + 0x70] 	       505	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000a1e	        0x4183c501	                             add r13d, 1	       508	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000a22	        0x4c8d7b02	                      lea r15, [rbx + 2]	       507	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000a26	          0x4885d2	                           test rdx, rdx	       509	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000a29	            0x7461	                            je 0x4000a8c	       509	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000a2b	        0x488b4208	                mov rax, qword [rdx + 8]	       509	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000a2f	          0x4885c0	                           test rax, rax	       515	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_41
0x4000a32	            0x74a0	                            je 0x40009d4	       515	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_41
0x4000a34	        0x448b4204	                mov r8d, dword [rdx + 4]	        97	stdio2.h	CALL_9
0x4000a38	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_9
0x4000a3b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000a40	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000a45	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000a48	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000a4a	      0xe800000000	                          call 0x4000a4f	        97	stdio2.h	CALL_9
0x4000a4f	            0xeb83	                           jmp 0x40009d4	        97	stdio2.h	CALL_9
0x4000a51	      0x488b44c470	    mov rax, qword [rsp + rax*8 + 0x70] 	       492	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000a56	          0x4c89f7	                            mov rdi, r14	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a59	        0x4c8d7b02	                      lea r15, [rbx + 2]	       494	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000a5d	        0x4183c501	                             add r13d, 1	       495	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000a61	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a65	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a69	          0x488b00	                    mov rax, qword [rax]	       497	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000a6c	        0x4c8b4628	              mov r8, qword [rsi + 0x28]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a70	      0xbe00000000	                              mov esi, 0	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a75	          0x488b00	                    mov rax, qword [rax]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a78	        0x488b5008	                mov rdx, qword [rax + 8]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a7c	            0x31c0	                            xor eax, eax	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a7e	      0xe800000000	                          call 0x4000a83	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a83	         0xfb64302	               movzx eax, byte [rbx + 2]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a87	      0xe92bf8ffff	                           jmp 0x40002b7	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a8c	      0xe800000000	                          call 0x4000a91	       512	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40	CALL_52
0x4000a91	    0x8b1500000000	            mov edx, dword [0x04000a97] 	       513	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000a97	      0x4889442448	             mov qword [rsp + 0x48], rax	       512	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40	CALL_52
0x4000a9c	        0x89542444	             mov dword [rsp + 0x44], edx	       513	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000aa0	      0x488d542440	                   lea rdx, [rsp + 0x40]	       511	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000aa5	            0xeb88	                           jmp 0x4000a2f	       511	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000aa7	        0x488d0440	                  lea rax, [rax + rax*2]	       477	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000aab	        0x4183c501	                             add r13d, 1	       478	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000aaf	        0x4c8d7b02	                      lea r15, [rbx + 2]	       476	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000ab3	      0x488b6cc470	    mov rbp, qword [rsp + rax*8 + 0x70] 	       477	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000ab8	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000abc	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000ac3	          0x4885c0	                           test rax, rax	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000ac6	            0x741d	                            je 0x4000ae5	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000ac8	        0xf6404801	               test byte [rax + 0x48], 1	       480	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36	CALL_47
0x4000acc	            0x7517	                           jne 0x4000ae5	       480	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36	CALL_47
0x4000ace	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_9
0x4000ad1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000ad6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000adb	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000ade	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000ae0	      0xe800000000	                          call 0x4000ae5	        97	stdio2.h	CALL_9
0x4000ae5	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        97	stdio2.h	CALL_9
0x4000ae9	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000aec	      0xe800000000	                          call 0x4000af1	        97	stdio2.h	CALL_9
0x4000af1	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000af5	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000afc	          0x4885c0	                           test rax, rax	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000aff	            0x740a	                            je 0x4000b0b	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000b01	        0xf6404801	               test byte [rax + 0x48], 1	       485	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_49
0x4000b05	     0xf84c9feffff	                            je 0x40009d4	       485	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_49
0x4000b0b	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000b0f	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000b13	      0xe800000000	                          call 0x4000b18	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000b18	            0x85c0	                           test eax, eax	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000b1a	     0xf84b4feffff	                            je 0x40009d4	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000b20	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        97	stdio2.h	CALL_9
0x4000b24	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000b29	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000b2e	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000b31	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000b33	      0xe800000000	                          call 0x4000b38	        97	stdio2.h	CALL_9
0x4000b38	      0xe997feffff	                           jmp 0x40009d4	        97	stdio2.h	CALL_9
0x4000b3d	    0x8b3500000000	            mov esi, dword [0x04000b43] 	       530	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44
0x4000b43	            0x85f6	                           test esi, esi	       530	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44
0x4000b45	     0xf8491020000	                            je 0x4000ddc	       530	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44
0x4000b4b	    0x488b3d000000	            mov rdi, qword [0x04000b52] 	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b52	      0xba03000000	                              mov edx, 3	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b57	          0x4889ee	                            mov rsi, rbp	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b5a	      0xe800000000	                          call 0x4000b5f	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b5f	          0x4885c0	                           test rax, rax	       536	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000b62	          0x4989c4	                            mov r12, rax	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b65	     0xf8471020000	                            je 0x4000ddc	       536	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000b6b	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000b6e	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_9
0x4000b71	      0xe800000000	                          call 0x4000b76	        97	stdio2.h	CALL_9
0x4000b76	          0x4c89e7	                            mov rdi, r12	       539	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45	CALL_55
0x4000b79	      0xe800000000	                          call 0x4000b7e	       539	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45	CALL_55
0x4000b7e	         0xfb64302	               movzx eax, byte [rbx + 2]	       539	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45	CALL_55
0x4000b82	      0xe930f7ffff	                           jmp 0x40002b7	       540	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000b87	        0x488d0440	                  lea rax, [rax + rax*2]	       458	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000b8b	        0x4183c501	                             add r13d, 1	       461	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000b8f	        0x4c8d7b02	                      lea r15, [rbx + 2]	       460	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000b93	      0x488b44c470	    mov rax, qword [rsp + rax*8 + 0x70] 	       458	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000b98	          0x4885c0	                           test rax, rax	       462	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	IF_33
0x4000b9b	            0x7426	                            je 0x4000bc3	       462	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	IF_33
0x4000b9d	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x4000ba4	          0x4885d2	                           test rdx, rdx	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x4000ba7	            0x7406	                            je 0x4000baf	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x4000ba9	        0xf6424801	               test byte [rdx + 0x48], 1	       465	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34	CALL_46
0x4000bad	            0x7436	                            je 0x4000be5	       465	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34	CALL_46
0x4000baf	          0x488b38	                    mov rdi, qword [rax]	        97	stdio2.h	CALL_9
0x4000bb2	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000bb5	      0xe800000000	                          call 0x4000bba	        97	stdio2.h	CALL_9
0x4000bba	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000bbe	      0xe9f4f6ffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x4000bc3	    0x488b0d000000	            mov rcx, qword [0x04000bca] 	        97	stdio2.h	CALL_9
0x4000bca	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000bcf	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000bd4	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000bd7	      0xe800000000	                          call 0x4000bdc	        97	stdio2.h	CALL_9
0x4000bdc	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000be0	      0xe9d2f6ffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x4000be5	          0x4c8b00	                     mov r8, qword [rax]	        97	stdio2.h	CALL_9
0x4000be8	          0x488b0a	                    mov rcx, qword [rdx]	        97	stdio2.h	CALL_9
0x4000beb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000bf0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000bf5	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000bf8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000bfa	      0xe800000000	                          call 0x4000bff	        97	stdio2.h	CALL_9
0x4000bff	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000c03	      0xe9aff6ffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x4000c08	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x4000c0d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000c12	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000c17	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000c1a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000c1c	        0x4183c501	                             add r13d, 1	       549	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_14
0x4000c20	      0xe800000000	                          call 0x4000c25	        97	stdio2.h	CALL_9
0x4000c25	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x4000c29	      0xe989f6ffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x4000c2e	    0x488b35000000	            mov rsi, qword [0x04000c35] 	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c35	          0x4885f6	                           test rsi, rsi	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c38	            0x7415	                            je 0x4000c4f	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c3a	    0x488b05000000	            mov rax, qword [0x04000c41] 	       367	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c41	          0x4885c0	                           test rax, rax	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c44	            0x7409	                            je 0x4000c4f	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c46	          0x4839f5	                            cmp rbp, rsi	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c49	     0xf8489000000	                            je 0x4000cd8	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c4f	            0x31ff	                            xor edi, edi	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c51	      0xba05000000	                              mov edx, 5	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c56	      0xbe00000000	                              mov esi, 0	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c5b	      0xe800000000	                          call 0x4000c60	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c60	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c65	          0x4889c6	                            mov rsi, rax	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c68	          0x4c89f7	                            mov rdi, r14	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c6b	            0x31c0	                            xor eax, eax	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c6d	          0x4889ea	                            mov rdx, rbp	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c70	      0xe800000000	                          call 0x4000c75	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c75	    0x488b3d000000	            mov rdi, qword [0x04000c7c] 	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000c7c	    0x48892d000000	            mov qword [0x04000c83], rbp 	       377	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c83	          0x4885ff	                           test rdi, rdi	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000c86	            0x7405	                            je 0x4000c8d	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000c88	      0xe800000000	                          call 0x4000c8d	       379	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_31
0x4000c8d	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x4000c92	    0x48c705000000	               mov qword [0x04000c9d], 0	       380	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c9d	          0x4885ff	                           test rdi, rdi	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x4000ca0	            0x740c	                            je 0x4000cae	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x4000ca2	      0xe800000000	                          call 0x4000ca7	       382	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_32
0x4000ca7	    0x488905000000	            mov qword [0x04000cae], rax 	       382	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_32
0x4000cae	    0x488b3d000000	            mov rdi, qword [0x04000cb5] 	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000cb5	          0x4885ff	                           test rdi, rdi	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000cb8	            0x7405	                            je 0x4000cbf	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000cba	      0xe800000000	                          call 0x4000cbf	       384	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_33
0x4000cbf	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000cc4	          0x4531e4	                          xor r12d, r12d	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000cc7	      0xe800000000	                          call 0x4000ccc	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000ccc	    0x488905000000	            mov qword [0x04000cd3], rax 	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000cd3	      0xe999f9ffff	                           jmp 0x4000671	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000cd8	    0x488b3d000000	            mov rdi, qword [0x04000cdf] 	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cdf	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000ce4	          0x4885ff	                           test rdi, rdi	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000ce7	        0x410f94c1	                                sete r9b	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000ceb	          0x4885f6	                           test rsi, rsi	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cee	        0x410f94c0	                                sete r8b	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cf2	          0x4538c1	                            cmp r9b, r8b	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cf5	     0xf8554ffffff	                           jne 0x4000c4f	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cfb	          0x4885f6	                           test rsi, rsi	       370	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cfe	     0xf84ec000000	                            je 0x4000df0	       370	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000d04	      0xe800000000	                          call 0x4000d09	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000d09	            0x85c0	                           test eax, eax	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000d0b	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000d10	      0x4889442408	                mov qword [rsp + 8], rax	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000d15	     0xf8534ffffff	                           jne 0x4000c4f	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000d1b	    0x488b3d000000	            mov rdi, qword [0x04000d22] 	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000d22	          0x4889c6	                            mov rsi, rax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000d25	          0x4531e4	                          xor r12d, r12d	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000d28	      0xe800000000	                          call 0x4000d2d	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000d2d	            0x85c0	                           test eax, eax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000d2f	     0xf843cf9ffff	                            je 0x4000671	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000d35	      0xe915ffffff	                           jmp 0x4000c4f	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000d3a	        0x488d0440	                  lea rax, [rax + rax*2]	       438	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d3e	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000d41	        0x4183c501	                             add r13d, 1	       439	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d45	        0x4c8d7b02	                      lea r15, [rbx + 2]	       437	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d49	      0x488b6cc470	    mov rbp, qword [rsp + rax*8 + 0x70] 	       438	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d4e	    0x4c8ba5f00000	            mov r12, qword [rbp + 0xf0] 	       440	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d55	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_9
0x4000d59	      0xe800000000	                          call 0x4000d5e	        97	stdio2.h	CALL_9
0x4000d5e	          0x4d85e4	                           test r12, r12	       442	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000d61	     0xf846dfcffff	                            je 0x40009d4	       442	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000d67	      0x498b442408	                mov rax, qword [r12 + 8]	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000d6c	          0x8b4008	                mov eax, dword [rax + 8]	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000d6f	          0x83f805	                              cmp eax, 5	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000d72	     0xf84a6000000	                            je 0x4000e1e	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000d78	          0x83f802	                              cmp eax, 2	       448	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_44
0x4000d7b	     0xf8553fcffff	                           jne 0x40009d4	       448	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_44
0x4000d81	    0x488b85f00000	            mov rax, qword [rbp + 0xf0] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d88	        0x488b4008	                mov rax, qword [rax + 8]	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d8c	        0x83780802	                  cmp dword [rax + 8], 2	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d90	     0xf853efcffff	                           jne 0x40009d4	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d96	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d9d	          0x4885c0	                           test rax, rax	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000da0	     0xf842efcffff	                            je 0x40009d4	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000da6	        0x488b4040	            mov rax, qword [rax + 0x40] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000daa	          0x4885c0	                           test rax, rax	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000dad	     0xf8421fcffff	                            je 0x40009d4	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000db3	          0x488b08	                    mov rcx, qword [rax]	       451	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30
0x4000db6	          0x4885c9	                           test rcx, rcx	       452	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_31
0x4000db9	     0xf8415fcffff	                            je 0x40009d4	       452	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_31
0x4000dbf	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000dc4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000dc9	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000dcc	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000dce	      0xe800000000	                          call 0x4000dd3	        97	stdio2.h	CALL_9
0x4000dd3	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000dd7	      0xe9dbf4ffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x4000ddc	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000ddf	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x4000de2	      0xe800000000	                          call 0x4000de7	        97	stdio2.h	CALL_9
0x4000de7	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000deb	      0xe9c7f4ffff	                           jmp 0x40002b7	        97	stdio2.h	CALL_9
0x4000df0	          0x4889d6	                            mov rsi, rdx	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000df3	          0x4889c7	                            mov rdi, rax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000df6	        0x884c242f	               mov byte [rsp + 0x2f], cl	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000dfa	      0x4889542420	             mov qword [rsp + 0x20], rdx	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000dff	      0xe800000000	                          call 0x4000e04	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000e04	            0x85c0	                           test eax, eax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000e06	     0xf8543feffff	                           jne 0x4000c4f	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000e0c	          0x4531e4	                          xor r12d, r12d	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000e0f	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000e14	       0xfb64c242f	           movzx ecx, byte [rsp + 0x2f] 	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000e19	      0xe959fbffff	                           jmp 0x4000977	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000e1e	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x4000e25	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x4000e2d	     0xf84a1fbffff	                            je 0x40009d4	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x4000e33	        0xf6452302	               test byte [rbp + 0x23], 2	       445	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000e37	     0xf8597fbffff	                           jne 0x40009d4	       445	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000e3d	    0x488b88b00000	            mov rcx, qword [rax + 0xb0] 	       446	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	CALL_43
0x4000e44	      0xe96dffffff	                           jmp 0x4000db6	       446	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	CALL_43
ld_abort	functions,0:IF,1:FOR,0:SWITCH,0:DO,0:ELSE,1:WHILE,0:CALL,7	37
0x4000080	          0x4885d2	                           test rdx, rdx	       697	ldmisc.c	FUNCTION_9	IF_1
0x4000083	            0x4154	                                push r12	       696	ldmisc.c	FUNCTION_9
0x4000085	          0x4189f4	                           mov r12d, esi	       696	ldmisc.c	FUNCTION_9
0x4000088	              0x55	                                push rbp	       696	ldmisc.c	FUNCTION_9
0x4000089	          0x4889fd	                            mov rbp, rdi	       696	ldmisc.c	FUNCTION_9
0x400008c	              0x53	                                push rbx	       696	ldmisc.c	FUNCTION_9
0x400008d	            0x744c	                            je 0x40000db	       697	ldmisc.c	FUNCTION_9	IF_1
0x400008f	          0x4889d3	                            mov rbx, rdx	       697	ldmisc.c	FUNCTION_9	IF_1
0x4000092	      0xbe00000000	                              mov esi, 0	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x4000097	      0xba05000000	                              mov edx, 5	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x400009c	            0x31ff	                            xor edi, edi	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x400009e	      0xe800000000	                          call 0x40000a3	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a3	          0x4889d9	                            mov rcx, rbx	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a6	          0x4889c7	                            mov rdi, rax	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a9	          0x4489e2	                           mov edx, r12d	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000ac	          0x4889ee	                            mov rsi, rbp	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000af	            0x31c0	                            xor eax, eax	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000b1	      0xe800000000	                          call 0x40000b6	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000b6	      0xba05000000	                              mov edx, 5	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000bb	      0xbe00000000	                              mov esi, 0	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000c0	            0x31ff	                            xor edi, edi	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000c2	      0xe800000000	                          call 0x40000c7	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000c7	          0x4889c7	                            mov rdi, rax	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000ca	            0x31c0	                            xor eax, eax	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000cc	      0xe800000000	                          call 0x40000d1	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000d1	      0xbf01000000	                              mov edi, 1	       704	ldmisc.c	FUNCTION_9	CALL_7
0x40000d6	      0xe800000000	                          call 0x40000db	       704	ldmisc.c	FUNCTION_9	CALL_7
0x40000db	            0x31ff	                            xor edi, edi	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000dd	      0xba05000000	                              mov edx, 5	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000e2	      0xbe00000000	                              mov esi, 0	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000e7	      0xe800000000	                          call 0x40000ec	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000ec	          0x4489e2	                           mov edx, r12d	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000ef	          0x4889c7	                            mov rdi, rax	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000f2	          0x4889ee	                            mov rsi, rbp	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000f5	            0x31c0	                            xor eax, eax	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000f7	      0xe800000000	                          call 0x40000fc	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000fc	            0xebb8	                           jmp 0x40000b6	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
info_msg	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:ELSE,0:WHILE,0:CALL,3	36
0x4000e50	    0x4881ecd80000	                           sub rsp, 0xd8	       609	ldmisc.c	FUNCTION_2
0x4000e57	            0x84c0	                             test al, al	       609	ldmisc.c	FUNCTION_2
0x4000e59	      0x4889742428	             mov qword [rsp + 0x28], rsi	       609	ldmisc.c	FUNCTION_2
0x4000e5e	      0x4889542430	             mov qword [rsp + 0x30], rdx	       609	ldmisc.c	FUNCTION_2
0x4000e63	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       609	ldmisc.c	FUNCTION_2
0x4000e68	      0x4c89442440	              mov qword [rsp + 0x40], r8	       609	ldmisc.c	FUNCTION_2
0x4000e6d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       609	ldmisc.c	FUNCTION_2
0x4000e72	            0x7437	                            je 0x4000eab	       609	ldmisc.c	FUNCTION_2
0x4000e74	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       609	ldmisc.c	FUNCTION_2
0x4000e79	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       609	ldmisc.c	FUNCTION_2
0x4000e7e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       609	ldmisc.c	FUNCTION_2
0x4000e83	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       609	ldmisc.c	FUNCTION_2
0x4000e8b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       609	ldmisc.c	FUNCTION_2
0x4000e93	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       609	ldmisc.c	FUNCTION_2
0x4000e9b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       609	ldmisc.c	FUNCTION_2
0x4000ea3	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       609	ldmisc.c	FUNCTION_2
0x4000eab	    0x64488b042528	                mov rax, qword fs:[0x28]	       609	ldmisc.c	FUNCTION_2
0x4000eb4	      0x4889442418	             mov qword [rsp + 0x18], rax	       609	ldmisc.c	FUNCTION_2
0x4000eb9	            0x31c0	                            xor eax, eax	       609	ldmisc.c	FUNCTION_2
0x4000ebb	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000ec3	          0x4889fe	                            mov rsi, rdi	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000ec6	            0x31c9	                            xor ecx, ecx	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000ec8	          0x4889e2	                            mov rdx, rsp	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000ecb	    0x488b3d000000	            mov rdi, qword [0x04000ed2] 	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000ed2	      0x4889442408	                mov qword [rsp + 8], rax	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000ed7	      0x488d442420	                   lea rax, [rsp + 0x20]	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000edc	    0xc70424080000	                      mov dword [rsp], 8	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000ee3	    0xc74424043000	               mov dword [rsp + 4], 0x30	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000eeb	      0x4889442410	             mov qword [rsp + 0x10], rax	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000ef0	      0xe800000000	                          call 0x4000ef5	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000ef5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       615	ldmisc.c	FUNCTION_2
0x4000efa	    0x644833042528	                xor rax, qword fs:[0x28]	       615	ldmisc.c	FUNCTION_2
0x4000f03	            0x7508	                           jne 0x4000f0d	       615	ldmisc.c	FUNCTION_2
0x4000f05	    0x4881c4d80000	                           add rsp, 0xd8	       615	ldmisc.c	FUNCTION_2
0x4000f0c	              0xc3	                                     ret	       615	ldmisc.c	FUNCTION_2
0x4000f0d	      0xe800000000	                          call 0x4000f12	       615	ldmisc.c	FUNCTION_2
info_assert	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:ELSE,0:WHILE,0:CALL,2	17
0x4001010	              0x55	                                push rbp	       633	ldmisc.c	FUNCTION_4
0x4001011	              0x53	                                push rbx	       633	ldmisc.c	FUNCTION_4
0x4001012	            0x89f5	                            mov ebp, esi	       633	ldmisc.c	FUNCTION_4
0x4001014	          0x4889fb	                            mov rbx, rdi	       633	ldmisc.c	FUNCTION_4
0x4001017	      0xba05000000	                              mov edx, 5	       634	ldmisc.c	FUNCTION_4	CALL_2
0x400101c	      0xbe00000000	                              mov esi, 0	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4001021	        0x4883ec08	                              sub rsp, 8	       633	ldmisc.c	FUNCTION_4
0x4001025	            0x31ff	                            xor edi, edi	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4001027	      0xe800000000	                          call 0x400102c	       634	ldmisc.c	FUNCTION_4	CALL_2
0x400102c	        0x4883c408	                              add rsp, 8	       635	ldmisc.c	FUNCTION_4
0x4001030	            0x89ea	                            mov edx, ebp	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4001032	          0x4889de	                            mov rsi, rbx	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4001035	              0x5b	                                 pop rbx	       635	ldmisc.c	FUNCTION_4
0x4001036	              0x5d	                                 pop rbp	       635	ldmisc.c	FUNCTION_4
0x4001037	          0x4889c7	                            mov rdi, rax	       634	ldmisc.c	FUNCTION_4	CALL_2
0x400103a	            0x31c0	                            xor eax, eax	       634	ldmisc.c	FUNCTION_4	CALL_2
0x400103c	      0xe9dffeffff	                           jmp sym.einfo	       634	ldmisc.c	FUNCTION_4	CALL_2
lfinfo	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:ELSE,0:WHILE,0:CALL,3	33
0x40011f0	    0x4881ecd80000	                           sub rsp, 0xd8	       669	ldmisc.c	FUNCTION_6
0x40011f7	            0x84c0	                             test al, al	       669	ldmisc.c	FUNCTION_6
0x40011f9	      0x4889542430	             mov qword [rsp + 0x30], rdx	       669	ldmisc.c	FUNCTION_6
0x40011fe	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       669	ldmisc.c	FUNCTION_6
0x4001203	      0x4c89442440	              mov qword [rsp + 0x40], r8	       669	ldmisc.c	FUNCTION_6
0x4001208	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       669	ldmisc.c	FUNCTION_6
0x400120d	            0x7437	                            je 0x4001246	       669	ldmisc.c	FUNCTION_6
0x400120f	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       669	ldmisc.c	FUNCTION_6
0x4001214	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       669	ldmisc.c	FUNCTION_6
0x4001219	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       669	ldmisc.c	FUNCTION_6
0x400121e	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       669	ldmisc.c	FUNCTION_6
0x4001226	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       669	ldmisc.c	FUNCTION_6
0x400122e	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       669	ldmisc.c	FUNCTION_6
0x4001236	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       669	ldmisc.c	FUNCTION_6
0x400123e	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       669	ldmisc.c	FUNCTION_6
0x4001246	    0x64488b042528	                mov rax, qword fs:[0x28]	       669	ldmisc.c	FUNCTION_6
0x400124f	      0x4889442418	             mov qword [rsp + 0x18], rax	       669	ldmisc.c	FUNCTION_6
0x4001254	            0x31c0	                            xor eax, eax	       669	ldmisc.c	FUNCTION_6
0x4001256	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400125e	            0x31c9	                            xor ecx, ecx	       673	ldmisc.c	FUNCTION_6	CALL_2
0x4001260	          0x4889e2	                            mov rdx, rsp	       673	ldmisc.c	FUNCTION_6	CALL_2
0x4001263	      0x4889442408	                mov qword [rsp + 8], rax	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001268	      0x488d442420	                   lea rax, [rsp + 0x20]	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400126d	    0xc70424100000	                   mov dword [rsp], 0x10	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001274	    0xc74424043000	               mov dword [rsp + 4], 0x30	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400127c	      0x4889442410	             mov qword [rsp + 0x10], rax	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001281	      0xe800000000	                          call 0x4001286	       673	ldmisc.c	FUNCTION_6	CALL_2
0x4001286	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       675	ldmisc.c	FUNCTION_6
0x400128b	    0x644833042528	                xor rax, qword fs:[0x28]	       675	ldmisc.c	FUNCTION_6
0x4001294	            0x7508	                           jne 0x400129e	       675	ldmisc.c	FUNCTION_6
0x4001296	    0x4881c4d80000	                           add rsp, 0xd8	       675	ldmisc.c	FUNCTION_6
0x400129d	              0xc3	                                     ret	       675	ldmisc.c	FUNCTION_6
0x400129e	      0xe800000000	                  call section_end..data	       675	ldmisc.c	FUNCTION_6
minfo	functions,0:IF,2:FOR,0:SWITCH,0:DO,0:ELSE,1:WHILE,0:CALL,7	93
0x4001050	    0x4881ecd80000	                           sub rsp, 0xd8	       641	ldmisc.c	FUNCTION_5
0x4001057	            0x84c0	                             test al, al	       641	ldmisc.c	FUNCTION_5
0x4001059	      0x4889742428	             mov qword [rsp + 0x28], rsi	       641	ldmisc.c	FUNCTION_5
0x400105e	      0x4889542430	             mov qword [rsp + 0x30], rdx	       641	ldmisc.c	FUNCTION_5
0x4001063	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       641	ldmisc.c	FUNCTION_5
0x4001068	      0x4c89442440	              mov qword [rsp + 0x40], r8	       641	ldmisc.c	FUNCTION_5
0x400106d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       641	ldmisc.c	FUNCTION_5
0x4001072	            0x7437	                            je 0x40010ab	       641	ldmisc.c	FUNCTION_5
0x4001074	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       641	ldmisc.c	FUNCTION_5
0x4001079	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       641	ldmisc.c	FUNCTION_5
0x400107e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       641	ldmisc.c	FUNCTION_5
0x4001083	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       641	ldmisc.c	FUNCTION_5
0x400108b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       641	ldmisc.c	FUNCTION_5
0x4001093	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       641	ldmisc.c	FUNCTION_5
0x400109b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       641	ldmisc.c	FUNCTION_5
0x40010a3	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       641	ldmisc.c	FUNCTION_5
0x40010ab	    0x64488b042528	                mov rax, qword fs:[0x28]	       641	ldmisc.c	FUNCTION_5
0x40010b4	      0x4889442418	             mov qword [rsp + 0x18], rax	       641	ldmisc.c	FUNCTION_5
0x40010b9	            0x31c0	                            xor eax, eax	       641	ldmisc.c	FUNCTION_5
0x40010bb	    0x48833d000000	               cmp qword [0x040010c3], 0	       642	ldmisc.c	FUNCTION_5	IF_1
0x40010c3	            0x743f	                            je 0x4001104	       642	ldmisc.c	FUNCTION_5	IF_1
0x40010c5	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010cd	          0x803f25	                    cmp byte [rdi], 0x25	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010d0	    0xc70424080000	                      mov dword [rsp], 8	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010d7	    0xc74424043000	               mov dword [rsp + 4], 0x30	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010df	      0x4889442408	                mov qword [rsp + 8], rax	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010e4	      0x488d442420	                   lea rax, [rsp + 0x20]	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010e9	      0x4889442410	             mov qword [rsp + 0x10], rax	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010ee	            0x7430	                            je 0x4001120	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010f0	          0x4889fe	                            mov rsi, rdi	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010f3	    0x488b3d000000	            mov rdi, qword [0x040010fa] 	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010fa	            0x31c9	                            xor ecx, ecx	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010fc	          0x4889e2	                            mov rdx, rsp	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010ff	      0xe800000000	                          call 0x4001104	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x4001104	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       665	ldmisc.c	FUNCTION_5
0x4001109	    0x644833042528	                xor rax, qword fs:[0x28]	       665	ldmisc.c	FUNCTION_5
0x4001112	     0xf85be000000	                           jne 0x40011d6	       665	ldmisc.c	FUNCTION_5
0x4001118	    0x4881c4d80000	                           add rsp, 0xd8	       665	ldmisc.c	FUNCTION_5
0x400111f	              0xc3	                                     ret	       665	ldmisc.c	FUNCTION_5
0x4001120	        0x807f0121	                cmp byte [rdi + 1], 0x21	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001124	            0x75ca	                           jne 0x40010f0	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001126	        0x807f0200	                   cmp byte [rdi + 2], 0	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x400112a	            0x75c4	                           jne 0x40010f0	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x400112c	      0xbf20000000	                           mov edi, 0x20	       652	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4001131	      0xe800000000	                          call 0x4001136	       652	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4001136	          0x8b0c24	                    mov ecx, dword [rsp]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001139	    0x48c700000000	                      mov qword [rax], 0	       654	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001140	          0x83f92f	                           cmp ecx, 0x2f	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001143	            0x775b	                            ja 0x40011a0	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001145	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400114a	          0x8d7108	                      lea esi, [rcx + 8]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400114d	            0x89cf	                            mov edi, ecx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400114f	          0x893424	                    mov dword [rsp], esi	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001152	          0x83fe2f	                           cmp esi, 0x2f	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001155	        0x488b3c3a	              mov rdi, qword [rdx + rdi]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001159	        0x48897808	                mov qword [rax + 8], rdi	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400115d	     0xf877f000000	                            ja 0x40011e2	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001163	            0x89f7	                            mov edi, esi	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001165	          0x8d7110	                   lea esi, [rcx + 0x10]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001168	          0x893424	                    mov dword [rsp], esi	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400116b	        0x488b3c3a	              mov rdi, qword [rdx + rdi]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400116f	          0x83fe2f	                           cmp esi, 0x2f	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001172	        0x48897810	             mov qword [rax + 0x10], rdi	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001176	            0x7763	                            ja 0x40011db	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001178	          0x83c118	                           add ecx, 0x18	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400117b	          0x4801f2	                            add rdx, rsi	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400117e	          0x890c24	                    mov dword [rsp], ecx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001181	          0x488b12	                    mov rdx, qword [rdx]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001184	        0x48895018	             mov qword [rax + 0x18], rdx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001188	    0x488b15000000	            mov rdx, qword [0x0400118f] 	       658	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x400118f	          0x488902	                    mov qword [rdx], rax	       658	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001192	    0x488905000000	            mov qword [0x04001199], rax 	       659	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001199	      0xe966ffffff	                           jmp 0x4001104	       648	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x400119e	            0x6690	                                     nop	       648	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40011a0	      0x488b542408	                mov rdx, qword [rsp + 8]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40011a5	          0x4889d1	                            mov rcx, rdx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40011a8	        0x4883c208	                              add rdx, 8	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40011ac	      0x4889542408	                mov qword [rsp + 8], rdx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40011b1	          0x488b09	                    mov rcx, qword [rcx]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40011b4	        0x48894808	                mov qword [rax + 8], rcx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40011b8	          0x4889d1	                            mov rcx, rdx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x40011bb	        0x4883c208	                              add rdx, 8	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x40011bf	      0x4889542408	                mov qword [rsp + 8], rdx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x40011c4	          0x488b09	                    mov rcx, qword [rcx]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x40011c7	        0x48894810	             mov qword [rax + 0x10], rcx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x40011cb	        0x488d4a08	                      lea rcx, [rdx + 8]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x40011cf	      0x48894c2408	                mov qword [rsp + 8], rcx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x40011d4	            0xebab	                           jmp 0x4001181	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x40011d6	      0xe800000000	                          call 0x40011db	       665	ldmisc.c	FUNCTION_5
0x40011db	      0x488b542408	                mov rdx, qword [rsp + 8]	       665	ldmisc.c	FUNCTION_5
0x40011e0	            0xebe9	                           jmp 0x40011cb	       665	ldmisc.c	FUNCTION_5
0x40011e2	      0x488b542408	                mov rdx, qword [rsp + 8]	       665	ldmisc.c	FUNCTION_5
0x40011e7	            0xebcf	                           jmp 0x40011b8	       665	ldmisc.c	FUNCTION_5
print_nl	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:ELSE,0:WHILE,0:CALL,0	3
0x4000060	    0x488b35000000	            mov rsi, qword [0x04000067] 	        97	stdio2.h	CALL_9
0x4000067	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_9
0x400006c	      0xe900000000	                           jmp 0x4000071	        97	stdio2.h	CALL_9
print_space	functions,0:IF,0:FOR,0:SWITCH,0:DO,0:ELSE,0:WHILE,0:CALL,0	3
0x4000040	    0x488b35000000	            mov rsi, qword [0x04000047] 	        97	stdio2.h	CALL_9
0x4000047	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_9
0x400004c	      0xe900000000	                           jmp 0x4000051	        97	stdio2.h	CALL_9
