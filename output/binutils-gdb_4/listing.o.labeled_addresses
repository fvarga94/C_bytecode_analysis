listing_eject	WHILE,0:functions,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	6
0x4002140	    0x8b0500000000	            mov eax, dword [0x04002146] 	      1459	listing.c	FUNCTION_24	IF_1
0x4002146	            0x85c0	                           test eax, eax	      1459	listing.c	FUNCTION_24	IF_1
0x4002148	            0x740e	                            je 0x4002158	      1459	listing.c	FUNCTION_24	IF_1
0x400214a	    0x488b05000000	            mov rax, qword [0x04002151] 	      1460	listing.c	FUNCTION_24	IF_1
0x4002151	    0xc74048060000	               mov dword [rax + 0x48], 6	      1460	listing.c	FUNCTION_24	IF_1
0x4002158	            0xf3c3	                                     ret	      1460	listing.c	FUNCTION_24	IF_1
print_lines	WHILE,2:functions,0:CALL,6:DO,0:FOR,4:SWITCH,0:IF,4:ELSE,1	214
0x40007f0	            0x4157	                                push r15	       833	listing.c	FUNCTION_13
0x40007f2	            0x4156	                                push r14	       833	listing.c	FUNCTION_13
0x40007f4	            0x4155	                                push r13	       833	listing.c	FUNCTION_13
0x40007f6	            0x4154	                                push r12	       833	listing.c	FUNCTION_13
0x40007f8	              0x55	                                push rbp	       833	listing.c	FUNCTION_13
0x40007f9	              0x53	                                push rbx	       833	listing.c	FUNCTION_13
0x40007fa	            0x89cb	                            mov ebx, ecx	       833	listing.c	FUNCTION_13
0x40007fc	        0x4883ec28	                           sub rsp, 0x28	       833	listing.c	FUNCTION_13
0x4000800	    0x4c8b2d000000	            mov r13, qword [0x04000807] 	       838	listing.c	FUNCTION_13
0x4000807	    0x8b0500000000	            mov eax, dword [0x0400080d] 	       838	listing.c	FUNCTION_13
0x400080d	        0x89742414	             mov dword [rsp + 0x14], esi	       833	listing.c	FUNCTION_13
0x4000811	    0x8b3500000000	            mov esi, dword [0x04000817] 	       707	listing.c	FUNCTION_10	IF_1
0x4000817	      0x48897c2408	                mov qword [rsp + 8], rdi	       833	listing.c	FUNCTION_13
0x400081c	      0x4889542418	             mov qword [rsp + 0x18], rdx	       833	listing.c	FUNCTION_13
0x4000821	            0x85f6	                           test esi, esi	       707	listing.c	FUNCTION_10	IF_1
0x4000823	            0x7508	                           jne 0x400082d	       707	listing.c	FUNCTION_10	IF_1
0x4000825	    0x390500000000	            cmp dword [0x0400082b], eax 	       707	listing.c	FUNCTION_10	IF_1
0x400082b	            0x720e	                            jb 0x400083b	       707	listing.c	FUNCTION_10	IF_1
0x400082d	            0x85c0	                           test eax, eax	       708	listing.c	FUNCTION_10	IF_1
0x400082f	            0x740a	                            je 0x400083b	       708	listing.c	FUNCTION_10	IF_1
0x4000831	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       708	listing.c	FUNCTION_10	IF_1
0x4000836	      0xe815faffff	            call sym.listing_page.part.0	       708	listing.c	FUNCTION_10	IF_1
0x400083b	    0x8b0500000000	            mov eax, dword [0x04000841] 	       844	listing.c	FUNCTION_13
0x4000841	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       847	listing.c	FUNCTION_13	IF_1
0x4000844	          0x8d04c0	                  lea eax, [rax + rax*8]	       844	listing.c	FUNCTION_13
0x4000847	        0x89442410	             mov dword [rsp + 0x10], eax	       844	listing.c	FUNCTION_13
0x400084b	     0xf8462020000	                            je 0x4000ab3	       847	listing.c	FUNCTION_13	IF_1
0x4000851	      0xe800000000	                          call 0x4000856	       857	listing.c	FUNCTION_13	IF_2	CALL_3
0x4000856	            0x85c0	                           test eax, eax	       857	listing.c	FUNCTION_13	IF_2	CALL_3
0x4000858	     0xf85f3010000	                           jne 0x4000a51	       857	listing.c	FUNCTION_13	IF_2	CALL_3
0x400085e	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	        97	stdio2.h	CALL_18
0x4000862	    0x488b3d000000	            mov rdi, qword [0x04000869] 	        97	stdio2.h	CALL_18
0x4000869	          0x4189d8	                            mov r8d, ebx	        97	stdio2.h	CALL_18
0x400086c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4000871	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4000876	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000878	      0xe800000000	                          call 0x400087d	        97	stdio2.h	CALL_18
0x400087d	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       865	listing.c	FUNCTION_13	WHILE_1
0x4000881	      0x410fb64500	                   movzx eax, byte [r13]	       865	listing.c	FUNCTION_13	WHILE_1
0x4000886	            0x85d2	                           test edx, edx	       865	listing.c	FUNCTION_13	WHILE_1
0x4000888	     0xf8499020000	                            je 0x4000b27	       865	listing.c	FUNCTION_13	WHILE_1
0x400088e	            0x84c0	                             test al, al	       865	listing.c	FUNCTION_13	WHILE_1
0x4000890	     0xf8491020000	                            je 0x4000b27	       865	listing.c	FUNCTION_13	WHILE_1
0x4000896	      0x450fbe4501	               movsx r8d, byte [r13 + 1]	        97	stdio2.h	CALL_18
0x400089b	    0x488b3d000000	            mov rdi, qword [0x040008a2] 	        97	stdio2.h	CALL_18
0x40008a2	           0xfbec8	                           movsx ecx, al	        97	stdio2.h	CALL_18
0x40008a5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x40008aa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40008af	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40008b1	    0x41bc02000000	                             mov r12d, 2	        97	stdio2.h	CALL_18
0x40008b7	      0xbb01000000	                              mov ebx, 1	       871	listing.c	FUNCTION_13	WHILE_1
0x40008bc	          0x4531f6	                          xor r14d, r14d	        97	stdio2.h	CALL_18
0x40008bf	      0xe800000000	                          call 0x40008c4	        97	stdio2.h	CALL_18
0x40008c4	            0xeb11	                           jmp 0x40008d7	        97	stdio2.h	CALL_18
0x40008c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        97	stdio2.h	CALL_18
0x40008d0	        0x4983c402	                              add r12, 2	        97	stdio2.h	CALL_18
0x40008d4	          0x4589fe	                          mov r14d, r15d	       877	listing.c	FUNCTION_13	WHILE_1	IF_3
0x40008d7	        0x458d7e02	                     lea r15d, [r14 + 2]	       880	listing.c	FUNCTION_13	WHILE_1
0x40008db	      0x44397c2410	           cmp dword [rsp + 0x10], r15d 	       865	listing.c	FUNCTION_13	WHILE_1
0x40008e0	          0x4489e5	                           mov ebp, r12d	       865	listing.c	FUNCTION_13	WHILE_1
0x40008e3	    0x430fbe4c2500	             movsx ecx, byte [r13 + r12]	       865	listing.c	FUNCTION_13	WHILE_1
0x40008e9	            0x765a	                           jbe 0x4000945	       865	listing.c	FUNCTION_13	WHILE_1
0x40008eb	            0x84c9	                             test cl, cl	       865	listing.c	FUNCTION_13	WHILE_1
0x40008ed	            0x7456	                            je 0x4000945	       865	listing.c	FUNCTION_13	WHILE_1
0x40008ef	    0x470fbe442501	        movsx r8d, byte [r13 + r12 + 1] 	        97	stdio2.h	CALL_18
0x40008f5	    0x488b3d000000	            mov rdi, qword [0x040008fc] 	        97	stdio2.h	CALL_18
0x40008fc	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40008fe	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4000903	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4000908	          0x83c301	                              add ebx, 1	       871	listing.c	FUNCTION_13	WHILE_1
0x400090b	      0xe800000000	                          call 0x4000910	        97	stdio2.h	CALL_18
0x4000910	          0x83fb04	                              cmp ebx, 4	       873	listing.c	FUNCTION_13	WHILE_1	IF_3
0x4000913	            0x75bb	                           jne 0x40008d0	       873	listing.c	FUNCTION_13	WHILE_1	IF_3
0x4000915	    0x488b35000000	            mov rsi, qword [0x0400091c] 	        97	stdio2.h	CALL_18
0x400091c	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_18
0x4000921	        0x458d7e03	                     lea r15d, [r14 + 3]	       876	listing.c	FUNCTION_13	WHILE_1	IF_3
0x4000925	            0x31db	                            xor ebx, ebx	       877	listing.c	FUNCTION_13	WHILE_1	IF_3
0x4000927	      0xe800000000	                          call 0x400092c	        97	stdio2.h	CALL_18
0x400092c	            0xeba2	                           jmp 0x40008d0	        97	stdio2.h	CALL_18
0x400092e	            0x6690	                                     nop	        97	stdio2.h	CALL_18
0x4000930	    0x488b35000000	            mov rsi, qword [0x04000937] 	        97	stdio2.h	CALL_18
0x4000937	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_18
0x400093c	        0x4183c701	                             add r15d, 1	       883	listing.c	FUNCTION_13	FOR_2
0x4000940	      0xe800000000	                          call 0x4000945	        97	stdio2.h	CALL_18
0x4000945	      0x44397c2410	           cmp dword [rsp + 0x10], r15d 	       883	listing.c	FUNCTION_13	FOR_2
0x400094a	            0x77e4	                            ja 0x4000930	       883	listing.c	FUNCTION_13	FOR_2
0x400094c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       886	listing.c	FUNCTION_13	CALL_4
0x4000951	      0x4c8b742408	                mov r14, qword [rsp + 8]	       886	listing.c	FUNCTION_13	CALL_4
0x4000956	      0xba00000000	                              mov edx, 0	       886	listing.c	FUNCTION_13	CALL_4
0x400095b	      0xbe00000000	                              mov esi, 0	       886	listing.c	FUNCTION_13	CALL_4
0x4000960	          0x4885c0	                           test rax, rax	       886	listing.c	FUNCTION_13	CALL_4
0x4000963	          0x4c89f7	                            mov rdi, r14	       886	listing.c	FUNCTION_13	CALL_4
0x4000966	        0x480f45d0	                         cmovne rdx, rax	       886	listing.c	FUNCTION_13	CALL_4
0x400096a	            0x31c0	                            xor eax, eax	       886	listing.c	FUNCTION_13	CALL_4
0x400096c	      0xe87ffdffff	                      call sym.emit_line	       886	listing.c	FUNCTION_13	CALL_4
0x4000971	        0x4d8b7e38	            mov r15, qword [r14 + 0x38] 	       888	listing.c	FUNCTION_13	FOR_3
0x4000975	          0x4d85ff	                           test r15, r15	       888	listing.c	FUNCTION_13	FOR_3
0x4000978	            0x7423	                            je 0x400099d	       888	listing.c	FUNCTION_13	FOR_3
0x400097a	    0x660f1f440000	                    nop word [rax + rax]	       888	listing.c	FUNCTION_13	FOR_3
0x4000980	          0x498b17	                    mov rdx, qword [r15]	       889	listing.c	FUNCTION_13	CALL_5
0x4000983	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       889	listing.c	FUNCTION_13	CALL_5
0x4000988	            0x31c0	                            xor eax, eax	       889	listing.c	FUNCTION_13	CALL_5
0x400098a	      0xbe00000000	                              mov esi, 0	       889	listing.c	FUNCTION_13	CALL_5
0x400098f	      0xe85cfdffff	                      call sym.emit_line	       889	listing.c	FUNCTION_13	CALL_5
0x4000994	        0x4d8b7f08	                mov r15, qword [r15 + 8]	       888	listing.c	FUNCTION_13	FOR_3
0x4000998	          0x4d85ff	                           test r15, r15	       888	listing.c	FUNCTION_13	FOR_3
0x400099b	            0x75e3	                           jne 0x4000980	       888	listing.c	FUNCTION_13	FOR_3
0x400099d	    0x8b0500000000	            mov eax, dword [0x040009a3] 	       891	listing.c	FUNCTION_13	FOR_4
0x40009a3	            0x85c0	                           test eax, eax	       891	listing.c	FUNCTION_13	FOR_4
0x40009a5	     0xf84f9000000	                            je 0x4000aa4	       891	listing.c	FUNCTION_13	FOR_4
0x40009ab	    0x43807c250000	                 cmp byte [r13 + r12], 0	       893	listing.c	FUNCTION_13	FOR_4
0x40009b1	     0xf84ed000000	                            je 0x4000aa4	       893	listing.c	FUNCTION_13	FOR_4
0x40009b7	    0xc74424100000	               mov dword [rsp + 0x10], 0	       893	listing.c	FUNCTION_13	FOR_4
0x40009bf	              0x90	                                     nop	       893	listing.c	FUNCTION_13	FOR_4
0x40009c0	    0x8b0500000000	            mov eax, dword [0x040009c6] 	       896	listing.c	FUNCTION_13	FOR_4
0x40009c6	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	        97	stdio2.h	CALL_18
0x40009ca	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x40009cf	    0x488b3d000000	            mov rdi, qword [0x040009d6] 	        97	stdio2.h	CALL_18
0x40009d6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40009db	          0x4531ff	                          xor r15d, r15d	       897	listing.c	FUNCTION_13	FOR_4
0x40009de	      0x448d64c0ff	             lea r12d, [rax + rax*8 - 1]	       896	listing.c	FUNCTION_13	FOR_4
0x40009e3	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40009e5	      0xe800000000	                          call 0x40009ea	        97	stdio2.h	CALL_18
0x40009ea	          0x4c63cd	                          movsxd r9, ebp	        97	stdio2.h	CALL_18
0x40009ed	      0x4f8d740d00	                     lea r14, [r13 + r9]	        97	stdio2.h	CALL_18
0x40009f2	            0xeb0b	                           jmp 0x40009ff	        97	stdio2.h	CALL_18
0x40009f4	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_18
0x40009f8	        0x4983c602	                              add r14, 2	        97	stdio2.h	CALL_18
0x40009fc	          0x4189c7	                           mov r15d, eax	       915	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x40009ff	          0x4539e7	                          cmp r15d, r12d	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000a02	        0x410fbe0e	                   movsx ecx, byte [r14]	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000a06	            0x7370	                           jae 0x4000a78	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000a08	            0x84c9	                             test cl, cl	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000a0a	            0x746c	                            je 0x4000a78	       902	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000a0c	      0x450fbe4601	               movsx r8d, byte [r14 + 1]	        97	stdio2.h	CALL_18
0x4000a11	    0x488b3d000000	            mov rdi, qword [0x04000a18] 	        97	stdio2.h	CALL_18
0x4000a18	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000a1a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4000a1f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4000a24	          0x83c301	                              add ebx, 1	       909	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000a27	          0x83c502	                              add ebp, 2	       907	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000a2a	      0xe800000000	                          call 0x4000a2f	        97	stdio2.h	CALL_18
0x4000a2f	          0x83fb04	                              cmp ebx, 4	       911	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000a32	        0x418d4702	                      lea eax, [r15 + 2]	       908	listing.c	FUNCTION_13	FOR_4	WHILE_2
0x4000a36	            0x75c0	                           jne 0x40009f8	       911	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000a38	    0x488b35000000	            mov rsi, qword [0x04000a3f] 	        97	stdio2.h	CALL_18
0x4000a3f	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_18
0x4000a44	            0x31db	                            xor ebx, ebx	       915	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000a46	      0xe800000000	                          call 0x4000a4b	        97	stdio2.h	CALL_18
0x4000a4b	        0x418d4703	                      lea eax, [r15 + 3]	       914	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000a4f	            0xeba7	                           jmp 0x40009f8	       914	listing.c	FUNCTION_13	FOR_4	WHILE_2	IF_4
0x4000a51	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	        97	stdio2.h	CALL_18
0x4000a55	    0x488b3d000000	            mov rdi, qword [0x04000a5c] 	        97	stdio2.h	CALL_18
0x4000a5c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4000a61	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4000a66	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000a68	      0xe800000000	                          call 0x4000a6d	        97	stdio2.h	CALL_18
0x4000a6d	      0xe90bfeffff	                           jmp 0x400087d	        97	stdio2.h	CALL_18
0x4000a72	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_18
0x4000a78	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       919	listing.c	FUNCTION_13	FOR_4	CALL_6
0x4000a7d	            0x31c0	                            xor eax, eax	       919	listing.c	FUNCTION_13	FOR_4	CALL_6
0x4000a7f	      0xbe00000000	                              mov esi, 0	       919	listing.c	FUNCTION_13	FOR_4	CALL_6
0x4000a84	      0xe867fcffff	                      call sym.emit_line	       919	listing.c	FUNCTION_13	FOR_4	CALL_6
0x4000a89	      0x8344241001	               add dword [rsp + 0x10], 1	       894	listing.c	FUNCTION_13	FOR_4
0x4000a8e	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       894	listing.c	FUNCTION_13	FOR_4
0x4000a92	    0x390500000000	            cmp dword [0x04000a98], eax 	       891	listing.c	FUNCTION_13	FOR_4
0x4000a98	            0x760a	                           jbe 0x4000aa4	       891	listing.c	FUNCTION_13	FOR_4
0x4000a9a	        0x41803e00	                       cmp byte [r14], 0	       893	listing.c	FUNCTION_13	FOR_4
0x4000a9e	     0xf851cffffff	                           jne 0x40009c0	       893	listing.c	FUNCTION_13	FOR_4
0x4000aa4	        0x4883c428	                           add rsp, 0x28	       921	listing.c	FUNCTION_13
0x4000aa8	              0x5b	                                 pop rbx	       921	listing.c	FUNCTION_13
0x4000aa9	              0x5d	                                 pop rbp	       921	listing.c	FUNCTION_13
0x4000aaa	            0x415c	                                 pop r12	       921	listing.c	FUNCTION_13
0x4000aac	            0x415d	                                 pop r13	       921	listing.c	FUNCTION_13
0x4000aae	            0x415e	                                 pop r14	       921	listing.c	FUNCTION_13
0x4000ab0	            0x415f	                                 pop r15	       921	listing.c	FUNCTION_13
0x4000ab2	              0xc3	                                     ret	       921	listing.c	FUNCTION_13
0x4000ab3	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	        97	stdio2.h	CALL_18
0x4000ab7	    0x488b3d000000	            mov rdi, qword [0x04000abe] 	        97	stdio2.h	CALL_18
0x4000abe	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4000ac0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4000ac5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4000aca	            0x31db	                            xor ebx, ebx	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000acc	      0xe800000000	                          call 0x4000ad1	        97	stdio2.h	CALL_18
0x4000ad1	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000ad5	            0x85c9	                           test ecx, ecx	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000ad7	            0x7421	                            je 0x4000afa	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000ad9	     0xf1f80000000	                         nop dword [rax]	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000ae0	    0x488b35000000	            mov rsi, qword [0x04000ae7] 	        97	stdio2.h	CALL_18
0x4000ae7	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_18
0x4000aec	          0x83c301	                              add ebx, 1	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000aef	      0xe800000000	                          call 0x4000af4	        97	stdio2.h	CALL_18
0x4000af4	        0x395c2410	            cmp dword [rsp + 0x10], ebx 	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000af8	            0x75e6	                           jne 0x4000ae0	       850	listing.c	FUNCTION_13	IF_1	FOR_1
0x4000afa	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000aff	      0xba00000000	                              mov edx, 0	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000b04	      0xbe00000000	                              mov esi, 0	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000b09	          0x4885c0	                           test rax, rax	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000b0c	        0x480f45d0	                         cmovne rdx, rax	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000b10	        0x4883c428	                           add rsp, 0x28	       921	listing.c	FUNCTION_13
0x4000b14	            0x31ff	                            xor edi, edi	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000b16	              0x5b	                                 pop rbx	       921	listing.c	FUNCTION_13
0x4000b17	              0x5d	                                 pop rbp	       921	listing.c	FUNCTION_13
0x4000b18	            0x415c	                                 pop r12	       921	listing.c	FUNCTION_13
0x4000b1a	            0x415d	                                 pop r13	       921	listing.c	FUNCTION_13
0x4000b1c	            0x415e	                                 pop r14	       921	listing.c	FUNCTION_13
0x4000b1e	            0x415f	                                 pop r15	       921	listing.c	FUNCTION_13
0x4000b20	            0x31c0	                            xor eax, eax	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000b22	      0xe9c9fbffff	                       jmp sym.emit_line	       853	listing.c	FUNCTION_13	IF_1	CALL_2
0x4000b27	          0x4531e4	                          xor r12d, r12d	       865	listing.c	FUNCTION_13	WHILE_1
0x4000b2a	            0x31ed	                            xor ebp, ebp	       865	listing.c	FUNCTION_13	WHILE_1
0x4000b2c	            0x31db	                            xor ebx, ebx	       865	listing.c	FUNCTION_13	WHILE_1
0x4000b2e	          0x4531ff	                          xor r15d, r15d	       865	listing.c	FUNCTION_13	WHILE_1
0x4000b31	      0xe90ffeffff	                           jmp 0x4000945	       865	listing.c	FUNCTION_13	WHILE_1
calc_hex	WHILE,4:functions,0:CALL,0:DO,0:FOR,0:SWITCH,0:IF,4:ELSE,0	135
0x4000040	            0x4157	                                push r15	       764	listing.c	FUNCTION_12
0x4000042	            0x4156	                                push r14	       764	listing.c	FUNCTION_12
0x4000044	            0x4155	                                push r13	       764	listing.c	FUNCTION_12
0x4000046	            0x4154	                                push r12	       764	listing.c	FUNCTION_12
0x4000048	              0x55	                                push rbp	       764	listing.c	FUNCTION_12
0x4000049	              0x53	                                push rbx	       764	listing.c	FUNCTION_12
0x400004a	        0x4883ec18	                           sub rsp, 0x18	       764	listing.c	FUNCTION_12
0x400004e	          0x488b2f	                    mov rbp, qword [rdi]	       773	listing.c	FUNCTION_12
0x4000051	          0x4885ed	                           test rbp, rbp	       774	listing.c	FUNCTION_12	WHILE_1
0x4000054	            0x7517	                           jne 0x400006d	       774	listing.c	FUNCTION_12	WHILE_1
0x4000056	      0xe9c9010000	                           jmp 0x4000224	       774	listing.c	FUNCTION_12	WHILE_1
0x400005b	       0xf1f440000	                   nop dword [rax + rax]	       774	listing.c	FUNCTION_12	WHILE_1
0x4000060	        0x488b6d38	            mov rbp, qword [rbp + 0x38] 	       775	listing.c	FUNCTION_12	WHILE_1
0x4000064	          0x4885ed	                           test rbp, rbp	       774	listing.c	FUNCTION_12	WHILE_1
0x4000067	     0xf84b7010000	                            je 0x4000224	       774	listing.c	FUNCTION_12	WHILE_1
0x400006d	        0x483b7d50	            cmp rdi, qword [rbp + 0x50] 	       774	listing.c	FUNCTION_12	WHILE_1
0x4000071	            0x75ed	                           jne 0x4000060	       774	listing.c	FUNCTION_12	WHILE_1
0x4000073	      0x48897c2408	                mov qword [rsp + 8], rdi	       774	listing.c	FUNCTION_12	WHILE_1
0x4000078	    0x41bdffffffff	                    mov r13d, 0xffffffff	       774	listing.c	FUNCTION_12	WHILE_1
0x400007e	          0x4531e4	                          xor r12d, r12d	       774	listing.c	FUNCTION_12	WHILE_1
0x4000081	     0xf1f80000000	                         nop dword [rax]	       774	listing.c	FUNCTION_12	WHILE_1
0x4000088	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400008c	          0x4885d2	                           test rdx, rdx	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400008f	     0xf8ea0000000	                           jle 0x4000135	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000095	    0x8b0500000000	            mov eax, dword [0x0400009b] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400009b	    0x8b0d00000000	            mov ecx, dword [0x040000a1] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000a1	          0x4d63fc	                        movsxd r15, r12d	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000a4	      0xbb01000000	                              mov ebx, 1	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000a9	          0x8d04c0	                  lea eax, [rax + rax*8]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000ac	          0x8d0cc9	                  lea ecx, [rcx + rcx*8]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000af	     0xfaf05000000	            imul eax, dword [0x040000b6]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000b6	        0x8d440810	            lea eax, [rax + rcx + 0x10] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000ba	          0x4139c4	                           cmp r12d, eax	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000bd	            0x7e6a	                           jle 0x4000129	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000bf	            0xeb74	                           jmp 0x4000135	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000c1	     0xf1f80000000	                         nop dword [rax]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000c8	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000cb	    0x440fb6441d7b	     movzx r8d, byte [rbp + rbx + 0x7b] 	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000d1	    0x48033d000000	             add rdi, qword [0x040000d8]	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000d8	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000df	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000e4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000e6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000eb	          0x4189de	                           mov r14d, ebx	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000ee	      0xe800000000	                          call 0x40000f3	        33	stdio2.h	FUNCTION_40	CALL_1
0x40000f3	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000f7	        0x418d345c	                  lea esi, [r12 + rbx*2]	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000fb	          0x4839d3	                            cmp rbx, rdx	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x40000fe	            0x7d40	                           jge 0x4000140	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000100	    0x8b0500000000	            mov eax, dword [0x04000106] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000106	    0x8b0d00000000	            mov ecx, dword [0x0400010c] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400010c	        0x4983c702	                              add r15, 2	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000110	        0x4883c301	                              add rbx, 1	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000114	          0x8d04c0	                  lea eax, [rax + rax*8]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000117	          0x8d0cc9	                  lea ecx, [rcx + rcx*8]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400011a	     0xfaf05000000	            imul eax, dword [0x04000121]	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000121	        0x8d440810	            lea eax, [rax + rcx + 0x10] 	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000125	            0x39f0	                            cmp eax, esi	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000127	            0x7c17	                            jl 0x4000140	       787	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000129	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       789	listing.c	FUNCTION_12	WHILE_2	WHILE_3	IF_1
0x400012d	            0x7599	                           jne 0x40000c8	       789	listing.c	FUNCTION_12	WHILE_2	WHILE_3	IF_1
0x400012f	        0x448b6d00	                   mov r13d, dword [rbp]	       790	listing.c	FUNCTION_12	WHILE_2	WHILE_3	IF_1
0x4000133	            0xeb93	                           jmp 0x40000c8	       790	listing.c	FUNCTION_12	WHILE_2	WHILE_3	IF_1
0x4000135	          0x4489e6	                           mov esi, r12d	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000138	          0x4531f6	                          xor r14d, r14d	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x400013b	       0xf1f440000	                   nop dword [rax + rax]	       786	listing.c	FUNCTION_12	WHILE_2	WHILE_3
0x4000140	        0x837d5c01	               cmp dword [rbp + 0x5c], 1	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x4000144	          0x4189f4	                           mov r12d, esi	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x4000147	            0x7427	                            je 0x4000170	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x4000149	        0x488b6d38	            mov rbp, qword [rbp + 0x38] 	       824	listing.c	FUNCTION_12	WHILE_2
0x400014d	          0x4885ed	                           test rbp, rbp	       782	listing.c	FUNCTION_12	WHILE_2
0x4000150	            0x740f	                            je 0x4000161	       782	listing.c	FUNCTION_12	WHILE_2
0x4000152	      0x488b442408	                mov rax, qword [rsp + 8]	       782	listing.c	FUNCTION_12	WHILE_2
0x4000157	        0x483b4550	            cmp rax, qword [rbp + 0x50] 	       782	listing.c	FUNCTION_12	WHILE_2
0x400015b	     0xf8427ffffff	                            je 0x4000088	       782	listing.c	FUNCTION_12	WHILE_2
0x4000161	          0x4d63e4	                        movsxd r12, r12d	       782	listing.c	FUNCTION_12	WHILE_2
0x4000164	      0xe9c4000000	                           jmp 0x400022d	       782	listing.c	FUNCTION_12	WHILE_2
0x4000169	     0xf1f80000000	                         nop dword [rax]	       782	listing.c	FUNCTION_12	WHILE_2
0x4000170	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       782	listing.c	FUNCTION_12	WHILE_2
0x4000174	          0x4c63d6	                         movsxd r10, esi	       782	listing.c	FUNCTION_12	WHILE_2
0x4000177	          0x4489f3	                           mov ebx, r14d	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x400017a	          0x4589f7	                          mov r15d, r14d	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x400017d	            0xeb58	                           jmp 0x40001d7	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x400017f	              0x90	                                     nop	       798	listing.c	FUNCTION_12	WHILE_2	IF_2
0x4000180	            0x89d8	                            mov eax, ebx	       813	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000182	          0x4c89d7	                            mov rdi, r10	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000185	    0x48033d000000	             add rdi, qword [0x0400018c]	        33	stdio2.h	FUNCTION_40	CALL_1
0x400018c	    0x440fb644057c	     movzx r8d, byte [rbp + rax + 0x7c] 	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000192	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_40	CALL_1
0x4000197	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_40	CALL_1
0x400019e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001a3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001a5	        0x4c891424	                    mov qword [rsp], r10	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001a9	        0x4183c402	                             add r12d, 2	       814	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001ad	        0x4183c701	                             add r15d, 1	       817	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001b1	      0xe800000000	                          call 0x40001b6	        33	stdio2.h	FUNCTION_40	CALL_1
0x40001b6	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x40001ba	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x40001be	          0x8d7301	                      lea esi, [rbx + 1]	       816	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001c1	        0x4c8b1424	                    mov r10, qword [rsp]	       816	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001c5	          0x4889f3	                            mov rbx, rsi	       816	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001c8	        0x488d0c02	                    lea rcx, [rdx + rax]	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x40001cc	          0x4839ce	                            cmp rsi, rcx	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x40001cf	        0x410f4dde	                        cmovge ebx, r14d	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x40001d3	        0x4983c202	                              add r10, 2	       819	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_4
0x40001d7	      0x480faf4520	            imul rax, qword [rbp + 0x20]	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001dc	          0x4489f9	                           mov ecx, r15d	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001df	          0x4801c2	                            add rdx, rax	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001e2	          0x4839d1	                            cmp rcx, rdx	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001e5	     0xf8d5effffff	                           jge 0x4000149	       804	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001eb	    0x8b0500000000	            mov eax, dword [0x040001f1] 	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001f1	    0x8b1500000000	            mov edx, dword [0x040001f7] 	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001f7	          0x8d04c0	                  lea eax, [rax + rax*8]	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001fa	          0x8d14d2	                  lea edx, [rdx + rdx*8]	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x40001fd	     0xfaf05000000	            imul eax, dword [0x04000204]	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000204	        0x8d441010	            lea eax, [rax + rdx + 0x10] 	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000208	          0x4139c4	                           cmp r12d, eax	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x400020b	     0xf8f38ffffff	                            jg 0x4000149	       806	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4
0x4000211	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       808	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x4000215	     0xf8565ffffff	                           jne 0x4000180	       808	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x400021b	        0x448b6d00	                   mov r13d, dword [rbp]	       809	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x400021f	      0xe95cffffff	                           jmp 0x4000180	       809	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x4000224	          0x4531e4	                          xor r12d, r12d	       809	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x4000227	    0x41bdffffffff	                    mov r13d, 0xffffffff	       809	listing.c	FUNCTION_12	WHILE_2	IF_2	WHILE_4	IF_3
0x400022d	    0x488b05000000	            mov rax, qword [0x04000234] 	       826	listing.c	FUNCTION_12
0x4000234	      0x42c6042000	                 mov byte [rax + r12], 0	       826	listing.c	FUNCTION_12
0x4000239	        0x4883c418	                           add rsp, 0x18	       828	listing.c	FUNCTION_12
0x400023d	          0x4489e8	                           mov eax, r13d	       828	listing.c	FUNCTION_12
0x4000240	              0x5b	                                 pop rbx	       828	listing.c	FUNCTION_12
0x4000241	              0x5d	                                 pop rbp	       828	listing.c	FUNCTION_12
0x4000242	            0x415c	                                 pop r12	       828	listing.c	FUNCTION_12
0x4000244	            0x415d	                                 pop r13	       828	listing.c	FUNCTION_12
0x4000246	            0x415e	                                 pop r14	       828	listing.c	FUNCTION_12
0x4000248	            0x415f	                                 pop r15	       828	listing.c	FUNCTION_12
0x400024a	              0xc3	                                     ret	       828	listing.c	FUNCTION_12
listing_nopage	WHILE,0:functions,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	2
0x4002260	    0xc70500000000	               mov dword [0x0400226a], 0	      1527	listing.c	FUNCTION_27
0x400226a	              0xc3	                                     ret	      1527	listing.c	FUNCTION_27
listing_newline	WHILE,0:functions,0:CALL,0:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	222
0x4000c20	            0x4154	                                push r12	       296	listing.c	FUNCTION_6
0x4000c22	              0x55	                                push rbp	       296	listing.c	FUNCTION_6
0x4000c23	              0x53	                                push rbx	       296	listing.c	FUNCTION_6
0x4000c24	        0x4883ec10	                           sub rsp, 0x10	       296	listing.c	FUNCTION_6
0x4000c28	    0x64488b042528	                mov rax, qword fs:[0x28]	       296	listing.c	FUNCTION_6
0x4000c31	      0x4889442408	                mov qword [rsp + 8], rax	       296	listing.c	FUNCTION_6
0x4000c36	            0x31c0	                            xor eax, eax	       296	listing.c	FUNCTION_6
0x4000c38	    0x8b0500000000	            mov eax, dword [0x04000c3e] 	       303	listing.c	FUNCTION_6	IF_1
0x4000c3e	            0x85c0	                           test eax, eax	       303	listing.c	FUNCTION_6	IF_1
0x4000c40	     0xf848a010000	                            je 0x4000dd0	       303	listing.c	FUNCTION_6	IF_1
0x4000c46	    0x488b15000000	            mov rdx, qword [0x04000c4d] 	       306	listing.c	FUNCTION_6	IF_2
0x4000c4d	    0x4881fa000000	                              cmp rdx, 0	       306	listing.c	FUNCTION_6	IF_2
0x4000c54	     0xf8476010000	                            je 0x4000dd0	       306	listing.c	FUNCTION_6	IF_2
0x4000c5a	            0xa810	                           test al, 0x10	       314	listing.c	FUNCTION_6	IF_3
0x4000c5c	          0x4889fb	                            mov rbx, rdi	       314	listing.c	FUNCTION_6	IF_3
0x4000c5f	            0x7437	                            je 0x4000c98	       314	listing.c	FUNCTION_6	IF_3
0x4000c61	    0x4c8b05000000	              mov r8, qword [0x04000c68]	       315	listing.c	FUNCTION_6	IF_3
0x4000c68	          0x4d85c0	                             test r8, r8	       315	listing.c	FUNCTION_6	IF_3
0x4000c6b	            0x742b	                            je 0x4000c98	       315	listing.c	FUNCTION_6	IF_3
0x4000c6d	        0x418b4858	              mov ecx, dword [r8 + 0x58]	       316	listing.c	FUNCTION_6	IF_3
0x4000c71	            0x85c9	                           test ecx, ecx	       316	listing.c	FUNCTION_6	IF_3
0x4000c73	            0x7523	                           jne 0x4000c98	       316	listing.c	FUNCTION_6	IF_3
0x4000c75	          0x488b12	                    mov rdx, qword [rdx]	       320	listing.c	FUNCTION_6	IF_3
0x4000c78	      0xbf00000000	                              mov edi, 0	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000c7d	      0xb906000000	                              mov ecx, 6	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000c82	          0x4889d6	                            mov rsi, rdx	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000c85	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000c87	     0xf85bb020000	                           jne 0x4000f48	       321	listing.c	FUNCTION_6	IF_3	IF_4	CALL_1
0x4000c8d	    0x41c740580100	                mov dword [r8 + 0x58], 1	       323	listing.c	FUNCTION_6	IF_3	IF_4
0x4000c95	           0xf1f00	                         nop dword [rax]	       323	listing.c	FUNCTION_6	IF_3	IF_4
0x4000c98	            0xa808	                              test al, 8	       329	listing.c	FUNCTION_6	IF_5
0x4000c9a	      0x488d7c2404	                      lea rdi, [rsp + 4]	       330	listing.c	FUNCTION_6	CALL_3
0x4000c9f	     0xf844b010000	                            je 0x4000df0	       329	listing.c	FUNCTION_6	IF_5
0x4000ca5	      0xe800000000	                          call 0x4000caa	       330	listing.c	FUNCTION_6	CALL_3
0x4000caa	          0x4885db	                           test rbx, rbx	       334	listing.c	FUNCTION_6	IF_6
0x4000cad	          0x4989c4	                            mov r12, rax	       330	listing.c	FUNCTION_6	CALL_3
0x4000cb0	     0xf844b010000	                            je 0x4000e01	       334	listing.c	FUNCTION_6	IF_6
0x4000cb6	      0xbf60000000	                           mov edi, 0x60	       399	listing.c	FUNCTION_6	ELSE_5	CALL_11
0x4000cbb	      0xe800000000	                          call 0x4000cc0	       399	listing.c	FUNCTION_6	ELSE_5	CALL_11
0x4000cc0	          0x4889c5	                            mov rbp, rax	       399	listing.c	FUNCTION_6	ELSE_5	CALL_11
0x4000cc3	        0x48895818	             mov qword [rax + 0x18], rbx	       400	listing.c	FUNCTION_6	ELSE_5
0x4000cc7	        0x8b442404	                mov eax, dword [rsp + 4]	       403	listing.c	FUNCTION_6
0x4000ccb	    0x488b3d000000	            mov rdi, qword [0x04000cd2] 	       290	listing.c	FUNCTION_5	CALL_1
0x4000cd2	    0x4c8925000000	            mov qword [0x04000cd9], r12 	       404	listing.c	FUNCTION_6
0x4000cd9	    0x890500000000	            mov dword [0x04000cdf], eax 	       403	listing.c	FUNCTION_6
0x4000cdf	      0xe800000000	                          call 0x4000ce4	       290	listing.c	FUNCTION_5	CALL_1
0x4000ce4	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x4000ce6	      0xe800000000	                          call 0x4000ceb	       291	listing.c	FUNCTION_5	CALL_2
0x4000ceb	    0x488b05000000	            mov rax, qword [0x04000cf2] 	       408	listing.c	FUNCTION_6	IF_13
0x4000cf2	          0x4885c0	                           test rax, rax	       408	listing.c	FUNCTION_6	IF_13
0x4000cf5	     0xf843d020000	                            je 0x4000f38	       408	listing.c	FUNCTION_6	IF_13
0x4000cfb	        0x48896820	             mov qword [rax + 0x20], rbp	       409	listing.c	FUNCTION_6	IF_13
0x4000cff	    0x488b05000000	            mov rax, qword [0x04000d06] 	       415	listing.c	FUNCTION_6
0x4000d06	    0x488b1d000000	            mov rbx, qword [0x04000d0d] 	       266	listing.c	FUNCTION_4
0x4000d0d	    0x48892d000000	            mov qword [0x04000d14], rbp 	       413	listing.c	FUNCTION_6
0x4000d14	        0x48894500	                    mov qword [rbp], rax	       415	listing.c	FUNCTION_6
0x4000d18	        0x8b442404	                mov eax, dword [rsp + 4]	       416	listing.c	FUNCTION_6
0x4000d1c	          0x4885db	                           test rbx, rbx	       268	listing.c	FUNCTION_4	WHILE_1
0x4000d1f	          0x894508	                mov dword [rbp + 8], eax	       416	listing.c	FUNCTION_6
0x4000d22	            0x7518	                           jne 0x4000d3c	       268	listing.c	FUNCTION_4	WHILE_1
0x4000d24	      0xe9c7010000	                           jmp 0x4000ef0	       268	listing.c	FUNCTION_4	WHILE_1
0x4000d29	     0xf1f80000000	                         nop dword [rax]	       268	listing.c	FUNCTION_4	WHILE_1
0x4000d30	          0x488b1b	                    mov rbx, qword [rbx]	       272	listing.c	FUNCTION_4	WHILE_1
0x4000d33	          0x4885db	                           test rbx, rbx	       268	listing.c	FUNCTION_4	WHILE_1
0x4000d36	     0xf84b4010000	                            je 0x4000ef0	       268	listing.c	FUNCTION_4	WHILE_1
0x4000d3c	        0x488b7b08	                mov rdi, qword [rbx + 8]	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000d40	          0x4c89e6	                            mov rsi, r12	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000d43	      0xe800000000	                          call 0x4000d48	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000d48	            0x85c0	                           test eax, eax	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000d4a	            0x75e4	                           jne 0x4000d30	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000d4c	    0x488b3d000000	            mov rdi, qword [0x04000d53] 	       290	listing.c	FUNCTION_5	CALL_1
0x4000d53	        0x48895d10	            mov qword [rbp + 0x10], rbx 	       417	listing.c	FUNCTION_6	CALL_13
0x4000d57	    0x48c745200000	               mov qword [rbp + 0x20], 0	       418	listing.c	FUNCTION_6
0x4000d5f	    0x48c745380000	               mov qword [rbp + 0x38], 0	       419	listing.c	FUNCTION_6
0x4000d67	    0x48c745400000	               mov qword [rbp + 0x40], 0	       420	listing.c	FUNCTION_6
0x4000d6f	    0xc74548000000	               mov dword [rbp + 0x48], 0	       421	listing.c	FUNCTION_6
0x4000d76	    0x48c745280000	               mov qword [rbp + 0x28], 0	       422	listing.c	FUNCTION_6
0x4000d7e	    0xc74530000000	               mov dword [rbp + 0x30], 0	       423	listing.c	FUNCTION_6
0x4000d85	    0xc74558000000	               mov dword [rbp + 0x58], 0	       424	listing.c	FUNCTION_6
0x4000d8c	      0xe800000000	                          call 0x4000d91	       290	listing.c	FUNCTION_5	CALL_1
0x4000d91	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x4000d93	      0xe800000000	                          call 0x4000d98	       291	listing.c	FUNCTION_5	CALL_2
0x4000d98	    0xf60500000000	           test byte [0x04000d9f], 0x10 	       431	listing.c	FUNCTION_6	IF_14
0x4000d9f	            0x742f	                            je 0x4000dd0	       431	listing.c	FUNCTION_6	IF_14
0x4000da1	    0x488b05000000	            mov rax, qword [0x04000da8] 	       435	listing.c	FUNCTION_6	IF_14
0x4000da8	      0xbf00000000	                              mov edi, 0	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000dad	      0xb906000000	                              mov ecx, 6	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000db2	          0x488b00	                    mov rax, qword [rax]	       435	listing.c	FUNCTION_6	IF_14
0x4000db5	          0x4889c6	                            mov rsi, rax	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000db8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000dba	     0xf8510010000	                           jne 0x4000ed0	       436	listing.c	FUNCTION_6	IF_14	IF_15	CALL_15
0x4000dc0	    0xc74558010000	               mov dword [rbp + 0x58], 1	       438	listing.c	FUNCTION_6	IF_14	IF_15
0x4000dc7	    0x660f1f840000	                    nop word [rax + rax]	       438	listing.c	FUNCTION_6	IF_14	IF_15
0x4000dd0	      0x488b442408	                mov rax, qword [rsp + 8]	       441	listing.c	FUNCTION_6
0x4000dd5	    0x644833042528	                xor rax, qword fs:[0x28]	       441	listing.c	FUNCTION_6
0x4000dde	     0xf85f3010000	                           jne 0x4000fd7	       441	listing.c	FUNCTION_6
0x4000de4	        0x4883c410	                           add rsp, 0x10	       441	listing.c	FUNCTION_6
0x4000de8	              0x5b	                                 pop rbx	       441	listing.c	FUNCTION_6
0x4000de9	              0x5d	                                 pop rbp	       441	listing.c	FUNCTION_6
0x4000dea	            0x415c	                                 pop r12	       441	listing.c	FUNCTION_6
0x4000dec	              0xc3	                                     ret	       441	listing.c	FUNCTION_6
0x4000ded	           0xf1f00	                         nop dword [rax]	       441	listing.c	FUNCTION_6
0x4000df0	      0xe800000000	                          call 0x4000df5	       332	listing.c	FUNCTION_6	CALL_4
0x4000df5	          0x4885db	                           test rbx, rbx	       334	listing.c	FUNCTION_6	IF_6
0x4000df8	          0x4989c4	                            mov r12, rax	       332	listing.c	FUNCTION_6	CALL_4
0x4000dfb	     0xf85b5feffff	                           jne 0x4000cb6	       334	listing.c	FUNCTION_6	IF_6
0x4000e01	    0x8b0500000000	            mov eax, dword [0x04000e07] 	       336	listing.c	FUNCTION_6	IF_6	IF_7
0x4000e07	        0x39442404	                cmp dword [rsp + 4], eax	       336	listing.c	FUNCTION_6	IF_6	IF_7
0x4000e0b	            0x751d	                           jne 0x4000e2a	       336	listing.c	FUNCTION_6	IF_6	IF_7
0x4000e0d	          0x4d85e4	                           test r12, r12	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e10	    0x488b35000000	            mov rsi, qword [0x04000e17] 	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e17	            0x74b7	                            je 0x4000dd0	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e19	          0x4885f6	                           test rsi, rsi	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e1c	            0x74b2	                            je 0x4000dd0	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e1e	          0x4c89e7	                            mov rdi, r12	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e21	      0xe800000000	                          call 0x4000e26	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e26	            0x85c0	                           test eax, eax	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e28	            0x74a6	                            je 0x4000dd0	       337	listing.c	FUNCTION_6	IF_6	IF_7	CALL_5
0x4000e2a	      0xbf60000000	                           mov edi, 0x60	       340	listing.c	FUNCTION_6	IF_6	CALL_6
0x4000e2f	      0xe800000000	                          call 0x4000e34	       340	listing.c	FUNCTION_6	IF_6	CALL_6
0x4000e34	            0x31ff	                            xor edi, edi	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e36	      0xba05000000	                              mov edx, 5	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e3b	      0xbe00000000	                              mov esi, 0	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e40	          0x4889c5	                            mov rbp, rax	       340	listing.c	FUNCTION_6	IF_6	CALL_6
0x4000e43	      0xe800000000	                          call 0x4000e48	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e48	          0x4c89e7	                            mov rdi, r12	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e4b	          0x4889c6	                            mov rsi, rax	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e4e	      0xe800000000	                          call 0x4000e53	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e53	            0x85c0	                           test eax, eax	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e55	     0xf850d010000	                           jne 0x4000f68	       353	listing.c	FUNCTION_6	IF_6	IF_8	CALL_8
0x4000e5b	    0x4c8b05000000	              mov r8, qword [0x04000e62]	       354	listing.c	FUNCTION_6	IF_6	IF_8
0x4000e62	          0x4d85c0	                             test r8, r8	       354	listing.c	FUNCTION_6	IF_6	IF_8
0x4000e65	     0xf84fd000000	                            je 0x4000f68	       354	listing.c	FUNCTION_6	IF_6	IF_8
0x4000e6b	        0x410fb600	                    movzx eax, byte [r8]	       362	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e6f	            0x31f6	                            xor esi, esi	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e71	            0x31c9	                            xor ecx, ecx	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e73	          0x4c89c2	                             mov rdx, r8	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e76	      0xbf01000000	                              mov edi, 1	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e7b	      0xbb01000000	                              mov ebx, 1	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e80	            0x84c0	                             test al, al	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e82	            0x752d	                           jne 0x4000eb1	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e84	      0xe902010000	                           jmp 0x4000f8b	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e89	     0xf1f80000000	                         nop dword [rax]	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000e90	            0x3c5c	                            cmp al, 0x5c	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000e92	     0xf84e0000000	                            je 0x4000f78	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000e98	            0x89cf	                            mov edi, ecx	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000e9a	          0x83f701	                              xor edi, 1	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000e9d	            0x3c22	                            cmp al, 0x22	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000e9f	           0xf44cf	                          cmove ecx, edi	       368	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000ea2	        0x4883c201	                              add rdx, 1	       364	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ea6	           0xfb602	                   movzx eax, byte [rdx]	       362	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ea9	            0x84c0	                             test al, al	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000eab	     0xf84d1000000	                            je 0x4000f82	       361	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000eb1	            0x85c9	                           test ecx, ecx	       362	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000eb3	            0x7510	                           jne 0x4000ec5	       362	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000eb5	           0xfb6f8	                           movzx edi, al	       363	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000eb8	    0x80bf00000000	                       cmp byte [rdi], 1	       363	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ebf	     0xf84bd000000	                            je 0x4000f82	       363	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1
0x4000ec5	            0x85f6	                           test esi, esi	       366	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ec7	            0x74c7	                            je 0x4000e90	       366	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ec9	            0x31f6	                            xor esi, esi	       367	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ecb	            0xebd5	                           jmp 0x4000ea2	       367	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ecd	           0xf1f00	                         nop dword [rax]	       367	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	IF_9
0x4000ed0	      0xbf00000000	                              mov edi, 0	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000ed5	      0xb905000000	                              mov ecx, 5	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000eda	          0x4889c6	                            mov rsi, rax	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000edd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000edf	     0xf84dbfeffff	                            je 0x4000dc0	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000ee5	      0xe9e6feffff	                           jmp 0x4000dd0	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000eea	    0x660f1f440000	                    nop word [rax + rax]	       437	listing.c	FUNCTION_6	IF_14	IF_15	CALL_16
0x4000ef0	      0xbf20000000	                           mov edi, 0x20	       276	listing.c	FUNCTION_4	CALL_2
0x4000ef5	      0xe800000000	                          call 0x4000efa	       276	listing.c	FUNCTION_4	CALL_2
0x4000efa	          0x4889c3	                            mov rbx, rax	       276	listing.c	FUNCTION_4	CALL_2
0x4000efd	    0x488b05000000	            mov rax, qword [0x04000f04] 	       277	listing.c	FUNCTION_4
0x4000f04	          0x4c89e7	                            mov rdi, r12	       279	listing.c	FUNCTION_4	CALL_3
0x4000f07	    0x48891d000000	            mov qword [0x04000f0e], rbx 	       278	listing.c	FUNCTION_4
0x4000f0e	          0x488903	                    mov qword [rbx], rax	       277	listing.c	FUNCTION_4
0x4000f11	      0xe800000000	                          call 0x4000f16	       279	listing.c	FUNCTION_4	CALL_3
0x4000f16	    0x48c743100000	               mov qword [rbx + 0x10], 0	       280	listing.c	FUNCTION_4
0x4000f1e	        0x48894308	                mov qword [rbx + 8], rax	       279	listing.c	FUNCTION_4	CALL_3
0x4000f22	    0xc74318000000	               mov dword [rbx + 0x18], 0	       281	listing.c	FUNCTION_4
0x4000f29	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	       282	listing.c	FUNCTION_4
0x4000f30	      0xe917feffff	                           jmp 0x4000d4c	       282	listing.c	FUNCTION_4
0x4000f35	           0xf1f00	                         nop dword [rax]	       282	listing.c	FUNCTION_4
0x4000f38	    0x48892d000000	            mov qword [0x04000f3f], rbp 	       411	listing.c	FUNCTION_6	ELSE_6
0x4000f3f	      0xe9bbfdffff	                           jmp 0x4000cff	       411	listing.c	FUNCTION_6	ELSE_6
0x4000f44	         0xf1f4000	                         nop dword [rax]	       411	listing.c	FUNCTION_6	ELSE_6
0x4000f48	      0xbf00000000	                              mov edi, 0	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f4d	      0xb905000000	                              mov ecx, 5	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f52	          0x4889d6	                            mov rsi, rdx	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f55	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f57	     0xf853bfdffff	                           jne 0x4000c98	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f5d	      0xe92bfdffff	                           jmp 0x4000c8d	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f62	    0x660f1f440000	                    nop word [rax + rax]	       322	listing.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x4000f68	    0x48c745180000	               mov qword [rbp + 0x18], 0	       395	listing.c	FUNCTION_6	IF_6	ELSE_4
0x4000f70	      0xe952fdffff	                           jmp 0x4000cc7	       395	listing.c	FUNCTION_6	IF_6	ELSE_4
0x4000f75	           0xf1f00	                         nop dword [rax]	       395	listing.c	FUNCTION_6	IF_6	ELSE_4
0x4000f78	      0xbe01000000	                              mov esi, 1	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f7d	      0xe920ffffff	                           jmp 0x4000ea2	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f82	          0x4c29c2	                             sub rdx, r8	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f85	          0x8d5a01	                      lea ebx, [rdx + 1]	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f88	          0x4863fb	                         movsxd rdi, ebx	       369	listing.c	FUNCTION_6	IF_6	IF_8	FOR_1	ELSE_2	IF_10
0x4000f8b	      0xe800000000	                          call 0x4000f90	       376	listing.c	FUNCTION_6	IF_6	IF_8	CALL_9
0x4000f90	    0x488b15000000	            mov rdx, qword [0x04000f97] 	       378	listing.c	FUNCTION_6	IF_6	IF_8
0x4000f97	        0x448d43ff	                      lea r8d, [rbx - 1]	       378	listing.c	FUNCTION_6	IF_6	IF_8
0x4000f9b	          0x4889c7	                            mov rdi, rax	       379	listing.c	FUNCTION_6	IF_6	IF_8
0x4000f9e	          0x4901d0	                             add r8, rdx	       379	listing.c	FUNCTION_6	IF_6	IF_8
0x4000fa1	     0xf1f80000000	                         nop dword [rax]	       379	listing.c	FUNCTION_6	IF_6	IF_8
0x4000fa8	          0x4c39c2	                             cmp rdx, r8	       381	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000fab	            0x741e	                            je 0x4000fcb	       381	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000fad	        0x4883c201	                              add rdx, 1	       383	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000fb1	         0xfb672ff	               movzx esi, byte [rdx - 1]	       383	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000fb5	    0xf68436000000	                test byte [rsi + rsi], 2	       386	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1	IF_12	CALL_10
0x4000fbd	            0x75e9	                           jne 0x4000fa8	       386	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1	IF_12	CALL_10
0x4000fbf	          0x408837	                     mov byte [rdi], sil	       387	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1	IF_12
0x4000fc2	        0x4883c701	                              add rdi, 1	       387	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1	IF_12
0x4000fc6	          0x4c39c2	                             cmp rdx, r8	       381	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000fc9	            0x75e2	                           jne 0x4000fad	       381	listing.c	FUNCTION_6	IF_6	IF_8	WHILE_1
0x4000fcb	          0xc60700	                       mov byte [rdi], 0	       390	listing.c	FUNCTION_6	IF_6	IF_8
0x4000fce	        0x48894518	            mov qword [rbp + 0x18], rax 	       392	listing.c	FUNCTION_6	IF_6	IF_8
0x4000fd2	      0xe9f0fcffff	                           jmp 0x4000cc7	       355	listing.c	FUNCTION_6	IF_6	IF_8
0x4000fd7	      0xe800000000	                          call 0x4000fdc	       441	listing.c	FUNCTION_6
listing_warning	WHILE,0:functions,0:CALL,2:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	28
0x4000b40	              0x53	                                push rbx	       252	listing.c	ELSE_1	FUNCTION_2
0x4000b41	      0xba05000000	                              mov edx, 5	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000b46	          0x4889fb	                            mov rbx, rdi	       252	listing.c	ELSE_1	FUNCTION_2
0x4000b49	      0xbe00000000	                              mov esi, 0	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000b4e	            0x31ff	                            xor edi, edi	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000b50	      0xe800000000	                          call 0x4000b55	       253	listing.c	ELSE_1	FUNCTION_2	CALL_2
0x4000b55	    0x48833d000000	               cmp qword [0x04000b5d], 0	       235	listing.c	FUNCTION_1	IF_1
0x4000b5d	            0x743f	                            je 0x4000b9e	       235	listing.c	FUNCTION_1	IF_1
0x4000b5f	            0x31d2	                            xor edx, edx	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000b61	          0x4889de	                            mov rsi, rbx	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000b64	          0x4889c7	                            mov rdi, rax	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000b67	            0x31c0	                            xor eax, eax	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000b69	      0xe800000000	                          call 0x4000b6e	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000b6e	      0xbf10000000	                           mov edi, 0x10	       238	listing.c	FUNCTION_1	IF_1	CALL_2
0x4000b73	          0x4889c3	                            mov rbx, rax	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000b76	      0xe800000000	                          call 0x4000b7b	       238	listing.c	FUNCTION_1	IF_1	CALL_2
0x4000b7b	    0x488b15000000	            mov rdx, qword [0x04000b82] 	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000b82	          0x488918	                    mov qword [rax], rbx	       239	listing.c	FUNCTION_1	IF_1
0x4000b85	    0x48c740080000	                  mov qword [rax + 8], 0	       240	listing.c	FUNCTION_1	IF_1
0x4000b8d	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000b91	          0x4885c9	                           test rcx, rcx	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000b94	            0x740a	                            je 0x4000ba0	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000b96	        0x48894108	                mov qword [rcx + 8], rax	       243	listing.c	FUNCTION_1	IF_1	IF_2
0x4000b9a	        0x48894240	             mov qword [rdx + 0x40], rax	       246	listing.c	FUNCTION_1	IF_1	ELSE_1
0x4000b9e	              0x5b	                                 pop rbx	       254	listing.c	ELSE_1	FUNCTION_2
0x4000b9f	              0xc3	                                     ret	       254	listing.c	ELSE_1	FUNCTION_2
0x4000ba0	        0x48894238	             mov qword [rdx + 0x38], rax	       245	listing.c	FUNCTION_1	IF_1	ELSE_1
0x4000ba4	            0xebf4	                           jmp 0x4000b9a	       245	listing.c	FUNCTION_1	IF_1	ELSE_1
listing_prev_line	WHILE,0:functions,0:CALL,2:DO,0:FOR,2:SWITCH,0:IF,2:ELSE,0	41
0x4000fe0	    0x488b05000000	            mov rax, qword [0x04000fe7] 	       455	listing.c	FUNCTION_7	IF_1
0x4000fe7	          0x4885c0	                           test rax, rax	       455	listing.c	FUNCTION_7	IF_1
0x4000fea	     0xf8490000000	                            je 0x4001080	       455	listing.c	FUNCTION_7	IF_1
0x4000ff0	    0x483b05000000	            cmp rax, qword [0x04000ff7] 	       456	listing.c	FUNCTION_7	IF_1
0x4000ff7	     0xf8483000000	                            je 0x4001080	       456	listing.c	FUNCTION_7	IF_1
0x4000ffd	        0x4883ec08	                              sub rsp, 8	       451	listing.c	FUNCTION_7
0x4001001	    0x488b3d000000	            mov rdi, qword [0x04001008] 	       290	listing.c	FUNCTION_5	CALL_1
0x4001008	      0xe800000000	                          call 0x400100d	       290	listing.c	FUNCTION_5	CALL_1
0x400100d	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x400100f	      0xe800000000	                          call 0x4001014	       291	listing.c	FUNCTION_5	CALL_2
0x4001014	    0x488b0d000000	            mov rcx, qword [0x0400101b] 	       461	listing.c	FUNCTION_7	FOR_1
0x400101b	    0x488b05000000	            mov rax, qword [0x04001022] 	       461	listing.c	FUNCTION_7	FOR_1
0x4001022	            0xeb07	                           jmp 0x400102b	       461	listing.c	FUNCTION_7	FOR_1
0x4001024	         0xf1f4000	                         nop dword [rax]	       461	listing.c	FUNCTION_7	FOR_1
0x4001028	          0x4889d1	                            mov rcx, rdx	       461	listing.c	FUNCTION_7	FOR_1
0x400102b	        0x488b5120	            mov rdx, qword [rcx + 0x20] 	       461	listing.c	FUNCTION_7	FOR_1
0x400102f	          0x4839d0	                            cmp rax, rdx	       461	listing.c	FUNCTION_7	FOR_1
0x4001032	            0x75f4	                           jne 0x4001028	       461	listing.c	FUNCTION_7	FOR_1
0x4001034	    0x488b05000000	            mov rax, qword [0x0400103b] 	       464	listing.c	FUNCTION_7	FOR_2
0x400103b	          0x488b00	                    mov rax, qword [rax]	       464	listing.c	FUNCTION_7	FOR_2
0x400103e	          0x4885c0	                           test rax, rax	       464	listing.c	FUNCTION_7	FOR_2
0x4001041	            0x750e	                           jne 0x4001051	       464	listing.c	FUNCTION_7	FOR_2
0x4001043	            0xeb1f	                           jmp 0x4001064	       464	listing.c	FUNCTION_7	FOR_2
0x4001045	           0xf1f00	                         nop dword [rax]	       464	listing.c	FUNCTION_7	FOR_2
0x4001048	        0x488b4038	            mov rax, qword [rax + 0x38] 	       464	listing.c	FUNCTION_7	FOR_2
0x400104c	          0x4885c0	                           test rax, rax	       464	listing.c	FUNCTION_7	FOR_2
0x400104f	            0x7413	                            je 0x4001064	       464	listing.c	FUNCTION_7	FOR_2
0x4001051	        0x483b5050	            cmp rdx, qword [rax + 0x50] 	       465	listing.c	FUNCTION_7	FOR_2	IF_2
0x4001055	            0x75f1	                           jne 0x4001048	       465	listing.c	FUNCTION_7	FOR_2	IF_2
0x4001057	        0x48894850	             mov qword [rax + 0x50], rcx	       466	listing.c	FUNCTION_7	FOR_2	IF_2
0x400105b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       464	listing.c	FUNCTION_7	FOR_2
0x400105f	          0x4885c0	                           test rax, rax	       464	listing.c	FUNCTION_7	FOR_2
0x4001062	            0x75ed	                           jne 0x4001051	       464	listing.c	FUNCTION_7	FOR_2
0x4001064	    0x488b3d000000	            mov rdi, qword [0x0400106b] 	       468	listing.c	FUNCTION_7
0x400106b	          0x48893a	                    mov qword [rdx], rdi	       468	listing.c	FUNCTION_7
0x400106e	      0xe800000000	                          call 0x4001073	       290	listing.c	FUNCTION_5	CALL_1
0x4001073	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x4001075	        0x4883c408	                              add rsp, 8	       470	listing.c	FUNCTION_7
0x4001079	      0xe900000000	                           jmp 0x400107e	       291	listing.c	FUNCTION_5	CALL_2
0x400107e	            0x6690	                                     nop	       291	listing.c	FUNCTION_5	CALL_2
0x4001080	            0xf3c3	                                     ret	       291	listing.c	FUNCTION_5	CALL_2
listing_source_file	WHILE,0:functions,0:CALL,0:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	46
0x4002420	    0x8b0500000000	            mov eax, dword [0x04002426] 	      1594	listing.c	FUNCTION_30	IF_1
0x4002426	            0x85c0	                           test eax, eax	      1594	listing.c	FUNCTION_30	IF_1
0x4002428	            0x7506	                           jne 0x4002430	      1594	listing.c	FUNCTION_30	IF_1
0x400242a	              0xc3	                                     ret	      1596	listing.c	FUNCTION_30
0x400242b	       0xf1f440000	                   nop dword [rax + rax]	      1596	listing.c	FUNCTION_30
0x4002430	            0x4154	                                push r12	      1593	listing.c	FUNCTION_30
0x4002432	              0x55	                                push rbp	      1593	listing.c	FUNCTION_30
0x4002433	          0x4889fd	                            mov rbp, rdi	      1593	listing.c	FUNCTION_30
0x4002436	              0x53	                                push rbx	      1593	listing.c	FUNCTION_30
0x4002437	    0x488b1d000000	            mov rbx, qword [0x0400243e] 	       266	listing.c	FUNCTION_4
0x400243e	    0x4c8b25000000	            mov r12, qword [0x04002445] 	      1595	listing.c	FUNCTION_30	CALL_1
0x4002445	          0x4885db	                           test rbx, rbx	       268	listing.c	FUNCTION_4	WHILE_1
0x4002448	            0x750e	                           jne 0x4002458	       268	listing.c	FUNCTION_4	WHILE_1
0x400244a	            0xeb2c	                           jmp 0x4002478	       268	listing.c	FUNCTION_4	WHILE_1
0x400244c	         0xf1f4000	                         nop dword [rax]	       268	listing.c	FUNCTION_4	WHILE_1
0x4002450	          0x488b1b	                    mov rbx, qword [rbx]	       272	listing.c	FUNCTION_4	WHILE_1
0x4002453	          0x4885db	                           test rbx, rbx	       268	listing.c	FUNCTION_4	WHILE_1
0x4002456	            0x7420	                            je 0x4002478	       268	listing.c	FUNCTION_4	WHILE_1
0x4002458	        0x488b7b08	                mov rdi, qword [rbx + 8]	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x400245c	          0x4889ee	                            mov rsi, rbp	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x400245f	      0xe800000000	                          call 0x4002464	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4002464	            0x85c0	                           test eax, eax	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4002466	            0x75e8	                           jne 0x4002450	       270	listing.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4002468	      0x49895c2428	             mov qword [r12 + 0x28], rbx	      1595	listing.c	FUNCTION_30	CALL_1
0x400246d	              0x5b	                                 pop rbx	      1596	listing.c	FUNCTION_30
0x400246e	              0x5d	                                 pop rbp	      1596	listing.c	FUNCTION_30
0x400246f	            0x415c	                                 pop r12	      1596	listing.c	FUNCTION_30
0x4002471	            0xf3c3	                                     ret	      1596	listing.c	FUNCTION_30
0x4002473	       0xf1f440000	                   nop dword [rax + rax]	      1596	listing.c	FUNCTION_30
0x4002478	      0xbf20000000	                           mov edi, 0x20	       276	listing.c	FUNCTION_4	CALL_2
0x400247d	      0xe800000000	                          call 0x4002482	       276	listing.c	FUNCTION_4	CALL_2
0x4002482	          0x4889c3	                            mov rbx, rax	       276	listing.c	FUNCTION_4	CALL_2
0x4002485	    0x488b05000000	            mov rax, qword [0x0400248c] 	       277	listing.c	FUNCTION_4
0x400248c	          0x4889ef	                            mov rdi, rbp	       279	listing.c	FUNCTION_4	CALL_3
0x400248f	    0x48891d000000	            mov qword [0x04002496], rbx 	       278	listing.c	FUNCTION_4
0x4002496	          0x488903	                    mov qword [rbx], rax	       277	listing.c	FUNCTION_4
0x4002499	      0xe800000000	                          call 0x400249e	       279	listing.c	FUNCTION_4	CALL_3
0x400249e	    0x48c743100000	               mov qword [rbx + 0x10], 0	       280	listing.c	FUNCTION_4
0x40024a6	        0x48894308	                mov qword [rbx + 8], rax	       279	listing.c	FUNCTION_4	CALL_3
0x40024aa	    0xc74318000000	               mov dword [rbx + 0x18], 0	       281	listing.c	FUNCTION_4
0x40024b1	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	       282	listing.c	FUNCTION_4
0x40024b8	      0x49895c2428	             mov qword [r12 + 0x28], rbx	      1595	listing.c	FUNCTION_30	CALL_1
0x40024bd	              0x5b	                                 pop rbx	      1596	listing.c	FUNCTION_30
0x40024be	              0x5d	                                 pop rbp	      1596	listing.c	FUNCTION_30
0x40024bf	            0x415c	                                 pop r12	      1596	listing.c	FUNCTION_30
0x40024c1	            0xebae	                           jmp 0x4002471	      1596	listing.c	FUNCTION_30
listing_error	WHILE,0:functions,0:CALL,2:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	28
0x4000bb0	              0x53	                                push rbx	       258	listing.c	FUNCTION_3
0x4000bb1	      0xba05000000	                              mov edx, 5	       259	listing.c	FUNCTION_3	CALL_2
0x4000bb6	          0x4889fb	                            mov rbx, rdi	       258	listing.c	FUNCTION_3
0x4000bb9	      0xbe00000000	                              mov esi, 0	       259	listing.c	FUNCTION_3	CALL_2
0x4000bbe	            0x31ff	                            xor edi, edi	       259	listing.c	FUNCTION_3	CALL_2
0x4000bc0	      0xe800000000	                          call 0x4000bc5	       259	listing.c	FUNCTION_3	CALL_2
0x4000bc5	    0x48833d000000	               cmp qword [0x04000bcd], 0	       235	listing.c	FUNCTION_1	IF_1
0x4000bcd	            0x743f	                            je 0x4000c0e	       235	listing.c	FUNCTION_1	IF_1
0x4000bcf	            0x31d2	                            xor edx, edx	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000bd1	          0x4889de	                            mov rsi, rbx	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000bd4	          0x4889c7	                            mov rdi, rax	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000bd7	            0x31c0	                            xor eax, eax	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000bd9	      0xe800000000	                          call 0x4000bde	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000bde	      0xbf10000000	                           mov edi, 0x10	       238	listing.c	FUNCTION_1	IF_1	CALL_2
0x4000be3	          0x4889c3	                            mov rbx, rax	       237	listing.c	FUNCTION_1	IF_1	CALL_1
0x4000be6	      0xe800000000	                          call 0x4000beb	       238	listing.c	FUNCTION_1	IF_1	CALL_2
0x4000beb	    0x488b15000000	            mov rdx, qword [0x04000bf2] 	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000bf2	          0x488918	                    mov qword [rax], rbx	       239	listing.c	FUNCTION_1	IF_1
0x4000bf5	    0x48c740080000	                  mov qword [rax + 8], 0	       240	listing.c	FUNCTION_1	IF_1
0x4000bfd	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000c01	          0x4885c9	                           test rcx, rcx	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000c04	            0x740a	                            je 0x4000c10	       242	listing.c	FUNCTION_1	IF_1	IF_2
0x4000c06	        0x48894108	                mov qword [rcx + 8], rax	       243	listing.c	FUNCTION_1	IF_1	IF_2
0x4000c0a	        0x48894240	             mov qword [rdx + 0x40], rax	       246	listing.c	FUNCTION_1	IF_1	ELSE_1
0x4000c0e	              0x5b	                                 pop rbx	       260	listing.c	FUNCTION_3
0x4000c0f	              0xc3	                                     ret	       260	listing.c	FUNCTION_3
0x4000c10	        0x48894238	             mov qword [rdx + 0x38], rax	       245	listing.c	FUNCTION_1	IF_1	ELSE_1
0x4000c14	            0xebf4	                           jmp 0x4000c0a	       245	listing.c	FUNCTION_1	IF_1	ELSE_1
emit_line	WHILE,0:functions,0:CALL,4:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	51
0x40006f0	              0x53	                                push rbx	       750	listing.c	FUNCTION_11
0x40006f1	          0x4889fb	                            mov rbx, rdi	       750	listing.c	FUNCTION_11
0x40006f4	    0x4881ecd00000	                           sub rsp, 0xd0	       750	listing.c	FUNCTION_11
0x40006fb	            0x84c0	                             test al, al	       750	listing.c	FUNCTION_11
0x40006fd	      0x4889542430	             mov qword [rsp + 0x30], rdx	       750	listing.c	FUNCTION_11
0x4000702	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       750	listing.c	FUNCTION_11
0x4000707	      0x4c89442440	              mov qword [rsp + 0x40], r8	       750	listing.c	FUNCTION_11
0x400070c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       750	listing.c	FUNCTION_11
0x4000711	            0x7437	                            je 0x400074a	       750	listing.c	FUNCTION_11
0x4000713	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       750	listing.c	FUNCTION_11
0x4000718	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       750	listing.c	FUNCTION_11
0x400071d	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       750	listing.c	FUNCTION_11
0x4000722	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       750	listing.c	FUNCTION_11
0x400072a	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       750	listing.c	FUNCTION_11
0x4000732	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       750	listing.c	FUNCTION_11
0x400073a	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       750	listing.c	FUNCTION_11
0x4000742	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       750	listing.c	FUNCTION_11
0x400074a	    0x64488b042528	                mov rax, qword fs:[0x28]	       750	listing.c	FUNCTION_11
0x4000753	      0x4889442418	             mov qword [rsp + 0x18], rax	       750	listing.c	FUNCTION_11
0x4000758	            0x31c0	                            xor eax, eax	       750	listing.c	FUNCTION_11
0x400075a	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       753	listing.c	FUNCTION_11	CALL_1
0x4000762	          0x4889f2	                            mov rdx, rsi	       127	stdio2.h	FUNCTION_45	CALL_1
0x4000765	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_45	CALL_1
0x4000768	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_45	CALL_1
0x400076d	    0x488b3d000000	            mov rdi, qword [0x04000774] 	       127	stdio2.h	FUNCTION_45	CALL_1
0x4000774	      0x4889442408	                mov qword [rsp + 8], rax	       753	listing.c	FUNCTION_11	CALL_1
0x4000779	      0x488d442420	                   lea rax, [rsp + 0x20]	       753	listing.c	FUNCTION_11	CALL_1
0x400077e	    0xc70424100000	                   mov dword [rsp], 0x10	       753	listing.c	FUNCTION_11	CALL_1
0x4000785	    0xc74424043000	               mov dword [rsp + 4], 0x30	       753	listing.c	FUNCTION_11	CALL_1
0x400078d	      0x4889442410	             mov qword [rsp + 0x10], rax	       753	listing.c	FUNCTION_11	CALL_1
0x4000792	      0xe800000000	                          call 0x4000797	       127	stdio2.h	FUNCTION_45	CALL_1
0x4000797	    0x8b0500000000	            mov eax, dword [0x0400079d] 	       756	listing.c	FUNCTION_11
0x400079d	    0x8b0d00000000	            mov ecx, dword [0x040007a3] 	       707	listing.c	FUNCTION_10	IF_1
0x40007a3	    0x8b1500000000	            mov edx, dword [0x040007a9] 	       707	listing.c	FUNCTION_10	IF_1
0x40007a9	          0x83c001	                              add eax, 1	       756	listing.c	FUNCTION_11
0x40007ac	            0x85c9	                           test ecx, ecx	       707	listing.c	FUNCTION_10	IF_1
0x40007ae	    0x890500000000	            mov dword [0x040007b4], eax 	       756	listing.c	FUNCTION_11
0x40007b4	            0x7504	                           jne 0x40007ba	       707	listing.c	FUNCTION_10	IF_1
0x40007b6	            0x39d0	                            cmp eax, edx	       707	listing.c	FUNCTION_10	IF_1
0x40007b8	            0x720c	                            jb 0x40007c6	       707	listing.c	FUNCTION_10	IF_1
0x40007ba	            0x85d2	                           test edx, edx	       708	listing.c	FUNCTION_10	IF_1
0x40007bc	            0x7408	                            je 0x40007c6	       708	listing.c	FUNCTION_10	IF_1
0x40007be	          0x4889df	                            mov rdi, rbx	       708	listing.c	FUNCTION_10	IF_1
0x40007c1	      0xe88afaffff	            call sym.listing_page.part.0	       708	listing.c	FUNCTION_10	IF_1
0x40007c6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       760	listing.c	FUNCTION_11
0x40007cb	    0x644833042528	                xor rax, qword fs:[0x28]	       760	listing.c	FUNCTION_11
0x40007d4	            0x7509	                           jne 0x40007df	       760	listing.c	FUNCTION_11
0x40007d6	    0x4881c4d00000	                           add rsp, 0xd0	       760	listing.c	FUNCTION_11
0x40007dd	              0x5b	                                 pop rbx	       760	listing.c	FUNCTION_11
0x40007de	              0xc3	                                     ret	       760	listing.c	FUNCTION_11
0x40007df	      0xe800000000	                          call 0x40007e4	       760	listing.c	FUNCTION_11
listing_title	WHILE,0:functions,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	104
0x4002270	            0x4155	                                push r13	      1532	listing.c	FUNCTION_28
0x4002272	            0x4154	                                push r12	      1532	listing.c	FUNCTION_28
0x4002274	          0x4189fc	                           mov r12d, edi	      1532	listing.c	FUNCTION_28
0x4002277	              0x55	                                push rbp	      1532	listing.c	FUNCTION_28
0x4002278	              0x53	                                push rbx	      1532	listing.c	FUNCTION_28
0x4002279	        0x4883ec08	                              sub rsp, 8	      1532	listing.c	FUNCTION_28
0x400227d	    0x488b3d000000	            mov rdi, qword [0x04002284] 	      1538	listing.c	FUNCTION_28	CALL_1
0x4002284	           0xfb607	                   movzx eax, byte [rdi]	      1538	listing.c	FUNCTION_28	CALL_1
0x4002287	            0x3c20	                            cmp al, 0x20	      1538	listing.c	FUNCTION_28	CALL_1
0x4002289	     0xf84e9000000	                            je 0x4002378	      1538	listing.c	FUNCTION_28	CALL_1
0x400228f	            0x3c22	                            cmp al, 0x22	      1539	listing.c	FUNCTION_28	IF_1
0x4002291	            0x7475	                            je 0x4002308	      1539	listing.c	FUNCTION_28	IF_1
0x4002293	            0x84c0	                             test al, al	      1549	listing.c	FUNCTION_28	WHILE_1
0x4002295	          0x4889fa	                            mov rdx, rdi	      1549	listing.c	FUNCTION_28	WHILE_1
0x4002298	            0x7524	                           jne 0x40022be	      1549	listing.c	FUNCTION_28	WHILE_1
0x400229a	        0x4883c408	                              add rsp, 8	      1578	listing.c	FUNCTION_28
0x400229e	              0x5b	                                 pop rbx	      1578	listing.c	FUNCTION_28
0x400229f	              0x5d	                                 pop rbp	      1578	listing.c	FUNCTION_28
0x40022a0	            0x415c	                                 pop r12	      1578	listing.c	FUNCTION_28
0x40022a2	            0x415d	                                 pop r13	      1578	listing.c	FUNCTION_28
0x40022a4	              0xc3	                                     ret	      1578	listing.c	FUNCTION_28
0x40022a5	           0xf1f00	                         nop dword [rax]	      1578	listing.c	FUNCTION_28
0x40022a8	            0x3c0a	                             cmp al, 0xa	      1567	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5
0x40022aa	            0x742c	                            je 0x40022d8	      1567	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5
0x40022ac	        0x4883c201	                              add rdx, 1	      1575	listing.c	FUNCTION_28	WHILE_1	ELSE_3
0x40022b0	    0x488915000000	            mov qword [0x040022b7], rdx 	      1575	listing.c	FUNCTION_28	WHILE_1	ELSE_3
0x40022b7	           0xfb602	                   movzx eax, byte [rdx]	      1549	listing.c	FUNCTION_28	WHILE_1
0x40022ba	            0x84c0	                             test al, al	      1549	listing.c	FUNCTION_28	WHILE_1
0x40022bc	            0x74dc	                            je 0x400229a	      1549	listing.c	FUNCTION_28	WHILE_1
0x40022be	           0xfb6c8	                           movzx ecx, al	      1553	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40022c1	    0x80b900000000	                       cmp byte [rcx], 0	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40022c8	            0x74de	                            je 0x40022a8	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40022ca	          0x4889fd	                            mov rbp, rdi	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x40022cd	          0x4531ed	                          xor r13d, r13d	      1540	listing.c	FUNCTION_28	IF_1
0x40022d0	            0xeb7a	                           jmp 0x400234c	      1540	listing.c	FUNCTION_28	IF_1
0x40022d2	    0x660f1f440000	                    nop word [rax + rax]	      1540	listing.c	FUNCTION_28	IF_1
0x40022d8	            0x31ff	                            xor edi, edi	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x40022da	      0xba05000000	                              mov edx, 5	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x40022df	      0xbe00000000	                              mov esi, 0	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x40022e4	      0xe800000000	                          call 0x40022e9	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x40022e9	          0x4889c7	                            mov rdi, rax	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x40022ec	            0x31c0	                            xor eax, eax	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x40022ee	      0xe800000000	                          call 0x40022f3	      1569	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_5
0x40022f3	        0x4883c408	                              add rsp, 8	      1578	listing.c	FUNCTION_28
0x40022f7	              0x5b	                                 pop rbx	      1578	listing.c	FUNCTION_28
0x40022f8	              0x5d	                                 pop rbp	      1578	listing.c	FUNCTION_28
0x40022f9	            0x415c	                                 pop r12	      1578	listing.c	FUNCTION_28
0x40022fb	            0x415d	                                 pop r13	      1578	listing.c	FUNCTION_28
0x40022fd	      0xe900000000	                           jmp 0x4002302	      1570	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_6
0x4002302	    0x660f1f440000	                    nop word [rax + rax]	      1570	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_6
0x4002308	        0x488d6f01	                      lea rbp, [rdi + 1]	      1544	listing.c	FUNCTION_28	ELSE_1
0x400230c	    0x48892d000000	            mov qword [0x04002313], rbp 	      1544	listing.c	FUNCTION_28	ELSE_1
0x4002313	         0xfb64701	               movzx eax, byte [rdi + 1]	      1544	listing.c	FUNCTION_28	ELSE_1
0x4002317	            0x84c0	                             test al, al	      1549	listing.c	FUNCTION_28	WHILE_1
0x4002319	     0xf847bffffff	                            je 0x400229a	      1549	listing.c	FUNCTION_28	WHILE_1
0x400231f	          0x4889ea	                            mov rdx, rbp	      1549	listing.c	FUNCTION_28	WHILE_1
0x4002322	            0xeb1e	                           jmp 0x4002342	      1549	listing.c	FUNCTION_28	WHILE_1
0x4002324	         0xf1f4000	                         nop dword [rax]	      1549	listing.c	FUNCTION_28	WHILE_1
0x4002328	            0x3c0a	                             cmp al, 0xa	      1567	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5
0x400232a	            0x74ac	                            je 0x40022d8	      1567	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5
0x400232c	        0x4883c201	                              add rdx, 1	      1575	listing.c	FUNCTION_28	WHILE_1	ELSE_3
0x4002330	    0x488915000000	            mov qword [0x04002337], rdx 	      1575	listing.c	FUNCTION_28	WHILE_1	ELSE_3
0x4002337	           0xfb602	                   movzx eax, byte [rdx]	      1549	listing.c	FUNCTION_28	WHILE_1
0x400233a	            0x84c0	                             test al, al	      1549	listing.c	FUNCTION_28	WHILE_1
0x400233c	     0xf8458ffffff	                            je 0x400229a	      1549	listing.c	FUNCTION_28	WHILE_1
0x4002342	            0x3c22	                            cmp al, 0x22	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x4002344	            0x75e2	                           jne 0x4002328	      1551	listing.c	FUNCTION_28	WHILE_1	IF_2
0x4002346	    0x41bd01000000	                             mov r13d, 1	      1543	listing.c	FUNCTION_28	ELSE_1
0x400234c	    0x8b0500000000	            mov eax, dword [0x04002352] 	      1555	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4002352	            0x85c0	                           test eax, eax	      1555	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4002354	            0x753a	                           jne 0x4002390	      1555	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4002356	          0x4585ed	                         test r13d, r13d	      1562	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_4
0x4002359	            0x7498	                            je 0x40022f3	      1562	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_4
0x400235b	    0x488305000000	               add qword [0x04002363], 1	      1563	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_4
0x4002363	        0x4883c408	                              add rsp, 8	      1578	listing.c	FUNCTION_28
0x4002367	              0x5b	                                 pop rbx	      1578	listing.c	FUNCTION_28
0x4002368	              0x5d	                                 pop rbp	      1578	listing.c	FUNCTION_28
0x4002369	            0x415c	                                 pop r12	      1578	listing.c	FUNCTION_28
0x400236b	            0x415d	                                 pop r13	      1578	listing.c	FUNCTION_28
0x400236d	      0xe900000000	                           jmp 0x4002372	      1570	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_6
0x4002372	    0x660f1f440000	                    nop word [rax + rax]	      1570	listing.c	FUNCTION_28	WHILE_1	ELSE_2	IF_5	CALL_6
0x4002378	        0x488d5701	                      lea rdx, [rdi + 1]	      1538	listing.c	FUNCTION_28	CALL_1
0x400237c	    0x488915000000	            mov qword [0x04002383], rdx 	      1538	listing.c	FUNCTION_28	CALL_1
0x4002383	         0xfb64701	               movzx eax, byte [rdi + 1]	      1538	listing.c	FUNCTION_28	CALL_1
0x4002387	          0x4889d7	                            mov rdi, rdx	      1538	listing.c	FUNCTION_28	CALL_1
0x400238a	      0xe900ffffff	                           jmp 0x400228f	      1538	listing.c	FUNCTION_28	CALL_1
0x400238f	              0x90	                                     nop	      1538	listing.c	FUNCTION_28	CALL_1
0x4002390	            0x89d3	                            mov ebx, edx	      1558	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3	CALL_2
0x4002392	            0x29eb	                            sub ebx, ebp	      1558	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3	CALL_2
0x4002394	        0x488d7b01	                      lea rdi, [rbx + 1]	       525	as.h	FUNCTION_57	CALL_1
0x4002398	      0xe800000000	                          call 0x400239d	       525	as.h	FUNCTION_57	CALL_1
0x400239d	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_58	CALL_3
0x40023a0	        0xc6041800	                 mov byte [rax + rbx], 0	       526	as.h	FUNCTION_57
0x40023a4	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_58	CALL_3
0x40023a7	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_58	CALL_3
0x40023aa	      0xe800000000	                          call 0x40023af	        53	string3.h	FUNCTION_58	CALL_3
0x40023af	        0x4183fc01	                             cmp r12d, 1	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40023b3	    0x488b0d000000	            mov rcx, qword [0x040023ba] 	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40023ba	            0x19d2	                            sbb edx, edx	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40023bc	            0xf7d2	                                 not edx	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40023be	          0x83c202	                              add edx, 2	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40023c1	        0x48894150	             mov qword [rcx + 0x50], rax	      1560	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40023c5	          0x895148	             mov dword [rcx + 0x48], edx	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x40023c8	            0xeb8c	                           jmp 0x4002356	      1559	listing.c	FUNCTION_28	WHILE_1	IF_2	IF_3
listing_file	WHILE,0:functions,0:CALL,0:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	2
0x4002130	    0x48893d000000	            mov qword [0x04002137], rdi 	      1453	listing.c	FUNCTION_23
0x4002137	              0xc3	                                     ret	      1453	listing.c	FUNCTION_23
listing_psize	WHILE,0:functions,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	26
0x40021f0	        0x4883ec08	                              sub rsp, 8	      1499	listing.c	FUNCTION_26
0x40021f4	            0x85ff	                           test edi, edi	      1500	listing.c	FUNCTION_26	IF_1
0x40021f6	            0x7529	                           jne 0x4002221	      1500	listing.c	FUNCTION_26	IF_1
0x40021f8	      0xe800000000	                          call 0x40021fd	      1502	listing.c	FUNCTION_26	IF_1	CALL_1
0x40021fd	      0x3de8030000	                          cmp eax, 0x3e8	      1504	listing.c	FUNCTION_26	IF_1	IF_2
0x4002202	            0x7734	                            ja 0x4002238	      1504	listing.c	FUNCTION_26	IF_1	IF_2
0x4002204	    0x890500000000	            mov dword [0x0400220a], eax 	      1502	listing.c	FUNCTION_26	IF_1	CALL_1
0x400220a	    0x488b05000000	            mov rax, qword [0x04002211] 	      1510	listing.c	FUNCTION_26	IF_1	IF_3
0x4002211	          0x80382c	                    cmp byte [rax], 0x2c	      1510	listing.c	FUNCTION_26	IF_1	IF_3
0x4002214	            0x7516	                           jne 0x400222c	      1510	listing.c	FUNCTION_26	IF_1	IF_3
0x4002216	        0x4883c001	                              add rax, 1	      1516	listing.c	FUNCTION_26	IF_1
0x400221a	    0x488905000000	            mov qword [0x04002221], rax 	      1516	listing.c	FUNCTION_26	IF_1
0x4002221	      0xe800000000	                          call 0x4002226	      1519	listing.c	FUNCTION_26	CALL_5
0x4002226	    0x890500000000	            mov dword [0x0400222c], eax 	      1519	listing.c	FUNCTION_26	CALL_5
0x400222c	        0x4883c408	                              add rsp, 8	      1522	listing.c	FUNCTION_26
0x4002230	      0xe900000000	                           jmp 0x4002235	      1521	listing.c	FUNCTION_26	CALL_6
0x4002235	           0xf1f00	                         nop dword [rax]	      1521	listing.c	FUNCTION_26	CALL_6
0x4002238	            0x31ff	                            xor edi, edi	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x400223a	      0xba05000000	                              mov edx, 5	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x400223f	      0xbe00000000	                              mov esi, 0	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002244	    0xc70500000000	               mov dword [0x0400224e], 0	      1506	listing.c	FUNCTION_26	IF_1	IF_2
0x400224e	      0xe800000000	                          call 0x4002253	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002253	          0x4889c7	                            mov rdi, rax	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002256	            0x31c0	                            xor eax, eax	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002258	      0xe800000000	                          call 0x400225d	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x400225d	            0xebab	                           jmp 0x400220a	      1507	listing.c	FUNCTION_26	IF_1	IF_2	CALL_3
listing_list	WHILE,0:functions,0:CALL,1:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	38
0x4002160	    0x8b0500000000	            mov eax, dword [0x04002166] 	      1471	listing.c	FUNCTION_25	IF_1
0x4002166	            0x85c0	                           test eax, eax	      1471	listing.c	FUNCTION_25	IF_1
0x4002168	            0x7426	                            je 0x4002190	      1471	listing.c	FUNCTION_25	IF_1
0x400216a	          0x83ff01	                              cmp edi, 1	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x400216d	            0x7429	                            je 0x4002198	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x400216f	          0x83ff02	                              cmp edi, 2	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002172	            0x746c	                            je 0x40021e0	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002174	            0x85ff	                           test edi, edi	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002176	            0x7448	                            je 0x40021c0	      1473	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002178	        0x4883ec08	                              sub rsp, 8	      1470	listing.c	FUNCTION_25
0x400217c	      0xba00000000	                              mov edx, 0	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002181	      0xbed4050000	                          mov esi, 0x5d4	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002186	      0xbf00000000	                              mov edi, 0	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x400218b	      0xe800000000	                          call 0x4002190	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002190	            0xf3c3	                                     ret	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002192	    0x660f1f440000	                    nop word [rax + rax]	      1492	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x4002198	    0x488b15000000	            mov rdx, qword [0x0400219f] 	      1482	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x400219f	          0x8b4248	            mov eax, dword [rdx + 0x48] 	      1482	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021a2	          0x83e803	                              sub eax, 3	      1482	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021a5	          0x83e0fd	                     and eax, 0xfffffffd	      1482	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021a8	          0x83f801	                              cmp eax, 1	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021ab	            0x19c0	                            sbb eax, eax	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021ad	            0xf7d0	                                 not eax	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021af	          0x83e004	                              and eax, 4	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021b2	          0x894248	             mov dword [rdx + 0x48], eax	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021b5	              0xc3	                                     ret	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1484	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x40021c0	    0x488b15000000	            mov rdx, qword [0x040021c7] 	      1476	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40021c7	            0x31c0	                            xor eax, eax	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40021c9	        0x837a4804	               cmp dword [rdx + 0x48], 4	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40021cd	           0xf95c0	                                setne al	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40021d0	          0x8d0440	                  lea eax, [rax + rax*2]	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40021d3	          0x894248	             mov dword [rdx + 0x48], eax	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40021d6	              0xc3	                                     ret	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40021d7	    0x660f1f840000	                    nop word [rax + rax]	      1477	listing.c	FUNCTION_25	IF_1	SWITCH_1	IF_2
0x40021e0	    0x488b05000000	            mov rax, qword [0x040021e7] 	      1489	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40021e7	    0xc74048050000	               mov dword [rax + 0x48], 5	      1489	listing.c	FUNCTION_25	IF_1	SWITCH_1
0x40021ee	              0xc3	                                     ret	      1490	listing.c	FUNCTION_25	IF_1	SWITCH_1
listing_print	WHILE,0:functions,0:CALL,12:DO,0:FOR,0:SWITCH,0:IF,9:ELSE,2	986
0x4001090	            0x4157	                                push r15	      1404	listing.c	FUNCTION_22
0x4001092	            0x4156	                                push r14	      1404	listing.c	FUNCTION_22
0x4001094	            0x4155	                                push r13	      1404	listing.c	FUNCTION_22
0x4001096	            0x4154	                                push r12	      1404	listing.c	FUNCTION_22
0x4001098	              0x55	                                push rbp	      1404	listing.c	FUNCTION_22
0x4001099	              0x53	                                push rbx	      1404	listing.c	FUNCTION_22
0x400109a	          0x4889f3	                            mov rbx, rsi	      1404	listing.c	FUNCTION_22
0x400109d	    0x4881ecb80000	                           sub rsp, 0xb8	      1404	listing.c	FUNCTION_22
0x40010a4	    0x48c705000000	               mov qword [0x040010af], 0	      1407	listing.c	FUNCTION_22
0x40010af	    0x48c705000000	               mov qword [0x040010ba], 0	      1408	listing.c	FUNCTION_22
0x40010ba	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1404	listing.c	FUNCTION_22
0x40010c3	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	      1404	listing.c	FUNCTION_22
0x40010cb	            0x31c9	                            xor ecx, ecx	      1404	listing.c	FUNCTION_22
0x40010cd	          0x4885ff	                           test rdi, rdi	      1410	listing.c	FUNCTION_22	IF_1
0x40010d0	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1404	listing.c	FUNCTION_22
0x40010d5	     0xf84cd000000	                            je 0x40011a8	      1410	listing.c	FUNCTION_22	IF_1
0x40010db	      0xbe00000000	                              mov esi, 0	      1417	listing.c	FUNCTION_22	ELSE_1	CALL_1
0x40010e0	      0xe800000000	                          call 0x40010e5	      1417	listing.c	FUNCTION_22	ELSE_1	CALL_1
0x40010e5	          0x4885c0	                           test rax, rax	      1418	listing.c	FUNCTION_22	ELSE_1	IF_2
0x40010e8	    0x488905000000	            mov qword [0x040010ef], rax 	      1417	listing.c	FUNCTION_22	ELSE_1	CALL_1
0x40010ef	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1419	listing.c	FUNCTION_22	ELSE_1	IF_2
0x40010f7	            0x7477	                            je 0x4001170	      1418	listing.c	FUNCTION_22	ELSE_1	IF_2
0x40010f9	    0x8b0500000000	            mov eax, dword [0x040010ff] 	      1428	listing.c	FUNCTION_22	IF_3
0x40010ff	            0xa804	                              test al, 4	      1428	listing.c	FUNCTION_22	IF_3
0x4001101	            0x740a	                            je 0x400110d	      1428	listing.c	FUNCTION_22	IF_3
0x4001103	    0xc70500000000	               mov dword [0x0400110d], 0	      1429	listing.c	FUNCTION_22	IF_3
0x400110d	            0xa880	                           test al, 0x80	      1431	listing.c	FUNCTION_22	IF_4
0x400110f	     0xf85db030000	                           jne 0x40014f0	      1431	listing.c	FUNCTION_22	IF_4
0x4001115	            0xa801	                              test al, 1	      1434	listing.c	FUNCTION_22	IF_5
0x4001117	     0xf85ab000000	                           jne 0x40011c8	      1434	listing.c	FUNCTION_22	IF_5
0x400111d	            0xa802	                              test al, 2	      1437	listing.c	FUNCTION_22	IF_6
0x400111f	     0xf8523060000	                           jne 0x4001748	      1437	listing.c	FUNCTION_22	IF_6
0x4001125	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1440	listing.c	FUNCTION_22	IF_7
0x4001129	            0x85c9	                           test ecx, ecx	      1440	listing.c	FUNCTION_22	IF_7
0x400112b	     0xf849f080000	                            je 0x40019d0	      1440	listing.c	FUNCTION_22	IF_7
0x4001131	    0x488b3d000000	            mov rdi, qword [0x04001138] 	      1446	listing.c	FUNCTION_22	IF_9
0x4001138	          0x4885ff	                           test rdi, rdi	      1446	listing.c	FUNCTION_22	IF_9
0x400113b	            0x7405	                            je 0x4001142	      1446	listing.c	FUNCTION_22	IF_9
0x400113d	      0xe800000000	                          call 0x4001142	      1447	listing.c	FUNCTION_22	CALL_12
0x4001142	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      1448	listing.c	FUNCTION_22
0x400114a	    0x644833042528	                xor rax, qword fs:[0x28]	      1448	listing.c	FUNCTION_22
0x4001153	     0xf853a0f0000	                           jne 0x4002093	      1448	listing.c	FUNCTION_22
0x4001159	    0x4881c4b80000	                           add rsp, 0xb8	      1448	listing.c	FUNCTION_22
0x4001160	              0x5b	                                 pop rbx	      1448	listing.c	FUNCTION_22
0x4001161	              0x5d	                                 pop rbp	      1448	listing.c	FUNCTION_22
0x4001162	            0x415c	                                 pop r12	      1448	listing.c	FUNCTION_22
0x4001164	            0x415d	                                 pop r13	      1448	listing.c	FUNCTION_22
0x4001166	            0x415e	                                 pop r14	      1448	listing.c	FUNCTION_22
0x4001168	            0x415f	                                 pop r15	      1448	listing.c	FUNCTION_22
0x400116a	              0xc3	                                     ret	      1448	listing.c	FUNCTION_22
0x400116b	       0xf1f440000	                   nop dword [rax + rax]	      1448	listing.c	FUNCTION_22
0x4001170	      0xe800000000	                          call 0x4001175	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001175	            0x8b38	                    mov edi, dword [rax]	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001177	      0xe800000000	                          call 0x400117c	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x400117c	      0xba05000000	                              mov edx, 5	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001181	      0xbe00000000	                              mov esi, 0	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001186	            0x31ff	                            xor edi, edi	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001188	          0x4889c5	                            mov rbp, rax	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x400118b	      0xe800000000	                          call 0x4001190	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001190	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001195	          0x4889c7	                            mov rdi, rax	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x4001198	          0x4889ea	                            mov rdx, rbp	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x400119b	            0x31c0	                            xor eax, eax	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x400119d	      0xe800000000	                          call 0x40011a2	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x40011a2	    0x660f1f440000	                    nop word [rax + rax]	      1422	listing.c	FUNCTION_22	ELSE_1	ELSE_2	CALL_4
0x40011a8	    0x488b05000000	            mov rax, qword [0x040011af] 	      1423	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x40011af	    0xc74424140100	               mov dword [rsp + 0x14], 1	      1424	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x40011b7	    0x488905000000	            mov qword [0x040011be], rax 	      1423	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x40011be	      0xe936ffffff	                           jmp 0x40010f9	      1423	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x40011c3	       0xf1f440000	                   nop dword [rax + rax]	      1423	listing.c	FUNCTION_22	ELSE_1	ELSE_2
0x40011c8	    0x48633d000000	         movsxd rdi, dword [0x040011cf] 	      1206	listing.c	FUNCTION_17	CALL_1
0x40011cf	      0xe800000000	                          call 0x40011d4	      1206	listing.c	FUNCTION_17	CALL_1
0x40011d4	      0x4889442408	                mov qword [rsp + 8], rax	      1206	listing.c	FUNCTION_17	CALL_1
0x40011d9	    0x8b0500000000	            mov eax, dword [0x040011df] 	      1207	listing.c	FUNCTION_17	CALL_2
0x40011df	    0x8b1500000000	            mov edx, dword [0x040011e5] 	      1207	listing.c	FUNCTION_17	CALL_2
0x40011e5	          0x8d04c0	                  lea eax, [rax + rax*8]	      1207	listing.c	FUNCTION_17	CALL_2
0x40011e8	     0xfaf05000000	            imul eax, dword [0x040011ef]	      1207	listing.c	FUNCTION_17	CALL_2
0x40011ef	          0x8d14d2	                  lea edx, [rdx + rdx*8]	      1207	listing.c	FUNCTION_17	CALL_2
0x40011f2	        0x8d7c1014	            lea edi, [rax + rdx + 0x14] 	      1207	listing.c	FUNCTION_17	CALL_2
0x40011f6	          0x4863ff	                         movsxd rdi, edi	      1207	listing.c	FUNCTION_17	CALL_2
0x40011f9	      0xe800000000	                          call 0x40011fe	      1207	listing.c	FUNCTION_17	CALL_2
0x40011fe	    0x488b15000000	            mov rdx, qword [0x04001205] 	      1209	listing.c	FUNCTION_17
0x4001205	    0x488905000000	            mov qword [0x0400120c], rax 	      1207	listing.c	FUNCTION_17	CALL_2
0x400120c	    0xc70500000000	               mov dword [0x04001216], 1	      1208	listing.c	FUNCTION_17
0x4001216	        0x488b5a20	            mov rbx, qword [rdx + 0x20] 	      1209	listing.c	FUNCTION_17
0x400121a	          0x4885db	                           test rbx, rbx	      1211	listing.c	FUNCTION_17	WHILE_1
0x400121d	     0xf84d70c0000	                            je 0x4001efa	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001223	          0x4531f6	                          xor r14d, r14d	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001226	    0x41bf01000000	                             mov r15d, 1	      1211	listing.c	FUNCTION_17	WHILE_1
0x400122c	         0xf1f4000	                         nop dword [rax]	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001230	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001233	    0x8b2d00000000	            mov ebp, dword [0x04001239] 	      1215	listing.c	FUNCTION_17	WHILE_1
0x4001239	    0x392d00000000	            cmp dword [0x0400123f], ebp 	      1215	listing.c	FUNCTION_17	WHILE_1
0x400123f	        0x448b6308	               mov r12d, dword [rbx + 8]	      1218	listing.c	FUNCTION_17	WHILE_1
0x4001243	     0xf4e2d000000	          cmovle ebp, dword [0x0400124a]	      1215	listing.c	FUNCTION_17	WHILE_1
0x400124a	          0x83f806	                              cmp eax, 6	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400124d	     0xf87cd070000	                            ja 0x4001a20	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001253	            0x89c2	                            mov edx, eax	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001255	    0xff24d5000000	                       jmp qword [rdx*8]	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400125c	         0xf1f4000	                         nop dword [rax]	      1219	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001260	        0x4183ec01	                             sub r12d, 1	      1223	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001264	          0x4585ff	                         test r15d, r15d	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x4001267	     0xf8eeb070000	                           jle 0x4001a58	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x400126d	        0x4183c401	                             add r12d, 1	      1257	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001271	        0x4183c701	                             add r15d, 1	      1258	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001275	          0x4585ff	                         test r15d, r15d	      1261	listing.c	FUNCTION_17	WHILE_1	IF_4
0x4001278	     0xf8e9f000000	                           jle 0x400131d	      1261	listing.c	FUNCTION_17	WHILE_1	IF_4
0x400127e	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x4001282	          0x4d85ed	                           test r13, r13	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x4001285	            0x7527	                           jne 0x40012ae	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x4001287	          0x4d85f6	                           test r14, r14	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x400128a	            0x7438	                            je 0x40012c4	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x400128c	          0x4d89f5	                            mov r13, r14	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x400128f	            0xeb1d	                           jmp 0x40012ae	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x4001291	     0xf1f80000000	                         nop dword [rax]	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x4001298	        0x4183ef01	                             sub r15d, 1	      1226	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400129c	          0x4585ff	                         test r15d, r15d	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x400129f	     0xf8ea8010000	                           jle 0x400144d	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x40012a5	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x40012a9	          0x4d85ed	                           test r13, r13	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x40012ac	            0x74d9	                            je 0x4001287	      1265	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x40012ae	        0x448b4330	            mov r8d, dword [rbx + 0x30] 	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x40012b2	          0x4585c0	                           test r8d, r8d	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x40012b5	            0x740d	                            je 0x40012c4	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x40012b7	    0xf60500000000	               test byte [0x040012be], 8	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x40012be	     0xf854c080000	                           jne 0x4001b10	      1268	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_6
0x40012c4	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1271	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7
0x40012c8	          0x4885ff	                           test rdi, rdi	      1271	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7
0x40012cb	     0xf84b9000000	                            je 0x400138a	      1271	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7
0x40012d1	    0xf60500000000	           test byte [0x040012d8], 0x10 	      1273	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40012d8	     0xf84d2010000	                            je 0x40014b0	      1273	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40012de	          0x8b6b58	            mov ebp, dword [rbx + 0x58] 	      1130	listing.c	FUNCTION_16	IF_1
0x40012e1	            0x85ed	                           test ebp, ebp	      1130	listing.c	FUNCTION_16	IF_1
0x40012e3	     0xf84b7010000	                            je 0x40014a0	      1130	listing.c	FUNCTION_16	IF_1
0x40012e9	    0xc70500000000	               mov dword [0x040012f3], 1	      1133	listing.c	FUNCTION_16	IF_1
0x40012f3	      0xe800000000	                          call 0x40012f8	      1279	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	CALL_8
0x40012f8	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1280	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7
0x4001300	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1302	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x4001303	          0x83f806	                              cmp eax, 6	      1302	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x4001306	     0xf8424040000	                            je 0x4001730	      1302	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x400130c	        0x4183ff01	                             cmp r15d, 1	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x4001310	          0x4d89ee	                            mov r14, r13	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x4001313	            0x7508	                           jne 0x400131d	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x4001315	          0x83f805	                              cmp eax, 5	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x4001318	            0x7503	                           jne 0x400131d	      1306	listing.c	FUNCTION_17	WHILE_1	IF_12
0x400131a	          0x4531ff	                          xor r15d, r15d	      1307	listing.c	FUNCTION_17	WHILE_1	IF_12
0x400131d	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1309	listing.c	FUNCTION_17	WHILE_1
0x4001321	          0x4885db	                           test rbx, rbx	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001324	     0xf8506ffffff	                           jne 0x4001230	      1211	listing.c	FUNCTION_17	WHILE_1
0x400132a	    0x488b1d000000	            mov rbx, qword [0x04001331] 	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001331	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1312	listing.c	FUNCTION_17	CALL_13
0x4001336	      0xe800000000	                          call 0x400133b	      1312	listing.c	FUNCTION_17	CALL_13
0x400133b	          0x4889df	                            mov rdi, rbx	      1313	listing.c	FUNCTION_17	CALL_14
0x400133e	      0xe800000000	                          call 0x4001343	      1313	listing.c	FUNCTION_17	CALL_14
0x4001343	    0x48c705000000	               mov qword [0x0400134e], 0	      1314	listing.c	FUNCTION_17
0x400134e	    0x8b0500000000	            mov eax, dword [0x04001354] 	      1314	listing.c	FUNCTION_17
0x4001354	      0xe9c4fdffff	                           jmp 0x400111d	      1314	listing.c	FUNCTION_17
0x4001359	     0xf1f80000000	                         nop dword [rax]	      1314	listing.c	FUNCTION_17
0x4001360	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1314	listing.c	FUNCTION_17
0x4001364	          0x4c89f6	                            mov rsi, r14	      1314	listing.c	FUNCTION_17
0x4001367	        0x894c2420	             mov dword [rsp + 0x20], ecx	      1314	listing.c	FUNCTION_17
0x400136b	      0xe860f0ffff	 call sym.debugging_pseudo.isra.1.part.2	      1314	listing.c	FUNCTION_17
0x4001370	            0x85c0	                           test eax, eax	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x4001372	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x4001376	            0x7512	                           jne 0x400138a	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x4001378	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x400137c	          0x4c89f2	                            mov rdx, r14	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x400137f	          0x4889df	                            mov rdi, rbx	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x4001382	          0x8b7018	            mov esi, dword [rax + 0x18] 	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x4001385	      0xe866f4ffff	                    call sym.print_lines	      1298	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_12
0x400138a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x400138e	        0x44396718	           cmp dword [rdi + 0x18], r12d 	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x4001392	     0xf8368ffffff	                           jae 0x4001300	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x4001398	        0x448b571c	           mov r10d, dword [rdi + 0x1c] 	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x400139c	          0x4585d2	                         test r10d, r10d	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x400139f	     0xf855bffffff	                           jne 0x4001300	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013a5	      0x488b742408	                mov rsi, qword [rsp + 8]	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013aa	            0x89ea	                            mov edx, ebp	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013ac	      0xe88ff1ffff	             call sym.buffer_line.part.4	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013b1	          0x4989c6	                            mov r14, rax	      1285	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013b4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1291	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_9
0x40013b8	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1292	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_9
0x40013bd	        0x44396018	           cmp dword [rax + 0x18], r12d 	      1291	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_9
0x40013c1	     0xf8319010000	                           jae 0x40014e0	      1291	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_9
0x40013c7	    0xf60500000000	           test byte [0x040013ce], 0x10 	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x40013ce	            0x74a8	                            je 0x4001378	      1296	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	IF_10
0x40013d0	        0x448b5b58	           mov r11d, dword [rbx + 0x58] 	      1130	listing.c	FUNCTION_16	IF_1
0x40013d4	          0x4585db	                         test r11d, r11d	      1130	listing.c	FUNCTION_16	IF_1
0x40013d7	            0x7487	                            je 0x4001360	      1130	listing.c	FUNCTION_16	IF_1
0x40013d9	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013dd	    0xc70500000000	               mov dword [0x040013e7], 1	      1133	listing.c	FUNCTION_16	IF_1
0x40013e7	        0x44396718	           cmp dword [rdi + 0x18], r12d 	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013eb	            0x72ab	                            jb 0x4001398	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013ed	      0xe90effffff	                           jmp 0x4001300	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013f2	    0x660f1f440000	                    nop word [rax + rax]	      1284	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3
0x40013f8	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      1237	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40013fc	    0x488915000000	            mov qword [0x04001403], rdx 	      1237	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001403	      0xe994feffff	                           jmp 0x400129c	      1237	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001408	     0xf1f84000000	                   nop dword [rax + rax]	      1237	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001410	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      1240	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001414	    0x488915000000	            mov qword [0x0400141b], rdx 	      1240	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400141b	      0xe97cfeffff	                           jmp 0x400129c	      1240	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001420	          0x4585ff	                         test r15d, r15d	      1229	listing.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001423	     0xf8573feffff	                           jne 0x400129c	      1229	listing.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001429	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400142d	        0x4183ec01	                             sub r12d, 1	      1230	listing.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001431	        0x443b6718	           cmp r12d, dword [rdi + 0x18] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001435	     0xf8632feffff	                           jbe 0x400126d	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400143b	          0x8b571c	            mov edx, dword [rdi + 0x1c] 	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400143e	            0x85d2	                           test edx, edx	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001440	            0x741c	                            je 0x400145e	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001442	            0xeb43	                           jmp 0x4001487	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001444	         0xf1f4000	                         nop dword [rax]	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001448	          0x4585ff	                         test r15d, r15d	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x400144b	            0x7f31	                            jg 0x400147e	      1246	listing.c	FUNCTION_17	WHILE_1	IF_2
0x400144d	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001451	        0x443b6718	           cmp r12d, dword [rdi + 0x18] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001455	            0x7627	                           jbe 0x400147e	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001457	          0x8b571c	            mov edx, dword [rdi + 0x1c] 	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400145a	            0x85d2	                           test edx, edx	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400145c	            0x7520	                           jne 0x400147e	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400145e	      0x488b742408	                mov rsi, qword [rsp + 8]	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001463	            0x89ea	                            mov edx, ebp	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001465	      0xe8d6f0ffff	             call sym.buffer_line.part.4	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400146a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400146e	        0x44396718	           cmp dword [rdi + 0x18], r12d 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001472	            0x7307	                           jae 0x400147b	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001474	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001477	            0x85c0	                           test eax, eax	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001479	            0x74e3	                            je 0x400145e	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400147b	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1249	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x400147e	          0x83f804	                              cmp eax, 4	      1253	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001481	     0xf84e6fdffff	                            je 0x400126d	      1253	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001487	          0x83f805	                              cmp eax, 5	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x400148a	     0xf85e5fdffff	                           jne 0x4001275	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001490	          0x4585ff	                         test r15d, r15d	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001493	     0xf84d4fdffff	                            je 0x400126d	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x4001499	      0xe9d7fdffff	                           jmp 0x4001275	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x400149e	            0x6690	                                     nop	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x40014a0	          0x4889fe	                            mov rsi, rdi	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x40014a3	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x40014a7	      0xe824efffff	 call sym.debugging_pseudo.isra.1.part.2	      1254	listing.c	FUNCTION_17	WHILE_1	IF_3
0x40014ac	            0x85c0	                           test eax, eax	      1273	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40014ae	            0x7524	                           jne 0x40014d4	      1273	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40014b0	          0x4889df	                            mov rdi, rbx	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014b3	      0xe888ebffff	                       call sym.calc_hex	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014b8	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1276	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40014bc	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1277	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	CALL_7
0x40014c0	          0x8b7118	            mov esi, dword [rcx + 0x18] 	      1276	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8
0x40014c3	            0x85f6	                           test esi, esi	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014c5	            0x7503	                           jne 0x40014ca	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014c7	          0x8b7308	                mov esi, dword [rbx + 8]	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014ca	            0x89c1	                            mov ecx, eax	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014cc	          0x4889df	                            mov rdi, rbx	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014cf	      0xe81cf3ffff	                    call sym.print_lines	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014d4	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014d8	      0xe916feffff	                           jmp 0x40012f3	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014dd	           0xf1f00	                         nop dword [rax]	      1275	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_7	IF_8	CALL_6
0x40014e0	          0x4889df	                            mov rdi, rbx	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014e3	      0xe858ebffff	                       call sym.calc_hex	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014e8	            0x89c1	                            mov ecx, eax	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014ea	      0xe9d8feffff	                           jmp 0x40013c7	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014ef	              0x90	                                     nop	      1294	listing.c	FUNCTION_17	WHILE_1	IF_4	ELSE_1	WHILE_3	CALL_10
0x40014f0	    0x8b0d00000000	            mov ecx, dword [0x040014f6] 	       708	listing.c	FUNCTION_10	IF_1
0x40014f6	    0xc70500000000	               mov dword [0x04001500], 1	      1389	listing.c	FUNCTION_21
0x4001500	            0x85c9	                           test ecx, ecx	       708	listing.c	FUNCTION_10	IF_1
0x4001502	            0x7407	                            je 0x400150b	       708	listing.c	FUNCTION_10	IF_1
0x4001504	            0x31ff	                            xor edi, edi	       708	listing.c	FUNCTION_10	IF_1
0x4001506	      0xe845edffff	            call sym.listing_page.part.0	       708	listing.c	FUNCTION_10	IF_1
0x400150b	            0x31ff	                            xor edi, edi	      1393	listing.c	FUNCTION_21	CALL_2
0x400150d	      0xba05000000	                              mov edx, 5	      1393	listing.c	FUNCTION_21	CALL_2
0x4001512	      0xbe00000000	                              mov esi, 0	      1393	listing.c	FUNCTION_21	CALL_2
0x4001517	      0xe800000000	                          call 0x400151c	      1393	listing.c	FUNCTION_21	CALL_2
0x400151c	    0x488b3d000000	            mov rdi, qword [0x04001523] 	        97	stdio2.h	CALL_18
0x4001523	    0x41b900000000	                              mov r9d, 0	        97	stdio2.h	CALL_18
0x4001529	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_18
0x400152f	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_18
0x4001534	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x4001537	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x400153c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x400153e	      0xe800000000	                          call 0x4001543	        97	stdio2.h	CALL_18
0x4001543	      0xba05000000	                              mov edx, 5	      1354	listing.c	FUNCTION_20	CALL_1
0x4001548	      0xbe00000000	                              mov esi, 0	      1354	listing.c	FUNCTION_20	CALL_1
0x400154d	            0x31ff	                            xor edi, edi	      1354	listing.c	FUNCTION_20	CALL_1
0x400154f	      0xe800000000	                          call 0x4001554	      1354	listing.c	FUNCTION_20	CALL_1
0x4001554	          0x4889c7	                            mov rdi, rax	      1355	listing.c	FUNCTION_20	CALL_2
0x4001557	          0x4889c5	                            mov rbp, rax	      1354	listing.c	FUNCTION_20	CALL_1
0x400155a	      0xe800000000	                          call 0x400155f	      1355	listing.c	FUNCTION_20	CALL_2
0x400155f	    0x488b35000000	            mov rsi, qword [0x04001566] 	      1358	listing.c	FUNCTION_20	CALL_3
0x4001566	          0x4889ef	                            mov rdi, rbp	      1358	listing.c	FUNCTION_20	CALL_3
0x4001569	          0x4189c4	                           mov r12d, eax	      1355	listing.c	FUNCTION_20	CALL_2
0x400156c	        0x488d6b08	                      lea rbp, [rbx + 8]	      1359	listing.c	FUNCTION_20	FOR_1
0x4001570	      0xe800000000	                          call 0x4001575	      1358	listing.c	FUNCTION_20	CALL_3
0x4001575	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1359	listing.c	FUNCTION_20	FOR_1
0x4001579	          0x4885db	                           test rbx, rbx	      1359	listing.c	FUNCTION_20	FOR_1
0x400157c	            0x751b	                           jne 0x4001599	      1359	listing.c	FUNCTION_20	FOR_1
0x400157e	      0xe9b5000000	                           jmp 0x4001638	      1359	listing.c	FUNCTION_20	FOR_1
0x4001583	       0xf1f440000	                   nop dword [rax + rax]	      1359	listing.c	FUNCTION_20	FOR_1
0x4001588	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1359	listing.c	FUNCTION_20	FOR_1
0x400158c	        0x4883c508	                              add rbp, 8	      1359	listing.c	FUNCTION_20	FOR_1
0x4001590	          0x4885db	                           test rbx, rbx	      1359	listing.c	FUNCTION_20	FOR_1
0x4001593	     0xf849f000000	                            je 0x4001638	      1359	listing.c	FUNCTION_20	FOR_1
0x4001599	          0x803b2d	                    cmp byte [rbx], 0x2d	      1360	listing.c	FUNCTION_20	FOR_1	IF_1
0x400159c	            0x75ea	                           jne 0x4001588	      1360	listing.c	FUNCTION_20	FOR_1	IF_1
0x400159e	         0xfb64301	               movzx eax, byte [rbx + 1]	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x40015a2	          0x83f86f	                           cmp eax, 0x6f	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x40015a5	            0x7469	                            je 0x4001610	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x40015a7	          0x83f876	                           cmp eax, 0x76	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x40015aa	            0x7454	                            je 0x4001600	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x40015ac	          0x4889df	                            mov rdi, rbx	      1335	listing.c	FUNCTION_19	CALL_1
0x40015af	      0xe800000000	                          call 0x40015b4	      1335	listing.c	FUNCTION_19	CALL_1
0x40015b4	          0x4101c4	                           add r12d, eax	      1337	listing.c	FUNCTION_19	IF_1
0x40015b7	    0x443b25000000	           cmp r12d, dword [0x040015be] 	      1337	listing.c	FUNCTION_19	IF_1
0x40015be	          0x4989c5	                            mov r13, rax	      1335	listing.c	FUNCTION_19	CALL_1
0x40015c1	      0xba05000000	                              mov edx, 5	      1339	listing.c	FUNCTION_19	IF_1	CALL_2
0x40015c6	     0xf8c04090000	                            jl 0x4001ed0	      1337	listing.c	FUNCTION_19	IF_1
0x40015cc	      0xbe00000000	                              mov esi, 0	      1344	listing.c	FUNCTION_19	ELSE_1	CALL_3
0x40015d1	            0x31ff	                            xor edi, edi	      1344	listing.c	FUNCTION_19	ELSE_1	CALL_3
0x40015d3	          0x4589ec	                          mov r12d, r13d	      1345	listing.c	FUNCTION_19	ELSE_1
0x40015d6	      0xe800000000	                          call 0x40015db	      1344	listing.c	FUNCTION_19	ELSE_1	CALL_3
0x40015db	    0x488b3d000000	            mov rdi, qword [0x040015e2] 	        97	stdio2.h	CALL_18
0x40015e2	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_18
0x40015e5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x40015e8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40015ed	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40015ef	      0xe800000000	                          call 0x40015f4	        97	stdio2.h	CALL_18
0x40015f4	        0x488b5d08	                mov rbx, qword [rbp + 8]	        97	stdio2.h	CALL_18
0x40015f8	            0xeb92	                           jmp 0x400158c	        97	stdio2.h	CALL_18
0x40015fa	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_18
0x4001600	        0x807b0200	                   cmp byte [rbx + 2], 0	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x4001604	            0x7482	                            je 0x4001588	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x4001606	            0xeba4	                           jmp 0x40015ac	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x4001608	     0xf1f84000000	                   nop dword [rax + rax]	      1369	listing.c	FUNCTION_20	FOR_1	IF_1	IF_4	CALL_5
0x4001610	        0x807b0200	                   cmp byte [rbx + 2], 0	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x4001614	            0x7596	                           jne 0x40015ac	      1363	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x4001616	      0x48837d0800	                  cmp qword [rbp + 8], 0	      1365	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	IF_3
0x400161b	            0x741b	                            je 0x4001638	      1365	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	IF_3
0x400161d	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      1365	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	IF_3
0x4001621	        0x4883c508	                              add rbp, 8	      1366	listing.c	FUNCTION_20	FOR_1	IF_1	IF_2	IF_3
0x4001625	        0x4883c508	                              add rbp, 8	      1359	listing.c	FUNCTION_20	FOR_1
0x4001629	          0x4885db	                           test rbx, rbx	      1359	listing.c	FUNCTION_20	FOR_1
0x400162c	     0xf8567ffffff	                           jne 0x4001599	      1359	listing.c	FUNCTION_20	FOR_1
0x4001632	    0x660f1f440000	                    nop word [rax + rax]	      1359	listing.c	FUNCTION_20	FOR_1
0x4001638	    0x488b1d000000	            mov rbx, qword [0x0400163f] 	      1396	listing.c	FUNCTION_21	CALL_4
0x400163f	      0xba05000000	                              mov edx, 5	      1396	listing.c	FUNCTION_21	CALL_4
0x4001644	      0xbe00000000	                              mov esi, 0	      1396	listing.c	FUNCTION_21	CALL_4
0x4001649	            0x31ff	                            xor edi, edi	      1396	listing.c	FUNCTION_21	CALL_4
0x400164b	      0xe800000000	                          call 0x4001650	      1396	listing.c	FUNCTION_21	CALL_4
0x4001650	    0x488b3d000000	            mov rdi, qword [0x04001657] 	        97	stdio2.h	CALL_18
0x4001657	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_18
0x400165a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x400165d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001662	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001664	      0xe800000000	                          call 0x4001669	        97	stdio2.h	CALL_18
0x4001669	    0x488b1d000000	            mov rbx, qword [0x04001670] 	      1397	listing.c	FUNCTION_21	CALL_5
0x4001670	      0xba05000000	                              mov edx, 5	      1397	listing.c	FUNCTION_21	CALL_5
0x4001675	      0xbe00000000	                              mov esi, 0	      1397	listing.c	FUNCTION_21	CALL_5
0x400167a	            0x31ff	                            xor edi, edi	      1397	listing.c	FUNCTION_21	CALL_5
0x400167c	      0xe800000000	                          call 0x4001681	      1397	listing.c	FUNCTION_21	CALL_5
0x4001681	    0x488b3d000000	            mov rdi, qword [0x04001688] 	        97	stdio2.h	CALL_18
0x4001688	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_18
0x400168b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x400168e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001693	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001695	      0xe800000000	                          call 0x400169a	        97	stdio2.h	CALL_18
0x400169a	      0xba05000000	                              mov edx, 5	      1398	listing.c	FUNCTION_21	CALL_6
0x400169f	      0xbe00000000	                              mov esi, 0	      1398	listing.c	FUNCTION_21	CALL_6
0x40016a4	            0x31ff	                            xor edi, edi	      1398	listing.c	FUNCTION_21	CALL_6
0x40016a6	      0xe800000000	                          call 0x40016ab	      1398	listing.c	FUNCTION_21	CALL_6
0x40016ab	    0x488b3d000000	            mov rdi, qword [0x040016b2] 	        97	stdio2.h	CALL_18
0x40016b2	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x40016b5	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_18
0x40016ba	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x40016bf	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x40016c1	      0xe800000000	                          call 0x40016c6	        97	stdio2.h	CALL_18
0x40016c6	            0x31ff	                            xor edi, edi	      1322	listing.c	FUNCTION_18	CALL_1
0x40016c8	      0xe800000000	                          call 0x40016cd	      1322	listing.c	FUNCTION_18	CALL_1
0x40016cd	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1327	listing.c	FUNCTION_18	CALL_2
0x40016d2	      0x4889442468	             mov qword [rsp + 0x68], rax	      1322	listing.c	FUNCTION_18	CALL_1
0x40016d7	      0xe800000000	                          call 0x40016dc	      1327	listing.c	FUNCTION_18	CALL_2
0x40016dc	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1328	listing.c	FUNCTION_18	CALL_3
0x40016e4	          0x4889c1	                            mov rcx, rax	      1328	listing.c	FUNCTION_18	CALL_3
0x40016e7	      0xba00000000	                              mov edx, 0	      1328	listing.c	FUNCTION_18	CALL_3
0x40016ec	      0xbe1e000000	                           mov esi, 0x1e	      1328	listing.c	FUNCTION_18	CALL_3
0x40016f1	      0xe800000000	                          call 0x40016f6	      1328	listing.c	FUNCTION_18	CALL_3
0x40016f6	      0xba05000000	                              mov edx, 5	      1329	listing.c	FUNCTION_18	CALL_4
0x40016fb	      0xbe00000000	                              mov esi, 0	      1329	listing.c	FUNCTION_18	CALL_4
0x4001700	            0x31ff	                            xor edi, edi	      1329	listing.c	FUNCTION_18	CALL_4
0x4001702	      0xe800000000	                          call 0x4001707	      1329	listing.c	FUNCTION_18	CALL_4
0x4001707	    0x488b3d000000	            mov rdi, qword [0x0400170e] 	        97	stdio2.h	CALL_18
0x400170e	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	        97	stdio2.h	CALL_18
0x4001716	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x4001719	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x400171e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001720	      0xe800000000	                          call 0x4001725	        97	stdio2.h	CALL_18
0x4001725	    0x8b0500000000	            mov eax, dword [0x0400172b] 	        97	stdio2.h	CALL_18
0x400172b	      0xe9e5f9ffff	                           jmp 0x4001115	        97	stdio2.h	CALL_18
0x4001730	    0xc70500000000	               mov dword [0x0400173a], 1	      1303	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x400173a	          0x4d89ee	                            mov r14, r13	      1303	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x400173d	      0xe9dbfbffff	                           jmp 0x400131d	      1303	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x4001742	    0x660f1f440000	                    nop word [rax + rax]	      1303	listing.c	FUNCTION_17	WHILE_1	IF_4	IF_11
0x4001748	    0x448b0d000000	            mov r9d, dword [0x0400174f] 	       708	listing.c	FUNCTION_10	IF_1
0x400174f	    0xc70500000000	               mov dword [0x04001759], 1	       930	listing.c	FUNCTION_14
0x4001759	          0x4585c9	                           test r9d, r9d	       708	listing.c	FUNCTION_10	IF_1
0x400175c	            0x7407	                            je 0x4001765	       708	listing.c	FUNCTION_10	IF_1
0x400175e	            0x31ff	                            xor edi, edi	       708	listing.c	FUNCTION_10	IF_1
0x4001760	      0xe8ebeaffff	            call sym.listing_page.part.0	       708	listing.c	FUNCTION_10	IF_1
0x4001765	    0x488b1d000000	            mov rbx, qword [0x0400176c] 	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x400176c	            0x31ed	                            xor ebp, ebp	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x400176e	          0x4885db	                           test rbx, rbx	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001771	            0x754f	                           jne 0x40017c2	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001773	      0xe928030000	                           jmp 0x4001aa0	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001778	     0xf1f84000000	                   nop dword [rax + rax]	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001780	          0x4889df	                            mov rdi, rbx	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001783	      0xe800000000	                          call 0x4001788	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001788	    0x483b05000000	            cmp rax, qword [0x0400178f] 	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x400178f	            0x7451	                            je 0x40017e2	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001791	          0x4889df	                            mov rdi, rbx	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001794	      0xe800000000	                          call 0x4001799	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x4001799	    0x483b05000000	            cmp rax, qword [0x040017a0] 	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017a0	            0x7440	                            je 0x40017e2	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017a2	          0x4889df	                            mov rdi, rbx	       939	listing.c	FUNCTION_14	FOR_1	IF_1	IF_2	CALL_5
0x40017a5	      0xe800000000	                          call 0x40017aa	       939	listing.c	FUNCTION_14	FOR_1	IF_1	IF_2	CALL_5
0x40017aa	            0x85c0	                           test eax, eax	       939	listing.c	FUNCTION_14	FOR_1	IF_1	IF_2	CALL_5
0x40017ac	     0xf84ee000000	                            je 0x40018a0	       939	listing.c	FUNCTION_14	FOR_1	IF_1	IF_2	CALL_5
0x40017b2	          0x4889df	                            mov rdi, rbx	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017b5	      0xe800000000	                          call 0x40017ba	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017ba	          0x4885c0	                           test rax, rax	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017bd	          0x4889c3	                            mov rbx, rax	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017c0	            0x7440	                            je 0x4001802	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017c2	          0x4889df	                            mov rdi, rbx	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017c5	      0xe800000000	                          call 0x40017ca	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017ca	    0x483d00000000	                              cmp rax, 0	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017d0	            0x7410	                            je 0x40017e2	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017d2	          0x4889df	                            mov rdi, rbx	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017d5	      0xe800000000	                          call 0x40017da	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017da	    0x483d00000000	                              cmp rax, 0	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017e0	            0x759e	                           jne 0x4001780	       935	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_3
0x40017e2	          0x4889df	                            mov rdi, rbx	       936	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_4
0x40017e5	      0xe800000000	                          call 0x40017ea	       936	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_4
0x40017ea	    0x483d00000000	                              cmp rax, 0	       936	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_4
0x40017f0	            0x74b0	                            je 0x40017a2	       936	listing.c	FUNCTION_14	FOR_1	IF_1	CALL_4
0x40017f2	          0x4889df	                            mov rdi, rbx	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017f5	      0xe800000000	                          call 0x40017fa	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017fa	          0x4885c0	                           test rax, rax	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x40017fd	          0x4889c3	                            mov rbx, rax	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001800	            0x75c0	                           jne 0x40017c2	       933	listing.c	FUNCTION_14	FOR_1	CALL_2
0x4001802	            0x85ed	                           test ebp, ebp	       992	listing.c	FUNCTION_14	IF_9
0x4001804	     0xf8496020000	                            je 0x4001aa0	       992	listing.c	FUNCTION_14	IF_9
0x400180a	            0x31ff	                            xor edi, edi	       997	listing.c	FUNCTION_14	CALL_18
0x400180c	            0x31c0	                            xor eax, eax	       997	listing.c	FUNCTION_14	CALL_18
0x400180e	      0xbe00000000	                              mov esi, 0	       997	listing.c	FUNCTION_14	CALL_18
0x4001813	      0xe8d8eeffff	                      call sym.emit_line	       997	listing.c	FUNCTION_14	CALL_18
0x4001818	    0x488b1d000000	            mov rbx, qword [0x0400181f] 	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x400181f	            0x31ed	                            xor ebp, ebp	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x4001821	          0x4885db	                           test rbx, rbx	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x4001824	            0x751e	                           jne 0x4001844	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x4001826	      0xe915020000	                           jmp 0x4001a40	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x400182b	       0xf1f440000	                   nop dword [rax + rax]	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x4001830	          0x4889df	                            mov rdi, rbx	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x4001833	      0xe800000000	                          call 0x4001838	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x4001838	          0x4885c0	                           test rax, rax	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x400183b	          0x4889c3	                            mov rbx, rax	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x400183e	     0xf84f4010000	                            je 0x4001a38	      1001	listing.c	FUNCTION_14	FOR_2	CALL_19
0x4001844	          0x4889df	                            mov rdi, rbx	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x4001847	      0xe800000000	                          call 0x400184c	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x400184c	          0x4885c0	                           test rax, rax	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x400184f	            0x74df	                            je 0x4001830	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x4001851	          0x4889df	                            mov rdi, rbx	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x4001854	      0xe800000000	                          call 0x4001859	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x4001859	          0x803800	                       cmp byte [rax], 0	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x400185c	            0x74d2	                            je 0x4001830	      1003	listing.c	FUNCTION_14	FOR_2	IF_10	CALL_22
0x400185e	          0x4889df	                            mov rdi, rbx	      1005	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_23
0x4001861	      0xe800000000	                          call 0x4001866	      1005	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_23
0x4001866	    0x483d00000000	                              cmp rax, 0	      1005	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_23
0x400186c	            0x75c2	                           jne 0x4001830	      1005	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_23
0x400186e	            0x85ed	                           test ebp, ebp	      1007	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12
0x4001870	     0xf84e5050000	                            je 0x4001e5b	      1007	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12
0x4001876	          0x4889df	                            mov rdi, rbx	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001879	      0xbd01000000	                              mov ebp, 1	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x400187e	      0xe800000000	                          call 0x4001883	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001883	      0xbe00000000	                              mov esi, 0	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001888	          0x4889c2	                            mov rdx, rax	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x400188b	            0x31ff	                            xor edi, edi	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x400188d	            0x31c0	                            xor eax, eax	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x400188f	      0xe85ceeffff	                      call sym.emit_line	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001894	            0xeb9a	                           jmp 0x4001830	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x4001896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1014	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	CALL_26
0x40018a0	          0x4889df	                            mov rdi, rbx	       942	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_6
0x40018a3	      0xe800000000	                          call 0x40018a8	       942	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_6
0x40018a8	          0x4885c0	                           test rax, rax	       942	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_6
0x40018ab	     0xf8401ffffff	                            je 0x40017b2	       942	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_6
0x40018b1	          0x4889df	                            mov rdi, rbx	       945	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_7
0x40018b4	      0xe800000000	                          call 0x40018b9	       945	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_7
0x40018b9	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018be	          0x4989c4	                            mov r12, rax	       945	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	CALL_7
0x40018c1	    0x41b810000000	                           mov r8d, 0x10	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018c7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018cc	      0xba08000000	                              mov edx, 8	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018d1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018d6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018d8	      0xe800000000	                          call 0x40018dd	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018dd	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018e2	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018ea	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018ec	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018ef	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018f4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018f9	      0xe800000000	                          call 0x40018fe	        33	stdio2.h	FUNCTION_40	CALL_1
0x40018fe	            0x85ed	                           test ebp, ebp	       964	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001900	     0xf846a010000	                            je 0x4001a70	       964	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001906	          0x4889df	                            mov rdi, rbx	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x4001909	      0xe800000000	                          call 0x400190e	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x400190e	          0x4885c0	                           test rax, rax	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x4001911	     0xf84b9010000	                            je 0x4001ad0	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x4001917	          0x4889df	                            mov rdi, rbx	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x400191a	      0xe800000000	                          call 0x400191f	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x400191f	      0x4883785000	               cmp qword [rax + 0x50], 0	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x4001924	     0xf84a6010000	                            je 0x4001ad0	       971	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_10
0x400192a	          0x4889df	                            mov rdi, rbx	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x400192d	      0xe800000000	                          call 0x4001932	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x4001932	          0x4889df	                            mov rdi, rbx	       976	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_13
0x4001935	          0x4989c6	                            mov r14, rax	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x4001938	      0xe800000000	                          call 0x400193d	       976	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_13
0x400193d	          0x4889df	                            mov rdi, rbx	       975	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_12
0x4001940	          0x4c8b28	                    mov r13, qword [rax]	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x4001943	      0xe800000000	                          call 0x4001948	       975	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_12
0x4001948	        0x488b4050	            mov rax, qword [rax + 0x50] 	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x400194c	          0x4889df	                            mov rdi, rbx	       974	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_11
0x400194f	        0x448b6008	               mov r12d, dword [rax + 8]	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x4001953	      0xe800000000	                          call 0x4001958	       974	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_11
0x4001958	        0x488b4050	            mov rax, qword [rax + 0x50] 	       974	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8	CALL_11
0x400195c	    0x488b3d000000	            mov rdi, qword [0x04001963] 	        97	stdio2.h	CALL_18
0x4001963	          0x4d89e9	                             mov r9, r13	        97	stdio2.h	CALL_18
0x4001966	          0x4589e0	                           mov r8d, r12d	        97	stdio2.h	CALL_18
0x4001969	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x400196e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001973	        0x488b4010	            mov rax, qword [rax + 0x10] 	       973	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_8
0x4001977	        0x488b4808	                mov rcx, qword [rax + 8]	        97	stdio2.h	CALL_18
0x400197b	            0x4156	                                push r14	        97	stdio2.h	CALL_18
0x400197d	    0x488d84248800	                   lea rax, [rsp + 0x88]	        97	stdio2.h	CALL_18
0x4001985	              0x50	                                push rax	        97	stdio2.h	CALL_18
0x4001986	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001988	      0xe800000000	                          call 0x400198d	        97	stdio2.h	CALL_18
0x400198d	              0x5f	                                 pop rdi	        97	stdio2.h	CALL_18
0x400198e	            0x4158	                                  pop r8	        97	stdio2.h	CALL_18
0x4001990	    0x8b0500000000	            mov eax, dword [0x04001996] 	       986	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3
0x4001996	    0x8b3500000000	            mov esi, dword [0x0400199c] 	       707	listing.c	FUNCTION_10	IF_1
0x400199c	    0x8b1500000000	            mov edx, dword [0x040019a2] 	       707	listing.c	FUNCTION_10	IF_1
0x40019a2	          0x83c001	                              add eax, 1	       986	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3
0x40019a5	            0x85f6	                           test esi, esi	       707	listing.c	FUNCTION_10	IF_1
0x40019a7	    0x890500000000	            mov dword [0x040019ad], eax 	       986	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3
0x40019ad	            0x7508	                           jne 0x40019b7	       707	listing.c	FUNCTION_10	IF_1
0x40019af	            0x39d0	                            cmp eax, edx	       707	listing.c	FUNCTION_10	IF_1
0x40019b1	     0xf82fbfdffff	                            jb 0x40017b2	       707	listing.c	FUNCTION_10	IF_1
0x40019b7	            0x85d2	                           test edx, edx	       708	listing.c	FUNCTION_10	IF_1
0x40019b9	     0xf84f3fdffff	                            je 0x40017b2	       708	listing.c	FUNCTION_10	IF_1
0x40019bf	            0x31ff	                            xor edi, edi	       708	listing.c	FUNCTION_10	IF_1
0x40019c1	      0xe88ae8ffff	            call sym.listing_page.part.0	       708	listing.c	FUNCTION_10	IF_1
0x40019c6	      0xe9e7fdffff	                           jmp 0x40017b2	       708	listing.c	FUNCTION_10	IF_1
0x40019cb	       0xf1f440000	                   nop dword [rax + rax]	       708	listing.c	FUNCTION_10	IF_1
0x40019d0	    0x488b3d000000	            mov rdi, qword [0x040019d7] 	      1442	listing.c	FUNCTION_22	IF_7	IF_8	CALL_8
0x40019d7	      0xe800000000	                          call 0x40019dc	      1442	listing.c	FUNCTION_22	IF_7	IF_8	CALL_8
0x40019dc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1442	listing.c	FUNCTION_22	IF_7	IF_8	CALL_8
0x40019df	     0xf854cf7ffff	                           jne 0x4001131	      1442	listing.c	FUNCTION_22	IF_7	IF_8	CALL_8
0x40019e5	      0xe800000000	                          call 0x40019ea	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019ea	            0x8b38	                    mov edi, dword [rax]	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019ec	      0xe800000000	                          call 0x40019f1	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019f1	            0x31ff	                            xor edi, edi	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019f3	      0xba05000000	                              mov edx, 5	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019f8	      0xbe00000000	                              mov esi, 0	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x40019fd	          0x4889c3	                            mov rbx, rax	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a00	      0xe800000000	                          call 0x4001a05	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a05	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a0a	          0x4889c7	                            mov rdi, rax	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a0d	          0x4889da	                            mov rdx, rbx	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a10	            0x31c0	                            xor eax, eax	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a12	      0xe800000000	                          call 0x4001a17	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a17	      0xe915f7ffff	                           jmp 0x4001131	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a1c	         0xf1f4000	                         nop dword [rax]	      1443	listing.c	FUNCTION_22	IF_7	CALL_11
0x4001a20	      0xba00000000	                              mov edx, 0	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001a25	      0xbedb040000	                          mov esi, 0x4db	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001a2a	      0xbf00000000	                              mov edi, 0	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001a2f	      0xe800000000	                          call 0x4001a34	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001a34	         0xf1f4000	                         nop dword [rax]	      1243	listing.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001a38	            0x85ed	                           test ebp, ebp	      1019	listing.c	FUNCTION_14	IF_13
0x4001a3a	     0xf85e5f6ffff	                           jne 0x4001125	      1019	listing.c	FUNCTION_14	IF_13
0x4001a40	      0xbe00000000	                              mov esi, 0	      1020	listing.c	FUNCTION_14	CALL_27
0x4001a45	            0x31ff	                            xor edi, edi	      1020	listing.c	FUNCTION_14	CALL_27
0x4001a47	            0x31c0	                            xor eax, eax	      1020	listing.c	FUNCTION_14	CALL_27
0x4001a49	      0xe8a2ecffff	                      call sym.emit_line	      1020	listing.c	FUNCTION_14	CALL_27
0x4001a4e	      0xe9d2f6ffff	                           jmp 0x4001125	      1020	listing.c	FUNCTION_14	CALL_27
0x4001a53	       0xf1f440000	                   nop dword [rax + rax]	      1020	listing.c	FUNCTION_14	CALL_27
0x4001a58	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001a5c	        0x443b6718	           cmp r12d, dword [rdi + 0x18] 	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001a60	     0xf87f1f9ffff	                            ja 0x4001457	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001a66	      0xe902f8ffff	                           jmp 0x400126d	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001a6b	       0xf1f440000	                   nop dword [rax + rax]	      1248	listing.c	FUNCTION_17	WHILE_1	IF_2	WHILE_2
0x4001a70	    0x488b0d000000	            mov rcx, qword [0x04001a77] 	        97	stdio2.h	CALL_18
0x4001a77	      0xba10000000	                           mov edx, 0x10	        97	stdio2.h	CALL_18
0x4001a7c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001a81	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_18
0x4001a86	      0xbd01000000	                              mov ebp, 1	       968	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001a8b	      0xe800000000	                          call 0x4001a90	        97	stdio2.h	CALL_18
0x4001a90	    0x830500000000	               add dword [0x04001a97], 1	       967	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001a97	      0xe96afeffff	                           jmp 0x4001906	       967	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001a9c	         0xf1f4000	                         nop dword [rax]	       967	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	IF_7
0x4001aa0	    0x488b0d000000	            mov rcx, qword [0x04001aa7] 	        97	stdio2.h	CALL_18
0x4001aa7	      0xba13000000	                           mov edx, 0x13	        97	stdio2.h	CALL_18
0x4001aac	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001ab1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_18
0x4001ab6	      0xe800000000	                          call 0x4001abb	        97	stdio2.h	CALL_18
0x4001abb	    0x830500000000	               add dword [0x04001ac2], 1	       995	listing.c	FUNCTION_14	IF_9
0x4001ac2	      0xe943fdffff	                           jmp 0x400180a	       995	listing.c	FUNCTION_14	IF_9
0x4001ac7	    0x660f1f840000	                    nop word [rax + rax]	       995	listing.c	FUNCTION_14	IF_9
0x4001ad0	          0x4889df	                            mov rdi, rbx	       981	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4
0x4001ad3	      0xe800000000	                          call 0x4001ad8	       981	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4
0x4001ad8	          0x4889df	                            mov rdi, rbx	       982	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4	CALL_15
0x4001adb	          0x4989c4	                            mov r12, rax	       981	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4
0x4001ade	      0xe800000000	                          call 0x4001ae3	       982	listing.c	FUNCTION_14	FOR_1	IF_1	IF_3	ELSE_4	CALL_15
0x4001ae3	    0x488b3d000000	            mov rdi, qword [0x04001aea] 	        97	stdio2.h	CALL_18
0x4001aea	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_18
0x4001aed	    0x4c8d84248000	                    lea r8, [rsp + 0x80]	        97	stdio2.h	CALL_18
0x4001af5	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_18
0x4001af8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_18
0x4001afd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001b02	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001b04	      0xe800000000	                          call 0x4001b09	        97	stdio2.h	CALL_18
0x4001b09	      0xe982feffff	                           jmp 0x4001990	        97	stdio2.h	CALL_18
0x4001b0e	            0x6690	                                     nop	        97	stdio2.h	CALL_18
0x4001b10	        0x418b5518	            mov edx, dword [r13 + 0x18] 	      1040	listing.c	FUNCTION_15	IF_1
0x4001b14	          0x4439c2	                            cmp edx, r8d	      1040	listing.c	FUNCTION_15	IF_1
0x4001b17	     0xf8653020000	                           jbe 0x4001d70	      1040	listing.c	FUNCTION_15	IF_1
0x4001b1d	    0x4c392d000000	            cmp qword [0x04001b24], r13 	      1063	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001b24	     0xf8444030000	                            je 0x4001e6e	      1063	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001b2a	    0x4c392d000000	            cmp qword [0x04001b31], r13 	      1063	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001b31	     0xf84e9030000	                            je 0x4001f20	      1063	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001b37	    0x4c392d000000	            cmp qword [0x04001b3e], r13 	      1063	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001b3e	     0xf84be030000	                            je 0x4001f02	      1063	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001b44	    0x486305000000	         movsxd rax, dword [0x04001b4b] 	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b4b	      0xb900000000	                              mov ecx, 0	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b50	          0x8d5001	                      lea edx, [rax + 1]	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b53	          0x83fa03	                              cmp edx, 3	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b56	           0xf44d1	                          cmove edx, ecx	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b59	    0x891500000000	            mov dword [0x04001b5f], edx 	      1073	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b5f	          0x4889c2	                            mov rdx, rax	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b62	        0x48c1e007	                              shl rax, 7	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b66	        0x48c1e204	                              shl rdx, 4	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b6a	          0x4829d0	                            sub rax, rdx	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b6d	          0x83fd01	                              cmp ebp, 1	       571	listing.c	FUNCTION_9	IF_1
0x4001b70	    0x488d88000000	                          lea rcx, [rax]	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b77	      0x4889442428	             mov qword [rsp + 0x28], rax	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b7c	    0x4c89a8000000	                    mov qword [rax], r13	      1077	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b83	    0x448980000000	                    mov dword [rax], r8d	      1078	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b8a	    0xc68000000000	                       mov byte [rax], 0	      1079	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b91	    0x4c8db0000000	                          lea r14, [rax]	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001b98	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      1072	listing.c	FUNCTION_15	IF_1	IF_3
0x4001b9d	     0xf869d030000	                           jbe 0x4001f40	       571	listing.c	FUNCTION_9	IF_1
0x4001ba3	        0x453b4518	            cmp r8d, dword [r13 + 0x18] 	       571	listing.c	FUNCTION_9	IF_1
0x4001ba7	     0xf8393030000	                           jae 0x4001f40	       571	listing.c	FUNCTION_9	IF_1
0x4001bad	    0x488b15000000	            mov rdx, qword [0x04001bb4] 	       575	listing.c	FUNCTION_9	IF_2
0x4001bb4	          0x4c39ea	                            cmp rdx, r13	       575	listing.c	FUNCTION_9	IF_2
0x4001bb7	            0x750c	                           jne 0x4001bc5	       575	listing.c	FUNCTION_9	IF_2
0x4001bb9	          0x4885d2	                           test rdx, rdx	       575	listing.c	FUNCTION_9	IF_2
0x4001bbc	    0x488b3d000000	            mov rdi, qword [0x04001bc3] 	       575	listing.c	FUNCTION_9	IF_2
0x4001bc3	            0x7574	                           jne 0x4001c39	       575	listing.c	FUNCTION_9	IF_2
0x4001bc5	    0x488b3d000000	            mov rdi, qword [0x04001bcc] 	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001bcc	      0x4889542438	             mov qword [rsp + 0x38], rdx	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001bd1	          0x4885ff	                           test rdi, rdi	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001bd4	            0x7424	                            je 0x4001bfa	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001bd6	      0x4489442430	             mov dword [rsp + 0x30], r8d	       577	listing.c	FUNCTION_9	IF_2	IF_3
0x4001bdb	      0xe800000000	                          call 0x4001be0	       579	listing.c	FUNCTION_9	IF_2	IF_3	CALL_1
0x4001be0	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       579	listing.c	FUNCTION_9	IF_2	IF_3	CALL_1
0x4001be5	    0x488b3d000000	            mov rdi, qword [0x04001bec] 	       580	listing.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4001bec	        0x48894210	             mov qword [rdx + 0x10], rax	       579	listing.c	FUNCTION_9	IF_2	IF_3	CALL_1
0x4001bf0	      0xe800000000	                          call 0x4001bf5	       580	listing.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4001bf5	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       580	listing.c	FUNCTION_9	IF_2	IF_3	CALL_2
0x4001bfa	        0x498b7d08	                mov rdi, qword [r13 + 8]	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001bfe	      0xbe00000000	                              mov esi, 0	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001c03	      0x4489442430	             mov dword [rsp + 0x30], r8d	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001c08	    0x4c892d000000	            mov qword [0x04001c0f], r13 	       585	listing.c	FUNCTION_9	IF_2
0x4001c0f	      0xe800000000	                          call 0x4001c14	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001c14	          0x4885c0	                           test rax, rax	       587	listing.c	FUNCTION_9	IF_2	IF_4
0x4001c17	          0x4889c7	                            mov rdi, rax	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001c1a	    0x488905000000	            mov qword [0x04001c21], rax 	       586	listing.c	FUNCTION_9	IF_2	CALL_3
0x4001c21	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       587	listing.c	FUNCTION_9	IF_2	IF_4
0x4001c26	     0xf84b9040000	                            je 0x40020e5	       587	listing.c	FUNCTION_9	IF_2	IF_4
0x4001c2c	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	       594	listing.c	FUNCTION_9	IF_2	IF_5
0x4001c30	          0x4885f6	                           test rsi, rsi	       594	listing.c	FUNCTION_9	IF_2	IF_5
0x4001c33	     0xf85f7030000	                           jne 0x4002030	       594	listing.c	FUNCTION_9	IF_2	IF_5
0x4001c39	      0x4489442430	             mov dword [rsp + 0x30], r8d	       594	listing.c	FUNCTION_9	IF_2	IF_5
0x4001c3e	      0xe800000000	                          call 0x4001c43	       599	listing.c	FUNCTION_9	CALL_5
0x4001c43	        0x4883f802	                              cmp rax, 2	       600	listing.c	FUNCTION_9	IF_6
0x4001c47	      0x4889442440	             mov qword [rsp + 0x40], rax	       599	listing.c	FUNCTION_9	CALL_5
0x4001c4c	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       600	listing.c	FUNCTION_9	IF_6
0x4001c51	     0xf8ebd030000	                           jle 0x4002014	       600	listing.c	FUNCTION_9	IF_6
0x4001c57	        0x458b5d18	           mov r11d, dword [r13 + 0x18] 	       602	listing.c	FUNCTION_9
0x4001c5b	          0x4989c1	                             mov r9, rax	       602	listing.c	FUNCTION_9
0x4001c5e	          0x8d45ff	                      lea eax, [rbp - 1]	       605	listing.c	FUNCTION_9
0x4001c61	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       605	listing.c	FUNCTION_9
0x4001c66	      0x44897c244c	            mov dword [rsp + 0x4c], r15d	       605	listing.c	FUNCTION_9
0x4001c6b	          0x4889c1	                            mov rcx, rax	       606	listing.c	FUNCTION_9
0x4001c6e	        0x89442448	             mov dword [rsp + 0x48], eax	       605	listing.c	FUNCTION_9
0x4001c72	          0x4c01f0	                            add rax, r14	       606	listing.c	FUNCTION_9
0x4001c75	      0x4889442430	             mov qword [rsp + 0x30], rax	       606	listing.c	FUNCTION_9
0x4001c7a	          0xc60000	                       mov byte [rax], 0	       606	listing.c	FUNCTION_9
0x4001c7d	        0x4183c301	                             add r11d, 1	       612	listing.c	FUNCTION_9
0x4001c81	            0x31c0	                            xor eax, eax	       568	listing.c	FUNCTION_9
0x4001c83	        0x896c2450	             mov dword [rsp + 0x50], ebp	       568	listing.c	FUNCTION_9
0x4001c87	      0x4489642454	            mov dword [rsp + 0x54], r12d	       568	listing.c	FUNCTION_9
0x4001c8c	      0x4c896c2458	             mov qword [rsp + 0x58], r13	       568	listing.c	FUNCTION_9
0x4001c91	          0x4589c4	                           mov r12d, r8d	       568	listing.c	FUNCTION_9
0x4001c94	          0x4d89f5	                            mov r13, r14	       568	listing.c	FUNCTION_9
0x4001c97	          0x4489dd	                           mov ebp, r11d	       568	listing.c	FUNCTION_9
0x4001c9a	          0x4d89ce	                             mov r14, r9	       568	listing.c	FUNCTION_9
0x4001c9d	          0x4189c7	                           mov r15d, eax	       568	listing.c	FUNCTION_9
0x4001ca0	          0x4889cb	                            mov rbx, rcx	       568	listing.c	FUNCTION_9
0x4001ca3	        0x4183f701	                             xor r15d, 1	       568	listing.c	FUNCTION_9
0x4001ca7	        0x4183e701	                             and r15d, 1	       568	listing.c	FUNCTION_9
0x4001cab	          0x4d85f6	                           test r14, r14	       614	listing.c	FUNCTION_9	WHILE_1
0x4001cae	     0xf8e9a020000	                           jle 0x4001f4e	       614	listing.c	FUNCTION_9	WHILE_1
0x4001cb4	          0x4584ff	                         test r15b, r15b	       614	listing.c	FUNCTION_9	WHILE_1
0x4001cb7	     0xf8491020000	                            je 0x4001f4e	       614	listing.c	FUNCTION_9	WHILE_1
0x4001cbd	          0x4c89f0	                            mov rax, r14	       619	listing.c	FUNCTION_9	WHILE_1
0x4001cc0	    0x488b3d000000	            mov rdi, qword [0x04001cc7] 	       620	listing.c	FUNCTION_9	WHILE_1	CALL_6
0x4001cc7	          0x4829d8	                            sub rax, rbx	       619	listing.c	FUNCTION_9	WHILE_1
0x4001cca	          0x4c39f3	                            cmp rbx, r14	       619	listing.c	FUNCTION_9	WHILE_1
0x4001ccd	    0x41be00000000	                             mov r14d, 0	       619	listing.c	FUNCTION_9	WHILE_1
0x4001cd3	        0x4c0f4ef0	                         cmovle r14, rax	       619	listing.c	FUNCTION_9	WHILE_1
0x4001cd7	            0x31d2	                            xor edx, edx	       620	listing.c	FUNCTION_9	WHILE_1	CALL_6
0x4001cd9	          0x4c89f6	                            mov rsi, r14	       620	listing.c	FUNCTION_9	WHILE_1	CALL_6
0x4001cdc	      0xe800000000	                          call 0x4001ce1	       620	listing.c	FUNCTION_9	WHILE_1	CALL_6
0x4001ce1	    0x488b0d000000	            mov rcx, qword [0x04001ce8] 	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001ce8	          0x4889da	                            mov rdx, rbx	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001ceb	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001cf0	          0x4c89ef	                            mov rdi, r13	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001cf3	      0xe800000000	                          call 0x4001cf8	       295	stdio2.h	FUNCTION_54	CALL_9
0x4001cf8	          0x4839c3	                            cmp rbx, rax	       623	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_7
0x4001cfb	     0xf854c030000	                           jne 0x400204d	       623	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_7
0x4001d01	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001d06	          0x4939cd	                            cmp r13, rcx	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001d09	          0x4889c8	                            mov rax, rcx	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001d0c	            0x760b	                           jbe 0x4001d19	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001d0e	            0xeb9b	                           jmp 0x4001cab	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001d10	        0x4883e801	                              sub rax, 1	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001d14	          0x4939c5	                            cmp r13, rax	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001d17	            0x7792	                            ja 0x4001cab	       629	listing.c	FUNCTION_9	WHILE_1	FOR_1
0x4001d19	          0x80380a	                     cmp byte [rax], 0xa	       631	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8
0x4001d1c	            0x75f2	                           jne 0x4001d10	       631	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8
0x4001d1e	          0x83ed01	                              sub ebp, 1	       633	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8
0x4001d21	          0x4139ec	                           cmp r12d, ebp	       635	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001d24	            0x75ea	                           jne 0x4001d10	       635	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001d26	          0x4989c7	                            mov r15, rax	       645	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001d29	        0x488d5001	                      lea rdx, [rax + 1]	       648	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10
0x4001d2d	          0x4d29ef	                            sub r15, r13	       645	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001d30	          0x4d01f7	                            add r15, r14	       645	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001d33	      0x4839542430	            cmp qword [rsp + 0x30], rdx 	       648	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10
0x4001d38	     0xf845a030000	                            je 0x4002098	       648	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10
0x4001d3e	        0x8078010d	                 cmp byte [rax + 1], 0xd	       655	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	ELSE_1
0x4001d42	           0xf94c0	                                 sete al	       655	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	ELSE_1
0x4001d45	           0xfb6c0	                           movzx eax, al	       655	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	ELSE_1
0x4001d48	      0x4d8d740701	                lea r14, [r15 + rax + 1]	       655	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	ELSE_1
0x4001d4d	    0x488b3d000000	            mov rdi, qword [0x04001d54] 	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001d54	            0x31d2	                            xor edx, edx	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001d56	          0x4c89f6	                            mov rsi, r14	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001d59	    0x41bf01000000	                             mov r15d, 1	       638	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001d5f	          0x4489e5	                           mov ebp, r12d	       638	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9
0x4001d62	      0xe800000000	                          call 0x4001d67	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001d67	      0xe937ffffff	                           jmp 0x4001ca3	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001d6c	         0xf1f4000	                         nop dword [rax]	       658	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	CALL_11
0x4001d70	        0x418b451c	            mov eax, dword [r13 + 0x1c] 	      1088	listing.c	FUNCTION_15	IF_5
0x4001d74	            0x85c0	                           test eax, eax	      1088	listing.c	FUNCTION_15	IF_5
0x4001d76	     0xf8548f5ffff	                           jne 0x40012c4	      1088	listing.c	FUNCTION_15	IF_5
0x4001d7c	          0x4439c2	                            cmp edx, r8d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d7f	     0xf833ff5ffff	                           jae 0x40012c4	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d85	          0x4531d2	                          xor r10d, r10d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d88	      0x4489642428	            mov dword [rsp + 0x28], r12d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d8d	      0x44897c2420	            mov dword [rsp + 0x20], r15d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d92	          0x4589d4	                          mov r12d, r10d	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d95	            0xeb59	                           jmp 0x4001df0	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001d97	    0x660f1f840000	                    nop word [rax + rax]	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001da0	          0x4585e4	                         test r12d, r12d	      1105	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001da3	            0x751a	                           jne 0x4001dbf	      1105	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001da5	    0x8b0d00000000	            mov ecx, dword [0x04001dab] 	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001dab	      0xbe00000000	                              mov esi, 0	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001db0	          0x83c101	                              add ecx, 1	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001db3	          0x83f903	                              cmp ecx, 3	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001db6	           0xf44ce	                          cmove ecx, esi	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001db9	    0x890d00000000	            mov dword [0x04001dbf], ecx 	      1107	listing.c	FUNCTION_15	IF_5	WHILE_1	IF_6
0x4001dbf	        0x488b4808	                mov rcx, qword [rax + 8]	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001dc3	      0xbe00000000	                              mov esi, 0	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001dc8	            0x31c0	                            xor eax, eax	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001dca	          0x4889df	                            mov rdi, rbx	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001dcd	        0x4183c401	                             add r12d, 1	      1114	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001dd1	      0xe81ae9ffff	                      call sym.emit_line	      1112	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_4
0x4001dd6	        0x418b5518	            mov edx, dword [r13 + 0x18] 	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001dda	          0x3b5330	            cmp edx, dword [rbx + 0x30] 	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001ddd	     0xf83d5000000	                           jae 0x4001eb8	      1092	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001de3	        0x458b751c	           mov r14d, dword [r13 + 0x1c] 	      1093	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001de7	          0x4585f6	                         test r14d, r14d	      1093	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001dea	     0xf85c8000000	                           jne 0x4001eb8	      1093	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001df0	    0x4c6335000000	         movsxd r14, dword [0x04001df7] 	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001df7	          0x83c201	                              add edx, 1	      1099	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001dfa	    0x41b800000000	                              mov r8d, 0	       485	listing.c	FUNCTION_8	IF_1
0x4001e00	          0x4c89f0	                            mov rax, r14	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001e03	        0x49c1e607	                              shl r14, 7	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001e07	        0x48c1e004	                              shl rax, 4	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001e0b	          0x4929c6	                            sub r14, rax	      1097	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001e0e	          0x4c89e8	                            mov rax, r13	       484	listing.c	FUNCTION_8	IF_1
0x4001e11	    0x41c686000000	                       mov byte [r14], 0	      1100	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001e19	        0x458b7d1c	           mov r15d, dword [r13 + 0x1c] 	       484	listing.c	FUNCTION_8	IF_1
0x4001e1d	    0x4d89ae000000	                    mov qword [r14], r13	      1098	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001e24	    0x418996000000	                    mov dword [r14], edx	      1099	listing.c	FUNCTION_15	IF_5	WHILE_1
0x4001e2b	          0x4585ff	                         test r15d, r15d	       484	listing.c	FUNCTION_8	IF_1
0x4001e2e	     0xf856cffffff	                           jne 0x4001da0	       484	listing.c	FUNCTION_8	IF_1
0x4001e34	    0x498db6000000	                          lea rsi, [r14]	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001e3b	            0x89ea	                            mov edx, ebp	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001e3d	          0x4c89ef	                            mov rdi, r13	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001e40	      0xe8fbe6ffff	             call sym.buffer_line.part.4	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001e45	    0x418b96000000	                    mov edx, dword [r14]	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001e4c	          0x4989c0	                             mov r8, rax	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001e4f	    0x498b86000000	                    mov rax, qword [r14]	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001e56	      0xe945ffffff	                           jmp 0x4001da0	      1101	listing.c	FUNCTION_15	IF_5	WHILE_1	CALL_3
0x4001e5b	      0xbe00000000	                              mov esi, 0	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e60	            0x31ff	                            xor edi, edi	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e62	            0x31c0	                            xor eax, eax	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e64	      0xe887e8ffff	                      call sym.emit_line	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e69	      0xe908faffff	                           jmp 0x4001876	      1011	listing.c	FUNCTION_14	FOR_2	IF_10	IF_11	IF_12	CALL_24
0x4001e6e	    0x443b05000000	            cmp r8d, dword [0x04001e75] 	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e75	     0xf85affcffff	                           jne 0x4001b2a	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e7b	            0x31c0	                            xor eax, eax	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e7d	        0x486bc070	                     imul rax, rax, 0x70	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e81	    0x488d90000000	                          lea rdx, [rax]	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e88	    0x4c8d80000000	                           lea r8, [rax]	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e8f	    0x488b80000000	                    mov rax, qword [rax]	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e96	          0x8b5208	                mov edx, dword [rdx + 8]	      1066	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001e99	        0x488b4808	                mov rcx, qword [rax + 8]	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001e9d	      0xbe00000000	                              mov esi, 0	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001ea2	          0x4889df	                            mov rdi, rbx	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001ea5	            0x31c0	                            xor eax, eax	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001ea7	      0xe844e8ffff	                      call sym.emit_line	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001eac	      0xe913f4ffff	                           jmp 0x40012c4	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001eb1	     0xf1f80000000	                         nop dword [rax]	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001eb8	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001ebd	      0x448b642428	           mov r12d, dword [rsp + 0x28] 	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001ec2	      0xe9fdf3ffff	                           jmp 0x40012c4	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001ec7	    0x660f1f840000	                    nop word [rax + rax]	      1083	listing.c	FUNCTION_15	IF_1	CALL_2
0x4001ed0	            0x31ff	                            xor edi, edi	      1339	listing.c	FUNCTION_19	IF_1	CALL_2
0x4001ed2	      0xbe00000000	                              mov esi, 0	      1339	listing.c	FUNCTION_19	IF_1	CALL_2
0x4001ed7	      0xe800000000	                          call 0x4001edc	      1339	listing.c	FUNCTION_19	IF_1	CALL_2
0x4001edc	    0x488b3d000000	            mov rdi, qword [0x04001ee3] 	        97	stdio2.h	CALL_18
0x4001ee3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_18
0x4001ee6	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_18
0x4001ee9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_18
0x4001eee	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_18
0x4001ef0	      0xe800000000	                          call 0x4001ef5	        97	stdio2.h	CALL_18
0x4001ef5	      0xe98ef6ffff	                           jmp 0x4001588	        97	stdio2.h	CALL_18
0x4001efa	          0x4889c3	                            mov rbx, rax	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001efd	      0xe92ff4ffff	                           jmp 0x4001331	      1211	listing.c	FUNCTION_17	WHILE_1
0x4001f02	    0x443b05000000	            cmp r8d, dword [0x04001f09] 	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001f09	      0xb802000000	                              mov eax, 2	      1062	listing.c	FUNCTION_15	IF_1	FOR_1
0x4001f0e	     0xf8530fcffff	                           jne 0x4001b44	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001f14	      0xe964ffffff	                           jmp 0x4001e7d	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001f19	     0xf1f80000000	                         nop dword [rax]	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001f20	    0x443b05000000	            cmp r8d, dword [0x04001f27] 	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001f27	     0xf850afcffff	                           jne 0x4001b37	      1064	listing.c	FUNCTION_15	IF_1	FOR_1	IF_2
0x4001f2d	      0xb801000000	                              mov eax, 1	      1062	listing.c	FUNCTION_15	IF_1	FOR_1
0x4001f32	      0xe946ffffff	                           jmp 0x4001e7d	      1062	listing.c	FUNCTION_15	IF_1	FOR_1
0x4001f37	    0x660f1f840000	                    nop word [rax + rax]	      1062	listing.c	FUNCTION_15	IF_1	FOR_1
0x4001f40	          0x4489c2	                            mov edx, r8d	       571	listing.c	FUNCTION_9	IF_1
0x4001f43	          0x4c89e8	                            mov rax, r13	       571	listing.c	FUNCTION_9	IF_1
0x4001f46	          0x4d89f0	                             mov r8, r14	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001f49	      0xe94bffffff	                           jmp 0x4001e99	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001f4e	    0x488b3d000000	            mov rdi, qword [0x04001f55] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001f55	          0x4d89ee	                            mov r14, r13	       666	listing.c	FUNCTION_9	CALL_12
0x4001f58	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001f5d	      0x448b7c244c	           mov r15d, dword [rsp + 0x4c] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001f62	        0x8b6c2450	            mov ebp, dword [rsp + 0x50] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001f66	      0x448b642454	           mov r12d, dword [rsp + 0x54] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001f6b	      0x4c8b6c2458	            mov r13, qword [rsp + 0x58] 	       666	listing.c	FUNCTION_9	CALL_12
0x4001f70	      0xe800000000	                          call 0x4001f75	       666	listing.c	FUNCTION_9	CALL_12
0x4001f75	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f78	      0x4c89742430	             mov qword [rsp + 0x30], r14	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4001f7d	            0x745e	                            je 0x4001fdd	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f7f	          0x83f80a	                            cmp eax, 0xa	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f82	            0x7459	                            je 0x4001fdd	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f84	          0x83f80d	                            cmp eax, 0xd	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f87	     0xf8430010000	                            je 0x40020bd	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f8d	            0x31d2	                            xor edx, edx	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f8f	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f94	            0x89d3	                            mov ebx, edx	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f96	            0xeb16	                           jmp 0x4001fae	       668	listing.c	FUNCTION_9	WHILE_2
0x4001f98	     0xf1f84000000	                   nop dword [rax + rax]	       668	listing.c	FUNCTION_9	WHILE_2
0x4001fa0	          0x83f80a	                            cmp eax, 0xa	       668	listing.c	FUNCTION_9	WHILE_2
0x4001fa3	            0x7433	                            je 0x4001fd8	       668	listing.c	FUNCTION_9	WHILE_2
0x4001fa5	          0x83f80d	                            cmp eax, 0xd	       668	listing.c	FUNCTION_9	WHILE_2
0x4001fa8	     0xf840a010000	                            je 0x40020b8	       668	listing.c	FUNCTION_9	WHILE_2
0x4001fae	        0x395c2448	            cmp dword [rsp + 0x48], ebx 	       670	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001fb2	            0x7610	                           jbe 0x4001fc4	       670	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001fb4	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       671	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001fb9	            0x8801	                      mov byte [rcx], al	       671	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001fbb	        0x488d4101	                      lea rax, [rcx + 1]	       671	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001fbf	      0x4889442430	             mov qword [rsp + 0x30], rax	       671	listing.c	FUNCTION_9	WHILE_2	IF_12
0x4001fc4	    0x488b3d000000	            mov rdi, qword [0x04001fcb] 	       674	listing.c	FUNCTION_9	WHILE_2	CALL_13
0x4001fcb	          0x83c301	                              add ebx, 1	       672	listing.c	FUNCTION_9	WHILE_2
0x4001fce	      0xe800000000	                          call 0x4001fd3	       674	listing.c	FUNCTION_9	WHILE_2	CALL_13
0x4001fd3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       668	listing.c	FUNCTION_9	WHILE_2
0x4001fd6	            0x75c8	                           jne 0x4001fa0	       668	listing.c	FUNCTION_9	WHILE_2
0x4001fd8	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       668	listing.c	FUNCTION_9	WHILE_2
0x4001fdd	          0x83f80d	                            cmp eax, 0xd	       679	listing.c	FUNCTION_9	IF_13
0x4001fe0	           0xf94c1	                                 sete cl	       679	listing.c	FUNCTION_9	IF_13
0x4001fe3	          0x83f80a	                            cmp eax, 0xa	       679	listing.c	FUNCTION_9	IF_13
0x4001fe6	           0xf94c2	                                 sete dl	       679	listing.c	FUNCTION_9	IF_13
0x4001fe9	            0x84c9	                             test cl, cl	       679	listing.c	FUNCTION_9	IF_13
0x4001feb	     0xf8501010000	                           jne 0x40020f2	       679	listing.c	FUNCTION_9	IF_13
0x4001ff1	            0x84d2	                             test dl, dl	       679	listing.c	FUNCTION_9	IF_13
0x4001ff3	     0xf85f9000000	                           jne 0x40020f2	       679	listing.c	FUNCTION_9	IF_13
0x4001ff9	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       689	listing.c	FUNCTION_9
0x4001ffe	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       692	listing.c	FUNCTION_9	CALL_16
0x4002003	            0x31d2	                            xor edx, edx	       692	listing.c	FUNCTION_9	CALL_16
0x4002005	    0x488b3d000000	            mov rdi, qword [0x0400200c] 	       692	listing.c	FUNCTION_9	CALL_16
0x400200c	          0xc60000	                       mov byte [rax], 0	       689	listing.c	FUNCTION_9
0x400200f	      0xe800000000	                          call 0x4002014	       692	listing.c	FUNCTION_9	CALL_16
0x4002014	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       692	listing.c	FUNCTION_9	CALL_16
0x4002019	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       692	listing.c	FUNCTION_9	CALL_16
0x400201e	          0x4d89f0	                             mov r8, r14	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4002021	    0x488b80000000	                    mov rax, qword [rax]	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4002028	          0x8b5108	                mov edx, dword [rcx + 8]	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x400202b	      0xe969feffff	                           jmp 0x4001e99	      1080	listing.c	FUNCTION_15	IF_1	IF_3	CALL_1
0x4002030	            0x31d2	                            xor edx, edx	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4002032	      0x4489442430	             mov dword [rsp + 0x30], r8d	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4002037	      0xe800000000	                          call 0x400203c	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x400203c	    0x488b3d000000	            mov rdi, qword [0x04002043] 	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4002043	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4002048	      0xe9ecfbffff	                           jmp 0x4001c39	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x400204d	          0x4d89ee	                            mov r14, r13	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4002050	      0x4c8b6c2458	            mov r13, qword [rsp + 0x58] 	       595	listing.c	FUNCTION_9	IF_2	CALL_4
0x4002055	            0x31ff	                            xor edi, edi	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002057	      0xba05000000	                              mov edx, 5	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x400205c	      0xbe00000000	                              mov esi, 0	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002061	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002066	      0x448b7c244c	           mov r15d, dword [rsp + 0x4c] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x400206b	        0x8b6c2450	            mov ebp, dword [rsp + 0x50] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x400206f	        0x498b4508	                mov rax, qword [r13 + 8]	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002073	      0x448b642454	           mov r12d, dword [rsp + 0x54] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002078	      0x4889442430	             mov qword [rsp + 0x30], rax	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x400207d	      0xe800000000	                          call 0x4002082	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002082	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002087	          0x4889c7	                            mov rdi, rax	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x400208a	            0x31c0	                            xor eax, eax	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x400208c	      0xe800000000	                          call 0x4002091	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002091	            0xeb81	                           jmp 0x4002014	       625	listing.c	FUNCTION_9	WHILE_1	IF_7	CALL_9
0x4002093	      0xe800000000	                          call 0x4002098	      1448	listing.c	FUNCTION_22
0x4002098	    0x488b3d000000	            mov rdi, qword [0x0400209f] 	       651	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11	CALL_10
0x400209f	        0x4d8d7701	                      lea r14, [r15 + 1]	       650	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10
0x40020a3	        0x4983c702	                              add r15, 2	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x40020a7	      0xe800000000	                          call 0x40020ac	       651	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11	CALL_10
0x40020ac	          0x83f80d	                            cmp eax, 0xd	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x40020af	        0x4d0f44f7	                          cmove r14, r15	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x40020b3	      0xe995fcffff	                           jmp 0x4001d4d	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x40020b8	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       652	listing.c	FUNCTION_9	WHILE_1	FOR_1	IF_8	IF_9	IF_10	IF_11
0x40020bd	    0x488b3d000000	            mov rdi, qword [0x040020c4] 	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x40020c4	      0xe800000000	                          call 0x40020c9	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x40020c9	          0x83f80a	                            cmp eax, 0xa	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x40020cc	     0xf8427ffffff	                            je 0x4001ff9	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x40020d2	    0x488b35000000	            mov rsi, qword [0x040020d9] 	       685	listing.c	FUNCTION_9	IF_13	CALL_15
0x40020d9	            0x89c7	                            mov edi, eax	       685	listing.c	FUNCTION_9	IF_13	CALL_15
0x40020db	      0xe800000000	                          call 0x40020e0	       685	listing.c	FUNCTION_9	IF_13	CALL_15
0x40020e0	      0xe914ffffff	                           jmp 0x4001ff9	       685	listing.c	FUNCTION_9	IF_13	CALL_15
0x40020e5	    0x41c7451c0100	               mov dword [r13 + 0x1c], 1	       589	listing.c	FUNCTION_9	IF_2	IF_4
0x40020ed	      0xe922ffffff	                           jmp 0x4002014	       589	listing.c	FUNCTION_9	IF_2	IF_4
0x40020f2	    0x488b3d000000	            mov rdi, qword [0x040020f9] 	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x40020f9	        0x88542448	               mov byte [rsp + 0x48], dl	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x40020fd	        0x884c2438	               mov byte [rsp + 0x38], cl	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x4002101	      0xe800000000	                          call 0x4002106	       681	listing.c	FUNCTION_9	IF_13	CALL_14
0x4002106	          0x83f80a	                            cmp eax, 0xa	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4002109	       0xfb6542448	           movzx edx, byte [rsp + 0x48] 	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x400210e	            0x7409	                            je 0x4002119	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4002110	       0xfb64c2438	           movzx ecx, byte [rsp + 0x38] 	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4002115	            0x84c9	                             test cl, cl	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4002117	            0x75b9	                           jne 0x40020d2	       683	listing.c	FUNCTION_9	IF_13	IF_14
0x4002119	          0x83f80d	                            cmp eax, 0xd	       684	listing.c	FUNCTION_9	IF_13	IF_14
0x400211c	     0xf84d7feffff	                            je 0x4001ff9	       684	listing.c	FUNCTION_9	IF_13	IF_14
0x4002122	            0x84d2	                             test dl, dl	       684	listing.c	FUNCTION_9	IF_13	IF_14
0x4002124	            0x75ac	                           jne 0x40020d2	       684	listing.c	FUNCTION_9	IF_13	IF_14
0x4002126	      0xe9cefeffff	                           jmp 0x4001ff9	       684	listing.c	FUNCTION_9	IF_13	IF_14
listing_source_line	WHILE,0:functions,0:CALL,0:DO,0:FOR,0:SWITCH,0:IF,0:ELSE,0	18
0x40023d0	    0x8b0500000000	            mov eax, dword [0x040023d6] 	      1583	listing.c	FUNCTION_29	IF_1
0x40023d6	            0x85c0	                           test eax, eax	      1583	listing.c	FUNCTION_29	IF_1
0x40023d8	            0x7506	                           jne 0x40023e0	      1583	listing.c	FUNCTION_29	IF_1
0x40023da	            0xf3c3	                                     ret	      1583	listing.c	FUNCTION_29	IF_1
0x40023dc	         0xf1f4000	                         nop dword [rax]	      1583	listing.c	FUNCTION_29	IF_1
0x40023e0	              0x53	                                push rbx	      1582	listing.c	FUNCTION_29
0x40023e1	            0x89fb	                            mov ebx, edi	      1582	listing.c	FUNCTION_29
0x40023e3	    0x488b3d000000	            mov rdi, qword [0x040023ea] 	       290	listing.c	FUNCTION_5	CALL_1
0x40023ea	      0xe800000000	                          call 0x40023ef	       290	listing.c	FUNCTION_5	CALL_1
0x40023ef	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x40023f1	      0xe800000000	                          call 0x40023f6	       291	listing.c	FUNCTION_5	CALL_2
0x40023f6	    0x488b05000000	            mov rax, qword [0x040023fd] 	      1586	listing.c	FUNCTION_29	IF_1
0x40023fd	    0x488b3d000000	            mov rdi, qword [0x04002404] 	       290	listing.c	FUNCTION_5	CALL_1
0x4002404	          0x895830	             mov dword [rax + 0x30], ebx	      1586	listing.c	FUNCTION_29	IF_1
0x4002407	      0xe800000000	                          call 0x400240c	       290	listing.c	FUNCTION_5	CALL_1
0x400240c	              0x5b	                                 pop rbx	      1589	listing.c	FUNCTION_29
0x400240d	            0x31ff	                            xor edi, edi	       291	listing.c	FUNCTION_5	CALL_2
0x400240f	      0xe900000000	                           jmp 0x4002414	       291	listing.c	FUNCTION_5	CALL_2
