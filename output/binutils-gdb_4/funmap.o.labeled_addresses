rl_funmap_names	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,3:FOR,1:WHILE,0:DO,0	100
0x40001e0	            0x4156	                                push r14	       242	funmap.c	FUNCTION_2
0x40001e2	            0x4155	                                push r13	       242	funmap.c	FUNCTION_2
0x40001e4	            0x4154	                                push r12	       242	funmap.c	FUNCTION_2
0x40001e6	              0x55	                                push rbp	       242	funmap.c	FUNCTION_2
0x40001e7	              0x53	                                push rbx	       242	funmap.c	FUNCTION_2
0x40001e8	        0x4883ec10	                           sub rsp, 0x10	       242	funmap.c	FUNCTION_2
0x40001ec	    0x8b0500000000	            mov eax, dword [0x040001f2] 	       227	funmap.c	FUNCTION_1	IF_1
0x40001f2	            0x85c0	                           test eax, eax	       227	funmap.c	FUNCTION_1	IF_1
0x40001f4	     0xf849e000000	                            je 0x4000298	       227	funmap.c	FUNCTION_1	IF_1
0x40001fa	    0x488b15000000	            mov rdx, qword [0x04000201] 	       249	funmap.c	FUNCTION_2	FOR_1
0x4000201	        0x48833a00	                      cmp qword [rdx], 0	       249	funmap.c	FUNCTION_2	FOR_1
0x4000205	            0x745e	                            je 0x4000265	       249	funmap.c	FUNCTION_2	FOR_1
0x4000207	      0xbd01000000	                              mov ebp, 1	       249	funmap.c	FUNCTION_2	FOR_1
0x400020c	            0x31db	                            xor ebx, ebx	       249	funmap.c	FUNCTION_2	FOR_1
0x400020e	          0x4531e4	                          xor r12d, r12d	       249	funmap.c	FUNCTION_2	FOR_1
0x4000211	            0x31c0	                            xor eax, eax	       249	funmap.c	FUNCTION_2	FOR_1
0x4000213	            0xeb2f	                           jmp 0x4000244	       249	funmap.c	FUNCTION_2	FOR_1
0x4000215	           0xf1f00	                         nop dword [rax]	       249	funmap.c	FUNCTION_2	FOR_1
0x4000218	        0x488b141a	              mov rdx, qword [rdx + rbx]	       257	funmap.c	FUNCTION_2	FOR_1
0x400021c	        0x488d4d01	                      lea rcx, [rbp + 1]	       257	funmap.c	FUNCTION_2	FOR_1
0x4000220	          0x488b12	                    mov rdx, qword [rdx]	       257	funmap.c	FUNCTION_2	FOR_1
0x4000223	        0x48891418	              mov qword [rax + rbx], rdx	       257	funmap.c	FUNCTION_2	FOR_1
0x4000227	    0x48c704e80000	              mov qword [rax + rbp*8], 0	       258	funmap.c	FUNCTION_2	FOR_1
0x400022f	        0x4883c308	                              add rbx, 8	       249	funmap.c	FUNCTION_2	FOR_1
0x4000233	    0x488b15000000	            mov rdx, qword [0x0400023a] 	       249	funmap.c	FUNCTION_2	FOR_1
0x400023a	      0x48833c1a00	                cmp qword [rdx + rbx], 0	       249	funmap.c	FUNCTION_2	FOR_1
0x400023f	            0x7428	                            je 0x4000269	       249	funmap.c	FUNCTION_2	FOR_1
0x4000241	          0x4889cd	                            mov rbp, rcx	       249	funmap.c	FUNCTION_2	FOR_1
0x4000244	          0x4139ec	                           cmp r12d, ebp	       251	funmap.c	FUNCTION_2	FOR_1	IF_1
0x4000247	            0x7fcf	                            jg 0x4000218	       251	funmap.c	FUNCTION_2	FOR_1	IF_1
0x4000249	        0x4183c414	                          add r12d, 0x14	       253	funmap.c	FUNCTION_2	FOR_1	IF_1
0x400024d	          0x4889c7	                            mov rdi, rax	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000250	          0x4963f4	                        movsxd rsi, r12d	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000253	        0x48c1e603	                              shl rsi, 3	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000257	      0xe800000000	                          call 0x400025c	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x400025c	    0x488b15000000	            mov rdx, qword [0x04000263] 	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000263	            0xebb3	                           jmp 0x4000218	       254	funmap.c	FUNCTION_2	FOR_1	IF_1	CALL_2
0x4000265	            0x31ed	                            xor ebp, ebp	       249	funmap.c	FUNCTION_2	FOR_1
0x4000267	            0x31c0	                            xor eax, eax	       249	funmap.c	FUNCTION_2	FOR_1
0x4000269	          0x4889ee	                            mov rsi, rbp	       261	funmap.c	FUNCTION_2	CALL_3
0x400026c	          0x4889c7	                            mov rdi, rax	       261	funmap.c	FUNCTION_2	CALL_3
0x400026f	      0xb900000000	                              mov ecx, 0	       261	funmap.c	FUNCTION_2	CALL_3
0x4000274	      0xba08000000	                              mov edx, 8	       261	funmap.c	FUNCTION_2	CALL_3
0x4000279	      0x4889442408	                mov qword [rsp + 8], rax	       261	funmap.c	FUNCTION_2	CALL_3
0x400027e	      0xe800000000	                          call 0x4000283	       261	funmap.c	FUNCTION_2	CALL_3
0x4000283	      0x488b442408	                mov rax, qword [rsp + 8]	       263	funmap.c	FUNCTION_2
0x4000288	        0x4883c410	                           add rsp, 0x10	       263	funmap.c	FUNCTION_2
0x400028c	              0x5b	                                 pop rbx	       263	funmap.c	FUNCTION_2
0x400028d	              0x5d	                                 pop rbp	       263	funmap.c	FUNCTION_2
0x400028e	            0x415c	                                 pop r12	       263	funmap.c	FUNCTION_2
0x4000290	            0x415d	                                 pop r13	       263	funmap.c	FUNCTION_2
0x4000292	            0x415e	                                 pop r14	       263	funmap.c	FUNCTION_2
0x4000294	              0xc3	                                     ret	       263	funmap.c	FUNCTION_2
0x4000295	           0xf1f00	                         nop dword [rax]	       263	funmap.c	FUNCTION_2
0x4000298	    0x8b1500000000	            mov edx, dword [0x0400029e] 	       263	funmap.c	FUNCTION_2
0x400029e	    0x41bc00000000	                             mov r12d, 0	       263	funmap.c	FUNCTION_2
0x40002a4	    0x41bd00000000	                             mov r13d, 0	       227	funmap.c	FUNCTION_1	IF_1
0x40002aa	            0x31db	                            xor ebx, ebx	       227	funmap.c	FUNCTION_1	IF_1
0x40002ac	            0xeb66	                           jmp 0x4000314	       227	funmap.c	FUNCTION_1	IF_1
0x40002ae	            0x6690	                                     nop	       227	funmap.c	FUNCTION_1	IF_1
0x40002b0	    0x488b05000000	            mov rax, qword [0x040002b7] 	       227	funmap.c	FUNCTION_1	IF_1
0x40002b7	          0x4863d2	                         movsxd rdx, edx	       211	funmap.c	CALL_6
0x40002ba	      0xbf10000000	                           mov edi, 0x10	       211	funmap.c	CALL_6
0x40002bf	        0x4983c410	                           add r12, 0x10	       211	funmap.c	CALL_6
0x40002c3	        0x4c8d34d0	                  lea r14, [rax + rdx*8]	       211	funmap.c	CALL_6
0x40002c7	          0x83c301	                              add ebx, 1	       230	funmap.c	FUNCTION_1	FOR_1
0x40002ca	      0xe800000000	                          call 0x40002cf	       211	funmap.c	CALL_6
0x40002cf	          0x498906	                    mov qword [r14], rax	       211	funmap.c	CALL_6
0x40002d2	    0x486305000000	         movsxd rax, dword [0x040002d9] 	       212	funmap.c	
0x40002d9	    0x488b0d000000	            mov rcx, qword [0x040002e0] 	       212	funmap.c	
0x40002e0	          0x4889c2	                            mov rdx, rax	       212	funmap.c	
0x40002e3	        0x48c1e003	                              shl rax, 3	       212	funmap.c	
0x40002e7	        0x488d3401	                    lea rsi, [rcx + rax]	       212	funmap.c	
0x40002eb	          0x83c201	                              add edx, 1	       215	funmap.c	
0x40002ee	    0x891500000000	            mov dword [0x040002f4], edx 	       215	funmap.c	
0x40002f4	          0x488b3e	                    mov rdi, qword [rsi]	       212	funmap.c	
0x40002f7	          0x4c892f	                    mov qword [rdi], r13	       212	funmap.c	
0x40002fa	          0x488b36	                    mov rsi, qword [rsi]	       213	funmap.c	
0x40002fd	        0x48896e08	                mov qword [rsi + 8], rbp	       213	funmap.c	
0x4000301	    0x48c744010800	            mov qword [rcx + rax + 8], 0	       215	funmap.c	
0x400030a	      0x4d8b6c24f8	                mov r13, qword [r12 - 8]	       230	funmap.c	FUNCTION_1	FOR_1
0x400030f	          0x4d85ed	                           test r13, r13	       230	funmap.c	FUNCTION_1	FOR_1
0x4000312	            0x743f	                            je 0x4000353	       230	funmap.c	FUNCTION_1	FOR_1
0x4000314	    0x8b3500000000	            mov esi, dword [0x0400031a] 	       205	funmap.c	IF_1
0x400031a	          0x8d4202	                      lea eax, [rdx + 2]	       205	funmap.c	IF_1
0x400031d	        0x498b2c24	                    mov rbp, qword [r12]	       231	funmap.c	FUNCTION_1	CALL_1
0x4000321	            0x39f0	                            cmp eax, esi	       205	funmap.c	IF_1
0x4000323	            0x7c8b	                            jl 0x40002b0	       205	funmap.c	IF_1
0x4000325	          0x83c640	                           add esi, 0x40	       207	funmap.c	IF_1
0x4000328	    0x488b3d000000	            mov rdi, qword [0x0400032f] 	       208	funmap.c	IF_1	CALL_5
0x400032f	    0x893500000000	            mov dword [0x04000335], esi 	       207	funmap.c	IF_1
0x4000335	          0x4863f6	                         movsxd rsi, esi	       208	funmap.c	IF_1	CALL_5
0x4000338	        0x48c1e603	                              shl rsi, 3	       208	funmap.c	IF_1	CALL_5
0x400033c	      0xe800000000	                          call 0x4000341	       208	funmap.c	IF_1	CALL_5
0x4000341	    0x8b1500000000	            mov edx, dword [0x04000347] 	       208	funmap.c	IF_1	CALL_5
0x4000347	    0x488905000000	            mov qword [0x0400034e], rax 	       208	funmap.c	IF_1	CALL_5
0x400034e	      0xe964ffffff	                           jmp 0x40002b7	       208	funmap.c	IF_1	CALL_5
0x4000353	    0xc70500000000	               mov dword [0x0400035d], 1	       233	funmap.c	FUNCTION_1
0x400035d	    0x891d00000000	            mov dword [0x04000363], ebx 	       234	funmap.c	FUNCTION_1
0x4000363	      0xe992feffff	                           jmp 0x40001fa	       234	funmap.c	FUNCTION_1
