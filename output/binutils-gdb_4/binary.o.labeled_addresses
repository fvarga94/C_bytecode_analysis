binary_canonicalize_symtab	FOR,1:DO,0:IF,1:CALL,4:functions,0:SWITCH,0:ELSE,0:WHILE,0	137
0x4000330	            0x4156	                                push r14	       150	binary.c	FUNCTION_6
0x4000332	            0x4155	                                push r13	       150	binary.c	FUNCTION_6
0x4000334	          0x4989fd	                            mov r13, rdi	       150	binary.c	FUNCTION_6
0x4000337	            0x4154	                                push r12	       150	binary.c	FUNCTION_6
0x4000339	              0x55	                                push rbp	       150	binary.c	FUNCTION_6
0x400033a	              0x53	                                push rbx	       150	binary.c	FUNCTION_6
0x400033b	          0x4889f3	                            mov rbx, rsi	       150	binary.c	FUNCTION_6
0x400033e	      0xbe90000000	                           mov esi, 0x90	       156	binary.c	FUNCTION_6	CALL_1
0x4000343	    0x488baff80000	            mov rbp, qword [rdi + 0xf8] 	       151	binary.c	FUNCTION_6
0x400034a	      0xe800000000	                          call 0x400034f	       156	binary.c	FUNCTION_6	CALL_1
0x400034f	          0x4885c0	                           test rax, rax	       157	binary.c	FUNCTION_6	IF_1
0x4000352	     0xf840c020000	                            je 0x4000564	       157	binary.c	FUNCTION_6	IF_1
0x4000358	        0x498b7d00	                    mov rdi, qword [r13]	       128	binary.c	FUNCTION_5	CALL_2
0x400035c	          0x4c8928	                    mov qword [rax], r13	       161	binary.c	FUNCTION_6
0x400035f	          0x4989c4	                            mov r12, rax	       161	binary.c	FUNCTION_6
0x4000362	      0xe800000000	                          call 0x4000367	       128	binary.c	FUNCTION_5	CALL_2
0x4000367	        0x488d700f	                    lea rsi, [rax + 0xf]	       132	binary.c	FUNCTION_5	CALL_4
0x400036b	          0x4c89ef	                            mov rdi, r13	       132	binary.c	FUNCTION_5	CALL_4
0x400036e	      0xe800000000	                          call 0x4000373	       132	binary.c	FUNCTION_5	CALL_4
0x4000373	          0x4989c6	                            mov r14, rax	       132	binary.c	FUNCTION_5	CALL_4
0x4000376	      0xb800000000	                              mov eax, 0	       134	binary.c	FUNCTION_5	IF_1
0x400037b	          0x4d85f6	                           test r14, r14	       133	binary.c	FUNCTION_5	IF_1
0x400037e	            0x744b	                            je 0x40003cb	       133	binary.c	FUNCTION_5	IF_1
0x4000380	        0x4d8b4500	                     mov r8, qword [r13]	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000384	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000386	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x400038c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000391	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000398	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x400039d	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_10	CALL_1
0x40003a0	      0xe800000000	                          call 0x40003a5	        33	stdio2.h	FUNCTION_10	CALL_1
0x40003a5	        0x410fb606	                   movzx eax, byte [r14]	       139	binary.c	FUNCTION_5	FOR_1
0x40003a9	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x40003ab	            0x741b	                            je 0x40003c8	       139	binary.c	FUNCTION_5	FOR_1
0x40003ad	          0x4c89f2	                            mov rdx, r14	       139	binary.c	FUNCTION_5	FOR_1
0x40003b0	    0xf68400000000	            test byte [rax + rax], 0x8c 	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40003b8	            0x7503	                           jne 0x40003bd	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40003ba	          0xc6025f	                    mov byte [rdx], 0x5f	       141	binary.c	FUNCTION_5	FOR_1	IF_2
0x40003bd	        0x4883c201	                              add rdx, 1	       139	binary.c	FUNCTION_5	FOR_1
0x40003c1	           0xfb602	                   movzx eax, byte [rdx]	       139	binary.c	FUNCTION_5	FOR_1
0x40003c4	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x40003c6	            0x75e8	                           jne 0x40003b0	       139	binary.c	FUNCTION_5	FOR_1
0x40003c8	          0x4c89f0	                            mov rax, r14	       139	binary.c	FUNCTION_5	FOR_1
0x40003cb	    0x49c744242800	               mov qword [r12 + 0x28], 0	       166	binary.c	FUNCTION_6
0x40003d4	        0x498b7d00	                    mov rdi, qword [r13]	       128	binary.c	FUNCTION_5	CALL_2
0x40003d8	      0x4989442408	                mov qword [r12 + 8], rax	       162	binary.c	FUNCTION_6	CALL_2
0x40003dd	    0x49c744241000	               mov qword [r12 + 0x10], 0	       163	binary.c	FUNCTION_6
0x40003e6	    0x41c744241802	               mov dword [r12 + 0x18], 2	       164	binary.c	FUNCTION_6
0x40003ef	      0x49896c2420	             mov qword [r12 + 0x20], rbp	       165	binary.c	FUNCTION_6
0x40003f4	      0x4d896c2430	             mov qword [r12 + 0x30], r13	       169	binary.c	FUNCTION_6
0x40003f9	      0xe800000000	                          call 0x40003fe	       128	binary.c	FUNCTION_5	CALL_2
0x40003fe	        0x488d700d	                    lea rsi, [rax + 0xd]	       132	binary.c	FUNCTION_5	CALL_4
0x4000402	          0x4c89ef	                            mov rdi, r13	       132	binary.c	FUNCTION_5	CALL_4
0x4000405	      0xe800000000	                          call 0x400040a	       132	binary.c	FUNCTION_5	CALL_4
0x400040a	          0x4989c6	                            mov r14, rax	       132	binary.c	FUNCTION_5	CALL_4
0x400040d	      0xb800000000	                              mov eax, 0	       134	binary.c	FUNCTION_5	IF_1
0x4000412	          0x4d85f6	                           test r14, r14	       133	binary.c	FUNCTION_5	IF_1
0x4000415	            0x7454	                            je 0x400046b	       133	binary.c	FUNCTION_5	IF_1
0x4000417	        0x4d8b4500	                     mov r8, qword [r13]	        33	stdio2.h	FUNCTION_10	CALL_1
0x400041b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x400041d	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000423	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000428	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_10	CALL_1
0x400042f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000434	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000437	      0xe800000000	                          call 0x400043c	        33	stdio2.h	FUNCTION_10	CALL_1
0x400043c	        0x410fb606	                   movzx eax, byte [r14]	       139	binary.c	FUNCTION_5	FOR_1
0x4000440	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x4000442	            0x7424	                            je 0x4000468	       139	binary.c	FUNCTION_5	FOR_1
0x4000444	          0x4c89f2	                            mov rdx, r14	       139	binary.c	FUNCTION_5	FOR_1
0x4000447	    0x660f1f840000	                    nop word [rax + rax]	       139	binary.c	FUNCTION_5	FOR_1
0x4000450	    0xf68400000000	            test byte [rax + rax], 0x8c 	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x4000458	            0x7503	                           jne 0x400045d	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x400045a	          0xc6025f	                    mov byte [rdx], 0x5f	       141	binary.c	FUNCTION_5	FOR_1	IF_2
0x400045d	        0x4883c201	                              add rdx, 1	       139	binary.c	FUNCTION_5	FOR_1
0x4000461	           0xfb602	                   movzx eax, byte [rdx]	       139	binary.c	FUNCTION_5	FOR_1
0x4000464	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x4000466	            0x75e8	                           jne 0x4000450	       139	binary.c	FUNCTION_5	FOR_1
0x4000468	          0x4c89f0	                            mov rax, r14	       139	binary.c	FUNCTION_5	FOR_1
0x400046b	      0x4989442438	             mov qword [r12 + 0x38], rax	       170	binary.c	FUNCTION_6	CALL_3
0x4000470	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       171	binary.c	FUNCTION_6
0x4000474	    0x49c744245800	               mov qword [r12 + 0x58], 0	       174	binary.c	FUNCTION_6
0x400047d	        0x498b7d00	                    mov rdi, qword [r13]	       128	binary.c	FUNCTION_5	CALL_2
0x4000481	    0x41c744244802	               mov dword [r12 + 0x48], 2	       172	binary.c	FUNCTION_6
0x400048a	      0x49896c2450	             mov qword [r12 + 0x50], rbp	       173	binary.c	FUNCTION_6
0x400048f	      0x4989442440	             mov qword [r12 + 0x40], rax	       171	binary.c	FUNCTION_6
0x4000494	      0x4d896c2460	             mov qword [r12 + 0x60], r13	       177	binary.c	FUNCTION_6
0x4000499	      0xe800000000	                          call 0x400049e	       128	binary.c	FUNCTION_5	CALL_2
0x400049e	        0x488d700e	                    lea rsi, [rax + 0xe]	       132	binary.c	FUNCTION_5	CALL_4
0x40004a2	          0x4c89ef	                            mov rdi, r13	       132	binary.c	FUNCTION_5	CALL_4
0x40004a5	      0xe800000000	                          call 0x40004aa	       132	binary.c	FUNCTION_5	CALL_4
0x40004aa	          0x4989c6	                            mov r14, rax	       132	binary.c	FUNCTION_5	CALL_4
0x40004ad	      0xb800000000	                              mov eax, 0	       134	binary.c	FUNCTION_5	IF_1
0x40004b2	          0x4d85f6	                           test r14, r14	       133	binary.c	FUNCTION_5	IF_1
0x40004b5	            0x7454	                            je 0x400050b	       133	binary.c	FUNCTION_5	IF_1
0x40004b7	        0x4d8b4500	                     mov r8, qword [r13]	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004bb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004bd	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004c3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004c8	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004cf	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004d4	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004d7	      0xe800000000	                          call 0x40004dc	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004dc	        0x410fb606	                   movzx eax, byte [r14]	       139	binary.c	FUNCTION_5	FOR_1
0x40004e0	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x40004e2	            0x7424	                            je 0x4000508	       139	binary.c	FUNCTION_5	FOR_1
0x40004e4	          0x4c89f2	                            mov rdx, r14	       139	binary.c	FUNCTION_5	FOR_1
0x40004e7	    0x660f1f840000	                    nop word [rax + rax]	       139	binary.c	FUNCTION_5	FOR_1
0x40004f0	    0xf68400000000	            test byte [rax + rax], 0x8c 	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40004f8	            0x7503	                           jne 0x40004fd	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40004fa	          0xc6025f	                    mov byte [rdx], 0x5f	       141	binary.c	FUNCTION_5	FOR_1	IF_2
0x40004fd	        0x4883c201	                              add rdx, 1	       139	binary.c	FUNCTION_5	FOR_1
0x4000501	           0xfb602	                   movzx eax, byte [rdx]	       139	binary.c	FUNCTION_5	FOR_1
0x4000504	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x4000506	            0x75e8	                           jne 0x40004f0	       139	binary.c	FUNCTION_5	FOR_1
0x4000508	          0x4c89f0	                            mov rax, r14	       139	binary.c	FUNCTION_5	FOR_1
0x400050b	      0x4989442468	             mov qword [r12 + 0x68], rax	       178	binary.c	FUNCTION_6	CALL_4
0x4000510	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       179	binary.c	FUNCTION_6
0x4000514	    0x41c744247802	               mov dword [r12 + 0x78], 2	       180	binary.c	FUNCTION_6
0x400051d	    0x49c784248000	               mov qword [r12 + 0x80], 0	       181	binary.c	FUNCTION_6
0x4000529	    0x49c784248800	               mov qword [r12 + 0x88], 0	       182	binary.c	FUNCTION_6
0x4000535	      0x4989442470	             mov qword [r12 + 0x70], rax	       179	binary.c	FUNCTION_6
0x400053a	      0x498d442430	                   lea rax, [r12 + 0x30]	       185	binary.c	FUNCTION_6	FOR_1
0x400053f	          0x4c8923	                    mov qword [rbx], r12	       185	binary.c	FUNCTION_6	FOR_1
0x4000542	        0x4983c460	                           add r12, 0x60	       185	binary.c	FUNCTION_6	FOR_1
0x4000546	    0x48c743180000	               mov qword [rbx + 0x18], 0	       186	binary.c	FUNCTION_6
0x400054e	        0x48894308	                mov qword [rbx + 8], rax	       185	binary.c	FUNCTION_6	FOR_1
0x4000552	        0x4c896310	             mov qword [rbx + 0x10], r12	       185	binary.c	FUNCTION_6	FOR_1
0x4000556	      0xb803000000	                              mov eax, 3	       188	binary.c	FUNCTION_6
0x400055b	              0x5b	                                 pop rbx	       189	binary.c	FUNCTION_6
0x400055c	              0x5d	                                 pop rbp	       189	binary.c	FUNCTION_6
0x400055d	            0x415c	                                 pop r12	       189	binary.c	FUNCTION_6
0x400055f	            0x415d	                                 pop r13	       189	binary.c	FUNCTION_6
0x4000561	            0x415e	                                 pop r14	       189	binary.c	FUNCTION_6
0x4000563	              0xc3	                                     ret	       189	binary.c	FUNCTION_6
0x4000564	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       158	binary.c	FUNCTION_6	IF_1
0x400056b	            0xebee	                           jmp 0x400055b	       158	binary.c	FUNCTION_6	IF_1
binary_object_p	FOR,0:DO,0:IF,3:CALL,4:functions,0:SWITCH,0:ELSE,0:WHILE,0	45
0x4000080	              0x53	                                push rbx	        58	binary.c	FUNCTION_2
0x4000081	    0x4881eca00000	                           sub rsp, 0xa0	        58	binary.c	FUNCTION_2
0x4000088	    0x64488b042528	                mov rax, qword fs:[0x28]	        58	binary.c	FUNCTION_2
0x4000091	    0x488984249800	             mov qword [rsp + 0x98], rax	        58	binary.c	FUNCTION_2
0x4000099	            0x31c0	                            xor eax, eax	        58	binary.c	FUNCTION_2
0x400009b	        0xf6474704	               test byte [rdi + 0x47], 4	        63	binary.c	FUNCTION_2	IF_1
0x400009f	            0x7577	                           jne 0x4000118	        63	binary.c	FUNCTION_2	IF_1
0x40000a1	    0xc787b8000000	               mov dword [rdi + 0xb8], 3	        69	binary.c	FUNCTION_2
0x40000ab	          0x4889e6	                            mov rsi, rsp	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40000ae	          0x4889fb	                            mov rbx, rdi	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40000b1	      0xe800000000	                          call 0x40000b6	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40000b6	            0x85c0	                           test eax, eax	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40000b8	            0x7876	                            js 0x4000130	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40000ba	      0xba23010000	                          mov edx, 0x123	        80	binary.c	FUNCTION_2	CALL_4
0x40000bf	      0xbe00000000	                              mov esi, 0	        80	binary.c	FUNCTION_2	CALL_4
0x40000c4	          0x4889df	                            mov rdi, rbx	        80	binary.c	FUNCTION_2	CALL_4
0x40000c7	      0xe800000000	                          call 0x40000cc	        80	binary.c	FUNCTION_2	CALL_4
0x40000cc	          0x4885c0	                           test rax, rax	        81	binary.c	FUNCTION_2	IF_3
0x40000cf	            0x746f	                            je 0x4000140	        81	binary.c	FUNCTION_2	IF_3
0x40000d1	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        84	binary.c	FUNCTION_2
0x40000d6	    0x48c740280000	               mov qword [rax + 0x28], 0	        83	binary.c	FUNCTION_2
0x40000de	    0x48c780900000	               mov qword [rax + 0x90], 0	        85	binary.c	FUNCTION_2
0x40000e9	        0x48895038	             mov qword [rax + 0x38], rdx	        84	binary.c	FUNCTION_2
0x40000ed	    0x488983f80000	             mov qword [rbx + 0xf8], rax	        87	binary.c	FUNCTION_2
0x40000f4	        0x488b4308	                mov rax, qword [rbx + 8]	        89	binary.c	FUNCTION_2
0x40000f8	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	        90	binary.c	FUNCTION_2
0x4000100	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        90	binary.c	FUNCTION_2
0x4000109	            0x7539	                           jne 0x4000144	        90	binary.c	FUNCTION_2
0x400010b	    0x4881c4a00000	                           add rsp, 0xa0	        90	binary.c	FUNCTION_2
0x4000112	              0x5b	                                 pop rbx	        90	binary.c	FUNCTION_2
0x4000113	              0xc3	                                     ret	        90	binary.c	FUNCTION_2
0x4000114	         0xf1f4000	                         nop dword [rax]	        90	binary.c	FUNCTION_2
0x4000118	      0xbf03000000	                              mov edi, 3	        65	binary.c	FUNCTION_2	IF_1	CALL_1
0x400011d	      0xe800000000	                          call 0x4000122	        65	binary.c	FUNCTION_2	IF_1	CALL_1
0x4000122	            0x31c0	                            xor eax, eax	        66	binary.c	FUNCTION_2	IF_1
0x4000124	            0xebd2	                           jmp 0x40000f8	        66	binary.c	FUNCTION_2	IF_1
0x4000126	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        66	binary.c	FUNCTION_2	IF_1
0x4000130	      0xbf01000000	                              mov edi, 1	        74	binary.c	FUNCTION_2	IF_2	CALL_3
0x4000135	      0xe800000000	                          call 0x400013a	        74	binary.c	FUNCTION_2	IF_2	CALL_3
0x400013a	            0x31c0	                            xor eax, eax	        75	binary.c	FUNCTION_2	IF_2
0x400013c	            0xebba	                           jmp 0x40000f8	        75	binary.c	FUNCTION_2	IF_2
0x400013e	            0x6690	                                     nop	        75	binary.c	FUNCTION_2	IF_2
0x4000140	            0x31c0	                            xor eax, eax	        82	binary.c	FUNCTION_2	IF_3
0x4000142	            0xebb4	                           jmp 0x40000f8	        82	binary.c	FUNCTION_2	IF_3
0x4000144	      0xe800000000	                          call 0x4000149	        90	binary.c	FUNCTION_2
binary_mkobject	FOR,0:DO,0:IF,0:CALL,0:functions,0:SWITCH,0:ELSE,0:WHILE,0	2
0x4000040	      0xb801000000	                              mov eax, 1	        50	binary.c	FUNCTION_1
0x4000045	              0xc3	                                     ret	        50	binary.c	FUNCTION_1
binary_get_symtab_upper_bound	FOR,0:DO,0:IF,0:CALL,0:functions,0:SWITCH,0:ELSE,0:WHILE,0	2
0x4000050	      0xb820000000	                           mov eax, 0x20	       117	binary.c	FUNCTION_4
0x4000055	              0xc3	                                     ret	       117	binary.c	FUNCTION_4
binary_sizeof_headers	FOR,0:DO,0:IF,0:CALL,0:functions,0:SWITCH,0:ELSE,0:WHILE,0	2
0x4000060	            0x31c0	                            xor eax, eax	       302	binary.c	FUNCTION_9
0x4000062	              0xc3	                                     ret	       302	binary.c	FUNCTION_9
binary_get_symbol_info	FOR,0:DO,0:IF,0:CALL,1:functions,0:SWITCH,0:ELSE,0:WHILE,0	3
0x4000070	          0x4889f7	                            mov rdi, rsi	       202	binary.c	FUNCTION_7
0x4000073	          0x4889d6	                            mov rsi, rdx	       203	binary.c	FUNCTION_7	CALL_1
0x4000076	      0xe900000000	                           jmp 0x400007b	       203	binary.c	FUNCTION_7	CALL_1
