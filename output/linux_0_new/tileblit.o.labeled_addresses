tile_update_start	DO,0:FOR,0:functions,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:IF,0	15
0x4000260	              0x55	                                push rbp	       120	tileblit.c	FUNCTION_6
0x4000261	    0x488baf480300	           mov rbp, qword [rdi + 0x348] 	       121	tileblit.c	FUNCTION_6
0x4000268	              0x53	                                push rbx	       120	tileblit.c	FUNCTION_6
0x4000269	          0x4889fb	                            mov rbx, rdi	       120	tileblit.c	FUNCTION_6
0x400026c	        0x488d7538	                   lea rsi, [rbp + 0x38]	       124	tileblit.c	FUNCTION_6	CALL_1
0x4000270	      0xe800000000	                          call 0x4000275	       124	tileblit.c	FUNCTION_6	CALL_1
0x4000275	          0x8b5360	            mov edx, dword [rbx + 0x60] 	       125	tileblit.c	FUNCTION_6
0x4000278	          0x895548	            mov dword [rbp + 0x48], edx 	       125	tileblit.c	FUNCTION_6
0x400027b	          0x8b5364	            mov edx, dword [rbx + 0x64] 	       126	tileblit.c	FUNCTION_6
0x400027e	          0x89554c	            mov dword [rbp + 0x4c], edx 	       126	tileblit.c	FUNCTION_6
0x4000281	    0x8b93d4000000	            mov edx, dword [rbx + 0xd4] 	       127	tileblit.c	FUNCTION_6
0x4000287	    0x8995bc000000	            mov dword [rbp + 0xbc], edx 	       127	tileblit.c	FUNCTION_6
0x400028d	              0x5b	                                 pop rbx	       129	tileblit.c	FUNCTION_6
0x400028e	              0x5d	                                 pop rbp	       129	tileblit.c	FUNCTION_6
0x400028f	              0xc3	                                     ret	       129	tileblit.c	FUNCTION_6
tile_clear	DO,0:FOR,0:functions,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:IF,0	112
0x4000370	              0x55	                                push rbp	        36	tileblit.c	FUNCTION_2
0x4000371	              0x53	                                push rbx	        36	tileblit.c	FUNCTION_2
0x4000372	          0x4989f2	                            mov r10, rsi	        36	tileblit.c	FUNCTION_2
0x4000375	            0x89cb	                            mov ebx, ecx	        36	tileblit.c	FUNCTION_2
0x4000377	        0x4883ec28	                           sub rsp, 0x28	        36	tileblit.c	FUNCTION_2
0x400037b	    0x65488b042528	                mov rax, qword gs:[0x28]	        36	tileblit.c	FUNCTION_2
0x4000384	      0x4889442420	             mov qword [rsp + 0x20], rax	        36	tileblit.c	FUNCTION_2
0x4000389	            0x31c0	                            xor eax, eax	        36	tileblit.c	FUNCTION_2
0x400038b	    0x6683bfd80100	               cmp word [rdi + 0x1d8], 0	        38	tileblit.c	FUNCTION_2
0x4000393	     0xf8407010000	                            je 0x40004a0	        38	tileblit.c	FUNCTION_2
0x4000399	     0xfb787f80100	          movzx eax, word [rdi + 0x1f8] 	        41	tileblit.c	FUNCTION_2
0x40003a0	      0xbeff010000	                          mov esi, 0x1ff	        42	tileblit.c	FUNCTION_2
0x40003a5	      0xb909000000	                              mov ecx, 9	        39	tileblit.c	FUNCTION_2
0x40003aa	      0xbd0d000000	                            mov ebp, 0xd	        38	tileblit.c	FUNCTION_2
0x40003af	            0x21c6	                            and esi, eax	        41	tileblit.c	FUNCTION_2
0x40003b1	          0x4885ff	                           test rdi, rdi	       127	fbcon.h	FUNCTION_9	IF_1
0x40003b4	          0x4189c3	                           mov r11d, eax	        41	tileblit.c	FUNCTION_2
0x40003b7	        0x89742410	             mov dword [rsp + 0x10], esi	        41	tileblit.c	FUNCTION_2
0x40003bb	     0xf8407010000	                            je 0x40004c8	       127	fbcon.h	FUNCTION_9	IF_1
0x40003c1	     0xfb6b77a0200	          movzx esi, byte [rdi + 0x27a] 	       130	fbcon.h	FUNCTION_9	IF_2
0x40003c8	    0x81e680000000	                           and esi, 0x80	       130	fbcon.h	FUNCTION_9	IF_2
0x40003ce	     0xf8500010000	                           jne 0x40004d4	       130	fbcon.h	FUNCTION_9	IF_2
0x40003d4	          0x4d85d2	                           test r10, r10	       134	fbcon.h	FUNCTION_9	IF_3
0x40003d7	     0xf8436010000	                            je 0x4000513	       134	fbcon.h	FUNCTION_9	IF_3
0x40003dd	    0x418bb2800000	            mov esi, dword [r10 + 0x80] 	       116	fbcon.h	FUNCTION_8
0x40003e4	        0x41397274	            cmp dword [r10 + 0x74], esi 	       116	fbcon.h	FUNCTION_8
0x40003e8	      0xb8ff0f0000	                          mov eax, 0xfff	       116	fbcon.h	FUNCTION_8
0x40003ed	    0x418baa8c0000	            mov ebp, dword [r10 + 0x8c] 	       116	fbcon.h	FUNCTION_8
0x40003f4	            0x89f1	                            mov ecx, esi	       116	fbcon.h	FUNCTION_8
0x40003f6	      0x410f434a74	          cmovae ecx, dword [r10 + 0x74]	       116	fbcon.h	FUNCTION_8
0x40003fb	            0x39e9	                            cmp ecx, ebp	       116	fbcon.h	FUNCTION_8
0x40003fd	           0xf42cd	                          cmovb ecx, ebp	       116	fbcon.h	FUNCTION_8
0x4000400	            0xd3e0	                             shl eax, cl	       116	fbcon.h	FUNCTION_8
0x4000402	    0x6641f7c30008	                        test r11w, 0x800	       140	fbcon.h	FUNCTION_9	IF_4
0x4000408	            0xf7d0	                                 not eax	       116	fbcon.h	FUNCTION_8
0x400040a	           0xfb6f8	                           movzx edi, al	       116	fbcon.h	FUNCTION_8
0x400040d	    0x418b82140100	           mov eax, dword [r10 + 0x114] 	       138	fbcon.h	FUNCTION_9
0x4000414	     0xf84ef000000	                            je 0x4000509	       140	fbcon.h	FUNCTION_9	IF_4
0x400041a	            0x85c0	                           test eax, eax	       141	fbcon.h	FUNCTION_9	IF_4
0x400041c	      0xb900000000	                              mov ecx, 0	       141	fbcon.h	FUNCTION_9	IF_4
0x4000421	           0xf45f9	                         cmovne edi, ecx	       141	fbcon.h	FUNCTION_9	IF_4
0x4000424	        0x897c2414	             mov dword [rsp + 0x14], edi	        43	tileblit.c	FUNCTION_2
0x4000428	        0x41397274	            cmp dword [r10 + 0x74], esi 	       116	fbcon.h	FUNCTION_8
0x400042c	            0x89e9	                            mov ecx, ebp	       116	fbcon.h	FUNCTION_8
0x400042e	      0x410f437274	          cmovae esi, dword [r10 + 0x74]	       116	fbcon.h	FUNCTION_8
0x4000433	            0x39ee	                            cmp esi, ebp	       116	fbcon.h	FUNCTION_8
0x4000435	           0xf43ce	                         cmovae ecx, esi	       116	fbcon.h	FUNCTION_8
0x4000438	      0xbeff0f0000	                          mov esi, 0xfff	       116	fbcon.h	FUNCTION_8
0x400043d	            0xd3e6	                             shl esi, cl	       116	fbcon.h	FUNCTION_8
0x400043f	    0x6641f7c30008	                        test r11w, 0x800	       140	fbcon.h	FUNCTION_9	IF_4
0x4000445	            0xf7d6	                                 not esi	       116	fbcon.h	FUNCTION_8
0x4000447	        0x400fb6f6	                          movzx esi, sil	       116	fbcon.h	FUNCTION_8
0x400044b	     0xf84a9000000	                            je 0x40004fa	       140	fbcon.h	FUNCTION_9	IF_4
0x4000451	            0x85c0	                           test eax, eax	       140	fbcon.h	FUNCTION_9	IF_4
0x4000453	           0xf45c6	                         cmovne eax, esi	       140	fbcon.h	FUNCTION_9	IF_4
0x4000456	        0x89442418	             mov dword [rsp + 0x18], eax	        44	tileblit.c	FUNCTION_2
0x400045a	    0x498b82200300	           mov rax, qword [r10 + 0x320] 	        51	tileblit.c	FUNCTION_2	CALL_1
0x4000461	          0x4889e6	                            mov rsi, rsp	        51	tileblit.c	FUNCTION_2	CALL_1
0x4000464	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	        49	tileblit.c	FUNCTION_2
0x400046c	          0x891c24	                    mov dword [rsp], ebx	        45	tileblit.c	FUNCTION_2
0x400046f	          0x4c89d7	                            mov rdi, r10	        51	tileblit.c	FUNCTION_2	CALL_1
0x4000472	        0x89542404	                mov dword [rsp + 4], edx	        46	tileblit.c	FUNCTION_2
0x4000476	      0x44894c2408	                mov dword [rsp + 8], r9d	        47	tileblit.c	FUNCTION_2
0x400047b	        0x488b4010	            mov rax, qword [rax + 0x10] 	        51	tileblit.c	FUNCTION_2	CALL_1
0x400047f	      0x448944240c	              mov dword [rsp + 0xc], r8d	        48	tileblit.c	FUNCTION_2
0x4000484	      0xe800000000	                          call 0x4000489	        51	tileblit.c	FUNCTION_2	CALL_1
0x4000489	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        52	tileblit.c	FUNCTION_2
0x400048e	    0x654833042528	                xor rax, qword gs:[0x28]	        52	tileblit.c	FUNCTION_2
0x4000497	            0x757e	                           jne 0x4000517	        52	tileblit.c	FUNCTION_2
0x4000499	        0x4883c428	                           add rsp, 0x28	        52	tileblit.c	FUNCTION_2
0x400049d	              0x5b	                                 pop rbx	        52	tileblit.c	FUNCTION_2
0x400049e	              0x5d	                                 pop rbp	        52	tileblit.c	FUNCTION_2
0x400049f	              0xc3	                                     ret	        52	tileblit.c	FUNCTION_2
0x40004a0	     0xfb787f80100	          movzx eax, word [rdi + 0x1f8] 	        41	tileblit.c	FUNCTION_2
0x40004a7	      0xbeff000000	                           mov esi, 0xff	        42	tileblit.c	FUNCTION_2
0x40004ac	      0xb908000000	                              mov ecx, 8	        39	tileblit.c	FUNCTION_2
0x40004b1	      0xbd0c000000	                            mov ebp, 0xc	        38	tileblit.c	FUNCTION_2
0x40004b6	            0x21c6	                            and esi, eax	        41	tileblit.c	FUNCTION_2
0x40004b8	          0x4885ff	                           test rdi, rdi	       127	fbcon.h	FUNCTION_9	IF_1
0x40004bb	          0x4189c3	                           mov r11d, eax	        41	tileblit.c	FUNCTION_2
0x40004be	        0x89742410	             mov dword [rsp + 0x10], esi	        41	tileblit.c	FUNCTION_2
0x40004c2	     0xf85f9feffff	                           jne 0x40003c1	       127	fbcon.h	FUNCTION_9	IF_1
0x40004c8	    0xc74424140000	               mov dword [rsp + 0x14], 0	        43	tileblit.c	FUNCTION_2
0x40004d0	            0x31c0	                            xor eax, eax	        43	tileblit.c	FUNCTION_2
0x40004d2	            0xeb82	                           jmp 0x4000456	        43	tileblit.c	FUNCTION_2
0x40004d4	            0x89c7	                            mov edi, eax	        43	tileblit.c	FUNCTION_2
0x40004d6	            0xd3ff	                             sar edi, cl	        43	tileblit.c	FUNCTION_2
0x40004d8	            0x89f9	                            mov ecx, edi	        43	tileblit.c	FUNCTION_2
0x40004da	          0x83e10f	                            and ecx, 0xf	        43	tileblit.c	FUNCTION_2
0x40004dd	        0x894c2414	             mov dword [rsp + 0x14], ecx	        43	tileblit.c	FUNCTION_2
0x40004e1	            0x89e9	                            mov ecx, ebp	        43	tileblit.c	FUNCTION_2
0x40004e3	            0xd3f8	                             sar eax, cl	        43	tileblit.c	FUNCTION_2
0x40004e5	          0x4084f6	                           test sil, sil	       130	fbcon.h	FUNCTION_9	IF_2
0x40004e8	     0xf8568ffffff	                           jne 0x4000456	       130	fbcon.h	FUNCTION_9	IF_2
0x40004ee	          0x4d85d2	                           test r10, r10	       134	fbcon.h	FUNCTION_9	IF_3
0x40004f1	            0x7529	                           jne 0x400051c	       134	fbcon.h	FUNCTION_9	IF_3
0x40004f3	            0x31c0	                            xor eax, eax	       134	fbcon.h	FUNCTION_9	IF_3
0x40004f5	      0xe95cffffff	                           jmp 0x4000456	       134	fbcon.h	FUNCTION_9	IF_3
0x40004fa	            0x85c0	                           test eax, eax	       134	fbcon.h	FUNCTION_9	IF_3
0x40004fc	      0xb800000000	                              mov eax, 0	       134	fbcon.h	FUNCTION_9	IF_3
0x4000501	           0xf44c6	                          cmove eax, esi	       134	fbcon.h	FUNCTION_9	IF_3
0x4000504	      0xe94dffffff	                           jmp 0x4000456	       134	fbcon.h	FUNCTION_9	IF_3
0x4000509	            0x85c0	                           test eax, eax	       134	fbcon.h	FUNCTION_9	IF_3
0x400050b	           0xf44f8	                          cmove edi, eax	       134	fbcon.h	FUNCTION_9	IF_3
0x400050e	      0xe911ffffff	                           jmp 0x4000424	       134	fbcon.h	FUNCTION_9	IF_3
0x4000513	            0x31c9	                            xor ecx, ecx	       134	fbcon.h	FUNCTION_9	IF_3
0x4000515	            0xebc6	                           jmp 0x40004dd	       134	fbcon.h	FUNCTION_9	IF_3
0x4000517	      0xe800000000	                          call 0x400051c	        52	tileblit.c	FUNCTION_2
0x400051c	    0x418bb2800000	            mov esi, dword [r10 + 0x80] 	        52	tileblit.c	FUNCTION_2
0x4000523	    0x418baa8c0000	            mov ebp, dword [r10 + 0x8c] 	        52	tileblit.c	FUNCTION_2
0x400052a	    0x418b82140100	           mov eax, dword [r10 + 0x114] 	        52	tileblit.c	FUNCTION_2
0x4000531	      0xe9f2feffff	                           jmp 0x4000428	        52	tileblit.c	FUNCTION_2
tile_clear_margins	DO,0:FOR,0:functions,0:CALL,0:ELSE,0:WHILE,0:SWITCH,0:IF,0	1
0x40000b0	            0xf3c3	                                     ret	        78	tileblit.c	FUNCTION_4
tile_bmove	DO,0:FOR,0:functions,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:IF,0	23
0x4000040	        0x4883ec20	                           sub rsp, 0x20	        21	tileblit.c	FUNCTION_1
0x4000044	          0x4889f7	                            mov rdi, rsi	        21	tileblit.c	FUNCTION_1
0x4000047	    0x65488b042528	                mov rax, qword gs:[0x28]	        21	tileblit.c	FUNCTION_1
0x4000050	      0x4889442418	             mov qword [rsp + 0x18], rax	        21	tileblit.c	FUNCTION_1
0x4000055	            0x31c0	                            xor eax, eax	        21	tileblit.c	FUNCTION_1
0x4000057	        0x8b442428	            mov eax, dword [rsp + 0x28] 	        28	tileblit.c	FUNCTION_1
0x400005b	      0x44894c2408	                mov dword [rsp + 8], r9d	        26	tileblit.c	FUNCTION_1
0x4000060	      0x448944240c	              mov dword [rsp + 0xc], r8d	        27	tileblit.c	FUNCTION_1
0x4000065	          0x890c24	                    mov dword [rsp], ecx	        24	tileblit.c	FUNCTION_1
0x4000068	        0x89542404	                mov dword [rsp + 4], edx	        25	tileblit.c	FUNCTION_1
0x400006c	        0x89442414	             mov dword [rsp + 0x14], eax	        28	tileblit.c	FUNCTION_1
0x4000070	        0x8b442430	            mov eax, dword [rsp + 0x30] 	        29	tileblit.c	FUNCTION_1
0x4000074	        0x89442410	             mov dword [rsp + 0x10], eax	        29	tileblit.c	FUNCTION_1
0x4000078	    0x488b86200300	           mov rax, qword [rsi + 0x320] 	        31	tileblit.c	FUNCTION_1	CALL_1
0x400007f	          0x4889e6	                            mov rsi, rsp	        31	tileblit.c	FUNCTION_1	CALL_1
0x4000082	        0x488b4008	                mov rax, qword [rax + 8]	        31	tileblit.c	FUNCTION_1	CALL_1
0x4000086	      0xe800000000	                          call 0x400008b	        31	tileblit.c	FUNCTION_1	CALL_1
0x400008b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        32	tileblit.c	FUNCTION_1
0x4000090	    0x654833042528	                xor rax, qword gs:[0x28]	        32	tileblit.c	FUNCTION_1
0x4000099	            0x7505	                           jne 0x40000a0	        32	tileblit.c	FUNCTION_1
0x400009b	        0x4883c420	                           add rsp, 0x20	        32	tileblit.c	FUNCTION_1
0x400009f	              0xc3	                                     ret	        32	tileblit.c	FUNCTION_1
0x40000a0	      0xe800000000	                          call 0x40000a5	        32	tileblit.c	FUNCTION_1
tile_putcs	DO,0:FOR,1:functions,0:CALL,3:ELSE,0:WHILE,0:SWITCH,0:IF,0	56
0x4000290	            0x4155	                                push r13	        57	tileblit.c	FUNCTION_3
0x4000292	            0x4154	                                push r12	        57	tileblit.c	FUNCTION_3
0x4000294	          0x4989f4	                            mov r12, rsi	        57	tileblit.c	FUNCTION_3
0x4000297	              0x55	                                push rbp	        57	tileblit.c	FUNCTION_3
0x4000298	              0x53	                                push rbx	        57	tileblit.c	FUNCTION_3
0x4000299	          0x4889d5	                            mov rbp, rdx	        57	tileblit.c	FUNCTION_3
0x400029c	    0x8d148d000000	                        lea edx, [rcx*4]	        69	tileblit.c	FUNCTION_3	CALL_1
0x40002a3	          0x4189cd	                           mov r13d, ecx	        57	tileblit.c	FUNCTION_3
0x40002a6	        0x4883ec30	                           sub rsp, 0x30	        57	tileblit.c	FUNCTION_3
0x40002aa	    0x65488b042528	                mov rax, qword gs:[0x28]	        57	tileblit.c	FUNCTION_3
0x40002b3	      0x4889442428	             mov qword [rsp + 0x28], rax	        57	tileblit.c	FUNCTION_3
0x40002b8	            0x31c0	                            xor eax, eax	        57	tileblit.c	FUNCTION_3
0x40002ba	    0x6683bfd80100	               cmp word [rdi + 0x1d8], 1	        59	tileblit.c	FUNCTION_3
0x40002c2	        0x8b442458	            mov eax, dword [rsp + 0x58] 	        66	tileblit.c	FUNCTION_3
0x40002c6	          0x4c89e7	                            mov rdi, r12	        69	tileblit.c	FUNCTION_3	CALL_1
0x40002c9	        0x44890c24	                    mov dword [rsp], r9d	        62	tileblit.c	FUNCTION_3
0x40002cd	      0x4489442404	                mov dword [rsp + 4], r8d	        63	tileblit.c	FUNCTION_3
0x40002d2	        0x894c2408	                mov dword [rsp + 8], ecx	        64	tileblit.c	FUNCTION_3
0x40002d6	    0xc744240c0100	                mov dword [rsp + 0xc], 1	        65	tileblit.c	FUNCTION_3
0x40002de	        0x89442410	             mov dword [rsp + 0x10], eax	        66	tileblit.c	FUNCTION_3
0x40002e2	        0x8b442460	            mov eax, dword [rsp + 0x60] 	        67	tileblit.c	FUNCTION_3
0x40002e6	            0x19db	                            sbb ebx, ebx	        59	tileblit.c	FUNCTION_3
0x40002e8	    0x4881c6f00100	                          add rsi, 0x1f0	        69	tileblit.c	FUNCTION_3	CALL_1
0x40002ef	        0x894c2418	             mov dword [rsp + 0x18], ecx	        68	tileblit.c	FUNCTION_3
0x40002f3	            0x30db	                              xor bl, bl	        59	tileblit.c	FUNCTION_3
0x40002f5	      0x6681c3ff01	                           add bx, 0x1ff	        59	tileblit.c	FUNCTION_3
0x40002fa	        0x89442414	             mov dword [rsp + 0x14], eax	        67	tileblit.c	FUNCTION_3
0x40002fe	      0xe800000000	                          call 0x4000303	        69	tileblit.c	FUNCTION_3	CALL_1
0x4000303	          0x4585ed	                         test r13d, r13d	        70	tileblit.c	FUNCTION_3	FOR_1
0x4000306	      0x4889442420	             mov qword [rsp + 0x20], rax	        69	tileblit.c	FUNCTION_3	CALL_1
0x400030b	            0x7e1f	                           jle 0x400032c	        70	tileblit.c	FUNCTION_3	FOR_1
0x400030d	            0x31d2	                            xor edx, edx	        70	tileblit.c	FUNCTION_3	FOR_1
0x400030f	            0xeb05	                           jmp 0x4000316	        70	tileblit.c	FUNCTION_3	FOR_1
0x4000311	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        70	tileblit.c	FUNCTION_3	FOR_1
0x4000316	            0x89de	                            mov esi, ebx	        71	tileblit.c	FUNCTION_3	CALL_2
0x4000318	      0x6623745500	              and si, word [rbp + rdx*2]	        71	tileblit.c	FUNCTION_3	CALL_2
0x400031d	           0xfb7f6	                           movzx esi, si	        71	tileblit.c	FUNCTION_3	CALL_2
0x4000320	          0x893490	            mov dword [rax + rdx*4], esi	        71	tileblit.c	FUNCTION_3	CALL_2
0x4000323	        0x4883c201	                              add rdx, 1	        71	tileblit.c	FUNCTION_3	CALL_2
0x4000327	          0x4139d5	                           cmp r13d, edx	        70	tileblit.c	FUNCTION_3	FOR_1
0x400032a	            0x7fe5	                            jg 0x4000311	        70	tileblit.c	FUNCTION_3	FOR_1
0x400032c	    0x498b84242003	           mov rax, qword [r12 + 0x320] 	        73	tileblit.c	FUNCTION_3	CALL_3
0x4000334	          0x4889e6	                            mov rsi, rsp	        73	tileblit.c	FUNCTION_3	CALL_3
0x4000337	          0x4c89e7	                            mov rdi, r12	        73	tileblit.c	FUNCTION_3	CALL_3
0x400033a	        0x488b4018	            mov rax, qword [rax + 0x18] 	        73	tileblit.c	FUNCTION_3	CALL_3
0x400033e	      0xe800000000	                          call 0x4000343	        73	tileblit.c	FUNCTION_3	CALL_3
0x4000343	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        74	tileblit.c	FUNCTION_3
0x4000348	    0x654833042528	                xor rax, qword gs:[0x28]	        74	tileblit.c	FUNCTION_3
0x4000351	            0x750b	                           jne 0x400035e	        74	tileblit.c	FUNCTION_3
0x4000353	        0x4883c430	                           add rsp, 0x30	        74	tileblit.c	FUNCTION_3
0x4000357	              0x5b	                                 pop rbx	        74	tileblit.c	FUNCTION_3
0x4000358	              0x5d	                                 pop rbp	        74	tileblit.c	FUNCTION_3
0x4000359	            0x415c	                                 pop r12	        74	tileblit.c	FUNCTION_3
0x400035b	            0x415d	                                 pop r13	        74	tileblit.c	FUNCTION_3
0x400035d	              0xc3	                                     ret	        74	tileblit.c	FUNCTION_3
0x400035e	      0xe800000000	                          call 0x4000363	        74	tileblit.c	FUNCTION_3
fbcon_set_tileops	DO,0:FOR,0:functions,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:IF,1	41
0x4000190	        0x4883ec20	                           sub rsp, 0x20	       132	tileblit.c	FUNCTION_7
0x4000194	    0x65488b042528	                mov rax, qword gs:[0x28]	       132	tileblit.c	FUNCTION_7
0x400019d	      0x4889442418	             mov qword [rsp + 0x18], rax	       132	tileblit.c	FUNCTION_7
0x40001a2	            0x31c0	                            xor eax, eax	       132	tileblit.c	FUNCTION_7
0x40001a4	    0x488b86480300	           mov rax, qword [rsi + 0x348] 	       134	tileblit.c	FUNCTION_7
0x40001ab	    0x48c700000000	                      mov qword [rax], 0	       136	tileblit.c	FUNCTION_7
0x40001b2	    0x48c740080000	                  mov qword [rax + 8], 0	       137	tileblit.c	FUNCTION_7
0x40001ba	    0x48c740100000	               mov qword [rax + 0x10], 0	       138	tileblit.c	FUNCTION_7
0x40001c2	    0x48c740180000	               mov qword [rax + 0x18], 0	       139	tileblit.c	FUNCTION_7
0x40001ca	    0x48c740200000	               mov qword [rax + 0x20], 0	       140	tileblit.c	FUNCTION_7
0x40001d2	    0x48c740280000	               mov qword [rax + 0x28], 0	       141	tileblit.c	FUNCTION_7
0x40001da	    0x488b80680100	           mov rax, qword [rax + 0x168] 	       143	tileblit.c	FUNCTION_7	IF_1
0x40001e1	          0x4885c0	                           test rax, rax	       143	tileblit.c	FUNCTION_7	IF_1
0x40001e4	            0x744b	                            je 0x4000231	       143	tileblit.c	FUNCTION_7	IF_1
0x40001e6	    0x8b8fe0010000	           mov ecx, dword [rdi + 0x1e0] 	       144	tileblit.c	FUNCTION_7	IF_1
0x40001ec	          0x4889f2	                            mov rdx, rsi	       144	tileblit.c	FUNCTION_7	IF_1
0x40001ef	    0xc74424080100	                  mov dword [rsp + 8], 1	       146	tileblit.c	FUNCTION_7	IF_1
0x40001f7	          0x8b7008	                mov esi, dword [rax + 8]	       147	tileblit.c	FUNCTION_7	IF_1
0x40001fa	          0x890c24	                    mov dword [rsp], ecx	       144	tileblit.c	FUNCTION_7	IF_1
0x40001fd	    0x8b8fe4010000	           mov ecx, dword [rdi + 0x1e4] 	       145	tileblit.c	FUNCTION_7	IF_1
0x4000203	            0x85f6	                           test esi, esi	       147	tileblit.c	FUNCTION_7	IF_1
0x4000205	        0x894c2404	                mov dword [rsp + 4], ecx	       145	tileblit.c	FUNCTION_7	IF_1
0x4000209	      0xb900010000	                          mov ecx, 0x100	       147	tileblit.c	FUNCTION_7	IF_1
0x400020e	            0x7536	                           jne 0x4000246	       147	tileblit.c	FUNCTION_7	IF_1
0x4000210	        0x894c240c	              mov dword [rsp + 0xc], ecx	       147	tileblit.c	FUNCTION_7	IF_1
0x4000214	          0x488b00	                    mov rax, qword [rax]	       149	tileblit.c	FUNCTION_7	IF_1
0x4000217	          0x4889e6	                            mov rsi, rsp	       150	tileblit.c	FUNCTION_7	IF_1	CALL_1
0x400021a	          0x4889d7	                            mov rdi, rdx	       150	tileblit.c	FUNCTION_7	IF_1	CALL_1
0x400021d	      0x4889442410	             mov qword [rsp + 0x10], rax	       149	tileblit.c	FUNCTION_7	IF_1
0x4000222	    0x488b82200300	           mov rax, qword [rdx + 0x320] 	       150	tileblit.c	FUNCTION_7	IF_1	CALL_1
0x4000229	          0x488b00	                    mov rax, qword [rax]	       150	tileblit.c	FUNCTION_7	IF_1	CALL_1
0x400022c	      0xe800000000	                          call 0x4000231	       150	tileblit.c	FUNCTION_7	IF_1	CALL_1
0x4000231	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       152	tileblit.c	FUNCTION_7
0x4000236	    0x654833042528	                xor rax, qword gs:[0x28]	       152	tileblit.c	FUNCTION_7
0x400023f	            0x750d	                           jne 0x400024e	       152	tileblit.c	FUNCTION_7
0x4000241	        0x4883c420	                           add rsp, 0x20	       152	tileblit.c	FUNCTION_7
0x4000245	              0xc3	                                     ret	       152	tileblit.c	FUNCTION_7
0x4000246	          0x488b08	                    mov rcx, qword [rax]	       148	tileblit.c	FUNCTION_7	IF_1
0x4000249	          0x8b49f4	              mov ecx, dword [rcx - 0xc]	       147	tileblit.c	FUNCTION_7	IF_1
0x400024c	            0xebc2	                           jmp 0x4000210	       147	tileblit.c	FUNCTION_7	IF_1
0x400024e	      0xe800000000	                          call 0x4000253	       152	tileblit.c	FUNCTION_7
tile_cursor	DO,0:FOR,0:functions,0:CALL,1:ELSE,0:WHILE,0:SWITCH,1:IF,0	47
0x40000c0	        0x4883ec20	                           sub rsp, 0x20	        84	tileblit.c	FUNCTION_5
0x40000c4	    0x8b8fbc010000	           mov ecx, dword [rdi + 0x1bc] 	        88	tileblit.c	FUNCTION_5
0x40000ca	          0x4989f2	                            mov r10, rsi	        84	tileblit.c	FUNCTION_5
0x40000cd	    0x65488b042528	                mov rax, qword gs:[0x28]	        84	tileblit.c	FUNCTION_5
0x40000d6	      0x4889442418	             mov qword [rsp + 0x18], rax	        84	tileblit.c	FUNCTION_5
0x40000db	            0x31c0	                            xor eax, eax	        84	tileblit.c	FUNCTION_5
0x40000dd	    0x8b87b4010000	           mov eax, dword [rdi + 0x1b4] 	        86	tileblit.c	FUNCTION_5
0x40000e3	      0x4489442410	             mov dword [rsp + 0x10], r8d	        91	tileblit.c	FUNCTION_5
0x40000e8	          0x890c24	                    mov dword [rsp], ecx	        88	tileblit.c	FUNCTION_5
0x40000eb	    0x8b8fc0010000	           mov ecx, dword [rdi + 0x1c0] 	        89	tileblit.c	FUNCTION_5
0x40000f1	      0x44894c2414	             mov dword [rsp + 0x14], r9d	        92	tileblit.c	FUNCTION_5
0x40000f6	        0x894c2404	                mov dword [rsp + 4], ecx	        89	tileblit.c	FUNCTION_5
0x40000fa	            0x89c1	                            mov ecx, eax	        90	tileblit.c	FUNCTION_5
0x40000fc	          0xc1e904	                              shr ecx, 4	        90	tileblit.c	FUNCTION_5
0x40000ff	          0x83f101	                              xor ecx, 1	        90	tileblit.c	FUNCTION_5
0x4000102	          0x83fa02	                              cmp edx, 2	        90	tileblit.c	FUNCTION_5
0x4000105	           0xf95c2	                                setne dl	        90	tileblit.c	FUNCTION_5
0x4000108	          0x83e00f	                            and eax, 0xf	        94	tileblit.c	FUNCTION_5	SWITCH_1
0x400010b	           0xfb6d2	                           movzx edx, dl	        90	tileblit.c	FUNCTION_5
0x400010e	            0x21ca	                            and edx, ecx	        90	tileblit.c	FUNCTION_5
0x4000110	          0x83f805	                              cmp eax, 5	        94	tileblit.c	FUNCTION_5	SWITCH_1
0x4000113	        0x89542408	                mov dword [rsp + 8], edx	        90	tileblit.c	FUNCTION_5
0x4000117	            0x7768	                            ja 0x4000181	        94	tileblit.c	FUNCTION_5	SWITCH_1
0x4000119	    0x488b04c50000	                  mov rax, qword [rax*8]	        94	tileblit.c	FUNCTION_5	SWITCH_1
0x4000121	      0xe900000000	                           jmp 0x4000126	        94	tileblit.c	FUNCTION_5	SWITCH_1
0x4000126	    0xc744240c0400	                mov dword [rsp + 0xc], 4	       108	tileblit.c	FUNCTION_5	SWITCH_1
0x400012e	    0x498b82200300	           mov rax, qword [r10 + 0x320] 	       116	tileblit.c	FUNCTION_5	CALL_1
0x4000135	          0x4889e6	                            mov rsi, rsp	       116	tileblit.c	FUNCTION_5	CALL_1
0x4000138	          0x4c89d7	                            mov rdi, r10	       116	tileblit.c	FUNCTION_5	CALL_1
0x400013b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       116	tileblit.c	FUNCTION_5	CALL_1
0x400013f	      0xe800000000	                          call 0x4000144	       116	tileblit.c	FUNCTION_5	CALL_1
0x4000144	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       117	tileblit.c	FUNCTION_5
0x4000149	    0x654833042528	                xor rax, qword gs:[0x28]	       117	tileblit.c	FUNCTION_5
0x4000152	            0x7537	                           jne 0x400018b	       117	tileblit.c	FUNCTION_5
0x4000154	        0x4883c420	                           add rsp, 0x20	       117	tileblit.c	FUNCTION_5
0x4000158	              0xc3	                                     ret	       117	tileblit.c	FUNCTION_5
0x4000159	    0xc744240c0000	                mov dword [rsp + 0xc], 0	        96	tileblit.c	FUNCTION_5	SWITCH_1
0x4000161	            0xebcb	                           jmp 0x400012e	        97	tileblit.c	FUNCTION_5	SWITCH_1
0x4000163	    0xc744240c0100	                mov dword [rsp + 0xc], 1	        99	tileblit.c	FUNCTION_5	SWITCH_1
0x400016b	            0xebc1	                           jmp 0x400012e	       100	tileblit.c	FUNCTION_5	SWITCH_1
0x400016d	    0xc744240c0200	                mov dword [rsp + 0xc], 2	       102	tileblit.c	FUNCTION_5	SWITCH_1
0x4000175	            0xebb7	                           jmp 0x400012e	       103	tileblit.c	FUNCTION_5	SWITCH_1
0x4000177	    0xc744240c0300	                mov dword [rsp + 0xc], 3	       105	tileblit.c	FUNCTION_5	SWITCH_1
0x400017f	            0xebad	                           jmp 0x400012e	       106	tileblit.c	FUNCTION_5	SWITCH_1
0x4000181	    0xc744240c0500	                mov dword [rsp + 0xc], 5	       112	tileblit.c	FUNCTION_5	SWITCH_1
0x4000189	            0xeba3	                           jmp 0x400012e	       113	tileblit.c	FUNCTION_5	SWITCH_1
0x400018b	      0xe800000000	              call sym.fbcon_set_tileops	       117	tileblit.c	FUNCTION_5
