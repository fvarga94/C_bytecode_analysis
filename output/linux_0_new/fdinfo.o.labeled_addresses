show_mark_fhandle	DO,0:functions,0:CALL,0:IF,0:ELSE,0:WHILE,0:FOR,0:SWITCH,0	57
0x4000040	              0x55	                                push rbp	        42	fdinfo.c	FUNCTION_2
0x4000041	              0x53	                                push rbx	        42	fdinfo.c	FUNCTION_2
0x4000042	          0x4889fd	                            mov rbp, rdi	        42	fdinfo.c	FUNCTION_2
0x4000045	          0x4889f7	                            mov rdi, rsi	        42	fdinfo.c	FUNCTION_2
0x4000048	            0x31c9	                            xor ecx, ecx	        52	fdinfo.c	FUNCTION_2	CALL_1
0x400004a	    0x4881ec980000	                           sub rsp, 0x98	        42	fdinfo.c	FUNCTION_2
0x4000051	      0x488d542404	                      lea rdx, [rsp + 4]	        52	fdinfo.c	FUNCTION_2	CALL_1
0x4000056	      0x488d742410	                   lea rsi, [rsp + 0x10]	        52	fdinfo.c	FUNCTION_2	CALL_1
0x400005b	    0xc74424088000	               mov dword [rsp + 8], 0x80	        49	fdinfo.c	FUNCTION_2
0x4000063	    0x65488b042528	                mov rax, qword gs:[0x28]	        42	fdinfo.c	FUNCTION_2
0x400006c	    0x488984249000	             mov qword [rsp + 0x90], rax	        42	fdinfo.c	FUNCTION_2
0x4000074	            0x31c0	                            xor eax, eax	        42	fdinfo.c	FUNCTION_2
0x4000076	    0xc74424042000	               mov dword [rsp + 4], 0x20	        50	fdinfo.c	FUNCTION_2
0x400007e	      0xe800000000	                          call 0x4000083	        52	fdinfo.c	FUNCTION_2	CALL_1
0x4000083	      0x3dff000000	                           cmp eax, 0xff	        53	fdinfo.c	FUNCTION_2	IF_1
0x4000088	            0x7409	                            je 0x4000093	        53	fdinfo.c	FUNCTION_2	IF_1
0x400008a	            0x89c2	                            mov edx, eax	        53	fdinfo.c	FUNCTION_2	IF_1
0x400008c	          0xc1ea1f	                           shr edx, 0x1f	        53	fdinfo.c	FUNCTION_2	IF_1
0x400008f	            0x84d2	                             test dl, dl	        53	fdinfo.c	FUNCTION_2	IF_1
0x4000091	            0x7426	                            je 0x40000b9	        53	fdinfo.c	FUNCTION_2	IF_1
0x4000093	    0x803d00000000	                cmp byte [0x0400009a], 0	        54	fdinfo.c	FUNCTION_2	IF_1	CALL_2
0x400009a	            0x746d	                            je 0x4000109	        54	fdinfo.c	FUNCTION_2	IF_1	CALL_2
0x400009c	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	        66	fdinfo.c	FUNCTION_2
0x40000a4	    0x654833042528	                xor rax, qword gs:[0x28]	        66	fdinfo.c	FUNCTION_2
0x40000ad	            0x7576	                           jne 0x4000125	        66	fdinfo.c	FUNCTION_2
0x40000af	    0x4881c4980000	                           add rsp, 0x98	        66	fdinfo.c	FUNCTION_2
0x40000b6	              0x5b	                                 pop rbx	        66	fdinfo.c	FUNCTION_2
0x40000b7	              0x5d	                                 pop rbp	        66	fdinfo.c	FUNCTION_2
0x40000b8	              0xc3	                                     ret	        66	fdinfo.c	FUNCTION_2
0x40000b9	        0x8b4c2404	                mov ecx, dword [rsp + 4]	        59	fdinfo.c	FUNCTION_2
0x40000bd	    0x48c7c6000000	                              mov rsi, 0	        61	fdinfo.c	FUNCTION_2	CALL_3
0x40000c4	          0x4889ef	                            mov rdi, rbp	        61	fdinfo.c	FUNCTION_2	CALL_3
0x40000c7	        0x8944240c	              mov dword [rsp + 0xc], eax	        58	fdinfo.c	FUNCTION_2
0x40000cb	            0x31db	                            xor ebx, ebx	        64	fdinfo.c	FUNCTION_2	FOR_1
0x40000cd	    0x8d148d000000	                        lea edx, [rcx*4]	        59	fdinfo.c	FUNCTION_2
0x40000d4	            0x89c1	                            mov ecx, eax	        61	fdinfo.c	FUNCTION_2	CALL_3
0x40000d6	        0x89542408	                mov dword [rsp + 8], edx	        59	fdinfo.c	FUNCTION_2
0x40000da	      0xe800000000	                          call 0x40000df	        61	fdinfo.c	FUNCTION_2	CALL_3
0x40000df	        0x8b442408	                mov eax, dword [rsp + 8]	        64	fdinfo.c	FUNCTION_2	FOR_1
0x40000e3	            0x85c0	                           test eax, eax	        64	fdinfo.c	FUNCTION_2	FOR_1
0x40000e5	            0x74b5	                            je 0x400009c	        64	fdinfo.c	FUNCTION_2	FOR_1
0x40000e7	          0x4863c3	                         movsxd rax, ebx	        65	fdinfo.c	FUNCTION_2	CALL_4
0x40000ea	    0x48c7c6000000	                              mov rsi, 0	        65	fdinfo.c	FUNCTION_2	CALL_4
0x40000f1	          0x4889ef	                            mov rdi, rbp	        65	fdinfo.c	FUNCTION_2	CALL_4
0x40000f4	       0xfb6540410	     movzx edx, byte [rsp + rax + 0x10] 	        65	fdinfo.c	FUNCTION_2	CALL_4
0x40000f9	          0x83c301	                              add ebx, 1	        64	fdinfo.c	FUNCTION_2	FOR_1
0x40000fc	      0xe800000000	                          call 0x4000101	        65	fdinfo.c	FUNCTION_2	CALL_4
0x4000101	        0x395c2408	                cmp dword [rsp + 8], ebx	        64	fdinfo.c	FUNCTION_2	FOR_1
0x4000105	            0x77e0	                            ja 0x40000e7	        64	fdinfo.c	FUNCTION_2	FOR_1
0x4000107	            0xeb93	                           jmp 0x400009c	        64	fdinfo.c	FUNCTION_2	FOR_1
0x4000109	            0x89c6	                            mov esi, eax	        54	fdinfo.c	FUNCTION_2	IF_1	CALL_2
0x400010b	    0x48c7c7000000	                              mov rdi, 0	        54	fdinfo.c	FUNCTION_2	IF_1	CALL_2
0x4000112	    0xc60500000000	                mov byte [0x04000119], 1	        54	fdinfo.c	FUNCTION_2	IF_1	CALL_2
0x4000119	      0xe800000000	                          call 0x400011e	        54	fdinfo.c	FUNCTION_2	IF_1	CALL_2
0x400011e	             0xf0b	                                     ud2	        54	fdinfo.c	FUNCTION_2	IF_1	CALL_2
0x4000120	      0xe977ffffff	                           jmp 0x400009c	        54	fdinfo.c	FUNCTION_2	IF_1	CALL_2
0x4000125	      0xe800000000	                          call 0x400012a	        66	fdinfo.c	FUNCTION_2
inotify_show_fdinfo	DO,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:FOR,0:SWITCH,0	61
0x4000130	            0x4156	                                push r14	       103	fdinfo.c	FUNCTION_5
0x4000132	            0x4155	                                push r13	       103	fdinfo.c	FUNCTION_5
0x4000134	            0x4154	                                push r12	       103	fdinfo.c	FUNCTION_5
0x4000136	              0x55	                                push rbp	       103	fdinfo.c	FUNCTION_5
0x4000137	          0x4889fd	                            mov rbp, rdi	       103	fdinfo.c	FUNCTION_5
0x400013a	              0x53	                                push rbx	       103	fdinfo.c	FUNCTION_5
0x400013b	    0x4c8ba6c80000	            mov r12, qword [rsi + 0xc8] 	       103	fdinfo.c	FUNCTION_5
0x4000142	      0x4d8d6c2450	                   lea r13, [r12 + 0x50]	        31	fdinfo.c	FUNCTION_1	CALL_1
0x4000147	        0x4983c478	                           add r12, 0x78	        32	fdinfo.c	FUNCTION_1
0x400014b	          0x4c89ef	                            mov rdi, r13	        31	fdinfo.c	FUNCTION_1	CALL_1
0x400014e	      0xe800000000	                          call 0x4000153	        31	fdinfo.c	FUNCTION_1	CALL_1
0x4000153	        0x498b0424	                    mov rax, qword [r12]	        32	fdinfo.c	FUNCTION_1
0x4000157	          0x4939c4	                            cmp r12, rax	        32	fdinfo.c	FUNCTION_1
0x400015a	        0x488d58f0	                   lea rbx, [rax - 0x10]	        32	fdinfo.c	FUNCTION_1
0x400015e	            0x751c	                           jne 0x400017c	        32	fdinfo.c	FUNCTION_1
0x4000160	      0xe989000000	                           jmp 0x40001ee	        32	fdinfo.c	FUNCTION_1
0x4000165	        0x488b4518	            mov rax, qword [rbp + 0x18] 	        34	fdinfo.c	IF_1	CALL_2
0x4000169	        0x48394508	                cmp qword [rbp + 8], rax	        34	fdinfo.c	IF_1	CALL_2
0x400016d	            0x747f	                            je 0x40001ee	        34	fdinfo.c	IF_1	CALL_2
0x400016f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        32	fdinfo.c	FUNCTION_1
0x4000173	          0x4939c4	                            cmp r12, rax	        32	fdinfo.c	FUNCTION_1
0x4000176	        0x488d58f0	                   lea rbx, [rax - 0x10]	        32	fdinfo.c	FUNCTION_1
0x400017a	            0x7472	                            je 0x40001ee	        32	fdinfo.c	FUNCTION_1
0x400017c	        0x488b4338	            mov rax, qword [rbx + 0x38] 	        80	fdinfo.c	FUNCTION_4	IF_1
0x4000180	        0xf6400401	                  test byte [rax + 4], 1	        80	fdinfo.c	FUNCTION_4	IF_1
0x4000184	            0x74df	                            je 0x4000165	        80	fdinfo.c	FUNCTION_4	IF_1
0x4000186	        0x488b7808	                mov rdi, qword [rax + 8]	        84	fdinfo.c	FUNCTION_4	CALL_2
0x400018a	      0xe800000000	                          call 0x400018f	        84	fdinfo.c	FUNCTION_4	CALL_2
0x400018f	          0x4885c0	                           test rax, rax	        85	fdinfo.c	FUNCTION_4	IF_2
0x4000192	          0x4989c6	                            mov r14, rax	        84	fdinfo.c	FUNCTION_4	CALL_2
0x4000195	            0x74ce	                            je 0x4000165	        85	fdinfo.c	FUNCTION_4	IF_2
0x4000197	        0x488b4028	            mov rax, qword [rax + 0x28] 	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x400019b	          0x8b7340	            mov esi, dword [rbx + 0x40] 	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x400019e	          0x4889ef	                            mov rdi, rbp	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001a1	          0x448b0b	                    mov r9d, dword [rbx]	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001a4	        0x498b4e40	            mov rcx, qword [r14 + 0x40] 	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001a8	          0x8b5348	            mov edx, dword [rbx + 0x48] 	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001ab	              0x56	                                push rsi	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001ac	        0x448b4010	            mov r8d, dword [rax + 0x10] 	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001b0	    0x48c7c6000000	                              mov rsi, 0	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001b7	    0x4181e1ff0f00	                          and r9d, 0xfff	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001be	      0xe800000000	                          call 0x40001c3	        93	fdinfo.c	FUNCTION_4	IF_2	CALL_3
0x40001c3	          0x4c89f6	                            mov rsi, r14	        96	fdinfo.c	FUNCTION_4	IF_2	CALL_4
0x40001c6	          0x4889ef	                            mov rdi, rbp	        96	fdinfo.c	FUNCTION_4	IF_2	CALL_4
0x40001c9	      0xe872feffff	              call sym.show_mark_fhandle	        96	fdinfo.c	FUNCTION_4	IF_2	CALL_4
0x40001ce	      0xbe0a000000	                            mov esi, 0xa	        97	fdinfo.c	FUNCTION_4	IF_2	CALL_5
0x40001d3	          0x4889ef	                            mov rdi, rbp	        97	fdinfo.c	FUNCTION_4	IF_2	CALL_5
0x40001d6	      0xe800000000	                          call 0x40001db	        97	fdinfo.c	FUNCTION_4	IF_2	CALL_5
0x40001db	          0x4c89f7	                            mov rdi, r14	        98	fdinfo.c	FUNCTION_4	IF_2	CALL_6
0x40001de	      0xe800000000	                          call 0x40001e3	        98	fdinfo.c	FUNCTION_4	IF_2	CALL_6
0x40001e3	              0x58	                                 pop rax	        98	fdinfo.c	FUNCTION_4	IF_2	CALL_6
0x40001e4	        0x488b4518	            mov rax, qword [rbp + 0x18] 	        34	fdinfo.c	IF_1	CALL_2
0x40001e8	        0x48394508	                cmp qword [rbp + 8], rax	        34	fdinfo.c	IF_1	CALL_2
0x40001ec	            0x7581	                           jne 0x400016f	        34	fdinfo.c	IF_1	CALL_2
0x40001ee	              0x5b	                                 pop rbx	       105	fdinfo.c	FUNCTION_5
0x40001ef	          0x4c89ef	                            mov rdi, r13	        37	fdinfo.c	FUNCTION_1	CALL_2
0x40001f2	              0x5d	                                 pop rbp	       105	fdinfo.c	FUNCTION_5
0x40001f3	            0x415c	                                 pop r12	       105	fdinfo.c	FUNCTION_5
0x40001f5	            0x415d	                                 pop r13	       105	fdinfo.c	FUNCTION_5
0x40001f7	            0x415e	                                 pop r14	       105	fdinfo.c	FUNCTION_5
0x40001f9	      0xe900000000	                   jmp section_end..text	        37	fdinfo.c	FUNCTION_1	CALL_2
