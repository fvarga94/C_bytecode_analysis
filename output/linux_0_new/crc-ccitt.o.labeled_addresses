crc_ccitt_false	SWITCH,0:IF,0:DO,0:CALL,1:FOR,0:functions,0:WHILE,1:ELSE,0	13
0x4000070	          0x4885d2	                           test rdx, rdx	       118	crc-ccitt.c	FUNCTION_2	WHILE_1
0x4000073	            0x89f8	                            mov eax, edi	       117	crc-ccitt.c	FUNCTION_2
0x4000075	            0x7420	                            je 0x4000097	       118	crc-ccitt.c	FUNCTION_2	WHILE_1
0x4000077	          0x4801f2	                            add rdx, rsi	       118	crc-ccitt.c	FUNCTION_2	WHILE_1
0x400007a	        0x4883c601	                              add rsi, 1	       119	crc-ccitt.c	FUNCTION_2	CALL_1
0x400007e	           0xfb6cc	                           movzx ecx, ah	        20	crc-ccitt.h	FUNCTION_4
0x4000081	          0xc1e008	                              shl eax, 8	        20	crc-ccitt.h	FUNCTION_4
0x4000084	          0x324eff	                  xor cl, byte [rsi - 1]	        20	crc-ccitt.h	FUNCTION_4
0x4000087	           0xfb6c9	                           movzx ecx, cl	        20	crc-ccitt.h	FUNCTION_4
0x400008a	    0x663384090000	                xor ax, word [rcx + rcx]	        20	crc-ccitt.h	FUNCTION_4
0x4000092	          0x4839d6	                            cmp rsi, rdx	       118	crc-ccitt.c	FUNCTION_2	WHILE_1
0x4000095	            0x75e3	                           jne 0x400007a	       118	crc-ccitt.c	FUNCTION_2	WHILE_1
0x4000097	            0xf3c3	                                     ret	       121	crc-ccitt.c	FUNCTION_2
crc_ccitt	SWITCH,0:IF,0:DO,0:CALL,1:FOR,0:functions,0:WHILE,1:ELSE,0	14
0x4000040	          0x4885d2	                           test rdx, rdx	       103	crc-ccitt.c	FUNCTION_1	WHILE_1
0x4000043	            0x89f8	                            mov eax, edi	       102	crc-ccitt.c	FUNCTION_1
0x4000045	            0x7422	                            je 0x4000069	       103	crc-ccitt.c	FUNCTION_1	WHILE_1
0x4000047	          0x4801f2	                            add rdx, rsi	       103	crc-ccitt.c	FUNCTION_1	WHILE_1
0x400004a	        0x4883c601	                              add rsi, 1	       104	crc-ccitt.c	FUNCTION_1	CALL_1
0x400004e	            0x89c1	                            mov ecx, eax	        15	crc-ccitt.h	FUNCTION_3
0x4000050	          0x3246ff	                  xor al, byte [rsi - 1]	        15	crc-ccitt.h	FUNCTION_3
0x4000053	        0x66c1e908	                               shr cx, 8	        15	crc-ccitt.h	FUNCTION_3
0x4000057	           0xfb6c0	                           movzx eax, al	        15	crc-ccitt.h	FUNCTION_3
0x400005a	    0x66338c000000	                xor cx, word [rax + rax]	        15	crc-ccitt.h	FUNCTION_3
0x4000062	          0x4839d6	                            cmp rsi, rdx	       103	crc-ccitt.c	FUNCTION_1	WHILE_1
0x4000065	            0x89c8	                            mov eax, ecx	        15	crc-ccitt.h	FUNCTION_3
0x4000067	            0x75e1	                           jne 0x400004a	       103	crc-ccitt.c	FUNCTION_1	WHILE_1
0x4000069	            0xf3c3	                                     ret	       106	crc-ccitt.c	FUNCTION_1
