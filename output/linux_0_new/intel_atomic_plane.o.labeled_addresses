intel_plane_destroy_state	SWITCH,0:FOR,0:CALL,3:IF,0:ELSE,0:functions,0:DO,0:WHILE,0	20
0x40001f0	              0x55	                                push rbp	       104	intel_atomic_plane.c	FUNCTION_3
0x40001f1	              0x53	                                push rbx	       104	intel_atomic_plane.c	FUNCTION_3
0x40001f2	          0x4889fd	                            mov rbp, rdi	       104	intel_atomic_plane.c	FUNCTION_3
0x40001f5	    0x4883be880000	               cmp qword [rsi + 0x88], 0	       105	intel_atomic_plane.c	FUNCTION_3	CALL_2
0x40001fd	          0x4889f3	                            mov rbx, rsi	       104	intel_atomic_plane.c	FUNCTION_3
0x4000200	            0x750d	                           jne 0x400020f	       105	intel_atomic_plane.c	FUNCTION_3	CALL_2
0x4000202	          0x4889de	                            mov rsi, rbx	       107	intel_atomic_plane.c	FUNCTION_3	CALL_3
0x4000205	          0x4889ef	                            mov rdi, rbp	       107	intel_atomic_plane.c	FUNCTION_3	CALL_3
0x4000208	              0x5b	                                 pop rbx	       108	intel_atomic_plane.c	FUNCTION_3
0x4000209	              0x5d	                                 pop rbp	       108	intel_atomic_plane.c	FUNCTION_3
0x400020a	      0xe900000000	                           jmp 0x400020f	       107	intel_atomic_plane.c	FUNCTION_3	CALL_3
0x400020f	    0x48c7c6000000	                              mov rsi, 0	       105	intel_atomic_plane.c	FUNCTION_3	CALL_2
0x4000216	    0x48c7c7000000	                              mov rdi, 0	       105	intel_atomic_plane.c	FUNCTION_3	CALL_2
0x400021d	      0xe800000000	                          call 0x4000222	       105	intel_atomic_plane.c	FUNCTION_3	CALL_2
0x4000222	             0xf0b	                                     ud2	       105	intel_atomic_plane.c	FUNCTION_3	CALL_2
0x4000224	          0x4889de	                            mov rsi, rbx	       107	intel_atomic_plane.c	FUNCTION_3	CALL_3
0x4000227	          0x4889ef	                            mov rdi, rbp	       107	intel_atomic_plane.c	FUNCTION_3	CALL_3
0x400022a	              0x5b	                                 pop rbx	       108	intel_atomic_plane.c	FUNCTION_3
0x400022b	              0x5d	                                 pop rbp	       108	intel_atomic_plane.c	FUNCTION_3
0x400022c	      0xe900000000	                           jmp 0x4000231	       107	intel_atomic_plane.c	FUNCTION_3	CALL_3
intel_plane_duplicate_state	SWITCH,0:FOR,0:CALL,2:IF,1:ELSE,0:functions,0:DO,0:WHILE,0	19
0x40001a0	              0x55	                                push rbp	        74	intel_atomic_plane.c	FUNCTION_2
0x40001a1	          0x4889fd	                            mov rbp, rdi	        74	intel_atomic_plane.c	FUNCTION_2
0x40001a4	              0x53	                                push rbx	        74	intel_atomic_plane.c	FUNCTION_2
0x40001a5	    0x488bbf580200	           mov rdi, qword [rdi + 0x258] 	        78	intel_atomic_plane.c	FUNCTION_2	CALL_1
0x40001ac	      0xbac0004001	                      mov edx, 0x14000c0	        78	intel_atomic_plane.c	FUNCTION_2	CALL_1
0x40001b1	      0xbed0000000	                           mov esi, 0xd0	        78	intel_atomic_plane.c	FUNCTION_2	CALL_1
0x40001b6	      0xe800000000	                          call 0x40001bb	        78	intel_atomic_plane.c	FUNCTION_2	CALL_1
0x40001bb	          0x4885c0	                           test rax, rax	        80	intel_atomic_plane.c	FUNCTION_2	IF_1
0x40001be	          0x4889c3	                            mov rbx, rax	        78	intel_atomic_plane.c	FUNCTION_2	CALL_1
0x40001c1	            0x7421	                            je 0x40001e4	        80	intel_atomic_plane.c	FUNCTION_2	IF_1
0x40001c3	          0x4889c6	                            mov rsi, rax	        85	intel_atomic_plane.c	FUNCTION_2	CALL_2
0x40001c6	          0x4889ef	                            mov rdi, rbp	        85	intel_atomic_plane.c	FUNCTION_2	CALL_2
0x40001c9	      0xe800000000	                          call 0x40001ce	        85	intel_atomic_plane.c	FUNCTION_2	CALL_2
0x40001ce	    0x48c783880000	               mov qword [rbx + 0x88], 0	        87	intel_atomic_plane.c	FUNCTION_2
0x40001d9	    0x48c783900000	               mov qword [rbx + 0x90], 0	        88	intel_atomic_plane.c	FUNCTION_2
0x40001e4	          0x4889d8	                            mov rax, rbx	        91	intel_atomic_plane.c	FUNCTION_2
0x40001e7	              0x5b	                                 pop rbx	        91	intel_atomic_plane.c	FUNCTION_2
0x40001e8	              0x5d	                                 pop rbp	        91	intel_atomic_plane.c	FUNCTION_2
0x40001e9	              0xc3	                                     ret	        91	intel_atomic_plane.c	FUNCTION_2
intel_plane_atomic_check_with_state	SWITCH,1:FOR,0:CALL,14:IF,8:ELSE,1:functions,0:DO,0:WHILE,0	112
0x4000240	            0x4157	                                push r15	       114	intel_atomic_plane.c	FUNCTION_4
0x4000242	            0x4156	                                push r14	       114	intel_atomic_plane.c	FUNCTION_4
0x4000244	          0x4989fe	                            mov r14, rdi	       114	intel_atomic_plane.c	FUNCTION_4
0x4000247	            0x4155	                                push r13	       114	intel_atomic_plane.c	FUNCTION_4
0x4000249	            0x4154	                                push r12	       114	intel_atomic_plane.c	FUNCTION_4
0x400024b	          0x4989d5	                            mov r13, rdx	       114	intel_atomic_plane.c	FUNCTION_4
0x400024e	              0x55	                                push rbp	       114	intel_atomic_plane.c	FUNCTION_4
0x400024f	              0x53	                                push rbx	       114	intel_atomic_plane.c	FUNCTION_4
0x4000250	          0x4989f4	                            mov r12, rsi	       114	intel_atomic_plane.c	FUNCTION_4
0x4000253	          0x4889cb	                            mov rbx, rcx	       114	intel_atomic_plane.c	FUNCTION_4
0x4000256	        0x4883ec28	                           sub rsp, 0x28	       114	intel_atomic_plane.c	FUNCTION_4
0x400025a	          0x488b29	                    mov rbp, qword [rcx]	       115	intel_atomic_plane.c	FUNCTION_4
0x400025d	    0x65488b042528	                mov rax, qword gs:[0x28]	       114	intel_atomic_plane.c	FUNCTION_4
0x4000266	      0x4889442420	             mov qword [rsp + 0x20], rax	       114	intel_atomic_plane.c	FUNCTION_4
0x400026b	            0x31c0	                            xor eax, eax	       114	intel_atomic_plane.c	FUNCTION_4
0x400026d	      0x4883790800	                  cmp qword [rcx + 8], 0	       129	intel_atomic_plane.c	FUNCTION_4	IF_1
0x4000272	        0x4c8b7d00	                    mov r15, qword [rbp]	       116	intel_atomic_plane.c	FUNCTION_4	CALL_1
0x4000276	     0xf8443010000	                            je 0x40003bf	       129	intel_atomic_plane.c	FUNCTION_4	IF_1
0x400027c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       132	intel_atomic_plane.c	FUNCTION_4	IF_2	CALL_3
0x4000280	          0x4885c0	                           test rax, rax	       132	intel_atomic_plane.c	FUNCTION_4	IF_2	CALL_3
0x4000283	            0x740a	                            je 0x400028f	       132	intel_atomic_plane.c	FUNCTION_4	IF_2	CALL_3
0x4000285	        0xf643400a	            test byte [rbx + 0x40], 0xa 	       132	intel_atomic_plane.c	FUNCTION_4	IF_2	CALL_3
0x4000289	     0xf85ca000000	                           jne 0x4000359	       132	intel_atomic_plane.c	FUNCTION_4	IF_2	CALL_3
0x400028f	    0x41f687660600	          test byte [r15 + 0x666], 0x20 	       160	intel_atomic_plane.c	FUNCTION_4	IF_4	CALL_7
0x4000297	            0x740f	                            je 0x40002a8	       160	intel_atomic_plane.c	FUNCTION_4	IF_4	CALL_7
0x4000299	          0x8b4340	            mov eax, dword [rbx + 0x40] 	       161	intel_atomic_plane.c	FUNCTION_4	IF_4
0x400029c	          0x83e014	                           and eax, 0x14	       161	intel_atomic_plane.c	FUNCTION_4	IF_4
0x400029f	          0x83f814	                           cmp eax, 0x14	       161	intel_atomic_plane.c	FUNCTION_4	IF_4
0x40002a2	     0xf844f010000	                            je 0x40003f7	       161	intel_atomic_plane.c	FUNCTION_4	IF_4
0x40002a8	        0xc6437400	                mov byte [rbx + 0x74], 0	       167	intel_atomic_plane.c	FUNCTION_4
0x40002ac	          0x4889da	                            mov rdx, rbx	       168	intel_atomic_plane.c	FUNCTION_4	CALL_9
0x40002af	    0x488b85c00200	           mov rax, qword [rbp + 0x2c0] 	       168	intel_atomic_plane.c	FUNCTION_4	CALL_9
0x40002b6	          0x4c89e6	                            mov rsi, r12	       168	intel_atomic_plane.c	FUNCTION_4	CALL_9
0x40002b9	          0x4889ef	                            mov rdi, rbp	       168	intel_atomic_plane.c	FUNCTION_4	CALL_9
0x40002bc	      0xe800000000	                          call 0x40002c1	       168	intel_atomic_plane.c	FUNCTION_4	CALL_9
0x40002c1	            0x85c0	                           test eax, eax	       169	intel_atomic_plane.c	FUNCTION_4	IF_5
0x40002c3	            0x7571	                           jne 0x4000336	       169	intel_atomic_plane.c	FUNCTION_4	IF_5
0x40002c5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002c9	          0x4885c0	                           test rax, rax	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002cc	            0x7435	                            je 0x4000303	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002ce	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 8	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002d6	            0x762b	                           jbe 0x4000303	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002d8	    0x41807c240800	                   cmp byte [r12 + 8], 0	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002de	            0x7423	                            je 0x4000303	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002e0	    0x41f684249c00	           test byte [r12 + 0x9c], 0x10 	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002e9	            0x7418	                            je 0x4000303	       176	intel_atomic_plane.c	FUNCTION_4	IF_6	CALL_10
0x40002eb	    0x48bafeffffff	          movabs rdx, 0xfefffffffffffffe	       178	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7
0x40002f5	        0x48035078	             add rdx, qword [rax + 0x78]	       178	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7
0x40002f9	        0x4883fa01	                              cmp rdx, 1	       178	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7
0x40002fd	     0xf86ce000000	                           jbe 0x40003d1	       178	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7
0x4000303	        0x807b7400	                cmp byte [rbx + 0x74], 0	       186	intel_atomic_plane.c	FUNCTION_4	IF_8
0x4000307	    0x8b8d84020000	           mov ecx, dword [rbp + 0x284] 	       187	intel_atomic_plane.c	FUNCTION_4	CALL_12
0x400030d	     0xf8597000000	                           jne 0x40003aa	       186	intel_atomic_plane.c	FUNCTION_4	IF_8
0x4000313	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	       189	intel_atomic_plane.c	FUNCTION_4	CALL_13
0x400031a	          0x48d3c0	                             rol rax, cl	       189	intel_atomic_plane.c	FUNCTION_4	CALL_13
0x400031d	    0x412084249004	              and byte [r12 + 0x490], al	       189	intel_atomic_plane.c	FUNCTION_4	CALL_13
0x4000325	          0x4889d9	                            mov rcx, rbx	       191	intel_atomic_plane.c	FUNCTION_4	CALL_14
0x4000328	          0x4c89ea	                            mov rdx, r13	       191	intel_atomic_plane.c	FUNCTION_4	CALL_14
0x400032b	          0x4c89e6	                            mov rsi, r12	       191	intel_atomic_plane.c	FUNCTION_4	CALL_14
0x400032e	          0x4c89f7	                            mov rdi, r14	       191	intel_atomic_plane.c	FUNCTION_4	CALL_14
0x4000331	      0xe800000000	                          call 0x4000336	       191	intel_atomic_plane.c	FUNCTION_4	CALL_14
0x4000336	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       195	intel_atomic_plane.c	FUNCTION_4
0x400033b	    0x654833342528	                xor rsi, qword gs:[0x28]	       195	intel_atomic_plane.c	FUNCTION_4
0x4000344	     0xf85c8000000	                           jne 0x4000412	       195	intel_atomic_plane.c	FUNCTION_4
0x400034a	        0x4883c428	                           add rsp, 0x28	       195	intel_atomic_plane.c	FUNCTION_4
0x400034e	              0x5b	                                 pop rbx	       195	intel_atomic_plane.c	FUNCTION_4
0x400034f	              0x5d	                                 pop rbp	       195	intel_atomic_plane.c	FUNCTION_4
0x4000350	            0x415c	                                 pop r12	       195	intel_atomic_plane.c	FUNCTION_4
0x4000352	            0x415d	                                 pop r13	       195	intel_atomic_plane.c	FUNCTION_4
0x4000354	            0x415e	                                 pop r14	       195	intel_atomic_plane.c	FUNCTION_4
0x4000356	            0x415f	                                 pop r15	       195	intel_atomic_plane.c	FUNCTION_4
0x4000358	              0xc3	                                     ret	       195	intel_atomic_plane.c	FUNCTION_4
0x4000359	    0x48bafeffffff	          movabs rdx, 0xfefffffffffffffe	       135	intel_atomic_plane.c	FUNCTION_4	IF_2	IF_3
0x4000363	        0x48035078	             add rdx, qword [rax + 0x78]	       135	intel_atomic_plane.c	FUNCTION_4	IF_2	IF_3
0x4000367	        0x4883fa01	                              cmp rdx, 1	       135	intel_atomic_plane.c	FUNCTION_4	IF_2	IF_3
0x400036b	            0x7777	                            ja 0x40003e4	       135	intel_atomic_plane.c	FUNCTION_4	IF_2	IF_3
0x400036d	        0x488b4048	            mov rax, qword [rax + 0x48] 	       146	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1
0x4000371	            0x8b38	                    mov edi, dword [rax]	       146	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1
0x4000373	    0x81ff43382020	                     cmp edi, 0x20203843	       146	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1
0x4000379	            0x740c	                            je 0x4000387	       146	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1
0x400037b	    0x81ff52473136	                     cmp edi, 0x36314752	       146	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1
0x4000381	     0xf8508ffffff	                           jne 0x400028f	       146	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1
0x4000387	          0x4889e6	                            mov rsi, rsp	       149	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1	CALL_5
0x400038a	      0xe800000000	                          call 0x400038f	       149	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1	CALL_5
0x400038f	    0x48c7c6000000	                              mov rsi, 0	       149	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1	CALL_5
0x4000396	          0x4889c2	                            mov rdx, rax	       149	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1	CALL_5
0x4000399	      0xbf04000000	                              mov edi, 4	       149	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1	CALL_5
0x400039e	      0xe800000000	                          call 0x40003a3	       149	intel_atomic_plane.c	FUNCTION_4	IF_2	SWITCH_1	CALL_5
0x40003a3	      0xb8eaffffff	                     mov eax, 0xffffffea	       181	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7
0x40003a8	            0xeb8c	                           jmp 0x4000336	       181	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7
0x40003aa	      0xb801000000	                              mov eax, 1	       187	intel_atomic_plane.c	FUNCTION_4	CALL_12
0x40003af	          0x48d3e0	                             shl rax, cl	       187	intel_atomic_plane.c	FUNCTION_4	CALL_12
0x40003b2	    0x410884249004	               or byte [r12 + 0x490], al	       187	intel_atomic_plane.c	FUNCTION_4	CALL_12
0x40003ba	      0xe966ffffff	                           jmp 0x4000325	       187	intel_atomic_plane.c	FUNCTION_4	CALL_12
0x40003bf	      0x48837a0800	                  cmp qword [rdx + 8], 0	       129	intel_atomic_plane.c	FUNCTION_4	IF_1
0x40003c4	     0xf85b2feffff	                           jne 0x400027c	       129	intel_atomic_plane.c	FUNCTION_4	IF_1
0x40003ca	            0x31c0	                            xor eax, eax	       130	intel_atomic_plane.c	FUNCTION_4	IF_1
0x40003cc	      0xe965ffffff	                           jmp 0x4000336	       130	intel_atomic_plane.c	FUNCTION_4	IF_1
0x40003d1	    0x48c7c6000000	                              mov rsi, 0	       180	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7	CALL_11
0x40003d8	      0xbf04000000	                              mov edi, 4	       180	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7	CALL_11
0x40003dd	      0xe800000000	                          call 0x40003e2	       180	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7	CALL_11
0x40003e2	            0xebbf	                           jmp 0x40003a3	       180	intel_atomic_plane.c	FUNCTION_4	IF_6	IF_7	CALL_11
0x40003e4	    0x48c7c6000000	                              mov rsi, 0	       137	intel_atomic_plane.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003eb	      0xbf04000000	                              mov edi, 4	       137	intel_atomic_plane.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003f0	      0xe800000000	                          call 0x40003f5	       137	intel_atomic_plane.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003f5	            0xebac	                           jmp 0x40003a3	       138	intel_atomic_plane.c	FUNCTION_4	IF_2	IF_3
0x40003f7	    0x48c7c6000000	                              mov rsi, 0	       163	intel_atomic_plane.c	FUNCTION_4	IF_4	CALL_8
0x40003fe	      0xbf04000000	                              mov edi, 4	       163	intel_atomic_plane.c	FUNCTION_4	IF_4	CALL_8
0x4000403	      0xe800000000	                          call 0x4000408	       163	intel_atomic_plane.c	FUNCTION_4	IF_4	CALL_8
0x4000408	      0xb8eaffffff	                     mov eax, 0xffffffea	       164	intel_atomic_plane.c	FUNCTION_4	IF_4
0x400040d	      0xe924ffffff	                           jmp 0x4000336	       164	intel_atomic_plane.c	FUNCTION_4	IF_4
0x4000412	      0xe800000000	                          call 0x4000417	       195	intel_atomic_plane.c	FUNCTION_4
intel_plane_atomic_check	SWITCH,0:FOR,0:CALL,8:IF,1:ELSE,0:functions,0:DO,0:WHILE,0	21
0x4000420	    0x8b874c020000	           mov eax, dword [rdi + 0x24c] 	       464	drm_atomic.h	FUNCTION_17	CALL_1
0x4000426	          0x4889f1	                            mov rcx, rsi	       199	intel_atomic_plane.c	FUNCTION_5
0x4000429	    0x488bb6800000	            mov rsi, qword [rsi + 0x80] 	       200	intel_atomic_plane.c	FUNCTION_5
0x4000430	        0x48c1e005	                              shl rax, 5	       464	drm_atomic.h	FUNCTION_17	CALL_1
0x4000434	        0x48034618	             add rax, qword [rsi + 0x18]	       464	drm_atomic.h	FUNCTION_17	CALL_1
0x4000438	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       464	drm_atomic.h	FUNCTION_17	CALL_1
0x400043c	        0x488b4108	                mov rax, qword [rcx + 8]	       203	intel_atomic_plane.c	FUNCTION_5
0x4000440	          0x4885c0	                           test rax, rax	       203	intel_atomic_plane.c	FUNCTION_5
0x4000443	            0x741f	                            je 0x4000464	       203	intel_atomic_plane.c	FUNCTION_5
0x4000445	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	       417	drm_atomic.h	FUNCTION_14	CALL_1
0x400044b	        0x488d0440	                  lea rax, [rax + rax*2]	       417	drm_atomic.h	FUNCTION_14	CALL_1
0x400044f	        0x48c1e004	                              shl rax, 4	       417	drm_atomic.h	FUNCTION_14	CALL_1
0x4000453	        0x48034620	             add rax, qword [rsi + 0x20]	       417	drm_atomic.h	FUNCTION_14	CALL_1
0x4000457	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       219	intel_atomic_plane.c	FUNCTION_5	CALL_5
0x400045b	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       219	intel_atomic_plane.c	FUNCTION_5	CALL_5
0x400045f	      0xe9dcfdffff	jmp sym.intel_plane_atomic_check_with_state	       219	intel_atomic_plane.c	FUNCTION_5	CALL_5
0x4000464	        0x488b4208	                mov rax, qword [rdx + 8]	       203	intel_atomic_plane.c	FUNCTION_5
0x4000468	          0x4885c0	                           test rax, rax	       213	intel_atomic_plane.c	FUNCTION_5	IF_1
0x400046b	            0x75d8	                           jne 0x4000445	       213	intel_atomic_plane.c	FUNCTION_5	IF_1
0x400046d	            0x31c0	                            xor eax, eax	       223	intel_atomic_plane.c	FUNCTION_5
0x400046f	              0xc3	                                     ret	       223	intel_atomic_plane.c	FUNCTION_5
intel_plane_atomic_set_property	SWITCH,0:FOR,0:CALL,1:IF,0:ELSE,0:functions,0:DO,0:WHILE,0	6
0x4000490	        0x4883c234	                           add rdx, 0x34	       297	intel_atomic_plane.c	FUNCTION_8	CALL_1
0x4000494	    0x48c7c6000000	                              mov rsi, 0	       297	intel_atomic_plane.c	FUNCTION_8	CALL_1
0x400049b	      0xbf04000000	                              mov edi, 4	       297	intel_atomic_plane.c	FUNCTION_8	CALL_1
0x40004a0	      0xe800000000	                          call 0x40004a5	       297	intel_atomic_plane.c	FUNCTION_8	CALL_1
0x40004a5	      0xb8eaffffff	                     mov eax, 0xffffffea	       299	intel_atomic_plane.c	FUNCTION_8
0x40004aa	              0xc3	                                     ret	       299	intel_atomic_plane.c	FUNCTION_8
intel_plane_atomic_get_property	SWITCH,0:FOR,0:CALL,1:IF,0:ELSE,0:functions,0:DO,0:WHILE,0	6
0x4000470	        0x4883c234	                           add rdx, 0x34	       275	intel_atomic_plane.c	FUNCTION_7	CALL_1
0x4000474	    0x48c7c6000000	                              mov rsi, 0	       275	intel_atomic_plane.c	FUNCTION_7	CALL_1
0x400047b	      0xbf04000000	                              mov edi, 4	       275	intel_atomic_plane.c	FUNCTION_7	CALL_1
0x4000480	      0xe800000000	                          call 0x4000485	       275	intel_atomic_plane.c	FUNCTION_7	CALL_1
0x4000485	      0xb8eaffffff	                     mov eax, 0xffffffea	       277	intel_atomic_plane.c	FUNCTION_7
0x400048a	              0xc3	                                     ret	       277	intel_atomic_plane.c	FUNCTION_7
