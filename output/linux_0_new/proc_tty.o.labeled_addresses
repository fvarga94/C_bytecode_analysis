show_tty_range	CALL,20:DO,0:functions,0:FOR,0:ELSE,5:SWITCH,1:WHILE,0:IF,6	102
0x4000040	            0x4155	                                push r13	        30	proc_tty.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        30	proc_tty.c	FUNCTION_1
0x4000044	          0x4189d4	                           mov r12d, edx	        30	proc_tty.c	FUNCTION_1
0x4000047	              0x55	                                push rbp	        30	proc_tty.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        30	proc_tty.c	FUNCTION_1
0x4000049	    0x48c7c0000000	                              mov rax, 0	        31	proc_tty.c	FUNCTION_1	CALL_1
0x4000050	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	        31	proc_tty.c	FUNCTION_1	CALL_1
0x4000054	          0x4889f5	                            mov rbp, rsi	        30	proc_tty.c	FUNCTION_1
0x4000057	    0x48c7c6000000	                              mov rsi, 0	        31	proc_tty.c	FUNCTION_1	CALL_1
0x400005e	          0x4189cd	                           mov r13d, ecx	        30	proc_tty.c	FUNCTION_1
0x4000061	          0x4889fb	                            mov rbx, rdi	        30	proc_tty.c	FUNCTION_1
0x4000064	          0x4885d2	                           test rdx, rdx	        31	proc_tty.c	FUNCTION_1	CALL_1
0x4000067	        0x480f44d0	                          cmove rdx, rax	        31	proc_tty.c	FUNCTION_1	CALL_1
0x400006b	      0xe800000000	                          call 0x4000070	        31	proc_tty.c	FUNCTION_1	CALL_1
0x4000070	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	        32	proc_tty.c	FUNCTION_1	CALL_2
0x4000074	    0x48c7c6000000	                              mov rsi, 0	        32	proc_tty.c	FUNCTION_1	CALL_2
0x400007b	          0x4889df	                            mov rdi, rbx	        32	proc_tty.c	FUNCTION_1	CALL_2
0x400007e	      0xe800000000	                          call 0x4000083	        32	proc_tty.c	FUNCTION_1	CALL_2
0x4000083	          0x4489e1	                           mov ecx, r12d	        35	proc_tty.c	FUNCTION_1	IF_1	CALL_6
0x4000086	          0x4489e2	                           mov edx, r12d	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x4000089	    0x81e1ffff0f00	                        and ecx, 0xfffff	        35	proc_tty.c	FUNCTION_1	IF_1	CALL_6
0x400008f	          0xc1ea14	                           shr edx, 0x14	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x4000092	        0x837d3401	               cmp dword [rbp + 0x34], 1	        33	proc_tty.c	FUNCTION_1	IF_1
0x4000096	     0xf86c3000000	                           jbe 0x400015f	        33	proc_tty.c	FUNCTION_1	IF_1
0x400009c	      0x468d4429ff	                lea r8d, [rcx + r13 - 1]	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x40000a1	    0x48c7c6000000	                              mov rsi, 0	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x40000a8	          0x4889df	                            mov rdi, rbx	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x40000ab	      0xe800000000	                          call 0x40000b0	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x40000b0	         0xfbf5538	           movsx edx, word [rbp + 0x38] 	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000b4	        0x6683fa02	                               cmp dx, 2	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000b8	     0xf84be000000	                            je 0x400017c	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000be	            0x7e5b	                           jle 0x400011b	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000c0	        0x6683fa03	                               cmp dx, 3	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000c4	            0x7433	                            je 0x40000f9	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000c6	        0x6683fa04	                               cmp dx, 4	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000ca	     0xf85c0000000	                           jne 0x4000190	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000d0	         0xfb7453a	           movzx eax, word [rbp + 0x3a] 	        56	proc_tty.c	FUNCTION_1	SWITCH_1	IF_5
0x40000d4	        0x6683f801	                               cmp ax, 1	        56	proc_tty.c	FUNCTION_1	SWITCH_1	IF_5
0x40000d8	     0xf84de000000	                            je 0x40001bc	        56	proc_tty.c	FUNCTION_1	SWITCH_1	IF_5
0x40000de	        0x6683f802	                               cmp ax, 2	        58	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_4	IF_6
0x40000e2	     0xf84c0000000	                            je 0x40001a8	        58	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_4	IF_6
0x40000e8	    0x48c7c6000000	                              mov rsi, 0	        61	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_18
0x40000ef	          0x4889df	                            mov rdi, rbx	        61	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_18
0x40000f2	      0xe800000000	                          call 0x40000f7	        61	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_18
0x40000f7	            0xeb0f	                           jmp 0x4000108	        61	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_18
0x40000f9	    0x48c7c6000000	                              mov rsi, 0	        53	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_15
0x4000100	          0x4889df	                            mov rdi, rbx	        53	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_15
0x4000103	      0xe800000000	                          call 0x4000108	        53	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_15
0x4000108	          0x4889df	                            mov rdi, rbx	        66	proc_tty.c	FUNCTION_1	CALL_20
0x400010b	      0xbe0a000000	                            mov esi, 0xa	        66	proc_tty.c	FUNCTION_1	CALL_20
0x4000110	              0x5b	                                 pop rbx	        67	proc_tty.c	FUNCTION_1
0x4000111	              0x5d	                                 pop rbp	        67	proc_tty.c	FUNCTION_1
0x4000112	            0x415c	                                 pop r12	        67	proc_tty.c	FUNCTION_1
0x4000114	            0x415d	                                 pop r13	        67	proc_tty.c	FUNCTION_1
0x4000116	      0xe900000000	                           jmp 0x400011b	        66	proc_tty.c	FUNCTION_1	CALL_20
0x400011b	        0x6683fa01	                               cmp dx, 1	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x400011f	            0x756f	                           jne 0x4000190	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x4000121	    0x48c7c6000000	                              mov rsi, 0	        41	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_10
0x4000128	          0x4889df	                            mov rdi, rbx	        41	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_10
0x400012b	      0xe800000000	                          call 0x4000130	        41	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_10
0x4000130	         0xfb7453a	           movzx eax, word [rbp + 0x3a] 	        42	proc_tty.c	FUNCTION_1	SWITCH_1	IF_2
0x4000134	        0x6683f801	                               cmp ax, 1	        42	proc_tty.c	FUNCTION_1	SWITCH_1	IF_2
0x4000138	     0xf8492000000	                            je 0x40001d0	        42	proc_tty.c	FUNCTION_1	SWITCH_1	IF_2
0x400013e	        0x6683f803	                               cmp ax, 3	        44	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_3
0x4000142	     0xf849c000000	                            je 0x40001e4	        44	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_3
0x4000148	        0x6683f802	                               cmp ax, 2	        46	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_3	IF_4
0x400014c	            0x75ba	                           jne 0x4000108	        46	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_3	IF_4
0x400014e	    0x48c7c6000000	                              mov rsi, 0	        47	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_3	IF_4
0x4000155	          0x4889df	                            mov rdi, rbx	        47	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_3	IF_4
0x4000158	      0xe800000000	                          call 0x400015d	        47	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_3	IF_4
0x400015d	            0xeba9	                           jmp 0x4000108	        47	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_3	IF_4
0x400015f	    0x48c7c6000000	                              mov rsi, 0	        37	proc_tty.c	FUNCTION_1	ELSE_1	CALL_9
0x4000166	          0x4889df	                            mov rdi, rbx	        37	proc_tty.c	FUNCTION_1	ELSE_1	CALL_9
0x4000169	      0xe800000000	                          call 0x400016e	        37	proc_tty.c	FUNCTION_1	ELSE_1	CALL_9
0x400016e	         0xfbf5538	           movsx edx, word [rbp + 0x38] 	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x4000172	        0x6683fa02	                               cmp dx, 2	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x4000176	     0xf8542ffffff	                           jne 0x40000be	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x400017c	    0x48c7c6000000	                              mov rsi, 0	        50	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_14
0x4000183	          0x4889df	                            mov rdi, rbx	        50	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_14
0x4000186	      0xe800000000	                          call 0x400018b	        50	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_14
0x400018b	      0xe978ffffff	                           jmp 0x4000108	        51	proc_tty.c	FUNCTION_1	SWITCH_1
0x4000190	         0xfbf4d3a	           movsx ecx, word [rbp + 0x3a] 	        64	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_19
0x4000194	    0x48c7c6000000	                              mov rsi, 0	        64	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_19
0x400019b	          0x4889df	                            mov rdi, rbx	        64	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_19
0x400019e	      0xe800000000	                          call 0x40001a3	        64	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_19
0x40001a3	      0xe960ffffff	                           jmp 0x4000108	        64	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_19
0x40001a8	    0x48c7c6000000	                              mov rsi, 0	        59	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_4	IF_6
0x40001af	          0x4889df	                            mov rdi, rbx	        59	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_4	IF_6
0x40001b2	      0xe800000000	                          call 0x40001b7	        59	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_4	IF_6
0x40001b7	      0xe94cffffff	                           jmp 0x4000108	        59	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_4	IF_6
0x40001bc	    0x48c7c6000000	                              mov rsi, 0	        57	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_16
0x40001c3	          0x4889df	                            mov rdi, rbx	        57	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_16
0x40001c6	      0xe800000000	                          call 0x40001cb	        57	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_16
0x40001cb	      0xe938ffffff	                           jmp 0x4000108	        57	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_16
0x40001d0	    0x48c7c6000000	                              mov rsi, 0	        43	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001d7	          0x4889df	                            mov rdi, rbx	        43	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001da	      0xe800000000	                          call 0x40001df	        43	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001df	      0xe924ffffff	                           jmp 0x4000108	        43	proc_tty.c	FUNCTION_1	SWITCH_1	CALL_11
0x40001e4	    0x48c7c6000000	                              mov rsi, 0	        45	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_3
0x40001eb	          0x4889df	                            mov rdi, rbx	        45	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_3
0x40001ee	      0xe800000000	                          call 0x40001f3	        45	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_3
0x40001f3	      0xe910ffffff	                           jmp 0x4000108	        45	proc_tty.c	FUNCTION_1	SWITCH_1	ELSE_2	IF_3
proc_tty_unregister_driver	CALL,1:DO,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:IF,1	11
0x4000440	        0x488b4770	            mov rax, qword [rdi + 0x70] 	       153	proc_tty.c	FUNCTION_7
0x4000444	          0x4885c0	                           test rax, rax	       154	proc_tty.c	FUNCTION_7	IF_1
0x4000447	            0x7420	                            je 0x4000469	       154	proc_tty.c	FUNCTION_7	IF_1
0x4000449	              0x53	                                push rbx	       150	proc_tty.c	FUNCTION_7
0x400044a	    0x488b35000000	            mov rsi, qword [0x04000451] 	       157	proc_tty.c	FUNCTION_7	CALL_1
0x4000451	          0x4889fb	                            mov rbx, rdi	       157	proc_tty.c	FUNCTION_7	CALL_1
0x4000454	    0x488bb8900000	            mov rdi, qword [rax + 0x90] 	       157	proc_tty.c	FUNCTION_7	CALL_1
0x400045b	      0xe800000000	                          call 0x4000460	       157	proc_tty.c	FUNCTION_7	CALL_1
0x4000460	    0x48c743700000	               mov qword [rbx + 0x70], 0	       159	proc_tty.c	FUNCTION_7
0x4000468	              0x5b	                                 pop rbx	       160	proc_tty.c	FUNCTION_7
0x4000469	            0xf3c3	                                     ret	       160	proc_tty.c	FUNCTION_7
t_stop	CALL,1:DO,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:IF,0	2
0x40003c0	    0x48c7c7000000	                              mov rdi, 0	       119	proc_tty.c	FUNCTION_5	CALL_1
0x40003c7	      0xe900000000	                           jmp 0x40003cc	       119	proc_tty.c	FUNCTION_5	CALL_1
proc_tty_init	CALL,5:DO,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:IF,1	31
0x4000040	            0x4155	                                push r13	        30	proc_tty.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        30	proc_tty.c	FUNCTION_1
0x4000044	          0x4189d4	                           mov r12d, edx	        30	proc_tty.c	FUNCTION_1
0x4000047	              0x55	                                push rbp	        30	proc_tty.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        30	proc_tty.c	FUNCTION_1
0x4000049	    0x48c7c0000000	                              mov rax, 0	        31	proc_tty.c	FUNCTION_1	CALL_1
0x4000050	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	        31	proc_tty.c	FUNCTION_1	CALL_1
0x4000054	          0x4889f5	                            mov rbp, rsi	        30	proc_tty.c	FUNCTION_1
0x4000057	    0x48c7c6000000	                              mov rsi, 0	        31	proc_tty.c	FUNCTION_1	CALL_1
0x400005e	          0x4189cd	                           mov r13d, ecx	        30	proc_tty.c	FUNCTION_1
0x4000061	          0x4889fb	                            mov rbx, rdi	        30	proc_tty.c	FUNCTION_1
0x4000064	          0x4885d2	                           test rdx, rdx	        31	proc_tty.c	FUNCTION_1	CALL_1
0x4000067	        0x480f44d0	                          cmove rdx, rax	        31	proc_tty.c	FUNCTION_1	CALL_1
0x400006b	      0xe800000000	                          call 0x4000070	        31	proc_tty.c	FUNCTION_1	CALL_1
0x4000070	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	        32	proc_tty.c	FUNCTION_1	CALL_2
0x4000074	    0x48c7c6000000	                              mov rsi, 0	        32	proc_tty.c	FUNCTION_1	CALL_2
0x400007b	          0x4889df	                            mov rdi, rbx	        32	proc_tty.c	FUNCTION_1	CALL_2
0x400007e	      0xe800000000	                          call 0x4000083	        32	proc_tty.c	FUNCTION_1	CALL_2
0x4000083	          0x4489e1	                           mov ecx, r12d	        35	proc_tty.c	FUNCTION_1	IF_1	CALL_6
0x4000086	          0x4489e2	                           mov edx, r12d	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x4000089	    0x81e1ffff0f00	                        and ecx, 0xfffff	        35	proc_tty.c	FUNCTION_1	IF_1	CALL_6
0x400008f	          0xc1ea14	                           shr edx, 0x14	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x4000092	        0x837d3401	               cmp dword [rbp + 0x34], 1	        33	proc_tty.c	FUNCTION_1	IF_1
0x4000096	     0xf86c3000000	                           jbe 0x400015f	        33	proc_tty.c	FUNCTION_1	IF_1
0x400009c	      0x468d4429ff	                lea r8d, [rcx + r13 - 1]	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x40000a1	    0x48c7c6000000	                              mov rsi, 0	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x40000a8	          0x4889df	                            mov rdi, rbx	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x40000ab	      0xe800000000	                          call 0x40000b0	        34	proc_tty.c	FUNCTION_1	IF_1	CALL_5
0x40000b0	         0xfbf5538	           movsx edx, word [rbp + 0x38] 	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000b4	              0x66	                                 invalid	        39	proc_tty.c	FUNCTION_1	SWITCH_1
0x40000b5	              0x83	                                 invalid	        39	proc_tty.c	FUNCTION_1	SWITCH_1
t_next	CALL,1:DO,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:IF,0	3
0x40003b0	          0x4889f7	                            mov rdi, rsi	       113	proc_tty.c	FUNCTION_4
0x40003b3	    0x48c7c6000000	                              mov rsi, 0	       114	proc_tty.c	FUNCTION_4	CALL_1
0x40003ba	      0xe900000000	                           jmp 0x40003bf	       114	proc_tty.c	FUNCTION_4	CALL_1
show_tty_driver	CALL,20:DO,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,1:IF,2	104
0x4000200	            0x4157	                                push r15	        70	proc_tty.c	FUNCTION_2
0x4000202	            0x4156	                                push r14	        70	proc_tty.c	FUNCTION_2
0x4000204	            0x4155	                                push r13	        70	proc_tty.c	FUNCTION_2
0x4000206	            0x4154	                                push r12	        70	proc_tty.c	FUNCTION_2
0x4000208	    0x4c8dae58ffff	                   lea r13, [rsi - 0xa8]	        71	proc_tty.c	FUNCTION_2	CALL_1
0x400020f	              0x55	                                push rbp	        70	proc_tty.c	FUNCTION_2
0x4000210	              0x53	                                push rbx	        70	proc_tty.c	FUNCTION_2
0x4000211	          0x4889fd	                            mov rbp, rdi	        70	proc_tty.c	FUNCTION_2
0x4000214	        0x448b7e84	            mov r15d, dword [rsi - 0x7c]	        72	proc_tty.c	FUNCTION_2	CALL_2
0x4000218	        0x448b768c	            mov r14d, dword [rsi - 0x74]	        73	proc_tty.c	FUNCTION_2
0x400021c	        0x41c1e714	                          shl r15d, 0x14	        72	proc_tty.c	FUNCTION_2	CALL_2
0x4000220	        0x440b7e88	             or r15d, dword [rsi - 0x78]	        72	proc_tty.c	FUNCTION_2	CALL_2
0x4000224	          0x4501fe	                          add r14d, r15d	        73	proc_tty.c	FUNCTION_2
0x4000227	    0x483935000000	            cmp qword [0x0400022e], rsi 	        75	proc_tty.c	FUNCTION_2	IF_1
0x400022e	            0x7461	                            je 0x4000291	        75	proc_tty.c	FUNCTION_2	IF_1
0x4000230	          0x4489f8	                           mov eax, r15d	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000233	          0x4589f4	                          mov r12d, r14d	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000236	          0xc1e814	                           shr eax, 0x14	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000239	        0x41c1ec14	                          shr r12d, 0x14	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x400023d	          0x4139c4	                           cmp r12d, eax	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000240	            0x764a	                           jbe 0x400028c	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000242	          0x8d5801	                      lea ebx, [rax + 1]	        96	proc_tty.c	FUNCTION_2	WHILE_1	CALL_18
0x4000245	          0x4489fa	                           mov edx, r15d	        97	proc_tty.c	FUNCTION_2	WHILE_1	CALL_19
0x4000248	          0x4c89ee	                            mov rsi, r13	        97	proc_tty.c	FUNCTION_2	WHILE_1	CALL_19
0x400024b	          0x4889ef	                            mov rdi, rbp	        97	proc_tty.c	FUNCTION_2	WHILE_1	CALL_19
0x400024e	          0xc1e314	                           shl ebx, 0x14	        96	proc_tty.c	FUNCTION_2	WHILE_1	CALL_18
0x4000251	            0x89d9	                            mov ecx, ebx	        97	proc_tty.c	FUNCTION_2	WHILE_1	CALL_19
0x4000253	          0x4429f9	                           sub ecx, r15d	        97	proc_tty.c	FUNCTION_2	WHILE_1	CALL_19
0x4000256	          0x4189df	                           mov r15d, ebx	        96	proc_tty.c	FUNCTION_2	WHILE_1	CALL_18
0x4000259	      0xe8e2fdffff	                 call sym.show_tty_range	        97	proc_tty.c	FUNCTION_2	WHILE_1	CALL_19
0x400025e	            0x89d8	                            mov eax, ebx	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000260	          0xc1e814	                           shr eax, 0x14	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000263	          0x4439e0	                           cmp eax, r12d	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000266	            0x72da	                            jb 0x4000242	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000268	          0x4139de	                           cmp r14d, ebx	       100	proc_tty.c	FUNCTION_2	IF_2
0x400026b	            0x7412	                            je 0x400027f	       100	proc_tty.c	FUNCTION_2	IF_2
0x400026d	          0x4489f1	                           mov ecx, r14d	       101	proc_tty.c	FUNCTION_2	CALL_20
0x4000270	            0x89da	                            mov edx, ebx	       101	proc_tty.c	FUNCTION_2	CALL_20
0x4000272	          0x4c89ee	                            mov rsi, r13	       101	proc_tty.c	FUNCTION_2	CALL_20
0x4000275	            0x29d9	                            sub ecx, ebx	       101	proc_tty.c	FUNCTION_2	CALL_20
0x4000277	          0x4889ef	                            mov rdi, rbp	       101	proc_tty.c	FUNCTION_2	CALL_20
0x400027a	      0xe8c1fdffff	                 call sym.show_tty_range	       101	proc_tty.c	FUNCTION_2	CALL_20
0x400027f	              0x5b	                                 pop rbx	       103	proc_tty.c	FUNCTION_2
0x4000280	            0x31c0	                            xor eax, eax	       103	proc_tty.c	FUNCTION_2
0x4000282	              0x5d	                                 pop rbp	       103	proc_tty.c	FUNCTION_2
0x4000283	            0x415c	                                 pop r12	       103	proc_tty.c	FUNCTION_2
0x4000285	            0x415d	                                 pop r13	       103	proc_tty.c	FUNCTION_2
0x4000287	            0x415e	                                 pop r14	       103	proc_tty.c	FUNCTION_2
0x4000289	            0x415f	                                 pop r15	       103	proc_tty.c	FUNCTION_2
0x400028b	              0xc3	                                     ret	       103	proc_tty.c	FUNCTION_2
0x400028c	          0x4489fb	                           mov ebx, r15d	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x400028f	            0xebd7	                           jmp 0x4000268	        95	proc_tty.c	FUNCTION_2	WHILE_1	CALL_16
0x4000291	    0x48c7c1000000	                              mov rcx, 0	        77	proc_tty.c	FUNCTION_2	IF_1	CALL_3
0x4000298	    0x48c7c2000000	                              mov rdx, 0	        77	proc_tty.c	FUNCTION_2	IF_1	CALL_3
0x400029f	    0x48c7c6000000	                              mov rsi, 0	        77	proc_tty.c	FUNCTION_2	IF_1	CALL_3
0x40002a6	      0xe800000000	                          call 0x40002ab	        77	proc_tty.c	FUNCTION_2	IF_1	CALL_3
0x40002ab	            0x31c9	                            xor ecx, ecx	        78	proc_tty.c	FUNCTION_2	IF_1	CALL_4
0x40002ad	      0xba05000000	                              mov edx, 5	        78	proc_tty.c	FUNCTION_2	IF_1	CALL_4
0x40002b2	          0x4889ef	                            mov rdi, rbp	        78	proc_tty.c	FUNCTION_2	IF_1	CALL_4
0x40002b5	    0x48c7c6000000	                              mov rsi, 0	        78	proc_tty.c	FUNCTION_2	IF_1	CALL_4
0x40002bc	      0xe800000000	                          call 0x40002c1	        78	proc_tty.c	FUNCTION_2	IF_1	CALL_4
0x40002c1	          0x4889ef	                            mov rdi, rbp	        79	proc_tty.c	FUNCTION_2	IF_1	CALL_5
0x40002c4	    0x48c7c6000000	                              mov rsi, 0	        79	proc_tty.c	FUNCTION_2	IF_1	CALL_5
0x40002cb	      0xe800000000	                          call 0x40002d0	        79	proc_tty.c	FUNCTION_2	IF_1	CALL_5
0x40002d0	          0x4889ef	                            mov rdi, rbp	        80	proc_tty.c	FUNCTION_2	IF_1	CALL_6
0x40002d3	    0x48c7c1000000	                              mov rcx, 0	        80	proc_tty.c	FUNCTION_2	IF_1	CALL_6
0x40002da	    0x48c7c2000000	                              mov rdx, 0	        80	proc_tty.c	FUNCTION_2	IF_1	CALL_6
0x40002e1	    0x48c7c6000000	                              mov rsi, 0	        80	proc_tty.c	FUNCTION_2	IF_1	CALL_6
0x40002e8	      0xe800000000	                          call 0x40002ed	        80	proc_tty.c	FUNCTION_2	IF_1	CALL_6
0x40002ed	      0xb901000000	                              mov ecx, 1	        81	proc_tty.c	FUNCTION_2	IF_1	CALL_7
0x40002f2	      0xba05000000	                              mov edx, 5	        81	proc_tty.c	FUNCTION_2	IF_1	CALL_7
0x40002f7	          0x4889ef	                            mov rdi, rbp	        81	proc_tty.c	FUNCTION_2	IF_1	CALL_7
0x40002fa	    0x48c7c6000000	                              mov rsi, 0	        81	proc_tty.c	FUNCTION_2	IF_1	CALL_7
0x4000301	      0xe800000000	                          call 0x4000306	        81	proc_tty.c	FUNCTION_2	IF_1	CALL_7
0x4000306	          0x4889ef	                            mov rdi, rbp	        82	proc_tty.c	FUNCTION_2	IF_1	CALL_8
0x4000309	    0x48c7c6000000	                              mov rsi, 0	        82	proc_tty.c	FUNCTION_2	IF_1	CALL_8
0x4000310	      0xe800000000	                          call 0x4000315	        82	proc_tty.c	FUNCTION_2	IF_1	CALL_8
0x4000315	          0x4889ef	                            mov rdi, rbp	        84	proc_tty.c	FUNCTION_2	IF_1	CALL_9
0x4000318	    0x48c7c1000000	                              mov rcx, 0	        84	proc_tty.c	FUNCTION_2	IF_1	CALL_9
0x400031f	    0x48c7c2000000	                              mov rdx, 0	        84	proc_tty.c	FUNCTION_2	IF_1	CALL_9
0x4000326	    0x48c7c6000000	                              mov rsi, 0	        84	proc_tty.c	FUNCTION_2	IF_1	CALL_9
0x400032d	      0xe800000000	                          call 0x4000332	        84	proc_tty.c	FUNCTION_2	IF_1	CALL_9
0x4000332	      0xb902000000	                              mov ecx, 2	        85	proc_tty.c	FUNCTION_2	IF_1	CALL_10
0x4000337	      0xba05000000	                              mov edx, 5	        85	proc_tty.c	FUNCTION_2	IF_1	CALL_10
0x400033c	          0x4889ef	                            mov rdi, rbp	        85	proc_tty.c	FUNCTION_2	IF_1	CALL_10
0x400033f	    0x48c7c6000000	                              mov rsi, 0	        85	proc_tty.c	FUNCTION_2	IF_1	CALL_10
0x4000346	      0xe800000000	                          call 0x400034b	        85	proc_tty.c	FUNCTION_2	IF_1	CALL_10
0x400034b	          0x4889ef	                            mov rdi, rbp	        86	proc_tty.c	FUNCTION_2	IF_1	CALL_11
0x400034e	    0x48c7c6000000	                              mov rsi, 0	        86	proc_tty.c	FUNCTION_2	IF_1	CALL_11
0x4000355	      0xe800000000	                          call 0x400035a	        86	proc_tty.c	FUNCTION_2	IF_1	CALL_11
0x400035a	          0x4889ef	                            mov rdi, rbp	        89	proc_tty.c	FUNCTION_2	IF_1	CALL_12
0x400035d	    0x48c7c1000000	                              mov rcx, 0	        89	proc_tty.c	FUNCTION_2	IF_1	CALL_12
0x4000364	    0x48c7c2000000	                              mov rdx, 0	        89	proc_tty.c	FUNCTION_2	IF_1	CALL_12
0x400036b	    0x48c7c6000000	                              mov rsi, 0	        89	proc_tty.c	FUNCTION_2	IF_1	CALL_12
0x4000372	      0xe800000000	                          call 0x4000377	        89	proc_tty.c	FUNCTION_2	IF_1	CALL_12
0x4000377	          0x4889ef	                            mov rdi, rbp	        90	proc_tty.c	FUNCTION_2	IF_1	CALL_13
0x400037a	            0x31c9	                            xor ecx, ecx	        90	proc_tty.c	FUNCTION_2	IF_1	CALL_13
0x400037c	      0xba04000000	                              mov edx, 4	        90	proc_tty.c	FUNCTION_2	IF_1	CALL_13
0x4000381	    0x48c7c6000000	                              mov rsi, 0	        90	proc_tty.c	FUNCTION_2	IF_1	CALL_13
0x4000388	      0xe800000000	                          call 0x400038d	        90	proc_tty.c	FUNCTION_2	IF_1	CALL_13
0x400038d	    0x48c7c6000000	                              mov rsi, 0	        91	proc_tty.c	FUNCTION_2	IF_1	CALL_14
0x4000394	          0x4889ef	                            mov rdi, rbp	        91	proc_tty.c	FUNCTION_2	IF_1	CALL_14
0x4000397	      0xe800000000	                          call 0x400039c	        91	proc_tty.c	FUNCTION_2	IF_1	CALL_14
0x400039c	      0xe98ffeffff	                           jmp 0x4000230	        91	proc_tty.c	FUNCTION_2	IF_1	CALL_14
t_start	CALL,2:DO,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:IF,0	8
0x40003d0	              0x53	                                push rbx	       107	proc_tty.c	FUNCTION_3
0x40003d1	    0x48c7c7000000	                              mov rdi, 0	       108	proc_tty.c	FUNCTION_3	CALL_1
0x40003d8	          0x4889f3	                            mov rbx, rsi	       107	proc_tty.c	FUNCTION_3
0x40003db	      0xe800000000	                          call 0x40003e0	       108	proc_tty.c	FUNCTION_3	CALL_1
0x40003e0	          0x488b33	                    mov rsi, qword [rbx]	       109	proc_tty.c	FUNCTION_3	CALL_2
0x40003e3	    0x48c7c7000000	                              mov rdi, 0	       109	proc_tty.c	FUNCTION_3	CALL_2
0x40003ea	              0x5b	                                 pop rbx	       110	proc_tty.c	FUNCTION_3
0x40003eb	      0xe900000000	        jmp sym.proc_tty_register_driver	       109	proc_tty.c	FUNCTION_3	CALL_2
proc_tty_register_driver	CALL,1:DO,0:functions,0:FOR,0:ELSE,0:SWITCH,0:WHILE,0:IF,1	20
0x40003f0	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       137	proc_tty.c	FUNCTION_6	IF_1
0x40003f4	          0x4885c0	                           test rax, rax	       137	proc_tty.c	FUNCTION_6	IF_1
0x40003f7	            0x7407	                            je 0x4000400	       137	proc_tty.c	FUNCTION_6	IF_1
0x40003f9	      0x48837f7000	               cmp qword [rdi + 0x70], 0	       137	proc_tty.c	FUNCTION_6	IF_1
0x40003fe	            0x7401	                            je 0x4000401	       137	proc_tty.c	FUNCTION_6	IF_1
0x4000400	              0xc3	                                     ret	       144	proc_tty.c	FUNCTION_6
0x4000401	    0x488b97a00000	            mov rdx, qword [rdi + 0xa0] 	       138	proc_tty.c	FUNCTION_6	IF_1
0x4000408	    0x488b8af80000	            mov rcx, qword [rdx + 0xf8] 	       138	proc_tty.c	FUNCTION_6	IF_1
0x400040f	          0x4885c9	                           test rcx, rcx	       137	proc_tty.c	FUNCTION_6	IF_1
0x4000412	            0x74ec	                            je 0x4000400	       137	proc_tty.c	FUNCTION_6	IF_1
0x4000414	    0x488b15000000	            mov rdx, qword [0x0400041b] 	       141	proc_tty.c	FUNCTION_6	CALL_1
0x400041b	              0x53	                                push rbx	       134	proc_tty.c	FUNCTION_6
0x400041c	          0x4989f8	                             mov r8, rdi	       141	proc_tty.c	FUNCTION_6	CALL_1
0x400041f	          0x4889fb	                            mov rbx, rdi	       141	proc_tty.c	FUNCTION_6	CALL_1
0x4000422	            0x31f6	                            xor esi, esi	       141	proc_tty.c	FUNCTION_6	CALL_1
0x4000424	          0x4889c7	                            mov rdi, rax	       141	proc_tty.c	FUNCTION_6	CALL_1
0x4000427	      0xe800000000	                          call 0x400042c	       141	proc_tty.c	FUNCTION_6	CALL_1
0x400042c	        0x48894370	             mov qword [rbx + 0x70], rax	       143	proc_tty.c	FUNCTION_6
0x4000430	              0x5b	                                 pop rbx	       144	proc_tty.c	FUNCTION_6
0x4000431	              0xc3	                                     ret	       144	proc_tty.c	FUNCTION_6
