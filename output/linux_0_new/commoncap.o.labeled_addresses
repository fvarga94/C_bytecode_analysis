cap_inode_killpriv	ELSE,0:IF,1:DO,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:functions,0	6
0x40000b0	    0x48c7c6000000	                              mov rsi, 0	       323	commoncap.c	FUNCTION_10	CALL_1
0x40000b7	      0xe800000000	                          call 0x40000bc	       323	commoncap.c	FUNCTION_10	CALL_1
0x40000bc	      0xba00000000	                              mov edx, 0	       325	commoncap.c	FUNCTION_10	IF_1
0x40000c1	          0x83f8a1	             cmp eax, 0xffffffffffffffa1	       325	commoncap.c	FUNCTION_10	IF_1
0x40000c4	           0xf44c2	                          cmove eax, edx	       325	commoncap.c	FUNCTION_10	IF_1
0x40000c7	              0xc3	                                     ret	       327	commoncap.c	FUNCTION_10
get_vfs_caps_from_disk	ELSE,0:IF,8:DO,0:CALL,8:SWITCH,1:WHILE,0:FOR,0:functions,1	71
0x4000ce0	              0x53	                                push rbx	       579	commoncap.c	FUNCTION_20
0x4000ce1	          0x4889f3	                            mov rbx, rsi	       579	commoncap.c	FUNCTION_20
0x4000ce4	        0x4883ec20	                           sub rsp, 0x20	       579	commoncap.c	FUNCTION_20
0x4000ce8	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	       579	commoncap.c	FUNCTION_20
0x4000cec	    0x48c703000000	                      mov qword [rbx], 0	       589	commoncap.c	FUNCTION_20	CALL_2
0x4000cf3	    0x65488b042528	                mov rax, qword gs:[0x28]	       579	commoncap.c	FUNCTION_20
0x4000cfc	      0x4889442418	             mov qword [rsp + 0x18], rax	       579	commoncap.c	FUNCTION_20
0x4000d01	            0x31c0	                            xor eax, eax	       579	commoncap.c	FUNCTION_20
0x4000d03	    0x48c743080000	                  mov qword [rbx + 8], 0	       589	commoncap.c	FUNCTION_20	CALL_2
0x4000d0b	    0xc74310000000	               mov dword [rbx + 0x10], 0	       589	commoncap.c	FUNCTION_20	CALL_2
0x4000d12	          0x4885f6	                           test rsi, rsi	       591	commoncap.c	FUNCTION_20	IF_1
0x4000d15	            0x7473	                            je 0x4000d8a	       591	commoncap.c	FUNCTION_20	IF_1
0x4000d17	    0x41b818000000	                           mov r8d, 0x18	       595	commoncap.c	FUNCTION_20	CALL_3
0x4000d1d	          0x4889e1	                            mov rcx, rsp	       595	commoncap.c	FUNCTION_20	CALL_3
0x4000d20	    0x48c7c2000000	                              mov rdx, 0	       595	commoncap.c	FUNCTION_20	CALL_3
0x4000d27	      0xe800000000	                          call 0x4000d2c	       595	commoncap.c	FUNCTION_20	CALL_3
0x4000d2c	          0x83f8c3	             cmp eax, 0xffffffffffffffc3	       597	commoncap.c	FUNCTION_20	IF_2
0x4000d2f	            0x7459	                            je 0x4000d8a	       597	commoncap.c	FUNCTION_20	IF_2
0x4000d31	          0x83f8a1	             cmp eax, 0xffffffffffffffa1	       597	commoncap.c	FUNCTION_20	IF_2
0x4000d34	            0x7454	                            je 0x4000d8a	       597	commoncap.c	FUNCTION_20	IF_2
0x4000d36	            0x85c0	                           test eax, eax	       601	commoncap.c	FUNCTION_20	IF_3
0x4000d38	            0x782d	                            js 0x4000d67	       601	commoncap.c	FUNCTION_20	IF_3
0x4000d3a	          0x83f803	                              cmp eax, 3	       604	commoncap.c	FUNCTION_20	IF_4
0x4000d3d	            0x7623	                           jbe 0x4000d62	       604	commoncap.c	FUNCTION_20	IF_4
0x4000d3f	          0x8b1424	                    mov edx, dword [rsp]	       607	commoncap.c	FUNCTION_20	CALL_4
0x4000d42	            0x8913	                    mov dword [rbx], edx	       607	commoncap.c	FUNCTION_20	CALL_4
0x4000d44	    0x81e2000000ff	                     and edx, 0xff000000	       610	commoncap.c	FUNCTION_20	SWITCH_1
0x4000d4a	    0x81fa00000002	                      cmp edx, 0x2000000	       610	commoncap.c	FUNCTION_20	SWITCH_1
0x4000d50	            0x7468	                            je 0x4000dba	       610	commoncap.c	FUNCTION_20	SWITCH_1
0x4000d52	    0x81fa00000003	                      cmp edx, 0x3000000	       610	commoncap.c	FUNCTION_20	SWITCH_1
0x4000d58	            0x7423	                            je 0x4000d7d	       610	commoncap.c	FUNCTION_20	SWITCH_1
0x4000d5a	    0x81fa00000001	                      cmp edx, 0x1000000	       610	commoncap.c	FUNCTION_20	SWITCH_1
0x4000d60	            0x742f	                            je 0x4000d91	       610	commoncap.c	FUNCTION_20	SWITCH_1
0x4000d62	      0xb8eaffffff	                     mov eax, 0xffffffea	       629	commoncap.c	FUNCTION_20	SWITCH_1
0x4000d67	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       648	commoncap.c	FUNCTION_20
0x4000d6c	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       648	commoncap.c	FUNCTION_20
0x4000d75	            0x7560	                           jne 0x4000dd7	       648	commoncap.c	FUNCTION_20
0x4000d77	        0x4883c420	                           add rsp, 0x20	       648	commoncap.c	FUNCTION_20
0x4000d7b	              0x5b	                                 pop rbx	       648	commoncap.c	FUNCTION_20
0x4000d7c	              0xc3	                                     ret	       648	commoncap.c	FUNCTION_20
0x4000d7d	          0x83f818	                           cmp eax, 0x18	       622	commoncap.c	FUNCTION_20	SWITCH_1	IF_7
0x4000d80	            0x75e0	                           jne 0x4000d62	       622	commoncap.c	FUNCTION_20	SWITCH_1	IF_7
0x4000d82	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       337	commoncap.c	FUNCTION_11	FOR_1	IF_2	CALL_3
0x4000d86	            0x85c0	                           test eax, eax	       337	commoncap.c	FUNCTION_11	FOR_1	IF_2	CALL_3
0x4000d88	            0x7435	                            je 0x4000dbf	       337	commoncap.c	FUNCTION_11	FOR_1	IF_2	CALL_3
0x4000d8a	      0xb8c3ffffff	                     mov eax, 0xffffffc3	       592	commoncap.c	FUNCTION_20	IF_1
0x4000d8f	            0xebd6	                           jmp 0x4000d67	       592	commoncap.c	FUNCTION_20	IF_1
0x4000d91	          0x83f80c	                            cmp eax, 0xc	       612	commoncap.c	FUNCTION_20	SWITCH_1	IF_5
0x4000d94	            0x75cc	                           jne 0x4000d62	       612	commoncap.c	FUNCTION_20	SWITCH_1	IF_5
0x4000d96	        0x8b442404	                mov eax, dword [rsp + 4]	       640	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_1
0x4000d9a	          0x8b5308	                mov edx, dword [rbx + 8]	       640	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_1
0x4000d9d	          0x894304	                mov dword [rbx + 4], eax	       640	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_1
0x4000da0	        0x8b442408	                mov eax, dword [rsp + 8]	       641	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000da4	          0x89430c	              mov dword [rbx + 0xc], eax	       641	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000da7	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       641	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000daa	          0x83e03f	                           and eax, 0x3f	       645	commoncap.c	FUNCTION_20
0x4000dad	          0x83e23f	                           and edx, 0x3f	       644	commoncap.c	FUNCTION_20
0x4000db0	          0x894310	             mov dword [rbx + 0x10], eax	       645	commoncap.c	FUNCTION_20
0x4000db3	          0x895308	                mov dword [rbx + 8], edx	       644	commoncap.c	FUNCTION_20
0x4000db6	            0x31c0	                            xor eax, eax	       647	commoncap.c	FUNCTION_20
0x4000db8	            0xebad	                           jmp 0x4000d67	       647	commoncap.c	FUNCTION_20
0x4000dba	          0x83f814	                           cmp eax, 0x14	       617	commoncap.c	FUNCTION_20	SWITCH_1	IF_6
0x4000dbd	            0x75a3	                           jne 0x4000d62	       617	commoncap.c	FUNCTION_20	SWITCH_1	IF_6
0x4000dbf	        0x8b442404	                mov eax, dword [rsp + 4]	       640	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_1
0x4000dc3	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       640	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_1
0x4000dc7	          0x894304	                mov dword [rbx + 4], eax	       640	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_1
0x4000dca	        0x8b442408	                mov eax, dword [rsp + 8]	       641	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000dce	          0x89430c	              mov dword [rbx + 0xc], eax	       641	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000dd1	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       641	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000dd5	            0xebd3	                           jmp 0x4000daa	       641	commoncap.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000dd7	      0xe800000000	                          call 0x4000ddc	       648	commoncap.c	FUNCTION_20
cap_inode_removexattr	ELSE,0:IF,5:DO,0:CALL,5:SWITCH,0:WHILE,0:FOR,0:functions,0	34
0x40014e0	      0xb909000000	                              mov ecx, 9	       957	commoncap.c	FUNCTION_32	IF_1	CALL_1
0x40014e5	          0x4989f8	                             mov r8, rdi	       953	commoncap.c	FUNCTION_32
0x40014e8	    0x48c7c7000000	                              mov rdi, 0	       957	commoncap.c	FUNCTION_32	IF_1	CALL_1
0x40014ef	          0x4889f2	                            mov rdx, rsi	       953	commoncap.c	FUNCTION_32
0x40014f2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       957	commoncap.c	FUNCTION_32	IF_1	CALL_1
0x40014f4	        0x400f97c6	                                seta sil	       957	commoncap.c	FUNCTION_32	IF_1	CALL_1
0x40014f8	           0xf92c1	                                 setb cl	       957	commoncap.c	FUNCTION_32	IF_1	CALL_1
0x40014fb	            0x31c0	                            xor eax, eax	       959	commoncap.c	FUNCTION_32	IF_1
0x40014fd	          0x4038ce	                             cmp sil, cl	       957	commoncap.c	FUNCTION_32	IF_1	CALL_1
0x4001500	            0x7534	                           jne 0x4001536	       957	commoncap.c	FUNCTION_32	IF_1	CALL_1
0x4001502	          0x4889d6	                            mov rsi, rdx	       957	commoncap.c	FUNCTION_32	IF_1	CALL_1
0x4001505	      0xb914000000	                           mov ecx, 0x14	       961	commoncap.c	FUNCTION_32	IF_2	CALL_2
0x400150a	    0x48c7c7000000	                              mov rdi, 0	       961	commoncap.c	FUNCTION_32	IF_2	CALL_2
0x4001511	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       961	commoncap.c	FUNCTION_32	IF_2	CALL_2
0x4001513	            0x7523	                           jne 0x4001538	       961	commoncap.c	FUNCTION_32	IF_2	CALL_2
0x4001515	        0x498b7830	              mov rdi, qword [r8 + 0x30]	       961	commoncap.c	FUNCTION_32	IF_2	CALL_2
0x4001519	          0x4885ff	                           test rdi, rdi	       964	commoncap.c	FUNCTION_32	IF_2	IF_3
0x400151c	            0x7413	                            je 0x4001531	       964	commoncap.c	FUNCTION_32	IF_2	IF_3
0x400151e	      0xbe1f000000	                           mov esi, 0x1f	       966	commoncap.c	FUNCTION_32	IF_2	IF_4	CALL_4
0x4001523	      0xe800000000	                          call 0x4001528	       966	commoncap.c	FUNCTION_32	IF_2	IF_4	CALL_4
0x4001528	          0x83f001	                              xor eax, 1	       966	commoncap.c	FUNCTION_32	IF_2	IF_4	CALL_4
0x400152b	           0xfb6c0	                           movzx eax, al	       966	commoncap.c	FUNCTION_32	IF_2	IF_4	CALL_4
0x400152e	            0xf7d8	                                 neg eax	       966	commoncap.c	FUNCTION_32	IF_2	IF_4	CALL_4
0x4001530	              0xc3	                                     ret	       966	commoncap.c	FUNCTION_32	IF_2	IF_4	CALL_4
0x4001531	      0xb8eaffffff	                     mov eax, 0xffffffea	       965	commoncap.c	FUNCTION_32	IF_2	IF_3
0x4001536	            0xf3c3	                                     ret	       974	commoncap.c	FUNCTION_32
0x4001538	        0x498b4068	              mov rax, qword [r8 + 0x68]	       954	commoncap.c	FUNCTION_32
0x400153c	      0xbe15000000	                           mov esi, 0x15	       971	commoncap.c	FUNCTION_32	IF_5	CALL_5
0x4001541	    0x488bb8b80400	           mov rdi, qword [rax + 0x4b8] 	       971	commoncap.c	FUNCTION_32	IF_5	CALL_5
0x4001548	      0xe800000000	                          call 0x400154d	       971	commoncap.c	FUNCTION_32	IF_5	CALL_5
0x400154d	          0x83f001	                              xor eax, 1	       971	commoncap.c	FUNCTION_32	IF_5	CALL_5
0x4001550	           0xfb6c0	                           movzx eax, al	       971	commoncap.c	FUNCTION_32	IF_5	CALL_5
0x4001553	            0xf7d8	                                 neg eax	       971	commoncap.c	FUNCTION_32	IF_5	CALL_5
0x4001555	              0xc3	                                     ret	       971	commoncap.c	FUNCTION_32	IF_5	CALL_5
cap_settime	ELSE,0:IF,1:DO,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:functions,0	6
0x4000070	      0xbf19000000	                           mov edi, 0x19	       119	commoncap.c	FUNCTION_3	IF_1	CALL_1
0x4000075	      0xe800000000	                          call 0x400007a	       119	commoncap.c	FUNCTION_3	IF_1	CALL_1
0x400007a	          0x83f001	                              xor eax, 1	       119	commoncap.c	FUNCTION_3	IF_1	CALL_1
0x400007d	           0xfb6c0	                           movzx eax, al	       119	commoncap.c	FUNCTION_3	IF_1	CALL_1
0x4000080	            0xf7d8	                                 neg eax	       119	commoncap.c	FUNCTION_3	IF_1	CALL_1
0x4000082	              0xc3	                                     ret	       122	commoncap.c	FUNCTION_3
cap_task_setscheduler	ELSE,0:IF,0:DO,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:functions,0	1
0x40008c0	      0xe96bffffff	                   jmp sym.cap_safe_nice	      1114	commoncap.c	FUNCTION_36	CALL_1
cap_inode_setxattr	ELSE,0:IF,3:DO,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:functions,0	29
0x4001470	      0xb909000000	                              mov ecx, 9	       925	commoncap.c	FUNCTION_31	IF_1	CALL_1
0x4001475	          0x4989f8	                             mov r8, rdi	       921	commoncap.c	FUNCTION_31
0x4001478	    0x48c7c7000000	                              mov rdi, 0	       925	commoncap.c	FUNCTION_31	IF_1	CALL_1
0x400147f	          0x4889f2	                            mov rdx, rsi	       921	commoncap.c	FUNCTION_31
0x4001482	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       925	commoncap.c	FUNCTION_31	IF_1	CALL_1
0x4001484	        0x400f97c6	                                seta sil	       925	commoncap.c	FUNCTION_31	IF_1	CALL_1
0x4001488	           0xf92c1	                                 setb cl	       925	commoncap.c	FUNCTION_31	IF_1	CALL_1
0x400148b	            0x31c0	                            xor eax, eax	       927	commoncap.c	FUNCTION_31	IF_1
0x400148d	          0x4038ce	                             cmp sil, cl	       925	commoncap.c	FUNCTION_31	IF_1	CALL_1
0x4001490	            0x7520	                           jne 0x40014b2	       925	commoncap.c	FUNCTION_31	IF_1	CALL_1
0x4001492	          0x4889d6	                            mov rsi, rdx	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x4001495	      0xb914000000	                           mov ecx, 0x14	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x400149a	    0x48c7c7000000	                              mov rdi, 0	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x40014a1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x40014a3	           0xf97c0	                                 seta al	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x40014a6	           0xf92c2	                                 setb dl	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x40014a9	            0x29d0	                            sub eax, edx	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x40014ab	           0xfbec0	                           movsx eax, al	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x40014ae	            0x85c0	                           test eax, eax	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x40014b0	            0x7502	                           jne 0x40014b4	       933	commoncap.c	FUNCTION_31	IF_2	CALL_2
0x40014b2	            0xf3c3	                                     ret	       939	commoncap.c	FUNCTION_31
0x40014b4	        0x498b4068	              mov rax, qword [r8 + 0x68]	       922	commoncap.c	FUNCTION_31
0x40014b8	      0xbe15000000	                           mov esi, 0x15	       936	commoncap.c	FUNCTION_31	IF_3	CALL_3
0x40014bd	    0x488bb8b80400	           mov rdi, qword [rax + 0x4b8] 	       936	commoncap.c	FUNCTION_31	IF_3	CALL_3
0x40014c4	      0xe800000000	                          call 0x40014c9	       936	commoncap.c	FUNCTION_31	IF_3	CALL_3
0x40014c9	          0x83f001	                              xor eax, 1	       936	commoncap.c	FUNCTION_31	IF_3	CALL_3
0x40014cc	           0xfb6c0	                           movzx eax, al	       936	commoncap.c	FUNCTION_31	IF_3	CALL_3
0x40014cf	            0xf7d8	                                 neg eax	       936	commoncap.c	FUNCTION_31	IF_3	CALL_3
0x40014d1	              0xc3	                                     ret	       939	commoncap.c	FUNCTION_31
cap_mmap_file	ELSE,0:IF,0:DO,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:functions,0	2
0x4000060	            0x31c0	                            xor eax, eax	      1344	commoncap.c	FUNCTION_43
0x4000062	              0xc3	                                     ret	      1344	commoncap.c	FUNCTION_43
cap_inode_need_killpriv	ELSE,0:IF,0:DO,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:functions,0	9
0x4000090	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	       307	commoncap.c	FUNCTION_9	CALL_2
0x4000094	          0x4531c0	                            xor r8d, r8d	       307	commoncap.c	FUNCTION_9	CALL_2
0x4000097	            0x31c9	                            xor ecx, ecx	       307	commoncap.c	FUNCTION_9	CALL_2
0x4000099	    0x48c7c2000000	                              mov rdx, 0	       307	commoncap.c	FUNCTION_9	CALL_2
0x40000a0	      0xe800000000	                          call 0x40000a5	       307	commoncap.c	FUNCTION_9	CALL_2
0x40000a5	            0x85c0	                           test eax, eax	       308	commoncap.c	FUNCTION_9
0x40000a7	           0xf9fc0	                                 setg al	       308	commoncap.c	FUNCTION_9
0x40000aa	           0xfb6c0	                           movzx eax, al	       308	commoncap.c	FUNCTION_9
0x40000ad	              0xc3	                                     ret	       309	commoncap.c	FUNCTION_9
