dev_seq_stop	CALL,1:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	2
0x4000380	        0x488b7f78	            mov rdi, qword [rdi + 0x78] 	      2446	sg.c	FUNCTION_56	CALL_1
0x4000384	      0xe900000000	                           jmp 0x4000389	      2446	sg.c	FUNCTION_56	CALL_1
sg_proc_single_open_adio	CALL,1:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	4
0x4000d50	          0x4889f7	                            mov rdi, rsi	      2358	sg.c	FUNCTION_48
0x4000d53	    0x48c7c2000000	                              mov rdx, 0	      2359	sg.c	FUNCTION_48	CALL_1
0x4000d5a	    0x48c7c6000000	                              mov rsi, 0	      2359	sg.c	FUNCTION_48	CALL_1
0x4000d61	      0xe900000000	                           jmp 0x4000d66	      2359	sg.c	FUNCTION_48	CALL_1
sg_mmap	CALL,3:SWITCH,0:IF,3:WHILE,0:DO,0:functions,0:FOR,1:ELSE,0	44
0x40003c0	          0x4885ff	                           test rdi, rdi	      1244	sg.c	FUNCTION_18	IF_1
0x40003c3	     0xf848c000000	                            je 0x4000455	      1244	sg.c	FUNCTION_18	IF_1
0x40003c9	          0x4885f6	                           test rsi, rsi	      1244	sg.c	FUNCTION_18	IF_1
0x40003cc	     0xf8483000000	                            je 0x4000455	      1244	sg.c	FUNCTION_18	IF_1
0x40003d2	            0x4156	                                push r14	      1237	sg.c	FUNCTION_18
0x40003d4	            0x4155	                                push r13	      1237	sg.c	FUNCTION_18
0x40003d6	            0x4154	                                push r12	      1237	sg.c	FUNCTION_18
0x40003d8	              0x55	                                push rbp	      1237	sg.c	FUNCTION_18
0x40003d9	              0x53	                                push rbx	      1237	sg.c	FUNCTION_18
0x40003da	    0x4c8ba7c80000	            mov r12, qword [rdi + 0xc8] 	      1244	sg.c	FUNCTION_18	IF_1
0x40003e1	          0x4d85e4	                           test r12, r12	      1244	sg.c	FUNCTION_18	IF_1
0x40003e4	            0x7475	                            je 0x400045b	      1244	sg.c	FUNCTION_18	IF_1
0x40003e6	        0x4c8b6e08	                mov r13, qword [rsi + 8]	      1246	sg.c	FUNCTION_18
0x40003ea	          0x4c2b2e	                    sub r13, qword [rsi]	      1246	sg.c	FUNCTION_18
0x40003ed	      0xb8eaffffff	                     mov eax, 0xffffffea	      1251	sg.c	FUNCTION_18	IF_2
0x40003f2	    0x4883be980000	               cmp qword [rsi + 0x98], 0	      1250	sg.c	FUNCTION_18	IF_2
0x40003fa	            0x7529	                           jne 0x4000425	      1250	sg.c	FUNCTION_18	IF_2
0x40003fc	      0x4d8d742438	                   lea r14, [r12 + 0x38]	      1253	sg.c	FUNCTION_18	CALL_2
0x4000401	          0x4889f3	                            mov rbx, rsi	      1253	sg.c	FUNCTION_18	CALL_2
0x4000404	      0xbdf4ffffff	                     mov ebp, 0xfffffff4	      1255	sg.c	FUNCTION_18	IF_3
0x4000409	          0x4c89f7	                            mov rdi, r14	      1253	sg.c	FUNCTION_18	CALL_2
0x400040c	      0xe800000000	                          call 0x4000411	      1253	sg.c	FUNCTION_18	CALL_2
0x4000411	      0x418b442468	            mov eax, dword [r12 + 0x68] 	      1254	sg.c	FUNCTION_18	IF_3
0x4000416	          0x4939c5	                            cmp r13, rax	      1254	sg.c	FUNCTION_18	IF_3
0x4000419	            0x7613	                           jbe 0x400042e	      1254	sg.c	FUNCTION_18	IF_3
0x400041b	          0x4c89f7	                            mov rdi, r14	      1272	sg.c	FUNCTION_18	CALL_3
0x400041e	      0xe800000000	                          call 0x4000423	      1272	sg.c	FUNCTION_18	CALL_3
0x4000423	            0x89e8	                            mov eax, ebp	      1273	sg.c	FUNCTION_18
0x4000425	              0x5b	                                 pop rbx	      1274	sg.c	FUNCTION_18
0x4000426	              0x5d	                                 pop rbp	      1274	sg.c	FUNCTION_18
0x4000427	            0x415c	                                 pop r12	      1274	sg.c	FUNCTION_18
0x4000429	            0x415d	                                 pop r13	      1274	sg.c	FUNCTION_18
0x400042b	            0x415e	                                 pop r14	      1274	sg.c	FUNCTION_18
0x400042d	              0xc3	                                     ret	      1274	sg.c	FUNCTION_18
0x400042e	    0x41c684241c13	              mov byte [r12 + 0x131c], 1	      1267	sg.c	FUNCTION_18
0x4000437	            0x31ed	                            xor ebp, ebp	      1242	sg.c	FUNCTION_18
0x4000439	    0x48814b500040	        or qword [rbx + 0x50], 0x4044000	      1268	sg.c	FUNCTION_18
0x4000441	    0x4c89a3a80000	             mov qword [rbx + 0xa8], r12	      1269	sg.c	FUNCTION_18
0x4000448	    0x48c783900000	               mov qword [rbx + 0x90], 0	      1270	sg.c	FUNCTION_18
0x4000453	            0xebc6	                           jmp 0x400041b	      1270	sg.c	FUNCTION_18
0x4000455	      0xb8faffffff	                     mov eax, 0xfffffffa	      1245	sg.c	FUNCTION_18	IF_1
0x400045a	              0xc3	                                     ret	      1274	sg.c	FUNCTION_18
0x400045b	      0xb8faffffff	                     mov eax, 0xfffffffa	      1245	sg.c	FUNCTION_18	IF_1
0x4000460	            0xebc3	                           jmp 0x4000425	      1245	sg.c	FUNCTION_18	IF_1
sg_proc_write_dressz	CALL,3:SWITCH,0:IF,3:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	43
0x4000d70	              0x55	                                push rbp	      2386	sg.c	FUNCTION_51
0x4000d71	              0x53	                                push rbx	      2386	sg.c	FUNCTION_51
0x4000d72	      0xbf15000000	                           mov edi, 0x15	      2390	sg.c	FUNCTION_51	IF_1	CALL_2
0x4000d77	          0x4889f5	                            mov rbp, rsi	      2386	sg.c	FUNCTION_51
0x4000d7a	          0x4889d3	                            mov rbx, rdx	      2386	sg.c	FUNCTION_51
0x4000d7d	        0x4883ec10	                           sub rsp, 0x10	      2386	sg.c	FUNCTION_51
0x4000d81	    0x65488b042528	                mov rax, qword gs:[0x28]	      2386	sg.c	FUNCTION_51
0x4000d8a	      0x4889442408	                mov qword [rsp + 8], rax	      2386	sg.c	FUNCTION_51
0x4000d8f	            0x31c0	                            xor eax, eax	      2386	sg.c	FUNCTION_51
0x4000d91	    0x48c70424ffff	     mov qword [rsp], 0xffffffffffffffff	      2388	sg.c	FUNCTION_51
0x4000d99	      0xe800000000	                          call 0x4000d9e	      2390	sg.c	FUNCTION_51	IF_1	CALL_2
0x4000d9e	            0x84c0	                             test al, al	      2390	sg.c	FUNCTION_51	IF_1	CALL_2
0x4000da0	            0x7452	                            je 0x4000df4	      2390	sg.c	FUNCTION_51	IF_1	CALL_2
0x4000da2	      0xbf11000000	                           mov edi, 0x11	      2390	sg.c	FUNCTION_51	IF_1	CALL_2
0x4000da7	      0xe800000000	                          call 0x4000dac	      2390	sg.c	FUNCTION_51	IF_1	CALL_2
0x4000dac	            0x84c0	                             test al, al	      2390	sg.c	FUNCTION_51	IF_1	CALL_2
0x4000dae	            0x7444	                            je 0x4000df4	      2390	sg.c	FUNCTION_51	IF_1	CALL_2
0x4000db0	            0x31d2	                            xor edx, edx	      2393	sg.c	FUNCTION_51	CALL_3
0x4000db2	          0x4889e1	                            mov rcx, rsp	      2393	sg.c	FUNCTION_51	CALL_3
0x4000db5	          0x4889de	                            mov rsi, rbx	      2393	sg.c	FUNCTION_51	CALL_3
0x4000db8	          0x4889ef	                            mov rdi, rbp	      2393	sg.c	FUNCTION_51	CALL_3
0x4000dbb	      0xe800000000	                          call 0x4000dc0	      2393	sg.c	FUNCTION_51	CALL_3
0x4000dc0	            0x85c0	                           test eax, eax	      2394	sg.c	FUNCTION_51	IF_2
0x4000dc2	            0x752c	                           jne 0x4000df0	      2394	sg.c	FUNCTION_51	IF_2
0x4000dc4	        0x488b0424	                    mov rax, qword [rsp]	      2396	sg.c	FUNCTION_51	IF_3
0x4000dc8	    0x483d00001000	                       cmp rax, 0x100000	      2396	sg.c	FUNCTION_51	IF_3
0x4000dce	            0x772d	                            ja 0x4000dfd	      2396	sg.c	FUNCTION_51	IF_3
0x4000dd0	    0x890500000000	            mov dword [0x04000dd6], eax 	      2397	sg.c	FUNCTION_51	IF_3
0x4000dd6	          0x4889d8	                            mov rax, rbx	      2398	sg.c	FUNCTION_51	IF_3
0x4000dd9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2401	sg.c	FUNCTION_51
0x4000dde	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      2401	sg.c	FUNCTION_51
0x4000de7	            0x751d	                           jne 0x4000e06	      2401	sg.c	FUNCTION_51
0x4000de9	        0x4883c410	                           add rsp, 0x10	      2401	sg.c	FUNCTION_51
0x4000ded	              0x5b	                                 pop rbx	      2401	sg.c	FUNCTION_51
0x4000dee	              0x5d	                                 pop rbp	      2401	sg.c	FUNCTION_51
0x4000def	              0xc3	                                     ret	      2401	sg.c	FUNCTION_51
0x4000df0	            0x4898	                                    cdqe	      2395	sg.c	FUNCTION_51	IF_2
0x4000df2	            0xebe5	                           jmp 0x4000dd9	      2395	sg.c	FUNCTION_51	IF_2
0x4000df4	    0x48c7c0f3ffff	             mov rax, 0xfffffffffffffff3	      2391	sg.c	FUNCTION_51	IF_1
0x4000dfb	            0xebdc	                           jmp 0x4000dd9	      2391	sg.c	FUNCTION_51	IF_1
0x4000dfd	    0x48c7c0deffff	             mov rax, 0xffffffffffffffde	      2400	sg.c	FUNCTION_51
0x4000e04	            0xebd3	                           jmp 0x4000dd9	      2400	sg.c	FUNCTION_51
0x4000e06	      0xe800000000	                          call 0x4000e0b	      2401	sg.c	FUNCTION_51
sg_proc_seq_show_version	CALL,1:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	7
0x40006d0	    0x49c7c0000000	                               mov r8, 0	      2405	sg.c	FUNCTION_52	CALL_1
0x40006d7	    0x48c7c1000000	                              mov rcx, 0	      2405	sg.c	FUNCTION_52	CALL_1
0x40006de	      0xba48770000	                         mov edx, 0x7748	      2405	sg.c	FUNCTION_52	CALL_1
0x40006e3	    0x48c7c6000000	                              mov rsi, 0	      2405	sg.c	FUNCTION_52	CALL_1
0x40006ea	      0xe800000000	                          call 0x40006ef	      2405	sg.c	FUNCTION_52	CALL_1
0x40006ef	            0x31c0	                            xor eax, eax	      2408	sg.c	FUNCTION_52
0x40006f1	              0xc3	                                     ret	      2408	sg.c	FUNCTION_52
sg_idr_max_id	CALL,0:SWITCH,0:IF,1:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	5
0x40001f0	            0x393a	                    cmp dword [rdx], edi	      2228	sg.c	FUNCTION_42	IF_1
0x40001f2	            0x7d02	                           jge 0x40001f6	      2228	sg.c	FUNCTION_42	IF_1
0x40001f4	            0x893a	                    mov dword [rdx], edi	      2229	sg.c	FUNCTION_42	IF_1
0x40001f6	            0x31c0	                            xor eax, eax	      2232	sg.c	FUNCTION_42
0x40001f8	              0xc3	                                     ret	      2232	sg.c	FUNCTION_42
sg_finish_rem_req	CALL,7:SWITCH,0:IF,3:WHILE,0:DO,0:functions,0:FOR,0:ELSE,1	44
0x4000fc0	            0x4154	                                push r12	      1809	sg.c	FUNCTION_28
0x4000fc2	              0x55	                                push rbp	      1809	sg.c	FUNCTION_28
0x4000fc3	            0x31ed	                            xor ebp, ebp	      1809	sg.c	FUNCTION_28
0x4000fc5	              0x53	                                push rbx	      1809	sg.c	FUNCTION_28
0x4000fc6	          0x4889fb	                            mov rbx, rdi	      1809	sg.c	FUNCTION_28
0x4000fc9	        0x4c8b6710	            mov r12, qword [rdi + 0x10] 	      1812	sg.c	FUNCTION_28
0x4000fcd	    0x488bbf000100	           mov rdi, qword [rdi + 0x100] 	      1818	sg.c	FUNCTION_28	IF_1
0x4000fd4	          0x4885ff	                           test rdi, rdi	      1818	sg.c	FUNCTION_28	IF_1
0x4000fd7	            0x7407	                            je 0x4000fe0	      1818	sg.c	FUNCTION_28	IF_1
0x4000fd9	      0xe800000000	                          call 0x4000fde	      1819	sg.c	FUNCTION_28	CALL_2
0x4000fde	            0x89c5	                            mov ebp, eax	      1819	sg.c	FUNCTION_28	CALL_2
0x4000fe0	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      1821	sg.c	FUNCTION_28	IF_2
0x4000fe7	          0x4885d2	                           test rdx, rdx	      1821	sg.c	FUNCTION_28	IF_2
0x4000fea	            0x7427	                            je 0x4001013	      1821	sg.c	FUNCTION_28	IF_2
0x4000fec	    0x488bba380100	           mov rdi, qword [rdx + 0x138] 	        27	scsi_request.h	FUNCTION_101	IF_1
0x4000ff3	    0x488d82280100	                  lea rax, [rdx + 0x128]	        27	scsi_request.h	FUNCTION_101	IF_1
0x4000ffa	          0x4839c7	                            cmp rdi, rax	        27	scsi_request.h	FUNCTION_101	IF_1
0x4000ffd	            0x740c	                            je 0x400100b	        27	scsi_request.h	FUNCTION_101	IF_1
0x4000fff	      0xe800000000	                          call 0x4001004	        28	scsi_request.h	FUNCTION_101	CALL_1
0x4001004	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	        28	scsi_request.h	FUNCTION_101	CALL_1
0x400100b	          0x4889d7	                            mov rdi, rdx	      1823	sg.c	FUNCTION_28	IF_2	CALL_5
0x400100e	      0xe800000000	                          call 0x4001013	      1823	sg.c	FUNCTION_28	IF_2	CALL_5
0x4001013	    0x80bbf0000000	                cmp byte [rbx + 0xf0], 0	      1826	sg.c	FUNCTION_28	IF_3
0x400101a	            0x743a	                            je 0x4001056	      1826	sg.c	FUNCTION_28	IF_3
0x400101c	            0x31c0	                            xor eax, eax	      2045	sg.c	FUNCTION_35
0x400101e	    0xc74320000000	               mov dword [rbx + 0x20], 0	      2046	sg.c	FUNCTION_35
0x4001025	    0x48c743280000	               mov qword [rbx + 0x28], 0	      2047	sg.c	FUNCTION_35
0x400102d	        0x66894318	               mov word [rbx + 0x18], ax	      2045	sg.c	FUNCTION_35
0x4001031	    0xc74330000000	               mov dword [rbx + 0x30], 0	      2048	sg.c	FUNCTION_35
0x4001038	            0x89e8	                            mov eax, ebp	      1832	sg.c	FUNCTION_28
0x400103a	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	      2049	sg.c	FUNCTION_35
0x4001041	    0xc683f0000000	                mov byte [rbx + 0xf0], 0	      2050	sg.c	FUNCTION_35
0x4001048	    0x41c684241d13	              mov byte [r12 + 0x131d], 0	      2052	sg.c	FUNCTION_35
0x4001051	              0x5b	                                 pop rbx	      1832	sg.c	FUNCTION_28
0x4001052	              0x5d	                                 pop rbp	      1832	sg.c	FUNCTION_28
0x4001053	            0x415c	                                 pop r12	      1832	sg.c	FUNCTION_28
0x4001055	              0xc3	                                     ret	      1832	sg.c	FUNCTION_28
0x4001056	        0x488d7b18	                   lea rdi, [rbx + 0x18]	      1813	sg.c	FUNCTION_28
0x400105a	      0xe8e1feffff	         call sym.sg_remove_scat.isra.18	      1829	sg.c	FUNCTION_28	CALL_7
0x400105f	            0x89e8	                            mov eax, ebp	      1832	sg.c	FUNCTION_28
0x4001061	              0x5b	                                 pop rbx	      1832	sg.c	FUNCTION_28
0x4001062	              0x5d	                                 pop rbp	      1832	sg.c	FUNCTION_28
0x4001063	            0x415c	                                 pop r12	      1832	sg.c	FUNCTION_28
0x4001065	              0xc3	                                     ret	      1832	sg.c	FUNCTION_28
dev_seq_next	CALL,0:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	10
0x4000200	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      2438	sg.c	FUNCTION_55
0x4000204	          0x488b30	                    mov rsi, qword [rax]	      2440	sg.c	FUNCTION_55
0x4000207	        0x488d4e01	                      lea rcx, [rsi + 1]	      2440	sg.c	FUNCTION_55
0x400020b	          0x488908	                    mov qword [rax], rcx	      2440	sg.c	FUNCTION_55
0x400020e	          0x48890a	                    mov qword [rdx], rcx	      2440	sg.c	FUNCTION_55
0x4000211	      0xba00000000	                              mov edx, 0	      2441	sg.c	FUNCTION_55
0x4000216	        0x488b7008	                mov rsi, qword [rax + 8]	      2441	sg.c	FUNCTION_55
0x400021a	          0x483930	                    cmp qword [rax], rsi	      2441	sg.c	FUNCTION_55
0x400021d	        0x480f43c2	                         cmovae rax, rdx	      2441	sg.c	FUNCTION_55
0x4000221	              0xc3	                                     ret	      2442	sg.c	FUNCTION_55
sg_device_destroy	CALL,7:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	18
0x4000230	              0x55	                                push rbp	      1551	sg.c	FUNCTION_23
0x4000231	              0x53	                                push rbx	      1551	sg.c	FUNCTION_23
0x4000232	          0x4889fb	                            mov rbx, rdi	      1551	sg.c	FUNCTION_23
0x4000235	    0x48c7c7000000	                              mov rdi, 0	      1560	sg.c	FUNCTION_23	CALL_2
0x400023c	      0xe800000000	                          call 0x4000241	      1560	sg.c	FUNCTION_23	CALL_2
0x4000241	          0x8b73c4	             mov esi, dword [rbx - 0x3c]	      1561	sg.c	FUNCTION_23	CALL_3
0x4000244	          0x4889c5	                            mov rbp, rax	      1560	sg.c	FUNCTION_23	CALL_2
0x4000247	    0x48c7c7000000	                              mov rdi, 0	      1561	sg.c	FUNCTION_23	CALL_3
0x400024e	      0xe800000000	                          call 0x4000253	      1561	sg.c	FUNCTION_23	CALL_3
0x4000253	          0x4889ee	                            mov rsi, rbp	      1562	sg.c	FUNCTION_23	CALL_4
0x4000256	    0x48c7c7000000	                              mov rdi, 0	      1562	sg.c	FUNCTION_23	CALL_4
0x400025d	      0xe800000000	                          call 0x4000262	      1562	sg.c	FUNCTION_23	CALL_4
0x4000262	        0x488b7bf0	             mov rdi, qword [rbx - 0x10]	      1567	sg.c	FUNCTION_23	CALL_6
0x4000266	      0xe800000000	                          call 0x400026b	      1567	sg.c	FUNCTION_23	CALL_6
0x400026b	        0x488d7b80	                   lea rdi, [rbx - 0x80]	      1568	sg.c	FUNCTION_23	CALL_7
0x400026f	              0x5b	                                 pop rbx	      1569	sg.c	FUNCTION_23
0x4000270	              0x5d	                                 pop rbp	      1569	sg.c	FUNCTION_23
0x4000271	      0xe900000000	                           jmp 0x4000276	      1568	sg.c	FUNCTION_23	CALL_7
exit_sg	CALL,6:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	25
0x4000040	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	      1126	sg.c	FUNCTION_14	IF_1
0x4000047	          0x4885c0	                           test rax, rax	      1126	sg.c	FUNCTION_14	IF_1
0x400004a	            0x742f	                            je 0x400007b	      1126	sg.c	FUNCTION_14	IF_1
0x400004c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1126	sg.c	FUNCTION_14	IF_1
0x4000050	          0x4885c0	                           test rax, rax	      1126	sg.c	FUNCTION_14	IF_1
0x4000053	            0x7426	                            je 0x400007b	      1126	sg.c	FUNCTION_14	IF_1
0x4000055	          0x488b38	                    mov rdi, qword [rax]	      1129	sg.c	FUNCTION_14
0x4000058	          0x488b07	                    mov rax, qword [rdi]	      1130	sg.c	FUNCTION_14	IF_2
0x400005b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1130	sg.c	FUNCTION_14	IF_2
0x4000062	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1130	sg.c	FUNCTION_14	IF_2
0x4000066	          0x4885c0	                           test rax, rax	      1130	sg.c	FUNCTION_14	IF_2
0x4000069	            0x7408	                            je 0x4000073	      1130	sg.c	FUNCTION_14	IF_2
0x400006b	      0xe800000000	                          call 0x4000070	      1133	sg.c	FUNCTION_14	IF_2	CALL_1
0x4000070	            0x4898	                                    cdqe	      1135	sg.c	FUNCTION_14	IF_2
0x4000072	              0xc3	                                     ret	      1135	sg.c	FUNCTION_14	IF_2
0x4000073	    0x48c7c0fdfdff	             mov rax, 0xfffffffffffffdfd	      1138	sg.c	FUNCTION_14
0x400007a	              0xc3	                                     ret	      1139	sg.c	FUNCTION_14
0x400007b	    0x48c7c0faffff	             mov rax, 0xfffffffffffffffa	      1127	sg.c	FUNCTION_14	IF_1
0x4000082	              0xc3	                                     ret	      1127	sg.c	FUNCTION_14	IF_1
0x4000083	           0xf1f00	                         nop dword [rax]	      1127	sg.c	FUNCTION_14	IF_1
0x4000086	              0x66	                                 invalid	      1127	sg.c	FUNCTION_14	IF_1
0x4000087	              0x2e	                                 invalid	      1127	sg.c	FUNCTION_14	IF_1
0x4000088	               0xf	                                 invalid	      1127	sg.c	FUNCTION_14	IF_1
0x4000089	              0x1f	                                 invalid	      1127	sg.c	FUNCTION_14	IF_1
0x400008a	              0x84	                                 invalid	      1127	sg.c	FUNCTION_14	IF_1
sg_compat_ioctl	CALL,1:SWITCH,0:IF,2:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	19
0x4000040	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	      1126	sg.c	FUNCTION_14	IF_1
0x4000047	          0x4885c0	                           test rax, rax	      1126	sg.c	FUNCTION_14	IF_1
0x400004a	            0x742f	                            je 0x400007b	      1126	sg.c	FUNCTION_14	IF_1
0x400004c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1126	sg.c	FUNCTION_14	IF_1
0x4000050	          0x4885c0	                           test rax, rax	      1126	sg.c	FUNCTION_14	IF_1
0x4000053	            0x7426	                            je 0x400007b	      1126	sg.c	FUNCTION_14	IF_1
0x4000055	          0x488b38	                    mov rdi, qword [rax]	      1129	sg.c	FUNCTION_14
0x4000058	          0x488b07	                    mov rax, qword [rdi]	      1130	sg.c	FUNCTION_14	IF_2
0x400005b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1130	sg.c	FUNCTION_14	IF_2
0x4000062	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1130	sg.c	FUNCTION_14	IF_2
0x4000066	          0x4885c0	                           test rax, rax	      1130	sg.c	FUNCTION_14	IF_2
0x4000069	            0x7408	                            je 0x4000073	      1130	sg.c	FUNCTION_14	IF_2
0x400006b	      0xe800000000	                          call 0x4000070	      1133	sg.c	FUNCTION_14	IF_2	CALL_1
0x4000070	            0x4898	                                    cdqe	      1135	sg.c	FUNCTION_14	IF_2
0x4000072	              0xc3	                                     ret	      1135	sg.c	FUNCTION_14	IF_2
0x4000073	    0x48c7c0fdfdff	             mov rax, 0xfffffffffffffdfd	      1138	sg.c	FUNCTION_14
0x400007a	              0xc3	                                     ret	      1139	sg.c	FUNCTION_14
0x400007b	    0x48c7c0faffff	             mov rax, 0xfffffffffffffffa	      1127	sg.c	FUNCTION_14	IF_1
0x4000082	              0xc3	                                     ret	      1127	sg.c	FUNCTION_14	IF_1
sg_build_reserve	CALL,3:SWITCH,0:IF,2:WHILE,0:DO,1:functions,0:FOR,0:ELSE,1	27
0x4002370	            0x4155	                                push r13	      1990	sg.c	FUNCTION_33
0x4002372	    0x41bd00100000	                        mov r13d, 0x1000	      1997	sg.c	FUNCTION_33	DO_1	IF_1
0x4002378	            0x4154	                                push r12	      1990	sg.c	FUNCTION_33
0x400237a	          0x4989fc	                            mov r12, rdi	      1990	sg.c	FUNCTION_33
0x400237d	              0x55	                                push rbp	      1990	sg.c	FUNCTION_33
0x400237e	        0x488d6f60	                   lea rbp, [rdi + 0x60]	      1991	sg.c	FUNCTION_33
0x4002382	              0x53	                                push rbx	      1990	sg.c	FUNCTION_33
0x4002383	            0x89f3	                            mov ebx, esi	      1990	sg.c	FUNCTION_33
0x4002385	            0xeb12	                           jmp 0x4002399	      1990	sg.c	FUNCTION_33
0x4002387	          0x4889ef	                            mov rdi, rbp	      2001	sg.c	FUNCTION_33	DO_1	CALL_3
0x400238a	            0xd1fb	                              sar ebx, 1	      2002	sg.c	FUNCTION_33	DO_1
0x400238c	      0xe8afebffff	         call sym.sg_remove_scat.isra.18	      2001	sg.c	FUNCTION_33	DO_1	CALL_3
0x4002391	    0x81fb00080000	                          cmp ebx, 0x800	      2003	sg.c	FUNCTION_33	DO_1
0x4002397	            0x761d	                           jbe 0x40023b6	      2003	sg.c	FUNCTION_33	DO_1
0x4002399	    0x81fbff0f0000	                          cmp ebx, 0xfff	      1997	sg.c	FUNCTION_33	DO_1	IF_1
0x400239f	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      1998	sg.c	FUNCTION_33	DO_1	IF_2	CALL_2
0x40023a4	          0x4889ef	                            mov rdi, rbp	      1998	sg.c	FUNCTION_33	DO_1	IF_2	CALL_2
0x40023a7	        0x410f46dd	                        cmovbe ebx, r13d	      1997	sg.c	FUNCTION_33	DO_1	IF_1
0x40023ab	            0x89da	                            mov edx, ebx	      1998	sg.c	FUNCTION_33	DO_1	IF_2	CALL_2
0x40023ad	      0xe82efdffff	      call sym.sg_build_indirect.isra.20	      1998	sg.c	FUNCTION_33	DO_1	IF_2	CALL_2
0x40023b2	            0x85c0	                           test eax, eax	      1998	sg.c	FUNCTION_33	DO_1	IF_2	CALL_2
0x40023b4	            0x75d1	                           jne 0x4002387	      1998	sg.c	FUNCTION_33	DO_1	IF_2	CALL_2
0x40023b6	              0x5b	                                 pop rbx	      2004	sg.c	FUNCTION_33
0x40023b7	              0x5d	                                 pop rbp	      2004	sg.c	FUNCTION_33
0x40023b8	            0x415c	                                 pop r12	      2004	sg.c	FUNCTION_33
0x40023ba	            0x415d	                                 pop r13	      2004	sg.c	FUNCTION_33
0x40023bc	              0xc3	                                     ret	      2004	sg.c	FUNCTION_33
sg_proc_seq_show_devhdr	CALL,1:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	4
0x4000880	    0x48c7c6000000	                              mov rsi, 0	      2412	sg.c	FUNCTION_53	CALL_1
0x4000887	      0xe800000000	                          call 0x400088c	      2412	sg.c	FUNCTION_53	CALL_1
0x400088c	            0x31c0	                            xor eax, eax	      2414	sg.c	FUNCTION_53
0x400088e	              0xc3	                                     ret	      2414	sg.c	FUNCTION_53
sg_get_rq_mark	CALL,2:SWITCH,0:IF,0:WHILE,0:DO,0:functions,1:FOR,0:ELSE,0	42
0x4000170	            0x4155	                                push r13	      2057	sg.c	FUNCTION_36
0x4000172	        0x4c8d6f30	                   lea r13, [rdi + 0x30]	      2061	sg.c	FUNCTION_36	CALL_1
0x4000176	            0x4154	                                push r12	      2057	sg.c	FUNCTION_36
0x4000178	              0x55	                                push rbp	      2057	sg.c	FUNCTION_36
0x4000179	              0x53	                                push rbx	      2057	sg.c	FUNCTION_36
0x400017a	          0x4889fd	                            mov rbp, rdi	      2057	sg.c	FUNCTION_36
0x400017d	          0x4c89ef	                            mov rdi, r13	      2061	sg.c	FUNCTION_36	CALL_1
0x4000180	          0x4189f4	                           mov r12d, esi	      2057	sg.c	FUNCTION_36
0x4000183	      0xe800000000	                          call 0x4000188	      2061	sg.c	FUNCTION_36	CALL_1
0x4000188	    0x488b9d800000	            mov rbx, qword [rbp + 0x80] 	      2062	sg.c	FUNCTION_36	FUNCTION_1
0x400018f	    0x488dbd800000	                   lea rdi, [rbp + 0x80]	      2062	sg.c	FUNCTION_36	FUNCTION_1
0x4000196	          0x4839fb	                            cmp rbx, rdi	      2062	sg.c	FUNCTION_36	FUNCTION_1
0x4000199	            0x750a	                           jne 0x40001a5	      2062	sg.c	FUNCTION_36	FUNCTION_1
0x400019b	            0xeb3b	                           jmp 0x40001d8	      2062	sg.c	FUNCTION_36	FUNCTION_1
0x400019d	          0x488b1b	                    mov rbx, qword [rbx]	      2062	sg.c	FUNCTION_36	FUNCTION_1
0x40001a0	          0x4839fb	                            cmp rbx, rdi	      2062	sg.c	FUNCTION_36	FUNCTION_1
0x40001a3	            0x7433	                            je 0x40001d8	      2062	sg.c	FUNCTION_36	FUNCTION_1
0x40001a5	    0x6681bbf20000	           cmp word [rbx + 0xf2], 0x100 	      2064	sg.c	FUNCTION_36	FUNCTION_1	IF_1
0x40001ae	            0x75ed	                           jne 0x400019d	      2064	sg.c	FUNCTION_36	FUNCTION_1	IF_1
0x40001b0	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      2064	sg.c	FUNCTION_36	FUNCTION_1	IF_1
0x40001b4	            0x7406	                            je 0x40001bc	      2064	sg.c	FUNCTION_36	FUNCTION_1	IF_1
0x40001b6	        0x443b6368	           cmp r12d, dword [rbx + 0x68] 	      2065	sg.c	FUNCTION_36	FUNCTION_1	IF_1
0x40001ba	            0x75e1	                           jne 0x400019d	      2065	sg.c	FUNCTION_36	FUNCTION_1	IF_1
0x40001bc	    0xc683f3000000	                mov byte [rbx + 0xf3], 2	      2066	sg.c	FUNCTION_36	FUNCTION_1	IF_1
0x40001c3	          0x4889c6	                            mov rsi, rax	      2067	sg.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_1
0x40001c6	          0x4c89ef	                            mov rdi, r13	      2067	sg.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_1
0x40001c9	      0xe800000000	                          call 0x40001ce	      2067	sg.c	FUNCTION_36	FUNCTION_1	IF_1	CALL_1
0x40001ce	          0x4889d8	                            mov rax, rbx	      2068	sg.c	FUNCTION_36	FUNCTION_1	IF_1
0x40001d1	              0x5b	                                 pop rbx	      2073	sg.c	FUNCTION_36
0x40001d2	              0x5d	                                 pop rbp	      2073	sg.c	FUNCTION_36
0x40001d3	            0x415c	                                 pop r12	      2073	sg.c	FUNCTION_36
0x40001d5	            0x415d	                                 pop r13	      2073	sg.c	FUNCTION_36
0x40001d7	              0xc3	                                     ret	      2073	sg.c	FUNCTION_36
0x40001d8	          0x4889c6	                            mov rsi, rax	      2071	sg.c	FUNCTION_36	CALL_2
0x40001db	          0x4c89ef	                            mov rdi, r13	      2071	sg.c	FUNCTION_36	CALL_2
0x40001de	      0xe800000000	                          call 0x40001e3	      2071	sg.c	FUNCTION_36	CALL_2
0x40001e3	            0x31c0	                            xor eax, eax	      2072	sg.c	FUNCTION_36
0x40001e5	              0x5b	                                 pop rbx	      2073	sg.c	FUNCTION_36
0x40001e6	              0x5d	                                 pop rbp	      2073	sg.c	FUNCTION_36
0x40001e7	            0x415c	                                 pop r12	      2073	sg.c	FUNCTION_36
0x40001e9	            0x415d	                                 pop r13	      2073	sg.c	FUNCTION_36
0x40001eb	              0xc3	                                     ret	      2073	sg.c	FUNCTION_36
sg_proc_write_adio	CALL,3:SWITCH,0:IF,2:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	40
0x4000e10	              0x55	                                push rbp	      2365	sg.c	FUNCTION_49
0x4000e11	              0x53	                                push rbx	      2365	sg.c	FUNCTION_49
0x4000e12	      0xbf15000000	                           mov edi, 0x15	      2369	sg.c	FUNCTION_49	IF_1	CALL_2
0x4000e17	          0x4889f5	                            mov rbp, rsi	      2365	sg.c	FUNCTION_49
0x4000e1a	          0x4889d3	                            mov rbx, rdx	      2365	sg.c	FUNCTION_49
0x4000e1d	        0x4883ec10	                           sub rsp, 0x10	      2365	sg.c	FUNCTION_49
0x4000e21	    0x65488b042528	                mov rax, qword gs:[0x28]	      2365	sg.c	FUNCTION_49
0x4000e2a	      0x4889442408	                mov qword [rsp + 8], rax	      2365	sg.c	FUNCTION_49
0x4000e2f	            0x31c0	                            xor eax, eax	      2365	sg.c	FUNCTION_49
0x4000e31	      0xe800000000	                          call 0x4000e36	      2369	sg.c	FUNCTION_49	IF_1	CALL_2
0x4000e36	            0x84c0	                             test al, al	      2369	sg.c	FUNCTION_49	IF_1	CALL_2
0x4000e38	            0x7450	                            je 0x4000e8a	      2369	sg.c	FUNCTION_49	IF_1	CALL_2
0x4000e3a	      0xbf11000000	                           mov edi, 0x11	      2369	sg.c	FUNCTION_49	IF_1	CALL_2
0x4000e3f	      0xe800000000	                          call 0x4000e44	      2369	sg.c	FUNCTION_49	IF_1	CALL_2
0x4000e44	            0x84c0	                             test al, al	      2369	sg.c	FUNCTION_49	IF_1	CALL_2
0x4000e46	            0x7442	                            je 0x4000e8a	      2369	sg.c	FUNCTION_49	IF_1	CALL_2
0x4000e48	            0x31d2	                            xor edx, edx	      2371	sg.c	FUNCTION_49	CALL_3
0x4000e4a	          0x4889e1	                            mov rcx, rsp	      2371	sg.c	FUNCTION_49	CALL_3
0x4000e4d	          0x4889de	                            mov rsi, rbx	      2371	sg.c	FUNCTION_49	CALL_3
0x4000e50	          0x4889ef	                            mov rdi, rbp	      2371	sg.c	FUNCTION_49	CALL_3
0x4000e53	      0xe800000000	                          call 0x4000e58	      2371	sg.c	FUNCTION_49	CALL_3
0x4000e58	            0x85c0	                           test eax, eax	      2372	sg.c	FUNCTION_49	IF_2
0x4000e5a	            0x752a	                           jne 0x4000e86	      2372	sg.c	FUNCTION_49	IF_2
0x4000e5c	            0x31c0	                            xor eax, eax	      2374	sg.c	FUNCTION_49
0x4000e5e	      0x48833c2400	                      cmp qword [rsp], 0	      2374	sg.c	FUNCTION_49
0x4000e63	           0xf95c0	                                setne al	      2374	sg.c	FUNCTION_49
0x4000e66	    0x890500000000	            mov dword [0x04000e6c], eax 	      2374	sg.c	FUNCTION_49
0x4000e6c	          0x4889d8	                            mov rax, rbx	      2375	sg.c	FUNCTION_49
0x4000e6f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2376	sg.c	FUNCTION_49
0x4000e74	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      2376	sg.c	FUNCTION_49
0x4000e7d	            0x7514	                           jne 0x4000e93	      2376	sg.c	FUNCTION_49
0x4000e7f	        0x4883c410	                           add rsp, 0x10	      2376	sg.c	FUNCTION_49
0x4000e83	              0x5b	                                 pop rbx	      2376	sg.c	FUNCTION_49
0x4000e84	              0x5d	                                 pop rbp	      2376	sg.c	FUNCTION_49
0x4000e85	              0xc3	                                     ret	      2376	sg.c	FUNCTION_49
0x4000e86	            0x4898	                                    cdqe	      2373	sg.c	FUNCTION_49	IF_2
0x4000e88	            0xebe5	                           jmp 0x4000e6f	      2373	sg.c	FUNCTION_49	IF_2
0x4000e8a	    0x48c7c0f3ffff	             mov rax, 0xfffffffffffffff3	      2370	sg.c	FUNCTION_49	IF_1
0x4000e91	            0xebdc	                           jmp 0x4000e6f	      2370	sg.c	FUNCTION_49	IF_1
0x4000e93	      0xe800000000	                          call 0x4000e98	      2376	sg.c	FUNCTION_49
sg_proc_single_open_dressz	CALL,1:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	4
0x4000d30	          0x4889f7	                            mov rdi, rsi	      2379	sg.c	FUNCTION_50
0x4000d33	    0x48c7c2000000	                              mov rdx, 0	      2380	sg.c	FUNCTION_50	CALL_1
0x4000d3a	    0x48c7c6000000	                              mov rsi, 0	      2380	sg.c	FUNCTION_50	CALL_1
0x4000d41	      0xe900000000	                           jmp 0x4000d46	      2380	sg.c	FUNCTION_50	CALL_1
sg_fasync	CALL,2:SWITCH,0:IF,1:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	9
0x4000390	    0x488b8ec80000	            mov rcx, qword [rsi + 0xc8] 	      1186	sg.c	FUNCTION_16	IF_1
0x4000397	          0x4885c9	                           test rcx, rcx	      1186	sg.c	FUNCTION_16	IF_1
0x400039a	            0x7413	                            je 0x40003af	      1186	sg.c	FUNCTION_16	IF_1
0x400039c	      0x4883791000	               cmp qword [rcx + 0x10], 0	      1186	sg.c	FUNCTION_16	IF_1
0x40003a1	            0x740c	                            je 0x40003af	      1186	sg.c	FUNCTION_16	IF_1
0x40003a3	    0x4881c1900000	                           add rcx, 0x90	      1191	sg.c	FUNCTION_16	CALL_2
0x40003aa	      0xe900000000	                           jmp 0x40003af	      1191	sg.c	FUNCTION_16	CALL_2
0x40003af	      0xb8faffffff	                     mov eax, 0xfffffffa	      1192	sg.c	FUNCTION_16
0x40003b4	              0xc3	                                     ret	      1192	sg.c	FUNCTION_16
sg_proc_seq_show_int	CALL,1:SWITCH,0:IF,0:WHILE,0:DO,0:functions,0:FOR,0:ELSE,0	6
0x4000700	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      2353	sg.c	FUNCTION_47	CALL_1
0x4000704	    0x48c7c6000000	                              mov rsi, 0	      2353	sg.c	FUNCTION_47	CALL_1
0x400070b	            0x8b10	                    mov edx, dword [rax]	      2353	sg.c	FUNCTION_47	CALL_1
0x400070d	      0xe800000000	                          call 0x4000712	      2353	sg.c	FUNCTION_47	CALL_1
0x4000712	            0x31c0	                            xor eax, eax	      2355	sg.c	FUNCTION_47
0x4000714	              0xc3	                                     ret	      2355	sg.c	FUNCTION_47
