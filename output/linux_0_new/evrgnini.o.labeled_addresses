acpi_ev_initialize_region	WHILE,1:functions,0:ELSE,0:SWITCH,1:IF,5:FOR,0:DO,0:CALL,14	64
0x4000353	          0x4885ff	                           test rdi, rdi	       488	evrgnini.c	FUNCTION_8	IF_1
0x4000356	      0xb801100000	                         mov eax, 0x1001	       489	evrgnini.c	FUNCTION_8	IF_1	CALL_2
0x400035b	     0xf84b1000000	                            je 0x4000412	       488	evrgnini.c	FUNCTION_8	IF_1
0x4000361	          0x8a470c	                mov al, byte [rdi + 0xc]	       492	evrgnini.c	FUNCTION_8	IF_2
0x4000364	            0xa808	                              test al, 8	       492	evrgnini.c	FUNCTION_8	IF_2
0x4000366	     0xf85a7000000	                           jne 0x4000413	       492	evrgnini.c	FUNCTION_8	IF_2
0x400036c	          0x83c808	                               or eax, 8	       496	evrgnini.c	FUNCTION_8
0x400036f	            0x4154	                                push r12	       480	evrgnini.c	FUNCTION_8
0x4000371	              0x55	                                push rbp	       480	evrgnini.c	FUNCTION_8
0x4000372	              0x53	                                push rbx	       480	evrgnini.c	FUNCTION_8
0x4000373	          0x88470c	                mov byte [rdi + 0xc], al	       496	evrgnini.c	FUNCTION_8
0x4000376	          0x4889fb	                            mov rbx, rdi	       496	evrgnini.c	FUNCTION_8
0x4000379	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       498	evrgnini.c	FUNCTION_8
0x400037d	      0x440fb6670d	           movzx r12d, byte [rdi + 0xd] 	       549	evrgnini.c	FUNCTION_8	WHILE_1	IF_3
0x4000382	        0x488b6810	            mov rbp, qword [rax + 0x10] 	       498	evrgnini.c	FUNCTION_8
0x4000386	          0x4885ed	                           test rbp, rbp	       505	evrgnini.c	FUNCTION_8	WHILE_1
0x4000389	            0x7476	                            je 0x4000401	       505	evrgnini.c	FUNCTION_8	WHILE_1
0x400038b	          0x4889ef	                            mov rdi, rbp	       510	evrgnini.c	FUNCTION_8	WHILE_1	CALL_4
0x400038e	      0xe800000000	                          call 0x4000393	       510	evrgnini.c	FUNCTION_8	WHILE_1	CALL_4
0x4000393	          0x4885c0	                           test rax, rax	       511	evrgnini.c	FUNCTION_8	WHILE_1	IF_3
0x4000396	            0x7471	                            je 0x4000409	       511	evrgnini.c	FUNCTION_8	WHILE_1	IF_3
0x4000398	          0x8a5509	                  mov dl, byte [rbp + 9]	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x400039b	          0x80fa08	                               cmp dl, 8	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x400039e	            0x7417	                            je 0x40003b7	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003a0	            0x7707	                            ja 0x40003a9	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003a2	          0x80fa06	                               cmp dl, 6	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003a5	            0x740a	                            je 0x40003b1	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003a7	            0xeb25	                           jmp 0x40003ce	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003a9	          0x83ea0c	                            sub edx, 0xc	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003ac	          0x80fa01	                               cmp dl, 1	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003af	            0x771d	                            ja 0x40003ce	       515	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003b1	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       520	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003b5	            0xeb19	                           jmp 0x40003d0	       521	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1
0x40003b7	            0x31f6	                            xor esi, esi	       509	evrgnini.c	FUNCTION_8	WHILE_1
0x40003b9	    0x803d00000000	                cmp byte [0x040003c0], 0	       534	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1	IF_4
0x40003c0	            0x750e	                           jne 0x40003d0	       534	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1	IF_4
0x40003c2	        0xf6400d01	                test byte [rax + 0xd], 1	       534	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1	IF_4
0x40003c6	            0x7408	                            je 0x40003d0	       534	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1	IF_4
0x40003c8	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       537	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1	IF_4
0x40003cc	            0xeb02	                           jmp 0x40003d0	       537	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	SWITCH_1	IF_4
0x40003ce	            0x31f6	                            xor esi, esi	       509	evrgnini.c	FUNCTION_8	WHILE_1
0x40003d0	          0x4489e7	                           mov edi, r12d	       549	evrgnini.c	FUNCTION_8	WHILE_1	IF_3
0x40003d3	      0xe800000000	                          call 0x40003d8	       549	evrgnini.c	FUNCTION_8	WHILE_1	IF_3
0x40003d8	          0x4885c0	                           test rax, rax	       551	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5
0x40003db	            0x742c	                            je 0x4000409	       551	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5
0x40003dd	            0x31d2	                            xor edx, edx	       560	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_7
0x40003df	          0x4889de	                            mov rsi, rbx	       560	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_7
0x40003e2	          0x4889c7	                            mov rdi, rax	       560	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_7
0x40003e5	      0xe800000000	                          call 0x40003ea	       560	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_7
0x40003ea	      0xe800000000	                          call 0x40003ef	       567	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_8
0x40003ef	      0xbe01000000	                              mov esi, 1	       568	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_9
0x40003f4	          0x4889df	                            mov rdi, rbx	       568	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_9
0x40003f7	      0xe800000000	                          call 0x40003fc	       568	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_9
0x40003fc	      0xe800000000	                          call 0x4000401	       570	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_10
0x4000401	              0x5b	                                 pop rbx	       591	evrgnini.c	FUNCTION_8
0x4000402	            0x31c0	                            xor eax, eax	       571	evrgnini.c	FUNCTION_8	WHILE_1	IF_3	IF_5	CALL_11
0x4000404	              0x5d	                                 pop rbp	       591	evrgnini.c	FUNCTION_8
0x4000405	            0x415c	                                 pop r12	       591	evrgnini.c	FUNCTION_8
0x4000407	            0xeb09	                           jmp 0x4000412	       591	evrgnini.c	FUNCTION_8
0x4000409	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	       577	evrgnini.c	FUNCTION_8	WHILE_1
0x400040d	      0xe974ffffff	                           jmp 0x4000386	       577	evrgnini.c	FUNCTION_8	WHILE_1
0x4000412	              0xc3	                                     ret	       591	evrgnini.c	FUNCTION_8
0x4000413	            0x31c0	                            xor eax, eax	       493	evrgnini.c	FUNCTION_8	IF_2	CALL_3
0x4000415	              0xc3	                                     ret	       591	evrgnini.c	FUNCTION_8
