tty_ldiscs_seq_start	DO,0:functions,0:CALL,0:ELSE,0:WHILE,0:IF,0:FOR,0:SWITCH,0	4
0x40000f0	        0x48833e1d	                   cmp qword [rsi], 0x1d	       206	tty_ldisc.c	FUNCTION_7
0x40000f4	      0xb800000000	                              mov eax, 0	       206	tty_ldisc.c	FUNCTION_7
0x40000f9	        0x480f4ec6	                         cmovle rax, rsi	       206	tty_ldisc.c	FUNCTION_7
0x40000fd	              0xc3	                                     ret	       207	tty_ldisc.c	FUNCTION_7
tty_ldisc_ref	DO,0:functions,0:CALL,2:ELSE,0:WHILE,0:IF,2:FOR,0:SWITCH,0	26
0x40001f0	              0x55	                                push rbp	       281	tty_ldisc.c	FUNCTION_12
0x40001f1	        0x488d6f28	                   lea rbp, [rdi + 0x28]	       284	tty_ldisc.c	FUNCTION_12	IF_1	CALL_1
0x40001f5	              0x53	                                push rbx	       281	tty_ldisc.c	FUNCTION_12
0x40001f6	          0x4889fb	                            mov rbx, rdi	       281	tty_ldisc.c	FUNCTION_12
0x40001f9	        0x4883ec08	                              sub rsp, 8	       281	tty_ldisc.c	FUNCTION_12
0x40001fd	          0x4889ef	                            mov rdi, rbp	       284	tty_ldisc.c	FUNCTION_12	IF_1	CALL_1
0x4000200	      0xe800000000	                          call 0x4000205	       284	tty_ldisc.c	FUNCTION_12	IF_1	CALL_1
0x4000205	            0x85c0	                           test eax, eax	       284	tty_ldisc.c	FUNCTION_12	IF_1	CALL_1
0x4000207	            0x7410	                            je 0x4000219	       284	tty_ldisc.c	FUNCTION_12	IF_1	CALL_1
0x4000209	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       285	tty_ldisc.c	FUNCTION_12	IF_1
0x400020d	          0x4885c0	                           test rax, rax	       286	tty_ldisc.c	FUNCTION_12	IF_1	IF_2
0x4000210	            0x7410	                            je 0x4000222	       286	tty_ldisc.c	FUNCTION_12	IF_1	IF_2
0x4000212	        0x4883c408	                              add rsp, 8	       290	tty_ldisc.c	FUNCTION_12
0x4000216	              0x5b	                                 pop rbx	       290	tty_ldisc.c	FUNCTION_12
0x4000217	              0x5d	                                 pop rbp	       290	tty_ldisc.c	FUNCTION_12
0x4000218	              0xc3	                                     ret	       290	tty_ldisc.c	FUNCTION_12
0x4000219	        0x4883c408	                              add rsp, 8	       290	tty_ldisc.c	FUNCTION_12
0x400021d	            0x31c0	                            xor eax, eax	       282	tty_ldisc.c	FUNCTION_12
0x400021f	              0x5b	                                 pop rbx	       290	tty_ldisc.c	FUNCTION_12
0x4000220	              0x5d	                                 pop rbp	       290	tty_ldisc.c	FUNCTION_12
0x4000221	              0xc3	                                     ret	       290	tty_ldisc.c	FUNCTION_12
0x4000222	          0x4889ef	                            mov rdi, rbp	       287	tty_ldisc.c	FUNCTION_12	IF_1	CALL_2
0x4000225	        0x48890424	                    mov qword [rsp], rax	       287	tty_ldisc.c	FUNCTION_12	IF_1	CALL_2
0x4000229	      0xe800000000	                          call 0x400022e	       287	tty_ldisc.c	FUNCTION_12	IF_1	CALL_2
0x400022e	        0x488b0424	                    mov rax, qword [rsp]	       287	tty_ldisc.c	FUNCTION_12	IF_1	CALL_2
0x4000232	            0xebde	                           jmp 0x4000212	       287	tty_ldisc.c	FUNCTION_12	IF_1	CALL_2
tty_register_ldisc	DO,0:functions,0:CALL,2:ELSE,0:WHILE,0:IF,1:FOR,0:SWITCH,0	21
0x4000040	          0x83ff1d	                           cmp edi, 0x1d	        66	tty_ldisc.c	FUNCTION_1	IF_1
0x4000043	            0x773f	                            ja 0x4000084	        66	tty_ldisc.c	FUNCTION_1	IF_1
0x4000045	              0x55	                                push rbp	        62	tty_ldisc.c	FUNCTION_1
0x4000046	              0x53	                                push rbx	        62	tty_ldisc.c	FUNCTION_1
0x4000047	          0x4889f5	                            mov rbp, rsi	        62	tty_ldisc.c	FUNCTION_1
0x400004a	            0x89fb	                            mov ebx, edi	        62	tty_ldisc.c	FUNCTION_1
0x400004c	    0x48c7c7000000	                              mov rdi, 0	        69	tty_ldisc.c	FUNCTION_1	CALL_1
0x4000053	      0xe800000000	                          call 0x4000058	        69	tty_ldisc.c	FUNCTION_1	CALL_1
0x4000058	          0x4863d3	                         movsxd rdx, ebx	        70	tty_ldisc.c	FUNCTION_1
0x400005b	          0x895d10	            mov dword [rbp + 0x10], ebx 	        71	tty_ldisc.c	FUNCTION_1
0x400005e	    0xc78590000000	               mov dword [rbp + 0x90], 0	        72	tty_ldisc.c	FUNCTION_1
0x4000068	          0x4889c6	                            mov rsi, rax	        73	tty_ldisc.c	FUNCTION_1	CALL_2
0x400006b	    0x48c7c7000000	                              mov rdi, 0	        73	tty_ldisc.c	FUNCTION_1	CALL_2
0x4000072	    0x48892cd50000	                  mov qword [rdx*8], rbp	        70	tty_ldisc.c	FUNCTION_1
0x400007a	      0xe800000000	                          call 0x400007f	        73	tty_ldisc.c	FUNCTION_1	CALL_2
0x400007f	            0x31c0	                            xor eax, eax	        75	tty_ldisc.c	FUNCTION_1
0x4000081	              0x5b	                                 pop rbx	        76	tty_ldisc.c	FUNCTION_1
0x4000082	              0x5d	                                 pop rbp	        76	tty_ldisc.c	FUNCTION_1
0x4000083	              0xc3	                                     ret	        76	tty_ldisc.c	FUNCTION_1
0x4000084	      0xb8eaffffff	                     mov eax, 0xffffffea	        76	tty_ldisc.c	FUNCTION_1
0x4000089	              0xc3	                                     ret	        76	tty_ldisc.c	FUNCTION_1
tty_ldisc_failto	DO,0:functions,0:CALL,6:ELSE,0:WHILE,0:IF,2:FOR,0:SWITCH,0	40
0x4000450	          0x83fe1d	                           cmp esi, 0x1d	       164	tty_ldisc.c	FUNCTION_5	IF_1
0x4000453	      0xb8eaffffff	                     mov eax, 0xffffffea	       164	tty_ldisc.c	FUNCTION_5	IF_1
0x4000458	            0x7601	                           jbe 0x400045b	       164	tty_ldisc.c	FUNCTION_5	IF_1
0x400045a	              0xc3	                                     ret	       502	tty_ldisc.c	FUNCTION_26
0x400045b	            0x4155	                                push r13	       491	tty_ldisc.c	FUNCTION_26
0x400045d	            0x4154	                                push r12	       491	tty_ldisc.c	FUNCTION_26
0x400045f	              0x55	                                push rbp	       491	tty_ldisc.c	FUNCTION_26
0x4000460	              0x53	                                push rbx	       491	tty_ldisc.c	FUNCTION_26
0x4000461	            0x89f5	                            mov ebp, esi	       491	tty_ldisc.c	FUNCTION_26
0x4000463	          0x4889fb	                            mov rbx, rdi	       491	tty_ldisc.c	FUNCTION_26
0x4000466	        0x4883ec08	                              sub rsp, 8	       491	tty_ldisc.c	FUNCTION_26
0x400046a	      0xe871ffffff	           call sym.tty_ldisc_get.part.3	       491	tty_ldisc.c	FUNCTION_26
0x400046f	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       495	tty_ldisc.c	FUNCTION_26	IF_1	CALL_2
0x4000475	          0x4989c5	                            mov r13, rax	       495	tty_ldisc.c	FUNCTION_26	IF_1	CALL_2
0x4000478	            0x7746	                            ja 0x40004c0	       495	tty_ldisc.c	FUNCTION_26	IF_1	CALL_2
0x400047a	    0x4c8da3c00000	                   lea r12, [rbx + 0xc0]	       428	tty_ldisc.c	FUNCTION_23	CALL_1
0x4000481	        0x48894358	             mov qword [rbx + 0x58], rax	       497	tty_ldisc.c	FUNCTION_26
0x4000485	          0x4c89e7	                            mov rdi, r12	       428	tty_ldisc.c	FUNCTION_23	CALL_1
0x4000488	      0xe800000000	                          call 0x400048d	       428	tty_ldisc.c	FUNCTION_23	CALL_1
0x400048d	          0x4c89e7	                            mov rdi, r12	       430	tty_ldisc.c	FUNCTION_23	CALL_2
0x4000490	    0x4088ab200100	             mov byte [rbx + 0x120], bpl	       429	tty_ldisc.c	FUNCTION_23
0x4000497	      0xe800000000	                          call 0x400049c	       430	tty_ldisc.c	FUNCTION_23	CALL_2
0x400049c	    0x48c783580200	              mov qword [rbx + 0x258], 0	       432	tty_ldisc.c	FUNCTION_23
0x40004a7	    0xc783f0010000	              mov dword [rbx + 0x1f0], 0	       433	tty_ldisc.c	FUNCTION_23
0x40004b1	          0x4c89ee	                            mov rsi, r13	       499	tty_ldisc.c	FUNCTION_26	IF_2	CALL_5
0x40004b4	          0x4889df	                            mov rdi, rbx	       499	tty_ldisc.c	FUNCTION_26	IF_2	CALL_5
0x40004b7	      0xe8e4fdffff	          call sym.tty_ldisc_open.isra.1	       499	tty_ldisc.c	FUNCTION_26	IF_2	CALL_5
0x40004bc	            0x85c0	                           test eax, eax	       499	tty_ldisc.c	FUNCTION_26	IF_2	CALL_5
0x40004be	            0x780b	                            js 0x40004cb	       499	tty_ldisc.c	FUNCTION_26	IF_2	CALL_5
0x40004c0	        0x4883c408	                              add rsp, 8	       502	tty_ldisc.c	FUNCTION_26
0x40004c4	              0x5b	                                 pop rbx	       502	tty_ldisc.c	FUNCTION_26
0x40004c5	              0x5d	                                 pop rbp	       502	tty_ldisc.c	FUNCTION_26
0x40004c6	            0x415c	                                 pop r12	       502	tty_ldisc.c	FUNCTION_26
0x40004c8	            0x415d	                                 pop r13	       502	tty_ldisc.c	FUNCTION_26
0x40004ca	              0xc3	                                     ret	       502	tty_ldisc.c	FUNCTION_26
0x40004cb	          0x4c89ef	                            mov rdi, r13	       500	tty_ldisc.c	FUNCTION_26	CALL_6
0x40004ce	        0x89442404	                mov dword [rsp + 4], eax	       500	tty_ldisc.c	FUNCTION_26	CALL_6
0x40004d2	      0xe8a9feffff	                  call sym.tty_ldisc_put	       500	tty_ldisc.c	FUNCTION_26	CALL_6
0x40004d7	        0x8b442404	                mov eax, dword [rsp + 4]	       500	tty_ldisc.c	FUNCTION_26	CALL_6
0x40004db	            0xebe3	                           jmp 0x40004c0	       500	tty_ldisc.c	FUNCTION_26	CALL_6
get_ldops	DO,0:functions,0:CALL,5:ELSE,0:WHILE,0:IF,2:FOR,0:SWITCH,0	25
0x4000130	              0x55	                                push rbp	       111	tty_ldisc.c	FUNCTION_3
0x4000131	              0x53	                                push rbx	       111	tty_ldisc.c	FUNCTION_3
0x4000132	          0x4863df	                         movsxd rbx, edi	       111	tty_ldisc.c	FUNCTION_3
0x4000135	    0x48c7c7000000	                              mov rdi, 0	       115	tty_ldisc.c	FUNCTION_3	CALL_1
0x400013c	      0xe800000000	                          call 0x4000141	       115	tty_ldisc.c	FUNCTION_3	CALL_1
0x4000141	    0x488b1cdd0000	                  mov rbx, qword [rbx*8]	       117	tty_ldisc.c	FUNCTION_3
0x4000149	          0x4889c5	                            mov rbp, rax	       115	tty_ldisc.c	FUNCTION_3	CALL_1
0x400014c	          0x4885db	                           test rbx, rbx	       118	tty_ldisc.c	FUNCTION_3	IF_1
0x400014f	            0x7435	                            je 0x4000186	       118	tty_ldisc.c	FUNCTION_3	IF_1
0x4000151	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	       120	tty_ldisc.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x4000158	      0xe800000000	                          call 0x400015d	       120	tty_ldisc.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400015d	            0x84c0	                             test al, al	       120	tty_ldisc.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400015f	            0x741c	                            je 0x400017d	       120	tty_ldisc.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x4000161	    0x838390000000	               add dword [rbx + 0x90], 1	       121	tty_ldisc.c	FUNCTION_3	IF_1	IF_2
0x4000168	          0x4889ee	                            mov rsi, rbp	       125	tty_ldisc.c	FUNCTION_3	CALL_5
0x400016b	    0x48c7c7000000	                              mov rdi, 0	       125	tty_ldisc.c	FUNCTION_3	CALL_5
0x4000172	      0xe800000000	                          call 0x4000177	       125	tty_ldisc.c	FUNCTION_3	CALL_5
0x4000177	          0x4889d8	                            mov rax, rbx	       127	tty_ldisc.c	FUNCTION_3
0x400017a	              0x5b	                                 pop rbx	       127	tty_ldisc.c	FUNCTION_3
0x400017b	              0x5d	                                 pop rbp	       127	tty_ldisc.c	FUNCTION_3
0x400017c	              0xc3	                                     ret	       127	tty_ldisc.c	FUNCTION_3
0x400017d	    0x48c7c3f5ffff	             mov rbx, 0xfffffffffffffff5	       119	tty_ldisc.c	FUNCTION_3	IF_1	CALL_3
0x4000184	            0xebe2	                           jmp 0x4000168	       119	tty_ldisc.c	FUNCTION_3	IF_1	CALL_3
0x4000186	    0x48c7c3eaffff	             mov rbx, 0xffffffffffffffea	       116	tty_ldisc.c	FUNCTION_3	CALL_2
0x400018d	            0xebd9	                           jmp 0x4000168	       116	tty_ldisc.c	FUNCTION_3	CALL_2
tty_ldisc_init	DO,0:functions,0:CALL,3:ELSE,0:WHILE,0:IF,1:FOR,0:SWITCH,0	10
0x4000b50	              0x53	                                push rbx	       811	tty_ldisc.c	FUNCTION_35
0x4000b51	            0x31f6	                            xor esi, esi	       811	tty_ldisc.c	FUNCTION_35
0x4000b53	          0x4889fb	                            mov rbx, rdi	       811	tty_ldisc.c	FUNCTION_35
0x4000b56	      0xe885f8ffff	           call sym.tty_ldisc_get.part.3	       811	tty_ldisc.c	FUNCTION_35
0x4000b5b	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       813	tty_ldisc.c	FUNCTION_35	IF_1	CALL_2
0x4000b61	            0x7706	                            ja 0x4000b69	       813	tty_ldisc.c	FUNCTION_35	IF_1	CALL_2
0x4000b63	        0x48894358	             mov qword [rbx + 0x58], rax	       815	tty_ldisc.c	FUNCTION_35
0x4000b67	            0x31c0	                            xor eax, eax	       816	tty_ldisc.c	FUNCTION_35
0x4000b69	              0x5b	                                 pop rbx	       817	tty_ldisc.c	FUNCTION_35
0x4000b6a	              0xc3	                                     ret	       817	tty_ldisc.c	FUNCTION_35
tty_ldisc_put	DO,0:functions,0:CALL,3:ELSE,0:WHILE,0:IF,1:FOR,0:SWITCH,0	13
0x4000380	          0x4885ff	                           test rdi, rdi	       197	tty_ldisc.c	FUNCTION_6	IF_1	CALL_1
0x4000383	            0x7423	                            je 0x40003a8	       197	tty_ldisc.c	FUNCTION_6	IF_1	CALL_1
0x4000385	              0x53	                                push rbx	       196	tty_ldisc.c	FUNCTION_6
0x4000386	          0x4889fb	                            mov rbx, rdi	       196	tty_ldisc.c	FUNCTION_6
0x4000389	          0x488b3f	                    mov rdi, qword [rdi]	       200	tty_ldisc.c	FUNCTION_6	CALL_2
0x400038c	    0x488db7900000	                   lea rsi, [rdi + 0x90]	       200	tty_ldisc.c	FUNCTION_6	CALL_2
0x4000393	    0x4881c7880000	                           add rdi, 0x88	       200	tty_ldisc.c	FUNCTION_6	CALL_2
0x400039a	      0xe841ffffff	               call sym.put_ldops.isra.2	       200	tty_ldisc.c	FUNCTION_6	CALL_2
0x400039f	          0x4889df	                            mov rdi, rbx	       201	tty_ldisc.c	FUNCTION_6	CALL_3
0x40003a2	              0x5b	                                 pop rbx	       202	tty_ldisc.c	FUNCTION_6
0x40003a3	      0xe900000000	                           jmp 0x40003a8	       201	tty_ldisc.c	FUNCTION_6	CALL_3
0x40003a8	             0xf0b	                                     ud2	       201	tty_ldisc.c	FUNCTION_6	CALL_3
0x40003aa	              0xc3	                                     ret	       197	tty_ldisc.c	FUNCTION_6	IF_1	CALL_1
tty_ldisc_flush	DO,0:functions,0:CALL,3:ELSE,0:WHILE,0:IF,1:FOR,0:SWITCH,0	18
0x4000240	              0x55	                                push rbp	       401	tty_ldisc.c	FUNCTION_22
0x4000241	              0x53	                                push rbx	       401	tty_ldisc.c	FUNCTION_22
0x4000242	          0x4889fd	                            mov rbp, rdi	       401	tty_ldisc.c	FUNCTION_22
0x4000245	      0xe800000000	                          call 0x400024a	       402	tty_ldisc.c	FUNCTION_22	CALL_1
0x400024a	          0x4889ef	                            mov rdi, rbp	       404	tty_ldisc.c	FUNCTION_22	CALL_2
0x400024d	          0x4889c3	                            mov rbx, rax	       402	tty_ldisc.c	FUNCTION_22	CALL_1
0x4000250	          0x4889c6	                            mov rsi, rax	       404	tty_ldisc.c	FUNCTION_22	CALL_2
0x4000253	      0xe800000000	                          call 0x4000258	       404	tty_ldisc.c	FUNCTION_22	CALL_2
0x4000258	          0x4885db	                           test rbx, rbx	       405	tty_ldisc.c	FUNCTION_22	IF_1
0x400025b	            0x740f	                            je 0x400026c	       405	tty_ldisc.c	FUNCTION_22	IF_1
0x400025d	        0x488b7b08	                mov rdi, qword [rbx + 8]	       303	tty_ldisc.c	FUNCTION_13	CALL_1
0x4000261	              0x5b	                                 pop rbx	       407	tty_ldisc.c	FUNCTION_22
0x4000262	              0x5d	                                 pop rbp	       407	tty_ldisc.c	FUNCTION_22
0x4000263	        0x4883c728	                           add rdi, 0x28	       303	tty_ldisc.c	FUNCTION_13	CALL_1
0x4000267	      0xe900000000	                           jmp 0x400026c	       303	tty_ldisc.c	FUNCTION_13	CALL_1
0x400026c	              0x5b	                                 pop rbx	       407	tty_ldisc.c	FUNCTION_22
0x400026d	              0x5d	                                 pop rbp	       407	tty_ldisc.c	FUNCTION_22
0x400026e	              0xc3	                                     ret	       407	tty_ldisc.c	FUNCTION_22
tty_unregister_ldisc	DO,0:functions,0:CALL,2:ELSE,1:WHILE,0:IF,2:FOR,0:SWITCH,0	23
0x4000090	          0x83ff1d	                           cmp edi, 0x1d	        96	tty_ldisc.c	FUNCTION_2	IF_1
0x4000093	            0x774c	                            ja 0x40000e1	        96	tty_ldisc.c	FUNCTION_2	IF_1
0x4000095	              0x53	                                push rbx	        92	tty_ldisc.c	FUNCTION_2
0x4000096	            0x89fb	                            mov ebx, edi	        92	tty_ldisc.c	FUNCTION_2
0x4000098	    0x48c7c7000000	                              mov rdi, 0	        99	tty_ldisc.c	FUNCTION_2	CALL_1
0x400009f	      0xe800000000	                          call 0x40000a4	        99	tty_ldisc.c	FUNCTION_2	CALL_1
0x40000a4	          0x4863fb	                         movsxd rdi, ebx	       100	tty_ldisc.c	FUNCTION_2	IF_2
0x40000a7	      0xbbf0ffffff	                     mov ebx, 0xfffffff0	       101	tty_ldisc.c	FUNCTION_2	IF_2
0x40000ac	    0x488b14fd0000	                  mov rdx, qword [rdi*8]	       100	tty_ldisc.c	FUNCTION_2	IF_2
0x40000b4	    0x8b9290000000	            mov edx, dword [rdx + 0x90] 	       100	tty_ldisc.c	FUNCTION_2	IF_2
0x40000ba	            0x85d2	                           test edx, edx	       100	tty_ldisc.c	FUNCTION_2	IF_2
0x40000bc	            0x7413	                            je 0x40000d1	       100	tty_ldisc.c	FUNCTION_2	IF_2
0x40000be	          0x4889c6	                            mov rsi, rax	       104	tty_ldisc.c	FUNCTION_2	CALL_2
0x40000c1	    0x48c7c7000000	                              mov rdi, 0	       104	tty_ldisc.c	FUNCTION_2	CALL_2
0x40000c8	      0xe800000000	                          call 0x40000cd	       104	tty_ldisc.c	FUNCTION_2	CALL_2
0x40000cd	            0x89d8	                            mov eax, ebx	       106	tty_ldisc.c	FUNCTION_2
0x40000cf	              0x5b	                                 pop rbx	       107	tty_ldisc.c	FUNCTION_2
0x40000d0	              0xc3	                                     ret	       107	tty_ldisc.c	FUNCTION_2
0x40000d1	    0x48c704fd0000	                    mov qword [rdi*8], 0	       103	tty_ldisc.c	FUNCTION_2	ELSE_1
0x40000dd	            0x31db	                            xor ebx, ebx	        94	tty_ldisc.c	FUNCTION_2
0x40000df	            0xebdd	                           jmp 0x40000be	        94	tty_ldisc.c	FUNCTION_2
0x40000e1	      0xb8eaffffff	                     mov eax, 0xffffffea	        94	tty_ldisc.c	FUNCTION_2
0x40000e6	              0xc3	                                     ret	        94	tty_ldisc.c	FUNCTION_2
tty_ldiscs_seq_stop	DO,0:functions,0:CALL,0:ELSE,0:WHILE,0:IF,0:FOR,0:SWITCH,0	1
0x4000120	            0xf3c3	                                     ret	       216	tty_ldisc.c	FUNCTION_9
tty_ldisc_deinit	DO,0:functions,0:CALL,1:ELSE,0:WHILE,0:IF,1:FOR,0:SWITCH,0	9
0x4000b70	              0x53	                                push rbx	       827	tty_ldisc.c	FUNCTION_36
0x4000b71	          0x4889fb	                            mov rbx, rdi	       827	tty_ldisc.c	FUNCTION_36
0x4000b74	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	       828	tty_ldisc.c	FUNCTION_36	IF_1
0x4000b78	          0x4885ff	                           test rdi, rdi	       828	tty_ldisc.c	FUNCTION_36	IF_1
0x4000b7b	            0x7405	                            je 0x4000b82	       828	tty_ldisc.c	FUNCTION_36	IF_1
0x4000b7d	      0xe8fef7ffff	                  call sym.tty_ldisc_put	       829	tty_ldisc.c	FUNCTION_36	CALL_1
0x4000b82	    0x48c743580000	               mov qword [rbx + 0x58], 0	       830	tty_ldisc.c	FUNCTION_36
0x4000b8a	              0x5b	                                 pop rbx	       831	tty_ldisc.c	FUNCTION_36
0x4000b8b	              0xc3	                                     ret	       831	tty_ldisc.c	FUNCTION_36
tty_ldiscs_seq_show	DO,0:functions,0:CALL,4:ELSE,0:WHILE,0:IF,1:FOR,0:SWITCH,0	26
0x4000320	            0x4154	                                push r12	       220	tty_ldisc.c	FUNCTION_10
0x4000322	              0x55	                                push rbp	       220	tty_ldisc.c	FUNCTION_10
0x4000323	          0x4989fc	                            mov r12, rdi	       220	tty_ldisc.c	FUNCTION_10
0x4000326	              0x53	                                push rbx	       220	tty_ldisc.c	FUNCTION_10
0x4000327	          0x488b2e	                    mov rbp, qword [rsi]	       221	tty_ldisc.c	FUNCTION_10
0x400032a	            0x89ef	                            mov edi, ebp	       224	tty_ldisc.c	FUNCTION_10	CALL_1
0x400032c	      0xe8fffdffff	                      call sym.get_ldops	       224	tty_ldisc.c	FUNCTION_10	CALL_1
0x4000331	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       225	tty_ldisc.c	FUNCTION_10	IF_1	CALL_2
0x4000337	            0x7739	                            ja 0x4000372	       225	tty_ldisc.c	FUNCTION_10	IF_1	CALL_2
0x4000339	        0x488b5008	                mov rdx, qword [rax + 8]	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x400033d	          0x4889c3	                            mov rbx, rax	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x4000340	    0x48c7c0000000	                              mov rax, 0	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x4000347	    0x48c7c6000000	                              mov rsi, 0	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x400034e	          0x4c89e7	                            mov rdi, r12	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x4000351	            0x89e9	                            mov ecx, ebp	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x4000353	          0x4885d2	                           test rdx, rdx	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x4000356	        0x480f44d0	                          cmove rdx, rax	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x400035a	      0xe800000000	                          call 0x400035f	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x400035f	    0x488db3900000	                   lea rsi, [rbx + 0x90]	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x4000366	    0x488dbb880000	                   lea rdi, [rbx + 0x88]	       227	tty_ldisc.c	FUNCTION_10	CALL_3
0x400036d	      0xe86effffff	               call sym.put_ldops.isra.2	       228	tty_ldisc.c	FUNCTION_10	CALL_4
0x4000372	              0x5b	                                 pop rbx	       230	tty_ldisc.c	FUNCTION_10
0x4000373	            0x31c0	                            xor eax, eax	       230	tty_ldisc.c	FUNCTION_10
0x4000375	              0x5d	                                 pop rbp	       230	tty_ldisc.c	FUNCTION_10
0x4000376	            0x415c	                                 pop r12	       230	tty_ldisc.c	FUNCTION_10
0x4000378	              0xc3	                                     ret	       230	tty_ldisc.c	FUNCTION_10
tty_ldisc_ref_wait	DO,0:functions,0:CALL,2:ELSE,0:WHILE,0:IF,1:FOR,0:SWITCH,0	23
0x4000190	              0x55	                                push rbp	       260	tty_ldisc.c	FUNCTION_11
0x4000191	        0x488d6f28	                   lea rbp, [rdi + 0x28]	       263	tty_ldisc.c	FUNCTION_11	CALL_1
0x4000195	              0x53	                                push rbx	       260	tty_ldisc.c	FUNCTION_11
0x4000196	    0x48beffffffff	         movabs rsi, 0x7fffffffffffffff 	       263	tty_ldisc.c	FUNCTION_11	CALL_1
0x40001a0	          0x4889fb	                            mov rbx, rdi	       260	tty_ldisc.c	FUNCTION_11
0x40001a3	        0x4883ec08	                              sub rsp, 8	       260	tty_ldisc.c	FUNCTION_11
0x40001a7	          0x4889ef	                            mov rdi, rbp	       263	tty_ldisc.c	FUNCTION_11	CALL_1
0x40001aa	      0xe800000000	                          call 0x40001af	       263	tty_ldisc.c	FUNCTION_11	CALL_1
0x40001af	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       264	tty_ldisc.c	FUNCTION_11
0x40001b3	          0x4885c0	                           test rax, rax	       265	tty_ldisc.c	FUNCTION_11	IF_1
0x40001b6	            0x7407	                            je 0x40001bf	       265	tty_ldisc.c	FUNCTION_11	IF_1
0x40001b8	        0x4883c408	                              add rsp, 8	       268	tty_ldisc.c	FUNCTION_11
0x40001bc	              0x5b	                                 pop rbx	       268	tty_ldisc.c	FUNCTION_11
0x40001bd	              0x5d	                                 pop rbp	       268	tty_ldisc.c	FUNCTION_11
0x40001be	              0xc3	                                     ret	       268	tty_ldisc.c	FUNCTION_11
0x40001bf	          0x4889ef	                            mov rdi, rbp	       266	tty_ldisc.c	FUNCTION_11	CALL_2
0x40001c2	        0x48890424	                    mov qword [rsp], rax	       266	tty_ldisc.c	FUNCTION_11	CALL_2
0x40001c6	      0xe800000000	                          call 0x40001cb	       266	tty_ldisc.c	FUNCTION_11	CALL_2
0x40001cb	        0x488b0424	                    mov rax, qword [rsp]	       266	tty_ldisc.c	FUNCTION_11	CALL_2
0x40001cf	        0x4883c408	                              add rsp, 8	       268	tty_ldisc.c	FUNCTION_11
0x40001d3	              0x5b	                                 pop rbx	       268	tty_ldisc.c	FUNCTION_11
0x40001d4	              0x5d	                                 pop rbp	       268	tty_ldisc.c	FUNCTION_11
0x40001d5	              0xc3	                                     ret	       268	tty_ldisc.c	FUNCTION_11
tty_ldisc_setup	DO,0:functions,0:CALL,3:ELSE,0:WHILE,0:IF,3:FOR,0:SWITCH,0	32
0x4000b00	            0x4154	                                push r12	       757	tty_ldisc.c	FUNCTION_33
0x4000b02	          0x4989f4	                            mov r12, rsi	       757	tty_ldisc.c	FUNCTION_33
0x4000b05	              0x55	                                push rbp	       757	tty_ldisc.c	FUNCTION_33
0x4000b06	              0x53	                                push rbx	       757	tty_ldisc.c	FUNCTION_33
0x4000b07	        0x488b7758	            mov rsi, qword [rdi + 0x58] 	       758	tty_ldisc.c	FUNCTION_33	CALL_1
0x4000b0b	          0x4889fb	                            mov rbx, rdi	       757	tty_ldisc.c	FUNCTION_33
0x4000b0e	      0xe88df7ffff	          call sym.tty_ldisc_open.isra.1	       758	tty_ldisc.c	FUNCTION_33	CALL_1
0x4000b13	            0x85c0	                           test eax, eax	       759	tty_ldisc.c	FUNCTION_33	IF_1
0x4000b15	            0x89c5	                            mov ebp, eax	       758	tty_ldisc.c	FUNCTION_33	CALL_1
0x4000b17	            0x7519	                           jne 0x4000b32	       759	tty_ldisc.c	FUNCTION_33	IF_1
0x4000b19	          0x4d85e4	                           test r12, r12	       762	tty_ldisc.c	FUNCTION_33	IF_2
0x4000b1c	            0x7414	                            je 0x4000b32	       762	tty_ldisc.c	FUNCTION_33	IF_2
0x4000b1e	      0x498b742458	            mov rsi, qword [r12 + 0x58] 	       763	tty_ldisc.c	FUNCTION_33	IF_2	CALL_2
0x4000b23	          0x4c89e7	                            mov rdi, r12	       763	tty_ldisc.c	FUNCTION_33	IF_2	CALL_2
0x4000b26	      0xe875f7ffff	          call sym.tty_ldisc_open.isra.1	       763	tty_ldisc.c	FUNCTION_33	IF_2	CALL_2
0x4000b2b	            0x85c0	                           test eax, eax	       764	tty_ldisc.c	FUNCTION_33	IF_2	IF_3
0x4000b2d	          0x4189c4	                           mov r12d, eax	       763	tty_ldisc.c	FUNCTION_33	IF_2	CALL_2
0x4000b30	            0x7507	                           jne 0x4000b39	       764	tty_ldisc.c	FUNCTION_33	IF_2	IF_3
0x4000b32	            0x89e8	                            mov eax, ebp	       770	tty_ldisc.c	FUNCTION_33
0x4000b34	              0x5b	                                 pop rbx	       770	tty_ldisc.c	FUNCTION_33
0x4000b35	              0x5d	                                 pop rbp	       770	tty_ldisc.c	FUNCTION_33
0x4000b36	            0x415c	                                 pop r12	       770	tty_ldisc.c	FUNCTION_33
0x4000b38	              0xc3	                                     ret	       770	tty_ldisc.c	FUNCTION_33
0x4000b39	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	       765	tty_ldisc.c	FUNCTION_33	IF_2	IF_3	CALL_3
0x4000b3d	          0x4489e5	                           mov ebp, r12d	       766	tty_ldisc.c	FUNCTION_33	IF_2	IF_3
0x4000b40	          0x4889df	                            mov rdi, rbx	       765	tty_ldisc.c	FUNCTION_33	IF_2	IF_3	CALL_3
0x4000b43	      0xe828f7ffff	         call sym.tty_ldisc_close.isra.0	       765	tty_ldisc.c	FUNCTION_33	IF_2	IF_3	CALL_3
0x4000b48	            0x89e8	                            mov eax, ebp	       770	tty_ldisc.c	FUNCTION_33
0x4000b4a	              0x5b	                                 pop rbx	       770	tty_ldisc.c	FUNCTION_33
0x4000b4b	              0x5d	                                 pop rbp	       770	tty_ldisc.c	FUNCTION_33
0x4000b4c	            0x415c	                                 pop r12	       770	tty_ldisc.c	FUNCTION_33
0x4000b4e	              0xc3	                                     ret	       770	tty_ldisc.c	FUNCTION_33
tty_ldisc_reinit	DO,0:functions,0:CALL,9:ELSE,0:WHILE,0:IF,3:FOR,0:SWITCH,0	47
0x4000870	          0x83fe1d	                           cmp esi, 0x1d	       164	tty_ldisc.c	FUNCTION_5	IF_1
0x4000873	            0x4154	                                push r12	       661	tty_ldisc.c	FUNCTION_31
0x4000875	              0x55	                                push rbp	       661	tty_ldisc.c	FUNCTION_31
0x4000876	    0x48c7c5eaffff	             mov rbp, 0xffffffffffffffea	       661	tty_ldisc.c	FUNCTION_31
0x400087d	              0x53	                                push rbx	       661	tty_ldisc.c	FUNCTION_31
0x400087e	            0x7607	                           jbe 0x4000887	       164	tty_ldisc.c	FUNCTION_5	IF_1
0x4000880	            0x89e8	                            mov eax, ebp	       682	tty_ldisc.c	FUNCTION_31	IF_3
0x4000882	              0x5b	                                 pop rbx	       685	tty_ldisc.c	FUNCTION_31
0x4000883	              0x5d	                                 pop rbp	       685	tty_ldisc.c	FUNCTION_31
0x4000884	            0x415c	                                 pop r12	       685	tty_ldisc.c	FUNCTION_31
0x4000886	              0xc3	                                     ret	       685	tty_ldisc.c	FUNCTION_31
0x4000887	          0x4189f4	                           mov r12d, esi	       685	tty_ldisc.c	FUNCTION_31
0x400088a	          0x4889fb	                            mov rbx, rdi	       685	tty_ldisc.c	FUNCTION_31
0x400088d	      0xe84efbffff	           call sym.tty_ldisc_get.part.3	       685	tty_ldisc.c	FUNCTION_31
0x4000892	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       666	tty_ldisc.c	FUNCTION_31	IF_1	CALL_2
0x4000898	          0x4889c5	                            mov rbp, rax	       666	tty_ldisc.c	FUNCTION_31	IF_1	CALL_2
0x400089b	            0x777b	                            ja 0x4000918	       666	tty_ldisc.c	FUNCTION_31	IF_1	CALL_2
0x400089d	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	       671	tty_ldisc.c	FUNCTION_31	IF_2
0x40008a1	          0x4885f6	                           test rsi, rsi	       671	tty_ldisc.c	FUNCTION_31	IF_2
0x40008a4	            0x7411	                            je 0x40008b7	       671	tty_ldisc.c	FUNCTION_31	IF_2
0x40008a6	          0x4889df	                            mov rdi, rbx	       672	tty_ldisc.c	FUNCTION_31	IF_2	CALL_5
0x40008a9	      0xe8c2f9ffff	         call sym.tty_ldisc_close.isra.0	       672	tty_ldisc.c	FUNCTION_31	IF_2	CALL_5
0x40008ae	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	       673	tty_ldisc.c	FUNCTION_31	IF_2	CALL_6
0x40008b2	      0xe8c9faffff	                  call sym.tty_ldisc_put	       673	tty_ldisc.c	FUNCTION_31	IF_2	CALL_6
0x40008b7	        0x48896b58	             mov qword [rbx + 0x58], rbp	       677	tty_ldisc.c	FUNCTION_31
0x40008bb	    0x488dabc00000	                   lea rbp, [rbx + 0xc0]	       428	tty_ldisc.c	FUNCTION_23	CALL_1
0x40008c2	          0x4889ef	                            mov rdi, rbp	       428	tty_ldisc.c	FUNCTION_23	CALL_1
0x40008c5	      0xe800000000	                          call 0x40008ca	       428	tty_ldisc.c	FUNCTION_23	CALL_1
0x40008ca	          0x4889ef	                            mov rdi, rbp	       430	tty_ldisc.c	FUNCTION_23	CALL_2
0x40008cd	    0x4488a3200100	            mov byte [rbx + 0x120], r12b	       429	tty_ldisc.c	FUNCTION_23
0x40008d4	      0xe800000000	                          call 0x40008d9	       430	tty_ldisc.c	FUNCTION_23	CALL_2
0x40008d9	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	       679	tty_ldisc.c	FUNCTION_31	CALL_8
0x40008dd	    0x48c783580200	              mov qword [rbx + 0x258], 0	       432	tty_ldisc.c	FUNCTION_23
0x40008e8	          0x4889df	                            mov rdi, rbx	       679	tty_ldisc.c	FUNCTION_31	CALL_8
0x40008eb	    0xc783f0010000	              mov dword [rbx + 0x1f0], 0	       433	tty_ldisc.c	FUNCTION_23
0x40008f5	      0xe8a6f9ffff	          call sym.tty_ldisc_open.isra.1	       679	tty_ldisc.c	FUNCTION_31	CALL_8
0x40008fa	            0x89c5	                            mov ebp, eax	       679	tty_ldisc.c	FUNCTION_31	CALL_8
0x40008fc	            0x31c0	                            xor eax, eax	       679	tty_ldisc.c	FUNCTION_31	CALL_8
0x40008fe	            0x85ed	                           test ebp, ebp	       680	tty_ldisc.c	FUNCTION_31	IF_3
0x4000900	            0x7480	                            je 0x4000882	       680	tty_ldisc.c	FUNCTION_31	IF_3
0x4000902	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	       681	tty_ldisc.c	FUNCTION_31	IF_3	CALL_9
0x4000906	      0xe875faffff	                  call sym.tty_ldisc_put	       681	tty_ldisc.c	FUNCTION_31	IF_3	CALL_9
0x400090b	    0x48c743580000	               mov qword [rbx + 0x58], 0	       682	tty_ldisc.c	FUNCTION_31	IF_3
0x4000913	      0xe968ffffff	                           jmp 0x4000880	       682	tty_ldisc.c	FUNCTION_31	IF_3
0x4000918	          0x4585e4	                         test r12d, r12d	       667	tty_ldisc.c	FUNCTION_31	IF_1	CALL_3
0x400091b	     0xf855fffffff	                           jne 0x4000880	       667	tty_ldisc.c	FUNCTION_31	IF_1	CALL_3
0x4000921	             0xf0b	                                     ud2	       667	tty_ldisc.c	FUNCTION_31	IF_1	CALL_3
tty_ldiscs_seq_next	DO,0:functions,0:CALL,0:ELSE,0:WHILE,0:IF,0:FOR,0:SWITCH,0	7
0x4000100	          0x488b02	                    mov rax, qword [rdx]	       211	tty_ldisc.c	FUNCTION_8
0x4000103	        0x4883c001	                              add rax, 1	       211	tty_ldisc.c	FUNCTION_8
0x4000107	        0x4883f81d	                           cmp rax, 0x1d	       212	tty_ldisc.c	FUNCTION_8
0x400010b	          0x488902	                    mov qword [rdx], rax	       211	tty_ldisc.c	FUNCTION_8
0x400010e	      0xb800000000	                              mov eax, 0	       212	tty_ldisc.c	FUNCTION_8
0x4000113	        0x480f4ec2	                         cmovle rax, rdx	       212	tty_ldisc.c	FUNCTION_8
0x4000117	              0xc3	                                     ret	       213	tty_ldisc.c	FUNCTION_8
tty_ldisc_kill	DO,0:functions,0:CALL,2:ELSE,0:WHILE,0:IF,1:FOR,0:SWITCH,0	11
0x40003b0	        0x488b7758	            mov rsi, qword [rdi + 0x58] 	       618	tty_ldisc.c	FUNCTION_29	IF_1
0x40003b4	          0x4885f6	                           test rsi, rsi	       618	tty_ldisc.c	FUNCTION_29	IF_1
0x40003b7	            0x741b	                            je 0x40003d4	       618	tty_ldisc.c	FUNCTION_29	IF_1
0x40003b9	              0x53	                                push rbx	       617	tty_ldisc.c	FUNCTION_29
0x40003ba	          0x4889fb	                            mov rbx, rdi	       617	tty_ldisc.c	FUNCTION_29
0x40003bd	      0xe8aefeffff	         call sym.tty_ldisc_close.isra.0	       623	tty_ldisc.c	FUNCTION_29	CALL_1
0x40003c2	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	       624	tty_ldisc.c	FUNCTION_29	CALL_2
0x40003c6	      0xe8b5ffffff	                  call sym.tty_ldisc_put	       624	tty_ldisc.c	FUNCTION_29	CALL_2
0x40003cb	    0x48c743580000	               mov qword [rbx + 0x58], 0	       626	tty_ldisc.c	FUNCTION_29
0x40003d3	              0x5b	                                 pop rbx	       627	tty_ldisc.c	FUNCTION_29
0x40003d4	            0xf3c3	                                     ret	       627	tty_ldisc.c	FUNCTION_29
