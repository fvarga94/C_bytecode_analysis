e1000e_rar_get_count_generic	ELSE,0:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,0:IF,0:DO,0	2
0x4000380	     0xfb787080300	          movzx eax, word [rdi + 0x308] 	       217	mac.c	FUNCTION_8
0x4000387	              0xc3	                                     ret	       218	mac.c	FUNCTION_8
e1000e_cleanup_led_generic	ELSE,0:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,0:IF,0:DO,0	5
0x4001310	    0x8b97e4000000	            mov edx, dword [rdi + 0xe4] 	      1583	mac.c	FUNCTION_33
0x4001316	      0xbe000e0000	                          mov esi, 0xe00	      1583	mac.c	FUNCTION_33
0x400131b	      0xe800000000	                          call 0x4001320	      1583	mac.c	FUNCTION_33
0x4001320	            0x31c0	                            xor eax, eax	      1585	mac.c	FUNCTION_33
0x4001322	              0xc3	                                     ret	      1585	mac.c	FUNCTION_33
e1000e_valid_led_default	ELSE,0:functions,0:SWITCH,0:CALL,1:WHILE,0:FOR,0:IF,2:DO,0	17
0x4001150	              0x53	                                push rbx	      1465	mac.c	FUNCTION_30
0x4001151	          0x4889f1	                            mov rcx, rsi	       575	e1000.h	FUNCTION_49	CALL_1
0x4001154	          0x4889f3	                            mov rbx, rsi	      1465	mac.c	FUNCTION_30
0x4001157	    0x488b87280400	           mov rax, qword [rdi + 0x428] 	       575	e1000.h	FUNCTION_49	CALL_1
0x400115e	      0xba01000000	                              mov edx, 1	       575	e1000.h	FUNCTION_49	CALL_1
0x4001163	      0xbe04000000	                              mov esi, 4	       575	e1000.h	FUNCTION_49	CALL_1
0x4001168	      0xe800000000	                          call 0x400116d	       575	e1000.h	FUNCTION_49	CALL_1
0x400116d	            0x85c0	                           test eax, eax	      1469	mac.c	FUNCTION_30	IF_1
0x400116f	            0x7514	                           jne 0x4001185	      1469	mac.c	FUNCTION_30	IF_1
0x4001171	           0xfb70b	                   movzx ecx, word [rbx]	      1474	mac.c	FUNCTION_30	IF_2
0x4001174	          0x8d51ff	                      lea edx, [rcx - 1]	      1474	mac.c	FUNCTION_30	IF_2
0x4001177	        0x6683fafd	              cmp dx, 0xfffffffffffffffd	      1474	mac.c	FUNCTION_30	IF_2
0x400117b	            0x7608	                           jbe 0x4001185	      1474	mac.c	FUNCTION_30	IF_2
0x400117d	      0xba1189ffff	                     mov edx, 0xffff8911	      1475	mac.c	FUNCTION_30	IF_2
0x4001182	          0x668913	                      mov word [rbx], dx	      1475	mac.c	FUNCTION_30	IF_2
0x4001185	              0x5b	                                 pop rbx	      1478	mac.c	FUNCTION_30
0x4001186	              0xc3	                                     ret	      1478	mac.c	FUNCTION_30
e1000e_init_rx_addrs	ELSE,0:functions,0:SWITCH,0:CALL,2:WHILE,0:FOR,1:IF,0:DO,0	37
0x40001b0	            0x4154	                                push r12	       132	mac.c	FUNCTION_6
0x40001b2	              0x55	                                push rbp	       132	mac.c	FUNCTION_6
0x40001b3	          0x4189f4	                           mov r12d, esi	       132	mac.c	FUNCTION_6
0x40001b6	              0x53	                                push rbx	       132	mac.c	FUNCTION_6
0x40001b7	        0x450fb7e4	                        movzx r12d, r12w	       143	mac.c	FUNCTION_6	FOR_1
0x40001bb	            0x31d2	                            xor edx, edx	       139	mac.c	FUNCTION_6	CALL_1
0x40001bd	          0x4889fd	                            mov rbp, rdi	       132	mac.c	FUNCTION_6
0x40001c0	    0x488db7d00000	                   lea rsi, [rdi + 0xd0]	       139	mac.c	FUNCTION_6	CALL_1
0x40001c7	        0x4883ec10	                           sub rsp, 0x10	       132	mac.c	FUNCTION_6
0x40001cb	    0x65488b042528	                mov rax, qword gs:[0x28]	       132	mac.c	FUNCTION_6
0x40001d4	      0x4889442408	                mov qword [rsp + 8], rax	       132	mac.c	FUNCTION_6
0x40001d9	            0x31c0	                            xor eax, eax	       132	mac.c	FUNCTION_6
0x40001db	            0x31c0	                            xor eax, eax	       134	mac.c	FUNCTION_6
0x40001dd	    0xc74424020000	                  mov dword [rsp + 2], 0	       134	mac.c	FUNCTION_6
0x40001e5	      0x6689442406	                  mov word [rsp + 6], ax	       134	mac.c	FUNCTION_6
0x40001ea	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       139	mac.c	FUNCTION_6	CALL_1
0x40001f1	      0xe800000000	                          call 0x40001f6	       139	mac.c	FUNCTION_6	CALL_1
0x40001f6	        0x4183fc01	                             cmp r12d, 1	       143	mac.c	FUNCTION_6	FOR_1
0x40001fa	            0x7623	                           jbe 0x400021f	       143	mac.c	FUNCTION_6	FOR_1
0x40001fc	      0xbb01000000	                              mov ebx, 1	       143	mac.c	FUNCTION_6	FOR_1
0x4000201	            0x89da	                            mov edx, ebx	       144	mac.c	FUNCTION_6	CALL_2
0x4000203	          0x83c301	                              add ebx, 1	       143	mac.c	FUNCTION_6	FOR_1
0x4000206	    0x488b85b80000	            mov rax, qword [rbp + 0xb8] 	       144	mac.c	FUNCTION_6	CALL_2
0x400020d	      0x488d742402	                      lea rsi, [rsp + 2]	       144	mac.c	FUNCTION_6	CALL_2
0x4000212	          0x4889ef	                            mov rdi, rbp	       144	mac.c	FUNCTION_6	CALL_2
0x4000215	      0xe800000000	                          call 0x400021a	       144	mac.c	FUNCTION_6	CALL_2
0x400021a	          0x4439e3	                           cmp ebx, r12d	       143	mac.c	FUNCTION_6	FOR_1
0x400021d	            0x75e2	                           jne 0x4000201	       143	mac.c	FUNCTION_6	FOR_1
0x400021f	      0x488b442408	                mov rax, qword [rsp + 8]	       145	mac.c	FUNCTION_6
0x4000224	    0x654833042528	                xor rax, qword gs:[0x28]	       145	mac.c	FUNCTION_6
0x400022d	            0x7509	                           jne 0x4000238	       145	mac.c	FUNCTION_6
0x400022f	        0x4883c410	                           add rsp, 0x10	       145	mac.c	FUNCTION_6
0x4000233	              0x5b	                                 pop rbx	       145	mac.c	FUNCTION_6
0x4000234	              0x5d	                                 pop rbp	       145	mac.c	FUNCTION_6
0x4000235	            0x415c	                                 pop r12	       145	mac.c	FUNCTION_6
0x4000237	              0xc3	                                     ret	       145	mac.c	FUNCTION_6
0x4000238	      0xe800000000	                          call 0x400023d	       145	mac.c	FUNCTION_6
e1000_set_lan_id_single_port	ELSE,0:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,0:IF,0:DO,0	3
0x4000150	            0x31c0	                            xor eax, eax	        87	mac.c	FUNCTION_3
0x4000152	    0x668987840400	              mov word [rdi + 0x484], ax	        87	mac.c	FUNCTION_3
0x4000159	              0xc3	                                     ret	        87	mac.c	FUNCTION_3
e1000e_check_for_copper_link	ELSE,0:functions,0:SWITCH,0:CALL,4:WHILE,0:FOR,0:IF,4:DO,0	37
0x4000cf0	              0x53	                                push rbx	       416	mac.c	FUNCTION_13
0x4000cf1	        0x4883ec10	                           sub rsp, 0x10	       416	mac.c	FUNCTION_13
0x4000cf5	    0x65488b042528	                mov rax, qword gs:[0x28]	       416	mac.c	FUNCTION_13
0x4000cfe	      0x4889442408	                mov qword [rsp + 8], rax	       416	mac.c	FUNCTION_13
0x4000d03	            0x31c0	                            xor eax, eax	       416	mac.c	FUNCTION_13
0x4000d05	    0x80bf10030000	               cmp byte [rdi + 0x310], 0	       426	mac.c	FUNCTION_13	IF_1
0x4000d0c	            0x7516	                           jne 0x4000d24	       426	mac.c	FUNCTION_13	IF_1
0x4000d0e	      0x488b542408	                mov rdx, qword [rsp + 8]	       469	mac.c	FUNCTION_13
0x4000d13	    0x654833142528	                xor rdx, qword gs:[0x28]	       469	mac.c	FUNCTION_13
0x4000d1c	            0x7564	                           jne 0x4000d82	       469	mac.c	FUNCTION_13
0x4000d1e	        0x4883c410	                           add rsp, 0x10	       469	mac.c	FUNCTION_13
0x4000d22	              0x5b	                                 pop rbx	       469	mac.c	FUNCTION_13
0x4000d23	              0xc3	                                     ret	       469	mac.c	FUNCTION_13
0x4000d24	      0x488d4c2407	                      lea rcx, [rsp + 7]	       434	mac.c	FUNCTION_13	CALL_1
0x4000d29	            0x31d2	                            xor edx, edx	       434	mac.c	FUNCTION_13	CALL_1
0x4000d2b	    0xc68710030000	               mov byte [rdi + 0x310], 0	       428	mac.c	FUNCTION_13
0x4000d32	      0xbe01000000	                              mov esi, 1	       434	mac.c	FUNCTION_13	CALL_1
0x4000d37	          0x4889fb	                            mov rbx, rdi	       434	mac.c	FUNCTION_13	CALL_1
0x4000d3a	      0xe800000000	                          call 0x4000d3f	       434	mac.c	FUNCTION_13	CALL_1
0x4000d3f	            0x85c0	                           test eax, eax	       435	mac.c	FUNCTION_13	IF_2
0x4000d41	            0x7536	                           jne 0x4000d79	       435	mac.c	FUNCTION_13	IF_2
0x4000d43	      0x807c240700	                   cmp byte [rsp + 7], 0	       435	mac.c	FUNCTION_13	IF_2
0x4000d48	            0x742f	                            je 0x4000d79	       435	mac.c	FUNCTION_13	IF_2
0x4000d4a	          0x4889df	                            mov rdi, rbx	       441	mac.c	FUNCTION_13	CALL_2
0x4000d4d	      0xe800000000	                          call 0x4000d52	       441	mac.c	FUNCTION_13	CALL_2
0x4000d52	    0x80bb0e030000	               cmp byte [rbx + 0x30e], 0	       446	mac.c	FUNCTION_13	IF_3
0x4000d59	      0xb8fdffffff	                     mov eax, 0xfffffffd	       447	mac.c	FUNCTION_13	IF_3
0x4000d5e	            0x74ae	                            je 0x4000d0e	       446	mac.c	FUNCTION_13	IF_3
0x4000d60	          0x4889df	                            mov rdi, rbx	       453	mac.c	FUNCTION_13	CALL_3
0x4000d63	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	       453	mac.c	FUNCTION_13	CALL_3
0x4000d6a	      0xe800000000	                          call 0x4000d6f	       453	mac.c	FUNCTION_13	CALL_3
0x4000d6f	          0x4889df	                            mov rdi, rbx	       460	mac.c	FUNCTION_13	CALL_4
0x4000d72	      0xe800000000	                          call 0x4000d77	       460	mac.c	FUNCTION_13	CALL_4
0x4000d77	            0xeb95	                           jmp 0x4000d0e	       464	mac.c	FUNCTION_13
0x4000d79	    0xc68310030000	               mov byte [rbx + 0x310], 1	       467	mac.c	FUNCTION_13
0x4000d80	            0xeb8c	                           jmp 0x4000d0e	       468	mac.c	FUNCTION_13
0x4000d82	      0xe800000000	                          call 0x4000d87	       469	mac.c	FUNCTION_13
e1000e_setup_link_generic	ELSE,0:functions,0:SWITCH,0:CALL,4:WHILE,0:FOR,0:IF,4:DO,0	71
0x4000860	              0x53	                                push rbx	       688	mac.c	ELSE_2	FUNCTION_17
0x4000861	          0x4889fb	                            mov rbx, rdi	       688	mac.c	ELSE_2	FUNCTION_17
0x4000864	        0x4883ec10	                           sub rsp, 0x10	       688	mac.c	ELSE_2	FUNCTION_17
0x4000868	    0x65488b042528	                mov rax, qword gs:[0x28]	       688	mac.c	ELSE_2	FUNCTION_17
0x4000871	      0x4889442408	                mov qword [rsp + 8], rax	       688	mac.c	ELSE_2	FUNCTION_17
0x4000876	            0x31c0	                            xor eax, eax	       688	mac.c	ELSE_2	FUNCTION_17
0x4000878	    0x488b87480300	           mov rax, qword [rdi + 0x348] 	       694	mac.c	ELSE_2	FUNCTION_17	IF_1	CALL_1
0x400087f	          0x4885c0	                           test rax, rax	       694	mac.c	ELSE_2	FUNCTION_17	IF_1	CALL_1
0x4000882	            0x740d	                            je 0x4000891	       694	mac.c	ELSE_2	FUNCTION_17	IF_1	CALL_1
0x4000884	      0xe800000000	                          call 0x4000889	       694	mac.c	ELSE_2	FUNCTION_17	IF_1	CALL_1
0x4000889	            0x89c2	                            mov edx, eax	       694	mac.c	ELSE_2	FUNCTION_17	IF_1	CALL_1
0x400088b	            0x31c0	                            xor eax, eax	       695	mac.c	ELSE_2	FUNCTION_17	IF_1
0x400088d	            0x85d2	                           test edx, edx	       694	mac.c	ELSE_2	FUNCTION_17	IF_1	CALL_1
0x400088f	            0x752a	                           jne 0x40008bb	       694	mac.c	ELSE_2	FUNCTION_17	IF_1	CALL_1
0x4000891	    0x8b832c030000	           mov eax, dword [rbx + 0x32c] 	       700	mac.c	ELSE_2	FUNCTION_17	IF_2
0x4000897	      0x3dff000000	                           cmp eax, 0xff	       700	mac.c	ELSE_2	FUNCTION_17	IF_2
0x400089c	     0xf8487000000	                            je 0x4000929	       700	mac.c	ELSE_2	FUNCTION_17	IF_2
0x40008a2	    0x898328030000	            mov dword [rbx + 0x328], eax	       709	mac.c	ELSE_2	FUNCTION_17
0x40008a8	          0x4889df	                            mov rdi, rbx	       714	mac.c	ELSE_2	FUNCTION_17	CALL_3
0x40008ab	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	       714	mac.c	ELSE_2	FUNCTION_17	CALL_3
0x40008b2	      0xe800000000	                          call 0x40008b7	       714	mac.c	ELSE_2	FUNCTION_17	CALL_3
0x40008b7	            0x85c0	                           test eax, eax	       715	mac.c	ELSE_2	FUNCTION_17	IF_4
0x40008b9	            0x741a	                            je 0x40008d5	       715	mac.c	ELSE_2	FUNCTION_17	IF_4
0x40008bb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       731	mac.c	ELSE_2	FUNCTION_17
0x40008c0	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       731	mac.c	ELSE_2	FUNCTION_17
0x40008c9	     0xf85ca000000	                           jne 0x4000999	       731	mac.c	ELSE_2	FUNCTION_17
0x40008cf	        0x4883c410	                           add rsp, 0x10	       731	mac.c	ELSE_2	FUNCTION_17
0x40008d3	              0x5b	                                 pop rbx	       731	mac.c	ELSE_2	FUNCTION_17
0x40008d4	              0xc3	                                     ret	       731	mac.c	ELSE_2	FUNCTION_17
0x40008d5	          0x4889df	                            mov rdi, rbx	       724	mac.c	ELSE_2	FUNCTION_17
0x40008d8	      0xba08880000	                         mov edx, 0x8808	       724	mac.c	ELSE_2	FUNCTION_17
0x40008dd	      0xbe30000000	                           mov esi, 0x30	       724	mac.c	ELSE_2	FUNCTION_17
0x40008e2	      0xe800000000	                          call 0x40008e7	       724	mac.c	ELSE_2	FUNCTION_17
0x40008e7	          0x4889df	                            mov rdi, rbx	       725	mac.c	ELSE_2	FUNCTION_17
0x40008ea	      0xba00010000	                          mov edx, 0x100	       725	mac.c	ELSE_2	FUNCTION_17
0x40008ef	      0xbe2c000000	                           mov esi, 0x2c	       725	mac.c	ELSE_2	FUNCTION_17
0x40008f4	      0xe800000000	                          call 0x40008f9	       725	mac.c	ELSE_2	FUNCTION_17
0x40008f9	          0x4889df	                            mov rdi, rbx	       726	mac.c	ELSE_2	FUNCTION_17
0x40008fc	      0xba0180c200	                       mov edx, 0xc28001	       726	mac.c	ELSE_2	FUNCTION_17
0x4000901	      0xbe28000000	                           mov esi, 0x28	       726	mac.c	ELSE_2	FUNCTION_17
0x4000906	      0xe800000000	                          call 0x400090b	       726	mac.c	ELSE_2	FUNCTION_17
0x400090b	     0xfb793200300	          movzx edx, word [rbx + 0x320] 	       728	mac.c	ELSE_2	FUNCTION_17
0x4000912	          0x4889df	                            mov rdi, rbx	       728	mac.c	ELSE_2	FUNCTION_17
0x4000915	      0xbe70010000	                          mov esi, 0x170	       728	mac.c	ELSE_2	FUNCTION_17
0x400091a	      0xe800000000	                          call 0x400091f	       728	mac.c	ELSE_2	FUNCTION_17
0x400091f	          0x4889df	                            mov rdi, rbx	       730	mac.c	ELSE_2	FUNCTION_17	CALL_4
0x4000922	      0xe800000000	                          call 0x4000927	       730	mac.c	ELSE_2	FUNCTION_17	CALL_4
0x4000927	            0xeb92	                           jmp 0x40008bb	       730	mac.c	ELSE_2	FUNCTION_17	CALL_4
0x4000929	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	       575	e1000.h	FUNCTION_49	CALL_1
0x4000930	      0x488d4c2406	                      lea rcx, [rsp + 6]	       575	e1000.h	FUNCTION_49	CALL_1
0x4000935	      0xba01000000	                              mov edx, 1	       575	e1000.h	FUNCTION_49	CALL_1
0x400093a	      0xbe0f000000	                            mov esi, 0xf	       575	e1000.h	FUNCTION_49	CALL_1
0x400093f	          0x4889df	                            mov rdi, rbx	       575	e1000.h	FUNCTION_49	CALL_1
0x4000942	      0xe800000000	                          call 0x4000947	       575	e1000.h	FUNCTION_49	CALL_1
0x4000947	            0x85c0	                           test eax, eax	       662	mac.c	FUNCTION_16	IF_1
0x4000949	     0xf856cffffff	                           jne 0x40008bb	       662	mac.c	FUNCTION_16	IF_1
0x400094f	       0xfb7442406	               movzx eax, word [rsp + 6]	       667	mac.c	FUNCTION_16	IF_2
0x4000954	        0x66250030	                          and ax, 0x3000	       667	mac.c	FUNCTION_16	IF_2
0x4000958	            0x741a	                            je 0x4000974	       667	mac.c	FUNCTION_16	IF_2
0x400095a	        0x663d0020	                          cmp ax, 0x2000	       669	mac.c	FUNCTION_16	ELSE_1	IF_3
0x400095e	            0x7425	                            je 0x4000985	       669	mac.c	FUNCTION_16	ELSE_1	IF_3
0x4000960	    0xc7832c030000	              mov dword [rbx + 0x32c], 3	       672	mac.c	FUNCTION_16	ELSE_2
0x400096a	      0xb803000000	                              mov eax, 3	       672	mac.c	FUNCTION_16	ELSE_2
0x400096f	      0xe92effffff	                           jmp 0x40008a2	       672	mac.c	FUNCTION_16	ELSE_2
0x4000974	    0xc7832c030000	              mov dword [rbx + 0x32c], 0	       668	mac.c	FUNCTION_16	IF_2
0x400097e	            0x31c0	                            xor eax, eax	       668	mac.c	FUNCTION_16	IF_2
0x4000980	      0xe91dffffff	                           jmp 0x40008a2	       668	mac.c	FUNCTION_16	IF_2
0x4000985	    0xc7832c030000	              mov dword [rbx + 0x32c], 2	       670	mac.c	FUNCTION_16	ELSE_1	IF_3
0x400098f	      0xb802000000	                              mov eax, 2	       670	mac.c	FUNCTION_16	ELSE_1	IF_3
0x4000994	      0xe909ffffff	                           jmp 0x40008a2	       670	mac.c	FUNCTION_16	ELSE_1	IF_3
0x4000999	      0xe800000000	                          call 0x400099e	       731	mac.c	ELSE_2	FUNCTION_17
e1000e_get_bus_info_pcie	ELSE,1:functions,0:SWITCH,0:CALL,2:WHILE,0:FOR,0:IF,1:DO,0	31
0x40000b0	              0x53	                                push rbx	        34	mac.c	FUNCTION_1
0x40000b1	          0x4889fb	                            mov rbx, rdi	        34	mac.c	FUNCTION_1
0x40000b4	        0x4883ec10	                           sub rsp, 0x10	        34	mac.c	FUNCTION_1
0x40000b8	    0x65488b042528	                mov rax, qword gs:[0x28]	        34	mac.c	FUNCTION_1
0x40000c1	      0x4889442408	                mov qword [rsp + 8], rax	        34	mac.c	FUNCTION_1
0x40000c6	            0x31c0	                            xor eax, eax	        34	mac.c	FUNCTION_1
0x40000c8	          0x488b07	                    mov rax, qword [rdi]	        40	mac.c	FUNCTION_1
0x40000cb	    0x488bb8b00400	           mov rdi, qword [rax + 0x4b0] 	        40	mac.c	FUNCTION_1
0x40000d2	         0xfb6774c	           movzx esi, byte [rdi + 0x4c] 	        40	mac.c	FUNCTION_1
0x40000d6	          0x4084f6	                           test sil, sil	        41	mac.c	FUNCTION_1	IF_1
0x40000d9	            0x752e	                           jne 0x4000109	        41	mac.c	FUNCTION_1	IF_1
0x40000db	    0xc78380040000	              mov dword [rbx + 0x480], 0	        42	mac.c	FUNCTION_1	IF_1
0x40000e5	        0x488b4358	            mov rax, qword [rbx + 0x58] 	        52	mac.c	FUNCTION_1	CALL_2
0x40000e9	          0x4889df	                            mov rdi, rbx	        52	mac.c	FUNCTION_1	CALL_2
0x40000ec	      0xe800000000	                          call 0x40000f1	        52	mac.c	FUNCTION_1	CALL_2
0x40000f1	            0x31c0	                            xor eax, eax	        55	mac.c	FUNCTION_1
0x40000f3	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        55	mac.c	FUNCTION_1
0x40000f8	    0x6548330c2528	                xor rcx, qword gs:[0x28]	        55	mac.c	FUNCTION_1
0x4000101	            0x7528	                           jne 0x400012b	        55	mac.c	FUNCTION_1
0x4000103	        0x4883c410	                           add rsp, 0x10	        55	mac.c	FUNCTION_1
0x4000107	              0x5b	                                 pop rbx	        55	mac.c	FUNCTION_1
0x4000108	              0xc3	                                     ret	        55	mac.c	FUNCTION_1
0x4000109	      0x488d542406	                      lea rdx, [rsp + 6]	        44	mac.c	FUNCTION_1	ELSE_1	CALL_1
0x400010e	          0x83c612	                           add esi, 0x12	        44	mac.c	FUNCTION_1	ELSE_1	CALL_1
0x4000111	      0xe800000000	                          call 0x4000116	        44	mac.c	FUNCTION_1	ELSE_1	CALL_1
0x4000116	       0xfb7442406	               movzx eax, word [rsp + 6]	        47	mac.c	FUNCTION_1	ELSE_1
0x400011b	      0x25f0030000	                          and eax, 0x3f0	        47	mac.c	FUNCTION_1	ELSE_1
0x4000120	          0xc1f804	                              sar eax, 4	        47	mac.c	FUNCTION_1	ELSE_1
0x4000123	    0x898380040000	            mov dword [rbx + 0x480], eax	        47	mac.c	FUNCTION_1	ELSE_1
0x4000129	            0xebba	                           jmp 0x40000e5	        47	mac.c	FUNCTION_1	ELSE_1
0x400012b	      0xe800000000	call sym.e1000_set_lan_id_multi_port_pcie	        55	mac.c	FUNCTION_1
e1000e_blink_led_generic	ELSE,1:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,1:IF,2:DO,0	39
0x4001330	    0x83bf0c040000	              cmp dword [rdi + 0x40c], 2	      1598	mac.c	FUNCTION_34	IF_1
0x4001337	            0x7462	                            je 0x400139b	      1598	mac.c	FUNCTION_34	IF_1
0x4001339	    0x448b87ec0000	            mov r8d, dword [rdi + 0xec] 	      1609	mac.c	FUNCTION_34	ELSE_1
0x4001340	    0x448b8fe40000	            mov r9d, dword [rdi + 0xe4] 	      1609	mac.c	FUNCTION_34	ELSE_1
0x4001347	            0x31c9	                            xor ecx, ecx	      1610	mac.c	FUNCTION_34	ELSE_1	FOR_1
0x4001349	    0x41bb0f000000	                           mov r11d, 0xf	      1619	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x400134f	    0x41ba8e000000	                          mov r10d, 0x8e	      1621	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001355	          0x4489c2	                            mov edx, r8d	      1609	mac.c	FUNCTION_34	ELSE_1
0x4001358	          0x4489c0	                            mov eax, r8d	      1611	mac.c	FUNCTION_34	ELSE_1	FOR_1
0x400135b	          0x4489ce	                            mov esi, r9d	      1615	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x400135e	            0xd3e8	                             shr eax, cl	      1611	mac.c	FUNCTION_34	ELSE_1	FOR_1
0x4001360	            0xd3ee	                             shr esi, cl	      1615	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001362	          0x83e00f	                            and eax, 0xf	      1611	mac.c	FUNCTION_34	ELSE_1	FOR_1
0x4001365	          0x83e640	                           and esi, 0x40	      1615	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001368	            0x741a	                            je 0x4001384	      1615	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x400136a	          0x83f80f	                            cmp eax, 0xf	      1617	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x400136d	            0x741a	                            je 0x4001389	      1617	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x400136f	          0x83c108	                              add ecx, 8	      1610	mac.c	FUNCTION_34	ELSE_1	FOR_1
0x4001372	          0x83f920	                           cmp ecx, 0x20	      1610	mac.c	FUNCTION_34	ELSE_1	FOR_1
0x4001375	            0x75e1	                           jne 0x4001358	      1610	mac.c	FUNCTION_34	ELSE_1	FOR_1
0x4001377	      0xbe000e0000	                          mov esi, 0xe00	      1627	mac.c	FUNCTION_34
0x400137c	      0xe800000000	                          call 0x4001381	      1627	mac.c	FUNCTION_34
0x4001381	            0x31c0	                            xor eax, eax	      1630	mac.c	FUNCTION_34
0x4001383	              0xc3	                                     ret	      1630	mac.c	FUNCTION_34
0x4001384	          0x83f80e	                            cmp eax, 0xe	      1615	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001387	            0x75e6	                           jne 0x400136f	      1615	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001389	          0x4489d8	                           mov eax, r11d	      1619	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x400138c	            0xd3e0	                             shl eax, cl	      1619	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x400138e	            0xf7d0	                                 not eax	      1619	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001390	            0x21c2	                            and edx, eax	      1619	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001392	          0x4489d0	                           mov eax, r10d	      1621	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001395	            0xd3e0	                             shl eax, cl	      1621	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001397	             0x9c2	                             or edx, eax	      1621	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x4001399	            0xebd4	                           jmp 0x400136f	      1621	mac.c	FUNCTION_34	ELSE_1	FOR_1	IF_2
0x400139b	      0xba8e000000	                           mov edx, 0x8e	      1600	mac.c	FUNCTION_34	IF_1
0x40013a0	      0xbe000e0000	                          mov esi, 0xe00	      1627	mac.c	FUNCTION_34
0x40013a5	      0xe800000000	                          call 0x40013aa	      1627	mac.c	FUNCTION_34
0x40013aa	            0x31c0	                            xor eax, eax	      1630	mac.c	FUNCTION_34
0x40013ac	              0xc3	                                     ret	      1630	mac.c	FUNCTION_34
e1000_check_alt_mac_addr_generic	ELSE,0:functions,0:SWITCH,0:CALL,5:WHILE,0:FOR,1:IF,7:DO,0	79
0x4000240	            0x4155	                                push r13	       160	mac.c	FUNCTION_7
0x4000242	            0x4154	                                push r12	       160	mac.c	FUNCTION_7
0x4000244	      0xba01000000	                              mov edx, 1	       575	e1000.h	FUNCTION_49	CALL_1
0x4000249	              0x55	                                push rbp	       160	mac.c	FUNCTION_7
0x400024a	              0x53	                                push rbx	       160	mac.c	FUNCTION_7
0x400024b	      0xbe03000000	                              mov esi, 3	       575	e1000.h	FUNCTION_49	CALL_1
0x4000250	          0x4889fb	                            mov rbx, rdi	       160	mac.c	FUNCTION_7
0x4000253	        0x4883ec18	                           sub rsp, 0x18	       160	mac.c	FUNCTION_7
0x4000257	    0x65488b042528	                mov rax, qword gs:[0x28]	       160	mac.c	FUNCTION_7
0x4000260	      0x4889442410	             mov qword [rsp + 0x10], rax	       160	mac.c	FUNCTION_7
0x4000265	            0x31c0	                            xor eax, eax	       160	mac.c	FUNCTION_7
0x4000267	      0x488d4c2408	                      lea rcx, [rsp + 8]	       575	e1000.h	FUNCTION_49	CALL_1
0x400026c	    0x488b87280400	           mov rax, qword [rdi + 0x428] 	       575	e1000.h	FUNCTION_49	CALL_1
0x4000273	      0xe800000000	                          call 0x4000278	       575	e1000.h	FUNCTION_49	CALL_1
0x4000278	            0x85c0	                           test eax, eax	       167	mac.c	FUNCTION_7	IF_1
0x400027a	            0x89c5	                            mov ebp, eax	       575	e1000.h	FUNCTION_49	CALL_1
0x400027c	     0xf85a0000000	                           jne 0x4000322	       167	mac.c	FUNCTION_7	IF_1
0x4000282	    0x83bbdc000000	               cmp dword [rbx + 0xdc], 2	       171	mac.c	FUNCTION_7	IF_2
0x4000289	     0xf8493000000	                            je 0x4000322	       171	mac.c	FUNCTION_7	IF_2
0x400028f	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	       575	e1000.h	FUNCTION_49	CALL_1
0x4000296	      0x488d4c2406	                      lea rcx, [rsp + 6]	       575	e1000.h	FUNCTION_49	CALL_1
0x400029b	      0xba01000000	                              mov edx, 1	       575	e1000.h	FUNCTION_49	CALL_1
0x40002a0	      0xbe37000000	                           mov esi, 0x37	       575	e1000.h	FUNCTION_49	CALL_1
0x40002a5	          0x4889df	                            mov rdi, rbx	       575	e1000.h	FUNCTION_49	CALL_1
0x40002a8	      0xe800000000	                          call 0x40002ad	       575	e1000.h	FUNCTION_49	CALL_1
0x40002ad	            0x85c0	                           test eax, eax	       176	mac.c	FUNCTION_7	IF_3
0x40002af	            0x756f	                           jne 0x4000320	       176	mac.c	FUNCTION_7	IF_3
0x40002b1	       0xfb7742406	               movzx esi, word [rsp + 6]	       181	mac.c	FUNCTION_7	IF_4
0x40002b6	          0x8d46ff	                      lea eax, [rsi - 1]	       181	mac.c	FUNCTION_7	IF_4
0x40002b9	        0x6683f8fd	              cmp ax, 0xfffffffffffffffd	       181	mac.c	FUNCTION_7	IF_4
0x40002bd	            0x7763	                            ja 0x4000322	       181	mac.c	FUNCTION_7	IF_4
0x40002bf	    0x6683bb840400	               cmp word [rbx + 0x484], 1	       186	mac.c	FUNCTION_7	IF_5
0x40002c7	     0xf8493000000	                            je 0x4000360	       186	mac.c	FUNCTION_7	IF_5
0x40002cd	      0x4c8d6c240b	                    lea r13, [rsp + 0xb]	       197	mac.c	FUNCTION_7	FOR_1
0x40002d2	          0x4531e4	                          xor r12d, r12d	       160	mac.c	FUNCTION_7
0x40002d5	          0x4489e0	                           mov eax, r12d	       575	e1000.h	FUNCTION_49	CALL_1
0x40002d8	      0x488d4c2408	                      lea rcx, [rsp + 8]	       575	e1000.h	FUNCTION_49	CALL_1
0x40002dd	      0xba01000000	                              mov edx, 1	       575	e1000.h	FUNCTION_49	CALL_1
0x40002e2	            0xd1e8	                              shr eax, 1	       575	e1000.h	FUNCTION_49	CALL_1
0x40002e4	          0x4889df	                            mov rdi, rbx	       575	e1000.h	FUNCTION_49	CALL_1
0x40002e7	             0x1c6	                            add esi, eax	       575	e1000.h	FUNCTION_49	CALL_1
0x40002e9	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	       575	e1000.h	FUNCTION_49	CALL_1
0x40002f0	           0xfb7f6	                           movzx esi, si	       575	e1000.h	FUNCTION_49	CALL_1
0x40002f3	      0xe800000000	                          call 0x40002f8	       575	e1000.h	FUNCTION_49	CALL_1
0x40002f8	            0x85c0	                           test eax, eax	       191	mac.c	FUNCTION_7	FOR_1	IF_6
0x40002fa	            0x7524	                           jne 0x4000320	       191	mac.c	FUNCTION_7	FOR_1	IF_6
0x40002fc	       0xfb7442408	               movzx eax, word [rsp + 8]	       196	mac.c	FUNCTION_7	FOR_1
0x4000301	      0x428844240a	          mov byte [rsp + r12 + 0xa], al	       196	mac.c	FUNCTION_7	FOR_1
0x4000306	        0x66c1e808	                               shr ax, 8	       197	mac.c	FUNCTION_7	FOR_1
0x400030a	      0x4388442500	                mov byte [r13 + r12], al	       197	mac.c	FUNCTION_7	FOR_1
0x400030f	        0x4983c402	                              add r12, 2	       197	mac.c	FUNCTION_7	FOR_1
0x4000313	        0x4983fc06	                              cmp r12, 6	       188	mac.c	FUNCTION_7	FOR_1
0x4000317	            0x7426	                            je 0x400033f	       188	mac.c	FUNCTION_7	FOR_1
0x4000319	       0xfb7742406	               movzx esi, word [rsp + 6]	       188	mac.c	FUNCTION_7	FOR_1
0x400031e	            0xebb5	                           jmp 0x40002d5	       188	mac.c	FUNCTION_7	FOR_1
0x4000320	            0x89c5	                            mov ebp, eax	       575	e1000.h	FUNCTION_49	CALL_1
0x4000322	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       213	mac.c	FUNCTION_7
0x4000327	    0x654833142528	                xor rdx, qword gs:[0x28]	       213	mac.c	FUNCTION_7
0x4000330	            0x89e8	                            mov eax, ebp	       213	mac.c	FUNCTION_7
0x4000332	            0x7539	                           jne 0x400036d	       213	mac.c	FUNCTION_7
0x4000334	        0x4883c418	                           add rsp, 0x18	       213	mac.c	FUNCTION_7
0x4000338	              0x5b	                                 pop rbx	       213	mac.c	FUNCTION_7
0x4000339	              0x5d	                                 pop rbp	       213	mac.c	FUNCTION_7
0x400033a	            0x415c	                                 pop r12	       213	mac.c	FUNCTION_7
0x400033c	            0x415d	                                 pop r13	       213	mac.c	FUNCTION_7
0x400033e	              0xc3	                                     ret	       213	mac.c	FUNCTION_7
0x400033f	      0xf644240a01	                test byte [rsp + 0xa], 1	       201	mac.c	FUNCTION_7	IF_7	CALL_4
0x4000344	            0x75dc	                           jne 0x4000322	       201	mac.c	FUNCTION_7	IF_7	CALL_4
0x4000346	    0x488b83b80000	            mov rax, qword [rbx + 0xb8] 	       210	mac.c	FUNCTION_7	CALL_5
0x400034d	            0x31d2	                            xor edx, edx	       210	mac.c	FUNCTION_7	CALL_5
0x400034f	      0x488d74240a	                    lea rsi, [rsp + 0xa]	       210	mac.c	FUNCTION_7	CALL_5
0x4000354	          0x4889df	                            mov rdi, rbx	       210	mac.c	FUNCTION_7	CALL_5
0x4000357	            0x31ed	                            xor ebp, ebp	       212	mac.c	FUNCTION_7
0x4000359	      0xe800000000	                          call 0x400035e	       210	mac.c	FUNCTION_7	CALL_5
0x400035e	            0xebc2	                           jmp 0x4000322	       212	mac.c	FUNCTION_7
0x4000360	          0x83c603	                              add esi, 3	       187	mac.c	FUNCTION_7	IF_5
0x4000363	      0x6689742406	                  mov word [rsp + 6], si	       187	mac.c	FUNCTION_7	IF_5
0x4000368	      0xe960ffffff	                           jmp 0x40002cd	       187	mac.c	FUNCTION_7	IF_5
0x400036d	      0xe800000000	                          call 0x4000372	       213	mac.c	FUNCTION_7
e1000e_reset_adaptive	ELSE,0:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,0:IF,1:DO,0	17
0x40014a0	    0x80bf0b030000	               cmp byte [rdi + 0x30b], 0	      1750	mac.c	FUNCTION_39	IF_1
0x40014a7	            0x7502	                           jne 0x40014ab	      1750	mac.c	FUNCTION_39	IF_1
0x40014a9	            0xf3c3	                                     ret	      1750	mac.c	FUNCTION_39	IF_1
0x40014ab	      0xba28000000	                           mov edx, 0x28	      1756	mac.c	FUNCTION_39
0x40014b0	      0xbe0a000000	                            mov esi, 0xa	      1758	mac.c	FUNCTION_39
0x40014b5	            0x31c0	                            xor eax, eax	      1755	mac.c	FUNCTION_39
0x40014b7	      0xb950000000	                           mov ecx, 0x50	      1757	mac.c	FUNCTION_39
0x40014bc	    0x41b804000000	                              mov r8d, 4	      1759	mac.c	FUNCTION_39
0x40014c2	    0x668997000100	              mov word [rdi + 0x100], dx	      1756	mac.c	FUNCTION_39
0x40014c9	    0x6689b7040100	              mov word [rdi + 0x104], si	      1758	mac.c	FUNCTION_39
0x40014d0	    0x668987fc0000	               mov word [rdi + 0xfc], ax	      1755	mac.c	FUNCTION_39
0x40014d7	            0x31d2	                            xor edx, edx	      1762	mac.c	FUNCTION_39
0x40014d9	    0x66898ffe0000	               mov word [rdi + 0xfe], cx	      1757	mac.c	FUNCTION_39
0x40014e0	    0x664489870201	             mov word [rdi + 0x102], r8w	      1759	mac.c	FUNCTION_39
0x40014e8	      0xbe58040000	                          mov esi, 0x458	      1762	mac.c	FUNCTION_39
0x40014ed	    0xc68711030000	               mov byte [rdi + 0x311], 0	      1761	mac.c	FUNCTION_39
0x40014f4	      0xe900000000	                           jmp 0x40014f9	      1762	mac.c	FUNCTION_39
e1000e_update_adaptive	ELSE,2:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,0:IF,6:DO,0	33
0x4001500	    0x80bf0b030000	               cmp byte [rdi + 0x30b], 0	      1776	mac.c	FUNCTION_40	IF_1
0x4001507	            0x7445	                            je 0x400154e	      1776	mac.c	FUNCTION_40	IF_1
0x4001509	     0xfb787020100	          movzx eax, word [rdi + 0x102] 	      1781	mac.c	FUNCTION_40	IF_2
0x4001510	    0x8b97f4000000	            mov edx, dword [rdi + 0xf4] 	      1781	mac.c	FUNCTION_40	IF_2
0x4001516	     0xfaf87e00000	            imul eax, dword [rdi + 0xe0]	      1781	mac.c	FUNCTION_40	IF_2
0x400151d	            0x39d0	                            cmp eax, edx	      1781	mac.c	FUNCTION_40	IF_2
0x400151f	            0x7725	                            ja 0x4001546	      1781	mac.c	FUNCTION_40	IF_2
0x4001521	    0x80bf11030000	               cmp byte [rdi + 0x311], 0	      1794	mac.c	FUNCTION_40	ELSE_2	IF_6
0x4001528	            0x7424	                            je 0x400154e	      1794	mac.c	FUNCTION_40	ELSE_2	IF_6
0x400152a	    0x81fae8030000	                          cmp edx, 0x3e8	      1794	mac.c	FUNCTION_40	ELSE_2	IF_6
0x4001530	            0x771c	                            ja 0x400154e	      1794	mac.c	FUNCTION_40	ELSE_2	IF_6
0x4001532	            0x31c0	                            xor eax, eax	      1796	mac.c	FUNCTION_40	ELSE_2	IF_6
0x4001534	    0xc68711030000	               mov byte [rdi + 0x311], 0	      1797	mac.c	FUNCTION_40	ELSE_2	IF_6
0x400153b	            0x31d2	                            xor edx, edx	      1798	mac.c	FUNCTION_40	ELSE_2	IF_6
0x400153d	    0x668987fc0000	               mov word [rdi + 0xfc], ax	      1796	mac.c	FUNCTION_40	ELSE_2	IF_6
0x4001544	            0xeb34	                           jmp 0x400157a	      1796	mac.c	FUNCTION_40	ELSE_2	IF_6
0x4001546	    0x81fae8030000	                          cmp edx, 0x3e8	      1782	mac.c	FUNCTION_40	IF_2	IF_3
0x400154c	            0x7702	                            ja 0x4001550	      1782	mac.c	FUNCTION_40	IF_2	IF_3
0x400154e	            0xf3c3	                                     ret	      1782	mac.c	FUNCTION_40	IF_2	IF_3
0x4001550	     0xfb787fc0000	           movzx eax, word [rdi + 0xfc] 	      1784	mac.c	FUNCTION_40	IF_2	IF_3	IF_4
0x4001557	    0xc68711030000	               mov byte [rdi + 0x311], 1	      1783	mac.c	FUNCTION_40	IF_2	IF_3
0x400155e	    0x663b87fe0000	               cmp ax, word [rdi + 0xfe]	      1784	mac.c	FUNCTION_40	IF_2	IF_3	IF_4
0x4001565	            0x73e7	                           jae 0x400154e	      1784	mac.c	FUNCTION_40	IF_2	IF_3	IF_4
0x4001567	          0x6685c0	                             test ax, ax	      1785	mac.c	FUNCTION_40	IF_2	IF_3	IF_4	IF_5
0x400156a	            0x7518	                           jne 0x4001584	      1785	mac.c	FUNCTION_40	IF_2	IF_3	IF_4	IF_5
0x400156c	     0xfb797000100	          movzx edx, word [rdi + 0x100] 	      1786	mac.c	FUNCTION_40	IF_2	IF_3	IF_4	IF_5
0x4001573	    0x668997fc0000	               mov word [rdi + 0xfc], dx	      1786	mac.c	FUNCTION_40	IF_2	IF_3	IF_4	IF_5
0x400157a	      0xbe58040000	                          mov esi, 0x458	      1798	mac.c	FUNCTION_40	ELSE_2	IF_6
0x400157f	      0xe900000000	                           jmp 0x4001584	      1798	mac.c	FUNCTION_40	ELSE_2	IF_6
0x4001584	    0x660387040100	              add ax, word [rdi + 0x104]	      1788	mac.c	FUNCTION_40	IF_2	IF_3	IF_4	ELSE_1
0x400158b	           0xfb7d0	                           movzx edx, ax	      1788	mac.c	FUNCTION_40	IF_2	IF_3	IF_4	ELSE_1
0x400158e	    0x668997fc0000	               mov word [rdi + 0xfc], dx	      1788	mac.c	FUNCTION_40	IF_2	IF_3	IF_4	ELSE_1
0x4001595	            0xebe3	                           jmp 0x400157a	      1788	mac.c	FUNCTION_40	IF_2	IF_3	IF_4	ELSE_1
e1000e_set_fc_watermarks	ELSE,0:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,0:IF,2:DO,0	25
0x4000800	              0x55	                                push rbp	       924	mac.c	FUNCTION_22
0x4000801	              0x53	                                push rbx	       924	mac.c	FUNCTION_22
0x4000802	          0x4889fb	                            mov rbx, rdi	       924	mac.c	FUNCTION_22
0x4000805	    0xf68728030000	              test byte [rdi + 0x328], 2	       933	mac.c	FUNCTION_22	IF_1
0x400080c	            0x743e	                            je 0x400084c	       933	mac.c	FUNCTION_22	IF_1
0x400080e	    0x8b971c030000	           mov edx, dword [rdi + 0x31c] 	       938	mac.c	FUNCTION_22	IF_1
0x4000814	    0x8baf18030000	           mov ebp, dword [rdi + 0x318] 	       942	mac.c	FUNCTION_22	IF_1
0x400081a	            0x89d0	                            mov eax, edx	       940	mac.c	FUNCTION_22	IF_1	IF_2
0x400081c	       0xd00000080	                      or eax, 0x80000000	       940	mac.c	FUNCTION_22	IF_1	IF_2
0x4000821	    0x80bf24030000	               cmp byte [rdi + 0x324], 0	       940	mac.c	FUNCTION_22	IF_1	IF_2
0x4000828	           0xf45d0	                         cmovne edx, eax	       940	mac.c	FUNCTION_22	IF_1	IF_2
0x400082b	          0x4889df	                            mov rdi, rbx	       944	mac.c	FUNCTION_22
0x400082e	      0xbe60210000	                         mov esi, 0x2160	       944	mac.c	FUNCTION_22
0x4000833	      0xe800000000	                          call 0x4000838	       944	mac.c	FUNCTION_22
0x4000838	            0x89ea	                            mov edx, ebp	       945	mac.c	FUNCTION_22
0x400083a	          0x4889df	                            mov rdi, rbx	       945	mac.c	FUNCTION_22
0x400083d	      0xbe68210000	                         mov esi, 0x2168	       945	mac.c	FUNCTION_22
0x4000842	      0xe800000000	                          call 0x4000847	       945	mac.c	FUNCTION_22
0x4000847	            0x31c0	                            xor eax, eax	       948	mac.c	FUNCTION_22
0x4000849	              0x5b	                                 pop rbx	       948	mac.c	FUNCTION_22
0x400084a	              0x5d	                                 pop rbp	       948	mac.c	FUNCTION_22
0x400084b	              0xc3	                                     ret	       948	mac.c	FUNCTION_22
0x400084c	            0x31ed	                            xor ebp, ebp	       925	mac.c	FUNCTION_22
0x400084e	            0x31d2	                            xor edx, edx	       925	mac.c	FUNCTION_22
0x4000850	            0xebd9	                           jmp 0x400082b	       925	mac.c	FUNCTION_22
e1000e_get_speed_and_duplex_fiber_serdes	ELSE,0:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,0:IF,0:DO,0	6
0x4001010	      0xb8e8030000	                          mov eax, 0x3e8	      1361	mac.c	FUNCTION_26
0x4001015	      0xb902000000	                              mov ecx, 2	      1362	mac.c	FUNCTION_26
0x400101a	          0x668906	                      mov word [rsi], ax	      1361	mac.c	FUNCTION_26
0x400101d	          0x66890a	                      mov word [rdx], cx	      1362	mac.c	FUNCTION_26
0x4001020	            0x31c0	                            xor eax, eax	      1365	mac.c	FUNCTION_26
0x4001022	              0xc3	                                     ret	      1365	mac.c	FUNCTION_26
