__cfg80211_port_authorized	IF,2:ELSE,0:FOR,0:CALL,6:SWITCH,0:WHILE,0:functions,0:DO,0	26
0x40015a0	        0x837f0802	                  cmp dword [rdi + 8], 2	       971	sme.c	FUNCTION_24	IF_1	CALL_1
0x40015a4	          0x4889f2	                            mov rdx, rsi	       968	sme.c	FUNCTION_24
0x40015a7	            0x753e	                           jne 0x40015e7	       971	sme.c	FUNCTION_24	IF_1	CALL_1
0x40015a9	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	       974	sme.c	FUNCTION_24	IF_2	CALL_2
0x40015b0	          0x4885c0	                           test rax, rax	       974	sme.c	FUNCTION_24	IF_2	CALL_2
0x40015b3	            0x7435	                            je 0x40015ea	       974	sme.c	FUNCTION_24	IF_2	CALL_2
0x40015b5	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	       975	sme.c	FUNCTION_24	IF_2	CALL_4
0x40015bb	     0xfb780a40000	           movzx eax, word [rax + 0xa4] 	       975	sme.c	FUNCTION_24	IF_2	CALL_4
0x40015c2	        0x66334604	                  xor ax, word [rsi + 4]	       975	sme.c	FUNCTION_24	IF_2	CALL_4
0x40015c6	            0x330e	                    xor ecx, dword [rsi]	       975	sme.c	FUNCTION_24	IF_2	CALL_4
0x40015c8	           0xfb7c0	                           movzx eax, ax	       975	sme.c	FUNCTION_24	IF_2	CALL_4
0x40015cb	             0x9c1	                             or ecx, eax	       975	sme.c	FUNCTION_24	IF_2	CALL_4
0x40015cd	            0x751e	                           jne 0x40015ed	       975	sme.c	FUNCTION_24	IF_2	CALL_4
0x40015cf	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	       978	sme.c	FUNCTION_24	CALL_6
0x40015d3	          0x488b3f	                    mov rdi, qword [rdi]	       978	sme.c	FUNCTION_24	CALL_6
0x40015d6	          0x4885ff	                           test rdi, rdi	       112	core.h	FUNCTION_31	CALL_1
0x40015d9	            0x7415	                            je 0x40015f0	       112	core.h	FUNCTION_31	CALL_1
0x40015db	    0x4881efe00200	                          sub rdi, 0x2e0	       978	sme.c	FUNCTION_24	CALL_6
0x40015e2	      0xe900000000	                           jmp 0x40015e7	       978	sme.c	FUNCTION_24	CALL_6
0x40015e7	             0xf0b	                                     ud2	       978	sme.c	FUNCTION_24	CALL_6
0x40015e9	              0xc3	                                     ret	       971	sme.c	FUNCTION_24	IF_1	CALL_1
0x40015ea	             0xf0b	                                     ud2	       971	sme.c	FUNCTION_24	IF_1	CALL_1
0x40015ec	              0xc3	                                     ret	       974	sme.c	FUNCTION_24	IF_2	CALL_2
0x40015ed	             0xf0b	                                     ud2	       974	sme.c	FUNCTION_24	IF_2	CALL_2
0x40015ef	              0xc3	                                     ret	       975	sme.c	FUNCTION_24	IF_2	CALL_4
0x40015f0	             0xf0b	                                     ud2	       975	sme.c	FUNCTION_24	IF_2	CALL_4
cfg80211_autodisconnect_wk	IF,2:ELSE,1:FOR,0:CALL,9:SWITCH,1:WHILE,0:functions,0:DO,0	70
0x40022e0	            0x4154	                                push r12	      1234	sme.c	FUNCTION_30
0x40022e2	              0x55	                                push rbp	      1234	sme.c	FUNCTION_30
0x40022e3	              0x53	                                push rbx	      1234	sme.c	FUNCTION_30
0x40022e4	    0x4c8ba750ffff	             mov r12, qword [rdi - 0xb0]	      1237	sme.c	FUNCTION_30	CALL_2
0x40022eb	          0x4d85e4	                           test r12, r12	       112	core.h	FUNCTION_31	CALL_1
0x40022ee	     0xf84eb000000	                            je 0x40023df	       112	core.h	FUNCTION_31	CALL_1
0x40022f4	        0x488d6f98	                   lea rbp, [rdi - 0x68]	       193	core.h	FUNCTION_36	CALL_1
0x40022f8	          0x4889fb	                            mov rbx, rdi	       193	core.h	FUNCTION_36	CALL_1
0x40022fb	          0x4889ef	                            mov rdi, rbp	       193	core.h	FUNCTION_36	CALL_1
0x40022fe	      0xe800000000	                          call 0x4002303	       193	core.h	FUNCTION_36	CALL_1
0x4002303	          0x8b53fc	                mov edx, dword [rbx - 4]	      1241	sme.c	FUNCTION_30	IF_1
0x4002306	            0x85d2	                           test edx, edx	      1241	sme.c	FUNCTION_30	IF_1
0x4002308	            0x7449	                            je 0x4002353	      1241	sme.c	FUNCTION_30	IF_1
0x400230a	    0x83bb58ffffff	               cmp dword [rbx - 0xa8], 9	      1242	sme.c	FUNCTION_30	IF_1	SWITCH_1
0x4002311	    0x498dbc2420fd	                  lea rdi, [r12 - 0x2e0]	       113	core.h	FUNCTION_31	CALL_2
0x4002319	            0x7738	                            ja 0x4002353	      1242	sme.c	FUNCTION_30	IF_1	SWITCH_1
0x400231b	    0x8b8358ffffff	             mov eax, dword [rbx - 0xa8]	      1242	sme.c	FUNCTION_30	IF_1	SWITCH_1
0x4002321	    0x488b04c50000	                  mov rax, qword [rax*8]	      1242	sme.c	FUNCTION_30	IF_1	SWITCH_1
0x4002329	      0xe900000000	                           jmp 0x400232e	      1242	sme.c	FUNCTION_30	IF_1	SWITCH_1
0x400232e	      0x48837b4000	               cmp qword [rbx + 0x40], 0	      1260	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2
0x4002333	            0x756e	                           jne 0x40023a3	      1260	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2
0x4002335	    0x488bb370ffff	             mov rsi, qword [rbx - 0x90]	      1265	sme.c	FUNCTION_30	IF_1	SWITCH_1	ELSE_1	CALL_8
0x400233c	        0x488d5320	                   lea rdx, [rbx + 0x20]	      1266	sme.c	FUNCTION_30	IF_1	SWITCH_1	ELSE_1
0x4002340	            0x6a00	                                  push 0	      1265	sme.c	FUNCTION_30	IF_1	SWITCH_1	ELSE_1	CALL_8
0x4002342	    0x41b903000000	                              mov r9d, 3	      1265	sme.c	FUNCTION_30	IF_1	SWITCH_1	ELSE_1	CALL_8
0x4002348	          0x4531c0	                            xor r8d, r8d	      1265	sme.c	FUNCTION_30	IF_1	SWITCH_1	ELSE_1	CALL_8
0x400234b	            0x31c9	                            xor ecx, ecx	      1265	sme.c	FUNCTION_30	IF_1	SWITCH_1	ELSE_1	CALL_8
0x400234d	      0xe800000000	                          call 0x4002352	      1265	sme.c	FUNCTION_30	IF_1	SWITCH_1	ELSE_1	CALL_8
0x4002352	              0x58	                                 pop rax	      1265	sme.c	FUNCTION_30	IF_1	SWITCH_1	ELSE_1	CALL_8
0x4002353	              0x5b	                                 pop rbx	      1277	sme.c	FUNCTION_30
0x4002354	          0x4889ef	                            mov rdi, rbp	       201	core.h	FUNCTION_37	CALL_2
0x4002357	              0x5d	                                 pop rbp	      1277	sme.c	FUNCTION_30
0x4002358	            0x415c	                                 pop r12	      1277	sme.c	FUNCTION_30
0x400235a	      0xe900000000	                           jmp 0x400235f	       201	core.h	FUNCTION_37	CALL_2
0x400235f	    0x488bb370ffff	             mov rsi, qword [rbx - 0x90]	      1251	sme.c	FUNCTION_30	IF_1	SWITCH_1	CALL_6
0x4002366	      0xe800000000	                          call 0x400236b	      1251	sme.c	FUNCTION_30	IF_1	SWITCH_1	CALL_6
0x400236b	          0x4889ef	                            mov rdi, rbp	       201	core.h	FUNCTION_37	CALL_2
0x400236e	              0x5b	                                 pop rbx	      1277	sme.c	FUNCTION_30
0x400236f	              0x5d	                                 pop rbp	      1277	sme.c	FUNCTION_30
0x4002370	            0x415c	                                 pop r12	      1277	sme.c	FUNCTION_30
0x4002372	      0xe900000000	                           jmp 0x4002377	       201	core.h	FUNCTION_37	CALL_2
0x4002377	    0x488bb370ffff	             mov rsi, qword [rbx - 0x90]	      1248	sme.c	FUNCTION_30	IF_1	SWITCH_1	CALL_5
0x400237e	            0x31d2	                            xor edx, edx	      1248	sme.c	FUNCTION_30	IF_1	SWITCH_1	CALL_5
0x4002380	      0xe800000000	                          call 0x4002385	      1248	sme.c	FUNCTION_30	IF_1	SWITCH_1	CALL_5
0x4002385	          0x4889ef	                            mov rdi, rbp	       201	core.h	FUNCTION_37	CALL_2
0x4002388	              0x5b	                                 pop rbx	      1277	sme.c	FUNCTION_30
0x4002389	              0x5d	                                 pop rbp	      1277	sme.c	FUNCTION_30
0x400238a	            0x415c	                                 pop r12	      1277	sme.c	FUNCTION_30
0x400238c	      0xe900000000	                           jmp 0x4002391	       201	core.h	FUNCTION_37	CALL_2
0x4002391	    0x498b842420fd	            mov rax, qword [r12 - 0x2e0]	      1260	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2
0x4002399	    0x4883b8600100	              cmp qword [rax + 0x160], 0	      1260	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2
0x40023a1	            0x748b	                            je 0x400232e	      1260	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2
0x40023a3	    0x488bb370ffff	             mov rsi, qword [rbx - 0x90]	      1261	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2	CALL_7
0x40023aa	      0xb901000000	                              mov ecx, 1	      1261	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2	CALL_7
0x40023af	      0xba03000000	                              mov edx, 3	      1261	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2	CALL_7
0x40023b4	      0xe800000000	                          call 0x40023b9	      1261	sme.c	FUNCTION_30	IF_1	SWITCH_1	IF_2	CALL_7
0x40023b9	          0x4889ef	                            mov rdi, rbp	       201	core.h	FUNCTION_37	CALL_2
0x40023bc	              0x5b	                                 pop rbx	      1277	sme.c	FUNCTION_30
0x40023bd	              0x5d	                                 pop rbp	      1277	sme.c	FUNCTION_30
0x40023be	            0x415c	                                 pop r12	      1277	sme.c	FUNCTION_30
0x40023c0	      0xe900000000	                           jmp 0x40023c5	       201	core.h	FUNCTION_37	CALL_2
0x40023c5	    0x488bb370ffff	             mov rsi, qword [rbx - 0x90]	      1244	sme.c	FUNCTION_30	IF_1	SWITCH_1	CALL_4
0x40023cc	            0x31d2	                            xor edx, edx	      1244	sme.c	FUNCTION_30	IF_1	SWITCH_1	CALL_4
0x40023ce	      0xe800000000	                          call 0x40023d3	      1244	sme.c	FUNCTION_30	IF_1	SWITCH_1	CALL_4
0x40023d3	          0x4889ef	                            mov rdi, rbp	       201	core.h	FUNCTION_37	CALL_2
0x40023d6	              0x5b	                                 pop rbx	      1277	sme.c	FUNCTION_30
0x40023d7	              0x5d	                                 pop rbp	      1277	sme.c	FUNCTION_30
0x40023d8	            0x415c	                                 pop r12	      1277	sme.c	FUNCTION_30
0x40023da	      0xe900000000	                           jmp 0x40023df	       201	core.h	FUNCTION_37	CALL_2
0x40023df	             0xf0b	                                     ud2	       201	core.h	FUNCTION_37	CALL_2
cfg80211_sme_deauth	IF,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0	2
0x4000f30	    0x4881c7980000	                           add rdi, 0x98	       410	sme.c	FUNCTION_10
0x4000f37	      0xe9c4f1ffff	        jmp sym.cfg80211_sme_free.isra.6	       411	sme.c	FUNCTION_10	CALL_1
disconnect_work	IF,1:ELSE,0:FOR,0:CALL,4:SWITCH,0:WHILE,0:functions,0:DO,0	55
0x4000040	            0x4157	                                push r15	       659	sme.c	FUNCTION_19
0x4000042	            0x4156	                                push r14	       659	sme.c	FUNCTION_19
0x4000044	            0x4155	                                push r13	       659	sme.c	FUNCTION_19
0x4000046	            0x4154	                                push r12	       659	sme.c	FUNCTION_19
0x4000048	              0x55	                                push rbp	       659	sme.c	FUNCTION_19
0x4000049	              0x53	                                push rbx	       659	sme.c	FUNCTION_19
0x400004a	      0xe800000000	                          call 0x400004f	       660	sme.c	FUNCTION_19	CALL_1
0x400004f	    0x488b05000000	            mov rax, qword [0x04000056] 	       646	sme.c	FUNCTION_18	FUNCTION_1
0x4000056	    0x483d00000000	                              cmp rax, 0	       646	sme.c	FUNCTION_18	FUNCTION_1
0x400005c	     0xf8486000000	                            je 0x40000e8	       646	sme.c	FUNCTION_18	FUNCTION_1
0x4000062	        0x4c8d68f8	                      lea r13, [rax - 8]	       646	sme.c	FUNCTION_18	FUNCTION_1
0x4000066	    0x41bc01000000	                             mov r12d, 1	       646	sme.c	FUNCTION_18	FUNCTION_1
0x400006c	          0x4531f6	                          xor r14d, r14d	       646	sme.c	FUNCTION_18	FUNCTION_1
0x400006f	    0x498b85f00600	           mov rax, qword [r13 + 0x6f0] 	       647	sme.c	FUNCTION_18	FUNCTION_1
0x4000076	    0x498dadf00600	                  lea rbp, [r13 + 0x6f0]	       647	sme.c	FUNCTION_18	FUNCTION_1
0x400007d	          0x4839c5	                            cmp rbp, rax	       647	sme.c	FUNCTION_18	FUNCTION_1
0x4000080	        0x488d58f0	                   lea rbx, [rax - 0x10]	       647	sme.c	FUNCTION_18	FUNCTION_1
0x4000084	            0x751a	                           jne 0x40000a0	       647	sme.c	FUNCTION_18	FUNCTION_1
0x4000086	            0xeb3c	                           jmp 0x40000c4	       647	sme.c	FUNCTION_18	FUNCTION_1
0x4000088	          0x4531e4	                          xor r12d, r12d	       650	sme.c	FUNCTION_18	IF_1
0x400008b	          0x4c89ff	                            mov rdi, r15	       201	core.h	FUNCTION_37	CALL_2
0x400008e	      0xe800000000	                          call 0x4000093	       201	core.h	FUNCTION_37	CALL_2
0x4000093	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       647	sme.c	FUNCTION_18	FUNCTION_1
0x4000097	          0x4839c5	                            cmp rbp, rax	       647	sme.c	FUNCTION_18	FUNCTION_1
0x400009a	        0x488d58f0	                   lea rbx, [rax - 0x10]	       647	sme.c	FUNCTION_18	FUNCTION_1
0x400009e	            0x7424	                            je 0x40000c4	       647	sme.c	FUNCTION_18	FUNCTION_1
0x40000a0	        0x4c8d7b48	                   lea r15, [rbx + 0x48]	       193	core.h	FUNCTION_36	CALL_1
0x40000a4	          0x4c89ff	                            mov rdi, r15	       193	core.h	FUNCTION_36	CALL_1
0x40000a7	      0xe800000000	                          call 0x40000ac	       193	core.h	FUNCTION_36	CALL_1
0x40000ac	    0x4883bb980000	               cmp qword [rbx + 0x98], 0	       649	sme.c	FUNCTION_18	IF_1
0x40000b4	            0x75d2	                           jne 0x4000088	       649	sme.c	FUNCTION_18	IF_1
0x40000b6	    0x4883bbf00000	               cmp qword [rbx + 0xf0], 0	       650	sme.c	FUNCTION_18	IF_1
0x40000be	        0x450f45e6	                       cmovne r12d, r14d	       650	sme.c	FUNCTION_18	IF_1
0x40000c2	            0xebc7	                           jmp 0x400008b	       650	sme.c	FUNCTION_18	IF_1
0x40000c4	        0x498b4508	                mov rax, qword [r13 + 8]	       646	sme.c	FUNCTION_18	FUNCTION_1
0x40000c8	    0x483d00000000	                              cmp rax, 0	       646	sme.c	FUNCTION_18	FUNCTION_1
0x40000ce	        0x4c8d68f8	                      lea r13, [rax - 8]	       646	sme.c	FUNCTION_18	FUNCTION_1
0x40000d2	            0x759b	                           jne 0x400006f	       646	sme.c	FUNCTION_18	FUNCTION_1
0x40000d4	          0x4584e4	                         test r12b, r12b	       661	sme.c	FUNCTION_19	IF_1	CALL_2
0x40000d7	            0x750f	                           jne 0x40000e8	       661	sme.c	FUNCTION_19	IF_1	CALL_2
0x40000d9	              0x5b	                                 pop rbx	       664	sme.c	FUNCTION_19
0x40000da	              0x5d	                                 pop rbp	       664	sme.c	FUNCTION_19
0x40000db	            0x415c	                                 pop r12	       664	sme.c	FUNCTION_19
0x40000dd	            0x415d	                                 pop r13	       664	sme.c	FUNCTION_19
0x40000df	            0x415e	                                 pop r14	       664	sme.c	FUNCTION_19
0x40000e1	            0x415f	                                 pop r15	       664	sme.c	FUNCTION_19
0x40000e3	      0xe900000000	                           jmp 0x40000e8	       663	sme.c	FUNCTION_19	CALL_4
0x40000e8	      0xe800000000	                          call 0x40000ed	       662	sme.c	FUNCTION_19	CALL_3
0x40000ed	              0x5b	                                 pop rbx	       664	sme.c	FUNCTION_19
0x40000ee	              0x5d	                                 pop rbp	       664	sme.c	FUNCTION_19
0x40000ef	            0x415c	                                 pop r12	       664	sme.c	FUNCTION_19
0x40000f1	            0x415d	                                 pop r13	       664	sme.c	FUNCTION_19
0x40000f3	            0x415e	                                 pop r14	       664	sme.c	FUNCTION_19
0x40000f5	            0x415f	                                 pop r15	       664	sme.c	FUNCTION_19
0x40000f7	      0xe900000000	                           jmp 0x40000fc	       663	sme.c	FUNCTION_19	CALL_4
cfg80211_conn_do_work	IF,5:ELSE,0:FOR,0:CALL,10:SWITCH,1:WHILE,0:functions,0:DO,0	185
0x4000600	            0x4155	                                push r13	       148	sme.c	FUNCTION_3
0x4000602	            0x4154	                                push r12	       148	sme.c	FUNCTION_3
0x4000604	              0x55	                                push rbp	       148	sme.c	FUNCTION_3
0x4000605	              0x53	                                push rbx	       148	sme.c	FUNCTION_3
0x4000606	    0x4881ece80000	                           sub rsp, 0xe8	       148	sme.c	FUNCTION_3
0x400060d	          0x488b17	                    mov rdx, qword [rdi]	       149	sme.c	FUNCTION_3	CALL_1
0x4000610	    0x65488b042528	                mov rax, qword gs:[0x28]	       148	sme.c	FUNCTION_3
0x4000619	    0x48898424e000	             mov qword [rsp + 0xe0], rax	       148	sme.c	FUNCTION_3
0x4000621	            0x31c0	                            xor eax, eax	       148	sme.c	FUNCTION_3
0x4000623	          0x4885d2	                           test rdx, rdx	       112	core.h	FUNCTION_31	CALL_1
0x4000626	     0xf8405030000	                            je 0x4000931	       112	core.h	FUNCTION_31	CALL_1
0x400062c	          0x4889fd	                            mov rbp, rdi	       112	core.h	FUNCTION_31	CALL_1
0x400062f	            0x31c0	                            xor eax, eax	       151	sme.c	FUNCTION_3
0x4000631	      0xb91c000000	                           mov ecx, 0x1c	       151	sme.c	FUNCTION_3
0x4000636	    0x488b9d980000	            mov rbx, qword [rbp + 0x98] 	       156	sme.c	FUNCTION_3	IF_1
0x400063d	          0x4889e7	                            mov rdi, rsp	       151	sme.c	FUNCTION_3
0x4000640	    0x4c8da220fdff	                  lea r12, [rdx - 0x2e0]	       113	core.h	FUNCTION_31	CALL_2
0x4000647	          0x4989e0	                             mov r8, rsp	       151	sme.c	FUNCTION_3
0x400064a	          0xf348ab	              rep stosq qword [rdi], rax	       151	sme.c	FUNCTION_3
0x400064d	          0x4885db	                           test rbx, rbx	       156	sme.c	FUNCTION_3	IF_1
0x4000650	            0x7446	                            je 0x4000698	       156	sme.c	FUNCTION_3	IF_1
0x4000652	    0x83bb58010000	           cmp dword [rbx + 0x158], 0xa 	       161	sme.c	FUNCTION_3	SWITCH_1
0x4000659	            0x773d	                            ja 0x4000698	       161	sme.c	FUNCTION_3	SWITCH_1
0x400065b	    0x8b8358010000	           mov eax, dword [rbx + 0x158] 	       161	sme.c	FUNCTION_3	SWITCH_1
0x4000661	    0x488b04c50000	                  mov rax, qword [rax*8]	       161	sme.c	FUNCTION_3	SWITCH_1
0x4000669	      0xe900000000	                           jmp 0x400066e	       161	sme.c	FUNCTION_3	SWITCH_1
0x400066e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x4000672	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x4000676	    0x41b903000000	                              mov r9d, 3	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x400067c	            0x6a00	                                  push 0	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x400067e	          0x4531c0	                            xor r8d, r8d	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x4000681	            0x31c9	                            xor ecx, ecx	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x4000683	          0x4c89e7	                            mov rdi, r12	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x4000686	      0xe800000000	                          call 0x400068b	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x400068b	              0x58	                                 pop rax	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x400068c	    0x488dbd980000	                   lea rdi, [rbp + 0x98]	       215	sme.c	FUNCTION_3	SWITCH_1	CALL_9
0x4000693	      0xe868faffff	       call sym.cfg80211_sme_free.isra.6	       221	sme.c	FUNCTION_3	SWITCH_1	CALL_10
0x4000698	            0x31c0	                            xor eax, eax	       222	sme.c	FUNCTION_3	SWITCH_1
0x400069a	    0x488b8c24e000	            mov rcx, qword [rsp + 0xe0] 	       226	sme.c	FUNCTION_3
0x40006a2	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       226	sme.c	FUNCTION_3
0x40006ab	     0xf859a020000	                           jne 0x400094b	       226	sme.c	FUNCTION_3
0x40006b1	    0x4881c4e80000	                           add rsp, 0xe8	       226	sme.c	FUNCTION_3
0x40006b8	              0x5b	                                 pop rbx	       226	sme.c	FUNCTION_3
0x40006b9	              0x5d	                                 pop rbp	       226	sme.c	FUNCTION_3
0x40006ba	            0x415c	                                 pop r12	       226	sme.c	FUNCTION_3
0x40006bc	            0x415d	                                 pop r13	       226	sme.c	FUNCTION_3
0x40006be	              0xc3	                                     ret	       226	sme.c	FUNCTION_3
0x40006bf	    0xc70603000000	                      mov dword [rsi], 3	       207	sme.c	FUNCTION_3	SWITCH_1
0x40006c5	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       210	sme.c	FUNCTION_3	SWITCH_1	CALL_8
0x40006c9	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	       210	sme.c	FUNCTION_3	SWITCH_1	CALL_8
0x40006cd	    0x41b903000000	                              mov r9d, 3	       210	sme.c	FUNCTION_3	SWITCH_1	CALL_8
0x40006d3	            0x6a00	                                  push 0	       210	sme.c	FUNCTION_3	SWITCH_1	CALL_8
0x40006d5	          0x4531c0	                            xor r8d, r8d	       210	sme.c	FUNCTION_3	SWITCH_1	CALL_8
0x40006d8	            0x31c9	                            xor ecx, ecx	       210	sme.c	FUNCTION_3	SWITCH_1	CALL_8
0x40006da	          0x4c89e7	                            mov rdi, r12	       210	sme.c	FUNCTION_3	SWITCH_1	CALL_8
0x40006dd	      0xe800000000	                          call 0x40006e2	       210	sme.c	FUNCTION_3	SWITCH_1	CALL_8
0x40006e2	      0xb895ffffff	                     mov eax, 0xffffff95	       213	sme.c	FUNCTION_3	SWITCH_1
0x40006e7	              0x5a	                                 pop rdx	       213	sme.c	FUNCTION_3	SWITCH_1
0x40006e8	            0xebb0	                           jmp 0x400069a	       213	sme.c	FUNCTION_3	SWITCH_1
0x40006ea	      0xb8feffffff	                     mov eax, 0xfffffffe	       164	sme.c	FUNCTION_3	SWITCH_1
0x40006ef	            0xeba9	                           jmp 0x400069a	       164	sme.c	FUNCTION_3	SWITCH_1
0x40006f1	          0x4889ef	                            mov rdi, rbp	       166	sme.c	FUNCTION_3	SWITCH_1	CALL_2
0x40006f4	      0xe8d7fbffff	             call sym.cfg80211_conn_scan	       166	sme.c	FUNCTION_3	SWITCH_1	CALL_2
0x40006f9	            0xeb9f	                           jmp 0x400069a	       166	sme.c	FUNCTION_3	SWITCH_1	CALL_2
0x40006fb	    0x488b8220fdff	            mov rax, qword [rdx - 0x2e0]	       182	sme.c	FUNCTION_3	SWITCH_1	IF_3	CALL_5
0x4000702	    0x4883b8380100	              cmp qword [rax + 0x138], 0	       182	sme.c	FUNCTION_3	SWITCH_1	IF_3	CALL_5
0x400070a	     0xf842f020000	                            je 0x400093f	       182	sme.c	FUNCTION_3	SWITCH_1	IF_3	CALL_5
0x4000710	    0xc78358010000	              mov dword [rbx + 0x158], 6	       184	sme.c	FUNCTION_3	SWITCH_1
0x400071a	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	       185	sme.c	FUNCTION_3	SWITCH_1	IF_4
0x4000721	    0x80b879010000	               cmp byte [rax + 0x179], 0	       185	sme.c	FUNCTION_3	SWITCH_1	IF_4
0x4000728	            0x740b	                            je 0x4000735	       185	sme.c	FUNCTION_3	SWITCH_1	IF_4
0x400072a	    0x480562010000	                          add rax, 0x162	       186	sme.c	FUNCTION_3	SWITCH_1	IF_4
0x4000730	      0x4889442410	             mov qword [rsp + 0x10], rax	       186	sme.c	FUNCTION_3	SWITCH_1	IF_4
0x4000735	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       187	sme.c	FUNCTION_3	SWITCH_1
0x4000739	          0x8b734c	            mov esi, dword [rbx + 0x4c] 	       189	sme.c	FUNCTION_3	SWITCH_1
0x400073c	          0x4c89e7	                            mov rdi, r12	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x400073f	      0x4889442408	                mov qword [rsp + 8], rax	       187	sme.c	FUNCTION_3	SWITCH_1
0x4000744	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       188	sme.c	FUNCTION_3	SWITCH_1
0x4000748	            0x85f6	                           test esi, esi	       189	sme.c	FUNCTION_3	SWITCH_1
0x400074a	       0xf95442470	                 setne byte [rsp + 0x70]	       189	sme.c	FUNCTION_3	SWITCH_1
0x400074f	      0x4889442418	             mov qword [rsp + 0x18], rax	       188	sme.c	FUNCTION_3	SWITCH_1
0x4000754	        0x488b4350	            mov rax, qword [rbx + 0x50] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000758	      0x4889442420	             mov qword [rsp + 0x20], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x400075d	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000761	      0x4889442428	             mov qword [rsp + 0x28], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000766	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x400076a	      0x4889442430	             mov qword [rsp + 0x30], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x400076f	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000773	      0x4889442438	             mov qword [rsp + 0x38], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000778	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x400077c	      0x4889442440	             mov qword [rsp + 0x40], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000781	        0x488b4378	            mov rax, qword [rbx + 0x78] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000785	      0x4889442448	             mov qword [rsp + 0x48], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x400078a	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000791	      0x4889442450	             mov qword [rsp + 0x50], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x4000796	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x400079d	      0x4889442458	             mov qword [rsp + 0x58], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x40007a2	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x40007a9	      0x4889442460	             mov qword [rsp + 0x60], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x40007ae	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	       190	sme.c	FUNCTION_3	SWITCH_1
0x40007b5	      0x4889442468	             mov qword [rsp + 0x68], rax	       190	sme.c	FUNCTION_3	SWITCH_1
0x40007ba	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	       191	sme.c	FUNCTION_3	SWITCH_1
0x40007c0	        0x89442474	             mov dword [rsp + 0x74], eax	       191	sme.c	FUNCTION_3	SWITCH_1
0x40007c4	    0x488b83b40000	            mov rax, qword [rbx + 0xb4] 	       192	sme.c	FUNCTION_3	SWITCH_1
0x40007cb	      0x4889442478	             mov qword [rsp + 0x78], rax	       192	sme.c	FUNCTION_3	SWITCH_1
0x40007d0	    0x488b83bc0000	            mov rax, qword [rbx + 0xbc] 	       192	sme.c	FUNCTION_3	SWITCH_1
0x40007d7	    0x488984248000	             mov qword [rsp + 0x80], rax	       192	sme.c	FUNCTION_3	SWITCH_1
0x40007df	    0x488b83c40000	            mov rax, qword [rbx + 0xc4] 	       192	sme.c	FUNCTION_3	SWITCH_1
0x40007e6	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x40007ea	    0x488984248800	             mov qword [rsp + 0x88], rax	       192	sme.c	FUNCTION_3	SWITCH_1
0x40007f2	     0xfb783cc0000	           movzx eax, word [rbx + 0xcc] 	       192	sme.c	FUNCTION_3	SWITCH_1
0x40007f9	    0x668984249000	               mov word [rsp + 0x90], ax	       192	sme.c	FUNCTION_3	SWITCH_1
0x4000801	    0x488b83ce0000	            mov rax, qword [rbx + 0xce] 	       193	sme.c	FUNCTION_3	SWITCH_1
0x4000808	    0x488984249200	             mov qword [rsp + 0x92], rax	       193	sme.c	FUNCTION_3	SWITCH_1
0x4000810	    0x488b83d60000	            mov rax, qword [rbx + 0xd6] 	       193	sme.c	FUNCTION_3	SWITCH_1
0x4000817	    0x488984249a00	             mov qword [rsp + 0x9a], rax	       193	sme.c	FUNCTION_3	SWITCH_1
0x400081f	    0x488b83de0000	            mov rax, qword [rbx + 0xde] 	       193	sme.c	FUNCTION_3	SWITCH_1
0x4000826	    0x48898424a200	             mov qword [rsp + 0xa2], rax	       193	sme.c	FUNCTION_3	SWITCH_1
0x400082e	     0xfb783e60000	           movzx eax, word [rbx + 0xe6] 	       193	sme.c	FUNCTION_3	SWITCH_1
0x4000835	    0x66898424aa00	               mov word [rsp + 0xaa], ax	       193	sme.c	FUNCTION_3	SWITCH_1
0x400083d	    0x488b83e80000	            mov rax, qword [rbx + 0xe8] 	       194	sme.c	FUNCTION_3	SWITCH_1
0x4000844	    0x48898424ac00	             mov qword [rsp + 0xac], rax	       194	sme.c	FUNCTION_3	SWITCH_1
0x400084c	    0x8b83f0000000	            mov eax, dword [rbx + 0xf0] 	       194	sme.c	FUNCTION_3	SWITCH_1
0x4000852	    0x898424b40000	             mov dword [rsp + 0xb4], eax	       194	sme.c	FUNCTION_3	SWITCH_1
0x4000859	    0x488b83f40000	            mov rax, qword [rbx + 0xf4] 	       195	sme.c	FUNCTION_3	SWITCH_1
0x4000860	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       195	sme.c	FUNCTION_3	SWITCH_1
0x4000868	    0x8b83fc000000	            mov eax, dword [rbx + 0xfc] 	       195	sme.c	FUNCTION_3	SWITCH_1
0x400086e	    0x898424c00000	             mov dword [rsp + 0xc0], eax	       195	sme.c	FUNCTION_3	SWITCH_1
0x4000875	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000879	            0x4150	                                 push r8	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x400087b	        0x448b4b28	            mov r9d, dword [rbx + 0x28] 	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x400087f	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000883	          0x488b13	                    mov rdx, qword [rbx]	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000886	      0xe800000000	                          call 0x400088b	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x400088b	          0x4189c5	                           mov r13d, eax	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x400088e	            0x31c0	                            xor eax, eax	       197	sme.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000890	          0x4585ed	                         test r13d, r13d	       200	sme.c	FUNCTION_3	SWITCH_1	IF_5
0x4000893	              0x5f	                                 pop rdi	       200	sme.c	FUNCTION_3	SWITCH_1	IF_5
0x4000894	     0xf8400feffff	                            je 0x400069a	       200	sme.c	FUNCTION_3	SWITCH_1	IF_5
0x400089a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x400089e	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008a2	            0x31c9	                            xor ecx, ecx	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008a4	            0x6a00	                                  push 0	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008a6	    0x41b903000000	                              mov r9d, 3	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008ac	          0x4531c0	                            xor r8d, r8d	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008af	          0x4c89e7	                            mov rdi, r12	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008b2	      0xe800000000	                          call 0x40008b7	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008b7	          0x4489e8	                           mov eax, r13d	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008ba	              0x59	                                 pop rcx	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008bb	      0xe9dafdffff	                           jmp 0x400069a	       201	sme.c	FUNCTION_3	SWITCH_1	IF_5	CALL_7
0x40008c0	    0x488b8220fdff	            mov rax, qword [rdx - 0x2e0]	       168	sme.c	FUNCTION_3	SWITCH_1	IF_2	CALL_3
0x40008c7	    0x4883b8300100	              cmp qword [rax + 0x130], 0	       168	sme.c	FUNCTION_3	SWITCH_1	IF_2	CALL_3
0x40008cf	            0x7462	                            je 0x4000933	       168	sme.c	FUNCTION_3	SWITCH_1	IF_2	CALL_3
0x40008d1	    0xc78358010000	              mov dword [rbx + 0x158], 3	       170	sme.c	FUNCTION_3	SWITCH_1
0x40008db	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008de	          0x4c89e7	                            mov rdi, r12	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008e1	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008e5	            0x6a00	                                  push 0	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008e7	            0x6a00	                                  push 0	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008e9	     0xfb683a90000	           movzx eax, byte [rbx + 0xa9] 	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008f0	              0x50	                                push rax	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008f1	     0xfb683a80000	           movzx eax, byte [rbx + 0xa8] 	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008f8	              0x50	                                push rax	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008f9	    0xffb3a0000000	                 push qword [rbx + 0xa0]	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x40008ff	            0x6a00	                                  push 0	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000901	            0x6a00	                                  push 0	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000903	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000907	              0x50	                                push rax	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000908	        0x4c8b4b20	              mov r9, qword [rbx + 0x20]	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x400090c	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000910	          0x488b13	                    mov rdx, qword [rbx]	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000913	      0xe800000000	                          call 0x4000918	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000918	        0x4883c440	                           add rsp, 0x40	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x400091c	      0xe979fdffff	                           jmp 0x400069a	       171	sme.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000921	    0xc70602000000	                      mov dword [rsi], 2	       179	sme.c	FUNCTION_3	SWITCH_1
0x4000927	      0xb895ffffff	                     mov eax, 0xffffff95	       180	sme.c	FUNCTION_3	SWITCH_1
0x400092c	      0xe969fdffff	                           jmp 0x400069a	       180	sme.c	FUNCTION_3	SWITCH_1
0x4000931	             0xf0b	                                     ud2	       180	sme.c	FUNCTION_3	SWITCH_1
0x4000933	             0xf0b	                                     ud2	       112	core.h	FUNCTION_31	CALL_1
0x4000935	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       169	sme.c	FUNCTION_3	SWITCH_1	IF_2
0x400093a	      0xe95bfdffff	                           jmp 0x400069a	       169	sme.c	FUNCTION_3	SWITCH_1	IF_2
0x400093f	             0xf0b	                                     ud2	       169	sme.c	FUNCTION_3	SWITCH_1	IF_2
0x4000941	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       183	sme.c	FUNCTION_3	SWITCH_1	IF_3
0x4000946	      0xe94ffdffff	                           jmp 0x400069a	       183	sme.c	FUNCTION_3	SWITCH_1	IF_3
0x400094b	      0xe800000000	          call sym.cfg80211_disconnected	       226	sme.c	FUNCTION_3
