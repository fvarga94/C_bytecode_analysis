pm_generic_restore_early	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x40003a0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       269	generic_ops.c	FUNCTION_20
0x40003a7	          0x4885c0	                           test rax, rax	       269	generic_ops.c	FUNCTION_20
0x40003aa	            0x7417	                            je 0x40003c3	       269	generic_ops.c	FUNCTION_20
0x40003ac	        0x488b4068	            mov rax, qword [rax + 0x68] 	       269	generic_ops.c	FUNCTION_20
0x40003b0	          0x4885c0	                           test rax, rax	       271	generic_ops.c	FUNCTION_20	CALL_1
0x40003b3	            0x740e	                            je 0x40003c3	       271	generic_ops.c	FUNCTION_20	CALL_1
0x40003b5	        0x488b4068	            mov rax, qword [rax + 0x68] 	       271	generic_ops.c	FUNCTION_20	CALL_1
0x40003b9	          0x4885c0	                           test rax, rax	       271	generic_ops.c	FUNCTION_20	CALL_1
0x40003bc	            0x7405	                            je 0x40003c3	       271	generic_ops.c	FUNCTION_20	CALL_1
0x40003be	      0xe900000000	                           jmp 0x40003c3	       271	generic_ops.c	FUNCTION_20	CALL_1
0x40003c3	            0x31c0	                            xor eax, eax	       272	generic_ops.c	FUNCTION_20
0x40003c5	              0xc3	                                     ret	       272	generic_ops.c	FUNCTION_20
pm_generic_thaw_noirq	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000250	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       185	generic_ops.c	FUNCTION_13
0x4000257	          0x4885c0	                           test rax, rax	       185	generic_ops.c	FUNCTION_13
0x400025a	            0x741a	                            je 0x4000276	       185	generic_ops.c	FUNCTION_13
0x400025c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       185	generic_ops.c	FUNCTION_13
0x4000260	          0x4885c0	                           test rax, rax	       187	generic_ops.c	FUNCTION_13	CALL_1
0x4000263	            0x7411	                            je 0x4000276	       187	generic_ops.c	FUNCTION_13	CALL_1
0x4000265	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       187	generic_ops.c	FUNCTION_13	CALL_1
0x400026c	          0x4885c0	                           test rax, rax	       187	generic_ops.c	FUNCTION_13	CALL_1
0x400026f	            0x7405	                            je 0x4000276	       187	generic_ops.c	FUNCTION_13	CALL_1
0x4000271	      0xe900000000	                           jmp 0x4000276	       187	generic_ops.c	FUNCTION_13	CALL_1
0x4000276	            0x31c0	                            xor eax, eax	       188	generic_ops.c	FUNCTION_13
0x4000278	              0xc3	                                     ret	       188	generic_ops.c	FUNCTION_13
pm_generic_thaw	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x40002b0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       209	generic_ops.c	FUNCTION_15
0x40002b7	          0x4885c0	                           test rax, rax	       209	generic_ops.c	FUNCTION_15
0x40002ba	            0x7417	                            je 0x40002d3	       209	generic_ops.c	FUNCTION_15
0x40002bc	        0x488b4068	            mov rax, qword [rax + 0x68] 	       209	generic_ops.c	FUNCTION_15
0x40002c0	          0x4885c0	                           test rax, rax	       211	generic_ops.c	FUNCTION_15	CALL_1
0x40002c3	            0x740e	                            je 0x40002d3	       211	generic_ops.c	FUNCTION_15	CALL_1
0x40002c5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       211	generic_ops.c	FUNCTION_15	CALL_1
0x40002c9	          0x4885c0	                           test rax, rax	       211	generic_ops.c	FUNCTION_15	CALL_1
0x40002cc	            0x7405	                            je 0x40002d3	       211	generic_ops.c	FUNCTION_15	CALL_1
0x40002ce	      0xe900000000	                           jmp 0x40002d3	       211	generic_ops.c	FUNCTION_15	CALL_1
0x40002d3	            0x31c0	                            xor eax, eax	       212	generic_ops.c	FUNCTION_15
0x40002d5	              0xc3	                                     ret	       212	generic_ops.c	FUNCTION_15
pm_generic_restore	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x40003d0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       281	generic_ops.c	FUNCTION_21
0x40003d7	          0x4885c0	                           test rax, rax	       281	generic_ops.c	FUNCTION_21
0x40003da	            0x7417	                            je 0x40003f3	       281	generic_ops.c	FUNCTION_21
0x40003dc	        0x488b4068	            mov rax, qword [rax + 0x68] 	       281	generic_ops.c	FUNCTION_21
0x40003e0	          0x4885c0	                           test rax, rax	       283	generic_ops.c	FUNCTION_21	CALL_1
0x40003e3	            0x740e	                            je 0x40003f3	       283	generic_ops.c	FUNCTION_21	CALL_1
0x40003e5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       283	generic_ops.c	FUNCTION_21	CALL_1
0x40003e9	          0x4885c0	                           test rax, rax	       283	generic_ops.c	FUNCTION_21	CALL_1
0x40003ec	            0x7405	                            je 0x40003f3	       283	generic_ops.c	FUNCTION_21	CALL_1
0x40003ee	      0xe900000000	                           jmp 0x40003f3	       283	generic_ops.c	FUNCTION_21	CALL_1
0x40003f3	            0x31c0	                            xor eax, eax	       284	generic_ops.c	FUNCTION_21
0x40003f5	              0xc3	                                     ret	       284	generic_ops.c	FUNCTION_21
pm_generic_poweroff_noirq	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x40001c0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       149	generic_ops.c	FUNCTION_10
0x40001c7	          0x4885c0	                           test rax, rax	       149	generic_ops.c	FUNCTION_10
0x40001ca	            0x741a	                            je 0x40001e6	       149	generic_ops.c	FUNCTION_10
0x40001cc	        0x488b4068	            mov rax, qword [rax + 0x68] 	       149	generic_ops.c	FUNCTION_10
0x40001d0	          0x4885c0	                           test rax, rax	       151	generic_ops.c	FUNCTION_10	CALL_1
0x40001d3	            0x7411	                            je 0x40001e6	       151	generic_ops.c	FUNCTION_10	CALL_1
0x40001d5	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       151	generic_ops.c	FUNCTION_10	CALL_1
0x40001dc	          0x4885c0	                           test rax, rax	       151	generic_ops.c	FUNCTION_10	CALL_1
0x40001df	            0x7405	                            je 0x40001e6	       151	generic_ops.c	FUNCTION_10	CALL_1
0x40001e1	      0xe900000000	                           jmp 0x40001e6	       151	generic_ops.c	FUNCTION_10	CALL_1
0x40001e6	            0x31c0	                            xor eax, eax	       152	generic_ops.c	FUNCTION_10
0x40001e8	              0xc3	                                     ret	       152	generic_ops.c	FUNCTION_10
pm_generic_freeze_noirq	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000130	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       113	generic_ops.c	FUNCTION_7
0x4000137	          0x4885c0	                           test rax, rax	       113	generic_ops.c	FUNCTION_7
0x400013a	            0x741a	                            je 0x4000156	       113	generic_ops.c	FUNCTION_7
0x400013c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       113	generic_ops.c	FUNCTION_7
0x4000140	          0x4885c0	                           test rax, rax	       115	generic_ops.c	FUNCTION_7	CALL_1
0x4000143	            0x7411	                            je 0x4000156	       115	generic_ops.c	FUNCTION_7	CALL_1
0x4000145	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       115	generic_ops.c	FUNCTION_7	CALL_1
0x400014c	          0x4885c0	                           test rax, rax	       115	generic_ops.c	FUNCTION_7	CALL_1
0x400014f	            0x7405	                            je 0x4000156	       115	generic_ops.c	FUNCTION_7	CALL_1
0x4000151	      0xe900000000	                           jmp 0x4000156	       115	generic_ops.c	FUNCTION_7	CALL_1
0x4000156	            0x31c0	                            xor eax, eax	       116	generic_ops.c	FUNCTION_7
0x4000158	              0xc3	                                     ret	       116	generic_ops.c	FUNCTION_7
pm_generic_resume_early	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000310	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       233	generic_ops.c	FUNCTION_17
0x4000317	          0x4885c0	                           test rax, rax	       233	generic_ops.c	FUNCTION_17
0x400031a	            0x7417	                            je 0x4000333	       233	generic_ops.c	FUNCTION_17
0x400031c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       233	generic_ops.c	FUNCTION_17
0x4000320	          0x4885c0	                           test rax, rax	       235	generic_ops.c	FUNCTION_17	CALL_1
0x4000323	            0x740e	                            je 0x4000333	       235	generic_ops.c	FUNCTION_17	CALL_1
0x4000325	        0x488b4048	            mov rax, qword [rax + 0x48] 	       235	generic_ops.c	FUNCTION_17	CALL_1
0x4000329	          0x4885c0	                           test rax, rax	       235	generic_ops.c	FUNCTION_17	CALL_1
0x400032c	            0x7405	                            je 0x4000333	       235	generic_ops.c	FUNCTION_17	CALL_1
0x400032e	      0xe900000000	                           jmp 0x4000333	       235	generic_ops.c	FUNCTION_17	CALL_1
0x4000333	            0x31c0	                            xor eax, eax	       236	generic_ops.c	FUNCTION_17
0x4000335	              0xc3	                                     ret	       236	generic_ops.c	FUNCTION_17
pm_generic_suspend_noirq	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x40000a0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	        77	generic_ops.c	FUNCTION_4
0x40000a7	          0x4885c0	                           test rax, rax	        77	generic_ops.c	FUNCTION_4
0x40000aa	            0x7417	                            je 0x40000c3	        77	generic_ops.c	FUNCTION_4
0x40000ac	        0x488b4068	            mov rax, qword [rax + 0x68] 	        77	generic_ops.c	FUNCTION_4
0x40000b0	          0x4885c0	                           test rax, rax	        79	generic_ops.c	FUNCTION_4	CALL_1
0x40000b3	            0x740e	                            je 0x40000c3	        79	generic_ops.c	FUNCTION_4	CALL_1
0x40000b5	        0x488b4070	            mov rax, qword [rax + 0x70] 	        79	generic_ops.c	FUNCTION_4	CALL_1
0x40000b9	          0x4885c0	                           test rax, rax	        79	generic_ops.c	FUNCTION_4	CALL_1
0x40000bc	            0x7405	                            je 0x40000c3	        79	generic_ops.c	FUNCTION_4	CALL_1
0x40000be	      0xe900000000	                           jmp 0x40000c3	        79	generic_ops.c	FUNCTION_4	CALL_1
0x40000c3	            0x31c0	                            xor eax, eax	        80	generic_ops.c	FUNCTION_4
0x40000c5	              0xc3	                                     ret	        80	generic_ops.c	FUNCTION_4
pm_generic_resume_noirq	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x40002e0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       221	generic_ops.c	FUNCTION_16
0x40002e7	          0x4885c0	                           test rax, rax	       221	generic_ops.c	FUNCTION_16
0x40002ea	            0x7417	                            je 0x4000303	       221	generic_ops.c	FUNCTION_16
0x40002ec	        0x488b4068	            mov rax, qword [rax + 0x68] 	       221	generic_ops.c	FUNCTION_16
0x40002f0	          0x4885c0	                           test rax, rax	       223	generic_ops.c	FUNCTION_16	CALL_1
0x40002f3	            0x740e	                            je 0x4000303	       223	generic_ops.c	FUNCTION_16	CALL_1
0x40002f5	        0x488b4078	            mov rax, qword [rax + 0x78] 	       223	generic_ops.c	FUNCTION_16	CALL_1
0x40002f9	          0x4885c0	                           test rax, rax	       223	generic_ops.c	FUNCTION_16	CALL_1
0x40002fc	            0x7405	                            je 0x4000303	       223	generic_ops.c	FUNCTION_16	CALL_1
0x40002fe	      0xe900000000	                           jmp 0x4000303	       223	generic_ops.c	FUNCTION_16	CALL_1
0x4000303	            0x31c0	                            xor eax, eax	       224	generic_ops.c	FUNCTION_16
0x4000305	              0xc3	                                     ret	       224	generic_ops.c	FUNCTION_16
pm_generic_resume	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000340	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       245	generic_ops.c	FUNCTION_18
0x4000347	          0x4885c0	                           test rax, rax	       245	generic_ops.c	FUNCTION_18
0x400034a	            0x7417	                            je 0x4000363	       245	generic_ops.c	FUNCTION_18
0x400034c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       245	generic_ops.c	FUNCTION_18
0x4000350	          0x4885c0	                           test rax, rax	       247	generic_ops.c	FUNCTION_18	CALL_1
0x4000353	            0x740e	                            je 0x4000363	       247	generic_ops.c	FUNCTION_18	CALL_1
0x4000355	        0x488b4018	            mov rax, qword [rax + 0x18] 	       247	generic_ops.c	FUNCTION_18	CALL_1
0x4000359	          0x4885c0	                           test rax, rax	       247	generic_ops.c	FUNCTION_18	CALL_1
0x400035c	            0x7405	                            je 0x4000363	       247	generic_ops.c	FUNCTION_18	CALL_1
0x400035e	      0xe900000000	                           jmp 0x4000363	       247	generic_ops.c	FUNCTION_18	CALL_1
0x4000363	            0x31c0	                            xor eax, eax	       248	generic_ops.c	FUNCTION_18
0x4000365	              0xc3	                                     ret	       248	generic_ops.c	FUNCTION_18
pm_generic_poweroff_late	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x40001f0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       161	generic_ops.c	FUNCTION_11
0x40001f7	          0x4885c0	                           test rax, rax	       161	generic_ops.c	FUNCTION_11
0x40001fa	            0x7417	                            je 0x4000213	       161	generic_ops.c	FUNCTION_11
0x40001fc	        0x488b4068	            mov rax, qword [rax + 0x68] 	       161	generic_ops.c	FUNCTION_11
0x4000200	          0x4885c0	                           test rax, rax	       163	generic_ops.c	FUNCTION_11	CALL_1
0x4000203	            0x740e	                            je 0x4000213	       163	generic_ops.c	FUNCTION_11	CALL_1
0x4000205	        0x488b4060	            mov rax, qword [rax + 0x60] 	       163	generic_ops.c	FUNCTION_11	CALL_1
0x4000209	          0x4885c0	                           test rax, rax	       163	generic_ops.c	FUNCTION_11	CALL_1
0x400020c	            0x7405	                            je 0x4000213	       163	generic_ops.c	FUNCTION_11	CALL_1
0x400020e	      0xe900000000	                           jmp 0x4000213	       163	generic_ops.c	FUNCTION_11	CALL_1
0x4000213	            0x31c0	                            xor eax, eax	       164	generic_ops.c	FUNCTION_11
0x4000215	              0xc3	                                     ret	       164	generic_ops.c	FUNCTION_11
pm_generic_suspend_late	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x40000d0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	        89	generic_ops.c	FUNCTION_5
0x40000d7	          0x4885c0	                           test rax, rax	        89	generic_ops.c	FUNCTION_5
0x40000da	            0x7417	                            je 0x40000f3	        89	generic_ops.c	FUNCTION_5
0x40000dc	        0x488b4068	            mov rax, qword [rax + 0x68] 	        89	generic_ops.c	FUNCTION_5
0x40000e0	          0x4885c0	                           test rax, rax	        91	generic_ops.c	FUNCTION_5	CALL_1
0x40000e3	            0x740e	                            je 0x40000f3	        91	generic_ops.c	FUNCTION_5	CALL_1
0x40000e5	        0x488b4040	            mov rax, qword [rax + 0x40] 	        91	generic_ops.c	FUNCTION_5	CALL_1
0x40000e9	          0x4885c0	                           test rax, rax	        91	generic_ops.c	FUNCTION_5	CALL_1
0x40000ec	            0x7405	                            je 0x40000f3	        91	generic_ops.c	FUNCTION_5	CALL_1
0x40000ee	      0xe900000000	                           jmp 0x40000f3	        91	generic_ops.c	FUNCTION_5	CALL_1
0x40000f3	            0x31c0	                            xor eax, eax	        92	generic_ops.c	FUNCTION_5
0x40000f5	              0xc3	                                     ret	        92	generic_ops.c	FUNCTION_5
pm_generic_suspend	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000100	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       101	generic_ops.c	FUNCTION_6
0x4000107	          0x4885c0	                           test rax, rax	       101	generic_ops.c	FUNCTION_6
0x400010a	            0x7417	                            je 0x4000123	       101	generic_ops.c	FUNCTION_6
0x400010c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       101	generic_ops.c	FUNCTION_6
0x4000110	          0x4885c0	                           test rax, rax	       103	generic_ops.c	FUNCTION_6	CALL_1
0x4000113	            0x740e	                            je 0x4000123	       103	generic_ops.c	FUNCTION_6	CALL_1
0x4000115	        0x488b4010	            mov rax, qword [rax + 0x10] 	       103	generic_ops.c	FUNCTION_6	CALL_1
0x4000119	          0x4885c0	                           test rax, rax	       103	generic_ops.c	FUNCTION_6	CALL_1
0x400011c	            0x7405	                            je 0x4000123	       103	generic_ops.c	FUNCTION_6	CALL_1
0x400011e	      0xe900000000	                           jmp 0x4000123	       103	generic_ops.c	FUNCTION_6	CALL_1
0x4000123	            0x31c0	                            xor eax, eax	       104	generic_ops.c	FUNCTION_6
0x4000125	              0xc3	                                     ret	       104	generic_ops.c	FUNCTION_6
pm_generic_restore_noirq	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000370	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       257	generic_ops.c	FUNCTION_19
0x4000377	          0x4885c0	                           test rax, rax	       257	generic_ops.c	FUNCTION_19
0x400037a	            0x741a	                            je 0x4000396	       257	generic_ops.c	FUNCTION_19
0x400037c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       257	generic_ops.c	FUNCTION_19
0x4000380	          0x4885c0	                           test rax, rax	       259	generic_ops.c	FUNCTION_19	CALL_1
0x4000383	            0x7411	                            je 0x4000396	       259	generic_ops.c	FUNCTION_19	CALL_1
0x4000385	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       259	generic_ops.c	FUNCTION_19	CALL_1
0x400038c	          0x4885c0	                           test rax, rax	       259	generic_ops.c	FUNCTION_19	CALL_1
0x400038f	            0x7405	                            je 0x4000396	       259	generic_ops.c	FUNCTION_19	CALL_1
0x4000391	      0xe900000000	                           jmp 0x4000396	       259	generic_ops.c	FUNCTION_19	CALL_1
0x4000396	            0x31c0	                            xor eax, eax	       260	generic_ops.c	FUNCTION_19
0x4000398	              0xc3	                                     ret	       260	generic_ops.c	FUNCTION_19
pm_generic_runtime_suspend	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000040	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	        24	generic_ops.c	FUNCTION_1
0x4000047	          0x4885c0	                           test rax, rax	        24	generic_ops.c	FUNCTION_1
0x400004a	            0x741a	                            je 0x4000066	        24	generic_ops.c	FUNCTION_1
0x400004c	        0x488b4068	            mov rax, qword [rax + 0x68] 	        24	generic_ops.c	FUNCTION_1
0x4000050	          0x4885c0	                           test rax, rax	        27	generic_ops.c	FUNCTION_1	CALL_1
0x4000053	            0x7411	                            je 0x4000066	        27	generic_ops.c	FUNCTION_1	CALL_1
0x4000055	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	        27	generic_ops.c	FUNCTION_1	CALL_1
0x400005c	          0x4885c0	                           test rax, rax	        27	generic_ops.c	FUNCTION_1	CALL_1
0x400005f	            0x7405	                            je 0x4000066	        27	generic_ops.c	FUNCTION_1	CALL_1
0x4000061	      0xe900000000	                           jmp 0x4000066	        27	generic_ops.c	FUNCTION_1	CALL_1
0x4000066	            0x31c0	                            xor eax, eax	        30	generic_ops.c	FUNCTION_1
0x4000068	              0xc3	                                     ret	        30	generic_ops.c	FUNCTION_1
pm_generic_runtime_resume	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000070	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	        43	generic_ops.c	FUNCTION_2
0x4000077	          0x4885c0	                           test rax, rax	        43	generic_ops.c	FUNCTION_2
0x400007a	            0x741a	                            je 0x4000096	        43	generic_ops.c	FUNCTION_2
0x400007c	        0x488b4068	            mov rax, qword [rax + 0x68] 	        43	generic_ops.c	FUNCTION_2
0x4000080	          0x4885c0	                           test rax, rax	        46	generic_ops.c	FUNCTION_2	CALL_1
0x4000083	            0x7411	                            je 0x4000096	        46	generic_ops.c	FUNCTION_2	CALL_1
0x4000085	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	        46	generic_ops.c	FUNCTION_2	CALL_1
0x400008c	          0x4885c0	                           test rax, rax	        46	generic_ops.c	FUNCTION_2	CALL_1
0x400008f	            0x7405	                            je 0x4000096	        46	generic_ops.c	FUNCTION_2	CALL_1
0x4000091	      0xe900000000	                           jmp 0x4000096	        46	generic_ops.c	FUNCTION_2	CALL_1
0x4000096	            0x31c0	                            xor eax, eax	        49	generic_ops.c	FUNCTION_2
0x4000098	              0xc3	                                     ret	        49	generic_ops.c	FUNCTION_2
pm_generic_complete	functions,0:IF,1:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	11
0x4000430	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       295	generic_ops.c	FUNCTION_22
0x4000437	          0x4885c0	                           test rax, rax	       297	generic_ops.c	FUNCTION_22	IF_1
0x400043a	            0x7417	                            je 0x4000453	       297	generic_ops.c	FUNCTION_22	IF_1
0x400043c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       297	generic_ops.c	FUNCTION_22	IF_1
0x4000440	          0x4885c0	                           test rax, rax	       297	generic_ops.c	FUNCTION_22	IF_1
0x4000443	            0x740e	                            je 0x4000453	       297	generic_ops.c	FUNCTION_22	IF_1
0x4000445	        0x488b4008	                mov rax, qword [rax + 8]	       297	generic_ops.c	FUNCTION_22	IF_1
0x4000449	          0x4885c0	                           test rax, rax	       297	generic_ops.c	FUNCTION_22	IF_1
0x400044c	            0x7405	                            je 0x4000453	       297	generic_ops.c	FUNCTION_22	IF_1
0x400044e	      0xe900000000	                           jmp 0x4000453	       298	generic_ops.c	FUNCTION_22	CALL_1
0x4000453	            0xf3c3	                                     ret	       298	generic_ops.c	FUNCTION_22	CALL_1
pm_generic_prepare	functions,0:IF,1:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000400	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	        62	generic_ops.c	FUNCTION_3
0x4000407	          0x4885c0	                           test rax, rax	        65	generic_ops.c	FUNCTION_3	IF_1
0x400040a	            0x7416	                            je 0x4000422	        65	generic_ops.c	FUNCTION_3	IF_1
0x400040c	        0x488b4068	            mov rax, qword [rax + 0x68] 	        65	generic_ops.c	FUNCTION_3	IF_1
0x4000410	          0x4885c0	                           test rax, rax	        65	generic_ops.c	FUNCTION_3	IF_1
0x4000413	            0x740d	                            je 0x4000422	        65	generic_ops.c	FUNCTION_3	IF_1
0x4000415	          0x488b00	                    mov rax, qword [rax]	        65	generic_ops.c	FUNCTION_3	IF_1
0x4000418	          0x4885c0	                           test rax, rax	        65	generic_ops.c	FUNCTION_3	IF_1
0x400041b	            0x7405	                            je 0x4000422	        65	generic_ops.c	FUNCTION_3	IF_1
0x400041d	      0xe900000000	                           jmp 0x4000422	        66	generic_ops.c	FUNCTION_3	CALL_1
0x4000422	            0x31c0	                            xor eax, eax	        69	generic_ops.c	FUNCTION_3
0x4000424	              0xc3	                                     ret	        69	generic_ops.c	FUNCTION_3
pm_generic_freeze	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000190	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       137	generic_ops.c	FUNCTION_9
0x4000197	          0x4885c0	                           test rax, rax	       137	generic_ops.c	FUNCTION_9
0x400019a	            0x7417	                            je 0x40001b3	       137	generic_ops.c	FUNCTION_9
0x400019c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       137	generic_ops.c	FUNCTION_9
0x40001a0	          0x4885c0	                           test rax, rax	       139	generic_ops.c	FUNCTION_9	CALL_1
0x40001a3	            0x740e	                            je 0x40001b3	       139	generic_ops.c	FUNCTION_9	CALL_1
0x40001a5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       139	generic_ops.c	FUNCTION_9	CALL_1
0x40001a9	          0x4885c0	                           test rax, rax	       139	generic_ops.c	FUNCTION_9	CALL_1
0x40001ac	            0x7405	                            je 0x40001b3	       139	generic_ops.c	FUNCTION_9	CALL_1
0x40001ae	      0xe900000000	                           jmp 0x40001b3	       139	generic_ops.c	FUNCTION_9	CALL_1
0x40001b3	            0x31c0	                            xor eax, eax	       140	generic_ops.c	FUNCTION_9
0x40001b5	              0xc3	                                     ret	       140	generic_ops.c	FUNCTION_9
pm_generic_thaw_early	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000280	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       197	generic_ops.c	FUNCTION_14
0x4000287	          0x4885c0	                           test rax, rax	       197	generic_ops.c	FUNCTION_14
0x400028a	            0x7417	                            je 0x40002a3	       197	generic_ops.c	FUNCTION_14
0x400028c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       197	generic_ops.c	FUNCTION_14
0x4000290	          0x4885c0	                           test rax, rax	       199	generic_ops.c	FUNCTION_14	CALL_1
0x4000293	            0x740e	                            je 0x40002a3	       199	generic_ops.c	FUNCTION_14	CALL_1
0x4000295	        0x488b4058	            mov rax, qword [rax + 0x58] 	       199	generic_ops.c	FUNCTION_14	CALL_1
0x4000299	          0x4885c0	                           test rax, rax	       199	generic_ops.c	FUNCTION_14	CALL_1
0x400029c	            0x7405	                            je 0x40002a3	       199	generic_ops.c	FUNCTION_14	CALL_1
0x400029e	      0xe900000000	                           jmp 0x40002a3	       199	generic_ops.c	FUNCTION_14	CALL_1
0x40002a3	            0x31c0	                            xor eax, eax	       200	generic_ops.c	FUNCTION_14
0x40002a5	              0xc3	                                     ret	       200	generic_ops.c	FUNCTION_14
pm_generic_freeze_late	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000160	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       125	generic_ops.c	FUNCTION_8
0x4000167	          0x4885c0	                           test rax, rax	       125	generic_ops.c	FUNCTION_8
0x400016a	            0x7417	                            je 0x4000183	       125	generic_ops.c	FUNCTION_8
0x400016c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       125	generic_ops.c	FUNCTION_8
0x4000170	          0x4885c0	                           test rax, rax	       127	generic_ops.c	FUNCTION_8	CALL_1
0x4000173	            0x740e	                            je 0x4000183	       127	generic_ops.c	FUNCTION_8	CALL_1
0x4000175	        0x488b4050	            mov rax, qword [rax + 0x50] 	       127	generic_ops.c	FUNCTION_8	CALL_1
0x4000179	          0x4885c0	                           test rax, rax	       127	generic_ops.c	FUNCTION_8	CALL_1
0x400017c	            0x7405	                            je 0x4000183	       127	generic_ops.c	FUNCTION_8	CALL_1
0x400017e	      0xe900000000	                           jmp 0x4000183	       127	generic_ops.c	FUNCTION_8	CALL_1
0x4000183	            0x31c0	                            xor eax, eax	       128	generic_ops.c	FUNCTION_8
0x4000185	              0xc3	                                     ret	       128	generic_ops.c	FUNCTION_8
pm_generic_poweroff	functions,0:IF,0:WHILE,0:DO,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	12
0x4000220	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       173	generic_ops.c	FUNCTION_12
0x4000227	          0x4885c0	                           test rax, rax	       173	generic_ops.c	FUNCTION_12
0x400022a	            0x7417	                            je 0x4000243	       173	generic_ops.c	FUNCTION_12
0x400022c	        0x488b4068	            mov rax, qword [rax + 0x68] 	       173	generic_ops.c	FUNCTION_12
0x4000230	          0x4885c0	                           test rax, rax	       175	generic_ops.c	FUNCTION_12	CALL_1
0x4000233	            0x740e	                            je 0x4000243	       175	generic_ops.c	FUNCTION_12	CALL_1
0x4000235	        0x488b4030	            mov rax, qword [rax + 0x30] 	       175	generic_ops.c	FUNCTION_12	CALL_1
0x4000239	          0x4885c0	                           test rax, rax	       175	generic_ops.c	FUNCTION_12	CALL_1
0x400023c	            0x7405	                            je 0x4000243	       175	generic_ops.c	FUNCTION_12	CALL_1
0x400023e	      0xe900000000	                           jmp 0x4000243	       175	generic_ops.c	FUNCTION_12	CALL_1
0x4000243	            0x31c0	                            xor eax, eax	       176	generic_ops.c	FUNCTION_12
0x4000245	              0xc3	                                     ret	       176	generic_ops.c	FUNCTION_12
