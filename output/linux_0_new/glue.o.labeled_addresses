acpi_get_bus_type	CALL,2:FOR,0:functions,1:ELSE,0:SWITCH,0:DO,0:IF,0:WHILE,0	25
0x4000200	              0x55	                                push rbp	        72	glue.c	FUNCTION_3
0x4000201	              0x53	                                push rbx	        72	glue.c	FUNCTION_3
0x4000202	          0x4889fd	                            mov rbp, rdi	        72	glue.c	FUNCTION_3
0x4000205	    0x48c7c7000000	                              mov rdi, 0	        75	glue.c	FUNCTION_3	CALL_1
0x400020c	      0xe800000000	                          call 0x4000211	        75	glue.c	FUNCTION_3	CALL_1
0x4000211	    0x488b1d000000	            mov rbx, qword [0x04000218] 	        76	glue.c	FUNCTION_3	FUNCTION_1
0x4000218	    0x4881fb000000	                              cmp rbx, 0	        76	glue.c	FUNCTION_3	FUNCTION_1
0x400021f	            0x750e	                           jne 0x400022f	        76	glue.c	FUNCTION_3	FUNCTION_1
0x4000221	            0xeb2e	                           jmp 0x4000251	        76	glue.c	FUNCTION_3	FUNCTION_1
0x4000223	          0x488b1b	                    mov rbx, qword [rbx]	        76	glue.c	FUNCTION_3	FUNCTION_1
0x4000226	    0x4881fb000000	                              cmp rbx, 0	        76	glue.c	FUNCTION_3	FUNCTION_1
0x400022d	            0x7422	                            je 0x4000251	        76	glue.c	FUNCTION_3	FUNCTION_1
0x400022f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        77	glue.c	FUNCTION_3	FUNCTION_1	IF_1	CALL_1
0x4000233	          0x4889ef	                            mov rdi, rbp	        77	glue.c	FUNCTION_3	FUNCTION_1	IF_1	CALL_1
0x4000236	      0xe800000000	                          call 0x400023b	        77	glue.c	FUNCTION_3	FUNCTION_1	IF_1	CALL_1
0x400023b	            0x84c0	                             test al, al	        77	glue.c	FUNCTION_3	FUNCTION_1	IF_1	CALL_1
0x400023d	            0x74e4	                            je 0x4000223	        77	glue.c	FUNCTION_3	FUNCTION_1	IF_1	CALL_1
0x400023f	    0x48c7c7000000	                              mov rdi, 0	        82	glue.c	FUNCTION_3	CALL_2
0x4000246	      0xe800000000	                          call 0x400024b	        82	glue.c	FUNCTION_3	CALL_2
0x400024b	          0x4889d8	                            mov rax, rbx	        84	glue.c	FUNCTION_3
0x400024e	              0x5b	                                 pop rbx	        84	glue.c	FUNCTION_3
0x400024f	              0x5d	                                 pop rbp	        84	glue.c	FUNCTION_3
0x4000250	              0xc3	                                     ret	        84	glue.c	FUNCTION_3
0x4000251	            0x31db	                            xor ebx, ebx	        73	glue.c	FUNCTION_3
0x4000253	            0xebea	                           jmp 0x400023f	        73	glue.c	FUNCTION_3
acpi_platform_notify	CALL,14:FOR,0:functions,0:ELSE,2:SWITCH,0:DO,0:IF,8:WHILE,0	55
0x4000800	            0x4155	                                push r13	       300	glue.c	FUNCTION_9
0x4000802	            0x4154	                                push r12	       300	glue.c	FUNCTION_9
0x4000804	              0x55	                                push rbp	       300	glue.c	FUNCTION_9
0x4000805	              0x53	                                push rbx	       300	glue.c	FUNCTION_9
0x4000806	          0x4889fb	                            mov rbx, rdi	       300	glue.c	FUNCTION_9
0x4000809	      0xe8f2f9ffff	              call sym.acpi_get_bus_type	       301	glue.c	FUNCTION_9	CALL_1
0x400080e	            0x31f6	                            xor esi, esi	       305	glue.c	FUNCTION_9	CALL_2
0x4000810	          0x4889df	                            mov rdi, rbx	       305	glue.c	FUNCTION_9	CALL_2
0x4000813	          0x4989c4	                            mov r12, rax	       301	glue.c	FUNCTION_9	CALL_1
0x4000816	      0xe800000000	                          call 0x400081b	       305	glue.c	FUNCTION_9	CALL_2
0x400081b	            0x85c0	                           test eax, eax	       306	glue.c	FUNCTION_9	IF_1
0x400081d	            0x89c5	                            mov ebp, eax	       305	glue.c	FUNCTION_9	CALL_2
0x400081f	            0x7428	                            je 0x4000849	       306	glue.c	FUNCTION_9	IF_1
0x4000821	          0x4d85e4	                           test r12, r12	       306	glue.c	FUNCTION_9	IF_1
0x4000824	            0x7423	                            je 0x4000849	       306	glue.c	FUNCTION_9	IF_1
0x4000826	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       309	glue.c	FUNCTION_9	IF_1	CALL_3
0x400082b	          0x4889df	                            mov rdi, rbx	       309	glue.c	FUNCTION_9	IF_1	CALL_3
0x400082e	      0xe800000000	                          call 0x4000833	       309	glue.c	FUNCTION_9	IF_1	CALL_3
0x4000833	          0x4885c0	                           test rax, rax	       310	glue.c	FUNCTION_9	IF_1	IF_2
0x4000836	            0x7461	                            je 0x4000899	       310	glue.c	FUNCTION_9	IF_1	IF_2
0x4000838	          0x4889c6	                            mov rsi, rax	       315	glue.c	FUNCTION_9	IF_1	CALL_5
0x400083b	          0x4889df	                            mov rdi, rbx	       315	glue.c	FUNCTION_9	IF_1	CALL_5
0x400083e	      0xe800000000	                          call 0x4000843	       315	glue.c	FUNCTION_9	IF_1	CALL_5
0x4000843	            0x85c0	                           test eax, eax	       316	glue.c	FUNCTION_9	IF_1	IF_3
0x4000845	            0x89c5	                            mov ebp, eax	       315	glue.c	FUNCTION_9	IF_1	CALL_5
0x4000847	            0x7530	                           jne 0x4000879	       316	glue.c	FUNCTION_9	IF_1	IF_3
0x4000849	    0x4c8bab580200	           mov r13, qword [rbx + 0x258] 	       319	glue.c	FUNCTION_9	CALL_6
0x4000850	          0x4c89ef	                            mov rdi, r13	       319	glue.c	FUNCTION_9	CALL_6
0x4000853	      0xe800000000	                          call 0x4000858	       319	glue.c	FUNCTION_9	CALL_6
0x4000858	            0x84c0	                             test al, al	       319	glue.c	FUNCTION_9	CALL_6
0x400085a	            0x741d	                            je 0x4000879	       319	glue.c	FUNCTION_9	CALL_6
0x400085c	        0x4983fd10	                           cmp r13, 0x10	       320	glue.c	FUNCTION_9	IF_4
0x4000860	            0x7417	                            je 0x4000879	       320	glue.c	FUNCTION_9	IF_4
0x4000862	          0x4d85e4	                           test r12, r12	       326	glue.c	FUNCTION_9	IF_6
0x4000865	            0x741b	                            je 0x4000882	       326	glue.c	FUNCTION_9	IF_6
0x4000867	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       326	glue.c	FUNCTION_9	IF_6
0x400086c	          0x4885c0	                           test rax, rax	       326	glue.c	FUNCTION_9	IF_6
0x400086f	            0x7411	                            je 0x4000882	       326	glue.c	FUNCTION_9	IF_6
0x4000871	          0x4889df	                            mov rdi, rbx	       329	glue.c	FUNCTION_9	ELSE_1	IF_7
0x4000874	      0xe800000000	                          call 0x4000879	       329	glue.c	FUNCTION_9	ELSE_1	IF_7
0x4000879	              0x5b	                                 pop rbx	       344	glue.c	FUNCTION_9
0x400087a	            0x89e8	                            mov eax, ebp	       344	glue.c	FUNCTION_9
0x400087c	              0x5d	                                 pop rbp	       344	glue.c	FUNCTION_9
0x400087d	            0x415c	                                 pop r12	       344	glue.c	FUNCTION_9
0x400087f	            0x415d	                                 pop r13	       344	glue.c	FUNCTION_9
0x4000881	              0xc3	                                     ret	       344	glue.c	FUNCTION_9
0x4000882	    0x498b85180200	           mov rax, qword [r13 + 0x218] 	       328	glue.c	FUNCTION_9	ELSE_1	IF_7
0x4000889	          0x4885c0	                           test rax, rax	       328	glue.c	FUNCTION_9	ELSE_1	IF_7
0x400088c	            0x74eb	                            je 0x4000879	       328	glue.c	FUNCTION_9	ELSE_1	IF_7
0x400088e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       328	glue.c	FUNCTION_9	ELSE_1	IF_7
0x4000892	          0x4885c0	                           test rax, rax	       328	glue.c	FUNCTION_9	ELSE_1	IF_7
0x4000895	            0x75da	                           jne 0x4000871	       328	glue.c	FUNCTION_9	ELSE_1	IF_7
0x4000897	            0xebe0	                           jmp 0x4000879	       328	glue.c	FUNCTION_9	ELSE_1	IF_7
0x4000899	      0xbdedffffff	                     mov ebp, 0xffffffed	       312	glue.c	FUNCTION_9	IF_1	IF_2
0x400089e	            0xebd9	                           jmp 0x4000879	       312	glue.c	FUNCTION_9	IF_1	IF_2
init_acpi_device_notify	CALL,1:FOR,0:functions,0:ELSE,0:SWITCH,0:DO,0:IF,1:WHILE,0	16
0x4000040	              0x55	                                push rbp	        90	glue.c	FUNCTION_4
0x4000041	              0x53	                                push rbx	        90	glue.c	FUNCTION_4
0x4000042	          0x4889fb	                            mov rbx, rdi	        90	glue.c	FUNCTION_4
0x4000045	            0x31d2	                            xor edx, edx	        95	glue.c	FUNCTION_4	CALL_1
0x4000047	            0x89f5	                            mov ebp, esi	        90	glue.c	FUNCTION_4
0x4000049	    0x48c7c6000000	                              mov rsi, 0	        95	glue.c	FUNCTION_4	CALL_1
0x4000050	        0x4883ec10	                           sub rsp, 0x10	        90	glue.c	FUNCTION_4
0x4000054	        0x488b7f08	                mov rdi, qword [rdi + 8]	        95	glue.c	FUNCTION_4	CALL_1
0x4000058	          0x4889e1	                            mov rcx, rsp	        95	glue.c	FUNCTION_4	CALL_1
0x400005b	    0x65488b042528	                mov rax, qword gs:[0x28]	        90	glue.c	FUNCTION_4
0x4000064	      0x4889442408	                mov qword [rsp + 8], rax	        90	glue.c	FUNCTION_4
0x4000069	            0x31c0	                            xor eax, eax	        90	glue.c	FUNCTION_4
0x400006b	      0xe800000000	                          call 0x4000070	        95	glue.c	FUNCTION_4	CALL_1
0x4000070	          0x83f805	                              cmp eax, 5	        96	glue.c	FUNCTION_4	IF_1
0x4000073	            0x7445	                            je 0x40000ba	        96	glue.c	FUNCTION_4	IF_1
0x4000075	            0x85c0	                           test eax, eax	        98	glue.c	FUNCTION_4	ELSE_1	IF_2	CALL_2
acpi_find_child_device	CALL,0:FOR,0:functions,1:ELSE,0:SWITCH,0:DO,0:IF,1:WHILE,0	80
0x40000f0	            0x4157	                                push r15	       117	glue.c	FUNCTION_5
0x40000f2	            0x4156	                                push r14	       117	glue.c	FUNCTION_5
0x40000f4	            0x4155	                                push r13	       117	glue.c	FUNCTION_5
0x40000f6	            0x4154	                                push r12	       117	glue.c	FUNCTION_5
0x40000f8	              0x55	                                push rbp	       117	glue.c	FUNCTION_5
0x40000f9	              0x53	                                push rbx	       117	glue.c	FUNCTION_5
0x40000fa	        0x4883ec18	                           sub rsp, 0x18	       117	glue.c	FUNCTION_5
0x40000fe	    0x65488b042528	                mov rax, qword gs:[0x28]	       117	glue.c	FUNCTION_5
0x4000107	      0x4889442410	             mov qword [rsp + 0x10], rax	       117	glue.c	FUNCTION_5
0x400010c	            0x31c0	                            xor eax, eax	       117	glue.c	FUNCTION_5
0x400010e	          0x4885ff	                           test rdi, rdi	       121	glue.c	FUNCTION_5	IF_1
0x4000111	     0xf84d2000000	                            je 0x40001e9	       121	glue.c	FUNCTION_5	IF_1
0x4000117	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       124	glue.c	FUNCTION_5	FUNCTION_1
0x400011b	        0x488d6f28	                   lea rbp, [rdi + 0x28]	       124	glue.c	FUNCTION_5	FUNCTION_1
0x400011f	          0x4839c5	                            cmp rbp, rax	       124	glue.c	FUNCTION_5	FUNCTION_1
0x4000122	        0x488d58c8	                   lea rbx, [rax - 0x38]	       124	glue.c	FUNCTION_5	FUNCTION_1
0x4000126	     0xf84bd000000	                            je 0x40001e9	       124	glue.c	FUNCTION_5	FUNCTION_1
0x400012c	           0xfb6c2	                           movzx eax, dl	       150	glue.c	FUNCTION_5	FUNCTION_1	IF_3	CALL_3
0x400012f	          0x4989f5	                            mov r13, rsi	       150	glue.c	FUNCTION_5	FUNCTION_1	IF_3	CALL_3
0x4000132	          0x4531e4	                          xor r12d, r12d	       124	glue.c	FUNCTION_5	FUNCTION_1
0x4000135	          0x4531f6	                          xor r14d, r14d	       124	glue.c	FUNCTION_5	FUNCTION_1
0x4000138	        0x89442404	                mov dword [rsp + 4], eax	       150	glue.c	FUNCTION_5	FUNCTION_1	IF_3	CALL_3
0x400013c	            0xeb0d	                           jmp 0x400014b	       150	glue.c	FUNCTION_5	FUNCTION_1	IF_3	CALL_3
0x400013e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       124	glue.c	FUNCTION_5	FUNCTION_1
0x4000142	          0x4839c5	                            cmp rbp, rax	       124	glue.c	FUNCTION_5	FUNCTION_1
0x4000145	        0x488d58c8	                   lea rbx, [rax - 0x38]	       124	glue.c	FUNCTION_5	FUNCTION_1
0x4000149	            0x746c	                            je 0x40001b7	       124	glue.c	FUNCTION_5	FUNCTION_1
0x400014b	        0x488b7b08	                mov rdi, qword [rbx + 8]	       129	glue.c	FUNCTION_5	FUNCTION_1	CALL_1
0x400014f	      0x488d4c2408	                      lea rcx, [rsp + 8]	       129	glue.c	FUNCTION_5	FUNCTION_1	CALL_1
0x4000154	            0x31d2	                            xor edx, edx	       129	glue.c	FUNCTION_5	FUNCTION_1	CALL_1
0x4000156	    0x48c7c6000000	                              mov rsi, 0	       129	glue.c	FUNCTION_5	FUNCTION_1	CALL_1
0x400015d	      0xe800000000	                          call 0x4000162	       129	glue.c	FUNCTION_5	FUNCTION_1	CALL_1
0x4000162	            0x85c0	                           test eax, eax	       131	glue.c	FUNCTION_5	FUNCTION_1	IF_1	CALL_2
0x4000164	            0x75d8	                           jne 0x400013e	       131	glue.c	FUNCTION_5	FUNCTION_1	IF_1	CALL_2
0x4000166	      0x4c396c2408	                cmp qword [rsp + 8], r13	       131	glue.c	FUNCTION_5	FUNCTION_1	IF_1	CALL_2
0x400016b	            0x75d1	                           jne 0x400013e	       131	glue.c	FUNCTION_5	FUNCTION_1	IF_1	CALL_2
0x400016d	          0x4d85f6	                           test r14, r14	       134	glue.c	FUNCTION_5	FUNCTION_1	IF_2
0x4000170	            0x7467	                            je 0x40001d9	       134	glue.c	FUNCTION_5	FUNCTION_1	IF_2
0x4000172	          0x4585e4	                         test r12d, r12d	       149	glue.c	FUNCTION_5	FUNCTION_1	IF_3
0x4000175	          0x4589e7	                          mov r15d, r12d	       149	glue.c	FUNCTION_5	FUNCTION_1	IF_3
0x4000178	            0x7514	                           jne 0x400018e	       149	glue.c	FUNCTION_5	FUNCTION_1	IF_3
0x400017a	        0x8b742404	                mov esi, dword [rsp + 4]	       150	glue.c	FUNCTION_5	FUNCTION_1	IF_3	CALL_3
0x400017e	          0x4c89f7	                            mov rdi, r14	       150	glue.c	FUNCTION_5	FUNCTION_1	IF_3	CALL_3
0x4000181	      0xe8bafeffff	              call sym.find_child_checks	       150	glue.c	FUNCTION_5	FUNCTION_1	IF_3	CALL_3
0x4000186	          0x83f802	                              cmp eax, 2	       151	glue.c	FUNCTION_5	FUNCTION_1	IF_3	IF_4
0x4000189	          0x4189c7	                           mov r15d, eax	       150	glue.c	FUNCTION_5	FUNCTION_1	IF_3	CALL_3
0x400018c	            0x7453	                            je 0x40001e1	       151	glue.c	FUNCTION_5	FUNCTION_1	IF_3	IF_4
0x400018e	        0x8b742404	                mov esi, dword [rsp + 4]	       154	glue.c	FUNCTION_5	FUNCTION_1	CALL_4
0x4000192	          0x4889df	                            mov rdi, rbx	       154	glue.c	FUNCTION_5	FUNCTION_1	CALL_4
0x4000195	      0xe8a6feffff	              call sym.find_child_checks	       154	glue.c	FUNCTION_5	FUNCTION_1	CALL_4
0x400019a	          0x83f802	                              cmp eax, 2	       155	glue.c	FUNCTION_5	FUNCTION_1	IF_5
0x400019d	          0x4189c4	                           mov r12d, eax	       154	glue.c	FUNCTION_5	FUNCTION_1	CALL_4
0x40001a0	            0x7442	                            je 0x40001e4	       155	glue.c	FUNCTION_5	FUNCTION_1	IF_5
0x40001a2	          0x4139c7	                           cmp r15d, eax	       157	glue.c	FUNCTION_5	FUNCTION_1	ELSE_1	IF_6
0x40001a5	            0x7c32	                            jl 0x40001d9	       157	glue.c	FUNCTION_5	FUNCTION_1	ELSE_1	IF_6
0x40001a7	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       124	glue.c	FUNCTION_5	FUNCTION_1
0x40001ab	          0x4589fc	                          mov r12d, r15d	       157	glue.c	FUNCTION_5	FUNCTION_1	ELSE_1	IF_6
0x40001ae	          0x4839c5	                            cmp rbp, rax	       124	glue.c	FUNCTION_5	FUNCTION_1
0x40001b1	        0x488d58c8	                   lea rbx, [rax - 0x38]	       124	glue.c	FUNCTION_5	FUNCTION_1
0x40001b5	            0x7594	                           jne 0x400014b	       124	glue.c	FUNCTION_5	FUNCTION_1
0x40001b7	          0x4c89f0	                            mov rax, r14	       124	glue.c	FUNCTION_5	FUNCTION_1
0x40001ba	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       163	glue.c	FUNCTION_5
0x40001bf	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       163	glue.c	FUNCTION_5
0x40001c8	            0x7523	                           jne 0x40001ed	       163	glue.c	FUNCTION_5
0x40001ca	        0x4883c418	                           add rsp, 0x18	       163	glue.c	FUNCTION_5
0x40001ce	              0x5b	                                 pop rbx	       163	glue.c	FUNCTION_5
0x40001cf	              0x5d	                                 pop rbp	       163	glue.c	FUNCTION_5
0x40001d0	            0x415c	                                 pop r12	       163	glue.c	FUNCTION_5
0x40001d2	            0x415d	                                 pop r13	       163	glue.c	FUNCTION_5
0x40001d4	            0x415e	                                 pop r14	       163	glue.c	FUNCTION_5
0x40001d6	            0x415f	                                 pop r15	       163	glue.c	FUNCTION_5
0x40001d8	              0xc3	                                     ret	       163	glue.c	FUNCTION_5
0x40001d9	          0x4989de	                            mov r14, rbx	       163	glue.c	FUNCTION_5
0x40001dc	      0xe95dffffff	                           jmp 0x400013e	       163	glue.c	FUNCTION_5
0x40001e1	          0x4c89f3	                            mov rbx, r14	       163	glue.c	FUNCTION_5
0x40001e4	          0x4889d8	                            mov rax, rbx	       152	glue.c	FUNCTION_5	FUNCTION_1	IF_3	IF_4
0x40001e7	            0xebd1	                           jmp 0x40001ba	       152	glue.c	FUNCTION_5	FUNCTION_1	IF_3	IF_4
0x40001e9	            0x31c0	                            xor eax, eax	       122	glue.c	FUNCTION_5	IF_1
0x40001eb	            0xebcd	                           jmp 0x40001ba	       122	glue.c	FUNCTION_5	IF_1
0x40001ed	      0xe800000000	                          call 0x40001f2	       163	glue.c	FUNCTION_5
acpi_platform_notify_remove	CALL,5:FOR,0:functions,0:ELSE,1:SWITCH,0:DO,0:IF,3:WHILE,0	32
0x40004c0	              0x55	                                push rbp	       347	glue.c	FUNCTION_10
0x40004c1	              0x53	                                push rbx	       347	glue.c	FUNCTION_10
0x40004c2	          0x4889fb	                            mov rbx, rdi	       347	glue.c	FUNCTION_10
0x40004c5	    0x488baf580200	           mov rbp, qword [rdi + 0x258] 	       348	glue.c	FUNCTION_10	CALL_1
0x40004cc	          0x4889ef	                            mov rdi, rbp	       348	glue.c	FUNCTION_10	CALL_1
0x40004cf	      0xe800000000	                          call 0x40004d4	       348	glue.c	FUNCTION_10	CALL_1
0x40004d4	            0x84c0	                             test al, al	       348	glue.c	FUNCTION_10	CALL_1
0x40004d6	            0x742c	                            je 0x4000504	       348	glue.c	FUNCTION_10	CALL_1
0x40004d8	        0x4883fd10	                           cmp rbp, 0x10	       351	glue.c	FUNCTION_10	IF_1
0x40004dc	            0x7426	                            je 0x4000504	       351	glue.c	FUNCTION_10	IF_1
0x40004de	          0x4889df	                            mov rdi, rbx	       354	glue.c	FUNCTION_10	CALL_2
0x40004e1	      0xe81afdffff	              call sym.acpi_get_bus_type	       354	glue.c	FUNCTION_10	CALL_2
0x40004e6	          0x4885c0	                           test rax, rax	       355	glue.c	FUNCTION_10	IF_2
0x40004e9	            0x741e	                            je 0x4000509	       355	glue.c	FUNCTION_10	IF_2
0x40004eb	        0x488b4030	            mov rax, qword [rax + 0x30] 	       355	glue.c	FUNCTION_10	IF_2
0x40004ef	          0x4885c0	                           test rax, rax	       355	glue.c	FUNCTION_10	IF_2
0x40004f2	            0x7415	                            je 0x4000509	       355	glue.c	FUNCTION_10	IF_2
0x40004f4	          0x4889df	                            mov rdi, rbx	       358	glue.c	FUNCTION_10	ELSE_1	IF_3
0x40004f7	      0xe800000000	                          call 0x40004fc	       358	glue.c	FUNCTION_10	ELSE_1	IF_3
0x40004fc	          0x4889df	                            mov rdi, rbx	       360	glue.c	FUNCTION_10	CALL_5
0x40004ff	      0xe800000000	                          call 0x4000504	       360	glue.c	FUNCTION_10	CALL_5
0x4000504	            0x31c0	                            xor eax, eax	       362	glue.c	FUNCTION_10
0x4000506	              0x5b	                                 pop rbx	       362	glue.c	FUNCTION_10
0x4000507	              0x5d	                                 pop rbp	       362	glue.c	FUNCTION_10
0x4000508	              0xc3	                                     ret	       362	glue.c	FUNCTION_10
0x4000509	    0x488b85180200	           mov rax, qword [rbp + 0x218] 	       357	glue.c	FUNCTION_10	ELSE_1	IF_3
0x4000510	          0x4885c0	                           test rax, rax	       357	glue.c	FUNCTION_10	ELSE_1	IF_3
0x4000513	            0x74e7	                            je 0x40004fc	       357	glue.c	FUNCTION_10	ELSE_1	IF_3
0x4000515	        0x488b4038	            mov rax, qword [rax + 0x38] 	       357	glue.c	FUNCTION_10	ELSE_1	IF_3
0x4000519	          0x4885c0	                           test rax, rax	       357	glue.c	FUNCTION_10	ELSE_1	IF_3
0x400051c	            0x75d6	                           jne 0x40004f4	       357	glue.c	FUNCTION_10	ELSE_1	IF_3
0x400051e	            0xebdc	                           jmp 0x40004fc	       357	glue.c	FUNCTION_10	ELSE_1	IF_3
