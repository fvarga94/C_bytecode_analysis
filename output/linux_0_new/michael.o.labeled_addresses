michael_block	IF,0:FOR,0:functions,0:SWITCH,0:ELSE,0:CALL,3:DO,0:WHILE,0	28
0x4000040	            0x3337	                    xor esi, dword [rdi]	        18	michael.c	FUNCTION_1
0x4000042	            0x89f0	                            mov eax, esi	        19	michael.c	FUNCTION_1	CALL_1
0x4000044	          0xc1c80f	                            ror eax, 0xf	        19	michael.c	FUNCTION_1	CALL_1
0x4000047	          0x334704	                xor eax, dword [rdi + 4]	        19	michael.c	FUNCTION_1	CALL_1
0x400004a	             0x1c6	                            add esi, eax	        20	michael.c	FUNCTION_1
0x400004c	            0x89c2	                            mov edx, eax	        19	michael.c	FUNCTION_1	CALL_1
0x400004e	            0x89f0	                            mov eax, esi	        21	michael.c	FUNCTION_1
0x4000050	            0x89f1	                            mov ecx, esi	        21	michael.c	FUNCTION_1
0x4000052	      0x2500ff00ff	                     and eax, 0xff00ff00	        21	michael.c	FUNCTION_1
0x4000057	    0x81e1ff00ff00	                       and ecx, 0xff00ff	        21	michael.c	FUNCTION_1
0x400005d	          0xc1e808	                              shr eax, 8	        21	michael.c	FUNCTION_1
0x4000060	          0x4189c0	                            mov r8d, eax	        21	michael.c	FUNCTION_1
0x4000063	            0x89c8	                            mov eax, ecx	        21	michael.c	FUNCTION_1
0x4000065	          0xc1e008	                              shl eax, 8	        21	michael.c	FUNCTION_1
0x4000068	          0x4409c0	                             or eax, r8d	        21	michael.c	FUNCTION_1
0x400006b	            0x31d0	                            xor eax, edx	        21	michael.c	FUNCTION_1
0x400006d	             0x1c6	                            add esi, eax	        23	michael.c	FUNCTION_1
0x400006f	            0x89f2	                            mov edx, esi	        24	michael.c	FUNCTION_1	CALL_2
0x4000071	          0xc1c203	                              rol edx, 3	        24	michael.c	FUNCTION_1	CALL_2
0x4000074	            0x31d0	                            xor eax, edx	        24	michael.c	FUNCTION_1	CALL_2
0x4000076	             0x1c6	                            add esi, eax	        25	michael.c	FUNCTION_1
0x4000078	            0x89f2	                            mov edx, esi	        26	michael.c	FUNCTION_1	CALL_3
0x400007a	          0xc1ca02	                              ror edx, 2	        26	michael.c	FUNCTION_1	CALL_3
0x400007d	            0x31d0	                            xor eax, edx	        26	michael.c	FUNCTION_1	CALL_3
0x400007f	          0x894704	                mov dword [rdi + 4], eax	        26	michael.c	FUNCTION_1	CALL_3
0x4000082	             0x1f0	                            add eax, esi	        27	michael.c	FUNCTION_1
0x4000084	            0x8907	                    mov dword [rdi], eax	        27	michael.c	FUNCTION_1
0x4000086	              0xc3	                                     ret	        27	michael.c	FUNCTION_1
