menu_reflect	CALL,2:functions,0:FOR,0:DO,0:WHILE,0:SWITCH,0:IF,0:ELSE,0	10
0x4000040	              0x53	                                push rbx	       574	menu.c	FUNCTION_9	CALL_1
0x4000041	    0x48c7c3000000	                              mov rbx, 0	       574	menu.c	FUNCTION_9	CALL_1
0x4000048	    0x6548031d0000	          add rbx, qword gs:[0x04000050]	       574	menu.c	FUNCTION_9	CALL_1
0x4000050	            0x8933	                    mov dword [rbx], esi	       449	menu.c	FUNCTION_6
0x4000052	    0xc74304010000	                  mov dword [rbx + 4], 1	       450	menu.c	FUNCTION_6
0x4000059	      0xe800000000	                          call 0x400005e	       451	menu.c	FUNCTION_6	CALL_2
0x400005e	           0xfb6c0	                           movzx eax, al	       451	menu.c	FUNCTION_6	CALL_2
0x4000061	          0x894308	                mov dword [rbx + 8], eax	       451	menu.c	FUNCTION_6	CALL_2
0x4000064	              0x5b	                                 pop rbx	       452	menu.c	FUNCTION_6
0x4000065	              0xc3	                                     ret	       452	menu.c	FUNCTION_6
menu_enable_device	CALL,2:functions,0:FOR,1:DO,0:WHILE,0:SWITCH,0:IF,0:ELSE,0	21
0x40005c0	          0x8b4604	                mov eax, dword [rsi + 4]	       546	menu.c	FUNCTION_8	CALL_1
0x40005c3	    0x48c7c2000000	                              mov rdx, 0	       546	menu.c	FUNCTION_8	CALL_1
0x40005ca	    0x480314c50000	                  add rdx, qword [rax*8]	       546	menu.c	FUNCTION_8	CALL_1
0x40005d2	            0x31c0	                            xor eax, eax	       549	menu.c	FUNCTION_8	CALL_2
0x40005d4	        0x488d7a08	                      lea rdi, [rdx + 8]	       549	menu.c	FUNCTION_8	CALL_2
0x40005d8	          0x4889d1	                            mov rcx, rdx	       549	menu.c	FUNCTION_8	CALL_2
0x40005db	    0x48c702000000	                      mov qword [rdx], 0	       549	menu.c	FUNCTION_8	CALL_2
0x40005e2	    0x48c742640000	               mov qword [rdx + 0x64], 0	       549	menu.c	FUNCTION_8	CALL_2
0x40005ea	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	       549	menu.c	FUNCTION_8	CALL_2
0x40005ee	          0x4829f9	                            sub rcx, rdi	       549	menu.c	FUNCTION_8	CALL_2
0x40005f1	          0x83c16c	                           add ecx, 0x6c	       549	menu.c	FUNCTION_8	CALL_2
0x40005f4	          0xc1e903	                              shr ecx, 3	       549	menu.c	FUNCTION_8	CALL_2
0x40005f7	          0xf348ab	              rep stosq qword [rdi], rax	       549	menu.c	FUNCTION_8	CALL_2
0x40005fa	        0x488d4218	                   lea rax, [rdx + 0x18]	       549	menu.c	FUNCTION_8	CALL_2
0x40005fe	        0x4883c248	                           add rdx, 0x48	       549	menu.c	FUNCTION_8	CALL_2
0x4000602	    0xc70000200000	                 mov dword [rax], 0x2000	       556	menu.c	FUNCTION_8	FOR_1
0x4000608	        0x4883c004	                              add rax, 4	       556	menu.c	FUNCTION_8	FOR_1
0x400060c	          0x4839d0	                            cmp rax, rdx	       555	menu.c	FUNCTION_8	FOR_1
0x400060f	            0x75f1	                           jne 0x4000602	       555	menu.c	FUNCTION_8	FOR_1
0x4000611	            0x31c0	                            xor eax, eax	       559	menu.c	FUNCTION_8
0x4000613	              0xc3	                                     ret	       559	menu.c	FUNCTION_8
init_menu	CALL,1:functions,0:FOR,0:DO,0:WHILE,0:SWITCH,0:IF,0:ELSE,0	6
0x4000040	              0x53	                                push rbx	       574	menu.c	FUNCTION_9	CALL_1
0x4000041	    0x48c7c3000000	                              mov rbx, 0	       574	menu.c	FUNCTION_9	CALL_1
0x4000048	              0x65	                                 invalid	       574	menu.c	FUNCTION_9	CALL_1
0x4000049	              0x48	                                 invalid	       574	menu.c	FUNCTION_9	CALL_1
0x400004a	               0x3	                                 invalid	       574	menu.c	FUNCTION_9	CALL_1
0x400004b	              0x1d	                                 invalid	       574	menu.c	FUNCTION_9	CALL_1
menu_select	CALL,19:functions,0:FOR,2:DO,0:WHILE,0:SWITCH,0:IF,16:ELSE,1	352
0x4000070	            0x4157	                                push r15	       285	menu.c	FUNCTION_5
0x4000072	            0x4156	                                push r14	       285	menu.c	FUNCTION_5
0x4000074	    0x49c7c6000000	                              mov r14, 0	       286	menu.c	FUNCTION_5	CALL_1
0x400007b	            0x4155	                                push r13	       285	menu.c	FUNCTION_5
0x400007d	            0x4154	                                push r12	       285	menu.c	FUNCTION_5
0x400007f	          0x4d89f4	                            mov r12, r14	       286	menu.c	FUNCTION_5	CALL_1
0x4000082	              0x55	                                push rbp	       285	menu.c	FUNCTION_5
0x4000083	              0x53	                                push rbx	       285	menu.c	FUNCTION_5
0x4000084	          0x4889f5	                            mov rbp, rsi	       285	menu.c	FUNCTION_5
0x4000087	          0x4889fb	                            mov rbx, rdi	       285	menu.c	FUNCTION_5
0x400008a	        0x4883ec38	                           sub rsp, 0x38	       285	menu.c	FUNCTION_5
0x400008e	      0x4889542410	             mov qword [rsp + 0x10], rdx	       285	menu.c	FUNCTION_5
0x4000093	    0x65488b042528	                mov rax, qword gs:[0x28]	       285	menu.c	FUNCTION_5
0x400009c	      0x4889442430	             mov qword [rsp + 0x30], rax	       285	menu.c	FUNCTION_5
0x40000a1	            0x31c0	                            xor eax, eax	       285	menu.c	FUNCTION_5
0x40000a3	    0x654c03250000	          add r12, qword gs:[0x040000ab]	       286	menu.c	FUNCTION_5	CALL_1
0x40000ab	          0x8b7e04	                mov edi, dword [rsi + 4]	       287	menu.c	FUNCTION_5	CALL_2
0x40000ae	      0xe800000000	                          call 0x40000b3	       287	menu.c	FUNCTION_5	CALL_2
0x40000b3	      0x418b542404	                mov edx, dword [r12 + 4]	       296	menu.c	FUNCTION_5	IF_1
0x40000b8	          0x4189c5	                           mov r13d, eax	       287	menu.c	FUNCTION_5	CALL_2
0x40000bb	            0x85d2	                           test edx, edx	       296	menu.c	FUNCTION_5	IF_1
0x40000bd	     0xf85c7030000	                           jne 0x400048a	       296	menu.c	FUNCTION_5	IF_1
0x40000c3	          0x4585ed	                         test r13d, r13d	       302	menu.c	FUNCTION_5	IF_2	CALL_4
0x40000c6	     0xf8466040000	                            je 0x4000532	       302	menu.c	FUNCTION_5	IF_2	CALL_4
0x40000cc	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       308	menu.c	FUNCTION_5	CALL_6
0x40000d1	      0xe800000000	                          call 0x40000d6	       308	menu.c	FUNCTION_5	CALL_6
0x40000d6	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       308	menu.c	FUNCTION_5	CALL_6
0x40000e0	          0x4889c1	                            mov rcx, rax	       308	menu.c	FUNCTION_5	CALL_6
0x40000e3	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       310	menu.c	FUNCTION_5	CALL_7
0x40000e8	          0x48f7ea	                                imul rdx	       308	menu.c	FUNCTION_5	CALL_6
0x40000eb	        0x48c1f93f	                           sar rcx, 0x3f	       308	menu.c	FUNCTION_5	CALL_6
0x40000ef	      0x488d742420	                   lea rsi, [rsp + 0x20]	       310	menu.c	FUNCTION_5	CALL_7
0x40000f4	        0x48c1fa07	                              sar rdx, 7	       308	menu.c	FUNCTION_5	CALL_6
0x40000f8	          0x4829ca	                            sub rdx, rcx	       308	menu.c	FUNCTION_5	CALL_6
0x40000fb	      0x418954240c	              mov dword [r12 + 0xc], edx	       308	menu.c	FUNCTION_5	CALL_6
0x4000100	      0xe800000000	                          call 0x4000105	       310	menu.c	FUNCTION_5	CALL_7
0x4000105	    0x48837c241801	               cmp qword [rsp + 0x18], 1	       145	menu.c	FUNCTION_2
0x400010b	      0x418b44240c	              mov eax, dword [r12 + 0xc]	       311	menu.c	FUNCTION_5	CALL_8
0x4000110	            0x89c7	                            mov edi, eax	       311	menu.c	FUNCTION_5	CALL_8
0x4000112	        0x89442404	                mov dword [rsp + 4], eax	       311	menu.c	FUNCTION_5	CALL_8
0x4000116	            0x19c0	                            sbb eax, eax	       145	menu.c	FUNCTION_2
0x4000118	            0xf7d0	                                 not eax	       145	menu.c	FUNCTION_2
0x400011a	          0x83e006	                              and eax, 6	       157	menu.c	FUNCTION_2	IF_2
0x400011d	          0x83ff09	                              cmp edi, 9	       156	menu.c	FUNCTION_2	IF_2
0x4000120	     0xf87c1020000	                            ja 0x40003e7	       156	menu.c	FUNCTION_2	IF_2
0x4000126	      0x4189442414	             mov dword [r12 + 0x14], eax	       311	menu.c	FUNCTION_5	CALL_8
0x400012b	      0x418b548418	    mov edx, dword [r12 + rax*4 + 0x18] 	       318	menu.c	FUNCTION_5	CALL_9
0x4000130	      0x4d8d742448	                   lea r14, [r12 + 0x48]	       318	menu.c	FUNCTION_5	CALL_9
0x4000135	        0x8b442404	                mov eax, dword [rsp + 4]	       318	menu.c	FUNCTION_5	CALL_9
0x4000139	      0x4d8d442468	                    lea r8, [r12 + 0x68]	       318	menu.c	FUNCTION_5	CALL_9
0x400013e	      0xbfffffffff	                     mov edi, 0xffffffff	       206	menu.c	FUNCTION_4
0x4000143	    0x49bf1cc7711c	           movabs r15, 0x71c71c71c71c71c	       254	menu.c	FUNCTION_4	IF_6	CALL_3
0x400014d	        0x480fafc2	                           imul rax, rdx	       318	menu.c	FUNCTION_5	CALL_9
0x4000151	    0x480500100000	                         add rax, 0x1000	       318	menu.c	FUNCTION_5	CALL_9
0x4000157	        0x48c1e80d	                            shr rax, 0xd	       318	menu.c	FUNCTION_5	CALL_9
0x400015b	      0x4889442408	                mov qword [rsp + 8], rax	       318	menu.c	FUNCTION_5	CALL_9
0x4000160	      0x4189442410	             mov dword [r12 + 0x10], eax	       318	menu.c	FUNCTION_5	CALL_9
0x4000165	          0x4c89f6	                            mov rsi, r14	       318	menu.c	FUNCTION_5	CALL_9
0x4000168	          0x4c89f1	                            mov rcx, r14	       318	menu.c	FUNCTION_5	CALL_9
0x400016b	          0x4531db	                          xor r11d, r11d	       318	menu.c	FUNCTION_5	CALL_9
0x400016e	          0x4531c9	                            xor r9d, r9d	       318	menu.c	FUNCTION_5	CALL_9
0x4000171	          0x4531d2	                          xor r10d, r10d	       318	menu.c	FUNCTION_5	CALL_9
0x4000174	            0x8b01	                    mov eax, dword [rcx]	       215	menu.c	FUNCTION_4	FOR_1
0x4000176	            0x39f8	                            cmp eax, edi	       216	menu.c	FUNCTION_4	FOR_1	IF_1
0x4000178	            0x7710	                            ja 0x400018a	       216	menu.c	FUNCTION_4	FOR_1	IF_1
0x400017a	            0x89c2	                            mov edx, eax	       217	menu.c	FUNCTION_4	FOR_1	IF_1
0x400017c	        0x4183c101	                              add r9d, 1	       218	menu.c	FUNCTION_4	FOR_1	IF_1
0x4000180	          0x4901d2	                            add r10, rdx	       217	menu.c	FUNCTION_4	FOR_1	IF_1
0x4000183	          0x4139c3	                           cmp r11d, eax	       217	menu.c	FUNCTION_4	FOR_1	IF_1
0x4000186	        0x440f42d8	                         cmovb r11d, eax	       217	menu.c	FUNCTION_4	FOR_1	IF_1
0x400018a	        0x4883c104	                              add rcx, 4	       217	menu.c	FUNCTION_4	FOR_1	IF_1
0x400018e	          0x4c39c1	                             cmp rcx, r8	       214	menu.c	FUNCTION_4	FOR_1
0x4000191	            0x75e1	                           jne 0x4000174	       214	menu.c	FUNCTION_4	FOR_1
0x4000193	        0x4183f908	                              cmp r9d, 8	       223	menu.c	FUNCTION_4	IF_3
0x4000197	     0xf8486000000	                            je 0x4000223	       223	menu.c	FUNCTION_4	IF_3
0x400019d	          0x4c89d0	                            mov rax, r10	       226	menu.c	FUNCTION_4	CALL_1
0x40001a0	          0x4963c9	                         movsxd rcx, r9d	       226	menu.c	FUNCTION_4	CALL_1
0x40001a3	            0x31d2	                            xor edx, edx	       226	menu.c	FUNCTION_4	CALL_1
0x40001a5	          0x48f7f1	                                 div rcx	       226	menu.c	FUNCTION_4	CALL_1
0x40001a8	          0x4989c2	                            mov r10, rax	       226	menu.c	FUNCTION_4	CALL_1
0x40001ab	            0x31c0	                            xor eax, eax	       226	menu.c	FUNCTION_4	CALL_1
0x40001ad	          0x4489d2	                           mov edx, r10d	       233	menu.c	FUNCTION_4	FOR_2	IF_4
0x40001b0	            0x8b0e	                    mov ecx, dword [rsi]	       231	menu.c	FUNCTION_4	FOR_2
0x40001b2	            0x39cf	                            cmp edi, ecx	       232	menu.c	FUNCTION_4	FOR_2	IF_4
0x40001b4	            0x720a	                            jb 0x40001c0	       232	menu.c	FUNCTION_4	FOR_2	IF_4
0x40001b6	          0x4829d1	                            sub rcx, rdx	       233	menu.c	FUNCTION_4	FOR_2	IF_4
0x40001b9	        0x480fafc9	                           imul rcx, rcx	       234	menu.c	FUNCTION_4	FOR_2	IF_4
0x40001bd	          0x4801c8	                            add rax, rcx	       234	menu.c	FUNCTION_4	FOR_2	IF_4
0x40001c0	        0x4883c604	                              add rsi, 4	       234	menu.c	FUNCTION_4	FOR_2	IF_4
0x40001c4	          0x4939f0	                             cmp r8, rsi	       230	menu.c	FUNCTION_4	FOR_2
0x40001c7	            0x75e7	                           jne 0x40001b0	       230	menu.c	FUNCTION_4	FOR_2
0x40001c9	        0x4183f908	                              cmp r9d, 8	       237	menu.c	FUNCTION_4	IF_5
0x40001cd	            0x7449	                            je 0x4000218	       237	menu.c	FUNCTION_4	IF_5
0x40001cf	            0x31d2	                            xor edx, edx	       240	menu.c	FUNCTION_4	CALL_2
0x40001d1	          0x4963c9	                         movsxd rcx, r9d	       240	menu.c	FUNCTION_4	CALL_2
0x40001d4	          0x48f7f1	                                 div rcx	       240	menu.c	FUNCTION_4	CALL_2
0x40001d7	          0x4c39f8	                            cmp rax, r15	       254	menu.c	FUNCTION_4	IF_6	CALL_3
0x40001da	            0x7729	                            ja 0x4000205	       254	menu.c	FUNCTION_4	IF_6	CALL_3
0x40001dc	          0x4489d2	                           mov edx, r10d	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001df	        0x488d0cc0	                  lea rcx, [rax + rax*8]	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001e3	        0x480fafd2	                           imul rdx, rdx	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001e7	        0x48c1e102	                              shl rcx, 2	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001eb	          0x4839ca	                            cmp rdx, rcx	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001ee	            0x760d	                           jbe 0x40001fd	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001f0	    0x428d148d0000	                         lea edx, [r9*4]	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001f8	          0x83fa17	                           cmp edx, 0x17	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001fb	            0x7732	                            ja 0x400022f	       255	menu.c	FUNCTION_4	IF_6	IF_7
0x40001fd	    0x483d90010000	                          cmp rax, 0x190	       256	menu.c	FUNCTION_4	IF_6	IF_7
0x4000203	            0x762a	                           jbe 0x400022f	       256	menu.c	FUNCTION_4	IF_6	IF_7
0x4000205	        0x41c1e102	                              shl r9d, 2	       270	menu.c	FUNCTION_4	IF_8
0x4000209	        0x4183f918	                           cmp r9d, 0x18	       270	menu.c	FUNCTION_4	IF_8
0x400020d	            0x761a	                           jbe 0x4000229	       270	menu.c	FUNCTION_4	IF_8
0x400020f	        0x418d7bff	                      lea edi, [r11 - 1]	       273	menu.c	FUNCTION_4
0x4000213	      0xe94dffffff	                           jmp 0x4000165	       273	menu.c	FUNCTION_4
0x4000218	        0x48c1e803	                              shr rax, 3	       238	menu.c	FUNCTION_4	IF_5
0x400021c	          0x4c39f8	                            cmp rax, r15	       254	menu.c	FUNCTION_4	IF_6	CALL_3
0x400021f	            0x76bb	                           jbe 0x40001dc	       254	menu.c	FUNCTION_4	IF_6	CALL_3
0x4000221	            0xebec	                           jmp 0x400020f	       254	menu.c	FUNCTION_4	IF_6	CALL_3
0x4000223	        0x49c1ea03	                              shr r10, 3	       224	menu.c	FUNCTION_4	IF_3
0x4000227	            0xeb82	                           jmp 0x40001ab	       224	menu.c	FUNCTION_4	IF_3
0x4000229	    0x41baffffffff	                    mov r10d, 0xffffffff	       271	menu.c	FUNCTION_4	IF_8
0x400022f	        0x8b7c2404	                mov edi, dword [rsp + 4]	       271	menu.c	FUNCTION_4	IF_8
0x4000233	      0x488b742408	                mov rsi, qword [rsp + 8]	       271	menu.c	FUNCTION_4	IF_8
0x4000238	            0x39f7	                            cmp edi, esi	       271	menu.c	FUNCTION_4	IF_8
0x400023a	            0x89f0	                            mov eax, esi	       271	menu.c	FUNCTION_4	IF_8
0x400023c	           0xf46c7	                         cmovbe eax, edi	       271	menu.c	FUNCTION_4	IF_8
0x400023f	          0x4531f6	                          xor r14d, r14d	       325	menu.c	FUNCTION_5
0x4000242	        0xf6434801	               test byte [rbx + 0x48], 1	       326	menu.c	FUNCTION_5	IF_3
0x4000246	            0x7435	                            je 0x400027d	       326	menu.c	FUNCTION_5	IF_3
0x4000248	    0x83bbb4000000	           cmp dword [rbx + 0xb4], 0x14 	       336	menu.c	FUNCTION_5	IF_3	IF_4
0x400024f	      0xba14000000	                           mov edx, 0x14	       336	menu.c	FUNCTION_5	IF_3	IF_4
0x4000254	     0xf4393b40000	          cmovae edx, dword [rbx + 0xb4]	       336	menu.c	FUNCTION_5	IF_3	IF_4
0x400025b	            0x39d7	                            cmp edi, edx	       336	menu.c	FUNCTION_5	IF_3	IF_4
0x400025d	            0x761e	                           jbe 0x400027d	       336	menu.c	FUNCTION_5	IF_3	IF_4
0x400025f	    0x4439abac0000	           cmp dword [rbx + 0xac], r13d 	       336	menu.c	FUNCTION_5	IF_3	IF_4
0x4000266	            0x7315	                           jae 0x400027d	       336	menu.c	FUNCTION_5	IF_3	IF_4
0x4000268	    0x80bbb8000000	                cmp byte [rbx + 0xb8], 0	       337	menu.c	FUNCTION_5	IF_3	IF_4
0x400026f	            0x750c	                           jne 0x400027d	       337	menu.c	FUNCTION_5	IF_3	IF_4
0x4000271	          0x4531f6	                          xor r14d, r14d	       325	menu.c	FUNCTION_5
0x4000274	      0x48837d3800	               cmp qword [rbp + 0x38], 0	       325	menu.c	FUNCTION_5
0x4000279	        0x410f94c6	                               sete r14b	       325	menu.c	FUNCTION_5
0x400027d	          0x4439d0	                           cmp eax, r10d	       345	menu.c	FUNCTION_5	CALL_13
0x4000280	        0x440f46d0	                        cmovbe r10d, eax	       345	menu.c	FUNCTION_5	CALL_13
0x4000284	      0x4589542410	            mov dword [r12 + 0x10], r10d	       345	menu.c	FUNCTION_5	CALL_13
0x4000289	      0xe800000000	                          call 0x400028e	       347	menu.c	FUNCTION_5	IF_5	CALL_14
0x400028e	            0x84c0	                             test al, al	       347	menu.c	FUNCTION_5	IF_5	CALL_14
0x4000290	      0x418b742410	            mov esi, dword [r12 + 0x10] 	       357	menu.c	FUNCTION_5	IF_5	IF_6
0x4000295	     0xf8506010000	                           jne 0x40003a1	       347	menu.c	FUNCTION_5	IF_5	CALL_14
0x400029b	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002a0	          0x4889c8	                            mov rax, rcx	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002a3	      0x25ff070000	                          and eax, 0x7ff	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002a8	        0x488d0480	                  lea rax, [rax + rax*4]	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002ac	        0x488d1480	                  lea rdx, [rax + rax*4]	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002b0	          0x4889d0	                            mov rax, rdx	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002b3	    0x48bacdcccccc	          movabs rdx, 0xcccccccccccccccd	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002bd	        0x48c1e809	                              shr rax, 9	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002c1	          0x48f7e2	                                 mul rdx	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002c4	          0x4889c8	                            mov rax, rcx	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002c7	        0x48c1e80b	                            shr rax, 0xb	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002cb	          0x8d0480	                  lea eax, [rax + rax*4]	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002ce	        0x48c1ea03	                              shr rdx, 3	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002d2	          0x8d1442	                  lea edx, [rdx + rax*2]	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002d5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002da	          0x8d0480	                  lea eax, [rax + rax*4]	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002dd	             0x1c0	                            add eax, eax	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002df	        0x8d4c5001	              lea ecx, [rax + rdx*2 + 1]	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002e3	            0x31d2	                            xor edx, edx	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002e5	            0x89f0	                            mov eax, esi	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002e7	            0xf7f1	                                 div ecx	       365	menu.c	FUNCTION_5	ELSE_1	CALL_17
0x40002e9	          0x4439e8	                           cmp eax, r13d	       366	menu.c	FUNCTION_5	ELSE_1	IF_7
0x40002ec	        0x440f42e8	                         cmovb r13d, eax	       367	menu.c	FUNCTION_5	ELSE_1	IF_7
0x40002f0	    0x8b83d8030000	           mov eax, dword [rbx + 0x3d8] 	       376	menu.c	FUNCTION_5	FOR_1
0x40002f6	          0x4139c6	                           cmp r14d, eax	       376	menu.c	FUNCTION_5	FOR_1
0x40002f9	     0xf8da8020000	                           jge 0x40005a7	       376	menu.c	FUNCTION_5	FOR_1
0x40002ff	    0x41bfffffffff	                    mov r15d, 0xffffffff	       376	menu.c	FUNCTION_5	FOR_1
0x4000305	          0x4963ce	                        movsxd rcx, r14d	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x4000308	        0x488d1449	                  lea rdx, [rcx + rcx*2]	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x400030c	        0x48c1e205	                              shl rdx, 5	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x4000310	          0x4801da	                            add rdx, rbx	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x4000313	        0x807a5800	                cmp byte [rdx + 0x58], 0	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x4000317	            0x7526	                           jne 0x400033f	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x4000319	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x400031d	    0x48837ccd1000	       cmp qword [rbp + rcx*8 + 0x10], 0	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x4000323	            0x751a	                           jne 0x400033f	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x4000325	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x4000329	        0x450f44fe	                        cmove r15d, r14d	       380	menu.c	FUNCTION_5	FOR_1	IF_8
0x400032d	          0x397254	            cmp dword [rdx + 0x54], esi 	       384	menu.c	FUNCTION_5	FOR_1	IF_10
0x4000330	            0x7716	                            ja 0x4000348	       384	menu.c	FUNCTION_5	FOR_1	IF_10
0x4000332	        0x44396a4c	           cmp dword [rdx + 0x4c], r13d 	       386	menu.c	FUNCTION_5	FOR_1	IF_11
0x4000336	     0xf8740020000	                            ja 0x400057c	       386	menu.c	FUNCTION_5	FOR_1	IF_11
0x400033c	          0x4589f7	                          mov r15d, r14d	       386	menu.c	FUNCTION_5	FOR_1	IF_11
0x400033f	        0x4183c601	                             add r14d, 1	       376	menu.c	FUNCTION_5	FOR_1
0x4000343	          0x4139c6	                           cmp r14d, eax	       376	menu.c	FUNCTION_5	FOR_1
0x4000346	            0x75bd	                           jne 0x4000305	       376	menu.c	FUNCTION_5	FOR_1
0x4000348	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	       400	menu.c	FUNCTION_5	IF_12
0x400034c	      0xb800000000	                              mov eax, 0	       400	menu.c	FUNCTION_5	IF_12
0x4000351	        0x440f44f8	                         cmove r15d, eax	       400	menu.c	FUNCTION_5	IF_12
0x4000355	    0x81fee7030000	                          cmp esi, 0x3e7	       406	menu.c	FUNCTION_5	IF_13
0x400035b	     0xf8697000000	                           jbe 0x40003f8	       406	menu.c	FUNCTION_5	IF_13
0x4000361	          0x4963c7	                        movsxd rax, r15d	       406	menu.c	FUNCTION_5	IF_13
0x4000364	        0x488d0440	                  lea rax, [rax + rax*2]	       406	menu.c	FUNCTION_5	IF_13
0x4000368	        0x48c1e005	                              shl rax, 5	       406	menu.c	FUNCTION_5	IF_13
0x400036c	      0xf644034801	        test byte [rbx + rax + 0x48], 1 	       406	menu.c	FUNCTION_5	IF_13
0x4000371	     0xf8581000000	                           jne 0x40003f8	       406	menu.c	FUNCTION_5	IF_13
0x4000377	        0x45893c24	                   mov dword [r12], r15d	       432	menu.c	FUNCTION_5
0x400037b	          0x4489f8	                           mov eax, r15d	       434	menu.c	FUNCTION_5
0x400037e	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       435	menu.c	FUNCTION_5
0x4000383	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       435	menu.c	FUNCTION_5
0x400038c	     0xf851d020000	                           jne 0x40005af	       435	menu.c	FUNCTION_5
0x4000392	        0x4883c438	                           add rsp, 0x38	       435	menu.c	FUNCTION_5
0x4000396	              0x5b	                                 pop rbx	       435	menu.c	FUNCTION_5
0x4000397	              0x5d	                                 pop rbp	       435	menu.c	FUNCTION_5
0x4000398	            0x415c	                                 pop r12	       435	menu.c	FUNCTION_5
0x400039a	            0x415d	                                 pop r13	       435	menu.c	FUNCTION_5
0x400039c	            0x415e	                                 pop r14	       435	menu.c	FUNCTION_5
0x400039e	            0x415f	                                 pop r15	       435	menu.c	FUNCTION_5
0x40003a0	              0xc3	                                     ret	       435	menu.c	FUNCTION_5
0x40003a1	    0x81fee7030000	                          cmp esi, 0x3e7	       357	menu.c	FUNCTION_5	IF_5	IF_6
0x40003a7	     0xf8743ffffff	                            ja 0x40002f0	       357	menu.c	FUNCTION_5	IF_5	IF_6
0x40003ad	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003b2	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003bc	      0xbee8030000	                          mov esi, 0x3e8	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003c1	          0x4889c8	                            mov rax, rcx	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003c4	        0x48c1f93f	                           sar rcx, 0x3f	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003c8	          0x48f7ea	                                imul rdx	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003cb	          0x4889d0	                            mov rax, rdx	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003ce	        0x48c1f807	                              sar rax, 7	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003d2	          0x4829c8	                            sub rax, rcx	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003d5	      0x3de8030000	                          cmp eax, 0x3e8	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003da	           0xf46f0	                         cmovbe esi, eax	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003dd	      0x4189742410	             mov dword [r12 + 0x10], esi	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003e2	      0xe909ffffff	                           jmp 0x40002f0	       358	menu.c	FUNCTION_5	IF_5	IF_6	CALL_15
0x40003e7	          0x83ff63	                           cmp edi, 0x63	       158	menu.c	FUNCTION_2	IF_3
0x40003ea	     0xf8751010000	                            ja 0x4000541	       158	menu.c	FUNCTION_2	IF_3
0x40003f0	          0x83c001	                              add eax, 1	       159	menu.c	FUNCTION_2	IF_3
0x40003f3	      0xe92efdffff	                           jmp 0x4000126	       159	menu.c	FUNCTION_2	IF_3
0x40003f8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       410	menu.c	FUNCTION_5	IF_13
0x40003fd	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x4000402	          0xc60000	                       mov byte [rax], 0	       410	menu.c	FUNCTION_5	IF_13
0x4000405	      0xe800000000	                          call 0x400040a	       412	menu.c	FUNCTION_5	IF_13	IF_14	CALL_19
0x400040a	          0x4585ff	                         test r15d, r15d	       412	menu.c	FUNCTION_5	IF_13	IF_14	CALL_19
0x400040d	           0xf9fc2	                                 setg dl	       412	menu.c	FUNCTION_5	IF_13	IF_14	CALL_19
0x4000410	            0x38c2	                              cmp dl, al	       412	menu.c	FUNCTION_5	IF_13	IF_14	CALL_19
0x4000412	     0xf865fffffff	                           jbe 0x4000377	       412	menu.c	FUNCTION_5	IF_13	IF_14	CALL_19
0x4000418	          0x4c89e8	                            mov rax, r13	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x400041b	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x4000425	        0x49c1fd3f	                           sar r13, 0x3f	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x4000429	          0x48f7ea	                                imul rdx	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x400042c	          0x4889d0	                            mov rax, rdx	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x400042f	          0x4963d7	                        movsxd rdx, r15d	       413	menu.c	FUNCTION_5	IF_13	IF_14
0x4000432	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       413	menu.c	FUNCTION_5	IF_13	IF_14
0x4000436	        0x48c1f807	                              sar rax, 7	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x400043a	          0x4c29e8	                            sub rax, r13	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x400043d	        0x48c1e205	                              shl rdx, 5	       413	menu.c	FUNCTION_5	IF_13	IF_14
0x4000441	            0x89c6	                            mov esi, eax	       408	menu.c	FUNCTION_5	IF_13	CALL_18
0x4000443	        0x39441354	      cmp dword [rbx + rdx + 0x54], eax 	       412	menu.c	FUNCTION_5	IF_13	IF_14	CALL_19
0x4000447	     0xf862affffff	                           jbe 0x4000377	       412	menu.c	FUNCTION_5	IF_13	IF_14	CALL_19
0x400044d	        0x418d57ff	                      lea edx, [r15 - 1]	       420	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2
0x4000451	          0x4863ca	                         movsxd rcx, edx	       421	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x4000454	        0x488d0449	                  lea rax, [rcx + rcx*2]	       421	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x4000458	        0x48c1e005	                              shl rax, 5	       421	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x400045c	          0x4801d8	                            add rax, rbx	       421	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x400045f	        0x80785800	                cmp byte [rax + 0x58], 0	       421	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x4000463	            0x7518	                           jne 0x400047d	       421	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x4000465	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	       422	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x4000469	    0x48837ccd1000	       cmp qword [rbp + rcx*8 + 0x10], 0	       421	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x400046f	            0x750c	                           jne 0x400047d	       421	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_15
0x4000471	          0x3b7054	            cmp esi, dword [rax + 0x54] 	       426	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_16
0x4000474	          0x4189d7	                           mov r15d, edx	       426	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_16
0x4000477	     0xf83fafeffff	                           jae 0x4000377	       426	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2	IF_16
0x400047d	          0x83ea01	                              sub edx, 1	       420	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2
0x4000480	          0x83faff	             cmp edx, 0xffffffffffffffff	       420	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2
0x4000483	            0x75cc	                           jne 0x4000451	       420	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2
0x4000485	      0xe9edfeffff	                           jmp 0x4000377	       420	menu.c	FUNCTION_5	IF_13	IF_14	FOR_2
0x400048a	          0x4c89f1	                            mov rcx, r14	       461	menu.c	FUNCTION_7	CALL_1
0x400048d	    0x6548030d0000	          add rcx, qword gs:[0x04000495]	       461	menu.c	FUNCTION_7	CALL_1
0x4000495	          0x8b4108	                mov eax, dword [rcx + 8]	       482	menu.c	FUNCTION_7	IF_1
0x4000498	        0x448b410c	              mov r8d, dword [rcx + 0xc]	       482	menu.c	FUNCTION_7	IF_1
0x400049c	            0x85c0	                           test eax, eax	       482	menu.c	FUNCTION_7	IF_1
0x400049e	     0xf85b9000000	                           jne 0x400055d	       482	menu.c	FUNCTION_7	IF_1
0x40004a4	          0x486301	                 movsxd rax, dword [rcx]	       498	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004a7	          0x8b5508	                mov edx, dword [rbp + 8]	       495	menu.c	FUNCTION_7	ELSE_1	CALL_2
0x40004aa	            0x89d6	                            mov esi, edx	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004ac	        0x488d0440	                  lea rax, [rax + rax*2]	       498	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004b0	        0x48c1e005	                              shl rax, 5	       498	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004b4	        0x8b44034c	      mov eax, dword [rbx + rax + 0x4c] 	       498	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004b8	          0x8d3c00	                    lea edi, [rax + rax]	       498	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004bb	            0x29c6	                            sub esi, eax	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004bd	            0x89d0	                            mov eax, edx	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004bf	            0xd1e8	                              shr eax, 1	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004c1	            0x39fa	                            cmp edx, edi	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004c3	           0xf46f0	                         cmovbe esi, eax	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004c6	          0x8b4114	            mov eax, dword [rcx + 0x14] 	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004c9	          0x4439c6	                            cmp esi, r8d	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004cc	        0x410f47f0	                          cmova esi, r8d	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004d0	        0x4c8d0c81	                   lea r9, [rcx + rax*4]	       499	menu.c	FUNCTION_7	ELSE_1	IF_2
0x40004d4	        0x418b4118	              mov eax, dword [r9 + 0x18]	       509	menu.c	FUNCTION_7
0x40004d8	            0x89c2	                            mov edx, eax	       510	menu.c	FUNCTION_7
0x40004da	          0xc1ea03	                              shr edx, 3	       510	menu.c	FUNCTION_7
0x40004dd	            0x29d0	                            sub eax, edx	       510	menu.c	FUNCTION_7
0x40004df	    0x81fe4fc30000	                         cmp esi, 0xc34f	       512	menu.c	FUNCTION_7	IF_4
0x40004e5	            0x89c7	                            mov edi, eax	       510	menu.c	FUNCTION_7
0x40004e7	            0x7713	                            ja 0x40004fc	       512	menu.c	FUNCTION_7	IF_4
0x40004e9	          0x4585c0	                           test r8d, r8d	       512	menu.c	FUNCTION_7	IF_4
0x40004ec	            0x740e	                            je 0x40004fc	       512	menu.c	FUNCTION_7	IF_4
0x40004ee	            0x89f0	                            mov eax, esi	       513	menu.c	FUNCTION_7	IF_4
0x40004f0	            0x31d2	                            xor edx, edx	       513	menu.c	FUNCTION_7	IF_4
0x40004f2	          0xc1e00a	                            shl eax, 0xa	       513	menu.c	FUNCTION_7	IF_4
0x40004f5	          0x41f7f0	                                 div r8d	       513	menu.c	FUNCTION_7	IF_4
0x40004f8	             0x1f8	                            add eax, edi	       513	menu.c	FUNCTION_7	IF_4
0x40004fa	            0xeb06	                           jmp 0x4000502	       513	menu.c	FUNCTION_7	IF_4
0x40004fc	    0x8d8700040000	                  lea eax, [rdi + 0x400]	       519	menu.c	FUNCTION_7	ELSE_3
0x4000502	        0x41894118	              mov dword [r9 + 0x18], eax	       530	menu.c	FUNCTION_7
0x4000506	        0x48634168	         movsxd rax, dword [rcx + 0x68] 	       533	menu.c	FUNCTION_7
0x400050a	          0x8d5001	                      lea edx, [rax + 1]	       533	menu.c	FUNCTION_7
0x400050d	          0x83fa07	                              cmp edx, 7	       534	menu.c	FUNCTION_7	IF_6
0x4000510	          0x895168	             mov dword [rcx + 0x68], edx	       533	menu.c	FUNCTION_7
0x4000513	        0x89748148	     mov dword [rcx + rax*4 + 0x48], esi	       533	menu.c	FUNCTION_7
0x4000517	            0x7607	                           jbe 0x4000520	       534	menu.c	FUNCTION_7	IF_6
0x4000519	    0xc74168000000	               mov dword [rcx + 0x68], 0	       535	menu.c	FUNCTION_7	IF_6
0x4000520	          0x4585ed	                         test r13d, r13d	       302	menu.c	FUNCTION_5	IF_2	CALL_4
0x4000523	    0x41c744240400	                  mov dword [r12 + 4], 0	       298	menu.c	FUNCTION_5	IF_1
0x400052c	     0xf859afbffff	                           jne 0x40000cc	       302	menu.c	FUNCTION_5	IF_2	CALL_4
0x4000532	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       303	menu.c	FUNCTION_5	IF_2
0x4000537	          0xc60000	                       mov byte [rax], 0	       303	menu.c	FUNCTION_5	IF_2
0x400053a	            0x31c0	                            xor eax, eax	       304	menu.c	FUNCTION_5	IF_2
0x400053c	      0xe93dfeffff	                           jmp 0x400037e	       304	menu.c	FUNCTION_5	IF_2
0x4000541	    0x817c2404e703	              cmp dword [rsp + 4], 0x3e7	       160	menu.c	FUNCTION_2	IF_4
0x4000549	            0x7629	                           jbe 0x4000574	       160	menu.c	FUNCTION_2	IF_4
0x400054b	    0x817c24040f27	            cmp dword [rsp + 4], 0x270f 	       162	menu.c	FUNCTION_2	IF_5
0x4000553	            0x773b	                            ja 0x4000590	       162	menu.c	FUNCTION_2	IF_5
0x4000555	          0x83c003	                              add eax, 3	       163	menu.c	FUNCTION_2	IF_5
0x4000558	      0xe9c9fbffff	                           jmp 0x4000126	       163	menu.c	FUNCTION_2	IF_5
0x400055d	    0x4181f8e80300	                          cmp r8d, 0x3e8	       482	menu.c	FUNCTION_7	IF_1
0x4000564	      0xbec8af0000	                         mov esi, 0xafc8	       492	menu.c	FUNCTION_7	IF_1
0x4000569	     0xf8757ffffff	                            ja 0x40004c6	       482	menu.c	FUNCTION_7	IF_1
0x400056f	      0xe930ffffff	                           jmp 0x40004a4	       482	menu.c	FUNCTION_7	IF_1
0x4000574	          0x83c002	                              add eax, 2	       161	menu.c	FUNCTION_2	IF_4
0x4000577	      0xe9aafbffff	                           jmp 0x4000126	       161	menu.c	FUNCTION_2	IF_4
0x400057c	          0x4963c7	                        movsxd rax, r15d	       393	menu.c	FUNCTION_5	FOR_1	IF_11
0x400057f	        0x488d0440	                  lea rax, [rax + rax*2]	       393	menu.c	FUNCTION_5	FOR_1	IF_11
0x4000583	        0x48c1e005	                              shl rax, 5	       393	menu.c	FUNCTION_5	FOR_1	IF_11
0x4000587	        0x8b740354	      mov esi, dword [rbx + rax + 0x54] 	       393	menu.c	FUNCTION_5	FOR_1	IF_11
0x400058b	      0xe9b8fdffff	                           jmp 0x4000348	       394	menu.c	FUNCTION_5	FOR_1	IF_11
0x4000590	          0x8d5004	                      lea edx, [rax + 4]	       165	menu.c	FUNCTION_2	IF_6
0x4000593	          0x83c005	                              add eax, 5	       165	menu.c	FUNCTION_2	IF_6
0x4000596	    0x817c24049f86	           cmp dword [rsp + 4], 0x1869f 	       165	menu.c	FUNCTION_2	IF_6
0x400059e	        0x480f46c2	                         cmovbe rax, rdx	       165	menu.c	FUNCTION_2	IF_6
0x40005a2	      0xe97ffbffff	                           jmp 0x4000126	       165	menu.c	FUNCTION_2	IF_6
0x40005a7	          0x4531ff	                          xor r15d, r15d	       400	menu.c	FUNCTION_5	IF_12
0x40005aa	      0xe9a6fdffff	                           jmp 0x4000355	       400	menu.c	FUNCTION_5	IF_12
0x40005af	      0xe800000000	                          call 0x40005b4	       435	menu.c	FUNCTION_5
