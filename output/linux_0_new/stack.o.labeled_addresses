fsstack_copy_attr_all	IF,0:SWITCH,0:functions,0:DO,0:ELSE,0:WHILE,0:CALL,1:FOR,0	31
0x4000060	              0x55	                                push rbp	        64	stack.c	FUNCTION_2
0x4000061	          0x4889e5	                            mov rbp, rsp	        64	stack.c	FUNCTION_2
0x4000064	            0x4155	                                push r13	        64	stack.c	FUNCTION_2
0x4000066	           0xfb706	                   movzx eax, word [rsi]	        65	stack.c	FUNCTION_2
0x4000069	            0x415d	                                 pop r13	        75	stack.c	FUNCTION_2
0x400006b	              0x5d	                                 pop rbp	        75	stack.c	FUNCTION_2
0x400006c	          0x668907	                      mov word [rdi], ax	        65	stack.c	FUNCTION_2
0x400006f	          0x8b4604	                mov eax, dword [rsi + 4]	        66	stack.c	FUNCTION_2
0x4000072	          0x894704	                mov dword [rdi + 4], eax	        66	stack.c	FUNCTION_2
0x4000075	          0x8b4608	                mov eax, dword [rsi + 8]	        67	stack.c	FUNCTION_2
0x4000078	          0x894708	                mov dword [rdi + 8], eax	        67	stack.c	FUNCTION_2
0x400007b	          0x8b464c	            mov eax, dword [rsi + 0x4c] 	        68	stack.c	FUNCTION_2
0x400007e	          0x89474c	             mov dword [rdi + 0x4c], eax	        68	stack.c	FUNCTION_2
0x4000081	        0x488b4658	            mov rax, qword [rsi + 0x58] 	        69	stack.c	FUNCTION_2
0x4000085	        0x488b5660	            mov rdx, qword [rsi + 0x60] 	        69	stack.c	FUNCTION_2
0x4000089	        0x48894758	             mov qword [rdi + 0x58], rax	        69	stack.c	FUNCTION_2
0x400008d	        0x48895760	             mov qword [rdi + 0x60], rdx	        69	stack.c	FUNCTION_2
0x4000091	        0x488b4668	            mov rax, qword [rsi + 0x68] 	        70	stack.c	FUNCTION_2
0x4000095	        0x488b5670	            mov rdx, qword [rsi + 0x70] 	        70	stack.c	FUNCTION_2
0x4000099	        0x48894768	             mov qword [rdi + 0x68], rax	        70	stack.c	FUNCTION_2
0x400009d	        0x48895770	             mov qword [rdi + 0x70], rdx	        70	stack.c	FUNCTION_2
0x40000a1	        0x488b4678	            mov rax, qword [rsi + 0x78] 	        71	stack.c	FUNCTION_2
0x40000a5	    0x488b96800000	            mov rdx, qword [rsi + 0x80] 	        71	stack.c	FUNCTION_2
0x40000ac	        0x48894778	             mov qword [rdi + 0x78], rax	        71	stack.c	FUNCTION_2
0x40000b0	    0x488997800000	             mov qword [rdi + 0x80], rdx	        71	stack.c	FUNCTION_2
0x40000b7	    0x8b8690000000	            mov eax, dword [rsi + 0x90] 	        72	stack.c	FUNCTION_2
0x40000bd	    0x898790000000	             mov dword [rdi + 0x90], eax	        72	stack.c	FUNCTION_2
0x40000c3	          0x8b460c	              mov eax, dword [rsi + 0xc]	        73	stack.c	FUNCTION_2
0x40000c6	          0x89470c	              mov dword [rdi + 0xc], eax	        73	stack.c	FUNCTION_2
0x40000c9	          0x8b7648	            mov esi, dword [rsi + 0x48] 	        74	stack.c	FUNCTION_2	CALL_1
0x40000cc	      0xe900000000	                   jmp section_end..text	        74	stack.c	FUNCTION_2	CALL_1
