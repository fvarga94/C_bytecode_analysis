udplite4_proc_exit_net	SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:CALL,1	3
0x40000b0	    0x488bb7880000	            mov rsi, qword [rdi + 0x88] 	        92	udplite.c	FUNCTION_4	CALL_1
0x40000b7	    0x48c7c7000000	                              mov rdi, 0	        92	udplite.c	FUNCTION_4	CALL_1
0x40000be	      0xe900000000	                           jmp 0x40000c3	        92	udplite.c	FUNCTION_4	CALL_1
udplite_err	SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:CALL,1	2
0x4000080	    0x48c7c2000000	                              mov rdx, 0	        30	udplite.c	FUNCTION_2	CALL_1
0x4000087	      0xe900000000	                           jmp 0x400008c	        30	udplite.c	FUNCTION_2	CALL_1
udplite4_proc_init_net	SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,1:CALL,1	11
0x40000d0	    0x488b97880000	            mov rdx, qword [rdi + 0x88] 	        84	udplite.c	FUNCTION_3	IF_1	CALL_1
0x40000d7	    0x49c7c1000000	                               mov r9, 0	        84	udplite.c	FUNCTION_3	IF_1	CALL_1
0x40000de	    0x41b810000000	                           mov r8d, 0x10	        84	udplite.c	FUNCTION_3	IF_1	CALL_1
0x40000e4	    0x48c7c1000000	                              mov rcx, 0	        84	udplite.c	FUNCTION_3	IF_1	CALL_1
0x40000eb	      0xbe24010000	                          mov esi, 0x124	        84	udplite.c	FUNCTION_3	IF_1	CALL_1
0x40000f0	    0x48c7c7000000	                              mov rdi, 0	        84	udplite.c	FUNCTION_3	IF_1	CALL_1
0x40000f7	      0xe800000000	                          call 0x40000fc	        84	udplite.c	FUNCTION_3	IF_1	CALL_1
0x40000fc	        0x4883f801	                              cmp rax, 1	        87	udplite.c	FUNCTION_3
0x4000100	            0x19c0	                            sbb eax, eax	        87	udplite.c	FUNCTION_3
0x4000102	          0x83e0f4	                     and eax, 0xfffffff4	        87	udplite.c	FUNCTION_3
0x4000105	              0xc3	                                     ret	        88	udplite.c	FUNCTION_3
udplite_rcv	SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:CALL,1	3
0x4000090	      0xba88000000	                           mov edx, 0x88	        25	udplite.c	FUNCTION_1	CALL_1
0x4000095	    0x48c7c6000000	                              mov rsi, 0	        25	udplite.c	FUNCTION_1	CALL_1
0x400009c	      0xe900000000	                           jmp 0x40000a1	        25	udplite.c	FUNCTION_1	CALL_1
udplite_sk_init	SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:FOR,0:IF,0:CALL,2	7
0x4000050	              0x53	                                push rbx	        29	udplite.h	FUNCTION_9
0x4000051	          0x4889fb	                            mov rbx, rdi	        29	udplite.h	FUNCTION_9
0x4000054	      0xe800000000	                          call 0x4000059	        30	udplite.h	FUNCTION_9	CALL_1
0x4000059	    0xc68398030000	               mov byte [rbx + 0x398], 1	        31	udplite.h	FUNCTION_9	CALL_2
0x4000060	            0x31c0	                            xor eax, eax	        33	udplite.h	FUNCTION_9
0x4000062	              0x5b	                                 pop rbx	        33	udplite.h	FUNCTION_9
0x4000063	              0xc3	                                     ret	        33	udplite.h	FUNCTION_9
