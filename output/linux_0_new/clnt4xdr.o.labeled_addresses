nlm4_xdr_enc_testres	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,1:CALL,3	84
0x4000360	            0x4155	                                push r13	       490	clnt4xdr.c	FUNCTION_22
0x4000362	            0x4154	                                push r12	       490	clnt4xdr.c	FUNCTION_22
0x4000364	              0x55	                                push rbp	       490	clnt4xdr.c	FUNCTION_22
0x4000365	              0x53	                                push rbx	       490	clnt4xdr.c	FUNCTION_22
0x4000366	          0x4889d3	                            mov rbx, rdx	       490	clnt4xdr.c	FUNCTION_22
0x4000369	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x400036c	          0x4889f5	                            mov rbp, rsi	       490	clnt4xdr.c	FUNCTION_22
0x400036f	          0x4889de	                            mov rsi, rbx	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000372	          0x4889ef	                            mov rdi, rbp	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000375	      0xe8c6fcffff	                  call sym.encode_netobj	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x400037a	        0x448b6324	           mov r12d, dword [rbx + 0x24] 	       494	clnt4xdr.c	FUNCTION_22	CALL_2
0x400037e	          0x4489e0	                           mov eax, r12d	       228	clnt4xdr.c	FUNCTION_11	CALL_2
0x4000381	             0xfc8	                               bswap eax	       228	clnt4xdr.c	FUNCTION_11	CALL_2
0x4000383	          0x83f809	                              cmp eax, 9	       228	clnt4xdr.c	FUNCTION_11	CALL_2
0x4000386	     0xf871a010000	                            ja 0x40004a6	       228	clnt4xdr.c	FUNCTION_11	CALL_2
0x400038c	      0xbe04000000	                              mov esi, 4	       229	clnt4xdr.c	FUNCTION_11	CALL_3
0x4000391	          0x4889ef	                            mov rdi, rbp	       229	clnt4xdr.c	FUNCTION_11	CALL_3
0x4000394	      0xe800000000	                          call 0x4000399	       229	clnt4xdr.c	FUNCTION_11	CALL_3
0x4000399	          0x448920	                   mov dword [rax], r12d	       230	clnt4xdr.c	FUNCTION_11
0x400039c	        0x448b6324	           mov r12d, dword [rbx + 0x24] 	       495	clnt4xdr.c	FUNCTION_22	IF_1
0x40003a0	    0x4181fc000000	                     cmp r12d, 0x1000000	       495	clnt4xdr.c	FUNCTION_22	IF_1
0x40003a7	            0x7407	                            je 0x40003b0	       495	clnt4xdr.c	FUNCTION_22	IF_1
0x40003a9	              0x5b	                                 pop rbx	       497	clnt4xdr.c	FUNCTION_22
0x40003aa	              0x5d	                                 pop rbp	       497	clnt4xdr.c	FUNCTION_22
0x40003ab	            0x415c	                                 pop r12	       497	clnt4xdr.c	FUNCTION_22
0x40003ad	            0x415d	                                 pop r13	       497	clnt4xdr.c	FUNCTION_22
0x40003af	              0xc3	                                     ret	       497	clnt4xdr.c	FUNCTION_22
0x40003b0	    0x440fb6ab1401	         movzx r13d, byte [rbx + 0x114] 	       269	clnt4xdr.c	FUNCTION_13	CALL_1
0x40003b8	      0xbe04000000	                              mov esi, 4	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40003bd	          0x4889ef	                            mov rdi, rbp	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40003c0	      0xe800000000	                          call 0x40003c5	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40003c5	      0xba00000000	                              mov edx, 0	       105	clnt4xdr.c	FUNCTION_4
0x40003ca	      0xbe04000000	                              mov esi, 4	       112	clnt4xdr.c	FUNCTION_5	CALL_1
0x40003cf	          0x4889ef	                            mov rdi, rbp	       112	clnt4xdr.c	FUNCTION_5	CALL_1
0x40003d2	          0x4584ed	                         test r13b, r13b	       105	clnt4xdr.c	FUNCTION_4
0x40003d5	        0x440f45e2	                        cmovne r12d, edx	       105	clnt4xdr.c	FUNCTION_4
0x40003d9	          0x448920	                   mov dword [rax], r12d	       105	clnt4xdr.c	FUNCTION_4
0x40003dc	    0x448ba3c80000	           mov r12d, dword [rbx + 0xc8] 	       270	clnt4xdr.c	FUNCTION_13	CALL_2
0x40003e3	      0xe800000000	                          call 0x40003e8	       112	clnt4xdr.c	FUNCTION_5	CALL_1
0x40003e8	          0x4889ef	                            mov rdi, rbp	       271	clnt4xdr.c	FUNCTION_13	CALL_3
0x40003eb	          0x410fcc	                              bswap r12d	       113	clnt4xdr.c	FUNCTION_5	CALL_2
0x40003ee	          0x448920	                   mov dword [rax], r12d	       113	clnt4xdr.c	FUNCTION_5	CALL_2
0x40003f1	    0x8b93b8000000	            mov edx, dword [rbx + 0xb8] 	       271	clnt4xdr.c	FUNCTION_13	CALL_3
0x40003f7	    0x488bb3c00000	            mov rsi, qword [rbx + 0xc0] 	       271	clnt4xdr.c	FUNCTION_13	CALL_3
0x40003fe	      0xe83dfcffff	                  call sym.encode_netobj	       271	clnt4xdr.c	FUNCTION_13	CALL_3
0x4000403	      0xbe08000000	                              mov esi, 8	       273	clnt4xdr.c	FUNCTION_13	CALL_4
0x4000408	          0x4889ef	                            mov rdi, rbp	       273	clnt4xdr.c	FUNCTION_13	CALL_4
0x400040b	      0xe800000000	                          call 0x4000410	       273	clnt4xdr.c	FUNCTION_13	CALL_4
0x4000410	    0x488bb3400100	           mov rsi, qword [rbx + 0x140] 	        70	clnt4xdr.c	ELSE_2	FUNCTION_2	CALL_1
0x4000417	    0x48baffffffff	         movabs rdx, 0x7fffffffffffffff 	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000421	    0x48c7c17fffff	             mov rcx, 0xffffffffffffff7f	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000428	          0x4839d6	                            cmp rsi, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400042b	            0x7421	                            je 0x400044e	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400042d	    0x48ba02000000	          movabs rdx, 0x8000000000000002	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000437	    0x48b980000000	          movabs rcx, 0x100000000000080 	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000441	          0x4839d6	                            cmp rsi, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000444	          0x4889f2	                            mov rdx, rsi	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000447	          0x480fca	                               bswap rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400044a	        0x480f4dca	                         cmovge rcx, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400044e	    0x488b93480100	           mov rdx, qword [rbx + 0x148] 	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x4000455	    0x48bfffffffff	         movabs rdi, 0x7fffffffffffffff 	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x400045f	          0x4839fa	                            cmp rdx, rdi	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x4000462	            0x7447	                            je 0x40004ab	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x4000464	          0x4829f2	                            sub rdx, rsi	        74	clnt4xdr.c	ELSE_2	FUNCTION_2	CALL_2
0x4000467	    0x48c7c67fffff	             mov rsi, 0xffffffffffffff7f	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400046e	        0x4883c201	                              add rdx, 1	        74	clnt4xdr.c	ELSE_2	FUNCTION_2	CALL_2
0x4000472	          0x4839fa	                            cmp rdx, rdi	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000475	            0x7421	                            je 0x4000498	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000477	          0x4889d6	                            mov rsi, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400047a	    0x48bf02000000	          movabs rdi, 0x8000000000000002	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000484	          0x4839fa	                            cmp rdx, rdi	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000487	          0x480fce	                               bswap rsi	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400048a	    0x48ba80000000	          movabs rdx, 0x100000000000080 	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000494	        0x480f4cf2	                          cmovl rsi, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000498	          0x488908	                    mov qword [rax], rcx	        65	access_ok.h	FUNCTION_37	CALL_1
0x400049b	        0x48897008	                mov qword [rax + 8], rsi	        65	access_ok.h	FUNCTION_37	CALL_1
0x400049f	              0x5b	                                 pop rbx	       497	clnt4xdr.c	FUNCTION_22
0x40004a0	              0x5d	                                 pop rbp	       497	clnt4xdr.c	FUNCTION_22
0x40004a1	            0x415c	                                 pop r12	       497	clnt4xdr.c	FUNCTION_22
0x40004a3	            0x415d	                                 pop r13	       497	clnt4xdr.c	FUNCTION_22
0x40004a5	              0xc3	                                     ret	       497	clnt4xdr.c	FUNCTION_22
0x40004a6	      0xe8a5feffff	        call sym.encode_nlm4_stat.part.1	       497	clnt4xdr.c	FUNCTION_22
0x40004ab	            0x31f6	                            xor esi, esi	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x40004ad	            0xebe9	                           jmp 0x4000498	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
nlm4_xdr_enc_cancargs	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,0:CALL,4	36
0x40001b0	            0x4156	                                push r14	       431	clnt4xdr.c	FUNCTION_19
0x40001b2	        0x4c8d7228	                   lea r14, [rdx + 0x28]	       433	clnt4xdr.c	FUNCTION_19
0x40001b6	            0x4155	                                push r13	       431	clnt4xdr.c	FUNCTION_19
0x40001b8	            0x4154	                                push r12	       431	clnt4xdr.c	FUNCTION_19
0x40001ba	              0x55	                                push rbp	       431	clnt4xdr.c	FUNCTION_19
0x40001bb	          0x4889f5	                            mov rbp, rsi	       431	clnt4xdr.c	FUNCTION_19
0x40001be	              0x53	                                push rbx	       431	clnt4xdr.c	FUNCTION_19
0x40001bf	          0x4889d3	                            mov rbx, rdx	       431	clnt4xdr.c	FUNCTION_19
0x40001c2	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x40001c5	          0x4889de	                            mov rsi, rbx	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x40001c8	          0x4889ef	                            mov rdi, rbp	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x40001cb	    0x41bc00000001	                     mov r12d, 0x1000000	       105	clnt4xdr.c	FUNCTION_4
0x40001d1	      0xe86afeffff	                  call sym.encode_netobj	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x40001d6	    0x448bab980100	          mov r13d, dword [rbx + 0x198] 	       436	clnt4xdr.c	FUNCTION_19	CALL_2
0x40001dd	          0x4889ef	                            mov rdi, rbp	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40001e0	      0xbe04000000	                              mov esi, 4	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40001e5	      0xe800000000	                          call 0x40001ea	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40001ea	          0x4889ef	                            mov rdi, rbp	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40001ed	      0xbe04000000	                              mov esi, 4	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40001f2	          0x4585ed	                         test r13d, r13d	       105	clnt4xdr.c	FUNCTION_4
0x40001f5	        0x450f45ec	                       cmovne r13d, r12d	       105	clnt4xdr.c	FUNCTION_4
0x40001f9	          0x448928	                   mov dword [rax], r13d	       105	clnt4xdr.c	FUNCTION_4
0x40001fc	     0xfb69b140100	          movzx ebx, byte [rbx + 0x114] 	       437	clnt4xdr.c	FUNCTION_19	CALL_3
0x4000203	      0xe800000000	                          call 0x4000208	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x4000208	      0xba00000000	                              mov edx, 0	       105	clnt4xdr.c	FUNCTION_4
0x400020d	          0x4c89f6	                            mov rsi, r14	       438	clnt4xdr.c	FUNCTION_19	CALL_4
0x4000210	          0x4889ef	                            mov rdi, rbp	       438	clnt4xdr.c	FUNCTION_19	CALL_4
0x4000213	          0x80fb01	                               cmp bl, 1	       105	clnt4xdr.c	FUNCTION_4
0x4000216	        0x440f45e2	                        cmovne r12d, edx	       105	clnt4xdr.c	FUNCTION_4
0x400021a	          0x448920	                   mov dword [rax], r12d	       105	clnt4xdr.c	FUNCTION_4
0x400021d	              0x5b	                                 pop rbx	       439	clnt4xdr.c	FUNCTION_19
0x400021e	              0x5d	                                 pop rbp	       439	clnt4xdr.c	FUNCTION_19
0x400021f	            0x415c	                                 pop r12	       439	clnt4xdr.c	FUNCTION_19
0x4000221	            0x415d	                                 pop r13	       439	clnt4xdr.c	FUNCTION_19
0x4000223	            0x415e	                                 pop r14	       439	clnt4xdr.c	FUNCTION_19
0x4000225	      0xe936feffff	                jmp sym.encode_nlm4_lock	       438	clnt4xdr.c	FUNCTION_19	CALL_4
encode_netobj	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,0:CALL,2	12
0x4000040	              0x55	                                push rbp	       121	clnt4xdr.c	FUNCTION_6
0x4000041	          0x4889f5	                            mov rbp, rsi	       121	clnt4xdr.c	FUNCTION_6
0x4000044	              0x53	                                push rbx	       121	clnt4xdr.c	FUNCTION_6
0x4000045	          0x8d7204	                      lea esi, [rdx + 4]	       124	clnt4xdr.c	FUNCTION_6	CALL_1
0x4000048	            0x89d3	                            mov ebx, edx	       121	clnt4xdr.c	FUNCTION_6
0x400004a	      0xe800000000	                          call 0x400004f	       124	clnt4xdr.c	FUNCTION_6	CALL_1
0x400004f	            0x89da	                            mov edx, ebx	       125	clnt4xdr.c	FUNCTION_6	CALL_2
0x4000051	          0x4889ee	                            mov rsi, rbp	       125	clnt4xdr.c	FUNCTION_6	CALL_2
0x4000054	          0x4889c7	                            mov rdi, rax	       125	clnt4xdr.c	FUNCTION_6	CALL_2
0x4000057	              0x5b	                                 pop rbx	       126	clnt4xdr.c	FUNCTION_6
0x4000058	              0x5d	                                 pop rbp	       126	clnt4xdr.c	FUNCTION_6
0x4000059	      0xe900000000	                           jmp 0x400005e	       125	clnt4xdr.c	FUNCTION_6	CALL_2
nlm4_xdr_enc_testargs	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,0:CALL,3	25
0x40002f0	            0x4154	                                push r12	       386	clnt4xdr.c	FUNCTION_17
0x40002f2	        0x4c8d6228	                   lea r12, [rdx + 0x28]	       388	clnt4xdr.c	FUNCTION_17
0x40002f6	              0x55	                                push rbp	       386	clnt4xdr.c	FUNCTION_17
0x40002f7	              0x53	                                push rbx	       386	clnt4xdr.c	FUNCTION_17
0x40002f8	          0x4889d3	                            mov rbx, rdx	       386	clnt4xdr.c	FUNCTION_17
0x40002fb	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x40002fe	          0x4889f5	                            mov rbp, rsi	       386	clnt4xdr.c	FUNCTION_17
0x4000301	          0x4889de	                            mov rsi, rbx	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000304	          0x4889ef	                            mov rdi, rbp	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000307	      0xe834fdffff	                  call sym.encode_netobj	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x400030c	     0xfb69b140100	          movzx ebx, byte [rbx + 0x114] 	       391	clnt4xdr.c	FUNCTION_17	CALL_2
0x4000313	          0x4889ef	                            mov rdi, rbp	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x4000316	      0xbe04000000	                              mov esi, 4	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x400031b	      0xe800000000	                          call 0x4000320	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x4000320	      0xb900000000	                              mov ecx, 0	       105	clnt4xdr.c	FUNCTION_4
0x4000325	      0xba00000001	                      mov edx, 0x1000000	       105	clnt4xdr.c	FUNCTION_4
0x400032a	          0x4c89e6	                            mov rsi, r12	       392	clnt4xdr.c	FUNCTION_17	CALL_3
0x400032d	          0x4889ef	                            mov rdi, rbp	       392	clnt4xdr.c	FUNCTION_17	CALL_3
0x4000330	          0x80fb01	                               cmp bl, 1	       105	clnt4xdr.c	FUNCTION_4
0x4000333	           0xf45d1	                         cmovne edx, ecx	       105	clnt4xdr.c	FUNCTION_4
0x4000336	            0x8910	                    mov dword [rax], edx	       105	clnt4xdr.c	FUNCTION_4
0x4000338	              0x5b	                                 pop rbx	       393	clnt4xdr.c	FUNCTION_17
0x4000339	              0x5d	                                 pop rbp	       393	clnt4xdr.c	FUNCTION_17
0x400033a	            0x415c	                                 pop r12	       393	clnt4xdr.c	FUNCTION_17
0x400033c	      0xe91ffdffff	                jmp sym.encode_nlm4_lock	       392	clnt4xdr.c	FUNCTION_17	CALL_3
nlm4_xdr_enc_unlockargs	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,0:CALL,2	13
0x4000180	              0x55	                                push rbp	       450	clnt4xdr.c	FUNCTION_20
0x4000181	              0x53	                                push rbx	       450	clnt4xdr.c	FUNCTION_20
0x4000182	          0x4889d3	                            mov rbx, rdx	       450	clnt4xdr.c	FUNCTION_20
0x4000185	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000188	          0x4889f5	                            mov rbp, rsi	       450	clnt4xdr.c	FUNCTION_20
0x400018b	          0x4889de	                            mov rsi, rbx	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x400018e	          0x4889ef	                            mov rdi, rbp	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000191	      0xe8aafeffff	                  call sym.encode_netobj	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000196	        0x488d7328	                   lea rsi, [rbx + 0x28]	       452	clnt4xdr.c	FUNCTION_20
0x400019a	          0x4889ef	                            mov rdi, rbp	       455	clnt4xdr.c	FUNCTION_20	CALL_2
0x400019d	              0x5b	                                 pop rbx	       456	clnt4xdr.c	FUNCTION_20
0x400019e	              0x5d	                                 pop rbp	       456	clnt4xdr.c	FUNCTION_20
0x400019f	      0xe9bcfeffff	                jmp sym.encode_nlm4_lock	       455	clnt4xdr.c	FUNCTION_20	CALL_2
nlm4_xdr_enc_lockargs	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,0:CALL,6	50
0x4000230	            0x4156	                                push r14	       408	clnt4xdr.c	FUNCTION_18
0x4000232	        0x4c8d7228	                   lea r14, [rdx + 0x28]	       410	clnt4xdr.c	FUNCTION_18
0x4000236	            0x4155	                                push r13	       408	clnt4xdr.c	FUNCTION_18
0x4000238	            0x4154	                                push r12	       408	clnt4xdr.c	FUNCTION_18
0x400023a	              0x55	                                push rbp	       408	clnt4xdr.c	FUNCTION_18
0x400023b	          0x4889f5	                            mov rbp, rsi	       408	clnt4xdr.c	FUNCTION_18
0x400023e	              0x53	                                push rbx	       408	clnt4xdr.c	FUNCTION_18
0x400023f	          0x4889d3	                            mov rbx, rdx	       408	clnt4xdr.c	FUNCTION_18
0x4000242	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000245	          0x4889de	                            mov rsi, rbx	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000248	          0x4889ef	                            mov rdi, rbp	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x400024b	    0x41bd00000001	                     mov r13d, 0x1000000	       105	clnt4xdr.c	FUNCTION_4
0x4000251	      0xe8eafdffff	                  call sym.encode_netobj	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000256	    0x448ba3980100	          mov r12d, dword [rbx + 0x198] 	       413	clnt4xdr.c	FUNCTION_18	CALL_2
0x400025d	          0x4889ef	                            mov rdi, rbp	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x4000260	      0xbe04000000	                              mov esi, 4	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x4000265	      0xe800000000	                          call 0x400026a	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x400026a	          0x4889ef	                            mov rdi, rbp	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x400026d	      0xbe04000000	                              mov esi, 4	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x4000272	          0x4585e4	                         test r12d, r12d	       105	clnt4xdr.c	FUNCTION_4
0x4000275	        0x450f45e5	                       cmovne r12d, r13d	       105	clnt4xdr.c	FUNCTION_4
0x4000279	          0x448920	                   mov dword [rax], r12d	       105	clnt4xdr.c	FUNCTION_4
0x400027c	    0x440fb6a31401	         movzx r12d, byte [rbx + 0x114] 	       414	clnt4xdr.c	FUNCTION_18	CALL_3
0x4000284	      0xe800000000	                          call 0x4000289	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x4000289	      0xba00000000	                              mov edx, 0	       105	clnt4xdr.c	FUNCTION_4
0x400028e	          0x4c89f6	                            mov rsi, r14	       415	clnt4xdr.c	FUNCTION_18	CALL_4
0x4000291	          0x4889ef	                            mov rdi, rbp	       415	clnt4xdr.c	FUNCTION_18	CALL_4
0x4000294	        0x4180fc01	                             cmp r12b, 1	       105	clnt4xdr.c	FUNCTION_4
0x4000298	        0x410f44d5	                         cmove edx, r13d	       105	clnt4xdr.c	FUNCTION_4
0x400029c	            0x8910	                    mov dword [rax], edx	       105	clnt4xdr.c	FUNCTION_4
0x400029e	      0xe8bdfdffff	               call sym.encode_nlm4_lock	       415	clnt4xdr.c	FUNCTION_18	CALL_4
0x40002a3	    0x448ba39c0100	          mov r12d, dword [rbx + 0x19c] 	       416	clnt4xdr.c	FUNCTION_18	CALL_5
0x40002aa	          0x4889ef	                            mov rdi, rbp	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40002ad	      0xbe04000000	                              mov esi, 4	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40002b2	      0xe800000000	                          call 0x40002b7	       104	clnt4xdr.c	FUNCTION_4	CALL_1
0x40002b7	          0x4889ef	                            mov rdi, rbp	       112	clnt4xdr.c	FUNCTION_5	CALL_1
0x40002ba	      0xbe04000000	                              mov esi, 4	       112	clnt4xdr.c	FUNCTION_5	CALL_1
0x40002bf	          0x4585e4	                         test r12d, r12d	       105	clnt4xdr.c	FUNCTION_4
0x40002c2	        0x450f45e5	                       cmovne r12d, r13d	       105	clnt4xdr.c	FUNCTION_4
0x40002c6	          0x448920	                   mov dword [rax], r12d	       105	clnt4xdr.c	FUNCTION_4
0x40002c9	    0x8b9ba0010000	           mov ebx, dword [rbx + 0x1a0] 	       417	clnt4xdr.c	FUNCTION_18	CALL_6
0x40002cf	      0xe800000000	                          call 0x40002d4	       112	clnt4xdr.c	FUNCTION_5	CALL_1
0x40002d4	             0xfcb	                               bswap ebx	       113	clnt4xdr.c	FUNCTION_5	CALL_2
0x40002d6	            0x8918	                    mov dword [rax], ebx	       113	clnt4xdr.c	FUNCTION_5	CALL_2
0x40002d8	              0x5b	                                 pop rbx	       418	clnt4xdr.c	FUNCTION_18
0x40002d9	              0x5d	                                 pop rbp	       418	clnt4xdr.c	FUNCTION_18
0x40002da	            0x415c	                                 pop r12	       418	clnt4xdr.c	FUNCTION_18
0x40002dc	            0x415d	                                 pop r13	       418	clnt4xdr.c	FUNCTION_18
0x40002de	            0x415e	                                 pop r14	       418	clnt4xdr.c	FUNCTION_18
0x40002e0	              0xc3	                                     ret	       418	clnt4xdr.c	FUNCTION_18
nlm4_xdr_dec_res	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,1:CALL,3	33
0x40005a0	            0x4154	                                push r12	       559	clnt4xdr.c	FUNCTION_25
0x40005a2	              0x55	                                push rbp	       559	clnt4xdr.c	FUNCTION_25
0x40005a3	          0x4889f5	                            mov rbp, rsi	       559	clnt4xdr.c	FUNCTION_25
0x40005a6	              0x53	                                push rbx	       559	clnt4xdr.c	FUNCTION_25
0x40005a7	          0x4889d6	                            mov rsi, rdx	       563	clnt4xdr.c	FUNCTION_25	CALL_1
0x40005aa	          0x4889ef	                            mov rdi, rbp	       563	clnt4xdr.c	FUNCTION_25	CALL_1
0x40005ad	          0x4989d4	                            mov r12, rdx	       559	clnt4xdr.c	FUNCTION_25
0x40005b0	      0xe8fbfeffff	                  call sym.decode_cookie	       563	clnt4xdr.c	FUNCTION_25	CALL_1
0x40005b5	            0x85c0	                           test eax, eax	       564	clnt4xdr.c	FUNCTION_25	IF_1	CALL_2
0x40005b7	            0x89c3	                            mov ebx, eax	       563	clnt4xdr.c	FUNCTION_25	CALL_1
0x40005b9	            0x7522	                           jne 0x40005dd	       564	clnt4xdr.c	FUNCTION_25	IF_1	CALL_2
0x40005bb	      0xbe04000000	                              mov esi, 4	       237	clnt4xdr.c	FUNCTION_12	CALL_1
0x40005c0	          0x4889ef	                            mov rdi, rbp	       237	clnt4xdr.c	FUNCTION_12	CALL_1
0x40005c3	      0xe800000000	                          call 0x40005c8	       237	clnt4xdr.c	FUNCTION_12	CALL_1
0x40005c8	          0x4885c0	                           test rax, rax	       238	clnt4xdr.c	FUNCTION_12	IF_1	CALL_2
0x40005cb	            0x7417	                            je 0x40005e4	       238	clnt4xdr.c	FUNCTION_12	IF_1	CALL_2
0x40005cd	            0x8b00	                    mov eax, dword [rax]	       240	clnt4xdr.c	FUNCTION_12	IF_2	CALL_5
0x40005cf	            0x89c2	                            mov edx, eax	       240	clnt4xdr.c	FUNCTION_12	IF_2	CALL_5
0x40005d1	             0xfca	                               bswap edx	       240	clnt4xdr.c	FUNCTION_12	IF_2	CALL_5
0x40005d3	          0x83fa09	                              cmp edx, 9	       240	clnt4xdr.c	FUNCTION_12	IF_2	CALL_5
0x40005d6	            0x770c	                            ja 0x40005e4	       240	clnt4xdr.c	FUNCTION_12	IF_2	CALL_5
0x40005d8	      0x4189442424	             mov dword [r12 + 0x24], eax	       242	clnt4xdr.c	FUNCTION_12
0x40005dd	            0x89d8	                            mov eax, ebx	       569	clnt4xdr.c	FUNCTION_25
0x40005df	              0x5b	                                 pop rbx	       569	clnt4xdr.c	FUNCTION_25
0x40005e0	              0x5d	                                 pop rbp	       569	clnt4xdr.c	FUNCTION_25
0x40005e1	            0x415c	                                 pop r12	       569	clnt4xdr.c	FUNCTION_25
0x40005e3	              0xc3	                                     ret	       569	clnt4xdr.c	FUNCTION_25
0x40005e4	      0xbbfbffffff	                     mov ebx, 0xfffffffb	       250	clnt4xdr.c	FUNCTION_12
0x40005e9	            0x89d8	                            mov eax, ebx	       569	clnt4xdr.c	FUNCTION_25
0x40005eb	              0x5b	                                 pop rbx	       569	clnt4xdr.c	FUNCTION_25
0x40005ec	              0x5d	                                 pop rbp	       569	clnt4xdr.c	FUNCTION_25
0x40005ed	            0x415c	                                 pop r12	       569	clnt4xdr.c	FUNCTION_25
0x40005ef	              0xc3	                                     ret	       569	clnt4xdr.c	FUNCTION_25
encode_nlm4_lock	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,0:CALL,8	72
0x4000060	            0x4155	                                push r13	       351	clnt4xdr.c	FUNCTION_16
0x4000062	            0x4154	                                push r12	       351	clnt4xdr.c	FUNCTION_16
0x4000064	              0x55	                                push rbp	       351	clnt4xdr.c	FUNCTION_16
0x4000065	              0x53	                                push rbx	       351	clnt4xdr.c	FUNCTION_16
0x4000066	          0x4889fd	                            mov rbp, rdi	       351	clnt4xdr.c	FUNCTION_16
0x4000069	          0x4c8b26	                    mov r12, qword [rsi]	       355	clnt4xdr.c	FUNCTION_16	CALL_1
0x400006c	          0x4889f3	                            mov rbx, rsi	       351	clnt4xdr.c	FUNCTION_16
0x400006f	          0x4c89e7	                            mov rdi, r12	       332	clnt4xdr.c	FUNCTION_15	CALL_1
0x4000072	      0xe800000000	                          call 0x4000077	       332	clnt4xdr.c	FUNCTION_15	CALL_1
0x4000077	          0x8d7004	                      lea esi, [rax + 4]	       335	clnt4xdr.c	FUNCTION_15	CALL_2
0x400007a	          0x4989c5	                            mov r13, rax	       332	clnt4xdr.c	FUNCTION_15	CALL_1
0x400007d	          0x4889ef	                            mov rdi, rbp	       335	clnt4xdr.c	FUNCTION_15	CALL_2
0x4000080	      0xe800000000	                          call 0x4000085	       335	clnt4xdr.c	FUNCTION_15	CALL_2
0x4000085	          0x4489ea	                           mov edx, r13d	       336	clnt4xdr.c	FUNCTION_15	CALL_3
0x4000088	          0x4c89e6	                            mov rsi, r12	       336	clnt4xdr.c	FUNCTION_15	CALL_3
0x400008b	          0x4889c7	                            mov rdi, rax	       336	clnt4xdr.c	FUNCTION_15	CALL_3
0x400008e	      0xe800000000	                          call 0x4000093	       336	clnt4xdr.c	FUNCTION_15	CALL_3
0x4000093	         0xfb7530c	            movzx edx, word [rbx + 0xc] 	       198	clnt4xdr.c	FUNCTION_10	CALL_1
0x4000097	        0x488d730e	                    lea rsi, [rbx + 0xe]	       198	clnt4xdr.c	FUNCTION_10	CALL_1
0x400009b	          0x4889ef	                            mov rdi, rbp	       198	clnt4xdr.c	FUNCTION_10	CALL_1
0x400009e	      0xe89dffffff	                  call sym.encode_netobj	       198	clnt4xdr.c	FUNCTION_10	CALL_1
0x40000a3	    0x8b9390000000	            mov edx, dword [rbx + 0x90] 	       357	clnt4xdr.c	FUNCTION_16	CALL_3
0x40000a9	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	       357	clnt4xdr.c	FUNCTION_16	CALL_3
0x40000b0	          0x4889ef	                            mov rdi, rbp	       357	clnt4xdr.c	FUNCTION_16	CALL_3
0x40000b3	      0xe888ffffff	                  call sym.encode_netobj	       357	clnt4xdr.c	FUNCTION_16	CALL_3
0x40000b8	      0xbe14000000	                           mov esi, 0x14	       359	clnt4xdr.c	FUNCTION_16	CALL_4
0x40000bd	          0x4889ef	                            mov rdi, rbp	       359	clnt4xdr.c	FUNCTION_16	CALL_4
0x40000c0	      0xe800000000	                          call 0x40000c5	       359	clnt4xdr.c	FUNCTION_16	CALL_4
0x40000c5	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	       360	clnt4xdr.c	FUNCTION_16	CALL_5
0x40000cb	    0x48c7c17fffff	             mov rcx, 0xffffffffffffff7f	       360	clnt4xdr.c	FUNCTION_16	CALL_5
0x40000d2	             0xfca	                               bswap edx	       360	clnt4xdr.c	FUNCTION_16	CALL_5
0x40000d4	            0x8910	                    mov dword [rax], edx	       360	clnt4xdr.c	FUNCTION_16	CALL_5
0x40000d6	    0x488bb3180100	           mov rsi, qword [rbx + 0x118] 	        70	clnt4xdr.c	ELSE_2	FUNCTION_2	CALL_1
0x40000dd	    0x48baffffffff	         movabs rdx, 0x7fffffffffffffff 	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x40000e7	          0x4839d6	                            cmp rsi, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x40000ea	            0x7421	                            je 0x400010d	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x40000ec	    0x48ba02000000	          movabs rdx, 0x8000000000000002	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x40000f6	    0x48b980000000	          movabs rcx, 0x100000000000080 	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000100	          0x4839d6	                            cmp rsi, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000103	          0x4889f2	                            mov rdx, rsi	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000106	          0x480fca	                               bswap rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000109	        0x480f4dca	                         cmovge rcx, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400010d	    0x488b93200100	           mov rdx, qword [rbx + 0x120] 	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x4000114	    0x48bfffffffff	         movabs rdi, 0x7fffffffffffffff 	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x400011e	          0x4839fa	                            cmp rdx, rdi	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x4000121	            0x7443	                            je 0x4000166	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x4000123	          0x4829f2	                            sub rdx, rsi	        74	clnt4xdr.c	ELSE_2	FUNCTION_2	CALL_2
0x4000126	    0x48c7c67fffff	             mov rsi, 0xffffffffffffff7f	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x400012d	        0x4883c201	                              add rdx, 1	        74	clnt4xdr.c	ELSE_2	FUNCTION_2	CALL_2
0x4000131	          0x4839fa	                            cmp rdx, rdi	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000134	            0x7421	                            je 0x4000157	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000136	          0x4889d6	                            mov rsi, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000139	    0x48bf02000000	          movabs rdi, 0x8000000000000002	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000143	          0x4839fa	                            cmp rdx, rdi	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000146	          0x480fce	                               bswap rsi	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000149	    0x48ba80000000	          movabs rdx, 0x100000000000080 	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000153	        0x480f4cf2	                          cmovl rsi, rdx	        56	clnt4xdr.c	FUNCTION_1	IF_1
0x4000157	        0x48894804	                mov qword [rax + 4], rcx	        65	access_ok.h	FUNCTION_37	CALL_1
0x400015b	        0x4889700c	              mov qword [rax + 0xc], rsi	        65	access_ok.h	FUNCTION_37	CALL_1
0x400015f	              0x5b	                                 pop rbx	       365	clnt4xdr.c	FUNCTION_16
0x4000160	              0x5d	                                 pop rbp	       365	clnt4xdr.c	FUNCTION_16
0x4000161	            0x415c	                                 pop r12	       365	clnt4xdr.c	FUNCTION_16
0x4000163	            0x415d	                                 pop r13	       365	clnt4xdr.c	FUNCTION_16
0x4000165	              0xc3	                                     ret	       365	clnt4xdr.c	FUNCTION_16
0x4000166	            0x31f6	                            xor esi, esi	        71	clnt4xdr.c	ELSE_2	FUNCTION_2	IF_1
0x4000168	        0x48894804	                mov qword [rax + 4], rcx	        65	access_ok.h	FUNCTION_37	CALL_1
0x400016c	        0x4889700c	              mov qword [rax + 0xc], rsi	        65	access_ok.h	FUNCTION_37	CALL_1
0x4000170	              0x5b	                                 pop rbx	       365	clnt4xdr.c	FUNCTION_16
0x4000171	              0x5d	                                 pop rbp	       365	clnt4xdr.c	FUNCTION_16
0x4000172	            0x415c	                                 pop r12	       365	clnt4xdr.c	FUNCTION_16
0x4000174	            0x415d	                                 pop r13	       365	clnt4xdr.c	FUNCTION_16
0x4000176	              0xc3	                                     ret	       365	clnt4xdr.c	FUNCTION_16
nlm4_xdr_enc_res	WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0:IF,0:CALL,2	21
0x4000760	              0x55	                                push rbp	       467	clnt4xdr.c	FUNCTION_21
0x4000761	              0x53	                                push rbx	       467	clnt4xdr.c	FUNCTION_21
0x4000762	          0x4889d3	                            mov rbx, rdx	       467	clnt4xdr.c	FUNCTION_21
0x4000765	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000768	          0x4889f5	                            mov rbp, rsi	       467	clnt4xdr.c	FUNCTION_21
0x400076b	          0x4889de	                            mov rsi, rbx	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x400076e	          0x4889ef	                            mov rdi, rbp	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000771	      0xe8caf8ffff	                  call sym.encode_netobj	       157	clnt4xdr.c	FUNCTION_8	CALL_1
0x4000776	          0x8b5b24	            mov ebx, dword [rbx + 0x24] 	       471	clnt4xdr.c	FUNCTION_21	CALL_2
0x4000779	            0x89d8	                            mov eax, ebx	       228	clnt4xdr.c	FUNCTION_11	CALL_2
0x400077b	             0xfc8	                               bswap eax	       228	clnt4xdr.c	FUNCTION_11	CALL_2
0x400077d	          0x83f809	                              cmp eax, 9	       228	clnt4xdr.c	FUNCTION_11	CALL_2
0x4000780	            0x7712	                            ja 0x4000794	       228	clnt4xdr.c	FUNCTION_11	CALL_2
0x4000782	          0x4889ef	                            mov rdi, rbp	       229	clnt4xdr.c	FUNCTION_11	CALL_3
0x4000785	      0xbe04000000	                              mov esi, 4	       229	clnt4xdr.c	FUNCTION_11	CALL_3
0x400078a	      0xe800000000	                          call 0x400078f	       229	clnt4xdr.c	FUNCTION_11	CALL_3
0x400078f	            0x8918	                    mov dword [rax], ebx	       230	clnt4xdr.c	FUNCTION_11
0x4000791	              0x5b	                                 pop rbx	       472	clnt4xdr.c	FUNCTION_21
0x4000792	              0x5d	                                 pop rbp	       472	clnt4xdr.c	FUNCTION_21
0x4000793	              0xc3	                                     ret	       472	clnt4xdr.c	FUNCTION_21
0x4000794	      0xe8b7fbffff	        call sym.encode_nlm4_stat.part.1	       472	clnt4xdr.c	FUNCTION_21
