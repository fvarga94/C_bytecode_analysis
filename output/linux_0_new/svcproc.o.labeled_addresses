nlmsvc_callback	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,4:DO,0:FOR,0:CALL,7	53
0x4000be0	            0x4156	                                push r14	       321	svcproc.c	FUNCTION_17
0x4000be2	            0x4155	                                push r13	       321	svcproc.c	FUNCTION_17
0x4000be4	          0x4989d5	                            mov r13, rdx	       321	svcproc.c	FUNCTION_17
0x4000be7	            0x4154	                                push r12	       321	svcproc.c	FUNCTION_17
0x4000be9	              0x55	                                push rbp	       321	svcproc.c	FUNCTION_17
0x4000bea	          0x4189f4	                           mov r12d, esi	       321	svcproc.c	FUNCTION_17
0x4000bed	              0x53	                                push rbx	       321	svcproc.c	FUNCTION_17
0x4000bee	    0x488b87b01a00	          mov rax, qword [rdi + 0x1ab0] 	       322	svcproc.c	FUNCTION_17
0x4000bf5	          0x4889fb	                            mov rbx, rdi	       321	svcproc.c	FUNCTION_17
0x4000bf8	          0x8b5030	            mov edx, dword [rax + 0x30] 	       327	svcproc.c	FUNCTION_17	CALL_2
0x4000bfb	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       327	svcproc.c	FUNCTION_17	CALL_2
0x4000bff	      0xe800000000	                          call 0x4000c04	       327	svcproc.c	FUNCTION_17	CALL_2
0x4000c04	          0x4885c0	                           test rax, rax	       330	svcproc.c	FUNCTION_17	IF_1
0x4000c07	            0x7452	                            je 0x4000c5b	       330	svcproc.c	FUNCTION_17	IF_1
0x4000c09	          0x4889c5	                            mov rbp, rax	       330	svcproc.c	FUNCTION_17	IF_1
0x4000c0c	          0x4889c7	                            mov rdi, rax	       333	svcproc.c	FUNCTION_17	CALL_3
0x4000c0f	      0xe800000000	                          call 0x4000c14	       333	svcproc.c	FUNCTION_17	CALL_3
0x4000c14	          0x4889ef	                            mov rdi, rbp	       334	svcproc.c	FUNCTION_17	CALL_4
0x4000c17	          0x4989c6	                            mov r14, rax	       333	svcproc.c	FUNCTION_17	CALL_3
0x4000c1a	      0xe800000000	                          call 0x4000c1f	       334	svcproc.c	FUNCTION_17	CALL_4
0x4000c1f	          0x4d85f6	                           test r14, r14	       335	svcproc.c	FUNCTION_17	IF_2
0x4000c22	            0x7437	                            je 0x4000c5b	       335	svcproc.c	FUNCTION_17	IF_2
0x4000c24	          0x4889df	                            mov rdi, rbx	       338	svcproc.c	FUNCTION_17	CALL_5
0x4000c27	    0x498db6c00100	                  lea rsi, [r14 + 0x1c0]	       338	svcproc.c	FUNCTION_17	CALL_5
0x4000c2e	      0xe800000000	                          call 0x4000c33	       338	svcproc.c	FUNCTION_17	CALL_5
0x4000c33	            0x85c0	                           test eax, eax	       339	svcproc.c	FUNCTION_17	IF_3
0x4000c35	            0x89c3	                            mov ebx, eax	       338	svcproc.c	FUNCTION_17	CALL_5
0x4000c37	            0x7530	                           jne 0x4000c69	       339	svcproc.c	FUNCTION_17	IF_3
0x4000c39	    0x41c746040100	                  mov dword [r14 + 4], 1	       344	svcproc.c	FUNCTION_17
0x4000c41	    0x48c7c2000000	                              mov rdx, 0	       345	svcproc.c	FUNCTION_17	IF_4	CALL_7
0x4000c48	          0x4489e6	                           mov esi, r12d	       345	svcproc.c	FUNCTION_17	IF_4	CALL_7
0x4000c4b	          0x4c89f7	                            mov rdi, r14	       345	svcproc.c	FUNCTION_17	IF_4	CALL_7
0x4000c4e	      0xe800000000	                          call 0x4000c53	       345	svcproc.c	FUNCTION_17	IF_4	CALL_7
0x4000c53	            0x85c0	                           test eax, eax	       345	svcproc.c	FUNCTION_17	IF_4	CALL_7
0x4000c55	            0x7804	                            js 0x4000c5b	       345	svcproc.c	FUNCTION_17	IF_4	CALL_7
0x4000c57	            0x31c0	                            xor eax, eax	       347	svcproc.c	FUNCTION_17
0x4000c59	            0xeb05	                           jmp 0x4000c60	       347	svcproc.c	FUNCTION_17
0x4000c5b	      0xb800000005	                      mov eax, 0x5000000	       331	svcproc.c	FUNCTION_17	IF_1
0x4000c60	              0x5b	                                 pop rbx	       348	svcproc.c	FUNCTION_17
0x4000c61	              0x5d	                                 pop rbp	       348	svcproc.c	FUNCTION_17
0x4000c62	            0x415c	                                 pop r12	       348	svcproc.c	FUNCTION_17
0x4000c64	            0x415d	                                 pop r13	       348	svcproc.c	FUNCTION_17
0x4000c66	            0x415e	                                 pop r14	       348	svcproc.c	FUNCTION_17
0x4000c68	              0xc3	                                     ret	       348	svcproc.c	FUNCTION_17
0x4000c69	          0x4c89f7	                            mov rdi, r14	       340	svcproc.c	FUNCTION_17	IF_3	CALL_6
0x4000c6c	      0xe800000000	                          call 0x4000c71	       340	svcproc.c	FUNCTION_17	IF_3	CALL_6
0x4000c71	            0x89d8	                            mov eax, ebx	       341	svcproc.c	FUNCTION_17	IF_3
0x4000c73	              0x5b	                                 pop rbx	       348	svcproc.c	FUNCTION_17
0x4000c74	              0x5d	                                 pop rbp	       348	svcproc.c	FUNCTION_17
0x4000c75	            0x415c	                                 pop r12	       348	svcproc.c	FUNCTION_17
0x4000c77	            0x415d	                                 pop r13	       348	svcproc.c	FUNCTION_17
0x4000c79	            0x415e	                                 pop r14	       348	svcproc.c	FUNCTION_17
0x4000c7b	              0xc3	                                     ret	       348	svcproc.c	FUNCTION_17
nlmsvc_proc_nm_lock	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,2	4
0x4000950	    0x488b87b01a00	          mov rax, qword [rdi + 0x1ab0] 	       456	svcproc.c	FUNCTION_25
0x4000957	    0xc780a4010000	              mov dword [rax + 0x1a4], 0	       460	svcproc.c	FUNCTION_25
0x4000961	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       184	svcproc.c	FUNCTION_7	CALL_1
0x4000968	      0xe983feffff	              jmp sym.__nlmsvc_proc_lock	       184	svcproc.c	FUNCTION_7	CALL_1
__nlmsvc_proc_unlock	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,2:DO,0:FOR,0:CALL,9	88
0x4000530	            0x4156	                                push r14	       229	svcproc.c	FUNCTION_10
0x4000532	            0x4155	                                push r13	       229	svcproc.c	FUNCTION_10
0x4000534	          0x4989fd	                            mov r13, rdi	       229	svcproc.c	FUNCTION_10
0x4000537	            0x4154	                                push r12	       229	svcproc.c	FUNCTION_10
0x4000539	              0x55	                                push rbp	       229	svcproc.c	FUNCTION_10
0x400053a	              0x53	                                push rbx	       229	svcproc.c	FUNCTION_10
0x400053b	          0x4889f3	                            mov rbx, rsi	       229	svcproc.c	FUNCTION_10
0x400053e	        0x4883ec18	                           sub rsp, 0x18	       229	svcproc.c	FUNCTION_10
0x4000542	    0x488bafb01a00	          mov rbp, qword [rdi + 0x1ab0] 	       230	svcproc.c	FUNCTION_10
0x4000549	    0x65488b042528	                mov rax, qword gs:[0x28]	       229	svcproc.c	FUNCTION_10
0x4000552	      0x4889442410	             mov qword [rsp + 0x10], rax	       229	svcproc.c	FUNCTION_10
0x4000557	            0x31c0	                            xor eax, eax	       229	svcproc.c	FUNCTION_10
0x4000559	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       233	svcproc.c	FUNCTION_10	CALL_1
0x400055d	    0x4c8bb0900200	           mov r14, qword [rax + 0x290] 	       233	svcproc.c	FUNCTION_10	CALL_1
0x4000564	        0x488b4500	                    mov rax, qword [rbp]	       237	svcproc.c	FUNCTION_10
0x4000568	          0x488906	                    mov qword [rsi], rax	       237	svcproc.c	FUNCTION_10
0x400056b	        0x488b4508	                mov rax, qword [rbp + 8]	       237	svcproc.c	FUNCTION_10
0x400056f	          0x4c89f7	                            mov rdi, r14	       240	svcproc.c	FUNCTION_10	IF_1	CALL_3
0x4000572	        0x48894608	                mov qword [rsi + 8], rax	       237	svcproc.c	FUNCTION_10
0x4000576	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       237	svcproc.c	FUNCTION_10
0x400057a	        0x48894610	             mov qword [rsi + 0x10], rax	       237	svcproc.c	FUNCTION_10
0x400057e	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       237	svcproc.c	FUNCTION_10
0x4000582	        0x48894618	             mov qword [rsi + 0x18], rax	       237	svcproc.c	FUNCTION_10
0x4000586	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       237	svcproc.c	FUNCTION_10
0x4000589	          0x894620	             mov dword [rsi + 0x20], eax	       237	svcproc.c	FUNCTION_10
0x400058c	      0xe800000000	                          call 0x4000591	       240	svcproc.c	FUNCTION_10	IF_1	CALL_3
0x4000591	            0x84c0	                             test al, al	       240	svcproc.c	FUNCTION_10	IF_1	CALL_3
0x4000593	            0x742e	                            je 0x40005c3	       240	svcproc.c	FUNCTION_10	IF_1	CALL_3
0x4000595	    0xc74324000000	mov dword [rbx + 0x24], loc.imp.nlmsvc_decode_notify 	       241	svcproc.c	FUNCTION_10	IF_1
0x400059c	          0x4531e4	                          xor r12d, r12d	       242	svcproc.c	FUNCTION_10	IF_1
0x400059f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       256	svcproc.c	FUNCTION_10
0x40005a4	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       256	svcproc.c	FUNCTION_10
0x40005ad	          0x4489e0	                           mov eax, r12d	       256	svcproc.c	FUNCTION_10
0x40005b0	     0xf85b7000000	                           jne 0x400066d	       256	svcproc.c	FUNCTION_10
0x40005b6	        0x4883c418	                           add rsp, 0x18	       256	svcproc.c	FUNCTION_10
0x40005ba	              0x5b	                                 pop rbx	       256	svcproc.c	FUNCTION_10
0x40005bb	              0x5d	                                 pop rbp	       256	svcproc.c	FUNCTION_10
0x40005bc	            0x415c	                                 pop r12	       256	svcproc.c	FUNCTION_10
0x40005be	            0x415d	                                 pop r13	       256	svcproc.c	FUNCTION_10
0x40005c0	            0x415e	                                 pop r14	       256	svcproc.c	FUNCTION_10
0x40005c2	              0xc3	                                     ret	       256	svcproc.c	FUNCTION_10
0x40005c3	      0x488d4c2408	                      lea rcx, [rsp + 8]	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005c8	          0x4889e2	                            mov rdx, rsp	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005cb	          0x4889ee	                            mov rsi, rbp	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005ce	          0x4c89ef	                            mov rdi, r13	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005d1	      0xe88afaffff	           call sym.nlmsvc_retrieve_args	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005d6	            0x85c0	                           test eax, eax	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005d8	          0x4189c4	                           mov r12d, eax	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005db	          0x894324	             mov dword [rbx + 0x24], eax	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005de	            0x7416	                            je 0x40005f6	       246	svcproc.c	FUNCTION_10	IF_2	CALL_4
0x40005e0	      0x3d00007530	                     cmp eax, 0x30750000	       247	svcproc.c	FUNCTION_10	IF_2
0x40005e5	    0x41bc00000000	                             mov r12d, 0	       247	svcproc.c	FUNCTION_10	IF_2
0x40005eb	      0xb80000ea60	                     mov eax, 0x60ea0000	       247	svcproc.c	FUNCTION_10	IF_2
0x40005f0	        0x440f44e0	                         cmove r12d, eax	       247	svcproc.c	FUNCTION_10	IF_2
0x40005f4	            0xeba9	                           jmp 0x400059f	       247	svcproc.c	FUNCTION_10	IF_2
0x40005f6	    0x458bad901a00	         mov r13d, dword [r13 + 0x1a90] 	       250	svcproc.c	FUNCTION_10	CALL_5
0x40005fd	      0x488b742408	                mov rsi, qword [rsp + 8]	       250	svcproc.c	FUNCTION_10	CALL_5
0x4000602	        0x488d5528	                   lea rdx, [rbp + 0x28]	       250	svcproc.c	FUNCTION_10	CALL_5
0x4000606	          0x4c89f7	                            mov rdi, r14	       250	svcproc.c	FUNCTION_10	CALL_5
0x4000609	      0xe800000000	                          call 0x400060e	       250	svcproc.c	FUNCTION_10	CALL_5
0x400060e	        0x4183fd04	                             cmp r13d, 4	        24	svcproc.c	FUNCTION_1	IF_1
0x4000612	            0x7415	                            je 0x4000629	        24	svcproc.c	FUNCTION_1	IF_1
0x4000614	      0x3d00000003	                      cmp eax, 0x3000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000619	            0x740e	                            je 0x4000629	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400061b	            0x7627	                           jbe 0x4000644	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400061d	      0x3d00000005	                      cmp eax, 0x5000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000622	            0x7539	                           jne 0x400065d	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000624	      0xb800000001	                      mov eax, 0x1000000	        34	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000629	        0x488b3c24	                    mov rdi, qword [rsp]	       253	svcproc.c	FUNCTION_10	CALL_8
0x400062d	          0x894324	             mov dword [rbx + 0x24], eax	       250	svcproc.c	FUNCTION_10	CALL_5
0x4000630	      0xe800000000	                          call 0x4000635	       253	svcproc.c	FUNCTION_10	CALL_8
0x4000635	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       254	svcproc.c	FUNCTION_10	CALL_9
0x400063a	      0xe800000000	                          call 0x400063f	       254	svcproc.c	FUNCTION_10	CALL_9
0x400063f	      0xe95bffffff	                           jmp 0x400059f	       255	svcproc.c	FUNCTION_10
0x4000644	      0x3d00000001	                      cmp eax, 0x1000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000649	            0x74de	                            je 0x4000629	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400064b	      0x3d00000002	                      cmp eax, 0x2000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000650	            0x74d7	                            je 0x4000629	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000652	            0x85c0	                           test eax, eax	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000654	            0x74d3	                            je 0x4000629	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000656	      0xb800000002	                      mov eax, 0x2000000	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400065b	            0xebcc	                           jmp 0x4000629	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400065d	      0x3d00007530	                     cmp eax, 0x30750000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000662	            0x74c5	                            je 0x4000629	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000664	      0x3d00000004	  cmp eax, loc.imp.nlmsvc_decode_notify 	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000669	            0x75eb	                           jne 0x4000656	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400066b	            0xebbc	                           jmp 0x4000629	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400066d	      0xe800000000	                          call 0x4000672	       256	svcproc.c	FUNCTION_10
nlmsvc_proc_unlock_msg	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,2	3
0x4000ca0	    0x48c7c2000000	                              mov rdx, 0	       372	svcproc.c	FUNCTION_21	CALL_2
0x4000ca7	      0xbe0e000000	                            mov esi, 0xe	       372	svcproc.c	FUNCTION_21	CALL_2
0x4000cac	      0xe92fffffff	                 jmp sym.nlmsvc_callback	       372	svcproc.c	FUNCTION_21	CALL_2
nlmsvc_proc_unlock	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,1	2
0x4000680	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       261	svcproc.c	FUNCTION_11	CALL_1
0x4000687	      0xe9a4feffff	            jmp sym.__nlmsvc_proc_unlock	       261	svcproc.c	FUNCTION_11	CALL_1
nlmsvc_proc_share	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,2:DO,0:FOR,0:CALL,9	87
0x4000360	            0x4155	                                push r13	       387	svcproc.c	FUNCTION_23
0x4000362	            0x4154	                                push r12	       387	svcproc.c	FUNCTION_23
0x4000364	          0x4989fd	                            mov r13, rdi	       387	svcproc.c	FUNCTION_23
0x4000367	              0x55	                                push rbp	       387	svcproc.c	FUNCTION_23
0x4000368	              0x53	                                push rbx	       387	svcproc.c	FUNCTION_23
0x4000369	        0x4883ec18	                           sub rsp, 0x18	       387	svcproc.c	FUNCTION_23
0x400036d	    0x488b9fb01a00	          mov rbx, qword [rdi + 0x1ab0] 	       388	svcproc.c	FUNCTION_23
0x4000374	    0x488bafb81a00	          mov rbp, qword [rdi + 0x1ab8] 	       389	svcproc.c	FUNCTION_23
0x400037b	    0x65488b042528	                mov rax, qword gs:[0x28]	       387	svcproc.c	FUNCTION_23
0x4000384	      0x4889442410	             mov qword [rsp + 0x10], rax	       387	svcproc.c	FUNCTION_23
0x4000389	            0x31c0	                            xor eax, eax	       387	svcproc.c	FUNCTION_23
0x400038b	          0x488b03	                    mov rax, qword [rbx]	       395	svcproc.c	FUNCTION_23
0x400038e	        0x48894500	                    mov qword [rbp], rax	       395	svcproc.c	FUNCTION_23
0x4000392	        0x488b4308	                mov rax, qword [rbx + 8]	       395	svcproc.c	FUNCTION_23
0x4000396	        0x48894508	                mov qword [rbp + 8], rax	       395	svcproc.c	FUNCTION_23
0x400039a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       395	svcproc.c	FUNCTION_23
0x400039e	        0x48894510	            mov qword [rbp + 0x10], rax 	       395	svcproc.c	FUNCTION_23
0x40003a2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       395	svcproc.c	FUNCTION_23
0x40003a6	        0x48894518	            mov qword [rbp + 0x18], rax 	       395	svcproc.c	FUNCTION_23
0x40003aa	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       395	svcproc.c	FUNCTION_23
0x40003ad	          0x894520	            mov dword [rbp + 0x20], eax 	       395	svcproc.c	FUNCTION_23
0x40003b0	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       398	svcproc.c	FUNCTION_23	IF_1	CALL_3
0x40003b4	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       398	svcproc.c	FUNCTION_23	IF_1	CALL_3
0x40003bb	      0xe800000000	                          call 0x40003c0	       398	svcproc.c	FUNCTION_23	IF_1	CALL_3
0x40003c0	            0x84c0	                             test al, al	       398	svcproc.c	FUNCTION_23	IF_1	CALL_3
0x40003c2	            0x740c	                            je 0x40003d0	       398	svcproc.c	FUNCTION_23	IF_1	CALL_3
0x40003c4	    0x448ba39c0100	          mov r12d, dword [rbx + 0x19c] 	       398	svcproc.c	FUNCTION_23	IF_1	CALL_3
0x40003cb	          0x4585e4	                         test r12d, r12d	       398	svcproc.c	FUNCTION_23	IF_1	CALL_3
0x40003ce	            0x7453	                            je 0x4000423	       398	svcproc.c	FUNCTION_23	IF_1	CALL_3
0x40003d0	      0x488d4c2408	                      lea rcx, [rsp + 8]	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003d5	          0x4889e2	                            mov rdx, rsp	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003d8	          0x4889de	                            mov rsi, rbx	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003db	          0x4c89ef	                            mov rdi, r13	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003de	      0xe87dfcffff	           call sym.nlmsvc_retrieve_args	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003e3	            0x85c0	                           test eax, eax	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003e5	          0x4189c4	                           mov r12d, eax	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003e8	          0x894524	            mov dword [rbp + 0x24], eax 	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003eb	            0x743f	                            je 0x400042c	       404	svcproc.c	FUNCTION_23	IF_2	CALL_4
0x40003ed	      0x3d00007530	                     cmp eax, 0x30750000	       405	svcproc.c	FUNCTION_23	IF_2
0x40003f2	    0x41bc00000000	                             mov r12d, 0	       405	svcproc.c	FUNCTION_23	IF_2
0x40003f8	      0xb80000ea60	                     mov eax, 0x60ea0000	       405	svcproc.c	FUNCTION_23	IF_2
0x40003fd	        0x440f44e0	                         cmove r12d, eax	       405	svcproc.c	FUNCTION_23	IF_2
0x4000401	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       414	svcproc.c	FUNCTION_23
0x4000406	    0x654833142528	                xor rdx, qword gs:[0x28]	       414	svcproc.c	FUNCTION_23
0x400040f	          0x4489e0	                           mov eax, r12d	       414	svcproc.c	FUNCTION_23
0x4000412	     0xf8588000000	                           jne 0x40004a0	       414	svcproc.c	FUNCTION_23
0x4000418	        0x4883c418	                           add rsp, 0x18	       414	svcproc.c	FUNCTION_23
0x400041c	              0x5b	                                 pop rbx	       414	svcproc.c	FUNCTION_23
0x400041d	              0x5d	                                 pop rbp	       414	svcproc.c	FUNCTION_23
0x400041e	            0x415c	                                 pop r12	       414	svcproc.c	FUNCTION_23
0x4000420	            0x415d	                                 pop r13	       414	svcproc.c	FUNCTION_23
0x4000422	              0xc3	                                     ret	       414	svcproc.c	FUNCTION_23
0x4000423	    0xc74524000000	mov dword [rbp + 0x24], loc.imp.nlmsvc_decode_notify 	       399	svcproc.c	FUNCTION_23	IF_1
0x400042a	            0xebd5	                           jmp 0x4000401	       400	svcproc.c	FUNCTION_23	IF_1
0x400042c	    0x458bad901a00	         mov r13d, dword [r13 + 0x1a90] 	       408	svcproc.c	FUNCTION_23	CALL_5
0x4000433	      0x488b742408	                mov rsi, qword [rsp + 8]	       408	svcproc.c	FUNCTION_23	CALL_5
0x4000438	          0x4889da	                            mov rdx, rbx	       408	svcproc.c	FUNCTION_23	CALL_5
0x400043b	        0x488b3c24	                    mov rdi, qword [rsp]	       408	svcproc.c	FUNCTION_23	CALL_5
0x400043f	      0xe800000000	                          call 0x4000444	       408	svcproc.c	FUNCTION_23	CALL_5
0x4000444	        0x4183fd04	                             cmp r13d, 4	        24	svcproc.c	FUNCTION_1	IF_1
0x4000448	            0x7415	                            je 0x400045f	        24	svcproc.c	FUNCTION_1	IF_1
0x400044a	      0x3d00000003	                      cmp eax, 0x3000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400044f	            0x740e	                            je 0x400045f	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000451	            0x7624	                           jbe 0x4000477	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000453	      0x3d00000005	                      cmp eax, 0x5000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000458	            0x7536	                           jne 0x4000490	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400045a	      0xb800000001	                      mov eax, 0x1000000	        34	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400045f	        0x488b3c24	                    mov rdi, qword [rsp]	       411	svcproc.c	FUNCTION_23	CALL_8
0x4000463	          0x894524	            mov dword [rbp + 0x24], eax 	       408	svcproc.c	FUNCTION_23	CALL_5
0x4000466	      0xe800000000	                          call 0x400046b	       411	svcproc.c	FUNCTION_23	CALL_8
0x400046b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       412	svcproc.c	FUNCTION_23	CALL_9
0x4000470	      0xe800000000	                          call 0x4000475	       412	svcproc.c	FUNCTION_23	CALL_9
0x4000475	            0xeb8a	                           jmp 0x4000401	       413	svcproc.c	FUNCTION_23
0x4000477	      0x3d00000001	                      cmp eax, 0x1000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400047c	            0x74e1	                            je 0x400045f	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400047e	      0x3d00000002	                      cmp eax, 0x2000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000483	            0x74da	                            je 0x400045f	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000485	            0x85c0	                           test eax, eax	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000487	            0x74d6	                            je 0x400045f	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000489	      0xb800000002	                      mov eax, 0x2000000	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400048e	            0xebcf	                           jmp 0x400045f	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000490	      0x3d00007530	                     cmp eax, 0x30750000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000495	            0x74c8	                            je 0x400045f	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000497	      0x3d00000004	  cmp eax, loc.imp.nlmsvc_decode_notify 	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400049c	            0x75eb	                           jne 0x4000489	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400049e	            0xebbf	                           jmp 0x400045f	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40004a0	      0xe800000000	                          call 0x40004a5	       414	svcproc.c	FUNCTION_23
nlmsvc_proc_test	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,1	2
0x4000ab0	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       136	svcproc.c	FUNCTION_5	CALL_1
0x4000ab7	      0xe9b4feffff	              jmp sym.__nlmsvc_proc_test	       136	svcproc.c	FUNCTION_5	CALL_1
nlmsvc_retrieve_args	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,5:DO,0:FOR,0:CALL,4	88
0x4000060	            0x4156	                                push r14	        54	svcproc.c	FUNCTION_2
0x4000062	            0x4155	                                push r13	        54	svcproc.c	FUNCTION_2
0x4000064	            0x4154	                                push r12	        54	svcproc.c	FUNCTION_2
0x4000066	              0x55	                                push rbp	        54	svcproc.c	FUNCTION_2
0x4000067	              0x53	                                push rbx	        54	svcproc.c	FUNCTION_2
0x4000068	        0x4883ec10	                           sub rsp, 0x10	        54	svcproc.c	FUNCTION_2
0x400006c	    0x65488b042528	                mov rax, qword gs:[0x28]	        54	svcproc.c	FUNCTION_2
0x4000075	      0x4889442408	                mov qword [rsp + 8], rax	        54	svcproc.c	FUNCTION_2
0x400007a	            0x31c0	                            xor eax, eax	        54	svcproc.c	FUNCTION_2
0x400007c	    0x48833d000000	               cmp qword [0x04000084], 0	        61	svcproc.c	FUNCTION_2	IF_1
0x4000084	    0x48c704240000	                      mov qword [rsp], 0	        56	svcproc.c	FUNCTION_2
0x400008c	      0xb800000002	                      mov eax, 0x2000000	        62	svcproc.c	FUNCTION_2	IF_1
0x4000091	            0x747f	                            je 0x4000112	        61	svcproc.c	FUNCTION_2	IF_1
0x4000093	          0x4989d6	                            mov r14, rdx	        61	svcproc.c	FUNCTION_2	IF_1
0x4000096	          0x8b5630	            mov edx, dword [rsi + 0x30] 	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x4000099	          0x4889f5	                            mov rbp, rsi	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x400009c	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x40000a0	          0x4889fb	                            mov rbx, rdi	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x40000a3	          0x4989cd	                            mov r13, rcx	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x40000a6	      0xe800000000	                          call 0x40000ab	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x40000ab	          0x4885c0	                           test rax, rax	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x40000ae	          0x4989c4	                            mov r12, rax	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x40000b1	     0xf84d5000000	                            je 0x400018c	        65	svcproc.c	FUNCTION_2	IF_2	CALL_1
0x40000b7	    0x8b85a4010000	           mov eax, dword [rbp + 0x1a4] 	        66	svcproc.c	FUNCTION_2	IF_2	CALL_2
0x40000bd	            0x85c0	                           test eax, eax	        66	svcproc.c	FUNCTION_2	IF_2	CALL_2
0x40000bf	     0xf85b7000000	                           jne 0x400017c	        66	svcproc.c	FUNCTION_2	IF_2	CALL_2
0x40000c5	          0x4d85ed	                           test r13, r13	        71	svcproc.c	FUNCTION_2	IF_3
0x40000c8	          0x4d8926	                    mov qword [r14], r12	        68	svcproc.c	FUNCTION_2
0x40000cb	     0xf848e000000	                            je 0x400015f	        71	svcproc.c	FUNCTION_2	IF_3
0x40000d1	    0x448bb3901a00	         mov r14d, dword [rbx + 0x1a90] 	        72	svcproc.c	FUNCTION_2	IF_3	CALL_3
0x40000d8	        0x488d5534	                   lea rdx, [rbp + 0x34]	        72	svcproc.c	FUNCTION_2	IF_3	CALL_3
0x40000dc	          0x4889df	                            mov rdi, rbx	        72	svcproc.c	FUNCTION_2	IF_3	CALL_3
0x40000df	          0x4889e6	                            mov rsi, rsp	        72	svcproc.c	FUNCTION_2	IF_3	CALL_3
0x40000e2	      0xe800000000	                          call 0x40000e7	        72	svcproc.c	FUNCTION_2	IF_3	CALL_3
0x40000e7	        0x4183fe04	                             cmp r14d, 4	        24	svcproc.c	FUNCTION_1	IF_1
0x40000eb	            0x89c3	                            mov ebx, eax	        72	svcproc.c	FUNCTION_2	IF_3	CALL_3
0x40000ed	            0x7444	                            je 0x4000133	        24	svcproc.c	FUNCTION_1	IF_1
0x40000ef	      0x3d00000003	                      cmp eax, 0x3000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40000f4	            0x7412	                            je 0x4000108	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40000f6	            0x766b	                           jbe 0x4000163	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40000f8	      0x3d00000005	                      cmp eax, 0x5000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40000fd	     0xf859b000000	                           jne 0x400019e	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000103	      0xbb00000001	                      mov ebx, 0x1000000	        34	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000108	          0x4c89e7	                            mov rdi, r12	        86	svcproc.c	FUNCTION_2	CALL_4
0x400010b	      0xe800000000	                          call 0x4000110	        86	svcproc.c	FUNCTION_2	CALL_4
0x4000110	            0x89d8	                            mov eax, ebx	        86	svcproc.c	FUNCTION_2	CALL_4
0x4000112	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        90	svcproc.c	FUNCTION_2
0x4000117	    0x6548330c2528	                xor rcx, qword gs:[0x28]	        90	svcproc.c	FUNCTION_2
0x4000120	     0xf858f000000	                           jne 0x40001b5	        90	svcproc.c	FUNCTION_2
0x4000126	        0x4883c410	                           add rsp, 0x10	        90	svcproc.c	FUNCTION_2
0x400012a	              0x5b	                                 pop rbx	        90	svcproc.c	FUNCTION_2
0x400012b	              0x5d	                                 pop rbp	        90	svcproc.c	FUNCTION_2
0x400012c	            0x415c	                                 pop r12	        90	svcproc.c	FUNCTION_2
0x400012e	            0x415d	                                 pop r13	        90	svcproc.c	FUNCTION_2
0x4000130	            0x415e	                                 pop r14	        90	svcproc.c	FUNCTION_2
0x4000132	              0xc3	                                     ret	        90	svcproc.c	FUNCTION_2
0x4000133	            0x85c0	                           test eax, eax	        73	svcproc.c	FUNCTION_2	IF_3	IF_4
0x4000135	            0x75d1	                           jne 0x4000108	        73	svcproc.c	FUNCTION_2	IF_3	IF_4
0x4000137	        0x488b0424	                    mov rax, qword [rsp]	        75	svcproc.c	FUNCTION_2	IF_3
0x400013b	        0x49894500	                    mov qword [r13], rax	        75	svcproc.c	FUNCTION_2	IF_3
0x400013f	    0x488b80980000	            mov rax, qword [rax + 0x98] 	        78	svcproc.c	FUNCTION_2	IF_3
0x4000146	    0x4c89a5080100	           mov qword [rbp + 0x108], r12 	        79	svcproc.c	FUNCTION_2	IF_3
0x400014d	    0x48c785700100	              mov qword [rbp + 0x170], 0	        80	svcproc.c	FUNCTION_2	IF_3
0x4000158	    0x488985380100	           mov qword [rbp + 0x138], rax 	        78	svcproc.c	FUNCTION_2	IF_3
0x400015f	            0x31c0	                            xor eax, eax	        83	svcproc.c	FUNCTION_2
0x4000161	            0xebaf	                           jmp 0x4000112	        83	svcproc.c	FUNCTION_2
0x4000163	      0x3d00000001	                      cmp eax, 0x1000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000168	            0x749e	                            je 0x4000108	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400016a	      0x3d00000002	                      cmp eax, 0x2000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400016f	            0x7497	                            je 0x4000108	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000171	            0x85c0	                           test eax, eax	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000173	            0x74c2	                            je 0x4000137	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000175	      0xbb00000002	                      mov ebx, 0x2000000	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400017a	            0xeb8c	                           jmp 0x4000108	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400017c	          0x4c89e7	                            mov rdi, r12	        66	svcproc.c	FUNCTION_2	IF_2	CALL_2
0x400017f	      0xe800000000	                          call 0x4000184	        66	svcproc.c	FUNCTION_2	IF_2	CALL_2
0x4000184	            0x85c0	                           test eax, eax	        66	svcproc.c	FUNCTION_2	IF_2	CALL_2
0x4000186	     0xf8939ffffff	                           jns 0x40000c5	        66	svcproc.c	FUNCTION_2	IF_2	CALL_2
0x400018c	          0x4c89e7	                            mov rdi, r12	        86	svcproc.c	FUNCTION_2	CALL_4
0x400018f	      0xe800000000	                          call 0x4000194	        86	svcproc.c	FUNCTION_2	CALL_4
0x4000194	      0xb800000002	                      mov eax, 0x2000000	        89	svcproc.c	FUNCTION_2
0x4000199	      0xe974ffffff	                           jmp 0x4000112	        89	svcproc.c	FUNCTION_2
0x400019e	      0x3d00007530	                     cmp eax, 0x30750000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40001a3	     0xf845fffffff	                            je 0x4000108	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40001a9	      0x3d00000004	  cmp eax, loc.imp.nlmsvc_decode_notify 	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40001ae	            0x75c5	                           jne 0x4000175	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40001b0	      0xe953ffffff	                           jmp 0x4000108	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40001b5	      0xe800000000	                          call 0x40001ba	        90	svcproc.c	FUNCTION_2
nlmsvc_proc_granted	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,1	2
0x4000520	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       284	svcproc.c	FUNCTION_13	CALL_1
0x4000527	            0xeba7	           jmp sym.__nlmsvc_proc_granted	       284	svcproc.c	FUNCTION_13	CALL_1
nlmsvc_callback_exit	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,1	1
0x4000050	            0xf3c3	                                     ret	       291	svcproc.c	FUNCTION_14
nlmsvc_proc_unshare	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,2:DO,0:FOR,0:CALL,9	85
0x4000220	            0x4155	                                push r13	       421	svcproc.c	FUNCTION_24
0x4000222	            0x4154	                                push r12	       421	svcproc.c	FUNCTION_24
0x4000224	          0x4989fc	                            mov r12, rdi	       421	svcproc.c	FUNCTION_24
0x4000227	              0x55	                                push rbp	       421	svcproc.c	FUNCTION_24
0x4000228	              0x53	                                push rbx	       421	svcproc.c	FUNCTION_24
0x4000229	        0x4883ec18	                           sub rsp, 0x18	       421	svcproc.c	FUNCTION_24
0x400022d	    0x488bafb01a00	          mov rbp, qword [rdi + 0x1ab0] 	       422	svcproc.c	FUNCTION_24
0x4000234	    0x488b9fb81a00	          mov rbx, qword [rdi + 0x1ab8] 	       423	svcproc.c	FUNCTION_24
0x400023b	    0x65488b042528	                mov rax, qword gs:[0x28]	       421	svcproc.c	FUNCTION_24
0x4000244	      0x4889442410	             mov qword [rsp + 0x10], rax	       421	svcproc.c	FUNCTION_24
0x4000249	            0x31c0	                            xor eax, eax	       421	svcproc.c	FUNCTION_24
0x400024b	        0x488b4500	                    mov rax, qword [rbp]	       429	svcproc.c	FUNCTION_24
0x400024f	          0x488903	                    mov qword [rbx], rax	       429	svcproc.c	FUNCTION_24
0x4000252	        0x488b4508	                mov rax, qword [rbp + 8]	       429	svcproc.c	FUNCTION_24
0x4000256	        0x48894308	                mov qword [rbx + 8], rax	       429	svcproc.c	FUNCTION_24
0x400025a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       429	svcproc.c	FUNCTION_24
0x400025e	        0x48894310	             mov qword [rbx + 0x10], rax	       429	svcproc.c	FUNCTION_24
0x4000262	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       429	svcproc.c	FUNCTION_24
0x4000266	        0x48894318	             mov qword [rbx + 0x18], rax	       429	svcproc.c	FUNCTION_24
0x400026a	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       429	svcproc.c	FUNCTION_24
0x400026d	          0x894320	             mov dword [rbx + 0x20], eax	       429	svcproc.c	FUNCTION_24
0x4000270	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       432	svcproc.c	FUNCTION_24	IF_1	CALL_3
0x4000274	    0x488bb8900200	           mov rdi, qword [rax + 0x290] 	       432	svcproc.c	FUNCTION_24	IF_1	CALL_3
0x400027b	      0xe800000000	                          call 0x4000280	       432	svcproc.c	FUNCTION_24	IF_1	CALL_3
0x4000280	            0x84c0	                             test al, al	       432	svcproc.c	FUNCTION_24	IF_1	CALL_3
0x4000282	            0x742c	                            je 0x40002b0	       432	svcproc.c	FUNCTION_24	IF_1	CALL_3
0x4000284	    0xc74324000000	mov dword [rbx + 0x24], loc.imp.nlmsvc_decode_notify 	       433	svcproc.c	FUNCTION_24	IF_1
0x400028b	          0x4531ed	                          xor r13d, r13d	       434	svcproc.c	FUNCTION_24	IF_1
0x400028e	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       448	svcproc.c	FUNCTION_24
0x4000293	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       448	svcproc.c	FUNCTION_24
0x400029c	          0x4489e8	                           mov eax, r13d	       448	svcproc.c	FUNCTION_24
0x400029f	     0xf85b6000000	                           jne 0x400035b	       448	svcproc.c	FUNCTION_24
0x40002a5	        0x4883c418	                           add rsp, 0x18	       448	svcproc.c	FUNCTION_24
0x40002a9	              0x5b	                                 pop rbx	       448	svcproc.c	FUNCTION_24
0x40002aa	              0x5d	                                 pop rbp	       448	svcproc.c	FUNCTION_24
0x40002ab	            0x415c	                                 pop r12	       448	svcproc.c	FUNCTION_24
0x40002ad	            0x415d	                                 pop r13	       448	svcproc.c	FUNCTION_24
0x40002af	              0xc3	                                     ret	       448	svcproc.c	FUNCTION_24
0x40002b0	      0x488d4c2408	                      lea rcx, [rsp + 8]	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002b5	          0x4889e2	                            mov rdx, rsp	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002b8	          0x4889ee	                            mov rsi, rbp	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002bb	          0x4c89e7	                            mov rdi, r12	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002be	      0xe89dfdffff	           call sym.nlmsvc_retrieve_args	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002c3	            0x85c0	                           test eax, eax	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002c5	          0x4189c5	                           mov r13d, eax	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002c8	          0x894324	             mov dword [rbx + 0x24], eax	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002cb	            0x7416	                            je 0x40002e3	       438	svcproc.c	FUNCTION_24	IF_2	CALL_4
0x40002cd	      0x3d00007530	                     cmp eax, 0x30750000	       439	svcproc.c	FUNCTION_24	IF_2
0x40002d2	    0x41bd00000000	                             mov r13d, 0	       439	svcproc.c	FUNCTION_24	IF_2
0x40002d8	      0xb80000ea60	                     mov eax, 0x60ea0000	       439	svcproc.c	FUNCTION_24	IF_2
0x40002dd	        0x440f44e8	                         cmove r13d, eax	       439	svcproc.c	FUNCTION_24	IF_2
0x40002e1	            0xebab	                           jmp 0x400028e	       439	svcproc.c	FUNCTION_24	IF_2
0x40002e3	    0x458ba424901a	         mov r12d, dword [r12 + 0x1a90] 	       442	svcproc.c	FUNCTION_24	CALL_5
0x40002eb	      0x488b742408	                mov rsi, qword [rsp + 8]	       442	svcproc.c	FUNCTION_24	CALL_5
0x40002f0	          0x4889ea	                            mov rdx, rbp	       442	svcproc.c	FUNCTION_24	CALL_5
0x40002f3	        0x488b3c24	                    mov rdi, qword [rsp]	       442	svcproc.c	FUNCTION_24	CALL_5
0x40002f7	      0xe800000000	                          call 0x40002fc	       442	svcproc.c	FUNCTION_24	CALL_5
0x40002fc	        0x4183fc04	                             cmp r12d, 4	        24	svcproc.c	FUNCTION_1	IF_1
0x4000300	            0x7415	                            je 0x4000317	        24	svcproc.c	FUNCTION_1	IF_1
0x4000302	      0x3d00000003	                      cmp eax, 0x3000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000307	            0x740e	                            je 0x4000317	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000309	            0x7627	                           jbe 0x4000332	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400030b	      0x3d00000005	                      cmp eax, 0x5000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000310	            0x7539	                           jne 0x400034b	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000312	      0xb800000001	                      mov eax, 0x1000000	        34	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000317	        0x488b3c24	                    mov rdi, qword [rsp]	       445	svcproc.c	FUNCTION_24	CALL_8
0x400031b	          0x894324	             mov dword [rbx + 0x24], eax	       442	svcproc.c	FUNCTION_24	CALL_5
0x400031e	      0xe800000000	                          call 0x4000323	       445	svcproc.c	FUNCTION_24	CALL_8
0x4000323	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       446	svcproc.c	FUNCTION_24	CALL_9
0x4000328	      0xe800000000	                          call 0x400032d	       446	svcproc.c	FUNCTION_24	CALL_9
0x400032d	      0xe95cffffff	                           jmp 0x400028e	       447	svcproc.c	FUNCTION_24
0x4000332	      0x3d00000001	                      cmp eax, 0x1000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000337	            0x74de	                            je 0x4000317	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000339	      0x3d00000002	                      cmp eax, 0x2000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400033e	            0x74d7	                            je 0x4000317	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000340	            0x85c0	                           test eax, eax	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000342	            0x74d3	                            je 0x4000317	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000344	      0xb800000002	                      mov eax, 0x2000000	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000349	            0xebcc	                           jmp 0x4000317	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400034b	      0x3d00007530	                     cmp eax, 0x30750000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000350	            0x74c5	                            je 0x4000317	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000352	      0x3d00000004	  cmp eax, loc.imp.nlmsvc_decode_notify 	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000357	            0x75eb	                           jne 0x4000344	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000359	            0xebbc	                           jmp 0x4000317	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400035b	      0xe800000000	              call sym.nlmsvc_proc_share	       448	svcproc.c	FUNCTION_24
nlmsvc_proc_free_all	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,1:DO,0:FOR,0:CALL,3	21
0x40001c0	        0x4883ec10	                           sub rsp, 0x10	       469	svcproc.c	FUNCTION_26
0x40001c4	    0x488bb7b01a00	          mov rsi, qword [rdi + 0x1ab0] 	       474	svcproc.c	FUNCTION_26	IF_1	CALL_1
0x40001cb	            0x31c9	                            xor ecx, ecx	       474	svcproc.c	FUNCTION_26	IF_1	CALL_1
0x40001cd	          0x4889e2	                            mov rdx, rsp	       474	svcproc.c	FUNCTION_26	IF_1	CALL_1
0x40001d0	    0x65488b042528	                mov rax, qword gs:[0x28]	       469	svcproc.c	FUNCTION_26
0x40001d9	      0x4889442408	                mov qword [rsp + 8], rax	       469	svcproc.c	FUNCTION_26
0x40001de	            0x31c0	                            xor eax, eax	       469	svcproc.c	FUNCTION_26
0x40001e0	      0xe87bfeffff	           call sym.nlmsvc_retrieve_args	       474	svcproc.c	FUNCTION_26	IF_1	CALL_1
0x40001e5	            0x85c0	                           test eax, eax	       474	svcproc.c	FUNCTION_26	IF_1	CALL_1
0x40001e7	            0x7512	                           jne 0x40001fb	       474	svcproc.c	FUNCTION_26	IF_1	CALL_1
0x40001e9	        0x488b3c24	                    mov rdi, qword [rsp]	       477	svcproc.c	FUNCTION_26	CALL_2
0x40001ed	      0xe800000000	                          call 0x40001f2	       477	svcproc.c	FUNCTION_26	CALL_2
0x40001f2	        0x488b3c24	                    mov rdi, qword [rsp]	       478	svcproc.c	FUNCTION_26	CALL_3
0x40001f6	      0xe800000000	                          call 0x40001fb	       478	svcproc.c	FUNCTION_26	CALL_3
0x40001fb	            0x31c0	                            xor eax, eax	       480	svcproc.c	FUNCTION_26
0x40001fd	      0x488b542408	                mov rdx, qword [rsp + 8]	       480	svcproc.c	FUNCTION_26
0x4000202	    0x654833142528	                xor rdx, qword gs:[0x28]	       480	svcproc.c	FUNCTION_26
0x400020b	            0x7505	                           jne 0x4000212	       480	svcproc.c	FUNCTION_26
0x400020d	        0x4883c410	                           add rsp, 0x10	       480	svcproc.c	FUNCTION_26
0x4000211	              0xc3	                                     ret	       480	svcproc.c	FUNCTION_26
0x4000212	      0xe800000000	                          call 0x4000217	       480	svcproc.c	FUNCTION_26
nlmsvc_proc_lock_msg	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,2	3
0x4000ce0	    0x48c7c2000000	                              mov rdx, 0	       359	svcproc.c	FUNCTION_19	CALL_2
0x4000ce7	      0xbe0c000000	                            mov esi, 0xc	       359	svcproc.c	FUNCTION_19	CALL_2
0x4000cec	      0xe9effeffff	                 jmp sym.nlmsvc_callback	       359	svcproc.c	FUNCTION_19	CALL_2
__nlmsvc_proc_lock	SWITCH,0:ELSE,2:WHILE,0:functions,0:IF,3:DO,0:FOR,0:CALL,7	88
0x40007f0	            0x4155	                                push r13	       141	svcproc.c	FUNCTION_6
0x40007f2	            0x4154	                                push r12	       141	svcproc.c	FUNCTION_6
0x40007f4	          0x4989fc	                            mov r12, rdi	       141	svcproc.c	FUNCTION_6
0x40007f7	              0x55	                                push rbp	       141	svcproc.c	FUNCTION_6
0x40007f8	              0x53	                                push rbx	       141	svcproc.c	FUNCTION_6
0x40007f9	          0x4889f5	                            mov rbp, rsi	       141	svcproc.c	FUNCTION_6
0x40007fc	        0x4883ec18	                           sub rsp, 0x18	       141	svcproc.c	FUNCTION_6
0x4000800	    0x488b9fb01a00	          mov rbx, qword [rdi + 0x1ab0] 	       142	svcproc.c	FUNCTION_6
0x4000807	    0x65488b042528	                mov rax, qword gs:[0x28]	       141	svcproc.c	FUNCTION_6
0x4000810	      0x4889442410	             mov qword [rsp + 0x10], rax	       141	svcproc.c	FUNCTION_6
0x4000815	            0x31c0	                            xor eax, eax	       141	svcproc.c	FUNCTION_6
0x4000817	      0x488d4c2408	                      lea rcx, [rsp + 8]	       152	svcproc.c	FUNCTION_6	IF_1	CALL_2
0x400081c	          0x4889e2	                            mov rdx, rsp	       152	svcproc.c	FUNCTION_6	IF_1	CALL_2
0x400081f	          0x488b03	                    mov rax, qword [rbx]	       149	svcproc.c	FUNCTION_6
0x4000822	          0x488906	                    mov qword [rsi], rax	       149	svcproc.c	FUNCTION_6
0x4000825	        0x488b4308	                mov rax, qword [rbx + 8]	       149	svcproc.c	FUNCTION_6
0x4000829	        0x48894608	                mov qword [rsi + 8], rax	       149	svcproc.c	FUNCTION_6
0x400082d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       149	svcproc.c	FUNCTION_6
0x4000831	        0x48894610	             mov qword [rsi + 0x10], rax	       149	svcproc.c	FUNCTION_6
0x4000835	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       149	svcproc.c	FUNCTION_6
0x4000839	        0x48894618	             mov qword [rsi + 0x18], rax	       149	svcproc.c	FUNCTION_6
0x400083d	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       149	svcproc.c	FUNCTION_6
0x4000840	          0x894620	             mov dword [rsi + 0x20], eax	       149	svcproc.c	FUNCTION_6
0x4000843	          0x4889de	                            mov rsi, rbx	       152	svcproc.c	FUNCTION_6	IF_1	CALL_2
0x4000846	      0xe815f8ffff	           call sym.nlmsvc_retrieve_args	       152	svcproc.c	FUNCTION_6	IF_1	CALL_2
0x400084b	            0x85c0	                           test eax, eax	       152	svcproc.c	FUNCTION_6	IF_1	CALL_2
0x400084d	          0x894524	            mov dword [rbp + 0x24], eax 	       152	svcproc.c	FUNCTION_6	IF_1	CALL_2
0x4000850	            0x7431	                            je 0x4000883	       152	svcproc.c	FUNCTION_6	IF_1	CALL_2
0x4000852	      0x3d00007530	                     cmp eax, 0x30750000	       153	svcproc.c	FUNCTION_6	IF_1
0x4000857	      0xba00000000	                              mov edx, 0	       153	svcproc.c	FUNCTION_6	IF_1
0x400085c	      0xb80000ea60	                     mov eax, 0x60ea0000	       153	svcproc.c	FUNCTION_6	IF_1
0x4000861	           0xf45c2	                         cmovne eax, edx	       153	svcproc.c	FUNCTION_6	IF_1
0x4000864	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       179	svcproc.c	FUNCTION_6
0x4000869	    0x654833342528	                xor rsi, qword gs:[0x28]	       179	svcproc.c	FUNCTION_6
0x4000872	     0xf85b5000000	                           jne 0x400092d	       179	svcproc.c	FUNCTION_6
0x4000878	        0x4883c418	                           add rsp, 0x18	       179	svcproc.c	FUNCTION_6
0x400087c	              0x5b	                                 pop rbx	       179	svcproc.c	FUNCTION_6
0x400087d	              0x5d	                                 pop rbp	       179	svcproc.c	FUNCTION_6
0x400087e	            0x415c	                                 pop r12	       179	svcproc.c	FUNCTION_6
0x4000880	            0x415d	                                 pop r13	       179	svcproc.c	FUNCTION_6
0x4000882	              0xc3	                                     ret	       179	svcproc.c	FUNCTION_6
0x4000883	    0x8b839c010000	           mov eax, dword [rbx + 0x19c] 	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x4000889	    0x458bac24901a	         mov r13d, dword [r12 + 0x1a90] 	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x4000891	        0x488d4b28	                   lea rcx, [rbx + 0x28]	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x4000895	          0x4989d9	                             mov r9, rbx	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x4000898	          0x4c89e7	                            mov rdi, r12	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x400089b	              0x50	                                push rax	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x400089c	      0x488b542408	                mov rdx, qword [rsp + 8]	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x40008a1	    0x448b83980100	           mov r8d, dword [rbx + 0x198] 	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x40008a8	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x40008ad	      0xe800000000	                          call 0x40008b2	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x40008b2	        0x4183fd04	                             cmp r13d, 4	        24	svcproc.c	FUNCTION_1	IF_1
0x40008b6	              0x5a	                                 pop rdx	        24	svcproc.c	FUNCTION_1	IF_1
0x40008b7	            0x7442	                            je 0x40008fb	        24	svcproc.c	FUNCTION_1	IF_1
0x40008b9	      0x3d00000003	                      cmp eax, 0x3000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008be	            0x743b	                            je 0x40008fb	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008c0	            0x762b	                           jbe 0x40008ed	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008c2	      0x3d00000005	                      cmp eax, 0x5000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008c7	      0xba00000001	                      mov edx, 0x1000000	        34	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008cc	            0x7544	                           jne 0x4000912	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008ce	          0x895524	            mov dword [rbp + 0x24], edx 	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x40008d1	            0x31db	                            xor ebx, ebx	       145	svcproc.c	FUNCTION_6
0x40008d3	        0x488b3c24	                    mov rdi, qword [rsp]	       176	svcproc.c	FUNCTION_6	CALL_6
0x40008d7	      0xe800000000	                          call 0x40008dc	       176	svcproc.c	FUNCTION_6	CALL_6
0x40008dc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       177	svcproc.c	FUNCTION_6	CALL_7
0x40008e1	      0xe800000000	                          call 0x40008e6	       177	svcproc.c	FUNCTION_6	CALL_7
0x40008e6	            0x89d8	                            mov eax, ebx	       178	svcproc.c	FUNCTION_6
0x40008e8	      0xe977ffffff	                           jmp 0x4000864	       178	svcproc.c	FUNCTION_6
0x40008ed	      0x3d00000001	                      cmp eax, 0x1000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008f2	            0x7407	                            je 0x40008fb	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008f4	      0x3d00000002	                      cmp eax, 0x2000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008f9	            0x752c	                           jne 0x4000927	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40008fb	      0x3d00007530	                     cmp eax, 0x30750000	       172	svcproc.c	FUNCTION_6	IF_3
0x4000900	          0x894524	            mov dword [rbp + 0x24], eax 	       168	svcproc.c	FUNCTION_6	ELSE_1	CALL_3
0x4000903	      0xbb0000ea60	                     mov ebx, 0x60ea0000	       172	svcproc.c	FUNCTION_6	IF_3
0x4000908	      0xb800000000	                              mov eax, 0	       172	svcproc.c	FUNCTION_6	IF_3
0x400090d	           0xf45d8	                         cmovne ebx, eax	       172	svcproc.c	FUNCTION_6	IF_3
0x4000910	            0xebc1	                           jmp 0x40008d3	       172	svcproc.c	FUNCTION_6	IF_3
0x4000912	      0x3d00007530	                     cmp eax, 0x30750000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000917	            0x74e2	                            je 0x40008fb	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000919	      0x3d00000004	  cmp eax, loc.imp.nlmsvc_decode_notify 	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400091e	            0x74db	                            je 0x40008fb	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000920	      0xba00000002	                      mov edx, 0x2000000	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000925	            0xeba7	                           jmp 0x40008ce	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000927	            0x85c0	                           test eax, eax	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000929	            0x75f5	                           jne 0x4000920	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400092b	            0xebce	                           jmp 0x40008fb	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400092d	      0xe800000000	                          call 0x4000932	       179	svcproc.c	FUNCTION_6
nlmsvc_proc_granted_msg	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,2	3
0x4000c80	    0x48c7c2000000	                              mov rdx, 0	       379	svcproc.c	FUNCTION_22	CALL_2
0x4000c87	      0xbe0f000000	                            mov esi, 0xf	       379	svcproc.c	FUNCTION_22	CALL_2
0x4000c8c	      0xe94fffffff	                 jmp sym.nlmsvc_callback	       379	svcproc.c	FUNCTION_22	CALL_2
__nlmsvc_proc_cancel	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,2:DO,0:FOR,0:CALL,9	88
0x4000690	            0x4156	                                push r14	       189	svcproc.c	FUNCTION_8
0x4000692	            0x4155	                                push r13	       189	svcproc.c	FUNCTION_8
0x4000694	          0x4989fd	                            mov r13, rdi	       189	svcproc.c	FUNCTION_8
0x4000697	            0x4154	                                push r12	       189	svcproc.c	FUNCTION_8
0x4000699	              0x55	                                push rbp	       189	svcproc.c	FUNCTION_8
0x400069a	              0x53	                                push rbx	       189	svcproc.c	FUNCTION_8
0x400069b	          0x4889f3	                            mov rbx, rsi	       189	svcproc.c	FUNCTION_8
0x400069e	        0x4883ec18	                           sub rsp, 0x18	       189	svcproc.c	FUNCTION_8
0x40006a2	    0x488bafb01a00	          mov rbp, qword [rdi + 0x1ab0] 	       190	svcproc.c	FUNCTION_8
0x40006a9	    0x65488b042528	                mov rax, qword gs:[0x28]	       189	svcproc.c	FUNCTION_8
0x40006b2	      0x4889442410	             mov qword [rsp + 0x10], rax	       189	svcproc.c	FUNCTION_8
0x40006b7	            0x31c0	                            xor eax, eax	       189	svcproc.c	FUNCTION_8
0x40006b9	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       193	svcproc.c	FUNCTION_8	CALL_1
0x40006bd	    0x4c8bb0900200	           mov r14, qword [rax + 0x290] 	       193	svcproc.c	FUNCTION_8	CALL_1
0x40006c4	        0x488b4500	                    mov rax, qword [rbp]	       197	svcproc.c	FUNCTION_8
0x40006c8	          0x488906	                    mov qword [rsi], rax	       197	svcproc.c	FUNCTION_8
0x40006cb	        0x488b4508	                mov rax, qword [rbp + 8]	       197	svcproc.c	FUNCTION_8
0x40006cf	          0x4c89f7	                            mov rdi, r14	       200	svcproc.c	FUNCTION_8	IF_1	CALL_3
0x40006d2	        0x48894608	                mov qword [rsi + 8], rax	       197	svcproc.c	FUNCTION_8
0x40006d6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       197	svcproc.c	FUNCTION_8
0x40006da	        0x48894610	             mov qword [rsi + 0x10], rax	       197	svcproc.c	FUNCTION_8
0x40006de	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       197	svcproc.c	FUNCTION_8
0x40006e2	        0x48894618	             mov qword [rsi + 0x18], rax	       197	svcproc.c	FUNCTION_8
0x40006e6	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       197	svcproc.c	FUNCTION_8
0x40006e9	          0x894620	             mov dword [rsi + 0x20], eax	       197	svcproc.c	FUNCTION_8
0x40006ec	      0xe800000000	                          call 0x40006f1	       200	svcproc.c	FUNCTION_8	IF_1	CALL_3
0x40006f1	            0x84c0	                             test al, al	       200	svcproc.c	FUNCTION_8	IF_1	CALL_3
0x40006f3	            0x742e	                            je 0x4000723	       200	svcproc.c	FUNCTION_8	IF_1	CALL_3
0x40006f5	    0xc74324000000	mov dword [rbx + 0x24], loc.imp.nlmsvc_decode_notify 	       201	svcproc.c	FUNCTION_8	IF_1
0x40006fc	          0x4531e4	                          xor r12d, r12d	       202	svcproc.c	FUNCTION_8	IF_1
0x40006ff	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       216	svcproc.c	FUNCTION_8
0x4000704	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       216	svcproc.c	FUNCTION_8
0x400070d	          0x4489e0	                           mov eax, r12d	       216	svcproc.c	FUNCTION_8
0x4000710	     0xf85b7000000	                           jne 0x40007cd	       216	svcproc.c	FUNCTION_8
0x4000716	        0x4883c418	                           add rsp, 0x18	       216	svcproc.c	FUNCTION_8
0x400071a	              0x5b	                                 pop rbx	       216	svcproc.c	FUNCTION_8
0x400071b	              0x5d	                                 pop rbp	       216	svcproc.c	FUNCTION_8
0x400071c	            0x415c	                                 pop r12	       216	svcproc.c	FUNCTION_8
0x400071e	            0x415d	                                 pop r13	       216	svcproc.c	FUNCTION_8
0x4000720	            0x415e	                                 pop r14	       216	svcproc.c	FUNCTION_8
0x4000722	              0xc3	                                     ret	       216	svcproc.c	FUNCTION_8
0x4000723	      0x488d4c2408	                      lea rcx, [rsp + 8]	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x4000728	          0x4889e2	                            mov rdx, rsp	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x400072b	          0x4889ee	                            mov rsi, rbp	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x400072e	          0x4c89ef	                            mov rdi, r13	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x4000731	      0xe82af9ffff	           call sym.nlmsvc_retrieve_args	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x4000736	            0x85c0	                           test eax, eax	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x4000738	          0x4189c4	                           mov r12d, eax	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x400073b	          0x894324	             mov dword [rbx + 0x24], eax	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x400073e	            0x7416	                            je 0x4000756	       206	svcproc.c	FUNCTION_8	IF_2	CALL_4
0x4000740	      0x3d00007530	                     cmp eax, 0x30750000	       207	svcproc.c	FUNCTION_8	IF_2
0x4000745	    0x41bc00000000	                             mov r12d, 0	       207	svcproc.c	FUNCTION_8	IF_2
0x400074b	      0xb80000ea60	                     mov eax, 0x60ea0000	       207	svcproc.c	FUNCTION_8	IF_2
0x4000750	        0x440f44e0	                         cmove r12d, eax	       207	svcproc.c	FUNCTION_8	IF_2
0x4000754	            0xeba9	                           jmp 0x40006ff	       207	svcproc.c	FUNCTION_8	IF_2
0x4000756	    0x458bad901a00	         mov r13d, dword [r13 + 0x1a90] 	       210	svcproc.c	FUNCTION_8	CALL_5
0x400075d	      0x488b742408	                mov rsi, qword [rsp + 8]	       210	svcproc.c	FUNCTION_8	CALL_5
0x4000762	        0x488d5528	                   lea rdx, [rbp + 0x28]	       210	svcproc.c	FUNCTION_8	CALL_5
0x4000766	          0x4c89f7	                            mov rdi, r14	       210	svcproc.c	FUNCTION_8	CALL_5
0x4000769	      0xe800000000	                          call 0x400076e	       210	svcproc.c	FUNCTION_8	CALL_5
0x400076e	        0x4183fd04	                             cmp r13d, 4	        24	svcproc.c	FUNCTION_1	IF_1
0x4000772	            0x7415	                            je 0x4000789	        24	svcproc.c	FUNCTION_1	IF_1
0x4000774	      0x3d00000003	                      cmp eax, 0x3000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000779	            0x740e	                            je 0x4000789	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400077b	            0x7627	                           jbe 0x40007a4	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x400077d	      0x3d00000005	                      cmp eax, 0x5000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000782	            0x7539	                           jne 0x40007bd	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000784	      0xb800000001	                      mov eax, 0x1000000	        34	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000789	        0x488b3c24	                    mov rdi, qword [rsp]	       213	svcproc.c	FUNCTION_8	CALL_8
0x400078d	          0x894324	             mov dword [rbx + 0x24], eax	       210	svcproc.c	FUNCTION_8	CALL_5
0x4000790	      0xe800000000	                          call 0x4000795	       213	svcproc.c	FUNCTION_8	CALL_8
0x4000795	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       214	svcproc.c	FUNCTION_8	CALL_9
0x400079a	      0xe800000000	                          call 0x400079f	       214	svcproc.c	FUNCTION_8	CALL_9
0x400079f	      0xe95bffffff	                           jmp 0x40006ff	       215	svcproc.c	FUNCTION_8
0x40007a4	      0x3d00000001	                      cmp eax, 0x1000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007a9	            0x74de	                            je 0x4000789	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007ab	      0x3d00000002	                      cmp eax, 0x2000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007b0	            0x74d7	                            je 0x4000789	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007b2	            0x85c0	                           test eax, eax	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007b4	            0x74d3	                            je 0x4000789	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007b6	      0xb800000002	                      mov eax, 0x2000000	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007bb	            0xebcc	                           jmp 0x4000789	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007bd	      0x3d00007530	                     cmp eax, 0x30750000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007c2	            0x74c5	                            je 0x4000789	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007c4	      0x3d00000004	  cmp eax, loc.imp.nlmsvc_decode_notify 	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007c9	            0x75eb	                           jne 0x40007b6	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007cb	            0xebbc	                           jmp 0x4000789	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x40007cd	      0xe800000000	                          call 0x40007d2	       216	svcproc.c	FUNCTION_8
__nlmsvc_proc_test	SWITCH,0:ELSE,1:WHILE,0:functions,0:IF,2:DO,0:FOR,0:CALL,7	85
0x4000970	            0x4155	                                push r13	       107	svcproc.c	FUNCTION_4
0x4000972	            0x4154	                                push r12	       107	svcproc.c	FUNCTION_4
0x4000974	          0x4989fc	                            mov r12, rdi	       107	svcproc.c	FUNCTION_4
0x4000977	              0x55	                                push rbp	       107	svcproc.c	FUNCTION_4
0x4000978	              0x53	                                push rbx	       107	svcproc.c	FUNCTION_4
0x4000979	          0x4889f5	                            mov rbp, rsi	       107	svcproc.c	FUNCTION_4
0x400097c	        0x4883ec18	                           sub rsp, 0x18	       107	svcproc.c	FUNCTION_4
0x4000980	    0x488b9fb01a00	          mov rbx, qword [rdi + 0x1ab0] 	       108	svcproc.c	FUNCTION_4
0x4000987	    0x65488b042528	                mov rax, qword gs:[0x28]	       107	svcproc.c	FUNCTION_4
0x4000990	      0x4889442410	             mov qword [rsp + 0x10], rax	       107	svcproc.c	FUNCTION_4
0x4000995	            0x31c0	                            xor eax, eax	       107	svcproc.c	FUNCTION_4
0x4000997	      0x488d4c2408	                      lea rcx, [rsp + 8]	       117	svcproc.c	FUNCTION_4	IF_1	CALL_2
0x400099c	          0x4889e2	                            mov rdx, rsp	       117	svcproc.c	FUNCTION_4	IF_1	CALL_2
0x400099f	          0x488b03	                    mov rax, qword [rbx]	       114	svcproc.c	FUNCTION_4
0x40009a2	          0x488906	                    mov qword [rsi], rax	       114	svcproc.c	FUNCTION_4
0x40009a5	        0x488b4308	                mov rax, qword [rbx + 8]	       114	svcproc.c	FUNCTION_4
0x40009a9	        0x48894608	                mov qword [rsi + 8], rax	       114	svcproc.c	FUNCTION_4
0x40009ad	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       114	svcproc.c	FUNCTION_4
0x40009b1	        0x48894610	             mov qword [rsi + 0x10], rax	       114	svcproc.c	FUNCTION_4
0x40009b5	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       114	svcproc.c	FUNCTION_4
0x40009b9	        0x48894618	             mov qword [rsi + 0x18], rax	       114	svcproc.c	FUNCTION_4
0x40009bd	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       114	svcproc.c	FUNCTION_4
0x40009c0	          0x894620	             mov dword [rsi + 0x20], eax	       114	svcproc.c	FUNCTION_4
0x40009c3	          0x4889de	                            mov rsi, rbx	       117	svcproc.c	FUNCTION_4	IF_1	CALL_2
0x40009c6	      0xe895f6ffff	           call sym.nlmsvc_retrieve_args	       117	svcproc.c	FUNCTION_4	IF_1	CALL_2
0x40009cb	            0x85c0	                           test eax, eax	       117	svcproc.c	FUNCTION_4	IF_1	CALL_2
0x40009cd	          0x894524	            mov dword [rbp + 0x24], eax 	       117	svcproc.c	FUNCTION_4	IF_1	CALL_2
0x40009d0	            0x7431	                            je 0x4000a03	       117	svcproc.c	FUNCTION_4	IF_1	CALL_2
0x40009d2	      0x3d00007530	                     cmp eax, 0x30750000	       118	svcproc.c	FUNCTION_4	IF_1
0x40009d7	      0xba00000000	                              mov edx, 0	       118	svcproc.c	FUNCTION_4	IF_1
0x40009dc	      0xb80000ea60	                     mov eax, 0x60ea0000	       118	svcproc.c	FUNCTION_4	IF_1
0x40009e1	           0xf45c2	                         cmovne eax, edx	       118	svcproc.c	FUNCTION_4	IF_1
0x40009e4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       131	svcproc.c	FUNCTION_4
0x40009e9	    0x654833342528	                xor rsi, qword gs:[0x28]	       131	svcproc.c	FUNCTION_4
0x40009f2	     0xf85a6000000	                           jne 0x4000a9e	       131	svcproc.c	FUNCTION_4
0x40009f8	        0x4883c418	                           add rsp, 0x18	       131	svcproc.c	FUNCTION_4
0x40009fc	              0x5b	                                 pop rbx	       131	svcproc.c	FUNCTION_4
0x40009fd	              0x5d	                                 pop rbp	       131	svcproc.c	FUNCTION_4
0x40009fe	            0x415c	                                 pop r12	       131	svcproc.c	FUNCTION_4
0x4000a00	            0x415d	                                 pop r13	       131	svcproc.c	FUNCTION_4
0x4000a02	              0xc3	                                     ret	       131	svcproc.c	FUNCTION_4
0x4000a03	    0x458bac24901a	         mov r13d, dword [r12 + 0x1a90] 	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a0b	        0x488b1424	                    mov rdx, qword [rsp]	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a0f	        0x488d4b28	                   lea rcx, [rbx + 0x28]	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a13	      0x488b742408	                mov rsi, qword [rsp + 8]	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a18	        0x4c8d4528	                    lea r8, [rbp + 0x28]	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a1c	          0x4989e9	                             mov r9, rbp	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a1f	          0x4c89e7	                            mov rdi, r12	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a22	      0xe800000000	                          call 0x4000a27	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a27	        0x4183fd04	                             cmp r13d, 4	        24	svcproc.c	FUNCTION_1	IF_1
0x4000a2b	            0x743f	                            je 0x4000a6c	        24	svcproc.c	FUNCTION_1	IF_1
0x4000a2d	      0x3d00000003	                      cmp eax, 0x3000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a32	            0x7438	                            je 0x4000a6c	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a34	            0x7628	                           jbe 0x4000a5e	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a36	      0x3d00000005	                      cmp eax, 0x5000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a3b	      0xba00000001	                      mov edx, 0x1000000	        34	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a40	            0x7541	                           jne 0x4000a83	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a42	          0x895524	            mov dword [rbp + 0x24], edx 	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a45	            0x31db	                            xor ebx, ebx	       111	svcproc.c	FUNCTION_4
0x4000a47	        0x488b3c24	                    mov rdi, qword [rsp]	       128	svcproc.c	FUNCTION_4	CALL_6
0x4000a4b	      0xe800000000	                          call 0x4000a50	       128	svcproc.c	FUNCTION_4	CALL_6
0x4000a50	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       129	svcproc.c	FUNCTION_4	CALL_7
0x4000a55	      0xe800000000	                          call 0x4000a5a	       129	svcproc.c	FUNCTION_4	CALL_7
0x4000a5a	            0x89d8	                            mov eax, ebx	       130	svcproc.c	FUNCTION_4
0x4000a5c	            0xeb86	                           jmp 0x40009e4	       130	svcproc.c	FUNCTION_4
0x4000a5e	      0x3d00000001	                      cmp eax, 0x1000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a63	            0x7407	                            je 0x4000a6c	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a65	      0x3d00000002	                      cmp eax, 0x2000000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a6a	            0x752c	                           jne 0x4000a98	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a6c	      0x3d00007530	                     cmp eax, 0x30750000	       123	svcproc.c	FUNCTION_4	IF_2
0x4000a71	          0x894524	            mov dword [rbp + 0x24], eax 	       121	svcproc.c	FUNCTION_4	CALL_3
0x4000a74	      0xbb0000ea60	                     mov ebx, 0x60ea0000	       123	svcproc.c	FUNCTION_4	IF_2
0x4000a79	      0xb800000000	                              mov eax, 0	       123	svcproc.c	FUNCTION_4	IF_2
0x4000a7e	           0xf45d8	                         cmovne ebx, eax	       123	svcproc.c	FUNCTION_4	IF_2
0x4000a81	            0xebc4	                           jmp 0x4000a47	       123	svcproc.c	FUNCTION_4	IF_2
0x4000a83	      0x3d00007530	                     cmp eax, 0x30750000	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a88	            0x74e2	                            je 0x4000a6c	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a8a	      0x3d00000004	  cmp eax, loc.imp.nlmsvc_decode_notify 	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a8f	            0x74db	                            je 0x4000a6c	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a91	      0xba00000002	                      mov edx, 0x2000000	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a96	            0xebaa	                           jmp 0x4000a42	        37	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a98	            0x85c0	                           test eax, eax	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a9a	            0x75f5	                           jne 0x4000a91	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a9c	            0xebce	                           jmp 0x4000a6c	        25	svcproc.c	FUNCTION_1	IF_1	SWITCH_1
0x4000a9e	      0xe800000000	                          call 0x4000aa3	       131	svcproc.c	FUNCTION_4
nlmsvc_proc_cancel	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,1	2
0x40007e0	    0x488bb7b81a00	          mov rsi, qword [rdi + 0x1ab8] 	       221	svcproc.c	FUNCTION_9	CALL_1
0x40007e7	      0xe9a4feffff	            jmp sym.__nlmsvc_proc_cancel	       221	svcproc.c	FUNCTION_9	CALL_1
nlmsvc_proc_test_msg	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,2	3
0x4000d00	    0x48c7c2000000	                              mov rdx, 0	       353	svcproc.c	FUNCTION_18	CALL_2
0x4000d07	      0xbe0b000000	                            mov esi, 0xb	       353	svcproc.c	FUNCTION_18	CALL_2
0x4000d0c	      0xe9cffeffff	                 jmp sym.nlmsvc_callback	       353	svcproc.c	FUNCTION_18	CALL_2
nlmsvc_proc_granted_res	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,1:DO,0:FOR,0:CALL,2	7
0x40004b0	    0x48833d000000	               cmp qword [0x040004b8], 0	       511	svcproc.c	FUNCTION_28	IF_1
0x40004b8	            0x740f	                            je 0x40004c9	       511	svcproc.c	FUNCTION_28	IF_1
0x40004ba	    0x488bbfb01a00	          mov rdi, qword [rdi + 0x1ab0] 	       509	svcproc.c	FUNCTION_28
0x40004c1	          0x8b7724	            mov esi, dword [rdi + 0x24] 	       516	svcproc.c	FUNCTION_28	CALL_2
0x40004c4	      0xe800000000	                          call 0x40004c9	       516	svcproc.c	FUNCTION_28	CALL_2
0x40004c9	            0x31c0	                            xor eax, eax	       518	svcproc.c	FUNCTION_28
0x40004cb	              0xc3	                                     ret	       518	svcproc.c	FUNCTION_28
nlmsvc_callback_release	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,1	1
0x4000d20	      0xe98bfeffff	             jmp sym.nlmsvc_release_call	       306	svcproc.c	FUNCTION_16	CALL_1
nlmsvc_proc_cancel_msg	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,2	3
0x4000cc0	    0x48c7c2000000	                              mov rdx, 0	       365	svcproc.c	FUNCTION_20	CALL_2
0x4000cc7	      0xbe0d000000	                            mov esi, 0xd	       365	svcproc.c	FUNCTION_20	CALL_2
0x4000ccc	      0xe90fffffff	                 jmp sym.nlmsvc_callback	       365	svcproc.c	FUNCTION_20	CALL_2
nlmsvc_proc_null	SWITCH,0:ELSE,0:WHILE,0:functions,0:IF,0:DO,0:FOR,0:CALL,1	2
0x4000040	            0x31c0	                            xor eax, eax	       100	svcproc.c	FUNCTION_3
0x4000042	              0xc3	                                     ret	       100	svcproc.c	FUNCTION_3
