avc_add_callback	DO,0:functions,0:IF,1:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,1	22
0x40000c9	          0xc00f84	                    ror byte [rdi], 0x84	       190	avc.c	FUNCTION_6	IF_2
0x40000cc	              0xae	                    scasb al, byte [rdi]	       190	avc.c	FUNCTION_6	IF_2
0x40000cd	               0x0	                      add byte [rax], al	       190	avc.c	FUNCTION_6	IF_2
0x40000cf	          0x4489f2	        add byte [rcx + rcx*4 - 0xe], al	       190	avc.c	FUNCTION_6	IF_2
0x40000d3	    0x48c7c6000000	                              mov rsi, 0	       191	avc.c	FUNCTION_6	CALL_6
0x40000da	          0x4889ef	                            mov rdi, rbp	       191	avc.c	FUNCTION_6	CALL_6
0x40000dd	      0xe800000000	                          call 0x40000e2	       191	avc.c	FUNCTION_6	CALL_6
0x40000e2	          0x8d43ff	                      lea eax, [rbx - 1]	       197	avc.c	FUNCTION_6	CALL_10
0x40000e5	        0x6683f85a	                            cmp ax, 0x5a	       197	avc.c	FUNCTION_6	CALL_10
0x40000e9	     0xf87ba000000	                            ja 0x40001a9	       197	avc.c	FUNCTION_6	CALL_10
0x40000ef	          0x83eb01	                              sub ebx, 1	       198	avc.c	FUNCTION_6	CALL_11
0x40000f2	    0x48c7c6000000	                              mov rsi, 0	       198	avc.c	FUNCTION_6	CALL_11
0x40000f9	          0x4889ef	                            mov rdi, rbp	       198	avc.c	FUNCTION_6	CALL_11
0x40000fc	          0x4863db	                         movsxd rbx, ebx	       198	avc.c	FUNCTION_6	CALL_11
0x40000ff	          0x4889d8	                            mov rax, rbx	       198	avc.c	FUNCTION_6	CALL_11
0x4000102	        0x48c1e308	                              shl rbx, 8	       198	avc.c	FUNCTION_6	CALL_11
0x4000106	        0x48c1e004	                              shl rax, 4	       198	avc.c	FUNCTION_6	CALL_11
0x400010a	              0x48	                                 invalid	       198	avc.c	FUNCTION_6	CALL_11
0x400010b	              0x8b	                                 invalid	       198	avc.c	FUNCTION_6	CALL_11
0x400010c	              0x94	                           xchg eax, esp	       198	avc.c	FUNCTION_6	CALL_11
0x400010d	            0x1800	                      sbb byte [rax], al	       198	avc.c	FUNCTION_6	CALL_11
0x400010f	               0x0	                                 invalid	       198	avc.c	FUNCTION_6	CALL_11
avc_disable	DO,0:functions,0:IF,1:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,1	5
0x40018a0	    0x48833d000000	               cmp qword [0x040018a8], 0	      1230	avc.c	FUNCTION_47	IF_1
0x40018a8	            0x740c	                            je 0x40018b6	      1230	avc.c	FUNCTION_47	IF_1
0x40018aa	    0x488b3d000000	            mov rdi, qword [0x040018b1] 	      1231	avc.c	FUNCTION_47	IF_1	CALL_1
0x40018b1	      0xe94aeaffff	                       jmp sym.avc_flush	      1231	avc.c	FUNCTION_47	IF_1	CALL_1
0x40018b6	            0xf3c3	                                     ret	      1231	avc.c	FUNCTION_47	IF_1	CALL_1
avc_set_cache_threshold	DO,0:functions,0:IF,0:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,0	2
0x4000e10	            0x8937	                    mov dword [rdi], esi	       118	avc.c	FUNCTION_3
0x4000e12	              0xc3	                                     ret	       118	avc.c	FUNCTION_3
avc_init	DO,0:functions,0:IF,0:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,4	36
0x4000040	            0x4157	                                push r15	       752	avc.c	FUNCTION_34
0x4000042	            0x4156	                                push r14	       752	avc.c	FUNCTION_34
0x4000044	            0x4155	                                push r13	       752	avc.c	FUNCTION_34
0x4000046	            0x4154	                                push r12	       752	avc.c	FUNCTION_34
0x4000048	          0x4989f4	                            mov r12, rsi	       752	avc.c	FUNCTION_34
0x400004b	              0x55	                                push rbp	       752	avc.c	FUNCTION_34
0x400004c	              0x53	                                push rbx	       752	avc.c	FUNCTION_34
0x400004d	    0x48c7c6000000	                              mov rsi, 0	       754	avc.c	FUNCTION_34	CALL_1
0x4000054	          0x4889fd	                            mov rbp, rdi	       752	avc.c	FUNCTION_34
0x4000057	        0x4883ec18	                           sub rsp, 0x18	       752	avc.c	FUNCTION_34
0x400005b	    0x65488b042528	                mov rax, qword gs:[0x28]	       752	avc.c	FUNCTION_34
0x4000064	      0x4889442410	             mov qword [rsp + 0x10], rax	       752	avc.c	FUNCTION_34
0x4000069	            0x31c0	                            xor eax, eax	       752	avc.c	FUNCTION_34
0x400006b	      0xe800000000	                          call 0x4000070	       754	avc.c	FUNCTION_34	CALL_1
0x4000070	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       758	avc.c	FUNCTION_34
0x4000075	      0x488d4c2404	                      lea rcx, [rsp + 4]	       181	avc.c	FUNCTION_6	CALL_1
0x400007a	      0x488d542408	                      lea rdx, [rsp + 8]	       181	avc.c	FUNCTION_6	CALL_1
0x400007f	          0x448b38	                   mov r15d, dword [rax]	       755	avc.c	FUNCTION_34	CALL_2
0x4000082	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	       755	avc.c	FUNCTION_34	CALL_2
0x4000086	         0xfb75808	               movzx ebx, word [rax + 8]	       758	avc.c	FUNCTION_34
0x400008a	        0x448b7004	               mov r14d, dword [rax + 4]	       755	avc.c	FUNCTION_34	CALL_2
0x400008e	          0x4489fe	                           mov esi, r15d	       181	avc.c	FUNCTION_6	CALL_1
0x4000091	          0x4c89ef	                            mov rdi, r13	       181	avc.c	FUNCTION_6	CALL_1
0x4000094	      0xe800000000	                          call 0x4000099	       181	avc.c	FUNCTION_6	CALL_1
0x4000099	            0x85c0	                           test eax, eax	       182	avc.c	FUNCTION_6	IF_1
0x400009b	     0xf84ba000000	                            je 0x400015b	       182	avc.c	FUNCTION_6	IF_1
0x40000a1	          0x4489fa	                           mov edx, r15d	       183	avc.c	FUNCTION_6	CALL_2
0x40000a4	    0x48c7c6000000	                              mov rsi, 0	       183	avc.c	FUNCTION_6	CALL_2
0x40000ab	          0x4889ef	                            mov rdi, rbp	       183	avc.c	FUNCTION_6	CALL_2
0x40000ae	      0xe800000000	                          call 0x40000b3	       183	avc.c	FUNCTION_6	CALL_2
0x40000b3	      0x488d4c2404	                      lea rcx, [rsp + 4]	       189	avc.c	FUNCTION_6	CALL_5
0x40000b8	      0x488d542408	                      lea rdx, [rsp + 8]	       189	avc.c	FUNCTION_6	CALL_5
0x40000bd	          0x4489f6	                           mov esi, r14d	       189	avc.c	FUNCTION_6	CALL_5
0x40000c0	          0x4c89ef	                            mov rdi, r13	       189	avc.c	FUNCTION_6	CALL_5
0x40000c3	      0xe800000000	                          call 0x40000c8	       189	avc.c	FUNCTION_6	CALL_5
0x40000c8	              0x85	                                 invalid	       190	avc.c	FUNCTION_6	IF_2
avc_xperms_decision_free	DO,0:functions,0:IF,3:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,4	21
0x40003d0	              0x53	                                push rbx	       297	avc.c	FUNCTION_12
0x40003d1	        0x488b7708	                mov rsi, qword [rdi + 8]	       301	avc.c	FUNCTION_12	IF_1
0x40003d5	          0x4889fb	                            mov rbx, rdi	       297	avc.c	FUNCTION_12
0x40003d8	          0x4885f6	                           test rsi, rsi	       301	avc.c	FUNCTION_12	IF_1
0x40003db	            0x740c	                            je 0x40003e9	       301	avc.c	FUNCTION_12	IF_1
0x40003dd	    0x488b3d000000	            mov rdi, qword [0x040003e4] 	       302	avc.c	FUNCTION_12	CALL_1
0x40003e4	      0xe800000000	                          call 0x40003e9	       302	avc.c	FUNCTION_12	CALL_1
0x40003e9	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       303	avc.c	FUNCTION_12	IF_2
0x40003ed	          0x4885f6	                           test rsi, rsi	       303	avc.c	FUNCTION_12	IF_2
0x40003f0	            0x740c	                            je 0x40003fe	       303	avc.c	FUNCTION_12	IF_2
0x40003f2	    0x488b3d000000	            mov rdi, qword [0x040003f9] 	       304	avc.c	FUNCTION_12	CALL_2
0x40003f9	      0xe800000000	                          call 0x40003fe	       304	avc.c	FUNCTION_12	CALL_2
0x40003fe	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       305	avc.c	FUNCTION_12	IF_3
0x4000402	          0x4885f6	                           test rsi, rsi	       305	avc.c	FUNCTION_12	IF_3
0x4000405	            0x740c	                            je 0x4000413	       305	avc.c	FUNCTION_12	IF_3
0x4000407	    0x488b3d000000	            mov rdi, qword [0x0400040e] 	       306	avc.c	FUNCTION_12	CALL_3
0x400040e	      0xe800000000	                          call 0x4000413	       306	avc.c	FUNCTION_12	CALL_3
0x4000413	          0x4889de	                            mov rsi, rbx	       307	avc.c	FUNCTION_12	CALL_4
0x4000416	    0x488b3d000000	            mov rdi, qword [0x0400041d] 	       307	avc.c	FUNCTION_12	CALL_4
0x400041d	              0x5b	                                 pop rbx	       308	avc.c	FUNCTION_12
0x400041e	      0xe900000000	                           jmp 0x4000423	       307	avc.c	FUNCTION_12	CALL_4
avc_audit_post_callback	DO,0:functions,0:IF,1:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,3	93
0x4000040	            0x4157	                                push r15	       752	avc.c	FUNCTION_34
0x4000042	            0x4156	                                push r14	       752	avc.c	FUNCTION_34
0x4000044	            0x4155	                                push r13	       752	avc.c	FUNCTION_34
0x4000046	            0x4154	                                push r12	       752	avc.c	FUNCTION_34
0x4000048	          0x4989f4	                            mov r12, rsi	       752	avc.c	FUNCTION_34
0x400004b	              0x55	                                push rbp	       752	avc.c	FUNCTION_34
0x400004c	              0x53	                                push rbx	       752	avc.c	FUNCTION_34
0x400004d	    0x48c7c6000000	                              mov rsi, 0	       754	avc.c	FUNCTION_34	CALL_1
0x4000054	          0x4889fd	                            mov rbp, rdi	       752	avc.c	FUNCTION_34
0x4000057	        0x4883ec18	                           sub rsp, 0x18	       752	avc.c	FUNCTION_34
0x400005b	    0x65488b042528	                mov rax, qword gs:[0x28]	       752	avc.c	FUNCTION_34
0x4000064	      0x4889442410	             mov qword [rsp + 0x10], rax	       752	avc.c	FUNCTION_34
0x4000069	            0x31c0	                            xor eax, eax	       752	avc.c	FUNCTION_34
0x400006b	      0xe800000000	                          call 0x4000070	       754	avc.c	FUNCTION_34	CALL_1
0x4000070	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       758	avc.c	FUNCTION_34
0x4000075	      0x488d4c2404	                      lea rcx, [rsp + 4]	       181	avc.c	FUNCTION_6	CALL_1
0x400007a	      0x488d542408	                      lea rdx, [rsp + 8]	       181	avc.c	FUNCTION_6	CALL_1
0x400007f	          0x448b38	                   mov r15d, dword [rax]	       755	avc.c	FUNCTION_34	CALL_2
0x4000082	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	       755	avc.c	FUNCTION_34	CALL_2
0x4000086	         0xfb75808	               movzx ebx, word [rax + 8]	       758	avc.c	FUNCTION_34
0x400008a	        0x448b7004	               mov r14d, dword [rax + 4]	       755	avc.c	FUNCTION_34	CALL_2
0x400008e	          0x4489fe	                           mov esi, r15d	       181	avc.c	FUNCTION_6	CALL_1
0x4000091	          0x4c89ef	                            mov rdi, r13	       181	avc.c	FUNCTION_6	CALL_1
0x4000094	      0xe800000000	                          call 0x4000099	       181	avc.c	FUNCTION_6	CALL_1
0x4000099	            0x85c0	                           test eax, eax	       182	avc.c	FUNCTION_6	IF_1
0x400009b	     0xf84ba000000	                            je 0x400015b	       182	avc.c	FUNCTION_6	IF_1
0x40000a1	          0x4489fa	                           mov edx, r15d	       183	avc.c	FUNCTION_6	CALL_2
0x40000a4	    0x48c7c6000000	                              mov rsi, 0	       183	avc.c	FUNCTION_6	CALL_2
0x40000ab	          0x4889ef	                            mov rdi, rbp	       183	avc.c	FUNCTION_6	CALL_2
0x40000ae	      0xe800000000	                          call 0x40000b3	       183	avc.c	FUNCTION_6	CALL_2
0x40000b3	      0x488d4c2404	                      lea rcx, [rsp + 4]	       189	avc.c	FUNCTION_6	CALL_5
0x40000b8	      0x488d542408	                      lea rdx, [rsp + 8]	       189	avc.c	FUNCTION_6	CALL_5
0x40000bd	          0x4489f6	                           mov esi, r14d	       189	avc.c	FUNCTION_6	CALL_5
0x40000c0	          0x4c89ef	                            mov rdi, r13	       189	avc.c	FUNCTION_6	CALL_5
0x40000c3	      0xe800000000	                          call 0x40000c8	       189	avc.c	FUNCTION_6	CALL_5
0x40000c8	            0x85c0	                           test eax, eax	       190	avc.c	FUNCTION_6	IF_2
0x40000ca	     0xf84ae000000	                            je 0x400017e	       190	avc.c	FUNCTION_6	IF_2
0x40000d0	          0x4489f2	                           mov edx, r14d	       191	avc.c	FUNCTION_6	CALL_6
0x40000d3	    0x48c7c6000000	                              mov rsi, 0	       191	avc.c	FUNCTION_6	CALL_6
0x40000da	          0x4889ef	                            mov rdi, rbp	       191	avc.c	FUNCTION_6	CALL_6
0x40000dd	      0xe800000000	                          call 0x40000e2	       191	avc.c	FUNCTION_6	CALL_6
0x40000e2	          0x8d43ff	                      lea eax, [rbx - 1]	       197	avc.c	FUNCTION_6	CALL_10
0x40000e5	        0x6683f85a	                            cmp ax, 0x5a	       197	avc.c	FUNCTION_6	CALL_10
0x40000e9	     0xf87ba000000	                            ja 0x40001a9	       197	avc.c	FUNCTION_6	CALL_10
0x40000ef	          0x83eb01	                              sub ebx, 1	       198	avc.c	FUNCTION_6	CALL_11
0x40000f2	    0x48c7c6000000	                              mov rsi, 0	       198	avc.c	FUNCTION_6	CALL_11
0x40000f9	          0x4889ef	                            mov rdi, rbp	       198	avc.c	FUNCTION_6	CALL_11
0x40000fc	          0x4863db	                         movsxd rbx, ebx	       198	avc.c	FUNCTION_6	CALL_11
0x40000ff	          0x4889d8	                            mov rax, rbx	       198	avc.c	FUNCTION_6	CALL_11
0x4000102	        0x48c1e308	                              shl rbx, 8	       198	avc.c	FUNCTION_6	CALL_11
0x4000106	        0x48c1e004	                              shl rax, 4	       198	avc.c	FUNCTION_6	CALL_11
0x400010a	    0x488b94180000	              mov rdx, qword [rax + rbx]	       198	avc.c	FUNCTION_6	CALL_11
0x4000112	      0xe800000000	                          call 0x4000117	       198	avc.c	FUNCTION_6	CALL_11
0x4000117	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       759	avc.c	FUNCTION_34	IF_1
0x400011c	          0x8b5014	            mov edx, dword [rax + 0x14] 	       759	avc.c	FUNCTION_34	IF_1
0x400011f	            0x85d2	                           test edx, edx	       759	avc.c	FUNCTION_34	IF_1
0x4000121	            0x7419	                            je 0x400013c	       759	avc.c	FUNCTION_34	IF_1
0x4000123	          0x8b4018	            mov eax, dword [rax + 0x18] 	       760	avc.c	FUNCTION_34	IF_1	CALL_3
0x4000126	            0x31d2	                            xor edx, edx	       760	avc.c	FUNCTION_34	IF_1	CALL_3
0x4000128	    0x48c7c6000000	                              mov rsi, 0	       760	avc.c	FUNCTION_34	IF_1	CALL_3
0x400012f	          0x4889ef	                            mov rdi, rbp	       760	avc.c	FUNCTION_34	IF_1	CALL_3
0x4000132	            0x85c0	                           test eax, eax	       760	avc.c	FUNCTION_34	IF_1	CALL_3
0x4000134	           0xf94c2	                                 sete dl	       760	avc.c	FUNCTION_34	IF_1	CALL_3
0x4000137	      0xe800000000	                          call 0x400013c	       760	avc.c	FUNCTION_34	IF_1	CALL_3
0x400013c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       763	avc.c	FUNCTION_34
0x4000141	    0x654833042528	                xor rax, qword gs:[0x28]	       763	avc.c	FUNCTION_34
0x400014a	            0x755f	                           jne 0x40001ab	       763	avc.c	FUNCTION_34
0x400014c	        0x4883c418	                           add rsp, 0x18	       763	avc.c	FUNCTION_34
0x4000150	              0x5b	                                 pop rbx	       763	avc.c	FUNCTION_34
0x4000151	              0x5d	                                 pop rbp	       763	avc.c	FUNCTION_34
0x4000152	            0x415c	                                 pop r12	       763	avc.c	FUNCTION_34
0x4000154	            0x415d	                                 pop r13	       763	avc.c	FUNCTION_34
0x4000156	            0x415e	                                 pop r14	       763	avc.c	FUNCTION_34
0x4000158	            0x415f	                                 pop r15	       763	avc.c	FUNCTION_34
0x400015a	              0xc3	                                     ret	       763	avc.c	FUNCTION_34
0x400015b	      0x488b542408	                mov rdx, qword [rsp + 8]	       185	avc.c	FUNCTION_6	ELSE_1	CALL_3
0x4000160	          0x4889ef	                            mov rdi, rbp	       185	avc.c	FUNCTION_6	ELSE_1	CALL_3
0x4000163	    0x48c7c6000000	                              mov rsi, 0	       185	avc.c	FUNCTION_6	ELSE_1	CALL_3
0x400016a	      0xe800000000	                          call 0x400016f	       185	avc.c	FUNCTION_6	ELSE_1	CALL_3
0x400016f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       186	avc.c	FUNCTION_6	ELSE_1	CALL_4
0x4000174	      0xe800000000	                          call 0x4000179	       186	avc.c	FUNCTION_6	ELSE_1	CALL_4
0x4000179	      0xe935ffffff	                           jmp 0x40000b3	       186	avc.c	FUNCTION_6	ELSE_1	CALL_4
0x400017e	      0x488b542408	                mov rdx, qword [rsp + 8]	       193	avc.c	FUNCTION_6	ELSE_2	CALL_7
0x4000183	    0x48c7c6000000	                              mov rsi, 0	       193	avc.c	FUNCTION_6	ELSE_2	CALL_7
0x400018a	          0x4889ef	                            mov rdi, rbp	       193	avc.c	FUNCTION_6	ELSE_2	CALL_7
0x400018d	      0xe800000000	                          call 0x4000192	       193	avc.c	FUNCTION_6	ELSE_2	CALL_7
0x4000192	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       194	avc.c	FUNCTION_6	ELSE_2	CALL_8
0x4000197	      0xe800000000	                          call 0x400019c	       194	avc.c	FUNCTION_6	ELSE_2	CALL_8
0x400019c	          0x8d43ff	                      lea eax, [rbx - 1]	       197	avc.c	FUNCTION_6	CALL_10
0x400019f	        0x6683f85a	                            cmp ax, 0x5a	       197	avc.c	FUNCTION_6	CALL_10
0x40001a3	     0xf8646ffffff	                           jbe 0x40000ef	       197	avc.c	FUNCTION_6	CALL_10
0x40001a9	             0xf0b	                                     ud2	       197	avc.c	FUNCTION_6	CALL_10
0x40001ab	      0xe800000000	         call sym.avc_audit_pre_callback	       763	avc.c	FUNCTION_34
avc_policy_seqno	DO,0:functions,0:IF,0:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,0	3
0x4001890	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1214	avc.c	FUNCTION_46
0x4001894	    0x8b8010180000	          mov eax, dword [rax + 0x1810] 	      1214	avc.c	FUNCTION_46
0x400189a	              0xc3	                                     ret	      1215	avc.c	FUNCTION_46
avc_denied	DO,0:functions,0:IF,2:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,2	37
0x4000d30	            0x4154	                                push r12	      1016	avc.c	FUNCTION_41
0x4000d32	              0x55	                                push rbp	      1016	avc.c	FUNCTION_41
0x4000d33	              0x53	                                push rbx	      1016	avc.c	FUNCTION_41
0x4000d34	        0x8b6c2428	            mov ebp, dword [rsp + 0x28] 	      1016	avc.c	FUNCTION_41
0x4000d38	        0x8b5c2420	            mov ebx, dword [rsp + 0x20] 	      1016	avc.c	FUNCTION_41
0x4000d3c	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      1016	avc.c	FUNCTION_41
0x4000d41	        0x40f6c501	                             test bpl, 1	      1017	avc.c	FUNCTION_41	IF_1
0x4000d45	            0x754c	                           jne 0x4000d93	      1017	avc.c	FUNCTION_41	IF_1
0x4000d47	        0x807f0100	                   cmp byte [rdi + 1], 0	      1020	avc.c	FUNCTION_41	IF_2	CALL_1
0x4000d4b	            0x7408	                            je 0x4000d55	      1020	avc.c	FUNCTION_41	IF_2	CALL_1
0x4000d4d	    0x41f644241001	               test byte [r12 + 0x10], 1	      1020	avc.c	FUNCTION_41	IF_2	CALL_1
0x4000d53	            0x743e	                            je 0x4000d93	      1020	avc.c	FUNCTION_41	IF_2	CALL_1
0x4000d55	          0x4489c8	                            mov eax, r9d	      1020	avc.c	FUNCTION_41	IF_2	CALL_1
0x4000d58	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d5c	          0x4189ca	                           mov r10d, ecx	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d5f	              0x55	                                push rbp	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d60	           0xfb6c8	                           movzx ecx, al	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d63	            0x6a00	                                  push 0	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d65	      0x418b44240c	              mov eax, dword [r12 + 0xc]	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d6a	          0x4589c3	                           mov r11d, r8d	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d6d	          0x4189f1	                            mov r9d, esi	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d70	        0x440fb6c3	                           movzx r8d, bl	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d74	      0xbe01000000	                              mov esi, 1	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d79	              0x50	                                push rax	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d7a	        0x410fb7c2	                         movzx eax, r10w	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d7e	              0x50	                                push rax	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d7f	              0x52	                                push rdx	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d80	          0x4489da	                           mov edx, r11d	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d83	      0xe868fcffff	                call sym.avc_update_node	      1024	avc.c	FUNCTION_41	CALL_2
0x4000d88	            0x31c0	                            xor eax, eax	      1026	avc.c	FUNCTION_41
0x4000d8a	        0x4883c428	                           add rsp, 0x28	      1026	avc.c	FUNCTION_41
0x4000d8e	              0x5b	                                 pop rbx	      1027	avc.c	FUNCTION_41
0x4000d8f	              0x5d	                                 pop rbp	      1027	avc.c	FUNCTION_41
0x4000d90	            0x415c	                                 pop r12	      1027	avc.c	FUNCTION_41
0x4000d92	              0xc3	                                     ret	      1027	avc.c	FUNCTION_41
0x4000d93	      0xb8f3ffffff	                     mov eax, 0xfffffff3	      1018	avc.c	FUNCTION_41	IF_1
0x4000d98	            0xebf4	                           jmp 0x4000d8e	      1018	avc.c	FUNCTION_41	IF_1
slow_avc_audit	DO,0:functions,0:IF,2:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,1	39
0x4000e90	        0x4883ec50	                           sub rsp, 0x50	       771	avc.c	FUNCTION_35
0x4000e94	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       771	avc.c	FUNCTION_35
0x4000e99	    0x654c8b142528	                mov r10, qword gs:[0x28]	       771	avc.c	FUNCTION_35
0x4000ea2	      0x4c89542448	             mov qword [rsp + 0x48], r10	       771	avc.c	FUNCTION_35
0x4000ea7	          0x4531d2	                          xor r10d, r10d	       771	avc.c	FUNCTION_35
0x4000eaa	          0x4885c0	                           test rax, rax	       775	avc.c	FUNCTION_35	IF_1
0x4000ead	            0x746e	                            je 0x4000f1d	       775	avc.c	FUNCTION_35	IF_1
0x4000eaf	          0x803809	                       cmp byte [rax], 9	       787	avc.c	FUNCTION_35	IF_2
0x4000eb2	            0x7507	                           jne 0x4000ebb	       787	avc.c	FUNCTION_35	IF_2
0x4000eb4	      0xf644247080	           test byte [rsp + 0x70], 0x80 	       787	avc.c	FUNCTION_35	IF_2
0x4000eb9	            0x756b	                           jne 0x4000f26	       787	avc.c	FUNCTION_35	IF_2
0x4000ebb	        0x89542424	             mov dword [rsp + 0x24], edx	       794	avc.c	FUNCTION_35
0x4000ebf	        0x8b542458	            mov edx, dword [rsp + 0x58] 	       796	avc.c	FUNCTION_35
0x4000ec3	        0x89742420	             mov dword [rsp + 0x20], esi	       793	avc.c	FUNCTION_35
0x4000ec7	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       798	avc.c	FUNCTION_35
0x4000ecc	    0x48c7c6000000	                              mov rsi, 0	       802	avc.c	FUNCTION_35	CALL_1
0x4000ed3	          0x4889c7	                            mov rdi, rax	       802	avc.c	FUNCTION_35	CALL_1
0x4000ed6	      0x66894c2428	               mov word [rsp + 0x28], cx	       791	avc.c	FUNCTION_35
0x4000edb	      0x448944242c	             mov dword [rsp + 0x2c], r8d	       792	avc.c	FUNCTION_35
0x4000ee0	        0x89542434	             mov dword [rsp + 0x34], edx	       796	avc.c	FUNCTION_35
0x4000ee4	        0x8b542460	            mov edx, dword [rsp + 0x60] 	       797	avc.c	FUNCTION_35
0x4000ee8	      0x44894c2430	             mov dword [rsp + 0x30], r9d	       795	avc.c	FUNCTION_35
0x4000eed	        0x89542438	             mov dword [rsp + 0x38], edx	       797	avc.c	FUNCTION_35
0x4000ef1	      0x488d542420	                   lea rdx, [rsp + 0x20]	       800	avc.c	FUNCTION_35
0x4000ef6	        0x48895018	             mov qword [rax + 0x18], rdx	       800	avc.c	FUNCTION_35
0x4000efa	    0x48c7c2000000	                              mov rdx, 0	       802	avc.c	FUNCTION_35	CALL_1
0x4000f01	      0xe800000000	                          call 0x4000f06	       802	avc.c	FUNCTION_35	CALL_1
0x4000f06	            0x31c0	                            xor eax, eax	       803	avc.c	FUNCTION_35
0x4000f08	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       804	avc.c	FUNCTION_35
0x4000f0d	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       804	avc.c	FUNCTION_35
0x4000f16	            0x7515	                           jne 0x4000f2d	       804	avc.c	FUNCTION_35
0x4000f18	        0x4883c450	                           add rsp, 0x50	       804	avc.c	FUNCTION_35
0x4000f1c	              0xc3	                                     ret	       804	avc.c	FUNCTION_35
0x4000f1d	        0xc6042407	                       mov byte [rsp], 7	       777	avc.c	FUNCTION_35	IF_1
0x4000f21	          0x4889e0	                            mov rax, rsp	       776	avc.c	FUNCTION_35	IF_1
0x4000f24	            0xeb95	                           jmp 0x4000ebb	       776	avc.c	FUNCTION_35	IF_1
0x4000f26	      0xb8f6ffffff	                     mov eax, 0xfffffff6	       789	avc.c	FUNCTION_35	IF_2
0x4000f2b	            0xebdb	                           jmp 0x4000f08	       789	avc.c	FUNCTION_35	IF_2
0x4000f2d	      0xe800000000	                          call 0x4000f32	       804	avc.c	FUNCTION_35
avc_audit_pre_callback	DO,0:functions,0:IF,0:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,3	73
0x40001b0	            0x4156	                                push r14	       736	avc.c	FUNCTION_33
0x40001b2	            0x4155	                                push r13	       736	avc.c	FUNCTION_33
0x40001b4	    0x48c7c2000000	                              mov rdx, 0	       738	avc.c	FUNCTION_33	CALL_1
0x40001bb	            0x4154	                                push r12	       736	avc.c	FUNCTION_33
0x40001bd	              0x55	                                push rbp	       736	avc.c	FUNCTION_33
0x40001be	          0x4989fd	                            mov r13, rdi	       736	avc.c	FUNCTION_33
0x40001c1	              0x53	                                push rbx	       736	avc.c	FUNCTION_33
0x40001c2	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       739	avc.c	FUNCTION_33
0x40001c6	          0x4889f3	                            mov rbx, rsi	       736	avc.c	FUNCTION_33
0x40001c9	    0x48c7c6000000	                              mov rsi, 0	       738	avc.c	FUNCTION_33	CALL_1
0x40001d0	          0x8b4014	            mov eax, dword [rax + 0x14] 	       738	avc.c	FUNCTION_33	CALL_1
0x40001d3	            0x85c0	                           test eax, eax	       738	avc.c	FUNCTION_33	CALL_1
0x40001d5	    0x48c7c0000000	                              mov rax, 0	       738	avc.c	FUNCTION_33	CALL_1
0x40001dc	        0x480f45d0	                         cmovne rdx, rax	       738	avc.c	FUNCTION_33	CALL_1
0x40001e0	      0xe800000000	                          call 0x40001e5	       738	avc.c	FUNCTION_33	CALL_1
0x40001e5	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       741	avc.c	FUNCTION_33
0x40001e9	        0x448b6010	           mov r12d, dword [rax + 0x10] 	       740	avc.c	FUNCTION_33	CALL_2
0x40001ed	          0x4585e4	                         test r12d, r12d	       142	avc.c	FUNCTION_5	IF_1
0x40001f0	     0xf84a1000000	                            je 0x4000297	       142	avc.c	FUNCTION_5	IF_1
0x40001f6	         0xfb74008	               movzx eax, word [rax + 8]	       740	avc.c	FUNCTION_33	CALL_2
0x40001fa	          0x8d50ff	                      lea edx, [rax - 1]	       147	avc.c	FUNCTION_5	CALL_3
0x40001fd	        0x6683fa5a	                            cmp dx, 0x5a	       147	avc.c	FUNCTION_5	CALL_3
0x4000201	     0xf87b5000000	                            ja 0x40002bc	       147	avc.c	FUNCTION_5	CALL_3
0x4000207	          0x83e801	                              sub eax, 1	       148	avc.c	FUNCTION_5
0x400020a	    0x48c7c6000000	                              mov rsi, 0	       150	avc.c	FUNCTION_5	CALL_4
0x4000211	          0x4c89ef	                            mov rdi, r13	       150	avc.c	FUNCTION_5	CALL_4
0x4000214	            0x4898	                                    cdqe	       148	avc.c	FUNCTION_5
0x4000216	      0xbd01000000	                              mov ebp, 1	       150	avc.c	FUNCTION_5	CALL_4
0x400021b	          0x4889c2	                            mov rdx, rax	       148	avc.c	FUNCTION_5
0x400021e	        0x48c1e008	                              shl rax, 8	       148	avc.c	FUNCTION_5
0x4000222	        0x48c1e204	                              shl rdx, 4	       148	avc.c	FUNCTION_5
0x4000226	    0x4c8db4020000	                    lea r14, [rdx + rax]	       148	avc.c	FUNCTION_5
0x400022e	      0xe800000000	                          call 0x4000233	       150	avc.c	FUNCTION_5	CALL_4
0x4000233	        0x498d5e08	                      lea rbx, [r14 + 8]	       148	avc.c	FUNCTION_5
0x4000237	    0x4981c6080100	                          add r14, 0x108	       148	avc.c	FUNCTION_5
0x400023e	          0x4485e5	                          test ebp, r12d	       154	avc.c	FUNCTION_5	WHILE_1	IF_2
0x4000241	            0x741e	                            je 0x4000261	       154	avc.c	FUNCTION_5	WHILE_1	IF_2
0x4000243	          0x488b13	                    mov rdx, qword [rbx]	       154	avc.c	FUNCTION_5	WHILE_1	IF_2
0x4000246	          0x4885d2	                           test rdx, rdx	       154	avc.c	FUNCTION_5	WHILE_1	IF_2
0x4000249	            0x7416	                            je 0x4000261	       154	avc.c	FUNCTION_5	WHILE_1	IF_2
0x400024b	    0x48c7c6000000	                              mov rsi, 0	       155	avc.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000252	          0x4c89ef	                            mov rdi, r13	       155	avc.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000255	      0xe800000000	                          call 0x400025a	       155	avc.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x400025a	            0x89e8	                            mov eax, ebp	       156	avc.c	FUNCTION_5	WHILE_1	IF_2
0x400025c	            0xf7d0	                                 not eax	       156	avc.c	FUNCTION_5	WHILE_1	IF_2
0x400025e	          0x4121c4	                           and r12d, eax	       156	avc.c	FUNCTION_5	WHILE_1	IF_2
0x4000261	        0x4883c308	                              add rbx, 8	       156	avc.c	FUNCTION_5	WHILE_1	IF_2
0x4000265	             0x1ed	                            add ebp, ebp	       159	avc.c	FUNCTION_5	WHILE_1
0x4000267	          0x4939de	                            cmp r14, rbx	       153	avc.c	FUNCTION_5	WHILE_1
0x400026a	            0x75d2	                           jne 0x400023e	       153	avc.c	FUNCTION_5	WHILE_1
0x400026c	          0x4585e4	                         test r12d, r12d	       162	avc.c	FUNCTION_5	IF_3
0x400026f	            0x7537	                           jne 0x40002a8	       162	avc.c	FUNCTION_5	IF_3
0x4000271	    0x48c7c6000000	                              mov rsi, 0	       165	avc.c	FUNCTION_5	CALL_7
0x4000278	          0x4c89ef	                            mov rdi, r13	       165	avc.c	FUNCTION_5	CALL_7
0x400027b	      0xe800000000	                          call 0x4000280	       165	avc.c	FUNCTION_5	CALL_7
0x4000280	              0x5b	                                 pop rbx	       743	avc.c	FUNCTION_33
0x4000281	          0x4c89ef	                            mov rdi, r13	       742	avc.c	FUNCTION_33	CALL_3
0x4000284	    0x48c7c6000000	                              mov rsi, 0	       742	avc.c	FUNCTION_33	CALL_3
0x400028b	              0x5d	                                 pop rbp	       743	avc.c	FUNCTION_33
0x400028c	            0x415c	                                 pop r12	       743	avc.c	FUNCTION_33
0x400028e	            0x415d	                                 pop r13	       743	avc.c	FUNCTION_33
0x4000290	            0x415e	                                 pop r14	       743	avc.c	FUNCTION_33
0x4000292	      0xe900000000	                           jmp 0x4000297	       742	avc.c	FUNCTION_33	CALL_3
0x4000297	    0x48c7c6000000	                              mov rsi, 0	       143	avc.c	FUNCTION_5	IF_1	CALL_1
0x400029e	          0x4c89ef	                            mov rdi, r13	       143	avc.c	FUNCTION_5	IF_1	CALL_1
0x40002a1	      0xe800000000	                          call 0x40002a6	       143	avc.c	FUNCTION_5	IF_1	CALL_1
0x40002a6	            0xebd8	                           jmp 0x4000280	       143	avc.c	FUNCTION_5	IF_1	CALL_1
0x40002a8	          0x4489e2	                           mov edx, r12d	       163	avc.c	FUNCTION_5	CALL_6
0x40002ab	    0x48c7c6000000	                              mov rsi, 0	       163	avc.c	FUNCTION_5	CALL_6
0x40002b2	          0x4c89ef	                            mov rdi, r13	       163	avc.c	FUNCTION_5	CALL_6
0x40002b5	      0xe800000000	                          call 0x40002ba	       163	avc.c	FUNCTION_5	CALL_6
0x40002ba	            0xebb5	                           jmp 0x4000271	       163	avc.c	FUNCTION_5	CALL_6
0x40002bc	             0xf0b	                                     ud2	       163	avc.c	FUNCTION_5	CALL_6
avc_node_free	DO,0:functions,0:IF,0:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,3	10
0x40004b0	              0x53	                                push rbx	       503	avc.c	FUNCTION_22
0x40004b1	          0x4889fb	                            mov rbx, rdi	       503	avc.c	FUNCTION_22
0x40004b4	        0x488b7fe8	             mov rdi, qword [rdi - 0x18]	       505	avc.c	FUNCTION_22	CALL_2
0x40004b8	      0xe873ffffff	                call sym.avc_xperms_free	       505	avc.c	FUNCTION_22	CALL_2
0x40004bd	    0x488b3d000000	            mov rdi, qword [0x040004c4] 	       506	avc.c	FUNCTION_22	CALL_3
0x40004c4	        0x488d73c8	                   lea rsi, [rbx - 0x38]	       506	avc.c	FUNCTION_22	CALL_3
0x40004c8	      0xe800000000	                          call 0x40004cd	       506	avc.c	FUNCTION_22	CALL_3
0x40004cd	    0x65ff05000000	               inc dword gs:[0x040004d4]	       507	avc.c	FUNCTION_22
0x40004d4	              0x5b	                                 pop rbx	       508	avc.c	FUNCTION_22
0x40004d5	              0xc3	                                     ret	       508	avc.c	FUNCTION_22
avc_get_cache_threshold	DO,0:functions,0:IF,0:FOR,0:WHILE,0:ELSE,0:SWITCH,0:CALL,0	2
0x4000e00	            0x8b07	                    mov eax, dword [rdi]	       112	avc.c	FUNCTION_2
0x4000e02	              0xc3	                                     ret	       113	avc.c	FUNCTION_2
