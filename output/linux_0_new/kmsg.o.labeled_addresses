kmsg_release	DO,0:FOR,0:IF,0:functions,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0	7
0x4000040	      0xb901000000	                              mov ecx, 1	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000045	            0x31d2	                            xor edx, edx	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000047	            0x31f6	                            xor esi, esi	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000049	            0x31ff	                            xor edi, edi	        62	kmsg.c	FUNCTION_5	CALL_1
0x400004b	      0xe800000000	                          call 0x4000050	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000050	            0x31c0	                            xor eax, eax	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000052	              0xc3	                                     ret	        62	kmsg.c	FUNCTION_5	CALL_1
kmsg_read	DO,0:FOR,0:IF,1:functions,0:ELSE,0:SWITCH,0:CALL,2:WHILE,0	24
0x40000c0	              0x55	                                push rbp	        36	kmsg.c	FUNCTION_3
0x40000c1	              0x53	                                push rbx	        36	kmsg.c	FUNCTION_3
0x40000c2	          0x4889d5	                            mov rbp, rdx	        36	kmsg.c	FUNCTION_3
0x40000c5	        0xf6474108	               test byte [rdi + 0x41], 8	        37	kmsg.c	FUNCTION_3	IF_1
0x40000c9	          0x4889f3	                            mov rbx, rsi	        36	kmsg.c	FUNCTION_3
0x40000cc	            0x7417	                            je 0x40000e5	        37	kmsg.c	FUNCTION_3	IF_1
0x40000ce	            0x31d2	                            xor edx, edx	        38	kmsg.c	FUNCTION_3	IF_1	CALL_1
0x40000d0	            0x31f6	                            xor esi, esi	        38	kmsg.c	FUNCTION_3	IF_1	CALL_1
0x40000d2	      0xb901000000	                              mov ecx, 1	        38	kmsg.c	FUNCTION_3	IF_1	CALL_1
0x40000d7	      0xbf09000000	                              mov edi, 9	        38	kmsg.c	FUNCTION_3	IF_1	CALL_1
0x40000dc	      0xe800000000	                          call 0x40000e1	        38	kmsg.c	FUNCTION_3	IF_1	CALL_1
0x40000e1	            0x85c0	                           test eax, eax	        37	kmsg.c	FUNCTION_3	IF_1
0x40000e3	            0x7419	                            je 0x40000fe	        37	kmsg.c	FUNCTION_3	IF_1
0x40000e5	      0xb901000000	                              mov ecx, 1	        40	kmsg.c	FUNCTION_3	CALL_2
0x40000ea	            0x89ea	                            mov edx, ebp	        40	kmsg.c	FUNCTION_3	CALL_2
0x40000ec	          0x4889de	                            mov rsi, rbx	        40	kmsg.c	FUNCTION_3	CALL_2
0x40000ef	      0xbf02000000	                              mov edi, 2	        40	kmsg.c	FUNCTION_3	CALL_2
0x40000f4	      0xe800000000	                          call 0x40000f9	        40	kmsg.c	FUNCTION_3	CALL_2
0x40000f9	            0x4898	                                    cdqe	        40	kmsg.c	FUNCTION_3	CALL_2
0x40000fb	              0x5b	                                 pop rbx	        41	kmsg.c	FUNCTION_3
0x40000fc	              0x5d	                                 pop rbp	        41	kmsg.c	FUNCTION_3
0x40000fd	              0xc3	                                     ret	        41	kmsg.c	FUNCTION_3
0x40000fe	    0x48c7c0f5ffff	             mov rax, 0xfffffffffffffff5	        39	kmsg.c	FUNCTION_3	IF_1
0x4000105	            0xebf4	                           jmp 0x40000fb	        39	kmsg.c	FUNCTION_3	IF_1
kmsg_open	DO,0:FOR,0:IF,0:functions,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0	5
0x4000060	      0xb901000000	                              mov ecx, 1	        25	kmsg.c	FUNCTION_1	CALL_1
0x4000065	            0x31d2	                            xor edx, edx	        25	kmsg.c	FUNCTION_1	CALL_1
0x4000067	            0x31f6	                            xor esi, esi	        25	kmsg.c	FUNCTION_1	CALL_1
0x4000069	      0xbf01000000	                              mov edi, 1	        25	kmsg.c	FUNCTION_1	CALL_1
0x400006e	      0xe900000000	                           jmp 0x4000073	        25	kmsg.c	FUNCTION_1	CALL_1
proc_kmsg_init	DO,0:FOR,0:IF,0:functions,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0	14
0x4000040	      0xb901000000	                              mov ecx, 1	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000045	            0x31d2	                            xor edx, edx	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000047	            0x31f6	                            xor esi, esi	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000049	            0x31ff	                            xor edi, edi	        62	kmsg.c	FUNCTION_5	CALL_1
0x400004b	      0xe800000000	                          call 0x4000050	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000050	            0x31c0	                            xor eax, eax	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000052	              0xc3	                                     ret	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000053	           0xf1f00	                         nop dword [rax]	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000056	              0x66	                                 invalid	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000057	              0x2e	                                 invalid	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000058	               0xf	                                 invalid	        62	kmsg.c	FUNCTION_5	CALL_1
0x4000059	              0x1f	                                 invalid	        62	kmsg.c	FUNCTION_5	CALL_1
0x400005a	            0x8400	                     test byte [rax], al	        64	kmsg.c	FUNCTION_5
0x400005c	               0x0	                                 invalid	        64	kmsg.c	FUNCTION_5
