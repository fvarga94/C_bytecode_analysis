acpi_hw_read	CALL,14:functions,0:IF,3:ELSE,2:WHILE,1:SWITCH,0:FOR,0:DO,0	94
0x400019b	            0x4157	                                push r15	       196	hwregs.c	FUNCTION_3
0x400019d	            0x4156	                                push r14	       196	hwregs.c	FUNCTION_3
0x400019f	          0x4989ff	                            mov r15, rdi	       196	hwregs.c	FUNCTION_3
0x40001a2	            0x4155	                                push r13	       196	hwregs.c	FUNCTION_3
0x40001a4	            0x4154	                                push r12	       196	hwregs.c	FUNCTION_3
0x40001a6	          0x4989f5	                            mov r13, rsi	       196	hwregs.c	FUNCTION_3
0x40001a9	              0x55	                                push rbp	       196	hwregs.c	FUNCTION_3
0x40001aa	              0x53	                                push rbx	       196	hwregs.c	FUNCTION_3
0x40001ab	      0xbe40000000	                           mov esi, 0x40	       210	hwregs.c	FUNCTION_3	CALL_2
0x40001b0	          0x4c89ef	                            mov rdi, r13	       210	hwregs.c	FUNCTION_3	CALL_2
0x40001b3	        0x4883ec30	                           sub rsp, 0x30	       196	hwregs.c	FUNCTION_3
0x40001b7	      0x488d542418	                   lea rdx, [rsp + 0x18]	       210	hwregs.c	FUNCTION_3	CALL_2
0x40001bc	    0x65488b042528	                mov rax, qword gs:[0x28]	       196	hwregs.c	FUNCTION_3
0x40001c5	      0x4889442428	             mov qword [rsp + 0x28], rax	       196	hwregs.c	FUNCTION_3
0x40001ca	            0x31c0	                            xor eax, eax	       196	hwregs.c	FUNCTION_3
0x40001cc	      0xe800000000	                          call 0x40001d1	       210	hwregs.c	FUNCTION_3	CALL_2
0x40001d1	            0x85c0	                           test eax, eax	       211	hwregs.c	FUNCTION_3	IF_1	CALL_3
0x40001d3	          0x4189c2	                           mov r10d, eax	       210	hwregs.c	FUNCTION_3	CALL_2
0x40001d6	     0xf85f4000000	                           jne 0x40002d0	       211	hwregs.c	FUNCTION_3	IF_1	CALL_3
0x40001dc	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       220	hwregs.c	FUNCTION_3	CALL_4
0x40001e1	      0xba40000000	                           mov edx, 0x40	       220	hwregs.c	FUNCTION_3	CALL_4
0x40001e6	    0x49c707000000	                      mov qword [r15], 0	       219	hwregs.c	FUNCTION_3
0x40001ed	          0x4c89ee	                            mov rsi, r13	       220	hwregs.c	FUNCTION_3	CALL_4
0x40001f0	      0xe84bfeffff	   call sym.acpi_hw_get_access_bit_width	       220	hwregs.c	FUNCTION_3	CALL_4
0x40001f5	      0x410fb65d01	               movzx ebx, byte [r13 + 1]	       221	hwregs.c	FUNCTION_3
0x40001fa	        0x440fb6e0	                          movzx r12d, al	       220	hwregs.c	FUNCTION_3	CALL_4
0x40001fe	      0x410fb64502	               movzx eax, byte [r13 + 2]	       221	hwregs.c	FUNCTION_3
0x4000203	        0x4883caff	              or rdx, 0xffffffffffffffff	       221	hwregs.c	FUNCTION_3
0x4000207	          0x4488e1	                            mov cl, r12b	       221	hwregs.c	FUNCTION_3
0x400020a	          0x4489e5	                           mov ebp, r12d	       220	hwregs.c	FUNCTION_3	CALL_4
0x400020d	      0xc644240300	                   mov byte [rsp + 3], 0	       228	hwregs.c	FUNCTION_3
0x4000212	             0x1c3	                            add ebx, eax	       221	hwregs.c	FUNCTION_3
0x4000214	        0x88442402	                  mov byte [rsp + 2], al	       221	hwregs.c	FUNCTION_3
0x4000218	          0x4488e0	                            mov al, r12b	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x400021b	          0xc0e803	                               shr al, 3	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x400021e	           0xfb6c0	                           movzx eax, al	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x4000221	        0x89442404	                mov dword [rsp + 4], eax	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x4000225	          0x4889d0	                            mov rax, rdx	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x4000228	          0x48d3e0	                             shl rax, cl	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x400022b	        0x4180fc40	                          cmp r12b, 0x40	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x400022f	          0x48f7d0	                                 not rax	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x4000232	        0x480f45d0	                         cmovne rdx, rax	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x4000236	      0x4889542408	                mov qword [rsp + 8], rdx	       239	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3	CALL_6
0x400023b	            0x85db	                           test ebx, ebx	       229	hwregs.c	FUNCTION_3	WHILE_1
0x400023d	     0xf848d000000	                            je 0x40002d0	       229	hwregs.c	FUNCTION_3	WHILE_1
0x4000243	      0x40386c2402	                 cmp byte [rsp + 2], bpl	       230	hwregs.c	FUNCTION_3	WHILE_1	IF_2
0x4000248	    0x440fb6742403	              movzx r14d, byte [rsp + 3]	       230	hwregs.c	FUNCTION_3	WHILE_1	IF_2
0x400024e	            0x7210	                            jb 0x4000260	       230	hwregs.c	FUNCTION_3	WHILE_1	IF_2
0x4000250	    0x48c744242000	               mov qword [rsp + 0x20], 0	       231	hwregs.c	FUNCTION_3	WHILE_1	IF_2
0x4000259	      0x40286c2402	                 sub byte [rsp + 2], bpl	       232	hwregs.c	FUNCTION_3	WHILE_1	IF_2
0x400025e	            0xeb45	                           jmp 0x40002a5	       232	hwregs.c	FUNCTION_3	WHILE_1	IF_2
0x4000260	        0x8b7c2404	                mov edi, dword [rsp + 4]	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x4000264	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x4000269	        0x410faffe	                          imul edi, r14d	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x400026d	      0x41807d0000	                       cmp byte [r13], 0	       234	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x4000272	            0x7515	                           jne 0x4000289	       234	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x4000274	      0x488d742420	                   lea rsi, [rsp + 0x20]	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x4000279	          0x4801c7	                            add rdi, rax	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x400027c	          0x4489e2	                           mov edx, r12d	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x400027f	      0xe800000000	                          call 0x4000284	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x4000284	          0x4189c2	                           mov r10d, eax	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x4000287	            0xeb1c	                           jmp 0x40002a5	       235	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_3
0x4000289	      0x488d742414	                   lea rsi, [rsp + 0x14]	       244	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	ELSE_2	CALL_7
0x400028e	          0x4801c7	                            add rdi, rax	       244	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	ELSE_2	CALL_7
0x4000291	          0x4489e2	                           mov edx, r12d	       244	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	ELSE_2	CALL_7
0x4000294	      0xe800000000	                          call 0x4000299	       244	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	ELSE_2	CALL_7
0x4000299	          0x4189c2	                           mov r10d, eax	       244	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	ELSE_2	CALL_7
0x400029c	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       251	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	ELSE_2
0x40002a0	      0x4889442420	             mov qword [rsp + 0x20], rax	       251	hwregs.c	FUNCTION_3	WHILE_1	ELSE_1	ELSE_2
0x40002a5	      0x488b442408	                mov rax, qword [rsp + 8]	       259	hwregs.c	FUNCTION_3	WHILE_1	CALL_9
0x40002aa	          0x4489f1	                           mov ecx, r14d	       259	hwregs.c	FUNCTION_3	WHILE_1	CALL_9
0x40002ad	      0x4823442420	             and rax, qword [rsp + 0x20]	       259	hwregs.c	FUNCTION_3	WHILE_1	CALL_9
0x40002b2	        0x410fafcc	                          imul ecx, r12d	       259	hwregs.c	FUNCTION_3	WHILE_1	CALL_9
0x40002b6	          0x48d3e0	                             shl rax, cl	       259	hwregs.c	FUNCTION_3	WHILE_1	CALL_9
0x40002b9	          0x490907	                     or qword [r15], rax	       259	hwregs.c	FUNCTION_3	WHILE_1	CALL_9
0x40002bc	          0x4439e3	                           cmp ebx, r12d	       263	hwregs.c	FUNCTION_3	WHILE_1
0x40002bf	          0x4489e0	                           mov eax, r12d	       263	hwregs.c	FUNCTION_3	WHILE_1
0x40002c2	           0xf46c3	                         cmovbe eax, ebx	       263	hwregs.c	FUNCTION_3	WHILE_1
0x40002c5	        0xfe442403	                      inc byte [rsp + 3]	       264	hwregs.c	FUNCTION_3	WHILE_1
0x40002c9	            0x29c3	                            sub ebx, eax	       262	hwregs.c	FUNCTION_3	WHILE_1
0x40002cb	      0xe96bffffff	                           jmp 0x400023b	       262	hwregs.c	FUNCTION_3	WHILE_1
0x40002d0	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       274	hwregs.c	FUNCTION_3
0x40002d5	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       274	hwregs.c	FUNCTION_3
0x40002de	          0x4489d0	                           mov eax, r10d	       274	hwregs.c	FUNCTION_3
0x40002e1	            0x7405	                            je 0x40002e8	       274	hwregs.c	FUNCTION_3
0x40002e3	      0xe800000000	                          call 0x40002e8	       274	hwregs.c	FUNCTION_3
0x40002e8	        0x4883c430	                           add rsp, 0x30	       274	hwregs.c	FUNCTION_3
0x40002ec	              0x5b	                                 pop rbx	       274	hwregs.c	FUNCTION_3
0x40002ed	              0x5d	                                 pop rbp	       274	hwregs.c	FUNCTION_3
0x40002ee	            0x415c	                                 pop r12	       274	hwregs.c	FUNCTION_3
0x40002f0	            0x415d	                                 pop r13	       274	hwregs.c	FUNCTION_3
0x40002f2	            0x415e	                                 pop r14	       274	hwregs.c	FUNCTION_3
0x40002f4	            0x415f	                                 pop r15	       274	hwregs.c	FUNCTION_3
0x40002f6	              0xc3	                                     ret	       274	hwregs.c	FUNCTION_3
acpi_hw_get_bit_register_info	CALL,2:functions,0:IF,1:ELSE,0:WHILE,0:SWITCH,0:FOR,0:DO,0	12
0x40004b3	          0x83ff13	                           cmp edi, 0x13	       430	hwregs.c	FUNCTION_6	IF_1
0x40004b6	            0x761d	                           jbe 0x40004d5	       430	hwregs.c	FUNCTION_6	IF_1
0x40004b8	            0x89f9	                            mov ecx, edi	       430	hwregs.c	FUNCTION_6	IF_1
0x40004ba	    0x48c7c2000000	                              mov rdx, 0	       431	hwregs.c	FUNCTION_6	IF_1	CALL_2
0x40004c1	      0xbeb0010000	                          mov esi, 0x1b0	       431	hwregs.c	FUNCTION_6	IF_1	CALL_2
0x40004c6	    0x48c7c7000000	                              mov rdi, 0	       431	hwregs.c	FUNCTION_6	IF_1	CALL_2
0x40004cd	      0xe800000000	                          call 0x40004d2	       431	hwregs.c	FUNCTION_6	IF_1	CALL_2
0x40004d2	            0x31c0	                            xor eax, eax	       433	hwregs.c	FUNCTION_6	IF_1
0x40004d4	              0xc3	                                     ret	       433	hwregs.c	FUNCTION_6	IF_1
0x40004d5	            0x89ff	                            mov edi, edi	       436	hwregs.c	FUNCTION_6
0x40004d7	    0x488d04bd0000	                        lea rax, [rdi*4]	       436	hwregs.c	FUNCTION_6
0x40004df	              0xc3	                                     ret	       437	hwregs.c	FUNCTION_6
acpi_hw_get_access_bit_width	CALL,5:functions,0:IF,5:ELSE,3:WHILE,1:SWITCH,0:FOR,0:DO,0	66
0x4000040	        0x448a4e02	                 mov r9b, byte [rsi + 2]	        69	hwregs.c	FUNCTION_1	IF_1
0x4000044	          0x4584c9	                           test r9b, r9b	        69	hwregs.c	FUNCTION_1	IF_1
0x4000047	            0x7517	                           jne 0x4000060	        69	hwregs.c	FUNCTION_1	IF_1
0x4000049	          0x8a4601	                  mov al, byte [rsi + 1]	        69	hwregs.c	FUNCTION_1	IF_1
0x400004c	            0x84c0	                             test al, al	        69	hwregs.c	FUNCTION_1	IF_1
0x400004e	            0x7410	                            je 0x4000060	        69	hwregs.c	FUNCTION_1	IF_1
0x4000050	           0xfb6c8	                           movzx ecx, al	        70	hwregs.c	FUNCTION_1	IF_1	CALL_1
0x4000053	        0x448d41ff	                      lea r8d, [rcx - 1]	        69	hwregs.c	FUNCTION_1	IF_1
0x4000057	          0x4185c8	                           test r8d, ecx	        69	hwregs.c	FUNCTION_1	IF_1
0x400005a	            0x7504	                           jne 0x4000060	        69	hwregs.c	FUNCTION_1	IF_1
0x400005c	            0xa807	                              test al, 7	        70	hwregs.c	FUNCTION_1	IF_1	CALL_1
0x400005e	            0x747e	                            je 0x40000de	        70	hwregs.c	FUNCTION_1	IF_1	CALL_1
0x4000060	          0x8a4e03	                  mov cl, byte [rsi + 3]	        73	hwregs.c	FUNCTION_1	ELSE_1	IF_2
0x4000063	            0x84c9	                             test cl, cl	        73	hwregs.c	FUNCTION_1	ELSE_1	IF_2
0x4000065	            0x740c	                            je 0x4000073	        73	hwregs.c	FUNCTION_1	ELSE_1	IF_2
0x4000067	          0x83c102	                              add ecx, 2	        74	hwregs.c	FUNCTION_1	ELSE_1	IF_2	CALL_3
0x400006a	      0xb801000000	                              mov eax, 1	        74	hwregs.c	FUNCTION_1	ELSE_1	IF_2	CALL_3
0x400006f	            0xd3e0	                             shl eax, cl	        74	hwregs.c	FUNCTION_1	ELSE_1	IF_2	CALL_3
0x4000071	            0xeb6b	                           jmp 0x40000de	        74	hwregs.c	FUNCTION_1	ELSE_1	IF_2	CALL_3
0x4000073	      0x440fb64601	               movzx r8d, byte [rsi + 1]	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x4000078	        0x410fb6c9	                          movzx ecx, r9b	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x400007c	            0xb008	                               mov al, 8	        80	hwregs.c	FUNCTION_1	ELSE_2	IF_3
0x400007e	          0x4401c1	                            add ecx, r8d	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x4000081	          0x83f901	                              cmp ecx, 1	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x4000084	            0x7458	                            je 0x40000de	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x4000086	      0x478d4c01ff	                  lea r9d, [r9 + r8 - 1]	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x400008b	        0x41f6c1f0	                          test r9b, 0xf0	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x400008f	            0x7426	                            je 0x40000b7	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x4000091	            0xffc9	                                 dec ecx	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x4000093	            0x89c8	                            mov eax, ecx	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x4000095	          0xc1f804	                              sar eax, 4	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x4000098	            0xa80c	                            test al, 0xc	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x400009a	            0x740b	                            je 0x40000a7	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x400009c	          0x80e180	                            and cl, 0x80	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x400009f	            0xb008	                               mov al, 8	        80	hwregs.c	FUNCTION_1	ELSE_2	IF_3
0x40000a1	            0x753b	                           jne 0x40000de	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000a3	            0xb080	                            mov al, 0x80	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000a5	            0xeb21	                           jmp 0x40000c8	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000a7	          0x83e120	                           and ecx, 0x20	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000aa	          0x83f901	                              cmp ecx, 1	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000ad	            0x19c0	                            sbb eax, eax	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000af	          0x83e0e0	                     and eax, 0xffffffe0	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000b2	          0x83c040	                           add eax, 0x40	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000b5	            0xeb11	                           jmp 0x40000c8	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000b7	        0x4180e10c	                            and r9b, 0xc	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000bb	            0xb008	                               mov al, 8	        80	hwregs.c	FUNCTION_1	ELSE_2	IF_3
0x40000bd	            0x741f	                            je 0x40000de	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000bf	            0xffc9	                                 dec ecx	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000c1	          0x80e108	                               and cl, 8	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000c4	            0x7418	                            je 0x40000de	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000c6	            0xb010	                            mov al, 0x10	        77	hwregs.c	FUNCTION_1	ELSE_2	CALL_4
0x40000c8	            0x88c1	                              mov cl, al	        82	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1	CALL_5
0x40000ca	          0xc0e903	                               shr cl, 3	        82	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1	CALL_5
0x40000cd	           0xfb6c9	                           movzx ecx, cl	        82	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1	CALL_5
0x40000d0	            0xffc9	                                 dec ecx	        82	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1	CALL_5
0x40000d2	          0x4863c9	                         movsxd rcx, ecx	        82	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1	CALL_5
0x40000d5	          0x4885f9	                           test rcx, rdi	        82	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1	CALL_5
0x40000d8	            0x7404	                            je 0x40000de	        82	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1	CALL_5
0x40000da	            0xd0e8	                               shr al, 1	        83	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1
0x40000dc	            0xebea	                           jmp 0x40000c8	        83	hwregs.c	FUNCTION_1	ELSE_2	ELSE_3	WHILE_1
0x40000de	          0x803e01	                       cmp byte [rsi], 1	        91	hwregs.c	FUNCTION_1	IF_4
0x40000e1	            0xb120	                            mov cl, 0x20	        91	hwregs.c	FUNCTION_1	IF_4
0x40000e3	           0xf44d1	                          cmove edx, ecx	        91	hwregs.c	FUNCTION_1	IF_4
0x40000e6	            0x38c2	                              cmp dl, al	        91	hwregs.c	FUNCTION_1	IF_4
0x40000e8	           0xf46c2	                         cmovbe eax, edx	        91	hwregs.c	FUNCTION_1	IF_4
0x40000eb	              0xc3	                                     ret	       103	hwregs.c	FUNCTION_1
acpi_hw_read_multiple	CALL,4:functions,0:IF,3:ELSE,0:WHILE,0:SWITCH,0:FOR,0:DO,0	34
0x40002f7	            0x4154	                                push r12	       712	hwregs.c	FUNCTION_10
0x40002f9	              0x55	                                push rbp	       712	hwregs.c	FUNCTION_10
0x40002fa	          0x4889fd	                            mov rbp, rdi	       712	hwregs.c	FUNCTION_10
0x40002fd	              0x53	                                push rbx	       712	hwregs.c	FUNCTION_10
0x40002fe	          0x4989d4	                            mov r12, rdx	       712	hwregs.c	FUNCTION_10
0x4000301	        0x4883ec10	                           sub rsp, 0x10	       712	hwregs.c	FUNCTION_10
0x4000305	          0x4889e7	                            mov rdi, rsp	       720	hwregs.c	FUNCTION_10	CALL_1
0x4000308	    0x65488b042528	                mov rax, qword gs:[0x28]	       712	hwregs.c	FUNCTION_10
0x4000311	      0x4889442408	                mov qword [rsp + 8], rax	       712	hwregs.c	FUNCTION_10
0x4000316	            0x31c0	                            xor eax, eax	       712	hwregs.c	FUNCTION_10
0x4000318	      0xe800000000	                          call 0x400031d	       720	hwregs.c	FUNCTION_10	CALL_1
0x400031d	            0x85c0	                           test eax, eax	       721	hwregs.c	FUNCTION_10	IF_1	CALL_2
0x400031f	            0x7525	                           jne 0x4000346	       721	hwregs.c	FUNCTION_10	IF_1	CALL_2
0x4000321	    0x49837c240400	                  cmp qword [r12 + 4], 0	       728	hwregs.c	FUNCTION_10	IF_2
0x4000327	        0x488b1c24	                    mov rbx, qword [rsp]	       724	hwregs.c	FUNCTION_10
0x400032b	            0x7412	                            je 0x400033f	       728	hwregs.c	FUNCTION_10	IF_2
0x400032d	          0x4c89e6	                            mov rsi, r12	       729	hwregs.c	FUNCTION_10	IF_2	CALL_3
0x4000330	          0x4889e7	                            mov rdi, rsp	       729	hwregs.c	FUNCTION_10	IF_2	CALL_3
0x4000333	      0xe800000000	                          call 0x4000338	       729	hwregs.c	FUNCTION_10	IF_2	CALL_3
0x4000338	            0x85c0	                           test eax, eax	       730	hwregs.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x400033a	            0x750a	                           jne 0x4000346	       730	hwregs.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x400033c	          0x8b0424	                    mov eax, dword [rsp]	       733	hwregs.c	FUNCTION_10	IF_2
0x400033f	             0x9c3	                             or ebx, eax	       746	hwregs.c	FUNCTION_10
0x4000341	            0x31c0	                            xor eax, eax	       747	hwregs.c	FUNCTION_10
0x4000343	          0x895d00	                    mov dword [rbp], ebx	       746	hwregs.c	FUNCTION_10
0x4000346	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       748	hwregs.c	FUNCTION_10
0x400034b	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       748	hwregs.c	FUNCTION_10
0x4000354	            0x7405	                            je 0x400035b	       748	hwregs.c	FUNCTION_10
0x4000356	      0xe800000000	                          call 0x400035b	       748	hwregs.c	FUNCTION_10
0x400035b	        0x4883c410	                           add rsp, 0x10	       748	hwregs.c	FUNCTION_10
0x400035f	              0x5b	                                 pop rbx	       748	hwregs.c	FUNCTION_10
0x4000360	              0x5d	                                 pop rbp	       748	hwregs.c	FUNCTION_10
0x4000361	            0x415c	                                 pop r12	       748	hwregs.c	FUNCTION_10
0x4000363	              0xc3	                                     ret	       748	hwregs.c	FUNCTION_10
acpi_hw_register_read	CALL,10:functions,0:IF,1:ELSE,0:WHILE,0:SWITCH,1:FOR,0:DO,0	57
0x4000510	              0x53	                                push rbx	       489	hwregs.c	FUNCTION_8
0x4000511	            0x89f9	                            mov ecx, edi	       489	hwregs.c	FUNCTION_8
0x4000513	        0x4883ec18	                           sub rsp, 0x18	       489	hwregs.c	FUNCTION_8
0x4000517	    0x65488b042528	                mov rax, qword gs:[0x28]	       489	hwregs.c	FUNCTION_8
0x4000520	      0x4889442410	             mov qword [rsp + 0x10], rax	       489	hwregs.c	FUNCTION_8
0x4000525	            0x31c0	                            xor eax, eax	       489	hwregs.c	FUNCTION_8
0x4000527	          0x8d47ff	                      lea eax, [rdi - 1]	       496	hwregs.c	FUNCTION_8	SWITCH_1
0x400052a	    0xc74424040000	                  mov dword [rsp + 4], 0	       490	hwregs.c	FUNCTION_8
0x4000532	          0x83f806	                              cmp eax, 6	       496	hwregs.c	FUNCTION_8	SWITCH_1
0x4000535	     0xf8798000000	                            ja 0x40005d3	       496	hwregs.c	FUNCTION_8	SWITCH_1
0x400053b	    0x488b04c50000	                  mov rax, qword [rax*8]	       496	hwregs.c	FUNCTION_8	SWITCH_1
0x4000543	          0x4889f3	                            mov rbx, rsi	       496	hwregs.c	FUNCTION_8	SWITCH_1
0x4000546	      0xe900000000	                           jmp 0x400054b	       496	hwregs.c	FUNCTION_8	SWITCH_1
0x400054b	    0x48c7c2000000	                              mov rdx, 0	       499	hwregs.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000552	    0x48c7c6000000	                              mov rsi, 0	       499	hwregs.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000559	            0xeb0e	                           jmp 0x4000569	       499	hwregs.c	FUNCTION_8	SWITCH_1	CALL_2
0x400055b	    0x48c7c2000000	                              mov rdx, 0	       506	hwregs.c	FUNCTION_8	SWITCH_1	CALL_3
0x4000562	    0x48c7c6000000	                              mov rsi, 0	       506	hwregs.c	FUNCTION_8	SWITCH_1	CALL_3
0x4000569	      0x488d7c2404	                      lea rdi, [rsp + 4]	       506	hwregs.c	FUNCTION_8	SWITCH_1	CALL_3
0x400056e	      0xe884fdffff	          call sym.acpi_hw_read_multiple	       506	hwregs.c	FUNCTION_8	SWITCH_1	CALL_3
0x4000573	            0xeb7d	                           jmp 0x40005f2	       509	hwregs.c	FUNCTION_8	SWITCH_1
0x4000575	      0x488d7c2404	                      lea rdi, [rsp + 4]	       513	hwregs.c	FUNCTION_8	SWITCH_1	CALL_4
0x400057a	    0x48c7c2000000	                              mov rdx, 0	       513	hwregs.c	FUNCTION_8	SWITCH_1	CALL_4
0x4000581	    0x48c7c6000000	                              mov rsi, 0	       513	hwregs.c	FUNCTION_8	SWITCH_1	CALL_4
0x4000588	      0xe86afdffff	          call sym.acpi_hw_read_multiple	       513	hwregs.c	FUNCTION_8	SWITCH_1	CALL_4
0x400058d	    0x81642404fbdf	         and dword [rsp + 4], 0xffffdffb	       524	hwregs.c	FUNCTION_8	SWITCH_1
0x4000595	            0xeb5b	                           jmp 0x40005f2	       525	hwregs.c	FUNCTION_8	SWITCH_1
0x4000597	    0x48c7c6000000	                              mov rsi, 0	       529	hwregs.c	FUNCTION_8	SWITCH_1
0x400059e	            0xeb07	                           jmp 0x40005a7	       529	hwregs.c	FUNCTION_8	SWITCH_1
0x40005a0	    0x48c7c6000000	                              mov rsi, 0	       536	hwregs.c	FUNCTION_8	SWITCH_1	CALL_6
0x40005a7	      0x488d7c2408	                      lea rdi, [rsp + 8]	       536	hwregs.c	FUNCTION_8	SWITCH_1	CALL_6
0x40005ac	      0xe800000000	                          call 0x40005b1	       536	hwregs.c	FUNCTION_8	SWITCH_1	CALL_6
0x40005b1	      0x488b542408	                mov rdx, qword [rsp + 8]	       537	hwregs.c	FUNCTION_8	SWITCH_1
0x40005b6	        0x89542404	                mov dword [rsp + 4], edx	       537	hwregs.c	FUNCTION_8	SWITCH_1
0x40005ba	            0xeb36	                           jmp 0x40005f2	       538	hwregs.c	FUNCTION_8	SWITCH_1
0x40005bc	    0x8b3d00000000	            mov edi, dword [0x040005c2] 	       542	hwregs.c	FUNCTION_8	SWITCH_1
0x40005c2	      0x488d742404	                      lea rsi, [rsp + 4]	       542	hwregs.c	FUNCTION_8	SWITCH_1
0x40005c7	      0xba08000000	                              mov edx, 8	       542	hwregs.c	FUNCTION_8	SWITCH_1
0x40005cc	      0xe800000000	                          call 0x40005d1	       542	hwregs.c	FUNCTION_8	SWITCH_1
0x40005d1	            0xeb1f	                           jmp 0x40005f2	       544	hwregs.c	FUNCTION_8	SWITCH_1
0x40005d3	    0x48c7c2000000	                              mov rdx, 0	       548	hwregs.c	FUNCTION_8	SWITCH_1	CALL_8
0x40005da	      0xbe24020000	                          mov esi, 0x224	       548	hwregs.c	FUNCTION_8	SWITCH_1	CALL_8
0x40005df	    0x48c7c7000000	                              mov rdi, 0	       548	hwregs.c	FUNCTION_8	SWITCH_1	CALL_8
0x40005e6	      0xe800000000	                          call 0x40005eb	       548	hwregs.c	FUNCTION_8	SWITCH_1	CALL_8
0x40005eb	      0xb801100000	                         mov eax, 0x1001	       549	hwregs.c	FUNCTION_8	SWITCH_1
0x40005f0	            0xeb0a	                           jmp 0x40005fc	       549	hwregs.c	FUNCTION_8	SWITCH_1
0x40005f2	            0x85c0	                           test eax, eax	       553	hwregs.c	FUNCTION_8	IF_1	CALL_9
0x40005f4	            0x7506	                           jne 0x40005fc	       553	hwregs.c	FUNCTION_8	IF_1	CALL_9
0x40005f6	        0x8b542404	                mov edx, dword [rsp + 4]	       554	hwregs.c	FUNCTION_8	IF_1
0x40005fa	            0x8913	                    mov dword [rbx], edx	       554	hwregs.c	FUNCTION_8	IF_1
0x40005fc	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       558	hwregs.c	FUNCTION_8
0x4000601	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       558	hwregs.c	FUNCTION_8
0x400060a	            0x7405	                            je 0x4000611	       558	hwregs.c	FUNCTION_8
0x400060c	      0xe800000000	                          call 0x4000611	       558	hwregs.c	FUNCTION_8
0x4000611	        0x4883c418	                           add rsp, 0x18	       558	hwregs.c	FUNCTION_8
0x4000615	              0x5b	                                 pop rbx	       558	hwregs.c	FUNCTION_8
0x4000616	              0xc3	                                     ret	       558	hwregs.c	FUNCTION_8
acpi_hw_write_multiple	CALL,3:functions,0:IF,2:ELSE,0:WHILE,0:SWITCH,0:FOR,0:DO,0	18
0x4000489	              0x55	                                push rbp	       768	hwregs.c	FUNCTION_11
0x400048a	              0x53	                                push rbx	       768	hwregs.c	FUNCTION_11
0x400048b	            0x89fb	                            mov ebx, edi	       773	hwregs.c	FUNCTION_11	CALL_1
0x400048d	          0x4889df	                            mov rdi, rbx	       773	hwregs.c	FUNCTION_11	CALL_1
0x4000490	          0x4889d5	                            mov rbp, rdx	       768	hwregs.c	FUNCTION_11
0x4000493	      0xe800000000	                          call 0x4000498	       773	hwregs.c	FUNCTION_11	CALL_1
0x4000498	            0x85c0	                           test eax, eax	       774	hwregs.c	FUNCTION_11	IF_1	CALL_2
0x400049a	            0x7514	                           jne 0x40004b0	       774	hwregs.c	FUNCTION_11	IF_1	CALL_2
0x400049c	      0x48837d0400	                  cmp qword [rbp + 4], 0	       790	hwregs.c	FUNCTION_11	IF_2
0x40004a1	            0x740d	                            je 0x40004b0	       790	hwregs.c	FUNCTION_11	IF_2
0x40004a3	          0x4889ee	                            mov rsi, rbp	       791	hwregs.c	FUNCTION_11	IF_2	CALL_3
0x40004a6	          0x4889df	                            mov rdi, rbx	       791	hwregs.c	FUNCTION_11	IF_2	CALL_3
0x40004a9	              0x5b	                                 pop rbx	       795	hwregs.c	FUNCTION_11
0x40004aa	              0x5d	                                 pop rbp	       795	hwregs.c	FUNCTION_11
0x40004ab	      0xe9b4feffff	                   jmp sym.acpi_hw_write	       791	hwregs.c	FUNCTION_11	IF_2	CALL_3
0x40004b0	              0x5b	                                 pop rbx	       795	hwregs.c	FUNCTION_11
0x40004b1	              0x5d	                                 pop rbp	       795	hwregs.c	FUNCTION_11
0x40004b2	              0xc3	                                     ret	       795	hwregs.c	FUNCTION_11
acpi_hw_validate_register	CALL,6:functions,0:IF,5:ELSE,0:WHILE,0:SWITCH,0:FOR,0:DO,0	45
0x40000ec	          0x4885ff	                           test rdi, rdi	       130	hwregs.c	FUNCTION_2	IF_1
0x40000ef	      0xb801100000	                         mov eax, 0x1001	       131	hwregs.c	FUNCTION_2	IF_1
0x40000f4	     0xf84a0000000	                            je 0x400019a	       130	hwregs.c	FUNCTION_2	IF_1
0x40000fa	          0x4989fa	                            mov r10, rdi	       130	hwregs.c	FUNCTION_2	IF_1
0x40000fd	        0x488b7f04	                mov rdi, qword [rdi + 4]	       139	hwregs.c	FUNCTION_2	CALL_1
0x4000101	      0xb809100000	                         mov eax, 0x1009	       141	hwregs.c	FUNCTION_2	IF_2
0x4000106	          0x4885ff	                           test rdi, rdi	       140	hwregs.c	FUNCTION_2	IF_2
0x4000109	          0x48893a	                    mov qword [rdx], rdi	       139	hwregs.c	FUNCTION_2	CALL_1
0x400010c	     0xf8488000000	                            je 0x400019a	       140	hwregs.c	FUNCTION_2	IF_2
0x4000112	              0x53	                                push rbx	       124	hwregs.c	FUNCTION_2
0x4000113	        0x410fb60a	                   movzx ecx, byte [r10]	       146	hwregs.c	FUNCTION_2	IF_3
0x4000117	          0x4189f3	                           mov r11d, esi	       146	hwregs.c	FUNCTION_2	IF_3
0x400011a	    0x48c7c2000000	                              mov rdx, 0	       148	hwregs.c	FUNCTION_2	IF_3	CALL_2
0x4000121	      0xbe95000000	                           mov esi, 0x95	       148	hwregs.c	FUNCTION_2	IF_3	CALL_2
0x4000126	          0x80f901	                               cmp cl, 1	       146	hwregs.c	FUNCTION_2	IF_3
0x4000129	            0x7716	                            ja 0x4000141	       146	hwregs.c	FUNCTION_2	IF_3
0x400012b	      0x410fb64a03	               movzx ecx, byte [r10 + 3]	       155	hwregs.c	FUNCTION_2	IF_4
0x4000130	          0x80f904	                               cmp cl, 4	       155	hwregs.c	FUNCTION_2	IF_4
0x4000133	            0x761a	                           jbe 0x400014f	       155	hwregs.c	FUNCTION_2	IF_4
0x4000135	    0x48c7c2000000	                              mov rdx, 0	       156	hwregs.c	FUNCTION_2	IF_4	CALL_3
0x400013c	      0xbe9e000000	                           mov esi, 0x9e	       156	hwregs.c	FUNCTION_2	IF_4	CALL_3
0x4000141	    0x48c7c7000000	                              mov rdi, 0	       156	hwregs.c	FUNCTION_2	IF_4	CALL_3
0x4000148	      0xe800000000	                          call 0x400014d	       156	hwregs.c	FUNCTION_2	IF_4	CALL_3
0x400014d	            0xeb45	                           jmp 0x4000194	       156	hwregs.c	FUNCTION_2	IF_4	CALL_3
0x400014f	        0x410fb6db	                         movzx ebx, r11b	       165	hwregs.c	FUNCTION_2	CALL_4
0x4000153	          0x4c89d6	                            mov rsi, r10	       164	hwregs.c	FUNCTION_2
0x4000156	            0x89da	                            mov edx, ebx	       164	hwregs.c	FUNCTION_2
0x4000158	      0xe8e3feffff	   call sym.acpi_hw_get_access_bit_width	       164	hwregs.c	FUNCTION_2
0x400015d	        0x458a4201	                 mov r8b, byte [r10 + 1]	       166	hwregs.c	FUNCTION_2
0x4000161	        0x45024202	                 add r8b, byte [r10 + 2]	       166	hwregs.c	FUNCTION_2
0x4000165	      0x468d4400ff	                 lea r8d, [rax + r8 - 1]	       166	hwregs.c	FUNCTION_2
0x400016a	            0xf7d8	                                 neg eax	       166	hwregs.c	FUNCTION_2
0x400016c	          0x4121c0	                            and r8d, eax	       166	hwregs.c	FUNCTION_2
0x400016f	            0x31c0	                            xor eax, eax	       175	hwregs.c	FUNCTION_2
0x4000171	          0x4538c3	                           cmp r11b, r8b	       168	hwregs.c	FUNCTION_2	IF_5
0x4000174	            0x7323	                           jae 0x4000199	       168	hwregs.c	FUNCTION_2	IF_5
0x4000176	        0x450fb6c0	                          movzx r8d, r8b	       169	hwregs.c	FUNCTION_2	IF_5	CALL_6
0x400017a	            0x89d9	                            mov ecx, ebx	       169	hwregs.c	FUNCTION_2	IF_5	CALL_6
0x400017c	    0x48c7c2000000	                              mov rdx, 0	       169	hwregs.c	FUNCTION_2	IF_5	CALL_6
0x4000183	      0xbeab000000	                           mov esi, 0xab	       169	hwregs.c	FUNCTION_2	IF_5	CALL_6
0x4000188	    0x48c7c7000000	                              mov rdi, 0	       169	hwregs.c	FUNCTION_2	IF_5	CALL_6
0x400018f	      0xe800000000	                          call 0x4000194	       169	hwregs.c	FUNCTION_2	IF_5	CALL_6
0x4000194	      0xb80f000000	                            mov eax, 0xf	       172	hwregs.c	FUNCTION_2	IF_5
0x4000199	              0x5b	                                 pop rbx	       176	hwregs.c	FUNCTION_2
0x400019a	              0xc3	                                     ret	       176	hwregs.c	FUNCTION_2
acpi_hw_write	CALL,14:functions,0:IF,3:ELSE,2:WHILE,1:SWITCH,0:FOR,0:DO,0	86
0x4000364	            0x4157	                                push r15	       291	hwregs.c	FUNCTION_4
0x4000366	            0x4156	                                push r14	       291	hwregs.c	FUNCTION_4
0x4000368	            0x4155	                                push r13	       291	hwregs.c	FUNCTION_4
0x400036a	            0x4154	                                push r12	       291	hwregs.c	FUNCTION_4
0x400036c	          0x4989f5	                            mov r13, rsi	       291	hwregs.c	FUNCTION_4
0x400036f	              0x55	                                push rbp	       291	hwregs.c	FUNCTION_4
0x4000370	              0x53	                                push rbx	       291	hwregs.c	FUNCTION_4
0x4000371	      0xbe40000000	                           mov esi, 0x40	       304	hwregs.c	FUNCTION_4	CALL_2
0x4000376	        0x4883ec28	                           sub rsp, 0x28	       291	hwregs.c	FUNCTION_4
0x400037a	      0x488d542418	                   lea rdx, [rsp + 0x18]	       304	hwregs.c	FUNCTION_4	CALL_2
0x400037f	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       291	hwregs.c	FUNCTION_4
0x4000384	          0x4c89ef	                            mov rdi, r13	       304	hwregs.c	FUNCTION_4	CALL_2
0x4000387	    0x65488b042528	                mov rax, qword gs:[0x28]	       291	hwregs.c	FUNCTION_4
0x4000390	      0x4889442420	             mov qword [rsp + 0x20], rax	       291	hwregs.c	FUNCTION_4
0x4000395	            0x31c0	                            xor eax, eax	       291	hwregs.c	FUNCTION_4
0x4000397	      0xe800000000	                          call 0x400039c	       304	hwregs.c	FUNCTION_4	CALL_2
0x400039c	            0x85c0	                           test eax, eax	       305	hwregs.c	FUNCTION_4	IF_1	CALL_3
0x400039e	          0x4189c2	                           mov r10d, eax	       304	hwregs.c	FUNCTION_4	CALL_2
0x40003a1	     0xf85bb000000	                           jne 0x4000462	       305	hwregs.c	FUNCTION_4	IF_1	CALL_3
0x40003a7	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       311	hwregs.c	FUNCTION_4	CALL_4
0x40003ac	      0xba40000000	                           mov edx, 0x40	       311	hwregs.c	FUNCTION_4	CALL_4
0x40003b1	          0x4c89ee	                            mov rsi, r13	       311	hwregs.c	FUNCTION_4	CALL_4
0x40003b4	      0xe887fcffff	   call sym.acpi_hw_get_access_bit_width	       311	hwregs.c	FUNCTION_4	CALL_4
0x40003b9	      0x410fb65d01	               movzx ebx, byte [r13 + 1]	       312	hwregs.c	FUNCTION_4
0x40003be	        0x440fb6e0	                          movzx r12d, al	       311	hwregs.c	FUNCTION_4	CALL_4
0x40003c2	      0x410fb64502	               movzx eax, byte [r13 + 2]	       312	hwregs.c	FUNCTION_4
0x40003c7	        0x4883caff	              or rdx, 0xffffffffffffffff	       312	hwregs.c	FUNCTION_4
0x40003cb	          0x4488e1	                            mov cl, r12b	       312	hwregs.c	FUNCTION_4
0x40003ce	          0x4489e5	                           mov ebp, r12d	       311	hwregs.c	FUNCTION_4	CALL_4
0x40003d1	             0x1c3	                            add ebx, eax	       312	hwregs.c	FUNCTION_4
0x40003d3	          0x4189c6	                           mov r14d, eax	       312	hwregs.c	FUNCTION_4
0x40003d6	          0x4889d0	                            mov rax, rdx	       312	hwregs.c	FUNCTION_4
0x40003d9	          0x48d3e0	                             shl rax, cl	       312	hwregs.c	FUNCTION_4
0x40003dc	        0x4180fc40	                          cmp r12b, 0x40	       312	hwregs.c	FUNCTION_4
0x40003e0	          0x48f7d0	                                 not rax	       312	hwregs.c	FUNCTION_4
0x40003e3	        0x480f45d0	                         cmovne rdx, rax	       312	hwregs.c	FUNCTION_4
0x40003e7	          0x4488e0	                            mov al, r12b	       336	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3	CALL_8
0x40003ea	          0x4531ff	                          xor r15d, r15d	       319	hwregs.c	FUNCTION_4
0x40003ed	          0xc0e803	                               shr al, 3	       336	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3	CALL_8
0x40003f0	      0x4889542408	                mov qword [rsp + 8], rdx	       336	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3	CALL_8
0x40003f5	           0xfb6c0	                           movzx eax, al	       336	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3	CALL_8
0x40003f8	        0x89442404	                mov dword [rsp + 4], eax	       336	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3	CALL_8
0x40003fc	            0x85db	                           test ebx, ebx	       320	hwregs.c	FUNCTION_4	WHILE_1
0x40003fe	            0x7462	                            je 0x4000462	       320	hwregs.c	FUNCTION_4	WHILE_1
0x4000400	          0x4138ee	                           cmp r14b, bpl	       328	hwregs.c	FUNCTION_4	WHILE_1	IF_2
0x4000403	            0x7205	                            jb 0x400040a	       328	hwregs.c	FUNCTION_4	WHILE_1	IF_2
0x4000405	          0x4129ee	                           sub r14d, ebp	       329	hwregs.c	FUNCTION_4	WHILE_1	IF_2
0x4000408	            0xeb48	                           jmp 0x4000452	       329	hwregs.c	FUNCTION_4	WHILE_1	IF_2
0x400040a	        0x410fb6c7	                         movzx eax, r15b	       325	hwregs.c	FUNCTION_4	WHILE_1	CALL_5
0x400040e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       325	hwregs.c	FUNCTION_4	WHILE_1	CALL_5
0x4000413	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       325	hwregs.c	FUNCTION_4	WHILE_1	CALL_5
0x4000418	            0x89c1	                            mov ecx, eax	       325	hwregs.c	FUNCTION_4	WHILE_1	CALL_5
0x400041a	        0x410fafcc	                          imul ecx, r12d	       325	hwregs.c	FUNCTION_4	WHILE_1	CALL_5
0x400041e	          0x48d3ee	                             shr rsi, cl	       325	hwregs.c	FUNCTION_4	WHILE_1	CALL_5
0x4000421	      0x4823742408	                and rsi, qword [rsp + 8]	       325	hwregs.c	FUNCTION_4	WHILE_1	CALL_5
0x4000426	      0x41807d0000	                       cmp byte [r13], 0	       331	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3
0x400042b	            0x7512	                           jne 0x400043f	       331	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3
0x400042d	       0xfaf442404	               imul eax, dword [rsp + 4]	       332	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3
0x4000432	          0x4489e2	                           mov edx, r12d	       332	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3
0x4000435	          0x4801c7	                            add rdi, rax	       332	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3
0x4000438	      0xe800000000	                          call 0x400043d	       332	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3
0x400043d	            0xeb10	                           jmp 0x400044f	       332	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	IF_3
0x400043f	       0xfaf442404	               imul eax, dword [rsp + 4]	       341	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	ELSE_2	CALL_9
0x4000444	          0x4489e2	                           mov edx, r12d	       341	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	ELSE_2	CALL_9
0x4000447	          0x4801c7	                            add rdi, rax	       341	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	ELSE_2	CALL_9
0x400044a	      0xe800000000	                          call 0x400044f	       341	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	ELSE_2	CALL_9
0x400044f	          0x4189c2	                           mov r10d, eax	       341	hwregs.c	FUNCTION_4	WHILE_1	ELSE_1	ELSE_2	CALL_9
0x4000452	          0x4439e3	                           cmp ebx, r12d	       356	hwregs.c	FUNCTION_4	WHILE_1
0x4000455	          0x4489e0	                           mov eax, r12d	       356	hwregs.c	FUNCTION_4	WHILE_1
0x4000458	           0xf46c3	                         cmovbe eax, ebx	       356	hwregs.c	FUNCTION_4	WHILE_1
0x400045b	          0x41ffc7	                                inc r15d	       357	hwregs.c	FUNCTION_4	WHILE_1
0x400045e	            0x29c3	                            sub ebx, eax	       355	hwregs.c	FUNCTION_4	WHILE_1
0x4000460	            0xeb9a	                           jmp 0x40003fc	       355	hwregs.c	FUNCTION_4	WHILE_1
0x4000462	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       367	hwregs.c	FUNCTION_4
0x4000467	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       367	hwregs.c	FUNCTION_4
0x4000470	          0x4489d0	                           mov eax, r10d	       367	hwregs.c	FUNCTION_4
0x4000473	            0x7405	                            je 0x400047a	       367	hwregs.c	FUNCTION_4
0x4000475	      0xe800000000	                          call 0x400047a	       367	hwregs.c	FUNCTION_4
0x400047a	        0x4883c428	                           add rsp, 0x28	       367	hwregs.c	FUNCTION_4
0x400047e	              0x5b	                                 pop rbx	       367	hwregs.c	FUNCTION_4
0x400047f	              0x5d	                                 pop rbp	       367	hwregs.c	FUNCTION_4
0x4000480	            0x415c	                                 pop r12	       367	hwregs.c	FUNCTION_4
0x4000482	            0x415d	                                 pop r13	       367	hwregs.c	FUNCTION_4
0x4000484	            0x415e	                                 pop r14	       367	hwregs.c	FUNCTION_4
0x4000486	            0x415f	                                 pop r15	       367	hwregs.c	FUNCTION_4
0x4000488	              0xc3	                                     ret	       367	hwregs.c	FUNCTION_4
acpi_hw_clear_acpi_status	CALL,9:functions,0:IF,1:ELSE,0:WHILE,0:SWITCH,0:FOR,0:DO,0	23
0x4000743	              0x53	                                push rbx	       383	hwregs.c	FUNCTION_5
0x4000744	              0x56	                                push rsi	       383	hwregs.c	FUNCTION_5
0x4000745	    0x488b3d000000	            mov rdi, qword [0x0400074c] 	       108	aclinuxex.h	FUNCTION_17	CALL_1
0x400074c	      0xe800000000	                          call 0x4000751	       108	aclinuxex.h	FUNCTION_17	CALL_1
0x4000751	      0xbe31c70000	                         mov esi, 0xc731	       397	hwregs.c	FUNCTION_5	CALL_5
0x4000756	      0xbf01000000	                              mov edi, 1	       397	hwregs.c	FUNCTION_5	CALL_5
0x400075b	          0x4889c3	                            mov rbx, rax	       108	aclinuxex.h	FUNCTION_17	CALL_1
0x400075e	      0xe800000000	                          call 0x4000763	       397	hwregs.c	FUNCTION_5	CALL_5
0x4000763	    0x488b3d000000	            mov rdi, qword [0x0400076a] 	       115	aclinuxex.h	FUNCTION_18	CALL_1
0x400076a	          0x4889de	                            mov rsi, rbx	       115	aclinuxex.h	FUNCTION_18	CALL_1
0x400076d	        0x89442404	                mov dword [rsp + 4], eax	       397	hwregs.c	FUNCTION_5	CALL_5
0x4000771	      0xe800000000	                          call 0x4000776	       115	aclinuxex.h	FUNCTION_18	CALL_1
0x4000776	        0x8b442404	                mov eax, dword [rsp + 4]	       402	hwregs.c	FUNCTION_5	IF_1	CALL_7
0x400077a	            0x85c0	                           test eax, eax	       402	hwregs.c	FUNCTION_5	IF_1	CALL_7
0x400077c	            0x7510	                           jne 0x400078e	       402	hwregs.c	FUNCTION_5	IF_1	CALL_7
0x400077e	              0x59	                                 pop rcx	       412	hwregs.c	FUNCTION_5
0x400077f	              0x5b	                                 pop rbx	       412	hwregs.c	FUNCTION_5
0x4000780	            0x31f6	                            xor esi, esi	       408	hwregs.c	FUNCTION_5	CALL_8
0x4000782	    0x48c7c7000000	                              mov rdi, 0	       408	hwregs.c	FUNCTION_5	CALL_8
0x4000789	      0xe900000000	                           jmp 0x400078e	       408	hwregs.c	FUNCTION_5	CALL_8
0x400078e	              0x5a	                                 pop rdx	       412	hwregs.c	FUNCTION_5
0x400078f	              0x5b	                                 pop rbx	       412	hwregs.c	FUNCTION_5
0x4000790	              0xc3	                                     ret	       412	hwregs.c	FUNCTION_5
acpi_hw_write_pm1_control	CALL,6:functions,0:IF,2:ELSE,0:WHILE,0:SWITCH,0:FOR,0:DO,0	15
0x40004e0	              0x53	                                push rbx	       457	hwregs.c	FUNCTION_7
0x40004e1	            0x89ff	                            mov edi, edi	       462	hwregs.c	FUNCTION_7
0x40004e3	            0x89f3	                            mov ebx, esi	       457	hwregs.c	FUNCTION_7
0x40004e5	    0x48c7c6000000	                              mov rsi, 0	       462	hwregs.c	FUNCTION_7
0x40004ec	      0xe800000000	                          call 0x40004f1	       462	hwregs.c	FUNCTION_7
0x40004f1	            0x85c0	                           test eax, eax	       464	hwregs.c	FUNCTION_7	IF_1	CALL_3
0x40004f3	            0x7519	                           jne 0x400050e	       464	hwregs.c	FUNCTION_7	IF_1	CALL_3
0x40004f5	    0x48833d000000	               cmp qword [0x040004fd], 0	       468	hwregs.c	FUNCTION_7	IF_2
0x40004fd	            0x740f	                            je 0x400050e	       468	hwregs.c	FUNCTION_7	IF_2
0x40004ff	            0x89df	                            mov edi, ebx	       469	hwregs.c	FUNCTION_7	IF_2
0x4000501	    0x48c7c6000000	                              mov rsi, 0	       469	hwregs.c	FUNCTION_7	IF_2
0x4000508	              0x5b	                                 pop rbx	       474	hwregs.c	FUNCTION_7
0x4000509	      0xe956feffff	                   jmp sym.acpi_hw_write	       469	hwregs.c	FUNCTION_7	IF_2
0x400050e	              0x5b	                                 pop rbx	       474	hwregs.c	FUNCTION_7
0x400050f	              0xc3	                                     ret	       474	hwregs.c	FUNCTION_7
acpi_hw_register_write	CALL,15:functions,0:IF,2:ELSE,0:WHILE,0:SWITCH,1:FOR,0:DO,0	67
0x4000617	              0x53	                                push rbx	       587	hwregs.c	FUNCTION_9
0x4000618	            0x89f9	                            mov ecx, edi	       587	hwregs.c	FUNCTION_9
0x400061a	        0x4883ec18	                           sub rsp, 0x18	       587	hwregs.c	FUNCTION_9
0x400061e	    0x65488b042528	                mov rax, qword gs:[0x28]	       587	hwregs.c	FUNCTION_9
0x4000627	      0x4889442410	             mov qword [rsp + 0x10], rax	       587	hwregs.c	FUNCTION_9
0x400062c	            0x31c0	                            xor eax, eax	       587	hwregs.c	FUNCTION_9
0x400062e	          0x8d47ff	                      lea eax, [rdi - 1]	       594	hwregs.c	FUNCTION_9	SWITCH_1
0x4000631	          0x83f806	                              cmp eax, 6	       594	hwregs.c	FUNCTION_9	SWITCH_1
0x4000634	     0xf87d1000000	                            ja 0x400070b	       594	hwregs.c	FUNCTION_9	SWITCH_1
0x400063a	    0x488b04c50000	                  mov rax, qword [rax*8]	       594	hwregs.c	FUNCTION_9	SWITCH_1
0x4000642	            0x89f3	                            mov ebx, esi	       594	hwregs.c	FUNCTION_9	SWITCH_1
0x4000644	      0xe900000000	                           jmp 0x4000649	       594	hwregs.c	FUNCTION_9	SWITCH_1
0x4000649	          0x80e7f7	                            and bh, 0xf7	       608	hwregs.c	FUNCTION_9	SWITCH_1	CALL_2
0x400064c	    0x48c7c2000000	                              mov rdx, 0	       608	hwregs.c	FUNCTION_9	SWITCH_1	CALL_2
0x4000653	    0x48c7c6000000	                              mov rsi, 0	       608	hwregs.c	FUNCTION_9	SWITCH_1	CALL_2
0x400065a	            0x89df	                            mov edi, ebx	       608	hwregs.c	FUNCTION_9	SWITCH_1	CALL_2
0x400065c	            0xeb10	                           jmp 0x400066e	       608	hwregs.c	FUNCTION_9	SWITCH_1	CALL_2
0x400065e	    0x48c7c2000000	                              mov rdx, 0	       615	hwregs.c	FUNCTION_9	SWITCH_1	CALL_3
0x4000665	    0x48c7c6000000	                              mov rsi, 0	       615	hwregs.c	FUNCTION_9	SWITCH_1	CALL_3
0x400066c	            0x89df	                            mov edi, ebx	       615	hwregs.c	FUNCTION_9	SWITCH_1	CALL_3
0x400066e	      0xe816feffff	         call sym.acpi_hw_write_multiple	       615	hwregs.c	FUNCTION_9	SWITCH_1	CALL_3
0x4000673	      0xe9b0000000	                           jmp 0x4000728	       618	hwregs.c	FUNCTION_9	SWITCH_1
0x4000678	      0x488d7c2404	                      lea rdi, [rsp + 4]	       625	hwregs.c	FUNCTION_9	SWITCH_1	CALL_4
0x400067d	    0x48c7c2000000	                              mov rdx, 0	       625	hwregs.c	FUNCTION_9	SWITCH_1	CALL_4
0x4000684	    0x48c7c6000000	                              mov rsi, 0	       625	hwregs.c	FUNCTION_9	SWITCH_1	CALL_4
0x400068b	      0xe867fcffff	          call sym.acpi_hw_read_multiple	       625	hwregs.c	FUNCTION_9	SWITCH_1	CALL_4
0x4000690	            0x85c0	                           test eax, eax	       630	hwregs.c	FUNCTION_9	SWITCH_1	IF_1	CALL_5
0x4000692	     0xf8590000000	                           jne 0x4000728	       630	hwregs.c	FUNCTION_9	SWITCH_1	IF_1	CALL_5
0x4000698	        0x8b7c2404	                mov edi, dword [rsp + 4]	       641	hwregs.c	FUNCTION_9	SWITCH_1	CALL_7
0x400069c	    0x81e3073cffff	                     and ebx, 0xffff3c07	       636	hwregs.c	FUNCTION_9	SWITCH_1	CALL_6
0x40006a2	    0x48c7c2000000	                              mov rdx, 0	       641	hwregs.c	FUNCTION_9	SWITCH_1	CALL_7
0x40006a9	    0x48c7c6000000	                              mov rsi, 0	       641	hwregs.c	FUNCTION_9	SWITCH_1	CALL_7
0x40006b0	    0x81e7f8c30000	                         and edi, 0xc3f8	       641	hwregs.c	FUNCTION_9	SWITCH_1	CALL_7
0x40006b6	             0x9df	                             or edi, ebx	       641	hwregs.c	FUNCTION_9	SWITCH_1	CALL_7
0x40006b8	            0xebb4	                           jmp 0x400066e	       641	hwregs.c	FUNCTION_9	SWITCH_1	CALL_7
0x40006ba	      0x488d7c2408	                      lea rdi, [rsp + 8]	       653	hwregs.c	FUNCTION_9	SWITCH_1
0x40006bf	    0x48c7c6000000	                              mov rsi, 0	       653	hwregs.c	FUNCTION_9	SWITCH_1
0x40006c6	      0xe800000000	                          call 0x40006cb	       653	hwregs.c	FUNCTION_9	SWITCH_1
0x40006cb	            0x85c0	                           test eax, eax	       656	hwregs.c	FUNCTION_9	SWITCH_1	IF_2	CALL_9
0x40006cd	            0x7559	                           jne 0x4000728	       656	hwregs.c	FUNCTION_9	SWITCH_1	IF_2	CALL_9
0x40006cf	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       659	hwregs.c	FUNCTION_9	SWITCH_1
0x40006d4	          0x83e301	                              and ebx, 1	       663	hwregs.c	FUNCTION_9	SWITCH_1	CALL_10
0x40006d7	    0x48c7c6000000	                              mov rsi, 0	       666	hwregs.c	FUNCTION_9	SWITCH_1
0x40006de	        0x897c2404	                mov dword [rsp + 4], edi	       659	hwregs.c	FUNCTION_9	SWITCH_1
0x40006e2	          0x83e7fe	                     and edi, 0xfffffffe	       666	hwregs.c	FUNCTION_9	SWITCH_1
0x40006e5	             0x9df	                             or edi, ebx	       666	hwregs.c	FUNCTION_9	SWITCH_1
0x40006e7	            0xeb09	                           jmp 0x40006f2	       666	hwregs.c	FUNCTION_9	SWITCH_1
0x40006e9	            0x89f7	                            mov edi, esi	       672	hwregs.c	FUNCTION_9	SWITCH_1	CALL_12
0x40006eb	    0x48c7c6000000	                              mov rsi, 0	       672	hwregs.c	FUNCTION_9	SWITCH_1	CALL_12
0x40006f2	      0xe800000000	                          call 0x40006f7	       672	hwregs.c	FUNCTION_9	SWITCH_1	CALL_12
0x40006f7	            0xeb2f	                           jmp 0x4000728	       673	hwregs.c	FUNCTION_9	SWITCH_1
0x40006f9	    0x8b3d00000000	            mov edi, dword [0x040006ff] 	       679	hwregs.c	FUNCTION_9	SWITCH_1
0x40006ff	      0xba08000000	                              mov edx, 8	       679	hwregs.c	FUNCTION_9	SWITCH_1
0x4000704	      0xe800000000	                          call 0x4000709	       679	hwregs.c	FUNCTION_9	SWITCH_1
0x4000709	            0xeb1d	                           jmp 0x4000728	       681	hwregs.c	FUNCTION_9	SWITCH_1
0x400070b	    0x48c7c2000000	                              mov rdx, 0	       685	hwregs.c	FUNCTION_9	SWITCH_1	CALL_14
0x4000712	      0xbead020000	                          mov esi, 0x2ad	       685	hwregs.c	FUNCTION_9	SWITCH_1	CALL_14
0x4000717	    0x48c7c7000000	                              mov rdi, 0	       685	hwregs.c	FUNCTION_9	SWITCH_1	CALL_14
0x400071e	      0xe800000000	                          call 0x4000723	       685	hwregs.c	FUNCTION_9	SWITCH_1	CALL_14
0x4000723	      0xb801100000	                         mov eax, 0x1001	       686	hwregs.c	FUNCTION_9	SWITCH_1
0x4000728	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       692	hwregs.c	FUNCTION_9
0x400072d	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       692	hwregs.c	FUNCTION_9
0x4000736	            0x7405	                            je 0x400073d	       692	hwregs.c	FUNCTION_9
0x4000738	      0xe800000000	                          call 0x400073d	       692	hwregs.c	FUNCTION_9
0x400073d	        0x4883c418	                           add rsp, 0x18	       692	hwregs.c	FUNCTION_9
0x4000741	              0x5b	                                 pop rbx	       692	hwregs.c	FUNCTION_9
0x4000742	              0xc3	                                     ret	       692	hwregs.c	FUNCTION_9
