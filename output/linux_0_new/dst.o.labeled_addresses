dst_discard	DO,0:IF,0:WHILE,0:FOR,0:ELSE,0:functions,0:SWITCH,0:CALL,1	3
0x40000c0	      0xe800000000	                          call 0x40000c5	        48	dst.c	FUNCTION_1	CALL_1
0x40000c5	            0x31c0	                            xor eax, eax	       390	dst.h	FUNCTION_46
0x40000c7	              0xc3	                                     ret	       390	dst.h	FUNCTION_46
metadata_dst_free_percpu	DO,0:IF,0:WHILE,0:FOR,0:ELSE,0:functions,1:SWITCH,0:CALL,1	27
0x40003c0	              0x55	                                push rbp	       329	dst.c	FUNCTION_17
0x40003c1	              0x53	                                push rbx	       329	dst.c	FUNCTION_17
0x40003c2	          0x4889fd	                            mov rbp, rdi	       329	dst.c	FUNCTION_17
0x40003c5	      0xb8ffffffff	                     mov eax, 0xffffffff	       333	dst.c	FUNCTION_17	FUNCTION_1
0x40003ca	          0x4889fb	                            mov rbx, rdi	       334	dst.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40003cd	        0x4883ec08	                              sub rsp, 8	       329	dst.c	FUNCTION_17
0x40003d1	    0x48c7c6000000	                              mov rsi, 0	       333	dst.c	FUNCTION_17	FUNCTION_1
0x40003d8	            0x89c7	                            mov edi, eax	       333	dst.c	FUNCTION_17	FUNCTION_1
0x40003da	      0xe800000000	                          call 0x40003df	       333	dst.c	FUNCTION_17	FUNCTION_1
0x40003df	    0x3b0500000000	            cmp eax, dword [0x040003e5] 	       333	dst.c	FUNCTION_17	FUNCTION_1
0x40003e5	            0x732b	                           jae 0x4000412	       333	dst.c	FUNCTION_17	FUNCTION_1
0x40003e7	          0x4863d0	                         movsxd rdx, eax	       334	dst.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40003ea	          0x4889df	                            mov rdi, rbx	       334	dst.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40003ed	    0x48033cd50000	                  add rdi, qword [rdx*8]	       334	dst.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40003f5	          0x8b5770	            mov edx, dword [rdi + 0x70] 	       336	dst.c	FUNCTION_17	FUNCTION_1	IF_1
0x40003f8	            0x85d2	                           test edx, edx	       336	dst.c	FUNCTION_17	FUNCTION_1	IF_1
0x40003fa	            0x75d5	                           jne 0x40003d1	       336	dst.c	FUNCTION_17	FUNCTION_1	IF_1
0x40003fc	    0x4881c7b00000	                           add rdi, 0xb0	       337	dst.c	FUNCTION_17	FUNCTION_1	CALL_2
0x4000403	        0x89442404	                mov dword [rsp + 4], eax	       337	dst.c	FUNCTION_17	FUNCTION_1	CALL_2
0x4000407	      0xe800000000	                          call 0x400040c	       337	dst.c	FUNCTION_17	FUNCTION_1	CALL_2
0x400040c	        0x8b442404	                mov eax, dword [rsp + 4]	       337	dst.c	FUNCTION_17	FUNCTION_1	CALL_2
0x4000410	            0xebbf	                           jmp 0x40003d1	       337	dst.c	FUNCTION_17	FUNCTION_1	CALL_2
0x4000412	        0x4883c408	                              add rsp, 8	       341	dst.c	FUNCTION_17
0x4000416	          0x4889ef	                            mov rdi, rbp	       340	dst.c	FUNCTION_17	CALL_1
0x4000419	              0x5b	                                 pop rbx	       341	dst.c	FUNCTION_17
0x400041a	              0x5d	                                 pop rbp	       341	dst.c	FUNCTION_17
0x400041b	      0xe900000000	                        jmp sym.dst_init	       340	dst.c	FUNCTION_17	CALL_1
__dst_destroy_metrics_generic	DO,0:IF,1:WHILE,0:FOR,0:ELSE,0:functions,0:SWITCH,0:CALL,1	10
0x4000130	    0x48c7c2000000	                              mov rdx, 0	       244	dst.c	FUNCTION_10
0x4000137	          0x4889f0	                            mov rax, rsi	       365	atomic-instrumented.h	FUNCTION_113	SWITCH_1	CALL_6
0x400013a	        0x4883ca01	                               or rdx, 1	       244	dst.c	FUNCTION_10
0x400013e	    0xf0480fb15710	    lock cmpxchg qword [rdi + 0x10], rdx	       365	atomic-instrumented.h	FUNCTION_113	SWITCH_1	CALL_6
0x4000144	          0x4839c6	                            cmp rsi, rax	       246	dst.c	FUNCTION_10	IF_1
0x4000147	            0x7402	                            je 0x400014b	       246	dst.c	FUNCTION_10	IF_1
0x4000149	            0xf3c3	                                     ret	       246	dst.c	FUNCTION_10	IF_1
0x400014b	          0x4889f7	                            mov rdi, rsi	       247	dst.c	FUNCTION_10	CALL_1
0x400014e	        0x4883e7fc	             and rdi, 0xfffffffffffffffc	       247	dst.c	FUNCTION_10	CALL_1
0x4000152	      0xe900000000	                           jmp 0x4000157	       247	dst.c	FUNCTION_10	CALL_1
metadata_dst_free	DO,0:IF,1:WHILE,0:FOR,0:ELSE,0:functions,0:SWITCH,0:CALL,2	10
0x4000670	              0x53	                                push rbx	       302	dst.c	FUNCTION_15
0x4000671	          0x8b4770	            mov eax, dword [rdi + 0x70] 	       304	dst.c	FUNCTION_15	IF_1
0x4000674	          0x4889fb	                            mov rbx, rdi	       302	dst.c	FUNCTION_15
0x4000677	            0x85c0	                           test eax, eax	       304	dst.c	FUNCTION_15	IF_1
0x4000679	            0x750c	                           jne 0x4000687	       304	dst.c	FUNCTION_15	IF_1
0x400067b	    0x488dbfb00000	                   lea rdi, [rdi + 0xb0]	       305	dst.c	FUNCTION_15	CALL_1
0x4000682	      0xe800000000	                          call 0x4000687	       305	dst.c	FUNCTION_15	CALL_1
0x4000687	          0x4889df	                            mov rdi, rbx	       307	dst.c	FUNCTION_15	CALL_2
0x400068a	              0x5b	                                 pop rbx	       308	dst.c	FUNCTION_15
0x400068b	      0xe900000000	                     jmp sym.dst_destroy	       307	dst.c	FUNCTION_15	CALL_2
dst_destroy_rcu	DO,0:IF,0:WHILE,0:FOR,0:ELSE,0:functions,0:SWITCH,0:CALL,2	2
0x4000730	        0x4883ef58	                           sub rdi, 0x58	       153	dst.c	FUNCTION_5	CALL_2
0x4000734	      0xe957ffffff	                     jmp sym.dst_destroy	       153	dst.c	FUNCTION_5	CALL_2
dst_alloc	DO,0:IF,3:WHILE,0:FOR,0:ELSE,0:functions,0:SWITCH,0:CALL,4	45
0x40004c0	            0x4157	                                push r15	        96	dst.c	FUNCTION_3
0x40004c2	            0x4156	                                push r14	        96	dst.c	FUNCTION_3
0x40004c4	          0x4589c7	                           mov r15d, r8d	        96	dst.c	FUNCTION_3
0x40004c7	            0x4155	                                push r13	        96	dst.c	FUNCTION_3
0x40004c9	            0x4154	                                push r12	        96	dst.c	FUNCTION_3
0x40004cb	          0x4189d5	                           mov r13d, edx	        96	dst.c	FUNCTION_3
0x40004ce	              0x55	                                push rbp	        96	dst.c	FUNCTION_3
0x40004cf	              0x53	                                push rbx	        96	dst.c	FUNCTION_3
0x40004d0	          0x4989f4	                            mov r12, rsi	        96	dst.c	FUNCTION_3
0x40004d3	      0x48837f0800	                  cmp qword [rdi + 8], 0	        99	dst.c	FUNCTION_3	IF_1	CALL_1
0x40004d8	          0x4889fb	                            mov rbx, rdi	        96	dst.c	FUNCTION_3
0x40004db	          0x4189ce	                           mov r14d, ecx	        96	dst.c	FUNCTION_3
0x40004de	            0x7411	                            je 0x40004f1	        99	dst.c	FUNCTION_3	IF_1	CALL_1
0x40004e0	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	        99	dst.c	FUNCTION_3	IF_1	CALL_1
0x40004e7	          0x4885c0	                           test rax, rax	        84	percpu_counter.h	FUNCTION_128	IF_1
0x40004ea	            0x7805	                            js 0x40004f1	        84	percpu_counter.h	FUNCTION_128	IF_1
0x40004ec	          0x394704	                cmp dword [rdi + 4], eax	        99	dst.c	FUNCTION_3	IF_1	CALL_1
0x40004ef	            0x723c	                            jb 0x400052d	        99	dst.c	FUNCTION_3	IF_1	CALL_1
0x40004f1	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	       104	dst.c	FUNCTION_3	CALL_3
0x40004f5	      0xbe20000801	                      mov esi, 0x1080020	       104	dst.c	FUNCTION_3	CALL_3
0x40004fa	      0xe800000000	                          call 0x40004ff	       104	dst.c	FUNCTION_3	CALL_3
0x40004ff	          0x4885c0	                           test rax, rax	       105	dst.c	FUNCTION_3	IF_3
0x4000502	          0x4889c5	                            mov rbp, rax	       104	dst.c	FUNCTION_3	CALL_3
0x4000505	            0x7433	                            je 0x400053a	       105	dst.c	FUNCTION_3	IF_3
0x4000507	          0x4889c7	                            mov rdi, rax	       108	dst.c	FUNCTION_3	CALL_4
0x400050a	        0x450fb7cf	                         movzx r9d, r15w	       108	dst.c	FUNCTION_3	CALL_4
0x400050e	          0x4589f0	                           mov r8d, r14d	       108	dst.c	FUNCTION_3	CALL_4
0x4000511	          0x4489e9	                           mov ecx, r13d	       108	dst.c	FUNCTION_3	CALL_4
0x4000514	          0x4c89e2	                            mov rdx, r12	       108	dst.c	FUNCTION_3	CALL_4
0x4000517	          0x4889de	                            mov rsi, rbx	       108	dst.c	FUNCTION_3	CALL_4
0x400051a	      0xe800000000	                          call 0x400051f	       108	dst.c	FUNCTION_3	CALL_4
0x400051f	          0x4889e8	                            mov rax, rbp	       110	dst.c	FUNCTION_3
0x4000522	              0x5b	                                 pop rbx	       111	dst.c	FUNCTION_3
0x4000523	              0x5d	                                 pop rbp	       111	dst.c	FUNCTION_3
0x4000524	            0x415c	                                 pop r12	       111	dst.c	FUNCTION_3
0x4000526	            0x415d	                                 pop r13	       111	dst.c	FUNCTION_3
0x4000528	            0x415e	                                 pop r14	       111	dst.c	FUNCTION_3
0x400052a	            0x415f	                                 pop r15	       111	dst.c	FUNCTION_3
0x400052c	              0xc3	                                     ret	       111	dst.c	FUNCTION_3
0x400052d	        0x488b4708	                mov rax, qword [rdi + 8]	       100	dst.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000531	      0xe800000000	                          call 0x4000536	       100	dst.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000536	            0x85c0	                           test eax, eax	       100	dst.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000538	            0x74b7	                            je 0x40004f1	       100	dst.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400053a	            0x31c0	                            xor eax, eax	       101	dst.c	FUNCTION_3	IF_1	IF_2
0x400053c	            0xebe4	                           jmp 0x4000522	       101	dst.c	FUNCTION_3	IF_1	IF_2
dst_md_discard_out	DO,0:IF,0:WHILE,0:FOR,0:ELSE,0:functions,0:SWITCH,0:CALL,2	19
0x4000330	        0x4883ec08	                              sub rsp, 8	       256	dst.c	FUNCTION_11
0x4000334	    0x803d00000000	                cmp byte [0x0400033b], 0	       257	dst.c	FUNCTION_11	CALL_1
0x400033b	            0x740f	                            je 0x400034c	       257	dst.c	FUNCTION_11	CALL_1
0x400033d	          0x4889d7	                            mov rdi, rdx	       258	dst.c	FUNCTION_11	CALL_2
0x4000340	      0xe800000000	                          call 0x4000345	       258	dst.c	FUNCTION_11	CALL_2
0x4000345	            0x31c0	                            xor eax, eax	       260	dst.c	FUNCTION_11
0x4000347	        0x4883c408	                              add rsp, 8	       260	dst.c	FUNCTION_11
0x400034b	              0xc3	                                     ret	       260	dst.c	FUNCTION_11
0x400034c	    0x48c7c7000000	                              mov rdi, 0	       257	dst.c	FUNCTION_11	CALL_1
0x4000353	        0x48891424	                    mov qword [rsp], rdx	       257	dst.c	FUNCTION_11	CALL_1
0x4000357	    0xc60500000000	                mov byte [0x0400035e], 1	       257	dst.c	FUNCTION_11	CALL_1
0x400035e	      0xe800000000	                          call 0x4000363	       257	dst.c	FUNCTION_11	CALL_1
0x4000363	             0xf0b	                                     ud2	       257	dst.c	FUNCTION_11	CALL_1
0x4000365	        0x488b1424	                    mov rdx, qword [rsp]	       257	dst.c	FUNCTION_11	CALL_1
0x4000369	          0x4889d7	                            mov rdi, rdx	       258	dst.c	FUNCTION_11	CALL_2
0x400036c	      0xe800000000	                          call 0x4000371	       258	dst.c	FUNCTION_11	CALL_2
0x4000371	            0x31c0	                            xor eax, eax	       260	dst.c	FUNCTION_11
0x4000373	        0x4883c408	                              add rsp, 8	       260	dst.c	FUNCTION_11
0x4000377	              0xc3	                                     ret	       260	dst.c	FUNCTION_11
dst_md_discard	DO,0:IF,0:WHILE,0:FOR,0:ELSE,0:functions,0:SWITCH,0:CALL,2	18
0x4000380	    0x803d00000000	                cmp byte [0x04000387], 0	       264	dst.c	FUNCTION_12	CALL_1
0x4000387	              0x53	                                push rbx	       263	dst.c	FUNCTION_12
0x4000388	          0x4889fb	                            mov rbx, rdi	       263	dst.c	FUNCTION_12
0x400038b	            0x740c	                            je 0x4000399	       264	dst.c	FUNCTION_12	CALL_1
0x400038d	          0x4889df	                            mov rdi, rbx	       265	dst.c	FUNCTION_12	CALL_2
0x4000390	      0xe800000000	                          call 0x4000395	       265	dst.c	FUNCTION_12	CALL_2
0x4000395	            0x31c0	                            xor eax, eax	       267	dst.c	FUNCTION_12
0x4000397	              0x5b	                                 pop rbx	       267	dst.c	FUNCTION_12
0x4000398	              0xc3	                                     ret	       267	dst.c	FUNCTION_12
0x4000399	    0x48c7c7000000	                              mov rdi, 0	       264	dst.c	FUNCTION_12	CALL_1
0x40003a0	    0xc60500000000	                mov byte [0x040003a7], 1	       264	dst.c	FUNCTION_12	CALL_1
0x40003a7	      0xe800000000	                          call 0x40003ac	       264	dst.c	FUNCTION_12	CALL_1
0x40003ac	             0xf0b	                                     ud2	       264	dst.c	FUNCTION_12	CALL_1
0x40003ae	          0x4889df	                            mov rdi, rbx	       265	dst.c	FUNCTION_12	CALL_2
0x40003b1	      0xe800000000	                          call 0x40003b6	       265	dst.c	FUNCTION_12	CALL_2
0x40003b6	            0x31c0	                            xor eax, eax	       267	dst.c	FUNCTION_12
0x40003b8	              0x5b	                                 pop rbx	       267	dst.c	FUNCTION_12
0x40003b9	              0xc3	                                     ret	       267	dst.c	FUNCTION_12
