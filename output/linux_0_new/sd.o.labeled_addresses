sd_pr_reserve	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,1	15
0x4001070	            0x85c9	                           test ecx, ecx	      1762	sd.c	FUNCTION_52	IF_1
0x4001072	            0x7527	                           jne 0x400109b	      1762	sd.c	FUNCTION_52	IF_1
0x4001074	          0x83ea01	                              sub edx, 1	      1762	sd.c	FUNCTION_52	IF_1
0x4001077	          0x4531c0	                            xor r8d, r8d	      1762	sd.c	FUNCTION_52	IF_1
0x400107a	          0x83fa05	                              cmp edx, 5	      1762	sd.c	FUNCTION_52	IF_1
0x400107d	            0x7612	                           jbe 0x4001091	      1762	sd.c	FUNCTION_52	IF_1
0x400107f	          0x4889f2	                            mov rdx, rsi	      1764	sd.c	FUNCTION_52	CALL_2
0x4001082	          0x4531c9	                            xor r9d, r9d	      1764	sd.c	FUNCTION_52	CALL_2
0x4001085	            0x31c9	                            xor ecx, ecx	      1764	sd.c	FUNCTION_52	CALL_2
0x4001087	      0xbe01000000	                              mov esi, 1	      1764	sd.c	FUNCTION_52	CALL_2
0x400108c	      0xe94ffeffff	                   jmp sym.sd_pr_command	      1764	sd.c	FUNCTION_52	CALL_2
0x4001091	    0x440fb6820000	                   movzx r8d, byte [rdx]	      1764	sd.c	FUNCTION_52	CALL_2
0x4001099	            0xebe4	                           jmp 0x400107f	      1764	sd.c	FUNCTION_52	CALL_2
0x400109b	      0xb8a1ffffff	                     mov eax, 0xffffffa1	      1765	sd.c	FUNCTION_52
0x40010a0	              0xc3	                                     ret	      1765	sd.c	FUNCTION_52
allow_restart_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	10
0x4000320	          0x4889d0	                            mov rax, rdx	       250	sd.c	FUNCTION_5
0x4000323	        0x488b57f8	                mov rdx, qword [rdi - 8]	       253	sd.c	FUNCTION_5	CALL_1
0x4000327	    0x48c7c6000000	                              mov rsi, 0	       253	sd.c	FUNCTION_5	CALL_1
0x400032e	          0x4889c7	                            mov rdi, rax	       253	sd.c	FUNCTION_5	CALL_1
0x4000331	     0xfb6921b0100	          movzx edx, byte [rdx + 0x11b] 	       253	sd.c	FUNCTION_5	CALL_1
0x4000338	          0xc0ea02	                               shr dl, 2	       253	sd.c	FUNCTION_5	CALL_1
0x400033b	          0x83e201	                              and edx, 1	       253	sd.c	FUNCTION_5	CALL_1
0x400033e	      0xe800000000	                          call 0x4000343	       253	sd.c	FUNCTION_5	CALL_1
0x4000343	            0x4898	                                    cdqe	       253	sd.c	FUNCTION_5	CALL_1
0x4000345	              0xc3	                                     ret	       254	sd.c	FUNCTION_5
sd_unlock_native_capacity	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,1	9
0x4000070	    0x488b87c80300	           mov rax, qword [rdi + 0x3c8] 	      3178	sd.c	FUNCTION_79	CALL_1
0x4000077	        0x488b7808	                mov rdi, qword [rax + 8]	      3178	sd.c	FUNCTION_79	CALL_1
0x400007b	          0x488b07	                    mov rax, qword [rdi]	      3180	sd.c	FUNCTION_79	IF_1
0x400007e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3180	sd.c	FUNCTION_79	IF_1
0x4000085	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3180	sd.c	FUNCTION_79	IF_1
0x400008c	          0x4885c0	                           test rax, rax	      3180	sd.c	FUNCTION_79	IF_1
0x400008f	            0x7405	                            je 0x4000096	      3180	sd.c	FUNCTION_79	IF_1
0x4000091	      0xe900000000	                           jmp 0x4000096	      3181	sd.c	FUNCTION_79	CALL_2
0x4000096	            0xf3c3	                                     ret	      3181	sd.c	FUNCTION_79	CALL_2
allow_restart_store	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,3	45
0x40006a0	            0x4154	                                push r12	       259	sd.c	FUNCTION_6
0x40006a2	              0x55	                                push rbp	       259	sd.c	FUNCTION_6
0x40006a3	          0x4989d4	                            mov r12, rdx	       259	sd.c	FUNCTION_6
0x40006a6	              0x53	                                push rbx	       259	sd.c	FUNCTION_6
0x40006a7	          0x4889cb	                            mov rbx, rcx	       259	sd.c	FUNCTION_6
0x40006aa	        0x4883ec10	                           sub rsp, 0x10	       259	sd.c	FUNCTION_6
0x40006ae	        0x488b6ff8	                mov rbp, qword [rdi - 8]	       262	sd.c	FUNCTION_6
0x40006b2	      0xbf15000000	                           mov edi, 0x15	       264	sd.c	FUNCTION_6	IF_1	CALL_1
0x40006b7	    0x65488b042528	                mov rax, qword gs:[0x28]	       259	sd.c	FUNCTION_6
0x40006c0	      0x4889442408	                mov qword [rsp + 8], rax	       259	sd.c	FUNCTION_6
0x40006c5	            0x31c0	                            xor eax, eax	       259	sd.c	FUNCTION_6
0x40006c7	      0xe800000000	                          call 0x40006cc	       264	sd.c	FUNCTION_6	IF_1	CALL_1
0x40006cc	            0x84c0	                             test al, al	       264	sd.c	FUNCTION_6	IF_1	CALL_1
0x40006ce	            0x7462	                            je 0x4000732	       264	sd.c	FUNCTION_6	IF_1	CALL_1
0x40006d0	     0xfb685a00000	           movzx eax, byte [rbp + 0xa0] 	       267	sd.c	FUNCTION_6	IF_2
0x40006d7	            0x84c0	                             test al, al	       267	sd.c	FUNCTION_6	IF_2
0x40006d9	            0x7404	                            je 0x40006df	       267	sd.c	FUNCTION_6	IF_2
0x40006db	            0x3c14	                            cmp al, 0x14	       267	sd.c	FUNCTION_6	IF_2
0x40006dd	            0x754a	                           jne 0x4000729	       267	sd.c	FUNCTION_6	IF_2
0x40006df	      0x488d742407	                      lea rsi, [rsp + 7]	       270	sd.c	FUNCTION_6	IF_3	CALL_2
0x40006e4	          0x4c89e7	                            mov rdi, r12	       270	sd.c	FUNCTION_6	IF_3	CALL_2
0x40006e7	      0xe800000000	                          call 0x40006ec	       270	sd.c	FUNCTION_6	IF_3	CALL_2
0x40006ec	            0x85c0	                           test eax, eax	       270	sd.c	FUNCTION_6	IF_3	CALL_2
0x40006ee	            0x7539	                           jne 0x4000729	       270	sd.c	FUNCTION_6	IF_3	CALL_2
0x40006f0	       0xfb6542407	               movzx edx, byte [rsp + 7]	       273	sd.c	FUNCTION_6
0x40006f5	     0xfb6851b0100	          movzx eax, byte [rbp + 0x11b] 	       273	sd.c	FUNCTION_6
0x40006fc	          0x83e201	                              and edx, 1	       273	sd.c	FUNCTION_6
0x40006ff	          0x83e0fb	                     and eax, 0xfffffffb	       273	sd.c	FUNCTION_6
0x4000702	          0xc1e202	                              shl edx, 2	       273	sd.c	FUNCTION_6
0x4000705	             0x9c2	                             or edx, eax	       273	sd.c	FUNCTION_6
0x4000707	          0x4889d8	                            mov rax, rbx	       275	sd.c	FUNCTION_6
0x400070a	    0x88951b010000	              mov byte [rbp + 0x11b], dl	       273	sd.c	FUNCTION_6
0x4000710	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       276	sd.c	FUNCTION_6
0x4000715	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       276	sd.c	FUNCTION_6
0x400071e	            0x751b	                           jne 0x400073b	       276	sd.c	FUNCTION_6
0x4000720	        0x4883c410	                           add rsp, 0x10	       276	sd.c	FUNCTION_6
0x4000724	              0x5b	                                 pop rbx	       276	sd.c	FUNCTION_6
0x4000725	              0x5d	                                 pop rbp	       276	sd.c	FUNCTION_6
0x4000726	            0x415c	                                 pop r12	       276	sd.c	FUNCTION_6
0x4000728	              0xc3	                                     ret	       276	sd.c	FUNCTION_6
0x4000729	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       268	sd.c	FUNCTION_6	IF_2
0x4000730	            0xebde	                           jmp 0x4000710	       268	sd.c	FUNCTION_6	IF_2
0x4000732	    0x48c7c0f3ffff	             mov rax, 0xfffffffffffffff3	       265	sd.c	FUNCTION_6	IF_1
0x4000739	            0xebd5	                           jmp 0x4000710	       265	sd.c	FUNCTION_6	IF_1
0x400073b	      0xe800000000	                      call sym.sd_rescan	       276	sd.c	FUNCTION_6
protection_type_store	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,3	38
0x4000150	            0x4154	                                push r12	       310	sd.c	FUNCTION_10
0x4000152	              0x55	                                push rbp	       310	sd.c	FUNCTION_10
0x4000153	          0x4989fc	                            mov r12, rdi	       310	sd.c	FUNCTION_10
0x4000156	              0x53	                                push rbx	       310	sd.c	FUNCTION_10
0x4000157	      0xbf15000000	                           mov edi, 0x15	       315	sd.c	FUNCTION_10	IF_1	CALL_1
0x400015c	          0x4889d3	                            mov rbx, rdx	       310	sd.c	FUNCTION_10
0x400015f	          0x4889cd	                            mov rbp, rcx	       310	sd.c	FUNCTION_10
0x4000162	        0x4883ec10	                           sub rsp, 0x10	       310	sd.c	FUNCTION_10
0x4000166	    0x65488b042528	                mov rax, qword gs:[0x28]	       310	sd.c	FUNCTION_10
0x400016f	      0x4889442408	                mov qword [rsp + 8], rax	       310	sd.c	FUNCTION_10
0x4000174	            0x31c0	                            xor eax, eax	       310	sd.c	FUNCTION_10
0x4000176	      0xe800000000	                          call 0x400017b	       315	sd.c	FUNCTION_10	IF_1	CALL_1
0x400017b	            0x84c0	                             test al, al	       315	sd.c	FUNCTION_10	IF_1	CALL_1
0x400017d	    0x48c7c2f3ffff	             mov rdx, 0xfffffffffffffff3	       316	sd.c	FUNCTION_10	IF_1
0x4000184	            0x7425	                            je 0x40001ab	       315	sd.c	FUNCTION_10	IF_1	CALL_1
0x4000186	      0x488d542404	                      lea rdx, [rsp + 4]	       318	sd.c	FUNCTION_10	CALL_2
0x400018b	      0xbe0a000000	                            mov esi, 0xa	       318	sd.c	FUNCTION_10	CALL_2
0x4000190	          0x4889df	                            mov rdi, rbx	       318	sd.c	FUNCTION_10	CALL_2
0x4000193	      0xe800000000	                          call 0x4000198	       318	sd.c	FUNCTION_10	CALL_2
0x4000198	            0x85c0	                           test eax, eax	       320	sd.c	FUNCTION_10	IF_2
0x400019a	          0x4863d0	                         movsxd rdx, eax	       321	sd.c	FUNCTION_10	IF_2
0x400019d	            0x750c	                           jne 0x40001ab	       320	sd.c	FUNCTION_10	IF_2
0x400019f	        0x8b442404	                mov eax, dword [rsp + 4]	       323	sd.c	FUNCTION_10	IF_3
0x40001a3	          0x83f803	                              cmp eax, 3	       323	sd.c	FUNCTION_10	IF_3
0x40001a6	            0x761f	                           jbe 0x40001c7	       323	sd.c	FUNCTION_10	IF_3
0x40001a8	          0x4889ea	                            mov rdx, rbp	       326	sd.c	FUNCTION_10
0x40001ab	      0x488b742408	                mov rsi, qword [rsp + 8]	       327	sd.c	FUNCTION_10
0x40001b0	    0x654833342528	                xor rsi, qword gs:[0x28]	       327	sd.c	FUNCTION_10
0x40001b9	          0x4889d0	                            mov rax, rdx	       327	sd.c	FUNCTION_10
0x40001bc	            0x7513	                           jne 0x40001d1	       327	sd.c	FUNCTION_10
0x40001be	        0x4883c410	                           add rsp, 0x10	       327	sd.c	FUNCTION_10
0x40001c2	              0x5b	                                 pop rbx	       327	sd.c	FUNCTION_10
0x40001c3	              0x5d	                                 pop rbp	       327	sd.c	FUNCTION_10
0x40001c4	            0x415c	                                 pop r12	       327	sd.c	FUNCTION_10
0x40001c6	              0xc3	                                     ret	       327	sd.c	FUNCTION_10
0x40001c7	    0x418884241a03	              mov byte [r12 + 0x31a], al	       324	sd.c	FUNCTION_10	IF_3
0x40001cf	            0xebd7	                           jmp 0x40001a8	       324	sd.c	FUNCTION_10	IF_3
0x40001d1	      0xe800000000	                          call 0x40001d6	       327	sd.c	FUNCTION_10
sd_suspend_system	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	2
0x4002580	      0xbe01000000	                              mov esi, 1	      3578	sd.c	FUNCTION_88	CALL_1
0x4002585	      0xe9c6feffff	               jmp sym.sd_suspend_common	      3578	sd.c	FUNCTION_88	CALL_1
protection_type_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	7
0x40002d0	          0x4889d0	                            mov rax, rdx	       301	sd.c	FUNCTION_9
0x40002d3	     0xfb6971a0300	          movzx edx, byte [rdi + 0x31a] 	       304	sd.c	FUNCTION_9	CALL_1
0x40002da	    0x48c7c6000000	                              mov rsi, 0	       304	sd.c	FUNCTION_9	CALL_1
0x40002e1	          0x4889c7	                            mov rdi, rax	       304	sd.c	FUNCTION_9	CALL_1
0x40002e4	      0xe800000000	                          call 0x40002e9	       304	sd.c	FUNCTION_9	CALL_1
0x40002e9	            0x4898	                                    cdqe	       304	sd.c	FUNCTION_9	CALL_1
0x40002eb	              0xc3	                                     ret	       305	sd.c	FUNCTION_9
sd_pr_preempt	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,0	14
0x4001010	          0x83e901	                              sub ecx, 1	      1774	sd.c	FUNCTION_54
0x4001013	            0x31c0	                            xor eax, eax	      1774	sd.c	FUNCTION_54
0x4001015	          0x4989f2	                            mov r10, rsi	      1774	sd.c	FUNCTION_54
0x4001018	          0x83f905	                              cmp ecx, 5	      1774	sd.c	FUNCTION_54
0x400101b	            0x7707	                            ja 0x4001024	      1774	sd.c	FUNCTION_54
0x400101d	     0xfb681000000	                   movzx eax, byte [rcx]	      1774	sd.c	FUNCTION_54
0x4001024	        0x4180f801	                              cmp r8b, 1	      1775	sd.c	FUNCTION_54	CALL_1
0x4001028	          0x4889d1	                            mov rcx, rdx	      1775	sd.c	FUNCTION_54	CALL_1
0x400102b	          0x4189c0	                            mov r8d, eax	      1775	sd.c	FUNCTION_54	CALL_1
0x400102e	            0x19f6	                            sbb esi, esi	      1775	sd.c	FUNCTION_54	CALL_1
0x4001030	          0x4c89d2	                            mov rdx, r10	      1775	sd.c	FUNCTION_54	CALL_1
0x4001033	          0x4531c9	                            xor r9d, r9d	      1775	sd.c	FUNCTION_54	CALL_1
0x4001036	          0x83c605	                              add esi, 5	      1775	sd.c	FUNCTION_54	CALL_1
0x4001039	      0xe9a2feffff	                   jmp sym.sd_pr_command	      1775	sd.c	FUNCTION_54	CALL_1
zeroing_mode_store	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,2	26
0x40003c0	            0x4154	                                push r12	       440	sd.c	FUNCTION_17
0x40003c2	              0x55	                                push rbp	       440	sd.c	FUNCTION_17
0x40003c3	          0x4989fc	                            mov r12, rdi	       440	sd.c	FUNCTION_17
0x40003c6	              0x53	                                push rbx	       440	sd.c	FUNCTION_17
0x40003c7	      0xbf15000000	                           mov edi, 0x15	       444	sd.c	FUNCTION_17	IF_1	CALL_1
0x40003cc	          0x4889cd	                            mov rbp, rcx	       440	sd.c	FUNCTION_17
0x40003cf	          0x4889d3	                            mov rbx, rdx	       440	sd.c	FUNCTION_17
0x40003d2	      0xe800000000	                          call 0x40003d7	       444	sd.c	FUNCTION_17	IF_1	CALL_1
0x40003d7	            0x84c0	                             test al, al	       444	sd.c	FUNCTION_17	IF_1	CALL_1
0x40003d9	    0x48c7c1f3ffff	             mov rcx, 0xfffffffffffffff3	       445	sd.c	FUNCTION_17	IF_1
0x40003e0	            0x7423	                            je 0x4000405	       444	sd.c	FUNCTION_17	IF_1	CALL_1
0x40003e2	          0x4889da	                            mov rdx, rbx	       447	sd.c	FUNCTION_17	CALL_2
0x40003e5	      0xbe04000000	                              mov esi, 4	       447	sd.c	FUNCTION_17	CALL_2
0x40003ea	    0x48c7c7000000	                              mov rdi, 0	       447	sd.c	FUNCTION_17	CALL_2
0x40003f1	      0xe800000000	                          call 0x40003f6	       447	sd.c	FUNCTION_17	CALL_2
0x40003f6	            0x85c0	                           test eax, eax	       448	sd.c	FUNCTION_17	IF_2
0x40003f8	            0x7813	                            js 0x400040d	       448	sd.c	FUNCTION_17	IF_2
0x40003fa	    0x418884241c03	              mov byte [r12 + 0x31c], al	       451	sd.c	FUNCTION_17
0x4000402	          0x4889e9	                            mov rcx, rbp	       453	sd.c	FUNCTION_17
0x4000405	              0x5b	                                 pop rbx	       454	sd.c	FUNCTION_17
0x4000406	          0x4889c8	                            mov rax, rcx	       454	sd.c	FUNCTION_17
0x4000409	              0x5d	                                 pop rbp	       454	sd.c	FUNCTION_17
0x400040a	            0x415c	                                 pop r12	       454	sd.c	FUNCTION_17
0x400040c	              0xc3	                                     ret	       454	sd.c	FUNCTION_17
0x400040d	    0x48c7c1eaffff	             mov rcx, 0xffffffffffffffea	       449	sd.c	FUNCTION_17	IF_2
0x4000414	            0xebef	                           jmp 0x4000405	       449	sd.c	FUNCTION_17	IF_2
sd_sync_cache	ELSE,0:SWITCH,1:WHILE,0:FOR,1:DO,0:CALL,7:functions,0:IF,6	106
0x4002180	            0x4157	                                push r15	      1607	sd.c	FUNCTION_46
0x4002182	            0x4156	                                push r14	      1607	sd.c	FUNCTION_46
0x4002184	            0x4155	                                push r13	      1607	sd.c	FUNCTION_46
0x4002186	            0x4154	                                push r12	      1607	sd.c	FUNCTION_46
0x4002188	              0x55	                                push rbp	      1607	sd.c	FUNCTION_46
0x4002189	              0x53	                                push rbx	      1607	sd.c	FUNCTION_46
0x400218a	        0x4883ec20	                           sub rsp, 0x20	      1607	sd.c	FUNCTION_46
0x400218e	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      1609	sd.c	FUNCTION_46
0x4002192	    0x65488b042528	                mov rax, qword gs:[0x28]	      1607	sd.c	FUNCTION_46
0x400219b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1607	sd.c	FUNCTION_46
0x40021a0	            0x31c0	                            xor eax, eax	      1607	sd.c	FUNCTION_46
0x40021a2	        0x498b4508	                mov rax, qword [r13 + 8]	      1610	sd.c	FUNCTION_46
0x40021a6	    0x448bb0a00200	          mov r14d, dword [rax + 0x2a0] 	      1610	sd.c	FUNCTION_46
0x40021ad	    0x418b85900700	           mov eax, dword [r13 + 0x790] 	      1610	sd.c	FUNCTION_46
0x40021b4	          0x8d50fa	                      lea edx, [rax - 6]	      1614	sd.c	FUNCTION_46	IF_1	CALL_1
0x40021b7	          0x4501f6	                          add r14d, r14d	      1610	sd.c	FUNCTION_46
0x40021ba	          0x83fa01	                              cmp edx, 1	      1614	sd.c	FUNCTION_46	IF_1	CALL_1
0x40021bd	     0xf8623010000	                           jbe 0x40022e6	      1614	sd.c	FUNCTION_46	IF_1	CALL_1
0x40021c3	          0x83f804	                              cmp eax, 4	      1614	sd.c	FUNCTION_46	IF_1	CALL_1
0x40021c6	     0xf841a010000	                            je 0x40022e6	      1614	sd.c	FUNCTION_46	IF_1	CALL_1
0x40021cc	      0x488d442406	                      lea rax, [rsp + 6]	      1619	sd.c	FUNCTION_46	IF_2
0x40021d1	          0x4989f4	                            mov r12, rsi	      1619	sd.c	FUNCTION_46	IF_2
0x40021d4	          0x4885f6	                           test rsi, rsi	      1619	sd.c	FUNCTION_46	IF_2
0x40021d7	          0x4989ff	                            mov r15, rdi	      1619	sd.c	FUNCTION_46	IF_2
0x40021da	      0xbd03000000	                              mov ebp, 3	      1619	sd.c	FUNCTION_46	IF_2
0x40021df	        0x4c0f44e0	                          cmove r12, rax	      1619	sd.c	FUNCTION_46	IF_2
0x40021e3	            0x31c0	                            xor eax, eax	      1622	sd.c	FUNCTION_46	FOR_1
0x40021e5	    0x48c744240e00	                mov qword [rsp + 0xe], 0	      1622	sd.c	FUNCTION_46	FOR_1
0x40021ee	      0xc644240e35	              mov byte [rsp + 0xe], 0x35	      1624	sd.c	FUNCTION_46	FOR_1
0x40021f3	      0x6689442416	               mov word [rsp + 0x16], ax	      1622	sd.c	FUNCTION_46	FOR_1
0x40021f8	            0x6a00	                                  push 0	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x40021fa	          0x4531c9	                            xor r9d, r9d	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x40021fd	      0x6800800000	                             push 0x8000	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x4002202	            0x6a00	                                  push 0	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x4002204	          0x4531c0	                            xor r8d, r8d	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x4002207	            0x6a05	                                  push 5	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x4002209	            0x4156	                                push r14	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x400220b	            0x31c9	                            xor ecx, ecx	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x400220d	            0x4154	                                push r12	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x400220f	      0xba03000000	                              mov edx, 3	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x4002214	          0x4c89ef	                            mov rdi, r13	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x4002217	      0x488d74243e	                   lea rsi, [rsp + 0x3e]	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x400221c	      0xe800000000	                          call 0x4002221	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x4002221	        0x4883c430	                           add rsp, 0x30	      1631	sd.c	FUNCTION_46	FOR_1	IF_3
0x4002225	            0x85c0	                           test eax, eax	      1631	sd.c	FUNCTION_46	FOR_1	IF_3
0x4002227	            0x89c3	                            mov ebx, eax	      1629	sd.c	FUNCTION_46	FOR_1	CALL_2
0x4002229	     0xf84b3000000	                            je 0x40022e2	      1631	sd.c	FUNCTION_46	FOR_1	IF_3
0x400222f	          0x83ed01	                              sub ebp, 1	      1621	sd.c	FUNCTION_46	FOR_1
0x4002232	            0x75af	                           jne 0x40021e3	      1621	sd.c	FUNCTION_46	FOR_1
0x4002234	    0x498db7e00200	                  lea rsi, [r15 + 0x2e0]	      1621	sd.c	FUNCTION_46	FOR_1
0x400223b	        0x498d7f08	                      lea rdi, [r15 + 8]	      1621	sd.c	FUNCTION_46	FOR_1
0x400223f	            0x89c1	                            mov ecx, eax	      1636	sd.c	FUNCTION_46	IF_4	CALL_3
0x4002241	    0x48c7c2000000	                              mov rdx, 0	      1636	sd.c	FUNCTION_46	IF_4	CALL_3
0x4002248	      0xe823feffff	        call sym.sd_print_result.isra.43	      1636	sd.c	FUNCTION_46	IF_4	CALL_3
0x400224d	    0xf7c300000008	                  test ebx, section_end.	      1638	sd.c	FUNCTION_46	IF_4	IF_5	CALL_4
0x4002253	            0x7565	                           jne 0x40022ba	      1638	sd.c	FUNCTION_46	IF_4	IF_5	CALL_4
0x4002255	      0x410fb60424	                   movzx eax, byte [r12]	      1642	sd.c	FUNCTION_46	IF_4	IF_6	CALL_6
0x400225a	          0x83e070	                           and eax, 0x70	      1642	sd.c	FUNCTION_46	IF_4	IF_6	CALL_6
0x400225d	            0x3c70	                            cmp al, 0x70	      1642	sd.c	FUNCTION_46	IF_4	IF_6	CALL_6
0x400225f	            0x750e	                           jne 0x400226f	      1642	sd.c	FUNCTION_46	IF_4	IF_6	CALL_6
0x4002261	    0x410fb6442402	               movzx eax, byte [r12 + 2]	      1643	sd.c	FUNCTION_46	IF_4	IF_6
0x4002267	            0x3c3a	                            cmp al, 0x3a	      1642	sd.c	FUNCTION_46	IF_4	IF_6	CALL_6
0x4002269	            0x7477	                            je 0x40022e2	      1642	sd.c	FUNCTION_46	IF_4	IF_6	CALL_6
0x400226b	            0x3c20	                            cmp al, 0x20	      1642	sd.c	FUNCTION_46	IF_4	IF_6	CALL_6
0x400226d	            0x7473	                            je 0x40022e2	      1642	sd.c	FUNCTION_46	IF_4	IF_6	CALL_6
0x400226f	          0xc1fb10	                           sar ebx, 0x10	      1648	sd.c	FUNCTION_46	IF_4	SWITCH_1	CALL_7
0x4002272	           0xfb6cb	                           movzx ecx, bl	      1648	sd.c	FUNCTION_46	IF_4	SWITCH_1	CALL_7
0x4002275	          0x83f90d	                            cmp ecx, 0xd	      1648	sd.c	FUNCTION_46	IF_4	SWITCH_1	CALL_7
0x4002278	            0x7f73	                            jg 0x40022ed	      1648	sd.c	FUNCTION_46	IF_4	SWITCH_1	CALL_7
0x400227a	      0xba01000000	                              mov edx, 1	      1648	sd.c	FUNCTION_46	IF_4	SWITCH_1	CALL_7
0x400227f	            0x31c0	                            xor eax, eax	      1646	sd.c	FUNCTION_46	IF_4	IF_6
0x4002281	          0x48d3e2	                             shl rdx, cl	      1646	sd.c	FUNCTION_46	IF_4	IF_6
0x4002284	          0xf6c212	                           test dl, 0x12	      1646	sd.c	FUNCTION_46	IF_4	IF_6
0x4002287	            0x7512	                           jne 0x400229b	      1646	sd.c	FUNCTION_46	IF_4	IF_6
0x4002289	    0x81e204380000	                         and edx, 0x3804	      1646	sd.c	FUNCTION_46	IF_4	IF_6
0x400228f	        0x4883fa01	                              cmp rdx, 1	      1658	sd.c	FUNCTION_46	IF_4	SWITCH_1
0x4002293	            0x19c0	                            sbb eax, eax	      1658	sd.c	FUNCTION_46	IF_4	SWITCH_1
0x4002295	          0x83e00b	                            and eax, 0xb	      1658	sd.c	FUNCTION_46	IF_4	SWITCH_1
0x4002298	          0x83e810	                           sub eax, 0x10	      1658	sd.c	FUNCTION_46	IF_4	SWITCH_1
0x400229b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1664	sd.c	FUNCTION_46
0x40022a0	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1664	sd.c	FUNCTION_46
0x40022a9	            0x7549	                           jne 0x40022f4	      1664	sd.c	FUNCTION_46
0x40022ab	        0x4883c420	                           add rsp, 0x20	      1664	sd.c	FUNCTION_46
0x40022af	              0x5b	                                 pop rbx	      1664	sd.c	FUNCTION_46
0x40022b0	              0x5d	                                 pop rbp	      1664	sd.c	FUNCTION_46
0x40022b1	            0x415c	                                 pop r12	      1664	sd.c	FUNCTION_46
0x40022b3	            0x415d	                                 pop r13	      1664	sd.c	FUNCTION_46
0x40022b5	            0x415e	                                 pop r14	      1664	sd.c	FUNCTION_46
0x40022b7	            0x415f	                                 pop r15	      1664	sd.c	FUNCTION_46
0x40022b9	              0xc3	                                     ret	      1664	sd.c	FUNCTION_46
0x40022ba	    0x498b97e00200	           mov rdx, qword [r15 + 0x2e0] 	      1664	sd.c	FUNCTION_46
0x40022c1	        0x498b7f08	                mov rdi, qword [r15 + 8]	      1664	sd.c	FUNCTION_46
0x40022c5	      0xbe00000000	                              mov esi, 0	      3695	sd.c	FUNCTION_93	CALL_1
0x40022ca	        0x488d420c	                    lea rax, [rdx + 0xc]	      3695	sd.c	FUNCTION_93	CALL_1
0x40022ce	          0x4885d2	                           test rdx, rdx	      3695	sd.c	FUNCTION_93	CALL_1
0x40022d1	          0x4c89e2	                            mov rdx, r12	      3695	sd.c	FUNCTION_93	CALL_1
0x40022d4	        0x480f45f0	                         cmovne rsi, rax	      3695	sd.c	FUNCTION_93	CALL_1
0x40022d8	      0xe800000000	                          call 0x40022dd	      3695	sd.c	FUNCTION_93	CALL_1
0x40022dd	      0xe973ffffff	                           jmp 0x4002255	      3695	sd.c	FUNCTION_93	CALL_1
0x40022e2	            0x31c0	                            xor eax, eax	      1646	sd.c	FUNCTION_46	IF_4	IF_6
0x40022e4	            0xebb5	                           jmp 0x400229b	      1646	sd.c	FUNCTION_46	IF_4	IF_6
0x40022e6	      0xb8edffffff	                     mov eax, 0xffffffed	      1615	sd.c	FUNCTION_46	IF_1
0x40022eb	            0xebae	                           jmp 0x400229b	      1615	sd.c	FUNCTION_46	IF_1
0x40022ed	      0xb8fbffffff	                     mov eax, 0xfffffffb	      1660	sd.c	FUNCTION_46	IF_4	SWITCH_1
0x40022f2	            0xeba7	                           jmp 0x400229b	      1660	sd.c	FUNCTION_46	IF_4	SWITCH_1
0x40022f4	      0xe800000000	                          call 0x40022f9	      1664	sd.c	FUNCTION_46
provisioning_mode_store	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,5:functions,0:IF,4	53
0x4000550	            0x4156	                                push r14	       394	sd.c	FUNCTION_15
0x4000552	            0x4155	                                push r13	       394	sd.c	FUNCTION_15
0x4000554	          0x4989d6	                            mov r14, rdx	       394	sd.c	FUNCTION_15
0x4000557	            0x4154	                                push r12	       394	sd.c	FUNCTION_15
0x4000559	              0x55	                                push rbp	       394	sd.c	FUNCTION_15
0x400055a	        0x4c8d67f0	                   lea r12, [rdi - 0x10]	       395	sd.c	FUNCTION_15
0x400055e	              0x53	                                push rbx	       394	sd.c	FUNCTION_15
0x400055f	          0x4889fb	                            mov rbx, rdi	       394	sd.c	FUNCTION_15
0x4000562	        0x4c8b6ff8	                mov r13, qword [rdi - 8]	       396	sd.c	FUNCTION_15
0x4000566	      0xbf15000000	                           mov edi, 0x15	       399	sd.c	FUNCTION_15	IF_1	CALL_1
0x400056b	          0x4889cd	                            mov rbp, rcx	       394	sd.c	FUNCTION_15
0x400056e	      0xe800000000	                          call 0x4000573	       399	sd.c	FUNCTION_15	IF_1	CALL_1
0x4000573	            0x84c0	                             test al, al	       399	sd.c	FUNCTION_15	IF_1	CALL_1
0x4000575	            0x7475	                            je 0x40005ec	       399	sd.c	FUNCTION_15	IF_1	CALL_1
0x4000577	     0xfb6831f0300	          movzx eax, byte [rbx + 0x31f] 	       277	sd.h	FUNCTION_310
0x400057e	          0x83e003	                              and eax, 3	       277	sd.h	FUNCTION_310
0x4000581	            0x3c01	                               cmp al, 1	       277	sd.h	FUNCTION_310
0x4000583	            0x7445	                            je 0x40005ca	       277	sd.h	FUNCTION_310
0x4000585	        0x488b43f8	                mov rax, qword [rbx - 8]	       277	sd.h	FUNCTION_310
0x4000589	    0x80b8a0000000	            cmp byte [rax + 0xa0], 0x14 	       277	sd.h	FUNCTION_310
0x4000590	            0x7438	                            je 0x40005ca	       277	sd.h	FUNCTION_310
0x4000592	    0x4180bda00000	                cmp byte [r13 + 0xa0], 0	       407	sd.c	FUNCTION_15	IF_3
0x400059a	            0x7547	                           jne 0x40005e3	       407	sd.c	FUNCTION_15	IF_3
0x400059c	          0x4c89f2	                            mov rdx, r14	       410	sd.c	FUNCTION_15	CALL_4
0x400059f	      0xbe06000000	                              mov esi, 6	       410	sd.c	FUNCTION_15	CALL_4
0x40005a4	    0x48c7c7000000	                              mov rdi, 0	       410	sd.c	FUNCTION_15	CALL_4
0x40005ab	      0xe800000000	                          call 0x40005b0	       410	sd.c	FUNCTION_15	CALL_4
0x40005b0	            0x85c0	                           test eax, eax	       411	sd.c	FUNCTION_15	IF_4
0x40005b2	            0x782f	                            js 0x40005e3	       411	sd.c	FUNCTION_15	IF_4
0x40005b4	            0x89c6	                            mov esi, eax	       414	sd.c	FUNCTION_15	CALL_5
0x40005b6	          0x4c89e7	                            mov rdi, r12	       414	sd.c	FUNCTION_15	CALL_5
0x40005b9	      0xe862feffff	              call sym.sd_config_discard	       414	sd.c	FUNCTION_15	CALL_5
0x40005be	          0x4889e8	                            mov rax, rbp	       416	sd.c	FUNCTION_15
0x40005c1	              0x5b	                                 pop rbx	       417	sd.c	FUNCTION_15
0x40005c2	              0x5d	                                 pop rbp	       417	sd.c	FUNCTION_15
0x40005c3	            0x415c	                                 pop r12	       417	sd.c	FUNCTION_15
0x40005c5	            0x415d	                                 pop r13	       417	sd.c	FUNCTION_15
0x40005c7	            0x415e	                                 pop r14	       417	sd.c	FUNCTION_15
0x40005c9	              0xc3	                                     ret	       417	sd.c	FUNCTION_15
0x40005ca	          0x4c89e7	                            mov rdi, r12	       403	sd.c	FUNCTION_15	IF_2	CALL_3
0x40005cd	      0xbe05000000	                              mov esi, 5	       403	sd.c	FUNCTION_15	IF_2	CALL_3
0x40005d2	      0xe849feffff	              call sym.sd_config_discard	       403	sd.c	FUNCTION_15	IF_2	CALL_3
0x40005d7	          0x4889e8	                            mov rax, rbp	       404	sd.c	FUNCTION_15	IF_2
0x40005da	              0x5b	                                 pop rbx	       417	sd.c	FUNCTION_15
0x40005db	              0x5d	                                 pop rbp	       417	sd.c	FUNCTION_15
0x40005dc	            0x415c	                                 pop r12	       417	sd.c	FUNCTION_15
0x40005de	            0x415d	                                 pop r13	       417	sd.c	FUNCTION_15
0x40005e0	            0x415e	                                 pop r14	       417	sd.c	FUNCTION_15
0x40005e2	              0xc3	                                     ret	       417	sd.c	FUNCTION_15
0x40005e3	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       412	sd.c	FUNCTION_15	IF_4
0x40005ea	            0xebd5	                           jmp 0x40005c1	       412	sd.c	FUNCTION_15	IF_4
0x40005ec	    0x48c7c0f3ffff	             mov rax, 0xfffffffffffffff3	       400	sd.c	FUNCTION_15	IF_1
0x40005f3	            0xebcc	                           jmp 0x40005c1	       400	sd.c	FUNCTION_15	IF_1
manage_start_stop_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	10
0x40002f0	          0x4889d0	                            mov rax, rdx	       221	sd.c	FUNCTION_3
0x40002f3	        0x488b57f8	                mov rdx, qword [rdi - 8]	       225	sd.c	FUNCTION_3	CALL_1
0x40002f7	    0x48c7c6000000	                              mov rsi, 0	       225	sd.c	FUNCTION_3	CALL_1
0x40002fe	          0x4889c7	                            mov rdi, rax	       225	sd.c	FUNCTION_3	CALL_1
0x4000301	     0xfb6921b0100	          movzx edx, byte [rdx + 0x11b] 	       225	sd.c	FUNCTION_3	CALL_1
0x4000308	          0xc0ea03	                               shr dl, 3	       225	sd.c	FUNCTION_3	CALL_1
0x400030b	          0x83e201	                              and edx, 1	       225	sd.c	FUNCTION_3	CALL_1
0x400030e	      0xe800000000	                          call 0x4000313	       225	sd.c	FUNCTION_3	CALL_1
0x4000313	            0x4898	                                    cdqe	       225	sd.c	FUNCTION_3	CALL_1
0x4000315	              0xc3	                                     ret	       226	sd.c	FUNCTION_3
sd_uninit_command	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,3:functions,0:IF,2	25
0x4000c00	              0x55	                                push rbp	      1285	sd.c	FUNCTION_38
0x4000c01	              0x53	                                push rbx	      1285	sd.c	FUNCTION_38
0x4000c02	          0x4889fb	                            mov rbx, rdi	      1285	sd.c	FUNCTION_38
0x4000c05	    0x488baf280100	           mov rbp, qword [rdi + 0x128] 	      1286	sd.c	FUNCTION_38
0x4000c0c	        0xf6451a04	               test byte [rbp + 0x1a], 4	      1289	sd.c	FUNCTION_38	IF_1
0x4000c10	            0x7532	                           jne 0x4000c44	      1289	sd.c	FUNCTION_38	IF_1
0x4000c12	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      1292	sd.c	FUNCTION_38	IF_2	CALL_2
0x4000c19	    0x483bbd380100	           cmp rdi, qword [rbp + 0x138] 	      1292	sd.c	FUNCTION_38	IF_2	CALL_2
0x4000c20	            0x743d	                            je 0x4000c5f	      1292	sd.c	FUNCTION_38	IF_2	CALL_2
0x4000c22	            0x31c0	                            xor eax, eax	      1295	sd.c	FUNCTION_38	IF_2
0x4000c24	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	      1294	sd.c	FUNCTION_38	IF_2
0x4000c2f	    0x488b35000000	            mov rsi, qword [0x04000c36] 	      1296	sd.c	FUNCTION_38	IF_2	CALL_3
0x4000c36	    0x668983ec0000	               mov word [rbx + 0xec], ax	      1295	sd.c	FUNCTION_38	IF_2
0x4000c3d	              0x5b	                                 pop rbx	      1298	sd.c	FUNCTION_38
0x4000c3e	              0x5d	                                 pop rbp	      1298	sd.c	FUNCTION_38
0x4000c3f	      0xe900000000	                           jmp 0x4000c44	      1296	sd.c	FUNCTION_38	IF_2	CALL_3
0x4000c44	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      1290	sd.c	FUNCTION_38	CALL_1
0x4000c48	            0x31f6	                            xor esi, esi	      1290	sd.c	FUNCTION_38	CALL_1
0x4000c4a	      0xe800000000	                          call 0x4000c4f	      1290	sd.c	FUNCTION_38	CALL_1
0x4000c4f	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      1292	sd.c	FUNCTION_38	IF_2	CALL_2
0x4000c56	    0x483bbd380100	           cmp rdi, qword [rbp + 0x138] 	      1292	sd.c	FUNCTION_38	IF_2	CALL_2
0x4000c5d	            0x75c3	                           jne 0x4000c22	      1292	sd.c	FUNCTION_38	IF_2	CALL_2
0x4000c5f	              0x5b	                                 pop rbx	      1298	sd.c	FUNCTION_38
0x4000c60	              0x5d	                                 pop rbp	      1298	sd.c	FUNCTION_38
0x4000c61	              0xc3	                                     ret	      1298	sd.c	FUNCTION_38
thin_provisioning_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	9
0x4000280	          0x4889d0	                            mov rax, rdx	       365	sd.c	FUNCTION_13
0x4000283	     0xfb6971d0300	          movzx edx, byte [rdi + 0x31d] 	       368	sd.c	FUNCTION_13	CALL_1
0x400028a	    0x48c7c6000000	                              mov rsi, 0	       368	sd.c	FUNCTION_13	CALL_1
0x4000291	          0x4889c7	                            mov rdi, rax	       368	sd.c	FUNCTION_13	CALL_1
0x4000294	          0xc0ea06	                               shr dl, 6	       368	sd.c	FUNCTION_13	CALL_1
0x4000297	          0x83e201	                              and edx, 1	       368	sd.c	FUNCTION_13	CALL_1
0x400029a	      0xe800000000	                          call 0x400029f	       368	sd.c	FUNCTION_13	CALL_1
0x400029f	            0x4898	                                    cdqe	       368	sd.c	FUNCTION_13	CALL_1
0x40002a1	              0xc3	                                     ret	       369	sd.c	FUNCTION_13
sd_eh_action	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,8:functions,0:IF,3	95
0x40009a0	            0x4154	                                push r12	      1840	sd.c	FUNCTION_57
0x40009a2	              0x55	                                push rbp	      1840	sd.c	FUNCTION_57
0x40009a3	              0x53	                                push rbx	      1840	sd.c	FUNCTION_57
0x40009a4	        0x488b6f38	            mov rbp, qword [rdi + 0x38] 	      1842	sd.c	FUNCTION_57
0x40009a8	    0x8b8590070000	           mov eax, dword [rbp + 0x790] 	      1842	sd.c	FUNCTION_57
0x40009ae	          0x8d50fa	                      lea edx, [rax - 6]	      1844	sd.c	FUNCTION_57	IF_1	CALL_2
0x40009b1	          0x83fa01	                              cmp edx, 1	      1844	sd.c	FUNCTION_57	IF_1	CALL_2
0x40009b4	     0xf861a010000	                           jbe 0x4000ad4	      1844	sd.c	FUNCTION_57	IF_1	CALL_2
0x40009ba	          0x83f804	                              cmp eax, 4	      1844	sd.c	FUNCTION_57	IF_1	CALL_2
0x40009bd	     0xf8411010000	                            je 0x4000ad4	      1844	sd.c	FUNCTION_57	IF_1	CALL_2
0x40009c3	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009ca	           0xfb602	                   movzx eax, byte [rdx]	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009cd	            0x3c42	                            cmp al, 0x42	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009cf	     0xf86d5000000	                           jbe 0x4000aaa	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009d5	            0x3c8f	                            cmp al, 0x8f	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009d7	            0x7436	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009d9	     0xf87fe000000	                            ja 0x4000add	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009df	            0x3c88	                            cmp al, 0x88	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009e1	            0x742c	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009e3	            0x3c8a	                            cmp al, 0x8a	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009e5	            0x7428	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009e7	            0x3c7f	                            cmp al, 0x7f	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009e9	     0xf85e5000000	                           jne 0x4000ad4	       142	sd.h	FUNCTION_300	SWITCH_1
0x40009ef	         0xfb64a09	               movzx ecx, byte [rdx + 9]	       160	sd.h	FUNCTION_300	SWITCH_1	SWITCH_2
0x40009f3	            0x89f3	                            mov ebx, esi	       160	sd.h	FUNCTION_300	SWITCH_1	SWITCH_2
0x40009f5	          0x80f90d	                             cmp cl, 0xd	       160	sd.h	FUNCTION_300	SWITCH_1	SWITCH_2
0x40009f8	     0xf87d8000000	                            ja 0x4000ad6	       160	sd.h	FUNCTION_300	SWITCH_1	SWITCH_2
0x40009fe	      0xb801000000	                              mov eax, 1	       160	sd.h	FUNCTION_300	SWITCH_1	SWITCH_2
0x4000a03	          0x48d3e0	                             shl rax, cl	       160	sd.h	FUNCTION_300	SWITCH_1	SWITCH_2
0x4000a06	          0xf6c42e	                           test ah, 0x2e	       160	sd.h	FUNCTION_300	SWITCH_1	SWITCH_2
0x4000a09	     0xf84c7000000	                            je 0x4000ad6	       160	sd.h	FUNCTION_300	SWITCH_1	SWITCH_2
0x4000a0f	    0x80bf8a010000	               cmp byte [rdi + 0x18a], 3	      1846	sd.c	FUNCTION_57	IF_1	CALL_4
0x4000a16	     0xf85b8000000	                           jne 0x4000ad4	      1846	sd.c	FUNCTION_57	IF_1	CALL_4
0x4000a1c	    0x81fe02200000	                         cmp esi, 0x2002	      1846	sd.c	FUNCTION_57	IF_1	CALL_4
0x4000a22	     0xf85ac000000	                           jne 0x4000ad4	      1846	sd.c	FUNCTION_57	IF_1	CALL_4
0x4000a28	    0x488b87280100	           mov rax, qword [rdi + 0x128] 	      1841	sd.c	FUNCTION_57	CALL_1
0x4000a2f	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1841	sd.c	FUNCTION_57	CALL_1
0x4000a36	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	      1841	sd.c	FUNCTION_57	CALL_1
0x4000a3d	     0xfb6902f0300	          movzx edx, byte [rax + 0x32f] 	      1857	sd.c	FUNCTION_57	IF_2
0x4000a44	    0x8b8824030000	           mov ecx, dword [rax + 0x324] 	      1858	sd.c	FUNCTION_57	IF_2
0x4000a4a	          0xf6c210	                           test dl, 0x10	      1857	sd.c	FUNCTION_57	IF_2
0x4000a4d	            0x7512	                           jne 0x4000a61	      1857	sd.c	FUNCTION_57	IF_2
0x4000a4f	          0x83c101	                              add ecx, 1	      1858	sd.c	FUNCTION_57	IF_2
0x4000a52	          0x83ca10	                            or edx, 0x10	      1859	sd.c	FUNCTION_57	IF_2
0x4000a55	    0x898824030000	            mov dword [rax + 0x324], ecx	      1858	sd.c	FUNCTION_57	IF_2
0x4000a5b	    0x88902f030000	              mov byte [rax + 0x32f], dl	      1859	sd.c	FUNCTION_57	IF_2
0x4000a61	    0x3b8820030000	           cmp ecx, dword [rax + 0x320] 	      1867	sd.c	FUNCTION_57	IF_3
0x4000a67	      0xbb02200000	                         mov ebx, 0x2002	      1867	sd.c	FUNCTION_57	IF_3
0x4000a6c	            0x7268	                            jb 0x4000ad6	      1867	sd.c	FUNCTION_57	IF_3
0x4000a6e	    0x4c8da5700700	                  lea r12, [rbp + 0x770]	      1870	sd.c	FUNCTION_57	IF_3	CALL_6
0x4000a75	          0x4889fe	                            mov rsi, rdi	      1870	sd.c	FUNCTION_57	IF_3	CALL_6
0x4000a78	    0x48c7c2000000	                              mov rdx, 0	      1868	sd.c	FUNCTION_57	IF_3	CALL_5
0x4000a7f	    0x48c7c7000000	                              mov rdi, 0	      1868	sd.c	FUNCTION_57	IF_3	CALL_5
0x4000a86	      0xe800000000	                          call 0x4000a8b	      1868	sd.c	FUNCTION_57	IF_3	CALL_5
0x4000a8b	          0x4c89e7	                            mov rdi, r12	      1870	sd.c	FUNCTION_57	IF_3	CALL_6
0x4000a8e	      0xe800000000	                          call 0x4000a93	      1870	sd.c	FUNCTION_57	IF_3	CALL_6
0x4000a93	          0x4889ef	                            mov rdi, rbp	      1871	sd.c	FUNCTION_57	IF_3	CALL_7
0x4000a96	      0xbe06000000	                              mov esi, 6	      1871	sd.c	FUNCTION_57	IF_3	CALL_7
0x4000a9b	      0xe800000000	                          call 0x4000aa0	      1871	sd.c	FUNCTION_57	IF_3	CALL_7
0x4000aa0	          0x4c89e7	                            mov rdi, r12	      1872	sd.c	FUNCTION_57	IF_3	CALL_8
0x4000aa3	      0xe800000000	                          call 0x4000aa8	      1872	sd.c	FUNCTION_57	IF_3	CALL_8
0x4000aa8	            0xeb2c	                           jmp 0x4000ad6	      1874	sd.c	FUNCTION_57	IF_3
0x4000aaa	            0x3c41	                            cmp al, 0x41	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000aac	     0xf835dffffff	                           jae 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ab2	            0x3c28	                            cmp al, 0x28	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ab4	     0xf8455ffffff	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000aba	            0x763c	                           jbe 0x4000af8	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000abc	            0x3c2f	                            cmp al, 0x2f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000abe	     0xf844bffffff	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ac4	            0x3c35	                            cmp al, 0x35	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ac6	     0xf8443ffffff	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000acc	            0x3c2a	                            cmp al, 0x2a	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ace	     0xf843bffffff	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ad4	            0x89f3	                            mov ebx, esi	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ad6	            0x89d8	                            mov eax, ebx	      1878	sd.c	FUNCTION_57
0x4000ad8	              0x5b	                                 pop rbx	      1878	sd.c	FUNCTION_57
0x4000ad9	              0x5d	                                 pop rbp	      1878	sd.c	FUNCTION_57
0x4000ada	            0x415c	                                 pop r12	      1878	sd.c	FUNCTION_57
0x4000adc	              0xc3	                                     ret	      1878	sd.c	FUNCTION_57
0x4000add	            0x3ca8	                            cmp al, 0xa8	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000adf	     0xf842affffff	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ae5	            0x7622	                           jbe 0x4000b09	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ae7	            0x3caa	                            cmp al, 0xaa	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000ae9	     0xf8420ffffff	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000aef	            0x3caf	                            cmp al, 0xaf	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000af1	            0x75e1	                           jne 0x4000ad4	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000af3	      0xe917ffffff	                           jmp 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000af8	            0x3c08	                               cmp al, 8	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000afa	     0xf840fffffff	                            je 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000b00	            0x3c0a	                             cmp al, 0xa	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000b02	            0x75d0	                           jne 0x4000ad4	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000b04	      0xe906ffffff	                           jmp 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000b09	            0x3c93	                            cmp al, 0x93	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000b0b	            0x75c7	                           jne 0x4000ad4	       142	sd.h	FUNCTION_300	SWITCH_1
0x4000b0d	      0xe9fdfeffff	                           jmp 0x4000a0f	       142	sd.h	FUNCTION_300	SWITCH_1
FUA_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	9
0x4000350	          0x4889d0	                            mov rax, rdx	       291	sd.c	FUNCTION_8
0x4000353	     0xfb6971d0300	          movzx edx, byte [rdi + 0x31d] 	       294	sd.c	FUNCTION_8	CALL_1
0x400035a	    0x48c7c6000000	                              mov rsi, 0	       294	sd.c	FUNCTION_8	CALL_1
0x4000361	          0x4889c7	                            mov rdi, rax	       294	sd.c	FUNCTION_8	CALL_1
0x4000364	          0xc0ea04	                               shr dl, 4	       294	sd.c	FUNCTION_8	CALL_1
0x4000367	          0x83e201	                              and edx, 1	       294	sd.c	FUNCTION_8	CALL_1
0x400036a	      0xe800000000	                          call 0x400036f	       294	sd.c	FUNCTION_8	CALL_1
0x400036f	            0x4898	                                    cdqe	       294	sd.c	FUNCTION_8	CALL_1
0x4000371	              0xc3	                                     ret	       295	sd.c	FUNCTION_8
cache_type_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	15
0x4000380	     0xfb6871d0300	          movzx eax, byte [rdi + 0x31d] 	       283	sd.c	FUNCTION_7
0x4000387	          0x4889d1	                            mov rcx, rdx	       281	sd.c	FUNCTION_7
0x400038a	    0x48c7c6000000	                              mov rsi, 0	       285	sd.c	FUNCTION_7	CALL_1
0x4000391	          0x4889cf	                            mov rdi, rcx	       285	sd.c	FUNCTION_7	CALL_1
0x4000394	            0x89c2	                            mov edx, eax	       283	sd.c	FUNCTION_7
0x4000396	          0xc0e803	                               shr al, 3	       283	sd.c	FUNCTION_7
0x4000399	          0xc0ea02	                               shr dl, 2	       283	sd.c	FUNCTION_7
0x400039c	          0x83e001	                              and eax, 1	       285	sd.c	FUNCTION_7	CALL_1
0x400039f	          0x83e201	                              and edx, 1	       285	sd.c	FUNCTION_7	CALL_1
0x40003a2	          0x8d0450	                  lea eax, [rax + rdx*2]	       285	sd.c	FUNCTION_7	CALL_1
0x40003a5	            0x4898	                                    cdqe	       285	sd.c	FUNCTION_7	CALL_1
0x40003a7	    0x488b14c50000	                  mov rdx, qword [rax*8]	       285	sd.c	FUNCTION_7	CALL_1
0x40003af	      0xe800000000	                          call 0x40003b4	       285	sd.c	FUNCTION_7	CALL_1
0x40003b4	            0x4898	                                    cdqe	       285	sd.c	FUNCTION_7	CALL_1
0x40003b6	              0xc3	                                     ret	       286	sd.c	FUNCTION_7
sd_config_discard	ELSE,2:SWITCH,1:WHILE,0:FOR,0:DO,0:CALL,9:functions,0:IF,2	74
0x4000420	              0x53	                                push rbx	       700	sd.c	FUNCTION_28
0x4000421	    0x488b87e00200	           mov rax, qword [rdi + 0x2e0] 	       701	sd.c	FUNCTION_28
0x4000428	    0x8b9714030000	           mov edx, dword [rdi + 0x314] 	       705	sd.c	FUNCTION_28
0x400042e	    0x488b98c00300	           mov rbx, qword [rax + 0x3c0] 	       701	sd.c	FUNCTION_28
0x4000435	        0x488b4708	                mov rax, qword [rdi + 8]	       702	sd.c	FUNCTION_28
0x4000439	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       702	sd.c	FUNCTION_28
0x400043f	           0xfafd0	                           imul edx, eax	       705	sd.c	FUNCTION_28
0x4000442	    0x8993e8050000	            mov dword [rbx + 0x5e8], edx	       705	sd.c	FUNCTION_28
0x4000448	    0x8b9710030000	           mov edx, dword [rdi + 0x310] 	       707	sd.c	FUNCTION_28
0x400044e	    0x8b8f1c030000	           mov ecx, dword [rdi + 0x31c] 	       707	sd.c	FUNCTION_28
0x4000454	           0xfafd0	                           imul edx, eax	       707	sd.c	FUNCTION_28
0x4000457	            0x39ca	                            cmp edx, ecx	       707	sd.c	FUNCTION_28
0x4000459	           0xf42d1	                          cmovb edx, ecx	       707	sd.c	FUNCTION_28
0x400045c	          0x83fe05	                              cmp esi, 5	       712	sd.c	FUNCTION_28	SWITCH_1
0x400045f	    0x8993e4050000	            mov dword [rbx + 0x5e4], edx	       707	sd.c	FUNCTION_28
0x4000465	    0x4088b72b0300	             mov byte [rdi + 0x32b], sil	       710	sd.c	FUNCTION_28
0x400046c	     0xf87ce000000	                            ja 0x4000540	       712	sd.c	FUNCTION_28	SWITCH_1
0x4000472	            0x89f6	                            mov esi, esi	       712	sd.c	FUNCTION_28	SWITCH_1
0x4000474	    0x488b14f50000	                  mov rdx, qword [rsi*8]	       712	sd.c	FUNCTION_28	SWITCH_1
0x400047c	      0xe900000000	                           jmp 0x4000481	       712	sd.c	FUNCTION_28	SWITCH_1
0x4000481	        0x488b4f08	                mov rcx, qword [rdi + 8]	       735	sd.c	FUNCTION_28	SWITCH_1	IF_2
0x4000485	    0x8b970c030000	           mov edx, dword [rdi + 0x30c] 	       736	sd.c	FUNCTION_28	SWITCH_1	IF_2
0x400048b	    0xf6811d010000	          test byte [rcx + 0x11d], 0x10 	       736	sd.c	FUNCTION_28	SWITCH_1	IF_2
0x4000492	     0xf4497080300	          cmove edx, dword [rdi + 0x308]	       736	sd.c	FUNCTION_28	SWITCH_1	IF_2
0x4000499	            0x85d2	                           test edx, edx	       740	sd.c	FUNCTION_28	SWITCH_1	CALL_6
0x400049b	            0x7434	                            je 0x40004d1	       740	sd.c	FUNCTION_28	SWITCH_1	CALL_6
0x400049d	    0x81faffff0000	                         cmp edx, 0xffff	       740	sd.c	FUNCTION_28	SWITCH_1	CALL_6
0x40004a3	      0xbeffff0000	                         mov esi, 0xffff	       740	sd.c	FUNCTION_28	SWITCH_1	CALL_6
0x40004a8	           0xf46f2	                         cmovbe esi, edx	       740	sd.c	FUNCTION_28	SWITCH_1	CALL_6
0x40004ab	          0xc1e809	                              shr eax, 9	       740	sd.c	FUNCTION_28	SWITCH_1	CALL_6
0x40004ae	           0xfaff0	                           imul esi, eax	       740	sd.c	FUNCTION_28	SWITCH_1	CALL_6
0x40004b1	          0x4889df	                            mov rdi, rbx	       749	sd.c	FUNCTION_28	CALL_8
0x40004b4	      0xe800000000	                          call 0x40004b9	       749	sd.c	FUNCTION_28	CALL_8
0x40004b9	          0x4889de	                            mov rsi, rbx	       750	sd.c	FUNCTION_28	CALL_9
0x40004bc	      0xbf0b000000	                            mov edi, 0xb	       750	sd.c	FUNCTION_28	CALL_9
0x40004c1	              0x5b	                                 pop rbx	       751	sd.c	FUNCTION_28
0x40004c2	      0xe900000000	                           jmp 0x40004c7	       750	sd.c	FUNCTION_28	CALL_9
0x40004c7	    0x8b9708030000	           mov edx, dword [rdi + 0x308] 	       744	sd.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004cd	            0x85d2	                           test edx, edx	       744	sd.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004cf	            0x75cc	                           jne 0x400049d	       744	sd.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004d1	          0xc1e809	                              shr eax, 9	       744	sd.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004d4	            0x89c6	                            mov esi, eax	       744	sd.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004d6	          0xc1e610	                           shl esi, 0x10	       744	sd.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004d9	            0x29c6	                            sub esi, eax	       744	sd.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004db	            0xebd4	                           jmp 0x40004b1	       744	sd.c	FUNCTION_28	SWITCH_1	CALL_7
0x40004dd	    0x8b970c030000	           mov edx, dword [rdi + 0x30c] 	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004e3	            0x85d2	                           test edx, edx	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004e5	            0x744a	                            je 0x4000531	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004e7	    0x81faffff7f00	                       cmp edx, 0x7fffff	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004ed	      0xbeffff7f00	                       mov esi, 0x7fffff	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004f2	           0xf46f2	                         cmovbe esi, edx	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004f5	          0xc1e809	                              shr eax, 9	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004f8	           0xfaff0	                           imul esi, eax	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004fb	            0xebb4	                           jmp 0x40004b1	       721	sd.c	FUNCTION_28	SWITCH_1	CALL_4
0x40004fd	          0x4889df	                            mov rdi, rbx	       716	sd.c	FUNCTION_28	SWITCH_1	CALL_2
0x4000500	            0x31f6	                            xor esi, esi	       716	sd.c	FUNCTION_28	SWITCH_1	CALL_2
0x4000502	      0xe800000000	                          call 0x4000507	       716	sd.c	FUNCTION_28	SWITCH_1	CALL_2
0x4000507	          0x4889de	                            mov rsi, rbx	       717	sd.c	FUNCTION_28	SWITCH_1	CALL_3
0x400050a	      0xbf0b000000	                            mov edi, 0xb	       717	sd.c	FUNCTION_28	SWITCH_1	CALL_3
0x400050f	              0x5b	                                 pop rbx	       751	sd.c	FUNCTION_28
0x4000510	      0xe900000000	                           jmp 0x4000515	       717	sd.c	FUNCTION_28	SWITCH_1	CALL_3
0x4000515	        0x488b4f08	                mov rcx, qword [rdi + 8]	       726	sd.c	FUNCTION_28	SWITCH_1	IF_1
0x4000519	    0x8b970c030000	           mov edx, dword [rdi + 0x30c] 	       727	sd.c	FUNCTION_28	SWITCH_1	IF_1
0x400051f	    0xf6811d010000	          test byte [rcx + 0x11d], 0x10 	       727	sd.c	FUNCTION_28	SWITCH_1	IF_1
0x4000526	     0xf4497080300	          cmove edx, dword [rdi + 0x308]	       727	sd.c	FUNCTION_28	SWITCH_1	IF_1
0x400052d	            0x85d2	                           test edx, edx	       731	sd.c	FUNCTION_28	SWITCH_1	CALL_5
0x400052f	            0x75b6	                           jne 0x40004e7	       731	sd.c	FUNCTION_28	SWITCH_1	CALL_5
0x4000531	          0xc1e809	                              shr eax, 9	       731	sd.c	FUNCTION_28	SWITCH_1	CALL_5
0x4000534	            0x89c6	                            mov esi, eax	       731	sd.c	FUNCTION_28	SWITCH_1	CALL_5
0x4000536	          0xc1e617	                           shl esi, 0x17	       731	sd.c	FUNCTION_28	SWITCH_1	CALL_5
0x4000539	            0x29c6	                            sub esi, eax	       731	sd.c	FUNCTION_28	SWITCH_1	CALL_5
0x400053b	      0xe971ffffff	                           jmp 0x40004b1	       731	sd.c	FUNCTION_28	SWITCH_1	CALL_5
0x4000540	            0x31f6	                            xor esi, esi	       712	sd.c	FUNCTION_28	SWITCH_1
0x4000542	      0xe96affffff	                           jmp 0x40004b1	       712	sd.c	FUNCTION_28	SWITCH_1
max_write_same_blocks_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	7
0x4000200	          0x4889d0	                            mov rax, rdx	       486	sd.c	FUNCTION_20
0x4000203	    0x8b97f8020000	           mov edx, dword [rdi + 0x2f8] 	       489	sd.c	FUNCTION_20	CALL_1
0x4000209	    0x48c7c6000000	                              mov rsi, 0	       489	sd.c	FUNCTION_20	CALL_1
0x4000210	          0x4889c7	                            mov rdi, rax	       489	sd.c	FUNCTION_20	CALL_1
0x4000213	      0xe800000000	                          call 0x4000218	       489	sd.c	FUNCTION_20	CALL_1
0x4000218	            0x4898	                                    cdqe	       489	sd.c	FUNCTION_20	CALL_1
0x400021a	              0xc3	                                     ret	       490	sd.c	FUNCTION_20
sd_pr_command	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,8:functions,0:IF,1	63
0x4000ee0	              0x55	                                push rbp	      1721	sd.c	FUNCTION_50
0x4000ee1	              0x53	                                push rbx	      1721	sd.c	FUNCTION_50
0x4000ee2	          0x480fca	                               bswap rdx	        65	access_ok.h	FUNCTION_106	CALL_1
0x4000ee5	          0x480fc9	                               bswap rcx	        65	access_ok.h	FUNCTION_106	CALL_1
0x4000ee8	        0x4883ec40	                           sub rsp, 0x40	      1721	sd.c	FUNCTION_50
0x4000eec	    0x65488b042528	                mov rax, qword gs:[0x28]	      1721	sd.c	FUNCTION_50
0x4000ef5	      0x4889442438	             mov qword [rsp + 0x38], rax	      1721	sd.c	FUNCTION_50
0x4000efa	            0x31c0	                            xor eax, eax	      1721	sd.c	FUNCTION_50
0x4000efc	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1721	sd.c	FUNCTION_50
0x4000f03	      0x4889542420	             mov qword [rsp + 0x20], rdx	        65	access_ok.h	FUNCTION_106	CALL_1
0x4000f08	      0xba01000000	                              mov edx, 1	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f0d	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	      1722	sd.c	FUNCTION_50	CALL_1
0x4000f14	        0x488b5808	                mov rbx, qword [rax + 8]	      1722	sd.c	FUNCTION_50	CALL_1
0x4000f18	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1725	sd.c	FUNCTION_50
0x4000f21	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1725	sd.c	FUNCTION_50
0x4000f2a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1726	sd.c	FUNCTION_50
0x4000f33	      0x4088742411	              mov byte [rsp + 0x11], sil	      1729	sd.c	FUNCTION_50
0x4000f38	      0x4488442412	              mov byte [rsp + 0x12], r8b	      1730	sd.c	FUNCTION_50
0x4000f3d	    0x41b818000000	                           mov r8d, 0x18	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f43	      0x48894c2428	             mov qword [rsp + 0x28], rcx	        65	access_ok.h	FUNCTION_106	CALL_1
0x4000f48	      0x44884c2434	              mov byte [rsp + 0x34], r9b	      1735	sd.c	FUNCTION_50
0x4000f4d	          0x4889df	                            mov rdi, rbx	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f50	      0xc64424105f	            mov byte [rsp + 0x10], 0x5f 	      1728	sd.c	FUNCTION_50
0x4000f55	    0xc74424150000	     mov dword [rsp + 0x15], 0x18000000 	        60	access_ok.h	FUNCTION_105	CALL_1
0x4000f5d	          0x4531c9	                            xor r9d, r9d	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f60	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f62	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f64	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f66	            0x6a05	                                  push 5	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f68	      0x6830750000	                             push 0x7530	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f6d	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f72	              0x55	                                push rbp	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f73	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f78	      0x488d742440	                   lea rsi, [rsp + 0x40]	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f7d	      0xe800000000	                          call 0x4000f82	       439	scsi_device.h	FUNCTION_280	CALL_1
0x4000f82	        0x4883c430	                           add rsp, 0x30	      1740	sd.c	FUNCTION_50	IF_1	CALL_6
0x4000f86	      0xa900000008	                  test eax, section_end.	      1740	sd.c	FUNCTION_50	IF_1	CALL_6
0x4000f8b	            0x740d	                            je 0x4000f9a	      1740	sd.c	FUNCTION_50	IF_1	CALL_6
0x4000f8d	       0xfb6542408	               movzx edx, byte [rsp + 8]	      1740	sd.c	FUNCTION_50	IF_1	CALL_6
0x4000f92	          0x83e270	                           and edx, 0x70	      1740	sd.c	FUNCTION_50	IF_1	CALL_6
0x4000f95	          0x80fa70	                            cmp dl, 0x70	      1740	sd.c	FUNCTION_50	IF_1	CALL_6
0x4000f98	            0x7417	                            je 0x4000fb1	      1740	sd.c	FUNCTION_50	IF_1	CALL_6
0x4000f9a	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1747	sd.c	FUNCTION_50
0x4000f9f	    0x6548331c2528	                xor rbx, qword gs:[0x28]	      1747	sd.c	FUNCTION_50
0x4000fa8	            0x7539	                           jne 0x4000fe3	      1747	sd.c	FUNCTION_50
0x4000faa	        0x4883c440	                           add rsp, 0x40	      1747	sd.c	FUNCTION_50
0x4000fae	              0x5b	                                 pop rbx	      1747	sd.c	FUNCTION_50
0x4000faf	              0x5d	                                 pop rbp	      1747	sd.c	FUNCTION_50
0x4000fb0	              0xc3	                                     ret	      1747	sd.c	FUNCTION_50
0x4000fb1	          0x4189c0	                            mov r8d, eax	      1742	sd.c	FUNCTION_50	IF_1
0x4000fb4	    0x48c7c1000000	                              mov rcx, 0	      1742	sd.c	FUNCTION_50	IF_1
0x4000fbb	            0x31d2	                            xor edx, edx	      1742	sd.c	FUNCTION_50	IF_1
0x4000fbd	          0x4889de	                            mov rsi, rbx	      1742	sd.c	FUNCTION_50	IF_1
0x4000fc0	    0x48c7c7000000	                              mov rdi, 0	      1742	sd.c	FUNCTION_50	IF_1
0x4000fc7	        0x89442404	                mov dword [rsp + 4], eax	      1742	sd.c	FUNCTION_50	IF_1
0x4000fcb	      0xe800000000	                          call 0x4000fd0	      1742	sd.c	FUNCTION_50	IF_1
0x4000fd0	          0x4889ea	                            mov rdx, rbp	      1743	sd.c	FUNCTION_50	IF_1	CALL_8
0x4000fd3	            0x31f6	                            xor esi, esi	      1743	sd.c	FUNCTION_50	IF_1	CALL_8
0x4000fd5	          0x4889df	                            mov rdi, rbx	      1743	sd.c	FUNCTION_50	IF_1	CALL_8
0x4000fd8	      0xe800000000	                          call 0x4000fdd	      1743	sd.c	FUNCTION_50	IF_1	CALL_8
0x4000fdd	        0x8b442404	                mov eax, dword [rsp + 4]	      1743	sd.c	FUNCTION_50	IF_1	CALL_8
0x4000fe1	            0xebb7	                           jmp 0x4000f9a	      1743	sd.c	FUNCTION_50	IF_1	CALL_8
0x4000fe3	      0xe800000000	                          call 0x4000fe8	      1747	sd.c	FUNCTION_50
sd_suspend_common	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,4:functions,0:IF,7	70
0x4002450	              0x55	                                push rbp	      3535	sd.c	FUNCTION_87
0x4002451	              0x53	                                push rbx	      3535	sd.c	FUNCTION_87
0x4002452	        0x4883ec10	                           sub rsp, 0x10	      3535	sd.c	FUNCTION_87
0x4002456	    0x488b9f980000	            mov rbx, qword [rdi + 0x98] 	      3535	sd.c	FUNCTION_87
0x400245d	    0x65488b042528	                mov rax, qword gs:[0x28]	      3535	sd.c	FUNCTION_87
0x4002466	      0x4889442408	                mov qword [rsp + 8], rax	      3535	sd.c	FUNCTION_87
0x400246b	            0x31c0	                            xor eax, eax	      3535	sd.c	FUNCTION_87
0x400246d	          0x4885db	                           test rbx, rbx	      3540	sd.c	FUNCTION_87	IF_1
0x4002470	     0xf84a5000000	                            je 0x400251b	      3540	sd.c	FUNCTION_87	IF_1
0x4002476	    0xf6832d030000	              test byte [rbx + 0x32d], 4	      3543	sd.c	FUNCTION_87	IF_2
0x400247d	            0x89f5	                            mov ebp, esi	      3543	sd.c	FUNCTION_87	IF_2
0x400247f	            0x745b	                            je 0x40024dc	      3543	sd.c	FUNCTION_87	IF_2
0x4002481	    0x80bb28030000	               cmp byte [rbx + 0x328], 0	      3543	sd.c	FUNCTION_87	IF_2
0x4002488	            0x7452	                            je 0x40024dc	      3543	sd.c	FUNCTION_87	IF_2
0x400248a	    0x488b93e00200	           mov rdx, qword [rbx + 0x2e0] 	      3544	sd.c	FUNCTION_87	IF_2
0x4002491	          0x4885d2	                           test rdx, rdx	      3544	sd.c	FUNCTION_87	IF_2
0x4002494	     0xf84b1000000	                            je 0x400254b	      3544	sd.c	FUNCTION_87	IF_2
0x400249a	        0x488b7308	                mov rsi, qword [rbx + 8]	      3544	sd.c	FUNCTION_87	IF_2
0x400249e	        0x4883c20c	                            add rdx, 0xc	      3544	sd.c	FUNCTION_87	IF_2
0x40024a2	    0x48c7c1000000	                              mov rcx, 0	      3544	sd.c	FUNCTION_87	IF_2
0x40024a9	    0x48c7c7000000	                              mov rdi, 0	      3544	sd.c	FUNCTION_87	IF_2
0x40024b0	      0xe800000000	                          call 0x40024b5	      3544	sd.c	FUNCTION_87	IF_2
0x40024b5	          0x4889e6	                            mov rsi, rsp	      3545	sd.c	FUNCTION_87	IF_2	CALL_2
0x40024b8	          0x4889df	                            mov rdi, rbx	      3545	sd.c	FUNCTION_87	IF_2	CALL_2
0x40024bb	      0xe8c0fcffff	                  call sym.sd_sync_cache	      3545	sd.c	FUNCTION_87	IF_2	CALL_2
0x40024c0	            0x85c0	                           test eax, eax	      3547	sd.c	FUNCTION_87	IF_2	IF_3
0x40024c2	            0x7418	                            je 0x40024dc	      3547	sd.c	FUNCTION_87	IF_2	IF_3
0x40024c4	          0x83f8ed	             cmp eax, 0xffffffffffffffed	      3549	sd.c	FUNCTION_87	IF_2	IF_3	IF_4
0x40024c7	            0x7452	                            je 0x400251b	      3549	sd.c	FUNCTION_87	IF_2	IF_3	IF_4
0x40024c9	         0xfb61424	                   movzx edx, byte [rsp]	      3552	sd.c	FUNCTION_87	IF_2	IF_3	IF_5	CALL_3
0x40024cd	          0x83e270	                           and edx, 0x70	      3552	sd.c	FUNCTION_87	IF_2	IF_3	IF_5	CALL_3
0x40024d0	          0x80fa70	                            cmp dl, 0x70	      3552	sd.c	FUNCTION_87	IF_2	IF_3	IF_5	CALL_3
0x40024d3	            0x7548	                           jne 0x400251d	      3552	sd.c	FUNCTION_87	IF_2	IF_3	IF_5	CALL_3
0x40024d5	      0x807c240105	                   cmp byte [rsp + 1], 5	      3552	sd.c	FUNCTION_87	IF_2	IF_3	IF_5	CALL_3
0x40024da	            0x7541	                           jne 0x400251d	      3552	sd.c	FUNCTION_87	IF_2	IF_3	IF_5	CALL_3
0x40024dc	        0x488b7308	                mov rsi, qword [rbx + 8]	      3565	sd.c	FUNCTION_87	IF_6
0x40024e0	    0xf6861b010000	              test byte [rsi + 0x11b], 8	      3565	sd.c	FUNCTION_87	IF_6
0x40024e7	            0x7432	                            je 0x400251b	      3565	sd.c	FUNCTION_87	IF_6
0x40024e9	    0x488b93e00200	           mov rdx, qword [rbx + 0x2e0] 	      3566	sd.c	FUNCTION_87	IF_6
0x40024f0	          0x4885d2	                           test rdx, rdx	      3566	sd.c	FUNCTION_87	IF_6
0x40024f3	            0x743f	                            je 0x4002534	      3566	sd.c	FUNCTION_87	IF_6
0x40024f5	        0x4883c20c	                            add rdx, 0xc	      3566	sd.c	FUNCTION_87	IF_6
0x40024f9	    0x48c7c1000000	                              mov rcx, 0	      3566	sd.c	FUNCTION_87	IF_6
0x4002500	    0x48c7c7000000	                              mov rdi, 0	      3566	sd.c	FUNCTION_87	IF_6
0x4002507	      0xe800000000	                          call 0x400250c	      3566	sd.c	FUNCTION_87	IF_6
0x400250c	            0x31f6	                            xor esi, esi	      3568	sd.c	FUNCTION_87	IF_6	CALL_4
0x400250e	          0x4889df	                            mov rdi, rbx	      3568	sd.c	FUNCTION_87	IF_6	CALL_4
0x4002511	      0xe8eafdffff	           call sym.sd_start_stop_device	      3568	sd.c	FUNCTION_87	IF_6	CALL_4
0x4002516	          0x4084ed	                           test bpl, bpl	      3569	sd.c	FUNCTION_87	IF_6	IF_7
0x4002519	            0x7402	                            je 0x400251d	      3569	sd.c	FUNCTION_87	IF_6	IF_7
0x400251b	            0x31c0	                            xor eax, eax	      3570	sd.c	FUNCTION_87	IF_6	IF_7
0x400251d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3574	sd.c	FUNCTION_87
0x4002522	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      3574	sd.c	FUNCTION_87
0x400252b	            0x753c	                           jne 0x4002569	      3574	sd.c	FUNCTION_87
0x400252d	        0x4883c410	                           add rsp, 0x10	      3574	sd.c	FUNCTION_87
0x4002531	              0x5b	                                 pop rbx	      3574	sd.c	FUNCTION_87
0x4002532	              0x5d	                                 pop rbp	      3574	sd.c	FUNCTION_87
0x4002533	              0xc3	                                     ret	      3574	sd.c	FUNCTION_87
0x4002534	    0x48c7c1000000	                              mov rcx, 0	      3566	sd.c	FUNCTION_87	IF_6
0x400253b	            0x31d2	                            xor edx, edx	      3566	sd.c	FUNCTION_87	IF_6
0x400253d	    0x48c7c7000000	                              mov rdi, 0	      3566	sd.c	FUNCTION_87	IF_6
0x4002544	      0xe800000000	                          call 0x4002549	      3566	sd.c	FUNCTION_87	IF_6
0x4002549	            0xebc1	                           jmp 0x400250c	      3566	sd.c	FUNCTION_87	IF_6
0x400254b	        0x488b7308	                mov rsi, qword [rbx + 8]	      3544	sd.c	FUNCTION_87	IF_2
0x400254f	    0x48c7c1000000	                              mov rcx, 0	      3544	sd.c	FUNCTION_87	IF_2
0x4002556	            0x31d2	                            xor edx, edx	      3544	sd.c	FUNCTION_87	IF_2
0x4002558	    0x48c7c7000000	                              mov rdi, 0	      3544	sd.c	FUNCTION_87	IF_2
0x400255f	      0xe800000000	                          call 0x4002564	      3544	sd.c	FUNCTION_87	IF_2
0x4002564	      0xe94cffffff	                           jmp 0x40024b5	      3544	sd.c	FUNCTION_87	IF_2
0x4002569	      0xe800000000	                          call 0x400256e	      3574	sd.c	FUNCTION_87
scsi_disk_put	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,4:functions,0:IF,0	14
0x40010e0	              0x55	                                push rbp	       632	sd.c	FUNCTION_25
0x40010e1	              0x53	                                push rbx	       632	sd.c	FUNCTION_25
0x40010e2	          0x4889fb	                            mov rbx, rdi	       632	sd.c	FUNCTION_25
0x40010e5	        0x488b6f08	                mov rbp, qword [rdi + 8]	       633	sd.c	FUNCTION_25
0x40010e9	    0x48c7c7000000	                              mov rdi, 0	       635	sd.c	FUNCTION_25	CALL_1
0x40010f0	      0xe800000000	                          call 0x40010f5	       635	sd.c	FUNCTION_25	CALL_1
0x40010f5	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       636	sd.c	FUNCTION_25	CALL_2
0x40010f9	      0xe800000000	                          call 0x40010fe	       636	sd.c	FUNCTION_25	CALL_2
0x40010fe	          0x4889ef	                            mov rdi, rbp	       637	sd.c	FUNCTION_25	CALL_3
0x4001101	      0xe800000000	                          call 0x4001106	       637	sd.c	FUNCTION_25	CALL_3
0x4001106	              0x5b	                                 pop rbx	       639	sd.c	FUNCTION_25
0x4001107	              0x5d	                                 pop rbp	       639	sd.c	FUNCTION_25
0x4001108	    0x48c7c7000000	                              mov rdi, 0	       638	sd.c	FUNCTION_25	CALL_4
0x400110f	      0xe900000000	                           jmp 0x4001114	       638	sd.c	FUNCTION_25	CALL_4
provisioning_mode_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	8
0x4000250	          0x4889d0	                            mov rax, rdx	       385	sd.c	FUNCTION_14
0x4000253	     0xfb6971b0300	          movzx edx, byte [rdi + 0x31b] 	       388	sd.c	FUNCTION_14	CALL_1
0x400025a	    0x48c7c6000000	                              mov rsi, 0	       388	sd.c	FUNCTION_14	CALL_1
0x4000261	          0x4889c7	                            mov rdi, rax	       388	sd.c	FUNCTION_14	CALL_1
0x4000264	    0x488b14d50000	                  mov rdx, qword [rdx*8]	       388	sd.c	FUNCTION_14	CALL_1
0x400026c	      0xe800000000	                          call 0x4000271	       388	sd.c	FUNCTION_14	CALL_1
0x4000271	            0x4898	                                    cdqe	       388	sd.c	FUNCTION_14	CALL_1
0x4000273	              0xc3	                                     ret	       389	sd.c	FUNCTION_14
max_medium_access_timeouts_store	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,1	23
0x4000100	            0x4154	                                push r12	       470	sd.c	FUNCTION_19
0x4000102	              0x55	                                push rbp	       470	sd.c	FUNCTION_19
0x4000103	          0x4989d4	                            mov r12, rdx	       470	sd.c	FUNCTION_19
0x4000106	              0x53	                                push rbx	       470	sd.c	FUNCTION_19
0x4000107	          0x4889fb	                            mov rbx, rdi	       470	sd.c	FUNCTION_19
0x400010a	      0xbf15000000	                           mov edi, 0x15	       474	sd.c	FUNCTION_19	IF_1	CALL_1
0x400010f	          0x4889cd	                            mov rbp, rcx	       470	sd.c	FUNCTION_19
0x4000112	      0xe800000000	                          call 0x4000117	       474	sd.c	FUNCTION_19	IF_1	CALL_1
0x4000117	            0x84c0	                             test al, al	       474	sd.c	FUNCTION_19	IF_1	CALL_1
0x4000119	    0x48c7c1f3ffff	             mov rcx, 0xfffffffffffffff3	       474	sd.c	FUNCTION_19	IF_1	CALL_1
0x4000120	            0x741d	                            je 0x400013f	       474	sd.c	FUNCTION_19	IF_1	CALL_1
0x4000122	    0x488d93100300	                  lea rdx, [rbx + 0x310]	       477	sd.c	FUNCTION_19	CALL_2
0x4000129	      0xbe0a000000	                            mov esi, 0xa	       477	sd.c	FUNCTION_19	CALL_2
0x400012e	          0x4c89e7	                            mov rdi, r12	       477	sd.c	FUNCTION_19	CALL_2
0x4000131	      0xe800000000	                          call 0x4000136	       477	sd.c	FUNCTION_19	CALL_2
0x4000136	          0x4863c8	                         movsxd rcx, eax	       479	sd.c	FUNCTION_19
0x4000139	            0x85c0	                           test eax, eax	       479	sd.c	FUNCTION_19
0x400013b	        0x480f44cd	                          cmove rcx, rbp	       479	sd.c	FUNCTION_19
0x400013f	              0x5b	                                 pop rbx	       480	sd.c	FUNCTION_19
0x4000140	          0x4889c8	                            mov rax, rcx	       480	sd.c	FUNCTION_19
0x4000143	              0x5d	                                 pop rbp	       480	sd.c	FUNCTION_19
0x4000144	            0x415c	                                 pop r12	       480	sd.c	FUNCTION_19
0x4000146	              0xc3	                                     ret	       480	sd.c	FUNCTION_19
sd_suspend_runtime	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	2
0x4002570	            0x31f6	                            xor esi, esi	      3583	sd.c	FUNCTION_89	CALL_1
0x4002572	      0xe9d9feffff	               jmp sym.sd_suspend_common	      3583	sd.c	FUNCTION_89	CALL_1
max_medium_access_timeouts_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	7
0x40001e0	          0x4889d0	                            mov rax, rdx	       460	sd.c	FUNCTION_18
0x40001e3	    0x8b9710030000	           mov edx, dword [rdi + 0x310] 	       463	sd.c	FUNCTION_18	CALL_1
0x40001e9	    0x48c7c6000000	                              mov rsi, 0	       463	sd.c	FUNCTION_18	CALL_1
0x40001f0	          0x4889c7	                            mov rdi, rax	       463	sd.c	FUNCTION_18	CALL_1
0x40001f3	      0xe800000000	                          call 0x40001f8	       463	sd.c	FUNCTION_18	CALL_1
0x40001f8	            0x4898	                                    cdqe	       463	sd.c	FUNCTION_18	CALL_1
0x40001fa	              0xc3	                                     ret	       464	sd.c	FUNCTION_18
sd_resume	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,3:functions,0:IF,3	26
0x4002590	              0x53	                                push rbx	      3587	sd.c	FUNCTION_90
0x4002591	    0x488b9f980000	            mov rbx, qword [rdi + 0x98] 	      3587	sd.c	FUNCTION_90
0x4002598	          0x4885db	                           test rbx, rbx	      3591	sd.c	FUNCTION_90	IF_1
0x400259b	            0x743e	                            je 0x40025db	      3591	sd.c	FUNCTION_90	IF_1
0x400259d	        0x488b7308	                mov rsi, qword [rbx + 8]	      3594	sd.c	FUNCTION_90	IF_2
0x40025a1	    0xf6861b010000	              test byte [rsi + 0x11b], 8	      3594	sd.c	FUNCTION_90	IF_2
0x40025a8	            0x7431	                            je 0x40025db	      3594	sd.c	FUNCTION_90	IF_2
0x40025aa	    0x488b93e00200	           mov rdx, qword [rbx + 0x2e0] 	      3597	sd.c	FUNCTION_90
0x40025b1	          0x4885d2	                           test rdx, rdx	      3597	sd.c	FUNCTION_90
0x40025b4	            0x7429	                            je 0x40025df	      3597	sd.c	FUNCTION_90
0x40025b6	        0x4883c20c	                            add rdx, 0xc	      3597	sd.c	FUNCTION_90
0x40025ba	    0x48c7c1000000	                              mov rcx, 0	      3597	sd.c	FUNCTION_90
0x40025c1	    0x48c7c7000000	                              mov rdi, 0	      3597	sd.c	FUNCTION_90
0x40025c8	      0xe800000000	                          call 0x40025cd	      3597	sd.c	FUNCTION_90
0x40025cd	          0x4889df	                            mov rdi, rbx	      3598	sd.c	FUNCTION_90	CALL_2
0x40025d0	      0xbe01000000	                              mov esi, 1	      3598	sd.c	FUNCTION_90	CALL_2
0x40025d5	              0x5b	                                 pop rbx	      3602	sd.c	FUNCTION_90
0x40025d6	      0xe925fdffff	            jmp sym.sd_start_stop_device	      3598	sd.c	FUNCTION_90	CALL_2
0x40025db	            0x31c0	                            xor eax, eax	      3602	sd.c	FUNCTION_90
0x40025dd	              0x5b	                                 pop rbx	      3602	sd.c	FUNCTION_90
0x40025de	              0xc3	                                     ret	      3602	sd.c	FUNCTION_90
0x40025df	    0x48c7c1000000	                              mov rcx, 0	      3597	sd.c	FUNCTION_90
0x40025e6	            0x31d2	                            xor edx, edx	      3597	sd.c	FUNCTION_90
0x40025e8	    0x48c7c7000000	                              mov rdi, 0	      3597	sd.c	FUNCTION_90
0x40025ef	      0xe800000000	                          call 0x40025f4	      3597	sd.c	FUNCTION_90
0x40025f4	            0xebd7	                           jmp 0x40025cd	      3597	sd.c	FUNCTION_90
sd_done	ELSE,3:SWITCH,4:WHILE,0:FOR,0:DO,0:CALL,36:functions,0:IF,10	168
0x40035b0	            0x4157	                                push r15	      1931	sd.c	FUNCTION_59
0x40035b2	            0x4156	                                push r14	      1931	sd.c	FUNCTION_59
0x40035b4	          0x4531f6	                          xor r14d, r14d	      1931	sd.c	FUNCTION_59
0x40035b7	            0x4155	                                push r13	      1931	sd.c	FUNCTION_59
0x40035b9	            0x4154	                                push r12	      1931	sd.c	FUNCTION_59
0x40035bb	              0x55	                                push rbp	      1931	sd.c	FUNCTION_59
0x40035bc	              0x53	                                push rbx	      1931	sd.c	FUNCTION_59
0x40035bd	          0x4889fb	                            mov rbx, rdi	      1931	sd.c	FUNCTION_59
0x40035c0	        0x4883ec18	                           sub rsp, 0x18	      1931	sd.c	FUNCTION_59
0x40035c4	    0x8baf88010000	           mov ebp, dword [rdi + 0x188] 	      1932	sd.c	FUNCTION_59
0x40035ca	    0x65488b042528	                mov rax, qword gs:[0x28]	      1931	sd.c	FUNCTION_59
0x40035d3	      0x4889442410	             mov qword [rsp + 0x10], rax	      1931	sd.c	FUNCTION_59
0x40035d8	            0x31c0	                            xor eax, eax	      1931	sd.c	FUNCTION_59
0x40035da	            0x85ed	                           test ebp, ebp	      1933	sd.c	FUNCTION_59	CALL_1
0x40035dc	            0x7507	                           jne 0x40035e5	      1933	sd.c	FUNCTION_59	CALL_1
0x40035de	    0x448bb7100100	          mov r14d, dword [rdi + 0x110] 	       197	scsi_cmnd.h	FUNCTION_243
0x40035e5	    0x4c8bab280100	           mov r13, qword [rbx + 0x128] 	      1937	sd.c	FUNCTION_59	CALL_2
0x40035ec	      0x410fb64d14	           movzx ecx, byte [r13 + 0x14] 	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x40035f1	    0x498b85980000	            mov rax, qword [r13 + 0x98] 	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x40035f8	    0x4c8bb8c80300	           mov r15, qword [rax + 0x3c8] 	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x40035ff	          0x83f909	                              cmp ecx, 9	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x4003602	            0x7739	                            ja 0x400363d	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x4003604	      0xb801000000	                              mov eax, 1	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x4003609	          0x48d3e0	                             shl rax, cl	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x400360c	      0xa9c8020000	                         test eax, 0x2c8	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x4003611	     0xf851c010000	                           jne 0x4003733	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x4003617	            0xa810	                           test al, 0x10	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x4003619	            0x7422	                            je 0x400363d	      1942	sd.c	FUNCTION_59	SWITCH_1	CALL_3
0x400361b	            0x85ed	                           test ebp, ebp	      1956	sd.c	FUNCTION_59	SWITCH_1	IF_2
0x400361d	     0xf8558010000	                           jne 0x400377b	      1956	sd.c	FUNCTION_59	SWITCH_1	IF_2
0x4003623	    0x448bb3100100	          mov r14d, dword [rbx + 0x110] 	      1957	sd.c	FUNCTION_59	SWITCH_1	IF_2	CALL_8
0x400362a	    0x442bb3140100	           sub r14d, dword [rbx + 0x114]	      1957	sd.c	FUNCTION_59	SWITCH_1	IF_2	CALL_8
0x4003631	    0xc78314010000	              mov dword [rbx + 0x114], 0	       202	scsi_cmnd.h	FUNCTION_244
0x400363b	            0xeb22	                           jmp 0x400365f	       202	scsi_cmnd.h	FUNCTION_244
0x400363d	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1934	sd.c	FUNCTION_59
0x4003641	    0x448b88940000	            mov r9d, dword [rax + 0x94] 	      1934	sd.c	FUNCTION_59
0x4003648	    0x8b8314010000	           mov eax, dword [rbx + 0x114] 	      1971	sd.c	FUNCTION_59	SWITCH_1	CALL_13
0x400364e	        0x458d61ff	                      lea r12d, [r9 - 1]	      1972	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003652	          0x4485e0	                          test eax, r12d	      1972	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003655	            0x7539	                           jne 0x4003690	      1972	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003657	            0x85ed	                           test ebp, ebp	      1982	sd.c	FUNCTION_59	IF_4
0x4003659	     0xf858f000000	                           jne 0x40036ee	      1982	sd.c	FUNCTION_59	IF_4
0x400365f	    0x41c787240300	              mov dword [r15 + 0x324], 0	      1987	sd.c	FUNCTION_59
0x400366a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2054	sd.c	FUNCTION_59
0x400366f	    0x654833342528	                xor rsi, qword gs:[0x28]	      2054	sd.c	FUNCTION_59
0x4003678	          0x4489f0	                           mov eax, r14d	      2054	sd.c	FUNCTION_59
0x400367b	     0xf8508020000	                           jne 0x4003889	      2054	sd.c	FUNCTION_59
0x4003681	        0x4883c418	                           add rsp, 0x18	      2054	sd.c	FUNCTION_59
0x4003685	              0x5b	                                 pop rbx	      2054	sd.c	FUNCTION_59
0x4003686	              0x5d	                                 pop rbp	      2054	sd.c	FUNCTION_59
0x4003687	            0x415c	                                 pop r12	      2054	sd.c	FUNCTION_59
0x4003689	            0x415d	                                 pop r13	      2054	sd.c	FUNCTION_59
0x400368b	            0x415e	                                 pop r14	      2054	sd.c	FUNCTION_59
0x400368d	            0x415f	                                 pop r15	      2054	sd.c	FUNCTION_59
0x400368f	              0xc3	                                     ret	      2054	sd.c	FUNCTION_59
0x4003690	    0x498b97e00200	           mov rdx, qword [r15 + 0x2e0] 	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003697	          0x4885d2	                           test rdx, rdx	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x400369a	     0xf846e010000	                            je 0x400380e	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036a0	        0x498b7708	                mov rsi, qword [r15 + 8]	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036a4	          0x4189c0	                            mov r8d, eax	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036a7	        0x4883c20c	                            add rdx, 0xc	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036ab	    0x48c7c1000000	                              mov rcx, 0	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036b2	    0x48c7c7000000	                              mov rdi, 0	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036b9	        0x89442404	                mov dword [rsp + 4], eax	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036bd	      0xe800000000	                          call 0x40036c2	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036c2	        0x8b442404	                mov eax, dword [rsp + 4]	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x40036c6	          0x83e801	                              sub eax, 1	      1976	sd.c	FUNCTION_59	SWITCH_1	IF_3	CALL_15
0x40036c9	          0x4109c4	                            or r12d, eax	      1976	sd.c	FUNCTION_59	SWITCH_1	IF_3	CALL_15
0x40036cc	        0x4183c401	                             add r12d, 1	      1976	sd.c	FUNCTION_59	SWITCH_1	IF_3	CALL_15
0x40036d0	    0x4439a3100100	          cmp dword [rbx + 0x110], r12d 	       202	scsi_cmnd.h	FUNCTION_244
0x40036d7	    0x440f46a31001	        cmovbe r12d, dword [rbx + 0x110]	       202	scsi_cmnd.h	FUNCTION_244
0x40036df	            0x85ed	                           test ebp, ebp	      1982	sd.c	FUNCTION_59	IF_4
0x40036e1	    0x4489a3140100	           mov dword [rbx + 0x114], r12d	       202	scsi_cmnd.h	FUNCTION_244
0x40036e8	     0xf8471ffffff	                            je 0x400365f	      1982	sd.c	FUNCTION_59	IF_4
0x40036ee	      0x488d742408	                      lea rsi, [rsp + 8]	      1983	sd.c	FUNCTION_59	IF_4	CALL_18
0x40036f3	          0x4889df	                            mov rdi, rbx	      1983	sd.c	FUNCTION_59	IF_4	CALL_18
0x40036f6	      0xe800000000	                          call 0x40036fb	      1983	sd.c	FUNCTION_59	IF_4	CALL_18
0x40036fb	            0x84c0	                             test al, al	      1984	sd.c	FUNCTION_59	IF_4	IF_5
0x40036fd	            0x754b	                           jne 0x400374a	      1984	sd.c	FUNCTION_59	IF_4	IF_5
0x40036ff	          0xc1ed18	                           shr ebp, 0x18	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x4003702	    0x41c787240300	              mov dword [r15 + 0x324], 0	      1987	sd.c	FUNCTION_59
0x400370d	          0x83fd08	                              cmp ebp, 8	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x4003710	     0xf8554ffffff	                           jne 0x400366a	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x4003716	      0x807c24090b	                 cmp byte [rsp + 9], 0xb	      1993	sd.c	FUNCTION_59	SWITCH_2
0x400371b	     0xf8749ffffff	                            ja 0x400366a	      1993	sd.c	FUNCTION_59	SWITCH_2
0x4003721	       0xfb6442409	               movzx eax, byte [rsp + 9]	      1993	sd.c	FUNCTION_59	SWITCH_2
0x4003726	    0x488b04c50000	                  mov rax, qword [rax*8]	      1993	sd.c	FUNCTION_59	SWITCH_2
0x400372e	      0xe900000000	                           jmp 0x4003733	      1993	sd.c	FUNCTION_59	SWITCH_2
0x4003733	            0x85ed	                           test ebp, ebp	      1947	sd.c	FUNCTION_59	SWITCH_1	IF_1
0x4003735	            0x7544	                           jne 0x400377b	      1947	sd.c	FUNCTION_59	SWITCH_1	IF_1
0x4003737	        0x458b7520	           mov r14d, dword [r13 + 0x20] 	      1947	sd.c	FUNCTION_59	SWITCH_1	IF_1
0x400373b	    0xc78314010000	              mov dword [rbx + 0x114], 0	       202	scsi_cmnd.h	FUNCTION_244
0x4003745	      0xe915ffffff	                           jmp 0x400365f	       202	scsi_cmnd.h	FUNCTION_244
0x400374a	       0xfb6542408	               movzx edx, byte [rsp + 8]	       202	scsi_cmnd.h	FUNCTION_244
0x400374f	    0x41c787240300	              mov dword [r15 + 0x324], 0	      1987	sd.c	FUNCTION_59
0x400375a	            0x89d0	                            mov eax, edx	        24	scsi_eh.h	FUNCTION_359
0x400375c	          0x83e001	                              and eax, 1	        24	scsi_eh.h	FUNCTION_359
0x400375f	          0x80fa70	                            cmp dl, 0x70	        24	scsi_eh.h	FUNCTION_359
0x4003762	      0xba00000000	                              mov edx, 0	        24	scsi_eh.h	FUNCTION_359
0x4003767	           0xf42c2	                          cmovb eax, edx	        24	scsi_eh.h	FUNCTION_359
0x400376a	          0xc1ed18	                           shr ebp, 0x18	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x400376d	          0x83fd08	                              cmp ebp, 8	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x4003770	            0x74a4	                            je 0x4003716	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x4003772	            0x85c0	                           test eax, eax	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x4003774	            0x74a0	                            je 0x4003716	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x4003776	      0xe9effeffff	                           jmp 0x400366a	      1989	sd.c	FUNCTION_59	IF_6	CALL_20
0x400377b	        0x418b4520	            mov eax, dword [r13 + 0x20] 	       202	scsi_cmnd.h	FUNCTION_244
0x400377f	          0x4531f6	                          xor r14d, r14d	      1933	sd.c	FUNCTION_59	CALL_1
0x4003782	    0x898314010000	            mov dword [rbx + 0x114], eax	       202	scsi_cmnd.h	FUNCTION_244
0x4003788	      0xe961ffffff	                           jmp 0x40036ee	       202	scsi_cmnd.h	FUNCTION_244
0x400378d	       0xfb644240a	            movzx eax, byte [rsp + 0xa] 	      2014	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3
0x4003792	            0x3c20	                            cmp al, 0x20	      2014	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3
0x4003794	     0xf849d000000	                            je 0x4003837	      2014	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3
0x400379a	            0x3c24	                            cmp al, 0x24	      2014	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3
0x400379c	     0xf8495000000	                            je 0x4003837	      2014	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3
0x40037a2	            0x3c10	                            cmp al, 0x10	      2014	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3
0x40037a4	     0xf85c0feffff	                           jne 0x400366a	      2014	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3
0x40037aa	          0x4889df	                            mov rdi, rbx	      2016	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	CALL_25
0x40037ad	      0xe82efdffff	             call sym.sd_completed_bytes	      2016	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	CALL_25
0x40037b2	          0x4189c6	                           mov r14d, eax	      2016	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	CALL_25
0x40037b5	      0xe9b0feffff	                           jmp 0x400366a	      2017	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3
0x40037ba	      0x807c240a10	              cmp byte [rsp + 0xa], 0x10	      2010	sd.c	FUNCTION_59	SWITCH_2	IF_7
0x40037bf	     0xf85a5feffff	                           jne 0x400366a	      2010	sd.c	FUNCTION_59	SWITCH_2	IF_7
0x40037c5	            0xebe3	                           jmp 0x40037aa	      2010	sd.c	FUNCTION_59	SWITCH_2	IF_7
0x40037c7	    0x448bb3100100	          mov r14d, dword [rbx + 0x110] 	       197	scsi_cmnd.h	FUNCTION_243
0x40037ce	      0xe997feffff	                           jmp 0x400366a	      2000	sd.c	FUNCTION_59	SWITCH_2
0x40037d3	    0x488b83300100	           mov rax, qword [rbx + 0x130] 	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x40037da	    0xc78388010000	              mov dword [rbx + 0x188], 0	      2006	sd.c	FUNCTION_59	SWITCH_2
0x40037e4	        0x488d7808	                      lea rdi, [rax + 8]	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x40037e8	    0x48c700000000	                      mov qword [rax], 0	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x40037ef	    0x48c740580000	               mov qword [rax + 0x58], 0	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x40037f7	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x40037fb	          0x4829f8	                            sub rax, rdi	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x40037fe	          0x8d4860	                   lea ecx, [rax + 0x60]	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x4003801	            0x31c0	                            xor eax, eax	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x4003803	          0xc1e903	                              shr ecx, 3	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x4003806	          0xf348ab	              rep stosq qword [rdi], rax	      2007	sd.c	FUNCTION_59	SWITCH_2	CALL_23
0x4003809	      0xe95cfeffff	                           jmp 0x400366a	      2008	sd.c	FUNCTION_59	SWITCH_2
0x400380e	        0x498b7708	                mov rsi, qword [r15 + 8]	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003812	          0x4189c0	                            mov r8d, eax	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003815	    0x48c7c1000000	                              mov rcx, 0	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x400381c	            0x31d2	                            xor edx, edx	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x400381e	    0x48c7c7000000	                              mov rdi, 0	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003825	        0x89442404	                mov dword [rsp + 4], eax	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003829	      0xe800000000	                          call 0x400382e	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x400382e	        0x8b442404	                mov eax, dword [rsp + 4]	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003832	      0xe98ffeffff	                           jmp 0x40036c6	      1973	sd.c	FUNCTION_59	SWITCH_1	IF_3
0x4003837	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2020	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4
0x400383e	           0xfb602	                   movzx eax, byte [rdx]	      2020	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4
0x4003841	            0x3c42	                            cmp al, 0x42	      2020	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4
0x4003843	            0x7432	                            je 0x4003877	      2020	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4
0x4003845	            0x3c93	                            cmp al, 0x93	      2020	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4
0x4003847	            0x7408	                            je 0x4003851	      2020	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4
0x4003849	            0x3c41	                            cmp al, 0x41	      2020	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4
0x400384b	     0xf8519feffff	                           jne 0x400366a	      2020	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4
0x4003851	        0xf6420108	                  test byte [rdx + 1], 8	      2026	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	IF_8
0x4003855	            0x7520	                           jne 0x4003877	      2026	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	IF_8
0x4003857	        0x498b4708	                mov rax, qword [r15 + 8]	      2029	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	ELSE_3
0x400385b	          0x4c89ff	                            mov rdi, r15	      2030	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	ELSE_3	CALL_28
0x400385e	    0x80881a010000	                or byte [rax + 0x11a], 4	      2029	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	ELSE_3
0x4003865	      0xe8a6e5ffff	           call sym.sd_config_write_same	      2030	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	ELSE_3	CALL_28
0x400386a	    0x41814d180008	            or dword [r13 + 0x18], 0x800	      2032	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	ELSE_3
0x4003872	      0xe9f3fdffff	                           jmp 0x400366a	      2032	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	ELSE_3
0x4003877	      0xbe05000000	                              mov esi, 5	      2027	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	IF_8	CALL_27
0x400387c	          0x4c89ff	                            mov rdi, r15	      2027	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	IF_8	CALL_27
0x400387f	      0xe89ccbffff	              call sym.sd_config_discard	      2027	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	IF_8	CALL_27
0x4003884	      0xe9e1fdffff	                           jmp 0x400366a	      2027	sd.c	FUNCTION_59	SWITCH_2	SWITCH_3	SWITCH_4	IF_8	CALL_27
0x4003889	      0xe800000000	                          call 0x400388e	      2054	sd.c	FUNCTION_59
sd_probe_async	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,9:functions,0:IF,4	85
0x4005530	            0x4156	                                push r14	      3234	sd.c	FUNCTION_81
0x4005532	            0x4155	                                push r13	      3234	sd.c	FUNCTION_81
0x4005534	            0x4154	                                push r12	      3234	sd.c	FUNCTION_81
0x4005536	              0x55	                                push rbp	      3234	sd.c	FUNCTION_81
0x4005537	              0x53	                                push rbx	      3234	sd.c	FUNCTION_81
0x4005538	    0x448bb7180300	          mov r14d, dword [rdi + 0x318] 	      3243	sd.c	FUNCTION_81
0x400553f	          0x4889fb	                            mov rbx, rdi	      3234	sd.c	FUNCTION_81
0x4005542	        0x4c8b6708	                mov r12, qword [rdi + 8]	      3241	sd.c	FUNCTION_81
0x4005546	    0x488bafe00200	           mov rbp, qword [rdi + 0x2e0] 	      3242	sd.c	FUNCTION_81
0x400554d	          0x4489f7	                           mov edi, r14d	      3246	sd.c	FUNCTION_81	CALL_1
0x4005550	    0x81e7f0000000	                           and edi, 0xf0	      3246	sd.c	FUNCTION_81	CALL_1
0x4005556	    0x4d8dac247801	                  lea r13, [r12 + 0x178]	      3244	sd.c	FUNCTION_81
0x400555e	          0xc1ef04	                              shr edi, 4	      3246	sd.c	FUNCTION_81	CALL_1
0x4005561	      0xe8dacaffff	                       call sym.sd_major	      3246	sd.c	FUNCTION_81	CALL_1
0x4005566	          0x894500	                    mov dword [rbp], eax	      3246	sd.c	FUNCTION_81	CALL_1
0x4005569	          0x4489f0	                           mov eax, r14d	      3247	sd.c	FUNCTION_81
0x400556c	          0x4489f2	                           mov edx, r14d	      3247	sd.c	FUNCTION_81
0x400556f	          0xc1e004	                              shl eax, 4	      3247	sd.c	FUNCTION_81
0x4005572	    0x81e200ff0f00	                        and edx, 0xfff00	      3247	sd.c	FUNCTION_81
0x4005578	    0x48c785b80300	              mov qword [rbp + 0x3b8], 0	      3249	sd.c	FUNCTION_81
0x4005583	           0xfb6c0	                           movzx eax, al	      3247	sd.c	FUNCTION_81
0x4005586	    0x48899dc80300	           mov qword [rbp + 0x3c8], rbx 	      3250	sd.c	FUNCTION_81
0x400558d	          0x4889ef	                            mov rdi, rbp	      3265	sd.c	FUNCTION_81	CALL_2
0x4005590	             0x9c2	                             or edx, eax	      3247	sd.c	FUNCTION_81
0x4005592	          0x895504	                mov dword [rbp + 4], edx	      3247	sd.c	FUNCTION_81
0x4005595	        0x488b4308	                mov rax, qword [rbx + 8]	      3251	sd.c	FUNCTION_81
0x4005599	        0x488b4008	                mov rax, qword [rax + 8]	      3251	sd.c	FUNCTION_81
0x400559d	    0x488985c00300	           mov qword [rbp + 0x3c0], rax 	      3251	sd.c	FUNCTION_81
0x40055a4	    0x41c784249400	          mov dword [r12 + 0x94], 0x200 	      3254	sd.c	FUNCTION_81
0x40055b0	     0xfb6832d0300	          movzx eax, byte [rbx + 0x32d] 	      3261	sd.c	FUNCTION_81
0x40055b7	    0x48c783f80200	              mov qword [rbx + 0x2f8], 0	      3255	sd.c	FUNCTION_81
0x40055c2	    0xc68328030000	               mov byte [rbx + 0x328], 1	      3256	sd.c	FUNCTION_81
0x40055c9	    0xc68329030000	               mov byte [rbx + 0x329], 0	      3257	sd.c	FUNCTION_81
0x40055d0	    0xc78320030000	              mov dword [rbx + 0x320], 2	      3263	sd.c	FUNCTION_81
0x40055da	          0x83e0f0	                     and eax, 0xfffffff0	      3261	sd.c	FUNCTION_81
0x40055dd	          0x83c820	                            or eax, 0x20	      3262	sd.c	FUNCTION_81
0x40055e0	    0x88832d030000	              mov byte [rbx + 0x32d], al	      3262	sd.c	FUNCTION_81
0x40055e6	      0xe8a5e2ffff	             call sym.sd_revalidate_disk	      3265	sd.c	FUNCTION_81	CALL_2
0x40055eb	    0xc785d0030000	          mov dword [rbp + 0x3d0], 0x40 	      3267	sd.c	FUNCTION_81
0x40055f5	    0x41f684241801	              test byte [r12 + 0x118], 1	      3268	sd.c	FUNCTION_81	IF_1
0x40055fe	            0x740e	                            je 0x400560e	      3268	sd.c	FUNCTION_81	IF_1
0x4005600	        0x834d3801	                or dword [rbp + 0x38], 1	      3270	sd.c	FUNCTION_81	IF_1
0x4005604	    0xc785d0030000	          mov dword [rbp + 0x3d0], 0x41 	      3269	sd.c	FUNCTION_81	IF_1
0x400560e	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      3273	sd.c	FUNCTION_81	CALL_3
0x4005613	          0x4c89ee	                            mov rsi, r13	      3273	sd.c	FUNCTION_81	CALL_3
0x4005616	      0xe800000000	                          call 0x400561b	      3273	sd.c	FUNCTION_81	CALL_3
0x400561b	          0x4889ee	                            mov rsi, rbp	      3274	sd.c	FUNCTION_81	CALL_4
0x400561e	          0x4c89ef	                            mov rdi, r13	      3274	sd.c	FUNCTION_81	CALL_4
0x4005621	      0xe800000000	                          call 0x4005626	      3274	sd.c	FUNCTION_81	CALL_4
0x4005626	          0x4889ef	                            mov rdi, rbp	      3278	sd.c	FUNCTION_81	CALL_6
0x4005629	      0xe862e2ffff	             call sym.sd_revalidate_disk	      3278	sd.c	FUNCTION_81	CALL_6
0x400562e	    0xf6832f030000	              test byte [rbx + 0x32f], 8	      3280	sd.c	FUNCTION_81	IF_3
0x4005635	            0x740b	                            je 0x4005642	      3280	sd.c	FUNCTION_81	IF_3
0x4005637	    0x48c783e80200	              mov qword [rbx + 0x2e8], 0	      3281	sd.c	FUNCTION_81	IF_3	CALL_7
0x4005642	    0x488b93e00200	           mov rdx, qword [rbx + 0x2e0] 	      3286	sd.c	FUNCTION_81
0x4005649	          0x4885d2	                           test rdx, rdx	      3286	sd.c	FUNCTION_81
0x400564c	            0x744f	                            je 0x400569d	      3286	sd.c	FUNCTION_81
0x400564e	    0x41f684241801	              test byte [r12 + 0x118], 1	      3286	sd.c	FUNCTION_81
0x4005657	        0x488b7308	                mov rsi, qword [rbx + 8]	      3286	sd.c	FUNCTION_81
0x400565b	    0x49c7c0000000	                               mov r8, 0	      3286	sd.c	FUNCTION_81
0x4005662	    0x48c7c0000000	                              mov rax, 0	      3286	sd.c	FUNCTION_81
0x4005669	    0x48c7c1000000	                              mov rcx, 0	      3286	sd.c	FUNCTION_81
0x4005670	    0x48c7c7000000	                              mov rdi, 0	      3286	sd.c	FUNCTION_81
0x4005677	        0x4c0f45c0	                          cmovne r8, rax	      3286	sd.c	FUNCTION_81
0x400567b	        0x4883c20c	                            add rdx, 0xc	      3286	sd.c	FUNCTION_81
0x400567f	      0xe800000000	                          call 0x4005684	      3286	sd.c	FUNCTION_81
0x4005684	          0x4c89e7	                            mov rdi, r12	      3288	sd.c	FUNCTION_81	CALL_8
0x4005687	      0xe800000000	                          call 0x400568c	      3288	sd.c	FUNCTION_81	CALL_8
0x400568c	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      3289	sd.c	FUNCTION_81	CALL_9
0x4005690	              0x5b	                                 pop rbx	      3290	sd.c	FUNCTION_81
0x4005691	              0x5d	                                 pop rbp	      3290	sd.c	FUNCTION_81
0x4005692	            0x415c	                                 pop r12	      3290	sd.c	FUNCTION_81
0x4005694	            0x415d	                                 pop r13	      3290	sd.c	FUNCTION_81
0x4005696	            0x415e	                                 pop r14	      3290	sd.c	FUNCTION_81
0x4005698	      0xe900000000	                           jmp 0x400569d	      3289	sd.c	FUNCTION_81	CALL_9
0x400569d	    0x41f684241801	              test byte [r12 + 0x118], 1	      3286	sd.c	FUNCTION_81
0x40056a6	        0x488b7308	                mov rsi, qword [rbx + 8]	      3286	sd.c	FUNCTION_81
0x40056aa	    0x48c7c0000000	                              mov rax, 0	      3286	sd.c	FUNCTION_81
0x40056b1	    0x49c7c0000000	                               mov r8, 0	      3286	sd.c	FUNCTION_81
0x40056b8	    0x48c7c1000000	                              mov rcx, 0	      3286	sd.c	FUNCTION_81
0x40056bf	    0x48c7c7000000	                              mov rdi, 0	      3286	sd.c	FUNCTION_81
0x40056c6	        0x4c0f44c0	                           cmove r8, rax	      3286	sd.c	FUNCTION_81
0x40056ca	            0x31d2	                            xor edx, edx	      3286	sd.c	FUNCTION_81
0x40056cc	      0xe800000000	                          call 0x40056d1	      3286	sd.c	FUNCTION_81
0x40056d1	            0xebb1	                           jmp 0x4005684	      3286	sd.c	FUNCTION_81
sd_set_flush_flag	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,2	12
0x4000760	     0xfb6972d0300	          movzx edx, byte [rdi + 0x32d] 	       146	sd.c	FUNCTION_1	IF_1
0x4000767	          0xf6c204	                              test dl, 4	       146	sd.c	FUNCTION_1	IF_1
0x400076a	            0x741e	                            je 0x400078a	       146	sd.c	FUNCTION_1	IF_1
0x400076c	          0xc0ea04	                               shr dl, 4	       146	sd.c	FUNCTION_1	IF_1
0x400076f	      0xbe01000000	                              mov esi, 1	       146	sd.c	FUNCTION_1	IF_1
0x4000774	          0x83e201	                              and edx, 1	       146	sd.c	FUNCTION_1	IF_1
0x4000777	    0x488b87e00200	           mov rax, qword [rdi + 0x2e0] 	       152	sd.c	FUNCTION_1	CALL_1
0x400077e	    0x488bb8c00300	           mov rdi, qword [rax + 0x3c0] 	       152	sd.c	FUNCTION_1	CALL_1
0x4000785	      0xe900000000	                           jmp 0x400078a	       152	sd.c	FUNCTION_1	CALL_1
0x400078a	            0x31f6	                            xor esi, esi	       152	sd.c	FUNCTION_1	CALL_1
0x400078c	            0x31d2	                            xor edx, edx	       152	sd.c	FUNCTION_1	CALL_1
0x400078e	            0xebe7	                           jmp 0x4000777	       152	sd.c	FUNCTION_1	CALL_1
sd_rescan	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,0	3
0x4000740	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	      1670	sd.c	FUNCTION_47	CALL_2
0x4000747	    0x488bb8e00200	           mov rdi, qword [rax + 0x2e0] 	      1670	sd.c	FUNCTION_47	CALL_2
0x400074e	      0xe900000000	                           jmp 0x4000753	      1670	sd.c	FUNCTION_47	CALL_2
sd_pr_release	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,0	10
0x4001040	          0x83ea01	                              sub edx, 1	      1768	sd.c	FUNCTION_53
0x4001043	          0x4531c0	                            xor r8d, r8d	      1768	sd.c	FUNCTION_53
0x4001046	          0x83fa05	                              cmp edx, 5	      1768	sd.c	FUNCTION_53
0x4001049	            0x7708	                            ja 0x4001053	      1768	sd.c	FUNCTION_53
0x400104b	    0x440fb6820000	                   movzx r8d, byte [rdx]	      1768	sd.c	FUNCTION_53
0x4001053	          0x4889f2	                            mov rdx, rsi	      1769	sd.c	FUNCTION_53	CALL_2
0x4001056	          0x4531c9	                            xor r9d, r9d	      1769	sd.c	FUNCTION_53	CALL_2
0x4001059	            0x31c9	                            xor ecx, ecx	      1769	sd.c	FUNCTION_53	CALL_2
0x400105b	      0xbe02000000	                              mov esi, 2	      1769	sd.c	FUNCTION_53	CALL_2
0x4001060	      0xe97bfeffff	                   jmp sym.sd_pr_command	      1769	sd.c	FUNCTION_53	CALL_2
sd_default_probe	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,0:functions,0:IF,0	2
0x4000040	            0x31c0	                            xor eax, eax	       583	sd.c	FUNCTION_22
0x4000042	              0xc3	                                     ret	       583	sd.c	FUNCTION_22
sd_compat_ioctl	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,3:functions,0:IF,2	33
0x4001120	            0x4154	                                push r12	      1681	sd.c	FUNCTION_48
0x4001122	              0x55	                                push rbp	      1681	sd.c	FUNCTION_48
0x4001123	          0xc1ee06	                              shr esi, 6	      1685	sd.c	FUNCTION_48	CALL_2
0x4001126	              0x53	                                push rbx	      1681	sd.c	FUNCTION_48
0x4001127	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1681	sd.c	FUNCTION_48
0x400112e	            0x89d5	                            mov ebp, edx	      1681	sd.c	FUNCTION_48
0x4001130	            0x89f2	                            mov edx, esi	      1685	sd.c	FUNCTION_48	CALL_2
0x4001132	            0x89ee	                            mov esi, ebp	      1685	sd.c	FUNCTION_48	CALL_2
0x4001134	          0x4989cc	                            mov r12, rcx	      1681	sd.c	FUNCTION_48
0x4001137	          0x83e201	                              and edx, 1	      1685	sd.c	FUNCTION_48	CALL_2
0x400113a	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	      1682	sd.c	FUNCTION_48	CALL_1
0x4001141	        0x488b5808	                mov rbx, qword [rax + 8]	      1682	sd.c	FUNCTION_48	CALL_1
0x4001145	          0x4889df	                            mov rdi, rbx	      1685	sd.c	FUNCTION_48	CALL_2
0x4001148	      0xe800000000	                          call 0x400114d	      1685	sd.c	FUNCTION_48	CALL_2
0x400114d	            0x85c0	                           test eax, eax	      1687	sd.c	FUNCTION_48	IF_1
0x400114f	            0x7529	                           jne 0x400117a	      1687	sd.c	FUNCTION_48	IF_1
0x4001151	          0x488b03	                    mov rax, qword [rbx]	      1693	sd.c	FUNCTION_48	IF_2
0x4001154	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1693	sd.c	FUNCTION_48	IF_2
0x400115b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1693	sd.c	FUNCTION_48	IF_2
0x400115f	          0x4885c0	                           test rax, rax	      1693	sd.c	FUNCTION_48	IF_2
0x4001162	            0x7411	                            je 0x4001175	      1693	sd.c	FUNCTION_48	IF_2
0x4001164	          0x4c89e2	                            mov rdx, r12	      1695	sd.c	FUNCTION_48	CALL_3
0x4001167	            0x89ee	                            mov esi, ebp	      1695	sd.c	FUNCTION_48	CALL_3
0x4001169	          0x4889df	                            mov rdi, rbx	      1695	sd.c	FUNCTION_48	CALL_3
0x400116c	              0x5b	                                 pop rbx	      1696	sd.c	FUNCTION_48
0x400116d	              0x5d	                                 pop rbp	      1696	sd.c	FUNCTION_48
0x400116e	            0x415c	                                 pop r12	      1696	sd.c	FUNCTION_48
0x4001170	      0xe900000000	                           jmp 0x4001175	      1695	sd.c	FUNCTION_48	CALL_3
0x4001175	      0xb8fdfdffff	                     mov eax, 0xfffffdfd	      1694	sd.c	FUNCTION_48	IF_2
0x400117a	              0x5b	                                 pop rbx	      1696	sd.c	FUNCTION_48
0x400117b	              0x5d	                                 pop rbp	      1696	sd.c	FUNCTION_48
0x400117c	            0x415c	                                 pop r12	      1696	sd.c	FUNCTION_48
0x400117e	              0xc3	                                     ret	      1696	sd.c	FUNCTION_48
app_tag_own_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	8
0x40002b0	          0x4889d0	                            mov rax, rdx	       355	sd.c	FUNCTION_12
0x40002b3	     0xfb6971d0300	          movzx edx, byte [rdi + 0x31d] 	       358	sd.c	FUNCTION_12	CALL_1
0x40002ba	    0x48c7c6000000	                              mov rsi, 0	       358	sd.c	FUNCTION_12	CALL_1
0x40002c1	          0x4889c7	                            mov rdi, rax	       358	sd.c	FUNCTION_12	CALL_1
0x40002c4	          0x83e201	                              and edx, 1	       358	sd.c	FUNCTION_12	CALL_1
0x40002c7	      0xe800000000	                          call 0x40002cc	       358	sd.c	FUNCTION_12	CALL_1
0x40002cc	            0x4898	                                    cdqe	       358	sd.c	FUNCTION_12	CALL_1
0x40002ce	              0xc3	                                     ret	       359	sd.c	FUNCTION_12
sd_pr_register	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,1	14
0x40010b0	    0xf7c1feffffff	                    test ecx, 0xfffffffe	      1752	sd.c	FUNCTION_51	IF_1
0x40010b6	          0x4889f0	                            mov rax, rsi	      1751	sd.c	FUNCTION_51
0x40010b9	            0x751e	                           jne 0x40010d9	      1752	sd.c	FUNCTION_51	IF_1
0x40010bb	          0x83f901	                              cmp ecx, 1	      1754	sd.c	FUNCTION_51	CALL_1
0x40010be	    0x41b901000000	                              mov r9d, 1	      1754	sd.c	FUNCTION_51	CALL_1
0x40010c4	          0x4889d1	                            mov rcx, rdx	      1754	sd.c	FUNCTION_51	CALL_1
0x40010c7	            0x19f6	                            sbb esi, esi	      1754	sd.c	FUNCTION_51	CALL_1
0x40010c9	          0x4889c2	                            mov rdx, rax	      1754	sd.c	FUNCTION_51	CALL_1
0x40010cc	          0x4531c0	                            xor r8d, r8d	      1754	sd.c	FUNCTION_51	CALL_1
0x40010cf	            0xf7d6	                                 not esi	      1754	sd.c	FUNCTION_51	CALL_1
0x40010d1	          0x83e606	                              and esi, 6	      1754	sd.c	FUNCTION_51	CALL_1
0x40010d4	      0xe907feffff	                   jmp sym.sd_pr_command	      1754	sd.c	FUNCTION_51	CALL_1
0x40010d9	      0xb8a1ffffff	                     mov eax, 0xffffffa1	      1757	sd.c	FUNCTION_51
0x40010de	              0xc3	                                     ret	      1757	sd.c	FUNCTION_51
sd_shutdown	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,4:functions,0:IF,4	52
0x4002600	              0x53	                                push rbx	      3514	sd.c	FUNCTION_86
0x4002601	    0x488b9f980000	            mov rbx, qword [rdi + 0x98] 	      3514	sd.c	FUNCTION_86
0x4002608	          0x4885db	                           test rbx, rbx	      3517	sd.c	FUNCTION_86	IF_1
0x400260b	     0xf84a5000000	                            je 0x40026b6	      3517	sd.c	FUNCTION_86	IF_1
0x4002611	    0x83bf9c010000	              cmp dword [rdi + 0x19c], 2	        81	pm_runtime.h	FUNCTION_364
0x4002618	     0xf848b000000	                            je 0x40026a9	        81	pm_runtime.h	FUNCTION_364
0x400261e	    0xf6832d030000	              test byte [rbx + 0x32d], 4	      3523	sd.c	FUNCTION_86	IF_3
0x4002625	            0x743e	                            je 0x4002665	      3523	sd.c	FUNCTION_86	IF_3
0x4002627	    0x80bb28030000	               cmp byte [rbx + 0x328], 0	      3523	sd.c	FUNCTION_86	IF_3
0x400262e	            0x7435	                            je 0x4002665	      3523	sd.c	FUNCTION_86	IF_3
0x4002630	    0x488b93e00200	           mov rdx, qword [rbx + 0x2e0] 	      3524	sd.c	FUNCTION_86	IF_3
0x4002637	          0x4885d2	                           test rdx, rdx	      3524	sd.c	FUNCTION_86	IF_3
0x400263a	     0xf848f000000	                            je 0x40026cf	      3524	sd.c	FUNCTION_86	IF_3
0x4002640	        0x488b7308	                mov rsi, qword [rbx + 8]	      3524	sd.c	FUNCTION_86	IF_3
0x4002644	        0x4883c20c	                            add rdx, 0xc	      3524	sd.c	FUNCTION_86	IF_3
0x4002648	    0x48c7c1000000	                              mov rcx, 0	      3524	sd.c	FUNCTION_86	IF_3
0x400264f	    0x48c7c7000000	                              mov rdi, 0	      3524	sd.c	FUNCTION_86	IF_3
0x4002656	      0xe800000000	                          call 0x400265b	      3524	sd.c	FUNCTION_86	IF_3
0x400265b	            0x31f6	                            xor esi, esi	      3525	sd.c	FUNCTION_86	IF_3	CALL_3
0x400265d	          0x4889df	                            mov rdi, rbx	      3525	sd.c	FUNCTION_86	IF_3	CALL_3
0x4002660	      0xe81bfbffff	                  call sym.sd_sync_cache	      3525	sd.c	FUNCTION_86	IF_3	CALL_3
0x4002665	    0x833d00000000	               cmp dword [0x0400266c], 5	      3528	sd.c	FUNCTION_86	IF_4
0x400266c	            0x7448	                            je 0x40026b6	      3528	sd.c	FUNCTION_86	IF_4
0x400266e	        0x488b7308	                mov rsi, qword [rbx + 8]	      3528	sd.c	FUNCTION_86	IF_4
0x4002672	    0xf6861b010000	              test byte [rsi + 0x11b], 8	      3528	sd.c	FUNCTION_86	IF_4
0x4002679	            0x743b	                            je 0x40026b6	      3528	sd.c	FUNCTION_86	IF_4
0x400267b	    0x488b93e00200	           mov rdx, qword [rbx + 0x2e0] 	      3529	sd.c	FUNCTION_86	IF_4
0x4002682	          0x4885d2	                           test rdx, rdx	      3529	sd.c	FUNCTION_86	IF_4
0x4002685	            0x7431	                            je 0x40026b8	      3529	sd.c	FUNCTION_86	IF_4
0x4002687	        0x4883c20c	                            add rdx, 0xc	      3529	sd.c	FUNCTION_86	IF_4
0x400268b	    0x48c7c1000000	                              mov rcx, 0	      3529	sd.c	FUNCTION_86	IF_4
0x4002692	    0x48c7c7000000	                              mov rdi, 0	      3529	sd.c	FUNCTION_86	IF_4
0x4002699	      0xe800000000	                          call 0x400269e	      3529	sd.c	FUNCTION_86	IF_4
0x400269e	          0x4889df	                            mov rdi, rbx	      3530	sd.c	FUNCTION_86	IF_4	CALL_4
0x40026a1	            0x31f6	                            xor esi, esi	      3530	sd.c	FUNCTION_86	IF_4	CALL_4
0x40026a3	              0x5b	                                 pop rbx	      3532	sd.c	FUNCTION_86
0x40026a4	      0xe957fcffff	            jmp sym.sd_start_stop_device	      3530	sd.c	FUNCTION_86	IF_4	CALL_4
0x40026a9	    0xf68790010000	              test byte [rdi + 0x190], 7	        81	pm_runtime.h	FUNCTION_364
0x40026b0	     0xf8568ffffff	                           jne 0x400261e	        81	pm_runtime.h	FUNCTION_364
0x40026b6	              0x5b	                                 pop rbx	      3532	sd.c	FUNCTION_86
0x40026b7	              0xc3	                                     ret	      3532	sd.c	FUNCTION_86
0x40026b8	    0x48c7c1000000	                              mov rcx, 0	      3529	sd.c	FUNCTION_86	IF_4
0x40026bf	            0x31d2	                            xor edx, edx	      3529	sd.c	FUNCTION_86	IF_4
0x40026c1	    0x48c7c7000000	                              mov rdi, 0	      3529	sd.c	FUNCTION_86	IF_4
0x40026c8	      0xe800000000	                          call 0x40026cd	      3529	sd.c	FUNCTION_86	IF_4
0x40026cd	            0xebcf	                           jmp 0x400269e	      3529	sd.c	FUNCTION_86	IF_4
0x40026cf	        0x488b7308	                mov rsi, qword [rbx + 8]	      3524	sd.c	FUNCTION_86	IF_3
0x40026d3	    0x48c7c1000000	                              mov rcx, 0	      3524	sd.c	FUNCTION_86	IF_3
0x40026da	            0x31d2	                            xor edx, edx	      3524	sd.c	FUNCTION_86	IF_3
0x40026dc	    0x48c7c7000000	                              mov rdi, 0	      3524	sd.c	FUNCTION_86	IF_3
0x40026e3	      0xe800000000	                          call 0x40026e8	      3524	sd.c	FUNCTION_86	IF_3
0x40026e8	      0xe96effffff	                           jmp 0x400265b	      3524	sd.c	FUNCTION_86	IF_3
read_capacity_error	ELSE,1:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,3:functions,0:IF,2	54
0x4000b20	    0x41f7c0000000	                  test r8d, section_end.	      2227	sd.c	FUNCTION_62	IF_1	CALL_1
0x4000b27	            0x4155	                                push r13	      2226	sd.c	FUNCTION_62
0x4000b29	          0x4989f5	                            mov r13, rsi	      2226	sd.c	FUNCTION_62
0x4000b2c	            0x4154	                                push r12	      2226	sd.c	FUNCTION_62
0x4000b2e	          0x4989d4	                            mov r12, rdx	      2226	sd.c	FUNCTION_62
0x4000b31	              0x55	                                push rbp	      2226	sd.c	FUNCTION_62
0x4000b32	            0x89cd	                            mov ebp, ecx	      2226	sd.c	FUNCTION_62
0x4000b34	              0x53	                                push rbx	      2226	sd.c	FUNCTION_62
0x4000b35	          0x4889fb	                            mov rbx, rdi	      2226	sd.c	FUNCTION_62
0x4000b38	            0x744b	                            je 0x4000b85	      2227	sd.c	FUNCTION_62	IF_1	CALL_1
0x4000b3a	    0x488b93e00200	           mov rdx, qword [rbx + 0x2e0] 	      2227	sd.c	FUNCTION_62	IF_1	CALL_1
0x4000b41	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2227	sd.c	FUNCTION_62	IF_1	CALL_1
0x4000b45	      0xbe00000000	                              mov esi, 0	      3695	sd.c	FUNCTION_93	CALL_1
0x4000b4a	        0x488d420c	                    lea rax, [rdx + 0xc]	      3695	sd.c	FUNCTION_93	CALL_1
0x4000b4e	          0x4885d2	                           test rdx, rdx	      3695	sd.c	FUNCTION_93	CALL_1
0x4000b51	          0x4c89e2	                            mov rdx, r12	      3695	sd.c	FUNCTION_93	CALL_1
0x4000b54	        0x480f45f0	                         cmovne rsi, rax	      3695	sd.c	FUNCTION_93	CALL_1
0x4000b58	      0xe800000000	                          call 0x4000b5d	      3695	sd.c	FUNCTION_93	CALL_1
0x4000b5d	            0x85ed	                           test ebp, ebp	      2236	sd.c	FUNCTION_62	IF_2
0x4000b5f	            0x7412	                            je 0x4000b73	      2236	sd.c	FUNCTION_62	IF_2
0x4000b61	    0x41f685180100	              test byte [r13 + 0x118], 1	      2236	sd.c	FUNCTION_62	IF_2
0x4000b69	            0x7408	                            je 0x4000b73	      2236	sd.c	FUNCTION_62	IF_2
0x4000b6b	    0x41807c240102	                   cmp byte [r12 + 1], 2	      2237	sd.c	FUNCTION_62	IF_2
0x4000b71	            0x743b	                            je 0x4000bae	      2237	sd.c	FUNCTION_62	IF_2
0x4000b73	    0x48c783f80200	              mov qword [rbx + 0x2f8], 0	      2245	sd.c	FUNCTION_62
0x4000b7e	              0x5b	                                 pop rbx	      2246	sd.c	FUNCTION_62
0x4000b7f	              0x5d	                                 pop rbp	      2246	sd.c	FUNCTION_62
0x4000b80	            0x415c	                                 pop r12	      2246	sd.c	FUNCTION_62
0x4000b82	            0x415d	                                 pop r13	      2246	sd.c	FUNCTION_62
0x4000b84	              0xc3	                                     ret	      2246	sd.c	FUNCTION_62
0x4000b85	    0x488b97e00200	           mov rdx, qword [rdi + 0x2e0] 	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000b8c	          0x4885d2	                           test rdx, rdx	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000b8f	            0x7447	                            je 0x4000bd8	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000b91	        0x488b7708	                mov rsi, qword [rdi + 8]	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000b95	        0x4883c20c	                            add rdx, 0xc	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000b99	    0x48c7c1000000	                              mov rcx, 0	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000ba0	    0x48c7c7000000	                              mov rdi, 0	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000ba7	      0xe800000000	                          call 0x4000bac	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000bac	            0xebaf	                           jmp 0x4000b5d	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000bae	    0x80bb28030000	               cmp byte [rbx + 0x328], 0	      1501	sd.c	FUNCTION_43	IF_1
0x4000bb5	            0x740b	                            je 0x4000bc2	      1501	sd.c	FUNCTION_43	IF_1
0x4000bb7	        0x488b4308	                mov rax, qword [rbx + 8]	      1502	sd.c	FUNCTION_43	IF_1
0x4000bbb	    0x808818010000	                or byte [rax + 0x118], 2	      1502	sd.c	FUNCTION_43	IF_1
0x4000bc2	        0x488b4308	                mov rax, qword [rbx + 8]	      1504	sd.c	FUNCTION_43	IF_2
0x4000bc6	    0xf68018010000	              test byte [rax + 0x118], 1	      1504	sd.c	FUNCTION_43	IF_2
0x4000bcd	            0x74a4	                            je 0x4000b73	      1504	sd.c	FUNCTION_43	IF_2
0x4000bcf	    0xc68328030000	               mov byte [rbx + 0x328], 0	      1505	sd.c	FUNCTION_43	IF_2
0x4000bd6	            0xeb9b	                           jmp 0x4000b73	      1505	sd.c	FUNCTION_43	IF_2
0x4000bd8	        0x488b7708	                mov rsi, qword [rdi + 8]	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000bdc	    0x48c7c1000000	                              mov rcx, 0	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000be3	            0x31d2	                            xor edx, edx	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000be5	    0x48c7c7000000	                              mov rdi, 0	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000bec	      0xe800000000	                          call 0x4000bf1	      2230	sd.c	FUNCTION_62	ELSE_1
0x4000bf1	      0xe967ffffff	                           jmp 0x4000b5d	      2230	sd.c	FUNCTION_62	ELSE_1
exit_sd	ELSE,0:SWITCH,0:WHILE,0:FOR,1:DO,0:CALL,10:functions,0:IF,0	24
0x4000040	            0x31c0	                            xor eax, eax	       583	sd.c	FUNCTION_22
0x4000042	              0xc3	                                     ret	       583	sd.c	FUNCTION_22
0x4000043	           0xf1f00	                         nop dword [rax]	       583	sd.c	FUNCTION_22
0x4000046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       583	sd.c	FUNCTION_22
0x4000050	    0x488b87280100	           mov rax, qword [rdi + 0x128] 	      1821	sd.c	FUNCTION_56	CALL_1
0x4000057	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1821	sd.c	FUNCTION_56	CALL_1
0x400005e	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	      1821	sd.c	FUNCTION_56	CALL_1
0x4000065	    0x80a02f030000	            and byte [rax + 0x32f], 0xef	      1824	sd.c	FUNCTION_56
0x400006c	              0xc3	                                     ret	      1824	sd.c	FUNCTION_56
0x400006d	           0xf1f00	                         nop dword [rax]	      1824	sd.c	FUNCTION_56
0x4000070	    0x488b87c80300	           mov rax, qword [rdi + 0x3c8] 	      3178	sd.c	FUNCTION_79	CALL_1
0x4000077	        0x488b7808	                mov rdi, qword [rax + 8]	      3178	sd.c	FUNCTION_79	CALL_1
0x400007b	          0x488b07	                    mov rax, qword [rdi]	      3180	sd.c	FUNCTION_79	IF_1
0x400007e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3180	sd.c	FUNCTION_79	IF_1
0x4000085	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3180	sd.c	FUNCTION_79	IF_1
0x400008c	          0x4885c0	                           test rax, rax	      3180	sd.c	FUNCTION_79	IF_1
0x400008f	            0x7405	                            je 0x4000096	      3180	sd.c	FUNCTION_79	IF_1
0x4000091	      0xe900000000	                           jmp 0x4000096	      3181	sd.c	FUNCTION_79	CALL_2
0x4000096	            0xf3c3	                                     ret	      3181	sd.c	FUNCTION_79	CALL_2
0x4000098	     0xf1f84000000	                   nop dword [rax + rax]	      3181	sd.c	FUNCTION_79	CALL_2
0x40000a0	              0x55	                                push rbp	      3458	sd.c	FUNCTION_84
0x40000a1	              0x53	                                push rbx	      3458	sd.c	FUNCTION_84
0x40000a2	              0x48	                                 invalid	      3458	sd.c	FUNCTION_84
0x40000a3	              0x89	                                 invalid	      3458	sd.c	FUNCTION_84
sd_pr_clear	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	6
0x4000ff0	          0x4889f2	                            mov rdx, rsi	      1780	sd.c	FUNCTION_55
0x4000ff3	          0x4531c9	                            xor r9d, r9d	      1781	sd.c	FUNCTION_55	CALL_1
0x4000ff6	          0x4531c0	                            xor r8d, r8d	      1781	sd.c	FUNCTION_55	CALL_1
0x4000ff9	            0x31c9	                            xor ecx, ecx	      1781	sd.c	FUNCTION_55	CALL_1
0x4000ffb	      0xbe03000000	                              mov esi, 3	      1781	sd.c	FUNCTION_55	CALL_1
0x4001000	      0xe9dbfeffff	                   jmp sym.sd_pr_command	      1781	sd.c	FUNCTION_55	CALL_1
sd_start_stop_device	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,6:functions,0:IF,7	81
0x4002300	              0x55	                                push rbp	      3474	sd.c	FUNCTION_85
0x4002301	              0x53	                                push rbx	      3474	sd.c	FUNCTION_85
0x4002302	          0x4889fb	                            mov rbx, rdi	      3474	sd.c	FUNCTION_85
0x4002305	        0x4883ec20	                           sub rsp, 0x20	      3474	sd.c	FUNCTION_85
0x4002309	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3477	sd.c	FUNCTION_85
0x400230d	    0x65488b042528	                mov rax, qword gs:[0x28]	      3474	sd.c	FUNCTION_85
0x4002316	      0x4889442418	             mov qword [rsp + 0x18], rax	      3474	sd.c	FUNCTION_85
0x400231b	            0x31c0	                            xor eax, eax	      3474	sd.c	FUNCTION_85
0x400231d	            0x31c0	                            xor eax, eax	      3475	sd.c	FUNCTION_85
0x400231f	            0x85f6	                           test esi, esi	      3480	sd.c	FUNCTION_85	IF_1
0x4002321	    0xc74424120000	               mov dword [rsp + 0x12], 0	      3475	sd.c	FUNCTION_85
0x4002329	      0x6689442416	               mov word [rsp + 0x16], ax	      3475	sd.c	FUNCTION_85
0x400232e	      0xc64424121b	            mov byte [rsp + 0x12], 0x1b 	      3475	sd.c	FUNCTION_85
0x4002333	     0xf8480000000	                            je 0x40023b9	      3480	sd.c	FUNCTION_85	IF_1
0x4002339	    0xf6871b010000	          test byte [rdi + 0x11b], 0x10 	      3483	sd.c	FUNCTION_85	IF_2
0x4002340	      0xc644241601	                mov byte [rsp + 0x16], 1	      3481	sd.c	FUNCTION_85	IF_1
0x4002345	      0xb811000000	                           mov eax, 0x11	      3483	sd.c	FUNCTION_85	IF_2
0x400234a	            0x757b	                           jne 0x40023c7	      3483	sd.c	FUNCTION_85	IF_2
0x400234c	    0x8b8790070000	           mov eax, dword [rdi + 0x790] 	      3483	sd.c	FUNCTION_85	IF_2
0x4002352	          0x8d50fa	                      lea edx, [rax - 6]	      3486	sd.c	FUNCTION_85	IF_3	CALL_1
0x4002355	          0x83fa01	                              cmp edx, 1	      3486	sd.c	FUNCTION_85	IF_3	CALL_1
0x4002358	     0xf86e3000000	                           jbe 0x4002441	      3486	sd.c	FUNCTION_85	IF_3	CALL_1
0x400235e	          0x83f804	                              cmp eax, 4	      3486	sd.c	FUNCTION_85	IF_3	CALL_1
0x4002361	     0xf84da000000	                            je 0x4002441	      3486	sd.c	FUNCTION_85	IF_3	CALL_1
0x4002367	            0x6a00	                                  push 0	      3489	sd.c	FUNCTION_85	CALL_2
0x4002369	      0x6800800000	                             push 0x8000	      3489	sd.c	FUNCTION_85	CALL_2
0x400236e	          0x4531c9	                            xor r9d, r9d	      3489	sd.c	FUNCTION_85	CALL_2
0x4002371	            0x6a00	                                  push 0	      3489	sd.c	FUNCTION_85	CALL_2
0x4002373	            0x6a05	                                  push 5	      3489	sd.c	FUNCTION_85	CALL_2
0x4002375	          0x4531c0	                            xor r8d, r8d	      3489	sd.c	FUNCTION_85	CALL_2
0x4002378	      0x6830750000	                             push 0x7530	      3489	sd.c	FUNCTION_85	CALL_2
0x400237d	            0x31c9	                            xor ecx, ecx	      3489	sd.c	FUNCTION_85	CALL_2
0x400237f	      0xba03000000	                              mov edx, 3	      3489	sd.c	FUNCTION_85	CALL_2
0x4002384	      0x488d6c2432	                   lea rbp, [rsp + 0x32]	      3489	sd.c	FUNCTION_85	CALL_2
0x4002389	              0x55	                                push rbp	      3489	sd.c	FUNCTION_85	CALL_2
0x400238a	      0x488d742442	                   lea rsi, [rsp + 0x42]	      3489	sd.c	FUNCTION_85	CALL_2
0x400238f	      0xe800000000	                          call 0x4002394	      3489	sd.c	FUNCTION_85	CALL_2
0x4002394	        0x4883c430	                           add rsp, 0x30	      3491	sd.c	FUNCTION_85	IF_4
0x4002398	            0x85c0	                           test eax, eax	      3491	sd.c	FUNCTION_85	IF_4
0x400239a	            0x7534	                           jne 0x40023d0	      3491	sd.c	FUNCTION_85	IF_4
0x400239c	            0x31c0	                            xor eax, eax	      3505	sd.c	FUNCTION_85
0x400239e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3506	sd.c	FUNCTION_85
0x40023a3	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      3506	sd.c	FUNCTION_85
0x40023ac	     0xf8599000000	                           jne 0x400244b	      3506	sd.c	FUNCTION_85
0x40023b2	        0x4883c420	                           add rsp, 0x20	      3506	sd.c	FUNCTION_85
0x40023b6	              0x5b	                                 pop rbx	      3506	sd.c	FUNCTION_85
0x40023b7	              0x5d	                                 pop rbp	      3506	sd.c	FUNCTION_85
0x40023b8	              0xc3	                                     ret	      3506	sd.c	FUNCTION_85
0x40023b9	    0xf6871b010000	          test byte [rdi + 0x11b], 0x10 	      3483	sd.c	FUNCTION_85	IF_2
0x40023c0	            0x748a	                            je 0x400234c	      3483	sd.c	FUNCTION_85	IF_2
0x40023c2	      0xb830000000	                           mov eax, 0x30	      3483	sd.c	FUNCTION_85	IF_2
0x40023c7	        0x88442416	               mov byte [rsp + 0x16], al	      3484	sd.c	FUNCTION_85	IF_2
0x40023cb	      0xe97cffffff	                           jmp 0x400234c	      3484	sd.c	FUNCTION_85	IF_2
0x40023d0	    0x488db3e00200	                  lea rsi, [rbx + 0x2e0]	      3484	sd.c	FUNCTION_85	IF_2
0x40023d7	        0x488d7b08	                      lea rdi, [rbx + 8]	      3484	sd.c	FUNCTION_85	IF_2
0x40023db	            0x89c1	                            mov ecx, eax	      3492	sd.c	FUNCTION_85	IF_4	CALL_3
0x40023dd	    0x48c7c2000000	                              mov rdx, 0	      3492	sd.c	FUNCTION_85	IF_4	CALL_3
0x40023e4	        0x89442404	                mov dword [rsp + 4], eax	      3492	sd.c	FUNCTION_85	IF_4	CALL_3
0x40023e8	      0xe883fcffff	        call sym.sd_print_result.isra.43	      3492	sd.c	FUNCTION_85	IF_4	CALL_3
0x40023ed	        0x8b442404	                mov eax, dword [rsp + 4]	      3493	sd.c	FUNCTION_85	IF_4	IF_5	CALL_4
0x40023f1	      0xa900000008	                  test eax, section_end.	      3493	sd.c	FUNCTION_85	IF_4	IF_5	CALL_4
0x40023f6	            0x7423	                            je 0x400241b	      3493	sd.c	FUNCTION_85	IF_4	IF_5	CALL_4
0x40023f8	    0x488b93e00200	           mov rdx, qword [rbx + 0x2e0] 	      3493	sd.c	FUNCTION_85	IF_4	IF_5	CALL_4
0x40023ff	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3493	sd.c	FUNCTION_85	IF_4	IF_5	CALL_4
0x4002403	      0xbe00000000	                              mov esi, 0	      3695	sd.c	FUNCTION_93	CALL_1
0x4002408	        0x488d420c	                    lea rax, [rdx + 0xc]	      3695	sd.c	FUNCTION_93	CALL_1
0x400240c	          0x4885d2	                           test rdx, rdx	      3695	sd.c	FUNCTION_93	CALL_1
0x400240f	          0x4889ea	                            mov rdx, rbp	      3695	sd.c	FUNCTION_93	CALL_1
0x4002412	        0x480f45f0	                         cmovne rsi, rax	      3695	sd.c	FUNCTION_93	CALL_1
0x4002416	      0xe800000000	                          call 0x400241b	      3695	sd.c	FUNCTION_93	CALL_1
0x400241b	       0xfb654240a	            movzx edx, byte [rsp + 0xa] 	      3495	sd.c	FUNCTION_85	IF_4	IF_6	CALL_6
0x4002420	      0xb8fbffffff	                     mov eax, 0xfffffffb	      3503	sd.c	FUNCTION_85	IF_7
0x4002425	          0x83e270	                           and edx, 0x70	      3495	sd.c	FUNCTION_85	IF_4	IF_6	CALL_6
0x4002428	          0x80fa70	                            cmp dl, 0x70	      3495	sd.c	FUNCTION_85	IF_4	IF_6	CALL_6
0x400242b	     0xf856dffffff	                           jne 0x400239e	      3495	sd.c	FUNCTION_85	IF_4	IF_6	CALL_6
0x4002431	      0x807c240c3a	              cmp byte [rsp + 0xc], 0x3a	      3495	sd.c	FUNCTION_85	IF_4	IF_6	CALL_6
0x4002436	     0xf8562ffffff	                           jne 0x400239e	      3495	sd.c	FUNCTION_85	IF_4	IF_6	CALL_6
0x400243c	      0xe95bffffff	                           jmp 0x400239c	      3495	sd.c	FUNCTION_85	IF_4	IF_6	CALL_6
0x4002441	      0xb8edffffff	                     mov eax, 0xffffffed	      3487	sd.c	FUNCTION_85	IF_3
0x4002446	      0xe953ffffff	                           jmp 0x400239e	      3487	sd.c	FUNCTION_85	IF_3
0x400244b	      0xe800000000	              call sym.sd_suspend_common	      3506	sd.c	FUNCTION_85
sd_ioctl	ELSE,0:SWITCH,1:WHILE,0:FOR,0:DO,0:CALL,9:functions,0:IF,4	50
0x4001180	            0x4156	                                push r14	      1450	sd.c	FUNCTION_42
0x4001182	            0x4155	                                push r13	      1450	sd.c	FUNCTION_42
0x4001184	          0x4189f5	                           mov r13d, esi	      1450	sd.c	FUNCTION_42
0x4001187	            0x4154	                                push r12	      1450	sd.c	FUNCTION_42
0x4001189	              0x55	                                push rbp	      1450	sd.c	FUNCTION_42
0x400118a	            0x89d6	                            mov esi, edx	      1460	sd.c	FUNCTION_42	CALL_3
0x400118c	              0x53	                                push rbx	      1450	sd.c	FUNCTION_42
0x400118d	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1450	sd.c	FUNCTION_42
0x4001194	          0x4989fe	                            mov r14, rdi	      1450	sd.c	FUNCTION_42
0x4001197	            0x89d3	                            mov ebx, edx	      1450	sd.c	FUNCTION_42
0x4001199	          0x4989cc	                            mov r12, rcx	      1450	sd.c	FUNCTION_42
0x400119c	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	      1453	sd.c	FUNCTION_42
0x40011a3	        0x488b6808	                mov rbp, qword [rax + 8]	      1453	sd.c	FUNCTION_42
0x40011a7	      0xe800000000	                          call 0x40011ac	      1460	sd.c	FUNCTION_42	CALL_3
0x40011ac	            0x85c0	                           test eax, eax	      1461	sd.c	FUNCTION_42	IF_1
0x40011ae	            0x783c	                            js 0x40011ec	      1461	sd.c	FUNCTION_42	IF_1
0x40011b0	          0x4489ea	                           mov edx, r13d	      1470	sd.c	FUNCTION_42	CALL_4
0x40011b3	            0x89de	                            mov esi, ebx	      1470	sd.c	FUNCTION_42	CALL_4
0x40011b5	          0x4889ef	                            mov rdi, rbp	      1470	sd.c	FUNCTION_42	CALL_4
0x40011b8	          0xc1ea06	                              shr edx, 6	      1470	sd.c	FUNCTION_42	CALL_4
0x40011bb	          0x83e201	                              and edx, 1	      1470	sd.c	FUNCTION_42	CALL_4
0x40011be	      0xe800000000	                          call 0x40011c3	      1470	sd.c	FUNCTION_42	CALL_4
0x40011c3	            0x85c0	                           test eax, eax	      1472	sd.c	FUNCTION_42	IF_2
0x40011c5	            0x7525	                           jne 0x40011ec	      1472	sd.c	FUNCTION_42	IF_2
0x40011c7	    0x81fb82530000	                         cmp ebx, 0x5382	      1483	sd.c	FUNCTION_42	SWITCH_1
0x40011cd	            0x7426	                            je 0x40011f5	      1483	sd.c	FUNCTION_42	SWITCH_1
0x40011cf	    0x81fb86530000	                         cmp ebx, 0x5386	      1483	sd.c	FUNCTION_42	SWITCH_1
0x40011d5	            0x741e	                            je 0x40011f5	      1483	sd.c	FUNCTION_42	SWITCH_1
0x40011d7	          0x4c89e1	                            mov rcx, r12	      1489	sd.c	FUNCTION_42	SWITCH_1	CALL_8
0x40011da	            0x89da	                            mov edx, ebx	      1489	sd.c	FUNCTION_42	SWITCH_1	CALL_8
0x40011dc	          0x4489ee	                           mov esi, r13d	      1489	sd.c	FUNCTION_42	SWITCH_1	CALL_8
0x40011df	          0x4c89f7	                            mov rdi, r14	      1489	sd.c	FUNCTION_42	SWITCH_1	CALL_8
0x40011e2	      0xe800000000	                          call 0x40011e7	      1489	sd.c	FUNCTION_42	SWITCH_1	CALL_8
0x40011e7	          0x83f8e7	             cmp eax, 0xffffffffffffffe7	      1490	sd.c	FUNCTION_42	SWITCH_1	IF_4
0x40011ea	            0x7409	                            je 0x40011f5	      1490	sd.c	FUNCTION_42	SWITCH_1	IF_4
0x40011ec	              0x5b	                                 pop rbx	      1497	sd.c	FUNCTION_42
0x40011ed	              0x5d	                                 pop rbp	      1497	sd.c	FUNCTION_42
0x40011ee	            0x415c	                                 pop r12	      1497	sd.c	FUNCTION_42
0x40011f0	            0x415d	                                 pop r13	      1497	sd.c	FUNCTION_42
0x40011f2	            0x415e	                                 pop r14	      1497	sd.c	FUNCTION_42
0x40011f4	              0xc3	                                     ret	      1497	sd.c	FUNCTION_42
0x40011f5	          0x4c89e2	                            mov rdx, r12	      1492	sd.c	FUNCTION_42	SWITCH_1	CALL_9
0x40011f8	            0x89de	                            mov esi, ebx	      1492	sd.c	FUNCTION_42	SWITCH_1	CALL_9
0x40011fa	          0x4889ef	                            mov rdi, rbp	      1492	sd.c	FUNCTION_42	SWITCH_1	CALL_9
0x40011fd	              0x5b	                                 pop rbx	      1497	sd.c	FUNCTION_42
0x40011fe	              0x5d	                                 pop rbp	      1497	sd.c	FUNCTION_42
0x40011ff	            0x415c	                                 pop r12	      1497	sd.c	FUNCTION_42
0x4001201	            0x415d	                                 pop r13	      1497	sd.c	FUNCTION_42
0x4001203	            0x415e	                                 pop r14	      1497	sd.c	FUNCTION_42
0x4001205	      0xe900000000	                           jmp 0x400120a	      1492	sd.c	FUNCTION_42	SWITCH_1	CALL_9
cache_type_store	ELSE,1:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,9:functions,0:IF,7	134
0x4000790	            0x4157	                                push r15	       158	sd.c	FUNCTION_2
0x4000792	            0x4156	                                push r14	       158	sd.c	FUNCTION_2
0x4000794	            0x4155	                                push r13	       158	sd.c	FUNCTION_2
0x4000796	            0x4154	                                push r12	       158	sd.c	FUNCTION_2
0x4000798	          0x4989cc	                            mov r12, rcx	       158	sd.c	FUNCTION_2
0x400079b	              0x55	                                push rbp	       158	sd.c	FUNCTION_2
0x400079c	              0x53	                                push rbx	       158	sd.c	FUNCTION_2
0x400079d	          0x4889fd	                            mov rbp, rdi	       158	sd.c	FUNCTION_2
0x40007a0	        0x4883ec60	                           sub rsp, 0x60	       158	sd.c	FUNCTION_2
0x40007a4	        0x4c8b6ff8	                mov r13, qword [rdi - 8]	       161	sd.c	FUNCTION_2
0x40007a8	    0x65488b042528	                mov rax, qword gs:[0x28]	       158	sd.c	FUNCTION_2
0x40007b1	      0x4889442458	             mov qword [rsp + 0x58], rax	       158	sd.c	FUNCTION_2
0x40007b6	            0x31c0	                            xor eax, eax	       158	sd.c	FUNCTION_2
0x40007b8	    0x410fb685a000	           movzx eax, byte [r13 + 0xa0] 	       169	sd.c	FUNCTION_2	IF_1
0x40007c0	            0x84c0	                             test al, al	       169	sd.c	FUNCTION_2	IF_1
0x40007c2	            0x7408	                            je 0x40007cc	       169	sd.c	FUNCTION_2	IF_1
0x40007c4	            0x3c14	                            cmp al, 0x14	       169	sd.c	FUNCTION_2	IF_1
0x40007c6	     0xf8526010000	                           jne 0x40008f2	       169	sd.c	FUNCTION_2	IF_1
0x40007cc	      0xb90a000000	                            mov ecx, 0xa	       175	sd.c	FUNCTION_2	IF_2	CALL_1
0x40007d1	    0x48c7c7000000	                              mov rdi, 0	       175	sd.c	FUNCTION_2	IF_2	CALL_1
0x40007d8	          0x4889d6	                            mov rsi, rdx	       175	sd.c	FUNCTION_2	IF_2	CALL_1
0x40007db	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       175	sd.c	FUNCTION_2	IF_2	CALL_1
0x40007dd	     0xf8439010000	                            je 0x400091c	       175	sd.c	FUNCTION_2	IF_2	CALL_1
0x40007e3	    0x80a51d030000	            and byte [rbp + 0x31d], 0xfd	       179	sd.c	FUNCTION_2	ELSE_1
0x40007ea	      0xbe04000000	                              mov esi, 4	       182	sd.c	FUNCTION_2	CALL_2
0x40007ef	    0x48c7c7000000	                              mov rdi, 0	       182	sd.c	FUNCTION_2	CALL_2
0x40007f6	      0xe800000000	                          call 0x40007fb	       182	sd.c	FUNCTION_2	CALL_2
0x40007fb	            0x85c0	                           test eax, eax	       183	sd.c	FUNCTION_2	IF_3
0x40007fd	            0x89c3	                            mov ebx, eax	       182	sd.c	FUNCTION_2	CALL_2
0x40007ff	     0xf88ed000000	                            js 0x40008f2	       183	sd.c	FUNCTION_2	IF_3
0x4000805	          0x4531f6	                          xor r14d, r14d	       187	sd.c	FUNCTION_2
0x4000808	            0xa802	                              test al, 2	       187	sd.c	FUNCTION_2
0x400080a	            0x740e	                            je 0x400081a	       187	sd.c	FUNCTION_2
0x400080c	          0x4531f6	                          xor r14d, r14d	       187	sd.c	FUNCTION_2
0x400080f	    0x80bd19030000	               cmp byte [rbp + 0x319], 0	       187	sd.c	FUNCTION_2
0x4000816	        0x410f94c6	                               sete r14b	       187	sd.c	FUNCTION_2
0x400081a	     0xfb6851d0300	          movzx eax, byte [rbp + 0x31d] 	       189	sd.c	FUNCTION_2	IF_4
0x4000821	            0xa802	                              test al, 2	       189	sd.c	FUNCTION_2	IF_4
0x4000823	     0xf8503010000	                           jne 0x400092c	       189	sd.c	FUNCTION_2	IF_4
0x4000829	            0x6a00	                                  push 0	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x400082b	    0x41b930750000	                         mov r9d, 0x7530	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x4000831	    0x41b840000000	                           mov r8d, 0x40	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x4000837	      0xba08000000	                              mov edx, 8	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x400083c	      0xbe08000000	                              mov esi, 8	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x4000841	          0x4c89ef	                            mov rdi, r13	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x4000844	      0x4c8d7c2414	                   lea r15, [rsp + 0x14]	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x4000849	            0x4157	                                push r15	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x400084b	            0x6a05	                                  push 5	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x400084d	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x4000852	      0xe800000000	                          call 0x4000857	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x4000857	        0x4883c418	                           add rsp, 0x18	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x400085b	            0x85c0	                           test eax, eax	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x400085d	     0xf858f000000	                           jne 0x40008f2	       196	sd.c	FUNCTION_2	IF_5	CALL_4
0x4000863	       0xfb6542414	           movzx edx, byte [rsp + 0x14] 	       199	sd.c	FUNCTION_2	CALL_5
0x4000868	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	       199	sd.c	FUNCTION_2	CALL_5
0x400086d	      0xb908000000	                              mov ecx, 8	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x4000872	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	       199	sd.c	FUNCTION_2	CALL_5
0x4000877	      0xbe01000000	                              mov esi, 1	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x400087c	          0x4c89ef	                            mov rdi, r13	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x400087f	          0x4129d1	                            sub r9d, edx	       199	sd.c	FUNCTION_2	CALL_5
0x4000882	          0x4989d0	                             mov r8, rdx	       199	sd.c	FUNCTION_2	CALL_5
0x4000885	           0xfb7d0	                           movzx edx, ax	       199	sd.c	FUNCTION_2	CALL_5
0x4000888	          0x4129d1	                            sub r9d, edx	       199	sd.c	FUNCTION_2	CALL_5
0x400088b	      0xba40000000	                           mov edx, 0x40	       199	sd.c	FUNCTION_2	CALL_5
0x4000890	        0x4983f940	                            cmp r9, 0x40	       199	sd.c	FUNCTION_2	CALL_5
0x4000894	        0x4c0f47ca	                           cmova r9, rdx	       199	sd.c	FUNCTION_2	CALL_5
0x4000898	          0x4901c0	                             add r8, rax	       201	sd.c	FUNCTION_2
0x400089b	      0x488d442418	                   lea rax, [rsp + 0x18]	       201	sd.c	FUNCTION_2
0x40008a0	          0x83e301	                              and ebx, 1	       204	sd.c	FUNCTION_2
0x40008a3	        0x41c1e602	                             shl r14d, 2	       204	sd.c	FUNCTION_2
0x40008a7	          0x4901c0	                             add r8, rax	       201	sd.c	FUNCTION_2
0x40008aa	      0x410fb64002	                movzx eax, byte [r8 + 2]	       204	sd.c	FUNCTION_2
0x40008af	        0x410fbe10	                    movsx edx, byte [r8]	       205	sd.c	FUNCTION_2
0x40008b3	          0x83e0fa	                     and eax, 0xfffffffa	       204	sd.c	FUNCTION_2
0x40008b6	             0x9c3	                             or ebx, eax	       204	sd.c	FUNCTION_2
0x40008b8	            0x89d0	                            mov eax, edx	       206	sd.c	FUNCTION_2
0x40008ba	          0xc1ea1f	                           shr edx, 0x1f	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008bd	          0x4409f3	                            or ebx, r14d	       204	sd.c	FUNCTION_2
0x40008c0	          0x83e07f	                           and eax, 0x7f	       206	sd.c	FUNCTION_2
0x40008c3	        0x41885802	                   mov byte [r8 + 2], bl	       204	sd.c	FUNCTION_2
0x40008c7	      0x488d5c2404	                      lea rbx, [rsp + 4]	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008cc	          0x418800	                       mov byte [r8], al	       206	sd.c	FUNCTION_2
0x40008cf	              0x53	                                push rbx	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008d0	            0x4157	                                push r15	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008d2	            0x6a05	                                  push 5	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008d4	      0x6830750000	                             push 0x7530	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008d9	      0xe800000000	                          call 0x40008de	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008de	        0x4883c420	                           add rsp, 0x20	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008e2	            0x85c0	                           test eax, eax	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008e4	            0x7470	                            je 0x4000956	       208	sd.c	FUNCTION_2	IF_6	CALL_6
0x40008e6	       0xfb6442404	               movzx eax, byte [rsp + 4]	       210	sd.c	FUNCTION_2	IF_6	IF_7	CALL_7
0x40008eb	          0x83e070	                           and eax, 0x70	       210	sd.c	FUNCTION_2	IF_6	IF_7	CALL_7
0x40008ee	            0x3c70	                            cmp al, 0x70	       210	sd.c	FUNCTION_2	IF_6	IF_7	CALL_7
0x40008f0	            0x7475	                            je 0x4000967	       210	sd.c	FUNCTION_2	IF_6	IF_7	CALL_7
0x40008f2	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       212	sd.c	FUNCTION_2	IF_6
0x40008f9	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       216	sd.c	FUNCTION_2
0x40008fe	    0x654833342528	                xor rsi, qword gs:[0x28]	       216	sd.c	FUNCTION_2
0x4000907	     0xf8582000000	                           jne 0x400098f	       216	sd.c	FUNCTION_2
0x400090d	        0x4883c460	                           add rsp, 0x60	       216	sd.c	FUNCTION_2
0x4000911	              0x5b	                                 pop rbx	       216	sd.c	FUNCTION_2
0x4000912	              0x5d	                                 pop rbp	       216	sd.c	FUNCTION_2
0x4000913	            0x415c	                                 pop r12	       216	sd.c	FUNCTION_2
0x4000915	            0x415d	                                 pop r13	       216	sd.c	FUNCTION_2
0x4000917	            0x415e	                                 pop r14	       216	sd.c	FUNCTION_2
0x4000919	            0x415f	                                 pop r15	       216	sd.c	FUNCTION_2
0x400091b	              0xc3	                                     ret	       216	sd.c	FUNCTION_2
0x400091c	        0x4883c20a	                            add rdx, 0xa	       176	sd.c	FUNCTION_2	IF_2
0x4000920	    0x808d1d030000	                or byte [rbp + 0x31d], 2	       177	sd.c	FUNCTION_2	IF_2
0x4000927	      0xe9befeffff	                           jmp 0x40007ea	       177	sd.c	FUNCTION_2	IF_2
0x400092c	          0x83e301	                              and ebx, 1	       191	sd.c	FUNCTION_2	IF_4
0x400092f	        0x41c1e602	                             shl r14d, 2	       190	sd.c	FUNCTION_2	IF_4
0x4000933	          0x83e0f3	                     and eax, 0xfffffff3	       190	sd.c	FUNCTION_2	IF_4
0x4000936	    0x8d14dd000000	                        lea edx, [rbx*8]	       191	sd.c	FUNCTION_2	IF_4
0x400093d	          0x4409f0	                            or eax, r14d	       191	sd.c	FUNCTION_2	IF_4
0x4000940	        0x488d7df0	                   lea rdi, [rbp - 0x10]	       192	sd.c	FUNCTION_2	IF_4	CALL_3
0x4000944	             0x9d0	                             or eax, edx	       191	sd.c	FUNCTION_2	IF_4
0x4000946	    0x88851d030000	              mov byte [rbp + 0x31d], al	       191	sd.c	FUNCTION_2	IF_4
0x400094c	      0xe80ffeffff	              call sym.sd_set_flush_flag	       192	sd.c	FUNCTION_2	IF_4	CALL_3
0x4000951	          0x4c89e0	                            mov rax, r12	       193	sd.c	FUNCTION_2	IF_4
0x4000954	            0xeba3	                           jmp 0x40008f9	       193	sd.c	FUNCTION_2	IF_4
0x4000956	    0x488bbdd00200	           mov rdi, qword [rbp + 0x2d0] 	       214	sd.c	FUNCTION_2	CALL_9
0x400095d	      0xe800000000	                          call 0x4000962	       214	sd.c	FUNCTION_2	CALL_9
0x4000962	          0x4c89e0	                            mov rax, r12	       215	sd.c	FUNCTION_2
0x4000965	            0xeb92	                           jmp 0x40008f9	       215	sd.c	FUNCTION_2
0x4000967	    0x488b95d00200	           mov rdx, qword [rbp + 0x2d0] 	       215	sd.c	FUNCTION_2
0x400096e	        0x488b7df8	                mov rdi, qword [rbp - 8]	       215	sd.c	FUNCTION_2
0x4000972	      0xbe00000000	                              mov esi, 0	      3695	sd.c	FUNCTION_93	CALL_1
0x4000977	        0x488d420c	                    lea rax, [rdx + 0xc]	      3695	sd.c	FUNCTION_93	CALL_1
0x400097b	          0x4885d2	                           test rdx, rdx	      3695	sd.c	FUNCTION_93	CALL_1
0x400097e	          0x4889da	                            mov rdx, rbx	      3695	sd.c	FUNCTION_93	CALL_1
0x4000981	        0x480f45f0	                         cmovne rsi, rax	      3695	sd.c	FUNCTION_93	CALL_1
0x4000985	      0xe800000000	                          call 0x400098a	      3695	sd.c	FUNCTION_93	CALL_1
0x400098a	      0xe963ffffff	                           jmp 0x40008f2	      3695	sd.c	FUNCTION_93	CALL_1
0x400098f	      0xe800000000	                          call 0x4000994	       216	sd.c	FUNCTION_2
sd_check_events	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,10:functions,0:IF,6	80
0x40029b0	            0x4154	                                push r12	      1539	sd.c	FUNCTION_45
0x40029b2	              0x55	                                push rbp	      1539	sd.c	FUNCTION_45
0x40029b3	    0x4881c7c80300	                          add rdi, 0x3c8	      1539	sd.c	FUNCTION_45
0x40029ba	              0x53	                                push rbx	      1539	sd.c	FUNCTION_45
0x40029bb	        0x4883ec10	                           sub rsp, 0x10	      1539	sd.c	FUNCTION_45
0x40029bf	    0x65488b042528	                mov rax, qword gs:[0x28]	      1539	sd.c	FUNCTION_45
0x40029c8	      0x4889442408	                mov qword [rsp + 8], rax	      1539	sd.c	FUNCTION_45
0x40029cd	            0x31c0	                            xor eax, eax	      1539	sd.c	FUNCTION_45
0x40029cf	      0xe88cffffff	          call sym.scsi_disk_get.isra.44	      1540	sd.c	FUNCTION_45	CALL_1
0x40029d4	          0x4885c0	                           test rax, rax	      1544	sd.c	FUNCTION_45	IF_1
0x40029d7	     0xf8403010000	                            je 0x4002ae0	      1544	sd.c	FUNCTION_45	IF_1
0x40029dd	        0x4c8b6008	                mov r12, qword [rax + 8]	      1547	sd.c	FUNCTION_45
0x40029e1	          0x4889c3	                            mov rbx, rax	      1547	sd.c	FUNCTION_45
0x40029e4	    0x418b84249007	           mov eax, dword [r12 + 0x790] 	      1547	sd.c	FUNCTION_45
0x40029ec	          0x8d50fa	                      lea edx, [rax - 6]	      1556	sd.c	FUNCTION_45	IF_2	CALL_3
0x40029ef	          0x83fa01	                              cmp edx, 1	      1556	sd.c	FUNCTION_45	IF_2	CALL_3
0x40029f2	            0x7605	                           jbe 0x40029f9	      1556	sd.c	FUNCTION_45	IF_2	CALL_3
0x40029f4	          0x83f804	                              cmp eax, 4	      1556	sd.c	FUNCTION_45	IF_2	CALL_3
0x40029f7	            0x757c	                           jne 0x4002a75	      1556	sd.c	FUNCTION_45	IF_2	CALL_3
0x40029f9	    0x80bb28030000	               cmp byte [rbx + 0x328], 0	      1501	sd.c	FUNCTION_43	IF_1
0x4002a00	          0x4c89e0	                            mov rax, r12	      1501	sd.c	FUNCTION_43	IF_1
0x4002a03	            0x740d	                            je 0x4002a12	      1501	sd.c	FUNCTION_43	IF_1
0x4002a05	    0x41808c241801	                or byte [r12 + 0x118], 2	      1502	sd.c	FUNCTION_43	IF_1
0x4002a0e	        0x488b4308	                mov rax, qword [rbx + 8]	      1502	sd.c	FUNCTION_43	IF_1
0x4002a12	    0xf68018010000	              test byte [rax + 0x118], 1	      1504	sd.c	FUNCTION_43	IF_2
0x4002a19	            0x7546	                           jne 0x4002a61	      1504	sd.c	FUNCTION_43	IF_2
0x4002a1b	    0x410fb6942418	          movzx edx, byte [r12 + 0x118] 	      1600	sd.c	FUNCTION_45
0x4002a24	          0x4889df	                            mov rdi, rbx	      1602	sd.c	FUNCTION_45	CALL_10
0x4002a27	            0x89d0	                            mov eax, edx	      1600	sd.c	FUNCTION_45
0x4002a29	          0x83e2fd	                     and edx, 0xfffffffd	      1601	sd.c	FUNCTION_45
0x4002a2c	            0xd0e8	                               shr al, 1	      1600	sd.c	FUNCTION_45
0x4002a2e	    0x418894241801	              mov byte [r12 + 0x118], dl	      1601	sd.c	FUNCTION_45
0x4002a36	          0x83e001	                              and eax, 1	      1600	sd.c	FUNCTION_45
0x4002a39	            0x89c5	                            mov ebp, eax	      1600	sd.c	FUNCTION_45
0x4002a3b	      0xe8a0e6ffff	                  call sym.scsi_disk_put	      1602	sd.c	FUNCTION_45	CALL_10
0x4002a40	        0x400fb6c5	                          movzx eax, bpl	      1603	sd.c	FUNCTION_45
0x4002a44	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1604	sd.c	FUNCTION_45
0x4002a49	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1604	sd.c	FUNCTION_45
0x4002a52	     0xf85a4000000	                           jne 0x4002afc	      1604	sd.c	FUNCTION_45
0x4002a58	        0x4883c410	                           add rsp, 0x10	      1604	sd.c	FUNCTION_45
0x4002a5c	              0x5b	                                 pop rbx	      1604	sd.c	FUNCTION_45
0x4002a5d	              0x5d	                                 pop rbp	      1604	sd.c	FUNCTION_45
0x4002a5e	            0x415c	                                 pop r12	      1604	sd.c	FUNCTION_45
0x4002a60	              0xc3	                                     ret	      1604	sd.c	FUNCTION_45
0x4002a61	    0xc68328030000	               mov byte [rbx + 0x328], 0	      1505	sd.c	FUNCTION_43	IF_2
0x4002a68	    0x48c783f80200	              mov qword [rbx + 0x2f8], 0	      1506	sd.c	FUNCTION_43	IF_2
0x4002a73	            0xeba6	                           jmp 0x4002a1b	      1506	sd.c	FUNCTION_43	IF_2
0x4002a75	          0x4c89e7	                            mov rdi, r12	      1570	sd.c	FUNCTION_45	IF_3	CALL_5
0x4002a78	      0xe800000000	                          call 0x4002a7d	      1570	sd.c	FUNCTION_45	IF_3	CALL_5
0x4002a7d	            0x85c0	                           test eax, eax	      1570	sd.c	FUNCTION_45	IF_3	CALL_5
0x4002a7f	            0x751e	                           jne 0x4002a9f	      1570	sd.c	FUNCTION_45	IF_3	CALL_5
0x4002a81	    0x80bb28030000	               cmp byte [rbx + 0x328], 0	      1590	sd.c	FUNCTION_45	IF_6
0x4002a88	            0x7509	                           jne 0x4002a93	      1590	sd.c	FUNCTION_45	IF_6
0x4002a8a	    0x41808c241801	                or byte [r12 + 0x118], 2	      1591	sd.c	FUNCTION_45	IF_6
0x4002a93	    0xc68328030000	               mov byte [rbx + 0x328], 1	      1592	sd.c	FUNCTION_45
0x4002a9a	      0xe97cffffff	                           jmp 0x4002a1b	      1592	sd.c	FUNCTION_45
0x4002a9f	          0x4889e1	                            mov rcx, rsp	      1573	sd.c	FUNCTION_45	IF_3	CALL_6
0x4002aa2	      0xba05000000	                              mov edx, 5	      1573	sd.c	FUNCTION_45	IF_3	CALL_6
0x4002aa7	      0xbe30750000	                         mov esi, 0x7530	      1573	sd.c	FUNCTION_45	IF_3	CALL_6
0x4002aac	          0x4c89e7	                            mov rdi, r12	      1573	sd.c	FUNCTION_45	IF_3	CALL_6
0x4002aaf	    0x48c704240000	                      mov qword [rsp], 0	      1571	sd.c	FUNCTION_45	IF_3
0x4002ab7	      0xe800000000	                          call 0x4002abc	      1573	sd.c	FUNCTION_45	IF_3	CALL_6
0x4002abc	          0xc1f810	                           sar eax, 0x10	      1577	sd.c	FUNCTION_45	IF_3	IF_4	CALL_7
0x4002abf	            0x84c0	                             test al, al	      1577	sd.c	FUNCTION_45	IF_3	IF_4	CALL_7
0x4002ac1	            0x7424	                            je 0x4002ae7	      1577	sd.c	FUNCTION_45	IF_3	IF_4	CALL_7
0x4002ac3	    0x80bb28030000	               cmp byte [rbx + 0x328], 0	      1501	sd.c	FUNCTION_43	IF_1
0x4002aca	            0x740b	                            je 0x4002ad7	      1501	sd.c	FUNCTION_43	IF_1
0x4002acc	        0x488b4308	                mov rax, qword [rbx + 8]	      1502	sd.c	FUNCTION_43	IF_1
0x4002ad0	    0x808818010000	                or byte [rax + 0x118], 2	      1502	sd.c	FUNCTION_43	IF_1
0x4002ad7	        0x488b4308	                mov rax, qword [rbx + 8]	      1504	sd.c	FUNCTION_43	IF_2
0x4002adb	      0xe932ffffff	                           jmp 0x4002a12	      1504	sd.c	FUNCTION_43	IF_2
0x4002ae0	            0x31c0	                            xor eax, eax	      1545	sd.c	FUNCTION_45	IF_1
0x4002ae2	      0xe95dffffff	                           jmp 0x4002a44	      1545	sd.c	FUNCTION_45	IF_1
0x4002ae7	          0x4889e6	                            mov rsi, rsp	      1582	sd.c	FUNCTION_45	IF_3	IF_5	CALL_9
0x4002aea	          0x4889df	                            mov rdi, rbx	      1582	sd.c	FUNCTION_45	IF_3	IF_5	CALL_9
0x4002aed	      0xe8aef2ffff	              call sym.media_not_present	      1582	sd.c	FUNCTION_45	IF_3	IF_5	CALL_9
0x4002af2	            0x85c0	                           test eax, eax	      1582	sd.c	FUNCTION_45	IF_3	IF_5	CALL_9
0x4002af4	     0xf8521ffffff	                           jne 0x4002a1b	      1582	sd.c	FUNCTION_45	IF_3	IF_5	CALL_9
0x4002afa	            0xeb85	                           jmp 0x4002a81	      1582	sd.c	FUNCTION_45	IF_3	IF_5	CALL_9
0x4002afc	      0xe800000000	                          call 0x4002b01	      1604	sd.c	FUNCTION_45
sd_eh_reset	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	5
0x4000050	    0x488b87280100	           mov rax, qword [rdi + 0x128] 	      1821	sd.c	FUNCTION_56	CALL_1
0x4000057	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1821	sd.c	FUNCTION_56	CALL_1
0x400005e	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	      1821	sd.c	FUNCTION_56	CALL_1
0x4000065	    0x80a02f030000	            and byte [rax + 0x32f], 0xef	      1824	sd.c	FUNCTION_56
0x400006c	              0xc3	                                     ret	      1824	sd.c	FUNCTION_56
zeroing_mode_show	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,1:functions,0:IF,0	8
0x4000220	          0x4889d0	                            mov rax, rdx	       431	sd.c	FUNCTION_16
0x4000223	     0xfb6971c0300	          movzx edx, byte [rdi + 0x31c] 	       434	sd.c	FUNCTION_16	CALL_1
0x400022a	    0x48c7c6000000	                              mov rsi, 0	       434	sd.c	FUNCTION_16	CALL_1
0x4000231	          0x4889c7	                            mov rdi, rax	       434	sd.c	FUNCTION_16	CALL_1
0x4000234	    0x488b14d50000	                  mov rdx, qword [rdx*8]	       434	sd.c	FUNCTION_16	CALL_1
0x400023c	      0xe800000000	                          call 0x4000241	       434	sd.c	FUNCTION_16	CALL_1
0x4000241	            0x4898	                                    cdqe	       434	sd.c	FUNCTION_16	CALL_1
0x4000243	              0xc3	                                     ret	       435	sd.c	FUNCTION_16
manage_start_stop_store	ELSE,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,2:functions,0:IF,2	40
0x4000600	            0x4154	                                push r12	       231	sd.c	FUNCTION_4
0x4000602	              0x55	                                push rbp	       231	sd.c	FUNCTION_4
0x4000603	          0x4989d4	                            mov r12, rdx	       231	sd.c	FUNCTION_4
0x4000606	              0x53	                                push rbx	       231	sd.c	FUNCTION_4
0x4000607	          0x4889cd	                            mov rbp, rcx	       231	sd.c	FUNCTION_4
0x400060a	        0x4883ec10	                           sub rsp, 0x10	       231	sd.c	FUNCTION_4
0x400060e	        0x488b5ff8	                mov rbx, qword [rdi - 8]	       233	sd.c	FUNCTION_4
0x4000612	      0xbf15000000	                           mov edi, 0x15	       236	sd.c	FUNCTION_4	IF_1	CALL_1
0x4000617	    0x65488b042528	                mov rax, qword gs:[0x28]	       231	sd.c	FUNCTION_4
0x4000620	      0x4889442408	                mov qword [rsp + 8], rax	       231	sd.c	FUNCTION_4
0x4000625	            0x31c0	                            xor eax, eax	       231	sd.c	FUNCTION_4
0x4000627	      0xe800000000	                          call 0x400062c	       236	sd.c	FUNCTION_4	IF_1	CALL_1
0x400062c	            0x84c0	                             test al, al	       236	sd.c	FUNCTION_4	IF_1	CALL_1
0x400062e	    0x48c7c1f3ffff	             mov rcx, 0xfffffffffffffff3	       237	sd.c	FUNCTION_4	IF_1
0x4000635	            0x7431	                            je 0x4000668	       236	sd.c	FUNCTION_4	IF_1	CALL_1
0x4000637	      0x488d742407	                      lea rsi, [rsp + 7]	       239	sd.c	FUNCTION_4	IF_2	CALL_2
0x400063c	          0x4c89e7	                            mov rdi, r12	       239	sd.c	FUNCTION_4	IF_2	CALL_2
0x400063f	      0xe800000000	                          call 0x4000644	       239	sd.c	FUNCTION_4	IF_2	CALL_2
0x4000644	            0x85c0	                           test eax, eax	       239	sd.c	FUNCTION_4	IF_2	CALL_2
0x4000646	            0x753c	                           jne 0x4000684	       239	sd.c	FUNCTION_4	IF_2	CALL_2
0x4000648	       0xfb6442407	               movzx eax, byte [rsp + 7]	       242	sd.c	FUNCTION_4
0x400064d	     0xfb6931b0100	          movzx edx, byte [rbx + 0x11b] 	       242	sd.c	FUNCTION_4
0x4000654	          0x4889e9	                            mov rcx, rbp	       244	sd.c	FUNCTION_4
0x4000657	          0x83e001	                              and eax, 1	       242	sd.c	FUNCTION_4
0x400065a	          0x83e2f7	                     and edx, 0xfffffff7	       242	sd.c	FUNCTION_4
0x400065d	          0xc1e003	                              shl eax, 3	       242	sd.c	FUNCTION_4
0x4000660	             0x9d0	                             or eax, edx	       242	sd.c	FUNCTION_4
0x4000662	    0x88831b010000	              mov byte [rbx + 0x11b], al	       242	sd.c	FUNCTION_4
0x4000668	      0x488b742408	                mov rsi, qword [rsp + 8]	       245	sd.c	FUNCTION_4
0x400066d	    0x654833342528	                xor rsi, qword gs:[0x28]	       245	sd.c	FUNCTION_4
0x4000676	          0x4889c8	                            mov rax, rcx	       245	sd.c	FUNCTION_4
0x4000679	            0x7512	                           jne 0x400068d	       245	sd.c	FUNCTION_4
0x400067b	        0x4883c410	                           add rsp, 0x10	       245	sd.c	FUNCTION_4
0x400067f	              0x5b	                                 pop rbx	       245	sd.c	FUNCTION_4
0x4000680	              0x5d	                                 pop rbp	       245	sd.c	FUNCTION_4
0x4000681	            0x415c	                                 pop r12	       245	sd.c	FUNCTION_4
0x4000683	              0xc3	                                     ret	       245	sd.c	FUNCTION_4
0x4000684	    0x48c7c1eaffff	             mov rcx, 0xffffffffffffffea	       240	sd.c	FUNCTION_4	IF_2
0x400068b	            0xebdb	                           jmp 0x4000668	       240	sd.c	FUNCTION_4	IF_2
0x400068d	      0xe800000000	                          call 0x4000692	       245	sd.c	FUNCTION_4
